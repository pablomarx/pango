e******************************************************************

  Synopsis  [Architecture device for pgt180h (Device logic layout)
  
             Define IO bank]

  Author    []

********************************************************************************/


library work;
use pango_defs, pgt180h_defs;
use pgh_funcs,pgt180h_funcs;


/*******************************************************************************

  Author    []

  Abstract  [IOBs are placed at
  
                1:[2,2]
                0:[2,1]
  
             in the respective IOB tiles. 

             9 IO banks are defined, 2 on top and down, 4 on right, 1 on left. The banks
             are named bank_0 -> bank_8 in clockwise


                       bank_1  bank_2  bank_3  bank_4  
             
             bank_0                                      bank_5
             
             
                                                        
                                                         bank_6
                                                         
                                                         
                                                        
                                                         bank_7
                                                         
                                                         
                                                         
                                                         bank_8
                                                         
                                                         

                       bank_12 bank_11 bank_10 bank_9  
             

             Note, there is no IO bank in Pango. This is just for the sake of testing IO
             banking data model
            ]

  Revision History:

********************************************************************************/
structure arch_nl define_io_bank of devPGT180H
{
    // Tile and site index variable
    unsigned int tx, ty, sx, sy;
    &device p0ref, p1ref, p2ref, p3ref;
    
    // Define the tile index
    const unsigned int bank_n_y    = 163;
    const unsigned int bank_s_y    = 0;
    
    const unsigned int bank_w_x    = 0;
    const unsigned int bank_e_x    = 137;  
    
    unsigned int tile_1_sx;
    unsigned int tile_3_sx;
    
    unsigned int tile_0_sy;
    unsigned int tile_1_sy;
    unsigned int tile_2_sy;
    unsigned int tile_3_sy;
    unsigned int tile_4_sy;
    unsigned int tile_6_sy;
    unsigned int tile_7_sy;
    unsigned int tile_8_sy;
    unsigned int tile_9_sy;
 
    //==================================//
    //            bank_0                //
    //==================================//
   const unsigned int bank_0_y0[]  = {153,150,147,144,141,138,135,132,129,126,123}   ;  //  {153,150,147,144,141,138,135,132,129,126,123} IOB_A/B first
   const unsigned int bank_0_y1[]  = {152,149,146,142,139,136,133,131,128,125}       ;  //  {152,149,146,142,139,136,133,131,128,125} IOB_LA/LB first
   device group bank_0 /*pragma PAP_ARC_GROUP_TYPE="IO_BANK" */ ; // pragma PAP_ARC_COLOR="191:0:191"
   
   sx = bank_w_x * TILE_NUM_SITE_X;    
  
   foreach ty ( bank_0_y0 )
   {
       sy =       ty * TILE_NUM_SITE_Y;
       bank_0 += { <device IOB_A  @[sx+2,       sy+1]>, <device IOB_B  @[sx+2,       sy+2]>};
   }
  
  
   foreach ty ( bank_0_y1 )
   {
       sy =       ty * TILE_NUM_SITE_Y;
       bank_0 += { <device IOB_LA @[sx+2,       sy+1]>, <device IOB_LB @[sx+2,       sy+2]>};
   } 
   
   
   bank_0 += { <device IOB_LB @[2,464]>};  
 
    
    //==================================//
    //            bank_1                //
    //==================================//        
    const unsigned int bank_1_x0[] = {1,10,19,28};    // {1,10,19,28};  IOB_A/B   first
    const unsigned int bank_1_x1[] = {6,15,24};       // {6,15,24};  IOB_LA/LB first    
    
    device group bank_1  /*pragma PAP_ARC_GROUP_TYPE="IO_BANK" */ ; // pragma PAP_ARC_COLOR="191:0:0"
    
    foreach tx ( bank_1_x0 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_n_y * TILE_NUM_SITE_Y;
    
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
    
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_1 += { <device IOB_A  @[sx+2,       sy+1]>, <device IOB_B  @[sx+2,       sy+2]>,
                    <device IOB_LA @[tile_1_sx+2,sy+1]>, <device IOB_LB @[tile_1_sx+2,sy+2]>,
                    <device IOB_A  @[tile_3_sx+2,sy+1]>, <device IOB_B  @[tile_3_sx+2,sy+2]>};
    
    }
    
    foreach tx ( bank_1_x1 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_n_y * TILE_NUM_SITE_Y;
    
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
    
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_1 += { <device IOB_LA @[sx+2,       sy+1]>, <device IOB_LB @[sx+2,       sy+2]>,
                    <device IOB_A  @[tile_1_sx+2,sy+1]>, <device IOB_B  @[tile_1_sx+2,sy+2]>,
                    <device IOB_LA @[tile_3_sx+2,sy+1]>, <device IOB_LB @[tile_3_sx+2,sy+2]>};
    
    }  
    
    //==================================//
    //            bank_12                //
    //==================================//
    
    const unsigned int bank_12_x0[] = {10,19,28};    // {10,19,28};  IOB_A/B   first
    const unsigned int bank_12_x1[] = {15,24};       // {15,24   };  IOB_LA/LB first 
    device group bank_12 /*pragma PAP_ARC_GROUP_TYPE="IO_BANK" */ ; // pragma PAP_ARC_COLOR="191:191:0"
    
    foreach tx ( bank_12_x0 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_s_y * TILE_NUM_SITE_Y;
        
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
        
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_12 += { <device IOB_A  @[sx+2,       sy+1]>, <device IOB_B  @[sx+2,       sy+2]>,
                    <device IOB_LA @[tile_1_sx+2,sy+1]>, <device IOB_LB @[tile_1_sx+2,sy+2]>,
                    <device IOB_A  @[tile_3_sx+2,sy+1]>, <device IOB_B  @[tile_3_sx+2,sy+2]>};
    }
    
    foreach tx ( bank_12_x1 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_s_y * TILE_NUM_SITE_Y;
        
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
        
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_12 += { <device IOB_LA @[sx+2,       sy+1]>, <device IOB_LB @[sx+2,       sy+2]>,
                    <device IOB_A  @[tile_1_sx+2,sy+1]>, <device IOB_B  @[tile_1_sx+2,sy+2]>,
                    <device IOB_LA @[tile_3_sx+2,sy+1]>, <device IOB_LB @[tile_3_sx+2,sy+2]>};
    }    



    
    //==================================//
    //            bank_2                //
    //==================================//        
    const unsigned int bank_2_11_x0[] = {37,46,55,64};       // {37,46,55,64};  IOB_A/B   first
    const unsigned int bank_2_11_x1[] = {33,42,51,60};       // {33,42,51,60};  IOB_LA/LB first    
    
    device group bank_2  /*pragma PAP_ARC_GROUP_TYPE="IO_BANK" */ ; // pragma PAP_ARC_COLOR="0:191:191"
    
    foreach tx ( bank_2_11_x0 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_n_y * TILE_NUM_SITE_Y;
    
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
    
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_2 += { <device IOB_A  @[sx+2,       sy+1]>, <device IOB_B  @[sx+2,       sy+2]>,
                    <device IOB_LA @[tile_1_sx+2,sy+1]>, <device IOB_LB @[tile_1_sx+2,sy+2]>,
                    <device IOB_A  @[tile_3_sx+2,sy+1]>, <device IOB_B  @[tile_3_sx+2,sy+2]>};
    
    }
    
    foreach tx ( bank_2_11_x1 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_n_y * TILE_NUM_SITE_Y;
    
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
    
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_2 += { <device IOB_LA @[sx+2,       sy+1]>, <device IOB_LB @[sx+2,       sy+2]>,
                    <device IOB_A  @[tile_1_sx+2,sy+1]>, <device IOB_B  @[tile_1_sx+2,sy+2]>,
                    <device IOB_LA @[tile_3_sx+2,sy+1]>, <device IOB_LB @[tile_3_sx+2,sy+2]>};
    
    }      
    
    //==================================//
    //            bank_11               //
    //==================================//        
   
    device group bank_11  /*pragma PAP_ARC_GROUP_TYPE="IO_BANK" */ ; // pragma PAP_ARC_COLOR="0:191:0"   
    foreach tx ( bank_2_11_x0 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_s_y * TILE_NUM_SITE_Y;
    
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
    
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_11 += { <device IOB_A  @[sx+2,       sy+1]>, <device IOB_B  @[sx+2,       sy+2]>,
                     <device IOB_LA @[tile_1_sx+2,sy+1]>, <device IOB_LB @[tile_1_sx+2,sy+2]>,
                     <device IOB_A  @[tile_3_sx+2,sy+1]>, <device IOB_B  @[tile_3_sx+2,sy+2]>};
    
    }
    
    foreach tx ( bank_2_11_x1 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_s_y * TILE_NUM_SITE_Y;
    
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
    
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_11 += { <device IOB_LA @[sx+2,       sy+1]>, <device IOB_LB @[sx+2,       sy+2]>,
                     <device IOB_A  @[tile_1_sx+2,sy+1]>, <device IOB_B  @[tile_1_sx+2,sy+2]>,
                     <device IOB_LA @[tile_3_sx+2,sy+1]>, <device IOB_LB @[tile_3_sx+2,sy+2]>};
    
    }        
    
    //==================================//
    //            bank_3                //
    //==================================//
    const unsigned int bank_3_10_x0[] = {   74,83,92,101};   // {  74,83,92,101}; IOB_A/B   first
    const unsigned int bank_3_10_x1[] = {70,79,88,97};   // {70,79,88,97}; IOB_LA/LB first
    
    device group bank_3 /*pragma PAP_ARC_GROUP_TYPE="IO_BANK" */ ; // pragma PAP_ARC_COLOR="0:191:255"   
    foreach tx ( bank_3_10_x0 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_n_y * TILE_NUM_SITE_Y;
        
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
    
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_3 += { <device IOB_A  @[sx+2,       sy+1]>, <device IOB_B  @[sx+2,       sy+2]>,
                    <device IOB_LA @[tile_1_sx+2,sy+1]>, <device IOB_LB @[tile_1_sx+2,sy+2]>,
                    <device IOB_A  @[tile_3_sx+2,sy+1]>, <device IOB_B  @[tile_3_sx+2,sy+2]> };
    }
    
    foreach tx ( bank_3_10_x1 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_n_y * TILE_NUM_SITE_Y;
        
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
    
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_3 += { <device IOB_LA @[sx+2,       sy+1]>, <device IOB_LB @[sx+2,       sy+2]>,
                    <device IOB_A  @[tile_1_sx+2,sy+1]>, <device IOB_B  @[tile_1_sx+2,sy+2]>,
                    <device IOB_LA @[tile_3_sx+2,sy+1]>, <device IOB_LB @[tile_3_sx+2,sy+2]> };
    }
    //==================================//
    //            bank_10               //
    //==================================//
    device group bank_10 /*pragma PAP_ARC_GROUP_TYPE="IO_BANK" */ ; // pragma PAP_ARC_COLOR="0:255:191"
    
    foreach tx ( bank_3_10_x0 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_s_y * TILE_NUM_SITE_Y;
    
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
    
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_10 += { <device IOB_A  @[sx+2,       sy+1]>, <device IOB_B  @[sx+2,       sy+2]>,
                     <device IOB_LA @[tile_1_sx+2,sy+1]>, <device IOB_LB @[tile_1_sx+2,sy+2]>,
                     <device IOB_A  @[tile_3_sx+2,sy+1]>, <device IOB_B  @[tile_3_sx+2,sy+2]> };
    }
    
    foreach tx ( bank_3_10_x1 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_s_y * TILE_NUM_SITE_Y;
    
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
    
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_10 += { <device IOB_LA @[sx+2,       sy+1]>, <device IOB_LB @[sx+2,       sy+2]>,
                     <device IOB_A  @[tile_1_sx+2,sy+1]>, <device IOB_B  @[tile_1_sx+2,sy+2]>,
                     <device IOB_LA @[tile_3_sx+2,sy+1]>, <device IOB_LB @[tile_3_sx+2,sy+2]> };
    }
    
    //==================================//
    //            bank_4                //
    //==================================//
    const unsigned int bank_4_9_x0[] = {    110,119,128};   // {    110,119,128}; IOB_A/B   first
    const unsigned int bank_4_9_x1[] = {106,115,124,133};   // {106,115,124,133}; IOB_LA/LB first
    
    device group bank_4 /*pragma PAP_ARC_GROUP_TYPE="IO_BANK" */ ; // pragma PAP_ARC_COLOR="255:191:0"   
    foreach tx ( bank_4_9_x0 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_n_y * TILE_NUM_SITE_Y;
        
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
    
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_4 += { <device IOB_A  @[sx+2,       sy+1]>, <device IOB_B  @[sx+2,       sy+2]>,
                    <device IOB_LA @[tile_1_sx+2,sy+1]>, <device IOB_LB @[tile_1_sx+2,sy+2]>,
                    <device IOB_A  @[tile_3_sx+2,sy+1]>, <device IOB_B  @[tile_3_sx+2,sy+2]> };
    }
    
    foreach tx ( bank_4_9_x1 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_n_y * TILE_NUM_SITE_Y;
        
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
    
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_4 += { <device IOB_LA @[sx+2,       sy+1]>, <device IOB_LB @[sx+2,       sy+2]>,
                    <device IOB_A  @[tile_1_sx+2,sy+1]>, <device IOB_B  @[tile_1_sx+2,sy+2]>,
                    <device IOB_LA @[tile_3_sx+2,sy+1]>, <device IOB_LB @[tile_3_sx+2,sy+2]> };
    }
    //==================================//
    //            bank_9                //
    //==================================//
    device group bank_9 /*pragma PAP_ARC_GROUP_TYPE="IO_BANK" */ ; // pragma PAP_ARC_COLOR="255:0:191"
    
    foreach tx ( bank_4_9_x0 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_s_y * TILE_NUM_SITE_Y;
    
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
    
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_9 += { <device IOB_A  @[sx+2,       sy+1]>, <device IOB_B  @[sx+2,       sy+2]>,
                    <device IOB_LA @[tile_1_sx+2,sy+1]>, <device IOB_LB @[tile_1_sx+2,sy+2]>,
                    <device IOB_A  @[tile_3_sx+2,sy+1]>, <device IOB_B  @[tile_3_sx+2,sy+2]> };
    }
    
    foreach tx ( bank_4_9_x1 )
    {
        sx =       tx * TILE_NUM_SITE_X;
        sy = bank_s_y * TILE_NUM_SITE_Y;
    
        tile_1_sx = (tx + 1)* TILE_NUM_SITE_X;
        tile_3_sx = (tx + 3)* TILE_NUM_SITE_X;
    
        // Each 4 tiles as a block, which include 3 io-pairs,in tile 0,1,3
        bank_9 += { <device IOB_LA @[sx+2,       sy+1]>, <device IOB_LB @[sx+2,       sy+2]>,
                    <device IOB_A  @[tile_1_sx+2,sy+1]>, <device IOB_B  @[tile_1_sx+2,sy+2]>,
                    <device IOB_LA @[tile_3_sx+2,sy+1]>, <device IOB_LB @[tile_3_sx+2,sy+2]> };
    }    

   
    //==================================//
    //            bank_5                //
    //==================================//
    device group bank_5 /*pragma PAP_ARC_GROUP_TYPE="IO_BANK" */ ; // pragma PAP_ARC_COLOR="255:191:191"   
    
    sx = bank_e_x * TILE_NUM_SITE_X;
    // 154~162 DQS12
    tile_1_sy = 162 * TILE_NUM_SITE_Y;
    tile_2_sy = 160 * TILE_NUM_SITE_Y; 
    tile_4_sy = 159 * TILE_NUM_SITE_Y;
    tile_6_sy = 157 * TILE_NUM_SITE_Y;
    tile_7_sy = 156 * TILE_NUM_SITE_Y;
    tile_9_sy = 154 * TILE_NUM_SITE_Y;
    
    bank_5 += { <device IOB_A  @[sx+2,tile_1_sy+1]>, <device IOB_B  @[sx+2,tile_1_sy+2]>,
                <device IOB_LA @[sx+2,tile_2_sy+1]>, <device IOB_LB @[sx+2,tile_2_sy+2]>,
                <device IOB_A  @[sx+2,tile_4_sy+1]>, <device IOB_B  @[sx+2,tile_4_sy+2]>,
                <device IOB_LA @[sx+2,tile_6_sy+1]>, <device IOB_LB @[sx+2,tile_6_sy+2]>,
                <device IOB_A  @[sx+2,tile_7_sy+1]>, <device IOB_B  @[sx+2,tile_7_sy+2]>,
                <device IOB_LA @[sx+2,tile_9_sy+1]>, <device IOB_LB @[sx+2,tile_9_sy+2]> };
                
    
    const unsigned int bank_5_y0[]  = {153,132}   ;     // {[153:144, 132:123 -:10]}; // {153,132} IOB_A/B   first
    const unsigned int bank_5_y1[]  = {142    }   ;     // {[142:133 -:10]};          // {142} IOB_LA/LB first
              
    
    foreach ty ( bank_5_y0 )
    {
        sx = bank_e_x * TILE_NUM_SITE_X;
        sy =       ty * TILE_NUM_SITE_Y;
        
        tile_1_sy = (ty-1) * TILE_NUM_SITE_Y;
        tile_3_sy = (ty-3) * TILE_NUM_SITE_Y;
        tile_4_sy = (ty-4) * TILE_NUM_SITE_Y;
        tile_6_sy = (ty-6) * TILE_NUM_SITE_Y;
        tile_7_sy = (ty-7) * TILE_NUM_SITE_Y;
        tile_9_sy = (ty-9) * TILE_NUM_SITE_Y; 
    
        bank_5 += { <device IOB_A  @[sx+2,       sy+1]>, <device IOB_B  @[sx+2,       sy+2]>,
                    <device IOB_LA @[sx+2,tile_1_sy+1]>, <device IOB_LB @[sx+2,tile_1_sy+2]>,
                    <device IOB_A  @[sx+2,tile_3_sy+1]>, <device IOB_B  @[sx+2,tile_3_sy+2]>,
                    <device IOB_LA @[sx+2,tile_4_sy+1]>, <device IOB_LB @[sx+2,tile_4_sy+2]>,
                    <device IOB_A  @[sx+2,tile_6_sy+1]>, <device IOB_B  @[sx+2,tile_6_sy+2]>,
                    <device IOB_LA @[sx+2,tile_7_sy+1]>, <device IOB_LB @[sx+2,tile_7_sy+2]>,
                    <device IOB_A  @[sx+2,tile_9_sy+1]>, <device IOB_B  @[sx+2,tile_9_sy+2]> };
    }
    
    foreach ty ( bank_5_y1 )
    {
        sx = bank_e_x * TILE_NUM_SITE_X;
        sy =       ty * TILE_NUM_SITE_Y;
        
        tile_1_sy = (ty-1) * TILE_NUM_SITE_Y;
        tile_3_sy = (ty-3) * TILE_NUM_SITE_Y;
        tile_4_sy = (ty-4) * TILE_NUM_SITE_Y;
        tile_6_sy = (ty-6) * TILE_NUM_SITE_Y;
        tile_7_sy = (ty-7) * TILE_NUM_SITE_Y;
        tile_9_sy = (ty-9) * TILE_NUM_SITE_Y;
    
        bank_5 += { <device IOB_LA @[sx+2,       sy+1]>, <device IOB_LB @[sx+2,       sy+2]>,
                    <device IOB_A  @[sx+2,tile_1_sy+1]>, <device IOB_B  @[sx+2,tile_1_sy+2]>,
                    <device IOB_LA @[sx+2,tile_3_sy+1]>, <device IOB_LB @[sx+2,tile_3_sy+2]>,
                    <device IOB_A  @[sx+2,tile_4_sy+1]>, <device IOB_B  @[sx+2,tile_4_sy+2]>,
                    <device IOB_LA @[sx+2,tile_6_sy+1]>, <device IOB_LB @[sx+2,tile_6_sy+2]>,
                    <device IOB_A  @[sx+2,tile_7_sy+1]>, <device IOB_B  @[sx+2,tile_7_sy+2]>,
                    <device IOB_LA @[sx+2,tile_9_sy+1]>, <device IOB_LB @[sx+2,tile_9_sy+2]> };
    }    
    
    //==================================//
    //            bank_6                //
    //==================================//
    const unsigned int bank_6_y0[]  = {    112,91};  // {[         112:103, 91:82 -:10]}; // {    112,91} IOB_A/B   first
    const unsigned int bank_6_y1[]  = {122,101}   ;  // {[122:113, 101:92         -:10]}; // {122,101   } IOB_LA/LB first    
    
    device group bank_6 /*pragma PAP_ARC_GROUP_TYPE="IO_BANK" */ ; // pragma PAP_ARC_COLOR="191:255:191"
    
    foreach ty ( bank_6_y0 )
    {
        sx = bank_e_x * TILE_NUM_SITE_X;
        sy =       ty * TILE_NUM_SITE_Y;
    
        tile_1_sy = (ty-1) * TILE_NUM_SITE_Y;
        tile_3_sy = (ty-3) * TILE_NUM_SITE_Y;
        tile_4_sy = (ty-4) * TILE_NUM_SITE_Y;
        tile_6_sy = (ty-6) * TILE_NUM_SITE_Y;
        tile_7_sy = (ty-7) * TILE_NUM_SITE_Y;
        tile_9_sy = (ty-9) * TILE_NUM_SITE_Y;
    
        bank_6 += { <device IOB_A  @[sx+2,       sy+1]>, <device IOB_B  @[sx+2,       sy+2]>,
                    <device IOB_LA @[sx+2,tile_1_sy+1]>, <device IOB_LB @[sx+2,tile_1_sy+2]>,
                    <device IOB_A  @[sx+2,tile_3_sy+1]>, <device IOB_B  @[sx+2,tile_3_sy+2]>,
                    <device IOB_LA @[sx+2,tile_4_sy+1]>, <device IOB_LB @[sx+2,tile_4_sy+2]>,
                    <device IOB_A  @[sx+2,tile_6_sy+1]>, <device IOB_B  @[sx+2,tile_6_sy+2]>,
                    <device IOB_LA @[sx+2,tile_7_sy+1]>, <device IOB_LB @[sx+2,tile_7_sy+2]>,
                    <device IOB_A  @[sx+2,tile_9_sy+1]>, <device IOB_B  @[sx+2,tile_9_sy+2]> };
    }
    
    foreach ty ( bank_6_y1 )
    {
        sx = bank_e_x * TILE_NUM_SITE_X;
        sy =       ty * TILE_NUM_SITE_Y;
    
        tile_1_sy = (ty-1) * TILE_NUM_SITE_Y;
        tile_3_sy = (ty-3) * TILE_NUM_SITE_Y;
        tile_4_sy = (ty-4) * TILE_NUM_SITE_Y;
        tile_6_sy = (ty-6) * TILE_NUM_SITE_Y;
        tile_7_sy = (ty-7) * TILE_NUM_SITE_Y;
        tile_9_sy = (ty-9) * TILE_NUM_SITE_Y;
    
        bank_6 += { <device IOB_LA @[sx+2,       sy+1]>, <device IOB_LB @[sx+2,       sy+2]>,
                    <device IOB_A  @[sx+2,tile_1_sy+1]>, <device IOB_B  @[sx+2,tile_1_sy+2]>,
                    <device IOB_LA @[sx+2,tile_3_sy+1]>, <device IOB_LB @[sx+2,tile_3_sy+2]>,
                    <device IOB_A  @[sx+2,tile_4_sy+1]>, <device IOB_B  @[sx+2,tile_4_sy+2]>,
                    <device IOB_LA @[sx+2,tile_6_sy+1]>, <device IOB_LB @[sx+2,tile_6_sy+2]>,
                    <device IOB_A  @[sx+2,tile_7_sy+1]>, <device IOB_B  @[sx+2,tile_7_sy+2]>,
                    <device IOB_LA @[sx+2,tile_9_sy+1]>, <device IOB_LB @[sx+2,tile_9_sy+2]> };
    }    
    
    
    
    //==================================//
    //            bank_7                //
    //==================================//
    const unsigned int bank_7_y0[]  = {    71, 50};  // {[      71:62, 50:41 -:10]}; // {   71, 50} IOB_A/B   first
    const unsigned int bank_7_y1[]  = {81, 60}   ;  // {[81:72, 60:51        -:10]}; // {81, 60   } IOB_LA/LB first    
    
    device group bank_7 /*pragma PAP_ARC_GROUP_TYPE="IO_BANK" */ ; // pragma PAP_ARC_COLOR="0:255:191"    
  
    foreach ty ( bank_7_y0 )
    {
        sx = bank_e_x * TILE_NUM_SITE_X;
        sy =       ty * TILE_NUM_SITE_Y;
    
        tile_1_sy = (ty-1) * TILE_NUM_SITE_Y;
        tile_3_sy = (ty-3) * TILE_NUM_SITE_Y;
        tile_4_sy = (ty-4) * TILE_NUM_SITE_Y;
        tile_6_sy = (ty-6) * TILE_NUM_SITE_Y;
        tile_7_sy = (ty-7) * TILE_NUM_SITE_Y;
        tile_9_sy = (ty-9) * TILE_NUM_SITE_Y;
    
        bank_7 += { <device IOB_A  @[sx+2,       sy+1]>, <device IOB_B  @[sx+2,       sy+2]>,
                    <device IOB_LA @[sx+2,tile_1_sy+1]>, <device IOB_LB @[sx+2,tile_1_sy+2]>,
                    <device IOB_A  @[sx+2,tile_3_sy+1]>, <device IOB_B  @[sx+2,tile_3_sy+2]>,
                    <device IOB_LA @[sx+2,tile_4_sy+1]>, <device IOB_LB @[sx+2,tile_4_sy+2]>,
                    <device IOB_A  @[sx+2,tile_6_sy+1]>, <device IOB_B  @[sx+2,tile_6_sy+2]>,
                    <device IOB_LA @[sx+2,tile_7_sy+1]>, <device IOB_LB @[sx+2,tile_7_sy+2]>,
                    <device IOB_A  @[sx+2,tile_9_sy+1]>, <device IOB_B  @[sx+2,tile_9_sy+2]> };
    }    
    
    foreach ty ( bank_7_y1 )
    {
        sx = bank_e_x * TILE_NUM_SITE_X;
        sy =       ty * TILE_NUM_SITE_Y;
    
        tile_1_sy = (ty-1) * TILE_NUM_SITE_Y;
        tile_3_sy = (ty-3) * TILE_NUM_SITE_Y;
        tile_4_sy = (ty-4) * TILE_NUM_SITE_Y;
        tile_6_sy = (ty-6) * TILE_NUM_SITE_Y;
        tile_7_sy = (ty-7) * TILE_NUM_SITE_Y;
        tile_9_sy = (ty-9) * TILE_NUM_SITE_Y;
    
        bank_7 += { <device IOB_LA @[sx+2,       sy+1]>, <device IOB_LB @[sx+2,       sy+2]>,
                    <device IOB_A  @[sx+2,tile_1_sy+1]>, <device IOB_B  @[sx+2,tile_1_sy+2]>,
                    <device IOB_LA @[sx+2,tile_3_sy+1]>, <device IOB_LB @[sx+2,tile_3_sy+2]>,
                    <device IOB_A  @[sx+2,tile_4_sy+1]>, <device IOB_B  @[sx+2,tile_4_sy+2]>,
                    <device IOB_LA @[sx+2,tile_6_sy+1]>, <device IOB_LB @[sx+2,tile_6_sy+2]>,
                    <device IOB_A  @[sx+2,tile_7_sy+1]>, <device IOB_B  @[sx+2,tile_7_sy+2]>,
                    <device IOB_LA @[sx+2,tile_9_sy+1]>, <device IOB_LB @[sx+2,tile_9_sy+2]> };
    }     
    
    
    //==================================//
    //            bank_8                //
    //==================================//
    const unsigned int bank_8_y0[]  = {30};        // {[40:21, 19:10 -:10]}; // {40,30,19} IOB_A/B   first
    const unsigned int bank_8_y1[]  = {40,19}   ;  // {[40:21, 19:10 -:10]}; // {40,30,19} IOB_LA/LB first   
    
    device group bank_8 /*pragma PAP_ARC_GROUP_TYPE="IO_BANK" */ ; // pragma PAP_ARC_COLOR="191:191:255"
    
    foreach ty ( bank_8_y0 )
    {
        sx = bank_e_x * TILE_NUM_SITE_X;
        sy =       ty * TILE_NUM_SITE_Y;
    
        tile_1_sy = (ty-1) * TILE_NUM_SITE_Y;
        tile_3_sy = (ty-3) * TILE_NUM_SITE_Y;
        tile_4_sy = (ty-4) * TILE_NUM_SITE_Y;
        tile_6_sy = (ty-6) * TILE_NUM_SITE_Y;
        tile_7_sy = (ty-7) * TILE_NUM_SITE_Y;
        tile_9_sy = (ty-9) * TILE_NUM_SITE_Y;
    
        bank_8 += { <device IOB_A  @[sx+2,       sy+1]>, <device IOB_B  @[sx+2,       sy+2]>,
                    <device IOB_LA @[sx+2,tile_1_sy+1]>, <device IOB_LB @[sx+2,tile_1_sy+2]>,
                    <device IOB_A  @[sx+2,tile_3_sy+1]>, <device IOB_B  @[sx+2,tile_3_sy+2]>,
                    <device IOB_LA @[sx+2,tile_4_sy+1]>, <device IOB_LB @[sx+2,tile_4_sy+2]>,
                    <device IOB_A  @[sx+2,tile_6_sy+1]>, <device IOB_B  @[sx+2,tile_6_sy+2]>,
                    <device IOB_LA @[sx+2,tile_7_sy+1]>, <device IOB_LB @[sx+2,tile_7_sy+2]>,
                    <device IOB_A  @[sx+2,tile_9_sy+1]>, <device IOB_B  @[sx+2,tile_9_sy+2]> };
    }    
    
    foreach ty ( bank_8_y1 )
    {
        sx = bank_e_x * TILE_NUM_SITE_X;
        sy =       ty * TILE_NUM_SITE_Y;
    
        tile_1_sy = (ty-1) * TILE_NUM_SITE_Y;
        tile_3_sy = (ty-3) * TILE_NUM_SITE_Y;
        tile_4_sy = (ty-4) * TILE_NUM_SITE_Y;
        tile_6_sy = (ty-6) * TILE_NUM_SITE_Y;
        tile_7_sy = (ty-7) * TILE_NUM_SITE_Y;
        tile_9_sy = (ty-9) * TILE_NUM_SITE_Y;
    
        bank_8 += { <device IOB_LA @[sx+2,       sy+1]>, <device IOB_LB @[sx+2,       sy+2]>,
                    <device IOB_A  @[sx+2,tile_1_sy+1]>, <device IOB_B  @[sx+2,tile_1_sy+2]>,
                    <device IOB_LA @[sx+2,tile_3_sy+1]>, <device IOB_LB @[sx+2,tile_3_sy+2]>,
                    <device IOB_A  @[sx+2,tile_4_sy+1]>, <device IOB_B  @[sx+2,tile_4_sy+2]>,
                    <device IOB_LA @[sx+2,tile_6_sy+1]>, <device IOB_LB @[sx+2,tile_6_sy+2]>,
                    <device IOB_A  @[sx+2,tile_7_sy+1]>, <device IOB_B  @[sx+2,tile_7_sy+2]>,
                    <device IOB_LA @[sx+2,tile_9_sy+1]>, <device IOB_LB @[sx+2,tile_9_sy+2]> };
    } 
    
    
    tile_0_sy = 9 * TILE_NUM_SITE_Y;
    tile_1_sy = 8 * TILE_NUM_SITE_Y;
    tile_3_sy = 6 * TILE_NUM_SITE_Y;
    tile_4_sy = 5 * TILE_NUM_SITE_Y;
    tile_6_sy = 3 * TILE_NUM_SITE_Y;
    tile_7_sy = 2 * TILE_NUM_SITE_Y;
    
    bank_8 += { <device IOB_A  @[sx+2,tile_0_sy+1]>, <device IOB_B  @[sx+2,tile_0_sy+2]>,
                <device IOB_LA @[sx+2,tile_1_sy+1]>, <device IOB_LB @[sx+2,tile_1_sy+2]>,
                <device IOB_A  @[sx+2,tile_3_sy+1]>, <device IOB_B  @[sx+2,tile_3_sy+2]>,
                <device IOB_LA @[sx+2,tile_4_sy+1]>, <device IOB_LB @[sx+2,tile_4_sy+2]>,
                <device IOB_A  @[sx+2,tile_6_sy+1]>, <device IOB_B  @[sx+2,tile_6_sy+2]>,
                <device IOB_LA @[sx+2,tile_7_sy+1]>, <device IOB_LB @[sx+2,tile_7_sy+2]> };

}; // end of structure arch_nl define_io_bank of devVP100
