
USE pg30_defs;

/**Device***********************************************************************

  Device    [devPGT30G]

  Author    []

  Abstract  [The top-level grid of PGT30G]

  Revision History:

********************************************************************************/
architecture
device devPGT30G
{
    property
    (
        enum DEVICE_PACKAGES   PKG   = "BG256", // Default parameters
        enum DEVICE_SPEEDGRADE SPEED = "-6"
    );

}; // end of architecture device devPGT30G


library work;
use pango_defs, pg30_defs;

/*******************************************************************************

  Author    []

  Abstract  [Generate the logical grid for the entire architecture. Since the elaboration
             of an architecture starts from the architecture device, this body section 
             will be elaborated before all others. So, the entire site definition is done
             before all other actions]

  Revision History:

********************************************************************************/
structure arch_nl generate_grid of devPGT30G
{
    //
    // Define the logical grid sizes.
    //
    unsigned int MAX_X = NUM_TILE_X * TILE_NUM_SITE_X;
    unsigned int MAX_Y = NUM_TILE_Y * TILE_NUM_SITE_Y;

    // Generate the 2D grid
    generate ( MAX_X # MAX_Y ) of site stARCH
    { 
        // DEBUG
        // printf("***");
        // printf("*** Generating architectural grid (%d by %d).", MAX_X, MAX_Y);
        // printf("***");
    };

}; // end of structure arch_nl generate_grid


