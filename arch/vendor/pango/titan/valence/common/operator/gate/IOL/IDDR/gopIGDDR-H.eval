*******************************************************************

  Operator    [gopIGDDR]

  Abstract  []

  Revision History:

********************************************************************************/
gate
operator gopIGDDR
{
    parameter
    (
        string IN_MUX_SEL         = "DIN",       // "DIN"     : IN_FROM_PAD
                                                 // "DIN_CDR" : IN_PAD_FOR_CDR
        string LEFT_EN            = "TRUE", // if TRUE, it can be placed on left iol.
        bit    GRS_EN             = 1'b0,
        bit    LRS_EN             = 1'b1,
        bit    DPI_EN             = 1'b0,


        bit    CLK_INV            = 1'b0,
        bit    LRS_INV            = 1'b0
    );
    port
    (
        input   DPI_CTRL[1:0],
        input   DPI_STS_CLR,
        output  DPI_STS[1:0],

        input   SYSCLK /* pragma PAP_ARC_GOP_CTRL_PIN = "GCLK|RCLK"*/,
        input   RESET /* pragma PAP_ARC_GOP_CTRL_PIN = RST*/,
        input   SLIP,
        
        input   PADI,
        output  PADT,
        output  OUT,
        output  Q[1:0]
    );
};

implementation impl of gopIGDDR
{
    device devIGDDRIOL gate_igddriol
    parameter map
    (
        IN_MUX_SEL      => IN_MUX_SEL,
        GRS_EN       =>   GRS_EN,
        DPI_EN       =>   DPI_EN,
    
        IDDR_LRS_EN  =>   LRS_EN,
        CLK_I_INV    =>   CLK_INV,
        LRS_INV      =>   LRS_INV
    )
    
    port map 
    (
        RX_DATA[5:4] =>  Q,
        RX_DATA_DD   =>  OUT,
    
        DPI_CTRL     =>   DPI_CTRL,
        DPI_STS_CLR  =>   DPI_STS_CLR,
        DPI_STS      =>   DPI_STS,
    
        SYSCLK       =>   SYSCLK,
        LRS          =>   RESET,
        SLIP         =>   SLIP,
        TO           =>   PADT,
        
        DIN          =>   IN_MUX_SEL == "DIN"     ? PADI : 1'bx,
        DIN_CDR      =>   IN_MUX_SEL == "DIN_CDR" ? PADI : 1'bx
    );
};


