*****************************************************************

  Device    [PREGMUX_T]

  Author    [xiawei]

  Abstract  []

  Revision History:

********************************************************************************/
grid
device PREGMUX_T
{

    parameter
    (
        // These are the config parameters that are used to enable formal flow. They
        // should be present in the declaration only if a MACRO is set. In normal
        // implementation flow they should be turned off.
        // FIXME
        config string TEST_MODE         = "DISABLE",               // "DISABLE" "ENABLE"
        config bit    LOCALMODEN_N[9:0] = 10'b00_0000_0000
    );
    port
    (
        config input SC_TESTMODEN_N         = 1'b0               /*pragma PAP_CFG_BIT_NAME = "SC_TESTMODEN_N" */,
        config input SC_LOCALMODEN_N[9:0]   = 10'b00_0000_0000   /*pragma PAP_CFG_BIT_NAME = "SC_LOCALMODEN_N<9>, SC_LOCALMODEN_N<8>,SC_LOCALMODEN_N<7>,SC_LOCALMODEN_N<6>,SC_LOCALMODEN_N<5>,SC_LOCALMODEN_N<4>,SC_LOCALMODEN_N<3>,SC_LOCALMODEN_N<2>,SC_LOCALMODEN_N<1>,SC_LOCALMODEN_N<0>" */,
        config input SC_PRECLK_TB[29:0]     = 30'd0              /*pragma PAP_CFG_BIT_NAME = "SC_PRECLK_TB<29>, SC_PRECLK_TB<28>, SC_PRECLK_TB<27>, SC_PRECLK_TB<26>, SC_PRECLK_TB<25>, SC_PRECLK_TB<24>, SC_PRECLK_TB<23>, SC_PRECLK_TB<22>, SC_PRECLK_TB<21>, SC_PRECLK_TB<20>, SC_PRECLK_TB<19>, SC_PRECLK_TB<18>, SC_PRECLK_TB<17>, SC_PRECLK_TB<16>, SC_PRECLK_TB<15>, SC_PRECLK_TB<14>, SC_PRECLK_TB<13>, SC_PRECLK_TB<12>, SC_PRECLK_TB<11>, SC_PRECLK_TB<10>, SC_PRECLK_TB<9>, SC_PRECLK_TB<8>, SC_PRECLK_TB<7>, SC_PRECLK_TB<6>, SC_PRECLK_TB<5>, SC_PRECLK_TB<4>, SC_PRECLK_TB<3>, SC_PRECLK_TB<2>, SC_PRECLK_TB<1>, SC_PRECLK_TB<0>" */,
        config input SC_SEL_Q[9:0]          = 10'b00_0000_0000   /*pragma PAP_CFG_BIT_NAME = "SC_SEL_Q<9>, SC_SEL_Q<8>, SC_SEL_Q<7>, SC_SEL_Q<6>, SC_SEL_Q<5>, SC_SEL_Q<4>, SC_SEL_Q<3>, SC_SEL_Q<2>, SC_SEL_Q<1>, SC_SEL_Q<0>" */,

        // These are the config ports.
        // FIXME
        input     PLL3[4:0]        = 5'h1f,
        input     TX[3:0]          = 4'b1111,
        input     PCLK_0[1:0]      = 2'b11,
        input     GLOGEN_PREGMUX_T = 1'b1,
        input     RX[3:0]          = 4'b1111,
        output    CLKOUT[9:0],
        input     SIG_FR_CIM_PREGMUX_T[2:0] = 3'b111,
        input     PLL0[4:0]                 = 5'h1f,
        input     REFCLK2CORE               = 1'b1,
        input     CLKDIV_T1[3:0]            = 4'b1111,
        input     CLKDIV_T0[3:0]            = 4'b1111,
        input     PLL2[4:0]                 = 5'h1f,
        input     PLL1[4:0]                 = 5'h1f,
        input     PCLK_1[1:0]               = 2'b11             

    );

}// end of device PREGMUX_T

/*******************************************************************************

  Device    [PREGMUX_T]

  Author    []

  Abstract  [The structure netlist of PREGMUX_T is described in the similar fashion 
             as in HDL. In unit instantiation statement, the formal pin may be 
             connected to net which is declared explicitly. 
             
             In Valence, the connection can also be made from formal pin to other 
             pin or port, in which case Valence compiler shall create the net to 
             fulfil the connection. The built-in naming convention is kicked in 
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/
structure netlist of PREGMUX_T
{
    // Wires for input ports


   // Wires connecting to output ports
    routing
    {
       (
            RX[0] ,
            PLL0[0] ,
            PLL1[1] ,
            PLL1[4] ,
            PLL2[0] ,
            PLL3[4],
            PCLK_0[0] ,
            CLKDIV_T1[1]  -->  CLKOUT[0] ) = 150;

       (
            RX[0] ,
            TX[0] ,
            PLL0[0] ,
            PLL0[1] ,
            PLL1[3] ,
            PLL2[1] ,
            PLL3[3],
            PCLK_0[1] ,
            CLKDIV_T1[0],  
            REFCLK2CORE  -->  CLKOUT[1] ) = 150;
            
       (
            RX[1] ,
            RX[3] ,
            PLL0[2] ,
            PLL1[2] ,
            PLL2[2] ,
            PLL3[2],
            PCLK_1[0] ,
            CLKDIV_T0[3],
            CLKDIV_T1[3]  -->  CLKOUT[2] ) = 150;
            
       (
            TX[1] ,
            PLL0[3] ,
            PLL1[0] ,
            PLL2[3] ,
            PLL3[1] ,
            PCLK_1[1] ,
            CLKDIV_T0[2] ,
            CLKDIV_T1[0] ,
            REFCLK2CORE  -->  CLKOUT[3] ) = 150;

       (
            TX[2] ,
            TX[3] ,
            RX[2] ,
            PLL0[4] ,
            PLL1[0] ,
            PLL2[4] ,
            PLL3[0],
            CLKDIV_T0[0] ,
            CLKDIV_T0[1] ,
            CLKDIV_T0[3]  -->  CLKOUT[4] ) = 150;

       (
            TX[2] ,
            RX[2] ,
            PLL0[4] ,
            PLL1[0] ,
            PLL2[0] ,
            PLL2[4] ,
            PLL3[1],
            CLKDIV_T0[0] ,
            CLKDIV_T0[1]  -->  CLKOUT[5] ) = 150;
            
       (
            TX[1] ,
            PLL0[3] ,
            PLL1[0] ,
            PLL2[3] ,
            PLL3[0],
            PCLK_1[1] ,
            CLKDIV_T0[2] ,
            CLKDIV_T1[2]  -->  CLKOUT[6] ) = 150;

            
       (
            TX[3]   ,
            RX[1]   ,
            PLL0[2] ,
            PLL1[2] ,
            PLL2[2] ,
            PLL3[2] ,
            PCLK_1[0] ,
            CLKDIV_T0[3] ,
            CLKDIV_T1[3] --> CLKOUT[7] ) = 150;
            
       (
            TX[0]   ,
            TX[2]   ,
            PLL0[1] ,
            PLL1[3] ,
            PLL2[1] ,
            PLL3[3] ,
            PCLK_0[1] ,
            CLKDIV_T0[0] ,
            CLKDIV_T1[0] ,
            REFCLK2CORE  --> CLKOUT[8] ) = 150;
            
            
       (
            RX[0]   ,
            PLL0[0] ,
            PLL1[4] ,
            PLL2[0] ,
            PLL1[1] ,
            PLL3[4] ,
            PCLK_0[0] ,
            CLKDIV_T1[1] --> CLKOUT[9] ) = 150;

   }

   // Internal wires

}; // end of structure netlist of PREGMUX_T

/*******************************************************************************

  Device    [PREGMUX_T]

  Author    []

  Abstract  [Configure the configuration bits based on the value of config parameter]

  Revision History:

********************************************************************************/
configuration cfg of PREGMUX_T
{
   if (TEST_MODE == "DISABLE")
   {       
       if ( RX[0]        --> CLKOUT[0] ) 
       {
           SC_SEL_Q[4] := 1'b0;
           SC_PRECLK_TB[2:0] := 3'b001; 
       }
       
       if ( PLL0[0]      --> CLKOUT[0] ) 
       {
           SC_SEL_Q[4] := 1'b1;
           SC_PRECLK_TB[2:0] := 3'b001; 
       }
       
       if ( PLL1[1]      --> CLKOUT[0] ) 
       {
           SC_PRECLK_TB[2:0] := 3'b010; 
       }
       
       if ( PLL1[4]      --> CLKOUT[0] ) 
       {
           SC_PRECLK_TB[2:0] := 3'b011; 
       }
       
       if ( PLL2[0]      --> CLKOUT[0] ) 
       {
           SC_PRECLK_TB[2:0] := 3'b100; 
       }
       
       if ( PLL3[4]      --> CLKOUT[0] ) 
       {
           SC_PRECLK_TB[2:0] := 3'b101; 
       }
       
       if ( PCLK_0[0]    --> CLKOUT[0] ) 
       {
           SC_SEL_Q[5] := 1'b1;
           SC_PRECLK_TB[2:0] := 3'b110; 
       }
       
       if ( CLKDIV_T1[1] --> CLKOUT[0] ) 
       {
           SC_PRECLK_TB[2:0] := 3'b111; 
       }
       
                                                             
       if ( RX[0]        --> CLKOUT[1] ) 
       {
           SC_SEL_Q[4] := 1'b0;
           SC_PRECLK_TB[5:3] := 3'b001; 
       }
       
       if ( PLL0[0]      --> CLKOUT[1] ) 
       {
           SC_SEL_Q[4] := 1'b1;
           SC_PRECLK_TB[5:3] := 3'b001; 
       }
       
       if ( TX[0]        --> CLKOUT[1] ) 
       {
           SC_SEL_Q[3] := 1'b0;
           SC_PRECLK_TB[5:3] := 3'b010; 
       }
       
       if ( PLL0[1]      --> CLKOUT[1] ) 
       {
           SC_SEL_Q[3] := 1'b1;
           SC_PRECLK_TB[5:3] := 3'b010; 
       }
       
       if ( PLL1[3]      --> CLKOUT[1] ) 
       {
           SC_PRECLK_TB[5:3] := 3'b011; 
       }
       
       if ( PLL2[1]      --> CLKOUT[1] ) 
       {
           SC_PRECLK_TB[5:3] := 3'b100; 
       }
       
       if ( PLL3[3]      --> CLKOUT[1] ) 
       {
           SC_PRECLK_TB[5:3] := 3'b101; 
       }
       
       if ( PCLK_0[1]    --> CLKOUT[1] ) 
       {
           SC_PRECLK_TB[5:3] := 3'b110; 
       }
       
       if ( REFCLK2CORE  --> CLKOUT[1] ) 
       {
           SC_SEL_Q[6] := 1'b0;
           SC_PRECLK_TB[5:3] := 3'b111; 
       }
       
       if ( CLKDIV_T1[0] --> CLKOUT[1] ) 
       {
           SC_SEL_Q[6] := 1'b1;
           SC_PRECLK_TB[5:3] := 3'b111; 
       }
       
                                                             
       if ( RX[1]        --> CLKOUT[2] ) 
       {
           SC_SEL_Q[2] := 1'b0;
           SC_PRECLK_TB[8:6] := 3'b001; 
       }
       
       if ( PLL0[2]      --> CLKOUT[2] ) 
       {
           SC_SEL_Q[2] := 1'b1;
           SC_PRECLK_TB[8:6] := 3'b001; 
       }
       
       if ( PLL1[2]      --> CLKOUT[2] ) 
       {
           SC_PRECLK_TB[8:6] := 3'b010; 
       }
       
       if ( PLL2[2]      --> CLKOUT[2] ) 
       {
           SC_PRECLK_TB[8:6] := 3'b011; 
       }
       
       if ( PLL3[2]      --> CLKOUT[2] ) 
       {
           SC_PRECLK_TB[8:6] := 3'b100; 
       }
       
       if ( RX[3]        --> CLKOUT[2] ) 
       {
           SC_SEL_Q[8] := 1'b0;
           SC_PRECLK_TB[8:6] := 3'b101; 
       }
       
       if ( PCLK_1[0]    --> CLKOUT[2] ) 
       {
           SC_SEL_Q[8] := 1'b1;
           SC_PRECLK_TB[8:6] := 3'b101; 
       }
       
       if ( CLKDIV_T0[3] --> CLKOUT[2] ) 
       {
           SC_PRECLK_TB[8:6] := 3'b110; 
       }
       
       if ( CLKDIV_T1[3] --> CLKOUT[2] ) 
       {
           SC_PRECLK_TB[8:6] := 3'b111; 
       }
       
                                                             
       if ( TX[1]        --> CLKOUT[3] ) 
       {
           SC_SEL_Q[1] := 1'b0;
           SC_PRECLK_TB[11:9] := 3'b001; 
       }
       
       if ( PLL0[3]      --> CLKOUT[3] ) 
       {
           SC_SEL_Q[1] := 1'b1;
           SC_PRECLK_TB[11:9] := 3'b001; 
       }
       
       if ( PLL1[0]      --> CLKOUT[3] ) 
       {
           SC_PRECLK_TB[11:9] := 3'b010; 
       }
       
       if ( PLL2[3]      --> CLKOUT[3] ) 
       {
           SC_PRECLK_TB[11:9] := 3'b011; 
       }
       
       if ( PLL3[1]      --> CLKOUT[3] ) 
       {
           SC_PRECLK_TB[11:9] := 3'b100; 
       }
       
       if ( PCLK_1[1]    --> CLKOUT[3] ) 
       {
           SC_PRECLK_TB[11:9] := 3'b101; 
       }
       
       if ( CLKDIV_T0[2] --> CLKOUT[3] ) 
       {
           SC_PRECLK_TB[11:9] := 3'b110; 
       }
       
       if ( REFCLK2CORE  --> CLKOUT[3] ) 
       {
           SC_SEL_Q[6] := 1'b0;
           SC_PRECLK_TB[11:9] := 3'b111; 
       }
       
       if ( CLKDIV_T1[0] --> CLKOUT[3] ) 
       {
           SC_SEL_Q[6] := 1'b1;
           SC_PRECLK_TB[11:9] := 3'b111; 
       }
       
                                                             
       if ( RX[2]        --> CLKOUT[4] ) 
       {
           SC_SEL_Q[0] := 1'b0;
           SC_PRECLK_TB[14:12] := 3'b001; 
       }
       
       if ( PLL0[4]      --> CLKOUT[4] ) 
       {
           SC_SEL_Q[0] := 1'b1;
           SC_PRECLK_TB[14:12] := 3'b001; 
       }
       
       if ( PLL1[0]      --> CLKOUT[4] ) 
       {
           SC_PRECLK_TB[14:12] := 3'b010; 
       }
       
       if ( PLL2[4]      --> CLKOUT[4] ) 
       {
           SC_PRECLK_TB[14:12] := 3'b011; 
       }
       
       if ( PLL3[0]      --> CLKOUT[4] ) 
       {
           SC_PRECLK_TB[14:12] := 3'b100; 
       }
       
       if ( TX[2]        --> CLKOUT[4] ) 
       {
           SC_SEL_Q[9] := 1'b0;
           SC_PRECLK_TB[14:12] := 3'b101; 
       }
       
       if ( CLKDIV_T0[0] --> CLKOUT[4] ) 
       {
           SC_SEL_Q[9] := 1'b1;
           SC_PRECLK_TB[14:12] := 3'b101; 
       }
       
       if ( CLKDIV_T0[1] --> CLKOUT[4] ) 
       {
           SC_PRECLK_TB[14:12] := 3'b110; 
       }
       
       if ( TX[3]        --> CLKOUT[4] ) 
       {
           SC_SEL_Q[7] := 1'b0;
           SC_PRECLK_TB[14:12] := 3'b111; 
       }
       
       if ( CLKDIV_T0[3] --> CLKOUT[4] ) 
       {
           SC_SEL_Q[7] := 1'b1;
           SC_PRECLK_TB[14:12] := 3'b111; 
       }
       
                                                             
       if ( RX[2]        --> CLKOUT[5] ) 
       {
           SC_SEL_Q[0] := 1'b0;
           SC_PRECLK_TB[17:15] := 3'b001; 
       }
       
       if ( PLL0[4]      --> CLKOUT[5] ) 
       {
           SC_SEL_Q[0] := 1'b1;
           SC_PRECLK_TB[17:15] := 3'b001; 
       }
       
       if ( PLL1[0]      --> CLKOUT[5] ) 
       {
           SC_PRECLK_TB[17:15] := 3'b010; 
       }
       
       if ( PLL2[0]      --> CLKOUT[5] ) 
       {
           SC_PRECLK_TB[17:15] := 3'b011; 
       }
       
       if ( PLL2[4]      --> CLKOUT[5] ) 
       {
           SC_PRECLK_TB[17:15] := 3'b100; 
       }
       
       if ( PLL3[1]      --> CLKOUT[5] ) 
       {
           SC_PRECLK_TB[17:15] := 3'b101; 
       }
       
       if ( TX[2]        --> CLKOUT[5] ) 
       {
           SC_SEL_Q[9] := 1'b0;
           SC_PRECLK_TB[17:15] := 3'b110; 
       }
       
       if ( CLKDIV_T0[0] --> CLKOUT[5] ) 
       {
           SC_SEL_Q[9] := 1'b1;
           SC_PRECLK_TB[17:15] := 3'b110; 
       }
       
       if ( CLKDIV_T0[1] --> CLKOUT[5] ) 
       {
           SC_PRECLK_TB[17:15] := 3'b111; 
       }
       
                                                             
       if ( TX[1]        --> CLKOUT[6] ) 
       {
           SC_SEL_Q[1] := 1'b0;
           SC_PRECLK_TB[20:18] := 3'b001; 
       }
       
       if ( PLL0[3]      --> CLKOUT[6] ) 
       {
           SC_SEL_Q[1] := 1'b1;
           SC_PRECLK_TB[20:18] := 3'b001; 
       }
       
       if ( PLL1[0]      --> CLKOUT[6] ) 
       {
           SC_PRECLK_TB[20:18] := 3'b010; 
       }
       
       if ( PLL2[3]      --> CLKOUT[6] ) 
       {
           SC_PRECLK_TB[20:18] := 3'b011; 
       }
       
       if ( PLL3[0]      --> CLKOUT[6] ) 
       {
           SC_PRECLK_TB[20:18] := 3'b100; 
       }
       
       if ( PCLK_1[1]    --> CLKOUT[6] ) 
       {
           SC_PRECLK_TB[20:18] := 3'b101; 
       }
       
       if ( CLKDIV_T0[2] --> CLKOUT[6] ) 
       {
           SC_PRECLK_TB[20:18] := 3'b110; 
       }
       
       if ( CLKDIV_T1[2] --> CLKOUT[6] ) 
       {
           SC_PRECLK_TB[20:18] := 3'b111; 
       }
       
                                                             
       if ( RX[1]        --> CLKOUT[7] ) 
       {
           SC_SEL_Q[2] := 1'b0;
           SC_PRECLK_TB[23:21] := 3'b001; 
       }
       
       if ( PLL0[2]      --> CLKOUT[7] ) 
       {
           SC_SEL_Q[2] := 1'b1;
           SC_PRECLK_TB[23:21] := 3'b001; 
       }
       
       if ( PLL1[2]      --> CLKOUT[7] ) 
       {
           SC_PRECLK_TB[23:21] := 3'b010; 
       }
       
       if ( PLL2[2]      --> CLKOUT[7] ) 
       {
           SC_PRECLK_TB[23:21] := 3'b011; 
       }
       
       if ( PLL3[2]      --> CLKOUT[7] ) 
       {
           SC_PRECLK_TB[23:21] := 3'b100; 
       }
       
       if ( PCLK_1[0]    --> CLKOUT[7] ) 
       {
           SC_PRECLK_TB[23:21] := 3'b101; 
       }
       
       if ( TX[3]        --> CLKOUT[7] ) 
       {
           SC_SEL_Q[7] := 1'b0;
           SC_PRECLK_TB[23:21] := 3'b110; 
       }
       
       if ( CLKDIV_T0[3] --> CLKOUT[7] ) 
       {
           SC_SEL_Q[7] := 1'b1;
           SC_PRECLK_TB[23:21] := 3'b110; 
       }
       
       if ( CLKDIV_T1[3] --> CLKOUT[7] ) 
       {
           SC_PRECLK_TB[23:21] := 3'b111; 
       }
       
                                                             
       if ( TX[0]        --> CLKOUT[8] ) 
       {
           SC_SEL_Q[3] := 1'b0;
           SC_PRECLK_TB[26:24] := 3'b001; 
       }
       
       if ( PLL0[1]      --> CLKOUT[8] ) 
       {
           SC_SEL_Q[3] := 1'b1;
           SC_PRECLK_TB[26:24] := 3'b001; 
       }
       
       if ( PLL1[3]      --> CLKOUT[8] ) 
       {
           SC_PRECLK_TB[26:24] := 3'b010; 
       }
       
       if ( PLL2[1]      --> CLKOUT[8] ) 
       {
           SC_PRECLK_TB[26:24] := 3'b011; 
       }
       
       if ( PLL3[3]      --> CLKOUT[8] ) 
       {
           SC_PRECLK_TB[26:24] := 3'b100; 
       }
       
       if ( PCLK_0[1]    --> CLKOUT[8] ) 
       {
           SC_PRECLK_TB[26:24] := 3'b101; 
       }
       
       if ( TX[2]        --> CLKOUT[8] ) 
       {
           SC_SEL_Q[9] := 1'b0;
           SC_PRECLK_TB[26:24] := 3'b110; 
       }
       
       if ( CLKDIV_T0[0] --> CLKOUT[8] ) 
       {
           SC_SEL_Q[9] := 1'b1;
           SC_PRECLK_TB[26:24] := 3'b110; 
       }
       
       if ( REFCLK2CORE  --> CLKOUT[8] ) 
       {
           SC_SEL_Q[6] := 1'b0;
           SC_PRECLK_TB[26:24] := 3'b111; 
       }
       
       if ( CLKDIV_T1[0] --> CLKOUT[8] ) 
       {
           SC_SEL_Q[6] := 1'b1;
           SC_PRECLK_TB[26:24] := 3'b111; 
       }
       
                                                             
       if ( RX[0]        --> CLKOUT[9] ) 
       {
           SC_SEL_Q[4] := 1'b0;
           SC_PRECLK_TB[29:27] := 3'b001; 
       }
       
       if ( PLL0[0]      --> CLKOUT[9] ) 
       {
           SC_SEL_Q[4] := 1'b1;
           SC_PRECLK_TB[29:27] := 3'b001; 
       }
       
       if ( PLL1[4]      --> CLKOUT[9] ) 
       {
           SC_PRECLK_TB[29:27] := 3'b010; 
       }
       
       if ( PLL2[0]      --> CLKOUT[9] ) 
       {
           SC_PRECLK_TB[29:27] := 3'b011; 
       }
       
       if ( PLL1[1]      --> CLKOUT[9] ) 
       {
           SC_PRECLK_TB[29:27] := 3'b100; 
       }
       
       if ( PLL3[4]      --> CLKOUT[9] ) 
       {
           SC_PRECLK_TB[29:27] := 3'b101; 
       }
       
       if ( PCLK_0[0]    --> CLKOUT[9] ) 
       {
           SC_SEL_Q[5] := 1'b1;
           SC_PRECLK_TB[29:27] := 3'b110; 
       }
       
       if ( CLKDIV_T1[1] --> CLKOUT[9] ) 
       {
           SC_PRECLK_TB[29:27] := 3'b111; 
       }       
       SC_TESTMODEN_N := 1'b0;
                      
       
   }
   else // if (TEST_MODE == "ENABLE" )
   {
       SC_TESTMODEN_N  := 1'b1;
       SC_LOCALMODEN_N := LOCALMODEN_N;       
   }
    
}; // end of configuration cfg of PREGMUX_T


