*****************************************************************

  Device    [DELAYCODEMUX]

  Author    [clwang]

  Abstract  []

  Revision History:

********************************************************************************/
grid
device DELAYCODEMUX
{
    port
    (
        config input   SC_DLYCODE_SRC_SEL   = 1'b0        /*pragma PAP_CFG_BIT_NAME = "SC_DLYCODE_SRC_SEL" */,
               
               input   DLL_INDELAY_CNTL0[7:0] = 8'hff,
               input   DLL_INDELAY_CNTL1[7:0] = 8'hff,
               output  DLL_INDELAY_OUT[7:0]
    );
} // end of device DELAYCODEMUX

/*******************************************************************************

  Device    [DELAYCODEMUX]

  Author    [clwang]

  Abstract  [The structure netlist of DELAYCODEMUX is described in the similar fashion
             as in HDL. In unit instantiation statement, the formal pin may be
             connected to net which is declared explicitly.

             In Valence, the connection can also be made from formal pin to other
             pin or port, in which case Valence compiler shall create the net to
             fulfil the connection. The built-in naming convention is kicked in
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/

structure netlist of DELAYCODEMUX
{
    // Routing arc specification
    routing
    {
        (
            DLL_INDELAY_CNTL0[0] ,
            DLL_INDELAY_CNTL1[0] -->  DLL_INDELAY_OUT[0] ) = 150;
            
        (
            DLL_INDELAY_CNTL0[1] ,
            DLL_INDELAY_CNTL1[1] -->  DLL_INDELAY_OUT[1] ) = 150;
            
        (
            DLL_INDELAY_CNTL0[2] ,
            DLL_INDELAY_CNTL1[2] -->  DLL_INDELAY_OUT[2] ) = 150;                

        (
            DLL_INDELAY_CNTL0[3] ,
            DLL_INDELAY_CNTL1[3] -->  DLL_INDELAY_OUT[3] ) = 150;
            
        (
            DLL_INDELAY_CNTL0[4] ,
            DLL_INDELAY_CNTL1[4] -->  DLL_INDELAY_OUT[4] ) = 150;
            
        (
            DLL_INDELAY_CNTL0[5] ,
            DLL_INDELAY_CNTL1[5] -->  DLL_INDELAY_OUT[5] ) = 150;
            
        (
            DLL_INDELAY_CNTL0[6] ,
            DLL_INDELAY_CNTL1[6] -->  DLL_INDELAY_OUT[6] ) = 150;
            
        (
            DLL_INDELAY_CNTL0[7] ,
            DLL_INDELAY_CNTL1[7] -->  DLL_INDELAY_OUT[7] ) = 150;
            
    }

}; // end of structure netlist of DELAYCODEMUX

/*******************************************************************************

  Device    [DELAYCODEMUX]

  Author    [clwang]

  Abstract  [Configure the configuration bits based on the value of config parameter]

  Revision History:

********************************************************************************/
configuration cfg of DELAYCODEMUX
{
   if (DLL_INDELAY_CNTL0[0] --> DLL_INDELAY_OUT[0]
    || DLL_INDELAY_CNTL0[1] --> DLL_INDELAY_OUT[1]
    || DLL_INDELAY_CNTL0[2] --> DLL_INDELAY_OUT[2]
    || DLL_INDELAY_CNTL0[3] --> DLL_INDELAY_OUT[3]
    || DLL_INDELAY_CNTL0[4] --> DLL_INDELAY_OUT[4]
    || DLL_INDELAY_CNTL0[5] --> DLL_INDELAY_OUT[5]
    || DLL_INDELAY_CNTL0[6] --> DLL_INDELAY_OUT[6]
    || DLL_INDELAY_CNTL0[7] --> DLL_INDELAY_OUT[7])
   {
      SC_DLYCODE_SRC_SEL := 1'b0; 
   }   
   else if (DLL_INDELAY_CNTL1[0] --> DLL_INDELAY_OUT[0]
    || DLL_INDELAY_CNTL1[1] --> DLL_INDELAY_OUT[1]
    || DLL_INDELAY_CNTL1[2] --> DLL_INDELAY_OUT[2]
    || DLL_INDELAY_CNTL1[3] --> DLL_INDELAY_OUT[3]
    || DLL_INDELAY_CNTL1[4] --> DLL_INDELAY_OUT[4]
    || DLL_INDELAY_CNTL1[5] --> DLL_INDELAY_OUT[5]
    || DLL_INDELAY_CNTL1[6] --> DLL_INDELAY_OUT[6]
    || DLL_INDELAY_CNTL1[7] --> DLL_INDELAY_OUT[7])
   {
      SC_DLYCODE_SRC_SEL := 1'b1; 
   }

}; // end of configuration cfg of DELAYCODEMUX
