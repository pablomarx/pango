*****************************************************************

  Device    [IOMUX]

  Author    [clwang]

  Abstract  [IOCLK MUX]

  Revision History:

********************************************************************************/
grid
device IOMUX
{
    port
    (
        config input SC_IOCLK_SEL[1:0]         = 2'b00  /*pragma PAP_CFG_BIT_NAME = "SC_IOCLK_SEL<1>, SC_IOCLK_SEL<0>" */,      //0 => ioclk[0]; 1 => ioclk[1]; 2 => ioclk[2]; 3 => ioclk[3];
       
        input  IOCLK[3:0] = 4'b1111,
        output OUT
    );
}; // end of device IOMUX


/*******************************************************************************

  Device    [IOMUX]

  Author    [clwang]

  Abstract  [The structure netlist of IO CLK(MUX) is described in the similar fashion 
             as in HDL. In unit instantiation statement, the formal pin may be 
             connected to net which is declared explicitly. 
             
             In Valence, the connection can also be made from formal pin to other 
             pin or port, in which case Valence compiler shall create the net to 
             fulfil the connection. The built-in naming convention is kicked in 
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/

structure netlist of IOMUX
{
    routing
    {
        (
             IOCLK[3] ,
             IOCLK[2] ,
             IOCLK[1] ,
             IOCLK[0] -->  OUT ) = 150;

    }
    
}; // end of structure netlist of IOMUX


/*******************************************************************************

  Device    [IOMUX]

  Author    [clwang]

  Abstract  [Configure the configuration bits based on the value of config parameter]

  Revision History:

********************************************************************************/
configuration cfg of IOMUX // pragma PAP_ARC_REGULAR_ROUTING_CFG_BODY
{
    //"IOCLK0", "IOCLK1", "IOCLK2", "IOCLK3" 
    if (IOCLK[0] --> OUT)
    {
        SC_IOCLK_SEL               := 2'b00          ;
    } 
    if (IOCLK[1] --> OUT)
    {
        SC_IOCLK_SEL               := 2'b01          ;
    }   
    if (IOCLK[2] --> OUT)
    {
        SC_IOCLK_SEL               := 2'b10          ;
    }
    if (IOCLK[3] --> OUT)
    {
        SC_IOCLK_SEL               := 2'b11          ;
    } 
}; // end of configuration cfg of IOMUX
