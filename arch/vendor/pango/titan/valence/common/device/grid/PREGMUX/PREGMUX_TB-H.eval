*****************************************************************

  Device    [PREGMUX_TB]

  Author    [XIAWEI]

  Abstract  []

  Revision History:

********************************************************************************/
grid
device PREGMUX_TB
{
    parameter
    (
    );

    port
    (
        config input SC_TESTMODEN_N         = 1'b0               /*pragma PAP_CFG_BIT_NAME = "SC_TESTMODEN_N" */,
        config input SC_LOCALMODEN_N[9:0]   = 10'b00_0000_0000   /*pragma PAP_CFG_BIT_NAME = "SC_LOCALMODEN_N<9>, SC_LOCALMODEN_N<8>,SC_LOCALMODEN_N<7>,SC_LOCALMODEN_N<6>,SC_LOCALMODEN_N<5>,SC_LOCALMODEN_N<4>,SC_LOCALMODEN_N<3>,SC_LOCALMODEN_N<2>,SC_LOCALMODEN_N<1>,SC_LOCALMODEN_N<0>" */,
        config input SC_PRECLK_TB[29:0]     = 30'd0              /*pragma PAP_CFG_BIT_NAME = "SC_PRECLK_TB<29>, SC_PRECLK_TB<28>, SC_PRECLK_TB<27>, SC_PRECLK_TB<26>, SC_PRECLK_TB<25>, SC_PRECLK_TB<24>, SC_PRECLK_TB<23>, SC_PRECLK_TB<22>, SC_PRECLK_TB<21>, SC_PRECLK_TB<20>, SC_PRECLK_TB<19>, SC_PRECLK_TB<18>, SC_PRECLK_TB<17>, SC_PRECLK_TB<16>, SC_PRECLK_TB<15>, SC_PRECLK_TB<14>, SC_PRECLK_TB<13>, SC_PRECLK_TB<12>, SC_PRECLK_TB<11>, SC_PRECLK_TB<10>, SC_PRECLK_TB<9>, SC_PRECLK_TB<8>, SC_PRECLK_TB<7>, SC_PRECLK_TB<6>, SC_PRECLK_TB<5>, SC_PRECLK_TB<4>, SC_PRECLK_TB<3>, SC_PRECLK_TB<2>, SC_PRECLK_TB<1>, SC_PRECLK_TB<0>" */,

        // These are the config ports.
        // FIXME

        input   CLK0[6:0] = 7'b1111111,
        input   CLK1[6:0] = 7'b1111111,
        input   CLK2[6:0] = 7'b1111111,
        input   CLK3[6:0] = 7'b1111111,
        input   CLK4[6:0] = 7'b1111111,
        input   CLK5[6:0] = 7'b1111111,
        input   CLK6[6:0] = 7'b1111111,
        input   CLK7[6:0] = 7'b1111111,
        input   CLK8[6:0] = 7'b1111111,
        input   CLK9[6:0] = 7'b1111111,
        input   SIG_FR_CIM[2:0] = 3'b111,
        input   GLOGEN = 1'b1,
        output  CLKOUT[9:0]
    );

}// end of device PREGMUX_TB

/*******************************************************************************

  Device    [PREGMUX_TB]

  Author    []

  Abstract  [The structure netlist of PREGMUX_TB is described in the similar fashion
             as in HDL. In unit instantiation statement, the formal pin may be
             connected to net which is declared explicitly.

             In Valence, the connection can also be made from formal pin to other
             pin or port, in which case Valence compiler shall create the net to
             fulfil the connection. The built-in naming convention is kicked in
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/
structure netlist of PREGMUX_TB
{
    // Wires for input ports


   // Wires connecting to output ports
    routing
    {
        ( CLK0[0] --> CLKOUT[0] ) = 150;
        ( CLK0[1] --> CLKOUT[0] ) = 150;
        ( CLK0[2] --> CLKOUT[0] ) = 150;
        ( CLK0[3] --> CLKOUT[0] ) = 150;
        ( CLK0[4] --> CLKOUT[0] ) = 150;
        ( CLK0[5] --> CLKOUT[0] ) = 150;
        ( CLK0[6] --> CLKOUT[0] ) = 150;

        ( CLK1[0] --> CLKOUT[1] ) = 150;
        ( CLK1[1] --> CLKOUT[1] ) = 150;
        ( CLK1[2] --> CLKOUT[1] ) = 150;
        ( CLK1[3] --> CLKOUT[1] ) = 150;
        ( CLK1[4] --> CLKOUT[1] ) = 150;
        ( CLK1[5] --> CLKOUT[1] ) = 150;
        ( CLK1[6] --> CLKOUT[1] ) = 150;

        ( CLK2[0] --> CLKOUT[2] ) = 150;
        ( CLK2[1] --> CLKOUT[2] ) = 150;
        ( CLK2[2] --> CLKOUT[2] ) = 150;
        ( CLK2[3] --> CLKOUT[2] ) = 150;
        ( CLK2[4] --> CLKOUT[2] ) = 150;
        ( CLK2[5] --> CLKOUT[2] ) = 150;
        ( CLK2[6] --> CLKOUT[2] ) = 150;

        ( CLK3[0] --> CLKOUT[3] ) = 150;
        ( CLK3[1] --> CLKOUT[3] ) = 150;
        ( CLK3[2] --> CLKOUT[3] ) = 150;
        ( CLK3[3] --> CLKOUT[3] ) = 150;
        ( CLK3[4] --> CLKOUT[3] ) = 150;
        ( CLK3[5] --> CLKOUT[3] ) = 150;
        ( CLK3[6] --> CLKOUT[3] ) = 150;

        ( CLK4[0] --> CLKOUT[4] ) = 150;
        ( CLK4[1] --> CLKOUT[4] ) = 150;
        ( CLK4[2] --> CLKOUT[4] ) = 150;
        ( CLK4[3] --> CLKOUT[4] ) = 150;
        ( CLK4[4] --> CLKOUT[4] ) = 150;
        ( CLK4[5] --> CLKOUT[4] ) = 150;
        ( CLK4[6] --> CLKOUT[4] ) = 150;

        ( CLK5[0] --> CLKOUT[5] ) = 150;
        ( CLK5[1] --> CLKOUT[5] ) = 150;
        ( CLK5[2] --> CLKOUT[5] ) = 150;
        ( CLK5[3] --> CLKOUT[5] ) = 150;
        ( CLK5[4] --> CLKOUT[5] ) = 150;
        ( CLK5[5] --> CLKOUT[5] ) = 150;
        ( CLK5[6] --> CLKOUT[5] ) = 150;

        ( CLK6[0] --> CLKOUT[6] ) = 150;
        ( CLK6[1] --> CLKOUT[6] ) = 150;
        ( CLK6[2] --> CLKOUT[6] ) = 150;
        ( CLK6[3] --> CLKOUT[6] ) = 150;
        ( CLK6[4] --> CLKOUT[6] ) = 150;
        ( CLK6[5] --> CLKOUT[6] ) = 150;
        ( CLK6[6] --> CLKOUT[6] ) = 150;

        ( CLK7[0] --> CLKOUT[7] ) = 150;
        ( CLK7[1] --> CLKOUT[7] ) = 150;
        ( CLK7[2] --> CLKOUT[7] ) = 150;
        ( CLK7[3] --> CLKOUT[7] ) = 150;
        ( CLK7[4] --> CLKOUT[7] ) = 150;
        ( CLK7[5] --> CLKOUT[7] ) = 150;
        ( CLK7[6] --> CLKOUT[7] ) = 150;

        ( CLK8[0] --> CLKOUT[8] ) = 150;
        ( CLK8[1] --> CLKOUT[8] ) = 150;
        ( CLK8[2] --> CLKOUT[8] ) = 150;
        ( CLK8[3] --> CLKOUT[8] ) = 150;
        ( CLK8[4] --> CLKOUT[8] ) = 150;
        ( CLK8[5] --> CLKOUT[8] ) = 150;
        ( CLK8[6] --> CLKOUT[8] ) = 150;

        ( CLK9[0] --> CLKOUT[9] ) = 150;
        ( CLK9[1] --> CLKOUT[9] ) = 150;
        ( CLK9[2] --> CLKOUT[9] ) = 150;
        ( CLK9[3] --> CLKOUT[9] ) = 150;
        ( CLK9[4] --> CLKOUT[9] ) = 150;
        ( CLK9[5] --> CLKOUT[9] ) = 150;
        ( CLK9[6] --> CLKOUT[9] ) = 150;
   }

   // Internal wires

}; // end of structure netlist of PREGMUX_TB

/*******************************************************************************

  Device    [PREGMUX_TB]

  Author    []

  Abstract  [Configure the configuration bits based on the value of config parameter]

  Revision History:

********************************************************************************/
configuration cfg of PREGMUX_TB
{
    if (/*SC_TESTMODEN_N == 1'b0*/1) //not test mode
    {
        if ( CLK0[0] --> CLKOUT[0] )
        {
            SC_PRECLK_TB[2:0] := 3'b001;
        }

        if ( CLK0[1] --> CLKOUT[0] )
        {
            SC_PRECLK_TB[2:0] := 3'b010;
        }

        if ( CLK0[2] --> CLKOUT[0] )
        {
            SC_PRECLK_TB[2:0] := 3'b011;
        }

        if ( CLK0[3] --> CLKOUT[0] )
        {
            SC_PRECLK_TB[2:0] := 3'b100;
        }

        if ( CLK0[4] --> CLKOUT[0] )
        {
            SC_PRECLK_TB[2:0] := 3'b101;
        }

        if ( CLK0[5] --> CLKOUT[0] )
        {
            SC_PRECLK_TB[2:0] := 3'b110;
        }

        if ( CLK0[6] --> CLKOUT[0] )
        {
            SC_PRECLK_TB[2:0] := 3'b111;
        }


        if ( CLK1[0] --> CLKOUT[1] )
        {
            SC_PRECLK_TB[5:3] := 3'b001;
        }

        if ( CLK1[1] --> CLKOUT[1] )
        {
            SC_PRECLK_TB[5:3] := 3'b010;
        }

        if ( CLK1[2] --> CLKOUT[1] )
        {
            SC_PRECLK_TB[5:3] := 3'b011;
        }

        if ( CLK1[3] --> CLKOUT[1] )
        {
            SC_PRECLK_TB[5:3] := 3'b100;
        }

        if ( CLK1[4] --> CLKOUT[1] )
        {
            SC_PRECLK_TB[5:3] := 3'b101;
        }

        if ( CLK1[5] --> CLKOUT[1] )
        {
            SC_PRECLK_TB[5:3] := 3'b110;
        }

        if ( CLK1[6] --> CLKOUT[1] )
        {
            SC_PRECLK_TB[5:3] := 3'b111;
        }


        if ( CLK2[0] --> CLKOUT[2] )
        {
            SC_PRECLK_TB[8:6] := 3'b001;
        }

        if ( CLK2[1] --> CLKOUT[2] )
        {
            SC_PRECLK_TB[8:6] := 3'b010;
        }

        if ( CLK2[2] --> CLKOUT[2] )
        {
            SC_PRECLK_TB[8:6] := 3'b011;
        }

        if ( CLK2[3] --> CLKOUT[2] )
        {
            SC_PRECLK_TB[8:6] := 3'b100;
        }

        if ( CLK2[4] --> CLKOUT[2] )
        {
            SC_PRECLK_TB[8:6] := 3'b101;
        }

        if ( CLK2[5] --> CLKOUT[2] )
        {
            SC_PRECLK_TB[8:6] := 3'b110;
        }

        if ( CLK2[6] --> CLKOUT[2] )
        {
            SC_PRECLK_TB[8:6] := 3'b111;
        }


        if ( CLK3[0] --> CLKOUT[3] )
        {
            SC_PRECLK_TB[11:9] := 3'b001;
        }

        if ( CLK3[1] --> CLKOUT[3] )
        {
            SC_PRECLK_TB[11:9] := 3'b010;
        }

        if ( CLK3[2] --> CLKOUT[3] )
        {
            SC_PRECLK_TB[11:9] := 3'b011;
        }

        if ( CLK3[3] --> CLKOUT[3] )
        {
            SC_PRECLK_TB[11:9] := 3'b100;
        }

        if ( CLK3[4] --> CLKOUT[3] )
        {
            SC_PRECLK_TB[11:9] := 3'b101;
        }

        if ( CLK3[5] --> CLKOUT[3] )
        {
            SC_PRECLK_TB[11:9] := 3'b110;
        }

        if ( CLK3[6] --> CLKOUT[3] )
        {
            SC_PRECLK_TB[11:9] := 3'b111;
        }


        if ( CLK4[0] --> CLKOUT[4] )
        {
            SC_PRECLK_TB[14:12] := 3'b001;
        }

        if ( CLK4[1] --> CLKOUT[4] )
        {
            SC_PRECLK_TB[14:12] := 3'b010;
        }

        if ( CLK4[2] --> CLKOUT[4] )
        {
            SC_PRECLK_TB[14:12] := 3'b011;
        }

        if ( CLK4[3] --> CLKOUT[4] )
        {
            SC_PRECLK_TB[14:12] := 3'b100;
        }

        if ( CLK4[4] --> CLKOUT[4] )
        {
            SC_PRECLK_TB[14:12] := 3'b101;
        }

        if ( CLK4[5] --> CLKOUT[4] )
        {
            SC_PRECLK_TB[14:12] := 3'b110;
        }

        if ( CLK4[6] --> CLKOUT[4] )
        {
            SC_PRECLK_TB[14:12] := 3'b111;
        }


        if ( CLK5[0] --> CLKOUT[5] )
        {
            SC_PRECLK_TB[17:15] := 3'b001;
        }

        if ( CLK5[1] --> CLKOUT[5] )
        {
            SC_PRECLK_TB[17:15] := 3'b010;
        }

        if ( CLK5[2] --> CLKOUT[5] )
        {
            SC_PRECLK_TB[17:15] := 3'b011;
        }

        if ( CLK5[3] --> CLKOUT[5] )
        {
            SC_PRECLK_TB[17:15] := 3'b100;
        }

        if ( CLK5[4] --> CLKOUT[5] )
        {
            SC_PRECLK_TB[17:15] := 3'b101;
        }

        if ( CLK5[5] --> CLKOUT[5] )
        {
            SC_PRECLK_TB[17:15] := 3'b110;
        }

        if ( CLK5[6] --> CLKOUT[5] )
        {
            SC_PRECLK_TB[17:15] := 3'b111;
        }


        if ( CLK6[0] --> CLKOUT[6] )
        {
            SC_PRECLK_TB[20:18] := 3'b001;
        }

        if ( CLK6[1] --> CLKOUT[6] )
        {
            SC_PRECLK_TB[20:18] := 3'b010;
        }

        if ( CLK6[2] --> CLKOUT[6] )
        {
            SC_PRECLK_TB[20:18] := 3'b011;
        }

        if ( CLK6[3] --> CLKOUT[6] )
        {
            SC_PRECLK_TB[20:18] := 3'b100;
        }

        if ( CLK6[4] --> CLKOUT[6] )
        {
            SC_PRECLK_TB[20:18] := 3'b101;
        }

        if ( CLK6[5] --> CLKOUT[6] )
        {
            SC_PRECLK_TB[20:18] := 3'b110;
        }

        if ( CLK6[6] --> CLKOUT[6] )
        {
            SC_PRECLK_TB[20:18] := 3'b111;
        }


        if ( CLK7[0] --> CLKOUT[7] )
        {
            SC_PRECLK_TB[23:21] := 3'b001;
        }

        if ( CLK7[1] --> CLKOUT[7] )
        {
            SC_PRECLK_TB[23:21] := 3'b010;
        }

        if ( CLK7[2] --> CLKOUT[7] )
        {
            SC_PRECLK_TB[23:21] := 3'b011;
        }

        if ( CLK7[3] --> CLKOUT[7] )
        {
            SC_PRECLK_TB[23:21] := 3'b100;
        }

        if ( CLK7[4] --> CLKOUT[7] )
        {
            SC_PRECLK_TB[23:21] := 3'b101;
        }

        if ( CLK7[5] --> CLKOUT[7] )
        {
            SC_PRECLK_TB[23:21] := 3'b110;
        }

        if ( CLK7[6] --> CLKOUT[7] )
        {
            SC_PRECLK_TB[23:21] := 3'b111;
        }


        if ( CLK8[0] --> CLKOUT[8] )
        {
            SC_PRECLK_TB[26:24] := 3'b001;
        }

        if ( CLK8[1] --> CLKOUT[8] )
        {
            SC_PRECLK_TB[26:24] := 3'b010;
        }

        if ( CLK8[2] --> CLKOUT[8] )
        {
            SC_PRECLK_TB[26:24] := 3'b011;
        }

        if ( CLK8[3] --> CLKOUT[8] )
        {
            SC_PRECLK_TB[26:24] := 3'b100;
        }

        if ( CLK8[4] --> CLKOUT[8] )
        {
            SC_PRECLK_TB[26:24] := 3'b101;
        }

        if ( CLK8[5] --> CLKOUT[8] )
        {
            SC_PRECLK_TB[26:24] := 3'b110;
        }

        if ( CLK8[6] --> CLKOUT[8] )
        {
            SC_PRECLK_TB[26:24] := 3'b111;
        }
        
        if ( CLK9[0] --> CLKOUT[9] )
        {
            SC_PRECLK_TB[29:27] := 3'b001;
        }

        if ( CLK9[1] --> CLKOUT[9] )
        {
            SC_PRECLK_TB[29:27] := 3'b010;
        }

        if ( CLK9[2] --> CLKOUT[9] )
        {
            SC_PRECLK_TB[29:27] := 3'b011;
        }

        if ( CLK9[3] --> CLKOUT[9] )
        {
            SC_PRECLK_TB[29:27] := 3'b100;
        }

        if ( CLK9[4] --> CLKOUT[9] )
        {
            SC_PRECLK_TB[29:27] := 3'b101;
        }

        if ( CLK9[5] --> CLKOUT[9] )
        {
            SC_PRECLK_TB[29:27] := 3'b110;
        }

        if ( CLK9[6] --> CLKOUT[9] )
        {
            SC_PRECLK_TB[29:27] := 3'b111;
        }
   }
   else // test mode
   {

   }

}; // end of configuration cfg of PREGMUX_TB


