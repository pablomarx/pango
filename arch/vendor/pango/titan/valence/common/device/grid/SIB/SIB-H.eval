*****************************************************************

  Device    [SIB]

  Author    [clwang]

  Abstract  []

  Revision History:

********************************************************************************/
grid
device SIB
{
    parameter
    (

    );
    port
    (
        config input SC_AMMUX_SA0[2:0] = 3'b000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AMMUX_SA0<2>   ,  SC_AMMUX_SA0<1>   ,  SC_AMMUX_SA0<0>  " */,
        config input SC_AMMUX_ZA0[1:0] = 2'b00  /* pragma PAP_CFG_BIT_NAME  = "  SC_AMMUX_ZA0<1>   ,  SC_AMMUX_ZA0<0>  " */,
        config input SC_AMMUX_SB0[2:0] = 3'b000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AMMUX_SB0<2>   ,  SC_AMMUX_SB0<1>   ,  SC_AMMUX_SB0<0>  " */,
        config input SC_AMMUX_ZB0[1:0] = 2'b00  /* pragma PAP_CFG_BIT_NAME  = "  SC_AMMUX_ZB0<1>   ,  SC_AMMUX_ZB0<0>  " */,
        config input SC_AMMUX_SA1[2:0] = 3'b000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AMMUX_SA1<2>   ,  SC_AMMUX_SA1<1>   ,  SC_AMMUX_SA1<0>  " */,
        config input SC_AMMUX_ZA1[1:0] = 2'b00  /* pragma PAP_CFG_BIT_NAME  = "  SC_AMMUX_ZA1<1>   ,  SC_AMMUX_ZA1<0>  " */,
        config input SC_AMMUX_SB1[2:0] = 3'b000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AMMUX_SB1<2>   ,  SC_AMMUX_SB1<1>   ,  SC_AMMUX_SB1<0>  " */,
        config input SC_AMMUX_ZB1[1:0] = 2'b00  /* pragma PAP_CFG_BIT_NAME  = "  SC_AMMUX_ZB1<1>   ,  SC_AMMUX_ZB1<0>  " */,
        config input SC_SMMUX_SA0[2:0] = 3'b000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SMMUX_SA0<2>   ,  SC_SMMUX_SA0<1>   ,  SC_SMMUX_SA0<0>  " */,
        config input SC_SMMUX_ZA0[1:0] = 2'b00  /* pragma PAP_CFG_BIT_NAME  = "  SC_SMMUX_ZA0<1>   ,  SC_SMMUX_ZA0<0>  " */,
        config input SC_SMMUX_SB0[2:0] = 3'b000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SMMUX_SB0<2>   ,  SC_SMMUX_SB0<1>   ,  SC_SMMUX_SB0<0>  " */,
        config input SC_SMMUX_ZB0[1:0] = 2'b00  /* pragma PAP_CFG_BIT_NAME  = "  SC_SMMUX_ZB0<1>   ,  SC_SMMUX_ZB0<0>  " */,
        config input SC_SMMUX_SA1[2:0] = 3'b000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SMMUX_SA1<2>   ,  SC_SMMUX_SA1<1>   ,  SC_SMMUX_SA1<0>  " */,
        config input SC_SMMUX_ZA1[1:0] = 2'b00  /* pragma PAP_CFG_BIT_NAME  = "  SC_SMMUX_ZA1<1>   ,  SC_SMMUX_ZA1<0>  " */,
        config input SC_SMMUX_SB1[2:0] = 3'b000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SMMUX_SB1<2>   ,  SC_SMMUX_SB1<1>   ,  SC_SMMUX_SB1<0>  " */,
        config input SC_SMMUX_ZB1[1:0] = 2'b00  /* pragma PAP_CFG_BIT_NAME  = "  SC_SMMUX_ZB1<1>   ,  SC_SMMUX_ZB1<0>  " */,
        config input SC_CTRMUX_SA0[4:0] = 5'b00000  /* pragma PAP_CFG_BIT_NAME  = "  SC_CTRMUX_SA0<4>   ,  SC_CTRMUX_SA0<3>   ,  SC_CTRMUX_SA0<2>   ,  SC_CTRMUX_SA0<1>   ,  SC_CTRMUX_SA0<0>  " */,
        config input SC_CTRMUX_ZA0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_CTRMUX_ZA0<3>   ,  SC_CTRMUX_ZA0<2>   ,  SC_CTRMUX_ZA0<1>   ,  SC_CTRMUX_ZA0<0>  " */,
        config input SC_CTRMUX_SB0[4:0] = 5'b00000  /* pragma PAP_CFG_BIT_NAME  = "  SC_CTRMUX_SB0<4>   ,  SC_CTRMUX_SB0<3>   ,  SC_CTRMUX_SB0<2>   ,  SC_CTRMUX_SB0<1>   ,  SC_CTRMUX_SB0<0>  " */,
        config input SC_CTRMUX_ZB0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_CTRMUX_ZB0<3>   ,  SC_CTRMUX_ZB0<2>   ,  SC_CTRMUX_ZB0<1>   ,  SC_CTRMUX_ZB0<0>  " */,
        config input SC_CTRMUX_SA1[4:0] = 5'b00000  /* pragma PAP_CFG_BIT_NAME  = "  SC_CTRMUX_SA1<4>   ,  SC_CTRMUX_SA1<3>   ,  SC_CTRMUX_SA1<2>   ,  SC_CTRMUX_SA1<1>   ,  SC_CTRMUX_SA1<0>  " */,
        config input SC_CTRMUX_ZA1[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_CTRMUX_ZA1<3>   ,  SC_CTRMUX_ZA1<2>   ,  SC_CTRMUX_ZA1<1>   ,  SC_CTRMUX_ZA1<0>  " */,
        config input SC_CTRMUX_SB1[4:0] = 5'b00000  /* pragma PAP_CFG_BIT_NAME  = "  SC_CTRMUX_SB1<4>   ,  SC_CTRMUX_SB1<3>   ,  SC_CTRMUX_SB1<2>   ,  SC_CTRMUX_SB1<1>   ,  SC_CTRMUX_SB1<0>  " */,
        config input SC_CTRMUX_ZB1[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_CTRMUX_ZB1<3>   ,  SC_CTRMUX_ZB1<2>   ,  SC_CTRMUX_ZB1<1>   ,  SC_CTRMUX_ZB1<0>  " */,
        config input SC_Z1CLKMUX_SA0[4:0] = 5'b00000  /* pragma PAP_CFG_BIT_NAME  = "  SC_Z1CLKMUX_SA0<4>   ,  SC_Z1CLKMUX_SA0<3>   ,  SC_Z1CLKMUX_SA0<2>   ,  SC_Z1CLKMUX_SA0<1>   ,  SC_Z1CLKMUX_SA0<0>  " */,
        config input SC_Z1CLKMUX_ZA0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_Z1CLKMUX_ZA0<3>   ,  SC_Z1CLKMUX_ZA0<2>   ,  SC_Z1CLKMUX_ZA0<1>   ,  SC_Z1CLKMUX_ZA0<0>  " */,
        config input SC_Z1CLKMUX_SB0[4:0] = 5'b00000  /* pragma PAP_CFG_BIT_NAME  = "  SC_Z1CLKMUX_SB0<4>   ,  SC_Z1CLKMUX_SB0<3>   ,  SC_Z1CLKMUX_SB0<2>   ,  SC_Z1CLKMUX_SB0<1>   ,  SC_Z1CLKMUX_SB0<0>  " */,
        config input SC_Z1CLKMUX_ZB0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_Z1CLKMUX_ZB0<3>   ,  SC_Z1CLKMUX_ZB0<2>   ,  SC_Z1CLKMUX_ZB0<1>   ,  SC_Z1CLKMUX_ZB0<0>  " */,

        config input SC_AA_S0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AA_S0<3>   ,  SC_AA_S0<2>   ,  SC_AA_S0<1>   ,  SC_AA_S0<0>  " */,
        config input SC_AA_S1[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AA_S1<3>   ,  SC_AA_S1<2>   ,  SC_AA_S1<1>   ,  SC_AA_S1<0>  " */,
        config input SC_AA_S2[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AA_S2<3>   ,  SC_AA_S2<2>   ,  SC_AA_S2<1>   ,  SC_AA_S2<0>  " */,
        config input SC_AA_S3[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AA_S3<3>   ,  SC_AA_S3<2>   ,  SC_AA_S3<1>   ,  SC_AA_S3<0>  " */,
        config input SC_AB_S0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AB_S0<3>   ,  SC_AB_S0<2>   ,  SC_AB_S0<1>   ,  SC_AB_S0<0>  " */,
        config input SC_AB_S1[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AB_S1<3>   ,  SC_AB_S1<2>   ,  SC_AB_S1<1>   ,  SC_AB_S1<0>  " */,
        config input SC_AB_S2[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AB_S2<3>   ,  SC_AB_S2<2>   ,  SC_AB_S2<1>   ,  SC_AB_S2<0>  " */,
        config input SC_AB_S3[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AB_S3<3>   ,  SC_AB_S3<2>   ,  SC_AB_S3<1>   ,  SC_AB_S3<0>  " */,
        config input SC_AC_S0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AC_S0<3>   ,  SC_AC_S0<2>   ,  SC_AC_S0<1>   ,  SC_AC_S0<0>  " */,
        config input SC_AC_S1[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AC_S1<3>   ,  SC_AC_S1<2>   ,  SC_AC_S1<1>   ,  SC_AC_S1<0>  " */,
        config input SC_AC_S2[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AC_S2<3>   ,  SC_AC_S2<2>   ,  SC_AC_S2<1>   ,  SC_AC_S2<0>  " */,
        config input SC_AC_S3[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AC_S3<3>   ,  SC_AC_S3<2>   ,  SC_AC_S3<1>   ,  SC_AC_S3<0>  " */,
        config input SC_AD_S0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AD_S0<3>   ,  SC_AD_S0<2>   ,  SC_AD_S0<1>   ,  SC_AD_S0<0>  " */,
        config input SC_AD_S1[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AD_S1<3>   ,  SC_AD_S1<2>   ,  SC_AD_S1<1>   ,  SC_AD_S1<0>  " */,
        config input SC_AD_S2[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AD_S2<3>   ,  SC_AD_S2<2>   ,  SC_AD_S2<1>   ,  SC_AD_S2<0>  " */,
        config input SC_AD_S3[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AD_S3<3>   ,  SC_AD_S3<2>   ,  SC_AD_S3<1>   ,  SC_AD_S3<0>  " */,
        config input SC_SA_S0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SA_S0<3>   ,  SC_SA_S0<2>   ,  SC_SA_S0<1>   ,  SC_SA_S0<0>  " */,
        config input SC_SA_S1[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SA_S1<3>   ,  SC_SA_S1<2>   ,  SC_SA_S1<1>   ,  SC_SA_S1<0>  " */,
        config input SC_SA_S2[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SA_S2<3>   ,  SC_SA_S2<2>   ,  SC_SA_S2<1>   ,  SC_SA_S2<0>  " */,
        config input SC_SA_S3[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SA_S3<3>   ,  SC_SA_S3<2>   ,  SC_SA_S3<1>   ,  SC_SA_S3<0>  " */,
        config input SC_SB_S0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SB_S0<3>   ,  SC_SB_S0<2>   ,  SC_SB_S0<1>   ,  SC_SB_S0<0>  " */,
        config input SC_SB_S1[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SB_S1<3>   ,  SC_SB_S1<2>   ,  SC_SB_S1<1>   ,  SC_SB_S1<0>  " */,
        config input SC_SB_S2[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SB_S2<3>   ,  SC_SB_S2<2>   ,  SC_SB_S2<1>   ,  SC_SB_S2<0>  " */,
        config input SC_SB_S3[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SB_S3<3>   ,  SC_SB_S3<2>   ,  SC_SB_S3<1>   ,  SC_SB_S3<0>  " */,
        config input SC_SC_S0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SC_S0<3>   ,  SC_SC_S0<2>   ,  SC_SC_S0<1>   ,  SC_SC_S0<0>  " */,
        config input SC_SC_S1[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SC_S1<3>   ,  SC_SC_S1<2>   ,  SC_SC_S1<1>   ,  SC_SC_S1<0>  " */,
        config input SC_SC_S2[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SC_S2<3>   ,  SC_SC_S2<2>   ,  SC_SC_S2<1>   ,  SC_SC_S2<0>  " */,
        config input SC_SC_S3[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SC_S3<3>   ,  SC_SC_S3<2>   ,  SC_SC_S3<1>   ,  SC_SC_S3<0>  " */,
        config input SC_SD_S0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SD_S0<3>   ,  SC_SD_S0<2>   ,  SC_SD_S0<1>   ,  SC_SD_S0<0>  " */,
        config input SC_SD_S1[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SD_S1<3>   ,  SC_SD_S1<2>   ,  SC_SD_S1<1>   ,  SC_SD_S1<0>  " */,
        config input SC_SD_S2[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SD_S2<3>   ,  SC_SD_S2<2>   ,  SC_SD_S2<1>   ,  SC_SD_S2<0>  " */,
        config input SC_SD_S3[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_SD_S3<3>   ,  SC_SD_S3<2>   ,  SC_SD_S3<1>   ,  SC_SD_S3<0>  " */,
        config input SC_AAD_S0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AAD_S0<3>   ,  SC_AAD_S0<2>   ,  SC_AAD_S0<1>   ,  SC_AAD_S0<0>  " */,
        config input SC_AAD_S1[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AAD_S1<3>   ,  SC_AAD_S1<2>   ,  SC_AAD_S1<1>   ,  SC_AAD_S1<0>  " */,
        config input SC_AAD_S2[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AAD_S2<3>   ,  SC_AAD_S2<2>   ,  SC_AAD_S2<1>   ,  SC_AAD_S2<0>  " */,
        config input SC_AAD_S3[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_AAD_S3<3>   ,  SC_AAD_S3<2>   ,  SC_AAD_S3<1>   ,  SC_AAD_S3<0>  " */,
        config input SC_BBD_S0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_BBD_S0<3>   ,  SC_BBD_S0<2>   ,  SC_BBD_S0<1>   ,  SC_BBD_S0<0>  " */,
        config input SC_BBD_S1[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_BBD_S1<3>   ,  SC_BBD_S1<2>   ,  SC_BBD_S1<1>   ,  SC_BBD_S1<0>  " */,
        config input SC_BBD_S2[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_BBD_S2<3>   ,  SC_BBD_S2<2>   ,  SC_BBD_S2<1>   ,  SC_BBD_S2<0>  " */,
        config input SC_BBD_S3[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_BBD_S3<3>   ,  SC_BBD_S3<2>   ,  SC_BBD_S3<1>   ,  SC_BBD_S3<0>  " */,
        config input SC_CCD_S0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_CCD_S0<3>   ,  SC_CCD_S0<2>   ,  SC_CCD_S0<1>   ,  SC_CCD_S0<0>  " */,
        config input SC_CCD_S1[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_CCD_S1<3>   ,  SC_CCD_S1<2>   ,  SC_CCD_S1<1>   ,  SC_CCD_S1<0>  " */,
        config input SC_CCD_S2[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_CCD_S2<3>   ,  SC_CCD_S2<2>   ,  SC_CCD_S2<1>   ,  SC_CCD_S2<0>  " */,
        config input SC_CCD_S3[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_CCD_S3<3>   ,  SC_CCD_S3<2>   ,  SC_CCD_S3<1>   ,  SC_CCD_S3<0>  " */,
        config input SC_DDD_S0[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_DDD_S0<3>   ,  SC_DDD_S0<2>   ,  SC_DDD_S0<1>   ,  SC_DDD_S0<0>  " */,
        config input SC_DDD_S1[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_DDD_S1<3>   ,  SC_DDD_S1<2>   ,  SC_DDD_S1<1>   ,  SC_DDD_S1<0>  " */,
        config input SC_DDD_S2[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_DDD_S2<3>   ,  SC_DDD_S2<2>   ,  SC_DDD_S2<1>   ,  SC_DDD_S2<0>  " */,
        config input SC_DDD_S3[3:0] = 4'b0000  /* pragma PAP_CFG_BIT_NAME  = "  SC_DDD_S3<3>   ,  SC_DDD_S3<2>   ,  SC_DDD_S3<1>   ,  SC_DDD_S3<0>  " */,
    
    
        input  IM1[13:0] = 14'h3fff,
        input  IM[47:0]  = 48'hffff_ffff_ffff,
        input  G0 = 1'b1,  G1 = 1'b1,  G2 = 1'b1,  G3 = 1'b1,  G4 = 1'b1,
        input  G5 = 1'b1,  G6 = 1'b1,  G7 = 1'b1,  G8 = 1'b1,  G9 = 1'b1,
        input  G10 = 1'b1, G11 = 1'b1, G12 = 1'b1, G13 = 1'b1, G14 = 1'b1, G15 = 1'b1,
                
        output S_M0,
        output S_A0,
        output S_A1,
        output S_A2,
        output S_A3,
        output S_A4,
        output S_AD,
 
        output S_M1,
        output S_B0,
        output S_B1,
        output S_B2,
        output S_B3,
        output S_B4,
        output S_BD,   

        output S_M2,
        output S_C0,
        output S_C1,
        output S_C2,
        output S_C3,
        output S_C4,
        output S_CD,

        output S_M3,
        output S_D0,
        output S_D1,
        output S_D2,
        output S_D3,
        output S_D4,
        output S_DD,     
          
        output S_CE,
        output S_RS,
        output S_CLK,       
      
        output A_M0,
        output A_A0,
        output A_A1,
        output A_A2,
        output A_A3,
        output A_A4,
        output A_AD,
         
        output A_M1,
        output A_B0,
        output A_B1,
        output A_B2,
        output A_B3,
        output A_B4,
        output A_BD,   
           
        output A_M2,
        output A_C0,
        output A_C1,
        output A_C2,
        output A_C3,
        output A_C4,
        output A_CD,
            
        output A_M3,
        output A_D0,
        output A_D1,
        output A_D2,
        output A_D3,
        output A_D4,
        output A_DD, 
        output A_CE,
        output A_RS,
        output A_CLK
    );
} // end of device SIB

/*******************************************************************************

  Device    [SIB]

  Author    [clwang]

  Abstract  [The structure netlist of SIB is described in the similar fashion 
             as in HDL. In unit instantiation statement, the formal pin may be 
             connected to net which is declared explicitly. 
             
             In Valence, the connection can also be made from formal pin to other 
             pin or port, in which case Valence compiler shall create the net to 
             fulfil the connection. The built-in naming convention is kicked in 
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/

structure netlist of SIB
{
    // Routing arc specification
    routing
    {
     /*   (
            IM1[4] ,
            G0 ,
            G1 ,
            G2 ,
            G3 ,
            IM1[5] ,
            G4 ,
            G5 ,
            G6 ,
            G7 ,
            IM1[0] ,
            G8 ,
            G9 ,
            G10 ,
            G11 ,
            IM1[1] ,
            G12 ,
            G13 ,
            G14 ,
            G15 -->  A_CE ) = 150;
        
         (
            IM1[0] ,
            G0 ,
            G1 ,
            G2 ,
            G3 ,
            IM1[1] ,
            G4 ,
            G5 ,
            G6 ,
            G7 ,
            IM1[2] ,
            G8 ,
            G9 ,
            G10 ,
            G11 ,
            IM1[3] ,
            G12 ,
            G13 ,
            G14 ,
            G15 -->  A_CLK ) = 150;
        
         (
            IM1[6] ,
            IM1[7] ,
            G0 ,
            IM1[8] ,
            IM1[9] ,
            G8 -->  A_M0 ) = 150;
        
         (
            IM1[6] ,
            IM1[7] ,
            G1 ,
            IM1[8] ,
            IM1[9] ,
            G9 -->  A_M1 ) = 150;
        
         (
            IM1[6] ,
            IM1[7] ,
            G2 ,
            IM1[8] ,
            IM1[9] ,
            G10 -->  A_M2 ) = 150;
        
         (
            IM1[6] ,
            IM1[7] ,
            G3 ,
            IM1[8] ,
            IM1[9] ,
            G11 -->  A_M3 ) = 150;
        
         (
            IM1[2] ,
            G0 ,
            G1 ,
            G2 ,
            G3 ,
            IM1[3] ,
            G4 ,
            G5 ,
            G6 ,
            G7 ,
            IM1[4] ,
            G8 ,
            G9 ,
            G10 ,
            G11 ,
            IM1[5] ,
            G12 ,
            G13 ,
            G14 ,
            G15 -->  A_RS ) = 150;
        
         (
            IM1[2] ,
            G0 ,
            G1 ,
            G2 ,
            G3 ,
            IM1[5] ,
            G4 ,
            G5 ,
            G6 ,
            G7 ,
            IM1[0] ,
            G8 ,
            G9 ,
            G10 ,
            G11 ,
            IM1[1] ,
            G12 ,
            G13 ,
            G14 ,
            G15 -->  S_CE ) = 150;
        
         (
            IM1[4] ,
            G0 ,
            G1 ,
            G2 ,
            G3 ,
            IM1[1] ,
            G4 ,
            G5 ,
            G6 ,
            G7 ,
            IM1[2] ,
            G8 ,
            G9 ,
            G10 ,
            G11 ,
            IM1[3] ,
            G12 ,
            G13 ,
            G14 ,
            G15 -->  S_CLK ) = 150;
        
         (
            IM1[11] ,
            IM1[10] ,
            G4 ,
            IM1[12] ,
            IM1[13] ,
            G12 -->  S_M0 ) = 150;
        
         (
            IM1[11] ,
            IM1[10] ,
            G5 ,
            IM1[12] ,
            IM1[13] ,
            G13 -->  S_M1 ) = 150;
        
         (
            IM1[11] ,
            IM1[10] ,
            G6 ,
            IM1[12] ,
            IM1[13] ,
            G14 -->  S_M2 ) = 150;
        
         (
            IM1[11] ,
            IM1[10] ,
            G7 ,
            IM1[12] ,
            IM1[13] ,
            G15 -->  S_M3 ) = 150;
        
         (
            IM1[0] ,
            G0 ,
            G1 ,
            G2 ,
            G3 ,
            IM1[3] ,
            G4 ,
            G5 ,
            G6 ,
            G7 ,
            IM1[4] ,
            G8 ,
            G9 ,
            G10 ,
            G11 ,
            IM1[5] ,
            G12 ,
            G13 ,
            G14 ,
            G15 -->  S_RS ) = 150;
        
         (
            IM[1] ,
            IM[0] ,
            IM[5] ,
            IM[2] -->  A_AD ) = 150;
        
         (
            IM[1] ,
            IM[0] ,
            IM[2] ,
            IM[3] -->  A_A0 ) = 150;
        
         (
            IM[1] ,
            IM[2] ,
            IM[3] ,
            IM[4] -->  A_A1 ) = 150;
        
         (
            IM[4] ,
            IM[2] ,
            IM[3] ,
            IM[5] -->  A_A2 ) = 150;
        
         (
            IM[4] ,
            IM[0] ,
            IM[3] ,
            IM[5] -->  A_A3 ) = 150;
        
         (
            IM[1] ,
            IM[0] ,
            IM[4] ,
            IM[5] -->  A_A4 ) = 150;
        
         (
            IM[7] ,
            IM[6] ,
            IM[11] ,
            IM[8] -->  A_BD ) = 150;
        
         (
            IM[7] ,
            IM[6] ,
            IM[8] ,
            IM[9] -->  A_B0 ) = 150;
        
         (
            IM[7] ,
            IM[8] ,
            IM[9] ,
            IM[10] -->  A_B1 ) = 150;
        
         (
            IM[10] ,
            IM[8] ,
            IM[9] ,
            IM[11] -->  A_B2 ) = 150;
        
         (
            IM[10] ,
            IM[6] ,
            IM[9] ,
            IM[11] -->  A_B3 ) = 150;
        
         (
            IM[7] ,
            IM[6] ,
            IM[10] ,
            IM[11] -->  A_B4 ) = 150;
        
         (
            IM[13] ,
            IM[12] ,
            IM[17] ,
            IM[14] -->  A_CD ) = 150;
        
         (
            IM[13] ,
            IM[12] ,
            IM[14] ,
            IM[15] -->  A_C0 ) = 150;
        
         (
            IM[13] ,
            IM[14] ,
            IM[15] ,
            IM[16] -->  A_C1 ) = 150;
        
         (
            IM[16] ,
            IM[14] ,
            IM[15] ,
            IM[17] -->  A_C2 ) = 150;
        
         (
            IM[16] ,
            IM[12] ,
            IM[15] ,
            IM[17] -->  A_C3 ) = 150;
        
         (
            IM[13] ,
            IM[12] ,
            IM[16] ,
            IM[17] -->  A_C4 ) = 150;
        
         (
            IM[19] ,
            IM[18] ,
            IM[20] ,
            IM[23] -->  A_DD ) = 150;
        
         (
            IM[19] ,
            IM[18] ,
            IM[20] ,
            IM[21] -->  A_D0 ) = 150;
        
         (
            IM[19] ,
            IM[20] ,
            IM[21] ,
            IM[22] -->  A_D1 ) = 150;
        
         (
            IM[22] ,
            IM[20] ,
            IM[21] ,
            IM[23] -->  A_D2 ) = 150;
        
         (
            IM[22] ,
            IM[18] ,
            IM[21] ,
            IM[23] -->  A_D3 ) = 150;
        
         (
            IM[19] ,
            IM[18] ,
            IM[23] ,
            IM[22] -->  A_D4 ) = 150;
        
         (
            IM[25] ,
            IM[24] ,
            IM[29] ,
            IM[26] -->  S_AD ) = 150;
        
         (
            IM[25] ,
            IM[24] ,
            IM[26] ,
            IM[27] -->  S_A0 ) = 150;
        
         (
            IM[25] ,
            IM[26] ,
            IM[27] ,
            IM[28] -->  S_A1 ) = 150;
        
         (
            IM[28] ,
            IM[26] ,
            IM[27] ,
            IM[29] -->  S_A2 ) = 150;
        
         (
            IM[28] ,
            IM[24] ,
            IM[27] ,
            IM[29] -->  S_A3 ) = 150;
        
         (
            IM[25] ,
            IM[24] ,
            IM[28] ,
            IM[29] -->  S_A4 ) = 150;
        
         (
            IM[31] ,
            IM[30] ,
            IM[35] ,
            IM[32] -->  S_BD ) = 150;
        
         (
            IM[31] ,
            IM[30] ,
            IM[32] ,
            IM[33] -->  S_B0 ) = 150;
        
         (
            IM[31] ,
            IM[32] ,
            IM[33] ,
            IM[34] -->  S_B1 ) = 150;
        
         (
            IM[34] ,
            IM[32] ,
            IM[33] ,
            IM[35] -->  S_B2 ) = 150;
        
         (
            IM[34] ,
            IM[30] ,
            IM[33] ,
            IM[35] -->  S_B3 ) = 150;
        
         (
            IM[31] ,
            IM[30] ,
            IM[34] ,
            IM[35] -->  S_B4 ) = 150;
        
         (
            IM[37] ,
            IM[36] ,
            IM[41] ,
            IM[38] -->  S_CD ) = 150;
        
         (
            IM[37] ,
            IM[36] ,
            IM[38] ,
            IM[39] -->  S_C0 ) = 150;
        
         (
            IM[37] ,
            IM[38] ,
            IM[39] ,
            IM[40] -->  S_C1 ) = 150;
        
         (
            IM[40] ,
            IM[38] ,
            IM[39] ,
            IM[41] -->  S_C2 ) = 150;
        
         (
            IM[40] ,
            IM[36] ,
            IM[39] ,
            IM[41] -->  S_C3 ) = 150;
        
         (
            IM[37] ,
            IM[36] ,
            IM[40] ,
            IM[41] -->  S_C4 ) = 150;
        
         (
            IM[43] ,
            IM[42] ,
            IM[47] ,
            IM[44] -->  S_DD ) = 150;
        
         (
            IM[43] ,
            IM[42] ,
            IM[44] ,
            IM[45] -->  S_D0 ) = 150;
        
         (
            IM[43] ,
            IM[44] ,
            IM[45] ,
            IM[46] -->  S_D1 ) = 150;
        
         (
            IM[46] ,
            IM[44] ,
            IM[45] ,
            IM[47] -->  S_D2 ) = 150;
        
         (
            IM[46] ,
            IM[42] ,
            IM[45] ,
            IM[47] -->  S_D3 ) = 150;
        
         (
            IM[43] ,
            IM[42] ,
            IM[46] ,
            IM[47] -->  S_D4 ) = 150;
     */   

        ( IM1[4] --> A_CE ) = 132;
        ( G0 --> A_CE ) = 148;
        ( G1 --> A_CE ) = 148;
        ( G2 --> A_CE ) = 148;
        ( G3 --> A_CE ) = 148;
        ( IM1[5] --> A_CE ) = 132;
        ( G4 --> A_CE ) = 148;
        ( G5 --> A_CE ) = 148;
        ( G6 --> A_CE ) = 148;
        ( G7 --> A_CE ) = 148;
        ( IM1[0] --> A_CE ) = 132;
        ( G8 --> A_CE ) = 148;
        ( G9 --> A_CE ) = 148;
        ( G10 --> A_CE ) = 148;
        ( G11 --> A_CE ) = 148;
        ( IM1[1] --> A_CE ) = 132;
        ( G12 --> A_CE ) = 148;
        ( G13 --> A_CE ) = 148;
        ( G14 --> A_CE ) = 148;
        ( G15 --> A_CE ) = 148;
        ( IM1[0] --> A_CLK ) = 136;
        ( G0 --> A_CLK ) = 149;
        ( G1 --> A_CLK ) = 149;
        ( G2 --> A_CLK ) = 149;
        ( G3 --> A_CLK ) = 149;
        ( IM1[1] --> A_CLK ) = 136;
        ( G4 --> A_CLK ) = 149;
        ( G5 --> A_CLK ) = 149;
        ( G6 --> A_CLK ) = 149;
        ( G7 --> A_CLK ) = 149;
        ( IM1[2] --> A_CLK ) = 136;
        ( G8 --> A_CLK ) = 149;
        ( G9 --> A_CLK ) = 149;
        ( G10 --> A_CLK ) = 149;
        ( G11 --> A_CLK ) = 149;
        ( IM1[3] --> A_CLK ) = 136;
        ( G12 --> A_CLK ) = 149;
        ( G13 --> A_CLK ) = 149;
        ( G14 --> A_CLK ) = 149;
        ( G15 --> A_CLK ) = 149;
        ( IM1[6] --> A_M0 ) = 112;
        ( IM1[7] --> A_M0 ) = 112;
        ( G0 --> A_M0 ) = 123;
        ( IM1[8] --> A_M0 ) = 112;
        ( IM1[9] --> A_M0 ) = 112;
        ( G8 --> A_M0 ) = 123;
        ( IM1[6] --> A_M1 ) = 112;
        ( IM1[7] --> A_M1 ) = 112;
        ( G1 --> A_M1 ) = 123;
        ( IM1[8] --> A_M1 ) = 112;
        ( IM1[9] --> A_M1 ) = 112;
        ( G9 --> A_M1 ) = 123;
        ( IM1[6] --> A_M2 ) = 112;
        ( IM1[7] --> A_M2 ) = 112;
        ( G2 --> A_M2 ) = 123;
        ( IM1[8] --> A_M2 ) = 112;
        ( IM1[9] --> A_M2 ) = 112;
        ( G10 --> A_M2 ) = 123;
        ( IM1[6] --> A_M3 ) = 112;
        ( IM1[7] --> A_M3 ) = 112;
        ( G3 --> A_M3 ) = 123;
        ( IM1[8] --> A_M3 ) = 112;
        ( IM1[9] --> A_M3 ) = 112;
        ( G11 --> A_M3 ) = 123;
        ( IM1[2] --> A_RS ) = 132;
        ( G0 --> A_RS ) = 148;
        ( G1 --> A_RS ) = 148;
        ( G2 --> A_RS ) = 148;
        ( G3 --> A_RS ) = 148;
        ( IM1[3] --> A_RS ) = 132;
        ( G4 --> A_RS ) = 148;
        ( G5 --> A_RS ) = 148;
        ( G6 --> A_RS ) = 148;
        ( G7 --> A_RS ) = 148;
        ( IM1[4] --> A_RS ) = 132;
        ( G8 --> A_RS ) = 148;
        ( G9 --> A_RS ) = 148;
        ( G10 --> A_RS ) = 148;
        ( G11 --> A_RS ) = 148;
        ( IM1[5] --> A_RS ) = 132;
        ( G12 --> A_RS ) = 148;
        ( G13 --> A_RS ) = 148;
        ( G14 --> A_RS ) = 148;
        ( G15 --> A_RS ) = 148;
        ( IM1[2] --> S_CE ) = 132;
        ( G0 --> S_CE ) = 148;
        ( G1 --> S_CE ) = 148;
        ( G2 --> S_CE ) = 148;
        ( G3 --> S_CE ) = 148;
        ( IM1[5] --> S_CE ) = 132;
        ( G4 --> S_CE ) = 148;
        ( G5 --> S_CE ) = 148;
        ( G6 --> S_CE ) = 148;
        ( G7 --> S_CE ) = 148;
        ( IM1[0] --> S_CE ) = 132;
        ( G8 --> S_CE ) = 148;
        ( G9 --> S_CE ) = 148;
        ( G10 --> S_CE ) = 148;
        ( G11 --> S_CE ) = 148;
        ( IM1[1] --> S_CE ) = 132;
        ( G12 --> S_CE ) = 148;
        ( G13 --> S_CE ) = 148;
        ( G14 --> S_CE ) = 148;
        ( G15 --> S_CE ) = 148;
        ( IM1[4] --> S_CLK ) = 136;
        ( G0 --> S_CLK ) = 149;
        ( G1 --> S_CLK ) = 149;
        ( G2 --> S_CLK ) = 149;
        ( G3 --> S_CLK ) = 149;
        ( IM1[1] --> S_CLK ) = 136;
        ( G4 --> S_CLK ) = 149;
        ( G5 --> S_CLK ) = 149;
        ( G6 --> S_CLK ) = 149;
        ( G7 --> S_CLK ) = 149;
        ( IM1[2] --> S_CLK ) = 136;
        ( G8 --> S_CLK ) = 149;
        ( G9 --> S_CLK ) = 149;
        ( G10 --> S_CLK ) = 149;
        ( G11 --> S_CLK ) = 149;
        ( IM1[3] --> S_CLK ) = 136;
        ( G12 --> S_CLK ) = 149;
        ( G13 --> S_CLK ) = 149;
        ( G14 --> S_CLK ) = 149;
        ( G15 --> S_CLK ) = 149;
        ( IM1[11] --> S_M0 ) = 112;
        ( IM1[10] --> S_M0 ) = 112;
        ( G4 --> S_M0 ) = 123;
        ( IM1[12] --> S_M0 ) = 112;
        ( IM1[13] --> S_M0 ) = 112;
        ( G12 --> S_M0 ) = 123;
        ( IM1[11] --> S_M1 ) = 112;
        ( IM1[10] --> S_M1 ) = 112;
        ( G5 --> S_M1 ) = 123;
        ( IM1[12] --> S_M1 ) = 112;
        ( IM1[13] --> S_M1 ) = 112;
        ( G13 --> S_M1 ) = 123;
        ( IM1[11] --> S_M2 ) = 112;
        ( IM1[10] --> S_M2 ) = 112;
        ( G6 --> S_M2 ) = 123;
        ( IM1[12] --> S_M2 ) = 112;
        ( IM1[13] --> S_M2 ) = 112;
        ( G14 --> S_M2 ) = 123;
        ( IM1[11] --> S_M3 ) = 112;
        ( IM1[10] --> S_M3 ) = 112;
        ( G7 --> S_M3 ) = 123;
        ( IM1[12] --> S_M3 ) = 112;
        ( IM1[13] --> S_M3 ) = 112;
        ( G15 --> S_M3 ) = 123;
        ( IM1[0] --> S_RS ) = 132;
        ( G0 --> S_RS ) = 148;
        ( G1 --> S_RS ) = 148;
        ( G2 --> S_RS ) = 148;
        ( G3 --> S_RS ) = 148;
        ( IM1[3] --> S_RS ) = 132;
        ( G4 --> S_RS ) = 148;
        ( G5 --> S_RS ) = 148;
        ( G6 --> S_RS ) = 148;
        ( G7 --> S_RS ) = 148;
        ( IM1[4] --> S_RS ) = 132;
        ( G8 --> S_RS ) = 148;
        ( G9 --> S_RS ) = 148;
        ( G10 --> S_RS ) = 148;
        ( G11 --> S_RS ) = 148;
        ( IM1[5] --> S_RS ) = 132;
        ( G12 --> S_RS ) = 148;
        ( G13 --> S_RS ) = 148;
        ( G14 --> S_RS ) = 148;
        ( G15 --> S_RS ) = 148;
        ( IM[1] --> A_AD ) = 78;
        ( IM[0] --> A_AD ) = 78;
        ( IM[5] --> A_AD ) = 78;
        ( IM[2] --> A_AD ) = 78;
        ( IM[1] --> A_A0 ) = 78;
        ( IM[0] --> A_A0 ) = 78;
        ( IM[2] --> A_A0 ) = 78;
        ( IM[3] --> A_A0 ) = 78;
        ( IM[1] --> A_A1 ) = 78;
        ( IM[2] --> A_A1 ) = 78;
        ( IM[3] --> A_A1 ) = 78;
        ( IM[4] --> A_A1 ) = 78;
        ( IM[4] --> A_A2 ) = 78;
        ( IM[2] --> A_A2 ) = 78;
        ( IM[3] --> A_A2 ) = 78;
        ( IM[5] --> A_A2 ) = 78;
        ( IM[4] --> A_A3 ) = 78;
        ( IM[0] --> A_A3 ) = 78;
        ( IM[3] --> A_A3 ) = 78;
        ( IM[5] --> A_A3 ) = 78;
        ( IM[1] --> A_A4 ) = 78;
        ( IM[0] --> A_A4 ) = 78;
        ( IM[4] --> A_A4 ) = 78;
        ( IM[5] --> A_A4 ) = 78;
        ( IM[7] --> A_BD ) = 78;
        ( IM[6] --> A_BD ) = 78;
        ( IM[11] --> A_BD ) = 78;
        ( IM[8] --> A_BD ) = 78;
        ( IM[7] --> A_B0 ) = 78;
        ( IM[6] --> A_B0 ) = 78;
        ( IM[8] --> A_B0 ) = 78;
        ( IM[9] --> A_B0 ) = 78;
        ( IM[7] --> A_B1 ) = 78;
        ( IM[8] --> A_B1 ) = 78;
        ( IM[9] --> A_B1 ) = 78;
        ( IM[10] --> A_B1 ) = 78;
        ( IM[10] --> A_B2 ) = 78;
        ( IM[8] --> A_B2 ) = 78;
        ( IM[9] --> A_B2 ) = 78;
        ( IM[11] --> A_B2 ) = 78;
        ( IM[10] --> A_B3 ) = 78;
        ( IM[6] --> A_B3 ) = 78;
        ( IM[9] --> A_B3 ) = 78;
        ( IM[11] --> A_B3 ) = 78;
        ( IM[7] --> A_B4 ) = 78;
        ( IM[6] --> A_B4 ) = 78;
        ( IM[10] --> A_B4 ) = 78;
        ( IM[11] --> A_B4 ) = 78;
        ( IM[13] --> A_CD ) = 78;
        ( IM[12] --> A_CD ) = 78;
        ( IM[17] --> A_CD ) = 78;
        ( IM[14] --> A_CD ) = 78;
        ( IM[13] --> A_C0 ) = 78;
        ( IM[12] --> A_C0 ) = 78;
        ( IM[14] --> A_C0 ) = 78;
        ( IM[15] --> A_C0 ) = 78;
        ( IM[13] --> A_C1 ) = 78;
        ( IM[14] --> A_C1 ) = 78;
        ( IM[15] --> A_C1 ) = 78;
        ( IM[16] --> A_C1 ) = 78;
        ( IM[16] --> A_C2 ) = 78;
        ( IM[14] --> A_C2 ) = 78;
        ( IM[15] --> A_C2 ) = 78;
        ( IM[17] --> A_C2 ) = 78;
        ( IM[16] --> A_C3 ) = 78;
        ( IM[12] --> A_C3 ) = 78;
        ( IM[15] --> A_C3 ) = 78;
        ( IM[17] --> A_C3 ) = 78;
        ( IM[13] --> A_C4 ) = 78;
        ( IM[12] --> A_C4 ) = 78;
        ( IM[16] --> A_C4 ) = 78;
        ( IM[17] --> A_C4 ) = 78;
        ( IM[19] --> A_DD ) = 78;
        ( IM[18] --> A_DD ) = 78;
        ( IM[20] --> A_DD ) = 78;
        ( IM[23] --> A_DD ) = 78;
        ( IM[19] --> A_D0 ) = 78;
        ( IM[18] --> A_D0 ) = 78;
        ( IM[20] --> A_D0 ) = 78;
        ( IM[21] --> A_D0 ) = 78;
        ( IM[19] --> A_D1 ) = 78;
        ( IM[20] --> A_D1 ) = 78;
        ( IM[21] --> A_D1 ) = 78;
        ( IM[22] --> A_D1 ) = 78;
        ( IM[22] --> A_D2 ) = 78;
        ( IM[20] --> A_D2 ) = 78;
        ( IM[21] --> A_D2 ) = 78;
        ( IM[23] --> A_D2 ) = 78;
        ( IM[22] --> A_D3 ) = 78;
        ( IM[18] --> A_D3 ) = 78;
        ( IM[21] --> A_D3 ) = 78;
        ( IM[23] --> A_D3 ) = 78;
        ( IM[19] --> A_D4 ) = 78;
        ( IM[18] --> A_D4 ) = 78;
        ( IM[23] --> A_D4 ) = 78;
        ( IM[22] --> A_D4 ) = 78;
        ( IM[25] --> S_AD ) = 78;
        ( IM[24] --> S_AD ) = 78;
        ( IM[29] --> S_AD ) = 78;
        ( IM[26] --> S_AD ) = 78;
        ( IM[25] --> S_A0 ) = 78;
        ( IM[24] --> S_A0 ) = 78;
        ( IM[26] --> S_A0 ) = 78;
        ( IM[27] --> S_A0 ) = 78;
        ( IM[25] --> S_A1 ) = 78;
        ( IM[26] --> S_A1 ) = 78;
        ( IM[27] --> S_A1 ) = 78;
        ( IM[28] --> S_A1 ) = 78;
        ( IM[28] --> S_A2 ) = 78;
        ( IM[26] --> S_A2 ) = 78;
        ( IM[27] --> S_A2 ) = 78;
        ( IM[29] --> S_A2 ) = 78;
        ( IM[28] --> S_A3 ) = 78;
        ( IM[24] --> S_A3 ) = 78;
        ( IM[27] --> S_A3 ) = 78;
        ( IM[29] --> S_A3 ) = 78;
        ( IM[25] --> S_A4 ) = 78;
        ( IM[24] --> S_A4 ) = 78;
        ( IM[28] --> S_A4 ) = 78;
        ( IM[29] --> S_A4 ) = 78;
        ( IM[31] --> S_BD ) = 78;
        ( IM[30] --> S_BD ) = 78;
        ( IM[35] --> S_BD ) = 78;
        ( IM[32] --> S_BD ) = 78;
        ( IM[31] --> S_B0 ) = 78;
        ( IM[30] --> S_B0 ) = 78;
        ( IM[32] --> S_B0 ) = 78;
        ( IM[33] --> S_B0 ) = 78;
        ( IM[31] --> S_B1 ) = 78;
        ( IM[32] --> S_B1 ) = 78;
        ( IM[33] --> S_B1 ) = 78;
        ( IM[34] --> S_B1 ) = 78;
        ( IM[34] --> S_B2 ) = 78;
        ( IM[32] --> S_B2 ) = 78;
        ( IM[33] --> S_B2 ) = 78;
        ( IM[35] --> S_B2 ) = 78;
        ( IM[34] --> S_B3 ) = 78;
        ( IM[30] --> S_B3 ) = 78;
        ( IM[33] --> S_B3 ) = 78;
        ( IM[35] --> S_B3 ) = 78;
        ( IM[31] --> S_B4 ) = 78;
        ( IM[30] --> S_B4 ) = 78;
        ( IM[34] --> S_B4 ) = 78;
        ( IM[35] --> S_B4 ) = 78;
        ( IM[37] --> S_CD ) = 78;
        ( IM[36] --> S_CD ) = 78;
        ( IM[41] --> S_CD ) = 78;
        ( IM[38] --> S_CD ) = 78;
        ( IM[37] --> S_C0 ) = 78;
        ( IM[36] --> S_C0 ) = 78;
        ( IM[38] --> S_C0 ) = 78;
        ( IM[39] --> S_C0 ) = 78;
        ( IM[37] --> S_C1 ) = 78;
        ( IM[38] --> S_C1 ) = 78;
        ( IM[39] --> S_C1 ) = 78;
        ( IM[40] --> S_C1 ) = 78;
        ( IM[40] --> S_C2 ) = 78;
        ( IM[38] --> S_C2 ) = 78;
        ( IM[39] --> S_C2 ) = 78;
        ( IM[41] --> S_C2 ) = 78;
        ( IM[40] --> S_C3 ) = 78;
        ( IM[36] --> S_C3 ) = 78;
        ( IM[39] --> S_C3 ) = 78;
        ( IM[41] --> S_C3 ) = 78;
        ( IM[37] --> S_C4 ) = 78;
        ( IM[36] --> S_C4 ) = 78;
        ( IM[40] --> S_C4 ) = 78;
        ( IM[41] --> S_C4 ) = 78;
        ( IM[43] --> S_DD ) = 78;
        ( IM[42] --> S_DD ) = 78;
        ( IM[47] --> S_DD ) = 78;
        ( IM[44] --> S_DD ) = 78;
        ( IM[43] --> S_D0 ) = 78;
        ( IM[42] --> S_D0 ) = 78;
        ( IM[44] --> S_D0 ) = 78;
        ( IM[45] --> S_D0 ) = 78;
        ( IM[43] --> S_D1 ) = 78;
        ( IM[44] --> S_D1 ) = 78;
        ( IM[45] --> S_D1 ) = 78;
        ( IM[46] --> S_D1 ) = 78;
        ( IM[46] --> S_D2 ) = 78;
        ( IM[44] --> S_D2 ) = 78;
        ( IM[45] --> S_D2 ) = 78;
        ( IM[47] --> S_D2 ) = 78;
        ( IM[46] --> S_D3 ) = 78;
        ( IM[42] --> S_D3 ) = 78;
        ( IM[45] --> S_D3 ) = 78;
        ( IM[47] --> S_D3 ) = 78;
        ( IM[43] --> S_D4 ) = 78;
        ( IM[42] --> S_D4 ) = 78;
        ( IM[46] --> S_D4 ) = 78;
        ( IM[47] --> S_D4 ) = 78;

    }

}; // end of structure netlist of SIB

/*******************************************************************************

  Device    [SIB]

  Author    [clwang]

  Abstract  [Configure the configuration bits based on the value of config parameter]

  Revision History:

********************************************************************************/
configuration cfg_routing_arc of SIB // pragma PAP_ARC_REGULAR_ROUTING_CFG_BODY
{
    if ( IM1[6] --> A_M0 )
    { 
        SC_AMMUX_SA0 := 3'b001;
        SC_AMMUX_ZA0 := 2'b01;
    }

    if ( IM1[7] --> A_M0 )
    { 
        SC_AMMUX_SA0 := 3'b010;
        SC_AMMUX_ZA0 := 2'b01;
    }

    if ( G0 --> A_M0 )
    { 
        SC_AMMUX_SA0 := 3'b100;
        SC_AMMUX_ZA0 := 2'b01;
    }

    if ( IM1[8] --> A_M0 )
    { 
        SC_AMMUX_SA0 := 3'b001;
        SC_AMMUX_ZA0 := 2'b10;
    }

    if ( IM1[9] --> A_M0 )
    { 
        SC_AMMUX_SA0 := 3'b010;
        SC_AMMUX_ZA0 := 2'b10;
    }

    if ( G8 --> A_M0 )
    { 
        SC_AMMUX_SA0 := 3'b100;
        SC_AMMUX_ZA0 := 2'b10;
    }

    if ( IM1[6] --> A_M1 )
    { 
        SC_AMMUX_SB0 := 3'b001;
        SC_AMMUX_ZB0 := 2'b01;
    }

    if ( IM1[7] --> A_M1 )
    { 
        SC_AMMUX_SB0 := 3'b010;
        SC_AMMUX_ZB0 := 2'b01;
    }

    if ( G1 --> A_M1 )
    { 
        SC_AMMUX_SB0 := 3'b100;
        SC_AMMUX_ZB0 := 2'b01;
    }

    if ( IM1[8] --> A_M1 )
    { 
        SC_AMMUX_SB0 := 3'b001;
        SC_AMMUX_ZB0 := 2'b10;
    }

    if ( IM1[9] --> A_M1 )
    { 
        SC_AMMUX_SB0 := 3'b010;
        SC_AMMUX_ZB0 := 2'b10;
    }

    if ( G9 --> A_M1 )
    { 
        SC_AMMUX_SB0 := 3'b100;
        SC_AMMUX_ZB0 := 2'b10;
    }

    if ( IM1[6] --> A_M2 )
    { 
        SC_AMMUX_SA1 := 3'b001;
        SC_AMMUX_ZA1 := 2'b01;
    }

    if ( IM1[7] --> A_M2 )
    { 
        SC_AMMUX_SA1 := 3'b010;
        SC_AMMUX_ZA1 := 2'b01;
    }

    if ( G2 --> A_M2 )
    { 
        SC_AMMUX_SA1 := 3'b100;
        SC_AMMUX_ZA1 := 2'b01;
    }

    if ( IM1[8] --> A_M2 )
    { 
        SC_AMMUX_SA1 := 3'b001;
        SC_AMMUX_ZA1 := 2'b10;
    }

    if ( IM1[9] --> A_M2 )
    { 
        SC_AMMUX_SA1 := 3'b010;
        SC_AMMUX_ZA1 := 2'b10;
    }

    if ( G10 --> A_M2 )
    { 
        SC_AMMUX_SA1 := 3'b100;
        SC_AMMUX_ZA1 := 2'b10;
    }

    if ( IM1[6] --> A_M3 )
    { 
        SC_AMMUX_SB1 := 3'b001;
        SC_AMMUX_ZB1 := 2'b01;
    }

    if ( IM1[7] --> A_M3 )
    { 
        SC_AMMUX_SB1 := 3'b010;
        SC_AMMUX_ZB1 := 2'b01;
    }

    if ( G3 --> A_M3 )
    { 
        SC_AMMUX_SB1 := 3'b100;
        SC_AMMUX_ZB1 := 2'b01;
    }

    if ( IM1[8] --> A_M3 )
    { 
        SC_AMMUX_SB1 := 3'b001;
        SC_AMMUX_ZB1 := 2'b10;
    }

    if ( IM1[9] --> A_M3 )
    { 
        SC_AMMUX_SB1 := 3'b010;
        SC_AMMUX_ZB1 := 2'b10;
    }

    if ( G11 --> A_M3 )
    { 
        SC_AMMUX_SB1 := 3'b100;
        SC_AMMUX_ZB1 := 2'b10;
    }

    if ( IM1[11] --> S_M0 )
    { 
        SC_SMMUX_SA0 := 3'b001;
        SC_SMMUX_ZA0 := 2'b01;
    }

    if ( IM1[10] --> S_M0 )
    { 
        SC_SMMUX_SA0 := 3'b010;
        SC_SMMUX_ZA0 := 2'b01;
    }

    if ( G4 --> S_M0 )
    { 
        SC_SMMUX_SA0 := 3'b100;
        SC_SMMUX_ZA0 := 2'b01;
    }

    if ( IM1[12] --> S_M0 )
    { 
        SC_SMMUX_SA0 := 3'b001;
        SC_SMMUX_ZA0 := 2'b10;
    }

    if ( IM1[13] --> S_M0 )
    { 
        SC_SMMUX_SA0 := 3'b010;
        SC_SMMUX_ZA0 := 2'b10;
    }

    if ( G12 --> S_M0 )
    { 
        SC_SMMUX_SA0 := 3'b100;
        SC_SMMUX_ZA0 := 2'b10;
    }

    if ( IM1[11] --> S_M1 )
    { 
        SC_SMMUX_SB0 := 3'b001;
        SC_SMMUX_ZB0 := 2'b01;
    }

    if ( IM1[10] --> S_M1 )
    { 
        SC_SMMUX_SB0 := 3'b010;
        SC_SMMUX_ZB0 := 2'b01;
    }

    if ( G5 --> S_M1 )
    { 
        SC_SMMUX_SB0 := 3'b100;
        SC_SMMUX_ZB0 := 2'b01;
    }

    if ( IM1[12] --> S_M1 )
    { 
        SC_SMMUX_SB0 := 3'b001;
        SC_SMMUX_ZB0 := 2'b10;
    }

    if ( IM1[13] --> S_M1 )
    { 
        SC_SMMUX_SB0 := 3'b010;
        SC_SMMUX_ZB0 := 2'b10;
    }

    if ( G13 --> S_M1 )
    { 
        SC_SMMUX_SB0 := 3'b100;
        SC_SMMUX_ZB0 := 2'b10;
    }

    if ( IM1[11] --> S_M2 )
    { 
        SC_SMMUX_SA1 := 3'b001;
        SC_SMMUX_ZA1 := 2'b01;
    }

    if ( IM1[10] --> S_M2 )
    { 
        SC_SMMUX_SA1 := 3'b010;
        SC_SMMUX_ZA1 := 2'b01;
    }

    if ( G6 --> S_M2 )
    { 
        SC_SMMUX_SA1 := 3'b100;
        SC_SMMUX_ZA1 := 2'b01;
    }

    if ( IM1[12] --> S_M2 )
    { 
        SC_SMMUX_SA1 := 3'b001;
        SC_SMMUX_ZA1 := 2'b10;
    }

    if ( IM1[13] --> S_M2 )
    { 
        SC_SMMUX_SA1 := 3'b010;
        SC_SMMUX_ZA1 := 2'b10;
    }

    if ( G14 --> S_M2 )
    { 
        SC_SMMUX_SA1 := 3'b100;
        SC_SMMUX_ZA1 := 2'b10;
    }

    if ( IM1[11] --> S_M3 )
    { 
        SC_SMMUX_SB1 := 3'b001;
        SC_SMMUX_ZB1 := 2'b01;
    }

    if ( IM1[10] --> S_M3 )
    { 
        SC_SMMUX_SB1 := 3'b010;
        SC_SMMUX_ZB1 := 2'b01;
    }

    if ( G7 --> S_M3 )
    { 
        SC_SMMUX_SB1 := 3'b100;
        SC_SMMUX_ZB1 := 2'b01;
    }

    if ( IM1[12] --> S_M3 )
    { 
        SC_SMMUX_SB1 := 3'b001;
        SC_SMMUX_ZB1 := 2'b10;
    }

    if ( IM1[13] --> S_M3 )
    { 
        SC_SMMUX_SB1 := 3'b010;
        SC_SMMUX_ZB1 := 2'b10;
    }

    if ( G15 --> S_M3 )
    { 
        SC_SMMUX_SB1 := 3'b100;
        SC_SMMUX_ZB1 := 2'b10;
    }

    if ( IM1[2] --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b00001;
        SC_CTRMUX_ZA0 := 4'b0001;
    }

    if ( G0 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b00010;
        SC_CTRMUX_ZA0 := 4'b0001;
    }

    if ( G1 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b00100;
        SC_CTRMUX_ZA0 := 4'b0001;
    }

    if ( G2 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b01000;
        SC_CTRMUX_ZA0 := 4'b0001;
    }

    if ( G3 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b10000;
        SC_CTRMUX_ZA0 := 4'b0001;
    }

    if ( IM1[3] --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b00001;
        SC_CTRMUX_ZA0 := 4'b0010;
    }

    if ( G4 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b00010;
        SC_CTRMUX_ZA0 := 4'b0010;
    }

    if ( G5 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b00100;
        SC_CTRMUX_ZA0 := 4'b0010;
    }

    if ( G6 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b01000;
        SC_CTRMUX_ZA0 := 4'b0010;
    }

    if ( G7 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b10000;
        SC_CTRMUX_ZA0 := 4'b0010;
    }

    if ( IM1[4] --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b00001;
        SC_CTRMUX_ZA0 := 4'b0100;
    }

    if ( G8 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b00010;
        SC_CTRMUX_ZA0 := 4'b0100;
    }

    if ( G9 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b00100;
        SC_CTRMUX_ZA0 := 4'b0100;
    }

    if ( G10 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b01000;
        SC_CTRMUX_ZA0 := 4'b0100;
    }

    if ( G11 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b10000;
        SC_CTRMUX_ZA0 := 4'b0100;
    }

    if ( IM1[5] --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b00001;
        SC_CTRMUX_ZA0 := 4'b1000;
    }

    if ( G12 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b00010;
        SC_CTRMUX_ZA0 := 4'b1000;
    }

    if ( G13 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b00100;
        SC_CTRMUX_ZA0 := 4'b1000;
    }

    if ( G14 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b01000;
        SC_CTRMUX_ZA0 := 4'b1000;
    }

    if ( G15 --> A_RS )
    { 
        SC_CTRMUX_SA0 := 5'b10000;
        SC_CTRMUX_ZA0 := 4'b1000;
    }

    if ( IM1[0] --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b00001;
        SC_CTRMUX_ZB0 := 4'b0001;
    }

    if ( G0 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b00010;
        SC_CTRMUX_ZB0 := 4'b0001;
    }

    if ( G1 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b00100;
        SC_CTRMUX_ZB0 := 4'b0001;
    }

    if ( G2 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b01000;
        SC_CTRMUX_ZB0 := 4'b0001;
    }

    if ( G3 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b10000;
        SC_CTRMUX_ZB0 := 4'b0001;
    }

    if ( IM1[3] --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b00001;
        SC_CTRMUX_ZB0 := 4'b0010;
    }

    if ( G4 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b00010;
        SC_CTRMUX_ZB0 := 4'b0010;
    }

    if ( G5 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b00100;
        SC_CTRMUX_ZB0 := 4'b0010;
    }

    if ( G6 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b01000;
        SC_CTRMUX_ZB0 := 4'b0010;
    }

    if ( G7 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b10000;
        SC_CTRMUX_ZB0 := 4'b0010;
    }

    if ( IM1[4] --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b00001;
        SC_CTRMUX_ZB0 := 4'b0100;
    }

    if ( G8 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b00010;
        SC_CTRMUX_ZB0 := 4'b0100;
    }

    if ( G9 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b00100;
        SC_CTRMUX_ZB0 := 4'b0100;
    }

    if ( G10 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b01000;
        SC_CTRMUX_ZB0 := 4'b0100;
    }

    if ( G11 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b10000;
        SC_CTRMUX_ZB0 := 4'b0100;
    }

    if ( IM1[5] --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b00001;
        SC_CTRMUX_ZB0 := 4'b1000;
    }

    if ( G12 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b00010;
        SC_CTRMUX_ZB0 := 4'b1000;
    }

    if ( G13 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b00100;
        SC_CTRMUX_ZB0 := 4'b1000;
    }

    if ( G14 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b01000;
        SC_CTRMUX_ZB0 := 4'b1000;
    }

    if ( G15 --> S_RS )
    { 
        SC_CTRMUX_SB0 := 5'b10000;
        SC_CTRMUX_ZB0 := 4'b1000;
    }

    if ( IM1[4] --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b00001;
        SC_CTRMUX_ZA1 := 4'b0001;
    }

    if ( G0 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b00010;
        SC_CTRMUX_ZA1 := 4'b0001;
    }

    if ( G1 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b00100;
        SC_CTRMUX_ZA1 := 4'b0001;
    }

    if ( G2 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b01000;
        SC_CTRMUX_ZA1 := 4'b0001;
    }

    if ( G3 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b10000;
        SC_CTRMUX_ZA1 := 4'b0001;
    }

    if ( IM1[5] --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b00001;
        SC_CTRMUX_ZA1 := 4'b0010;
    }

    if ( G4 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b00010;
        SC_CTRMUX_ZA1 := 4'b0010;
    }

    if ( G5 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b00100;
        SC_CTRMUX_ZA1 := 4'b0010;
    }

    if ( G6 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b01000;
        SC_CTRMUX_ZA1 := 4'b0010;
    }

    if ( G7 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b10000;
        SC_CTRMUX_ZA1 := 4'b0010;
    }

    if ( IM1[0] --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b00001;
        SC_CTRMUX_ZA1 := 4'b0100;
    }

    if ( G8 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b00010;
        SC_CTRMUX_ZA1 := 4'b0100;
    }

    if ( G9 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b00100;
        SC_CTRMUX_ZA1 := 4'b0100;
    }

    if ( G10 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b01000;
        SC_CTRMUX_ZA1 := 4'b0100;
    }

    if ( G11 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b10000;
        SC_CTRMUX_ZA1 := 4'b0100;
    }

    if ( IM1[1] --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b00001;
        SC_CTRMUX_ZA1 := 4'b1000;
    }

    if ( G12 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b00010;
        SC_CTRMUX_ZA1 := 4'b1000;
    }

    if ( G13 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b00100;
        SC_CTRMUX_ZA1 := 4'b1000;
    }

    if ( G14 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b01000;
        SC_CTRMUX_ZA1 := 4'b1000;
    }

    if ( G15 --> A_CE )
    { 
        SC_CTRMUX_SA1 := 5'b10000;
        SC_CTRMUX_ZA1 := 4'b1000;
    }

    if ( IM1[2] --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b00001;
        SC_CTRMUX_ZB1 := 4'b0001;
    }

    if ( G0 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b00010;
        SC_CTRMUX_ZB1 := 4'b0001;
    }

    if ( G1 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b00100;
        SC_CTRMUX_ZB1 := 4'b0001;
    }

    if ( G2 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b01000;
        SC_CTRMUX_ZB1 := 4'b0001;
    }

    if ( G3 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b10000;
        SC_CTRMUX_ZB1 := 4'b0001;
    }

    if ( IM1[5] --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b00001;
        SC_CTRMUX_ZB1 := 4'b0010;
    }

    if ( G4 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b00010;
        SC_CTRMUX_ZB1 := 4'b0010;
    }

    if ( G5 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b00100;
        SC_CTRMUX_ZB1 := 4'b0010;
    }

    if ( G6 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b01000;
        SC_CTRMUX_ZB1 := 4'b0010;
    }

    if ( G7 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b10000;
        SC_CTRMUX_ZB1 := 4'b0010;
    }

    if ( IM1[0] --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b00001;
        SC_CTRMUX_ZB1 := 4'b0100;
    }

    if ( G8 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b00010;
        SC_CTRMUX_ZB1 := 4'b0100;
    }

    if ( G9 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b00100;
        SC_CTRMUX_ZB1 := 4'b0100;
    }

    if ( G10 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b01000;
        SC_CTRMUX_ZB1 := 4'b0100;
    }

    if ( G11 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b10000;
        SC_CTRMUX_ZB1 := 4'b0100;
    }

    if ( IM1[1] --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b00001;
        SC_CTRMUX_ZB1 := 4'b1000;
    }

    if ( G12 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b00010;
        SC_CTRMUX_ZB1 := 4'b1000;
    }

    if ( G13 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b00100;
        SC_CTRMUX_ZB1 := 4'b1000;
    }

    if ( G14 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b01000;
        SC_CTRMUX_ZB1 := 4'b1000;
    }

    if ( G15 --> S_CE )
    { 
        SC_CTRMUX_SB1 := 5'b10000;
        SC_CTRMUX_ZB1 := 4'b1000;
    }

    if ( IM1[0] --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b00001;
        SC_Z1CLKMUX_ZA0 := 4'b0001;
    }

    if ( G0 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b00010;
        SC_Z1CLKMUX_ZA0 := 4'b0001;
    }

    if ( G1 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b00100;
        SC_Z1CLKMUX_ZA0 := 4'b0001;
    }

    if ( G2 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b01000;
        SC_Z1CLKMUX_ZA0 := 4'b0001;
    }

    if ( G3 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b10000;
        SC_Z1CLKMUX_ZA0 := 4'b0001;
    }

    if ( IM1[1] --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b00001;
        SC_Z1CLKMUX_ZA0 := 4'b0010;
    }

    if ( G4 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b00010;
        SC_Z1CLKMUX_ZA0 := 4'b0010;
    }

    if ( G5 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b00100;
        SC_Z1CLKMUX_ZA0 := 4'b0010;
    }

    if ( G6 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b01000;
        SC_Z1CLKMUX_ZA0 := 4'b0010;
    }

    if ( G7 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b10000;
        SC_Z1CLKMUX_ZA0 := 4'b0010;
    }

    if ( IM1[2] --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b00001;
        SC_Z1CLKMUX_ZA0 := 4'b0100;
    }

    if ( G8 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b00010;
        SC_Z1CLKMUX_ZA0 := 4'b0100;
    }

    if ( G9 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b00100;
        SC_Z1CLKMUX_ZA0 := 4'b0100;
    }

    if ( G10 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b01000;
        SC_Z1CLKMUX_ZA0 := 4'b0100;
    }

    if ( G11 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b10000;
        SC_Z1CLKMUX_ZA0 := 4'b0100;
    }

    if ( IM1[3] --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b00001;
        SC_Z1CLKMUX_ZA0 := 4'b1000;
    }

    if ( G12 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b00010;
        SC_Z1CLKMUX_ZA0 := 4'b1000;
    }

    if ( G13 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b00100;
        SC_Z1CLKMUX_ZA0 := 4'b1000;
    }

    if ( G14 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b01000;
        SC_Z1CLKMUX_ZA0 := 4'b1000;
    }

    if ( G15 --> A_CLK )
    { 
        SC_Z1CLKMUX_SA0 := 5'b10000;
        SC_Z1CLKMUX_ZA0 := 4'b1000;
    }

    if ( IM1[4] --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b00001;
        SC_Z1CLKMUX_ZB0 := 4'b0001;
    }

    if ( G0 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b00010;
        SC_Z1CLKMUX_ZB0 := 4'b0001;
    }

    if ( G1 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b00100;
        SC_Z1CLKMUX_ZB0 := 4'b0001;
    }

    if ( G2 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b01000;
        SC_Z1CLKMUX_ZB0 := 4'b0001;
    }

    if ( G3 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b10000;
        SC_Z1CLKMUX_ZB0 := 4'b0001;
    }

    if ( IM1[1] --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b00001;
        SC_Z1CLKMUX_ZB0 := 4'b0010;
    }

    if ( G4 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b00010;
        SC_Z1CLKMUX_ZB0 := 4'b0010;
    }

    if ( G5 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b00100;
        SC_Z1CLKMUX_ZB0 := 4'b0010;
    }

    if ( G6 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b01000;
        SC_Z1CLKMUX_ZB0 := 4'b0010;
    }

    if ( G7 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b10000;
        SC_Z1CLKMUX_ZB0 := 4'b0010;
    }

    if ( IM1[2] --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b00001;
        SC_Z1CLKMUX_ZB0 := 4'b0100;
    }

    if ( G8 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b00010;
        SC_Z1CLKMUX_ZB0 := 4'b0100;
    }

    if ( G9 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b00100;
        SC_Z1CLKMUX_ZB0 := 4'b0100;
    }

    if ( G10 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b01000;
        SC_Z1CLKMUX_ZB0 := 4'b0100;
    }

    if ( G11 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b10000;
        SC_Z1CLKMUX_ZB0 := 4'b0100;
    }

    if ( IM1[3] --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b00001;
        SC_Z1CLKMUX_ZB0 := 4'b1000;
    }

    if ( G12 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b00010;
        SC_Z1CLKMUX_ZB0 := 4'b1000;
    }

    if ( G13 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b00100;
        SC_Z1CLKMUX_ZB0 := 4'b1000;
    }

    if ( G14 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b01000;
        SC_Z1CLKMUX_ZB0 := 4'b1000;
    }

    if ( G15 --> S_CLK )
    { 
        SC_Z1CLKMUX_SB0 := 5'b10000;
        SC_Z1CLKMUX_ZB0 := 4'b1000;
    }

    if ( IM[1] --> A_A0 )
    { 
        SC_AA_S0 := 4'b0001;
    }

    if ( IM[0] --> A_A0 )
    { 
        SC_AA_S0 := 4'b0010;
    }

    if ( IM[2] --> A_A0 )
    { 
        SC_AA_S0 := 4'b0100;
    }

    if ( IM[3] --> A_A0 )
    { 
        SC_AA_S0 := 4'b1000;
    }

    if ( IM[4] --> A_A2 )
    { 
        SC_AA_S1 := 4'b0001;
    }

    if ( IM[2] --> A_A2 )
    { 
        SC_AA_S1 := 4'b0010;
    }

    if ( IM[3] --> A_A2 )
    { 
        SC_AA_S1 := 4'b0100;
    }

    if ( IM[5] --> A_A2 )
    { 
        SC_AA_S1 := 4'b1000;
    }

    if ( IM[1] --> A_A1 )
    { 
        SC_AA_S2 := 4'b0001;
    }

    if ( IM[2] --> A_A1 )
    { 
        SC_AA_S2 := 4'b0010;
    }

    if ( IM[3] --> A_A1 )
    { 
        SC_AA_S2 := 4'b0100;
    }

    if ( IM[4] --> A_A1 )
    { 
        SC_AA_S2 := 4'b1000;
    }

    if ( IM[4] --> A_A3 )
    { 
        SC_AA_S3 := 4'b0001;
    }

    if ( IM[0] --> A_A3 )
    { 
        SC_AA_S3 := 4'b0010;
    }

    if ( IM[3] --> A_A3 )
    { 
        SC_AA_S3 := 4'b0100;
    }

    if ( IM[5] --> A_A3 )
    { 
        SC_AA_S3 := 4'b1000;
    }

    if ( IM[7] --> A_B0 )
    { 
        SC_AB_S0 := 4'b0001;
    }

    if ( IM[6] --> A_B0 )
    { 
        SC_AB_S0 := 4'b0010;
    }

    if ( IM[8] --> A_B0 )
    { 
        SC_AB_S0 := 4'b0100;
    }

    if ( IM[9] --> A_B0 )
    { 
        SC_AB_S0 := 4'b1000;
    }

    if ( IM[7] --> A_B1 )
    { 
        SC_AB_S1 := 4'b0001;
    }

    if ( IM[8] --> A_B1 )
    { 
        SC_AB_S1 := 4'b0010;
    }

    if ( IM[9] --> A_B1 )
    { 
        SC_AB_S1 := 4'b0100;
    }

    if ( IM[10] --> A_B1 )
    { 
        SC_AB_S1 := 4'b1000;
    }

    if ( IM[10] --> A_B2 )
    { 
        SC_AB_S2 := 4'b0001;
    }

    if ( IM[8] --> A_B2 )
    { 
        SC_AB_S2 := 4'b0010;
    }

    if ( IM[9] --> A_B2 )
    { 
        SC_AB_S2 := 4'b0100;
    }

    if ( IM[11] --> A_B2 )
    { 
        SC_AB_S2 := 4'b1000;
    }

    if ( IM[10] --> A_B3 )
    { 
        SC_AB_S3 := 4'b0001;
    }

    if ( IM[6] --> A_B3 )
    { 
        SC_AB_S3 := 4'b0010;
    }

    if ( IM[9] --> A_B3 )
    { 
        SC_AB_S3 := 4'b0100;
    }

    if ( IM[11] --> A_B3 )
    { 
        SC_AB_S3 := 4'b1000;
    }

    if ( IM[13] --> A_C0 )
    { 
        SC_AC_S0 := 4'b0001;
    }

    if ( IM[12] --> A_C0 )
    { 
        SC_AC_S0 := 4'b0010;
    }

    if ( IM[14] --> A_C0 )
    { 
        SC_AC_S0 := 4'b0100;
    }

    if ( IM[15] --> A_C0 )
    { 
        SC_AC_S0 := 4'b1000;
    }

    if ( IM[13] --> A_C1 )
    { 
        SC_AC_S1 := 4'b0001;
    }

    if ( IM[14] --> A_C1 )
    { 
        SC_AC_S1 := 4'b0010;
    }

    if ( IM[15] --> A_C1 )
    { 
        SC_AC_S1 := 4'b0100;
    }

    if ( IM[16] --> A_C1 )
    { 
        SC_AC_S1 := 4'b1000;
    }

    if ( IM[16] --> A_C2 )
    { 
        SC_AC_S2 := 4'b0001;
    }

    if ( IM[14] --> A_C2 )
    { 
        SC_AC_S2 := 4'b0010;
    }

    if ( IM[15] --> A_C2 )
    { 
        SC_AC_S2 := 4'b0100;
    }

    if ( IM[17] --> A_C2 )
    { 
        SC_AC_S2 := 4'b1000;
    }

    if ( IM[16] --> A_C3 )
    { 
        SC_AC_S3 := 4'b0001;
    }

    if ( IM[12] --> A_C3 )
    { 
        SC_AC_S3 := 4'b0010;
    }

    if ( IM[15] --> A_C3 )
    { 
        SC_AC_S3 := 4'b0100;
    }

    if ( IM[17] --> A_C3 )
    { 
        SC_AC_S3 := 4'b1000;
    }

    if ( IM[19] --> A_D0 )
    { 
        SC_AD_S0 := 4'b0001;
    }

    if ( IM[18] --> A_D0 )
    { 
        SC_AD_S0 := 4'b0010;
    }

    if ( IM[20] --> A_D0 )
    { 
        SC_AD_S0 := 4'b0100;
    }

    if ( IM[21] --> A_D0 )
    { 
        SC_AD_S0 := 4'b1000;
    }

    if ( IM[19] --> A_D1 )
    { 
        SC_AD_S1 := 4'b0001;
    }

    if ( IM[20] --> A_D1 )
    { 
        SC_AD_S1 := 4'b0010;
    }

    if ( IM[21] --> A_D1 )
    { 
        SC_AD_S1 := 4'b0100;
    }

    if ( IM[22] --> A_D1 )
    { 
        SC_AD_S1 := 4'b1000;
    }

    if ( IM[22] --> A_D2 )
    { 
        SC_AD_S2 := 4'b0001;
    }

    if ( IM[20] --> A_D2 )
    { 
        SC_AD_S2 := 4'b0010;
    }

    if ( IM[21] --> A_D2 )
    { 
        SC_AD_S2 := 4'b0100;
    }

    if ( IM[23] --> A_D2 )
    { 
        SC_AD_S2 := 4'b1000;
    }

    if ( IM[22] --> A_D3 )
    { 
        SC_AD_S3 := 4'b0001;
    }

    if ( IM[18] --> A_D3 )
    { 
        SC_AD_S3 := 4'b0010;
    }

    if ( IM[21] --> A_D3 )
    { 
        SC_AD_S3 := 4'b0100;
    }

    if ( IM[23] --> A_D3 )
    { 
        SC_AD_S3 := 4'b1000;
    }

    if ( IM[25] --> S_A1 )
    { 
        SC_SA_S0 := 4'b0001;
    }

    if ( IM[26] --> S_A1 )
    { 
        SC_SA_S0 := 4'b0010;
    }

    if ( IM[27] --> S_A1 )
    { 
        SC_SA_S0 := 4'b0100;
    }

    if ( IM[28] --> S_A1 )
    { 
        SC_SA_S0 := 4'b1000;
    }

    if ( IM[28] --> S_A3 )
    { 
        SC_SA_S1 := 4'b0001;
    }

    if ( IM[24] --> S_A3 )
    { 
        SC_SA_S1 := 4'b0010;
    }

    if ( IM[27] --> S_A3 )
    { 
        SC_SA_S1 := 4'b0100;
    }

    if ( IM[29] --> S_A3 )
    { 
        SC_SA_S1 := 4'b1000;
    }

    if ( IM[25] --> S_A0 )
    { 
        SC_SA_S2 := 4'b0001;
    }

    if ( IM[24] --> S_A0 )
    { 
        SC_SA_S2 := 4'b0010;
    }

    if ( IM[26] --> S_A0 )
    { 
        SC_SA_S2 := 4'b0100;
    }

    if ( IM[27] --> S_A0 )
    { 
        SC_SA_S2 := 4'b1000;
    }

    if ( IM[28] --> S_A2 )
    { 
        SC_SA_S3 := 4'b0001;
    }

    if ( IM[26] --> S_A2 )
    { 
        SC_SA_S3 := 4'b0010;
    }

    if ( IM[27] --> S_A2 )
    { 
        SC_SA_S3 := 4'b0100;
    }

    if ( IM[29] --> S_A2 )
    { 
        SC_SA_S3 := 4'b1000;
    }

    if ( IM[31] --> S_B0 )
    { 
        SC_SB_S0 := 4'b0001;
    }

    if ( IM[30] --> S_B0 )
    { 
        SC_SB_S0 := 4'b0010;
    }

    if ( IM[32] --> S_B0 )
    { 
        SC_SB_S0 := 4'b0100;
    }

    if ( IM[33] --> S_B0 )
    { 
        SC_SB_S0 := 4'b1000;
    }

    if ( IM[31] --> S_B1 )
    { 
        SC_SB_S1 := 4'b0001;
    }

    if ( IM[32] --> S_B1 )
    { 
        SC_SB_S1 := 4'b0010;
    }

    if ( IM[33] --> S_B1 )
    { 
        SC_SB_S1 := 4'b0100;
    }

    if ( IM[34] --> S_B1 )
    { 
        SC_SB_S1 := 4'b1000;
    }

    if ( IM[34] --> S_B2 )
    { 
        SC_SB_S2 := 4'b0001;
    }

    if ( IM[32] --> S_B2 )
    { 
        SC_SB_S2 := 4'b0010;
    }

    if ( IM[33] --> S_B2 )
    { 
        SC_SB_S2 := 4'b0100;
    }

    if ( IM[35] --> S_B2 )
    { 
        SC_SB_S2 := 4'b1000;
    }

    if ( IM[34] --> S_B3 )
    { 
        SC_SB_S3 := 4'b0001;
    }

    if ( IM[30] --> S_B3 )
    { 
        SC_SB_S3 := 4'b0010;
    }

    if ( IM[33] --> S_B3 )
    { 
        SC_SB_S3 := 4'b0100;
    }

    if ( IM[35] --> S_B3 )
    { 
        SC_SB_S3 := 4'b1000;
    }

    if ( IM[37] --> S_C0 )
    { 
        SC_SC_S0 := 4'b0001;
    }

    if ( IM[36] --> S_C0 )
    { 
        SC_SC_S0 := 4'b0010;
    }

    if ( IM[38] --> S_C0 )
    { 
        SC_SC_S0 := 4'b0100;
    }

    if ( IM[39] --> S_C0 )
    { 
        SC_SC_S0 := 4'b1000;
    }

    if ( IM[37] --> S_C1 )
    { 
        SC_SC_S1 := 4'b0001;
    }

    if ( IM[38] --> S_C1 )
    { 
        SC_SC_S1 := 4'b0010;
    }

    if ( IM[39] --> S_C1 )
    { 
        SC_SC_S1 := 4'b0100;
    }

    if ( IM[40] --> S_C1 )
    { 
        SC_SC_S1 := 4'b1000;
    }

    if ( IM[40] --> S_C2 )
    { 
        SC_SC_S2 := 4'b0001;
    }

    if ( IM[38] --> S_C2 )
    { 
        SC_SC_S2 := 4'b0010;
    }

    if ( IM[39] --> S_C2 )
    { 
        SC_SC_S2 := 4'b0100;
    }

    if ( IM[41] --> S_C2 )
    { 
        SC_SC_S2 := 4'b1000;
    }

    if ( IM[40] --> S_C3 )
    { 
        SC_SC_S3 := 4'b0001;
    }

    if ( IM[36] --> S_C3 )
    { 
        SC_SC_S3 := 4'b0010;
    }

    if ( IM[39] --> S_C3 )
    { 
        SC_SC_S3 := 4'b0100;
    }

    if ( IM[41] --> S_C3 )
    { 
        SC_SC_S3 := 4'b1000;
    }

    if ( IM[43] --> S_D0 )
    { 
        SC_SD_S0 := 4'b0001;
    }

    if ( IM[42] --> S_D0 )
    { 
        SC_SD_S0 := 4'b0010;
    }

    if ( IM[44] --> S_D0 )
    { 
        SC_SD_S0 := 4'b0100;
    }

    if ( IM[45] --> S_D0 )
    { 
        SC_SD_S0 := 4'b1000;
    }

    if ( IM[43] --> S_D1 )
    { 
        SC_SD_S1 := 4'b0001;
    }

    if ( IM[44] --> S_D1 )
    { 
        SC_SD_S1 := 4'b0010;
    }

    if ( IM[45] --> S_D1 )
    { 
        SC_SD_S1 := 4'b0100;
    }

    if ( IM[46] --> S_D1 )
    { 
        SC_SD_S1 := 4'b1000;
    }

    if ( IM[46] --> S_D2 )
    { 
        SC_SD_S2 := 4'b0001;
    }

    if ( IM[44] --> S_D2 )
    { 
        SC_SD_S2 := 4'b0010;
    }

    if ( IM[45] --> S_D2 )
    { 
        SC_SD_S2 := 4'b0100;
    }

    if ( IM[47] --> S_D2 )
    { 
        SC_SD_S2 := 4'b1000;
    }

    if ( IM[46] --> S_D3 )
    { 
        SC_SD_S3 := 4'b0001;
    }

    if ( IM[42] --> S_D3 )
    { 
        SC_SD_S3 := 4'b0010;
    }

    if ( IM[45] --> S_D3 )
    { 
        SC_SD_S3 := 4'b0100;
    }

    if ( IM[47] --> S_D3 )
    { 
        SC_SD_S3 := 4'b1000;
    }

    if ( IM[1] --> A_A4 )
    { 
        SC_AAD_S0 := 4'b0001;
    }

    if ( IM[0] --> A_A4 )
    { 
        SC_AAD_S0 := 4'b0010;
    }

    if ( IM[4] --> A_A4 )
    { 
        SC_AAD_S0 := 4'b0100;
    }

    if ( IM[5] --> A_A4 )
    { 
        SC_AAD_S0 := 4'b1000;
    }

    if ( IM[1] --> A_AD )
    { 
        SC_AAD_S1 := 4'b0001;
    }

    if ( IM[0] --> A_AD )
    { 
        SC_AAD_S1 := 4'b0010;
    }

    if ( IM[5] --> A_AD )
    { 
        SC_AAD_S1 := 4'b0100;
    }

    if ( IM[2] --> A_AD )
    { 
        SC_AAD_S1 := 4'b1000;
    }

    if ( IM[25] --> S_A4 )
    { 
        SC_AAD_S2 := 4'b0001;
    }

    if ( IM[24] --> S_A4 )
    { 
        SC_AAD_S2 := 4'b0010;
    }

    if ( IM[28] --> S_A4 )
    { 
        SC_AAD_S2 := 4'b0100;
    }

    if ( IM[29] --> S_A4 )
    { 
        SC_AAD_S2 := 4'b1000;
    }

    if ( IM[25] --> S_AD )
    { 
        SC_AAD_S3 := 4'b0001;
    }

    if ( IM[24] --> S_AD )
    { 
        SC_AAD_S3 := 4'b0010;
    }

    if ( IM[29] --> S_AD )
    { 
        SC_AAD_S3 := 4'b0100;
    }

    if ( IM[26] --> S_AD )
    { 
        SC_AAD_S3 := 4'b1000;
    }

    if ( IM[7] --> A_B4 )
    { 
        SC_BBD_S0 := 4'b0001;
    }

    if ( IM[6] --> A_B4 )
    { 
        SC_BBD_S0 := 4'b0010;
    }

    if ( IM[10] --> A_B4 )
    { 
        SC_BBD_S0 := 4'b0100;
    }

    if ( IM[11] --> A_B4 )
    { 
        SC_BBD_S0 := 4'b1000;
    }

    if ( IM[7] --> A_BD )
    { 
        SC_BBD_S1 := 4'b0001;
    }

    if ( IM[6] --> A_BD )
    { 
        SC_BBD_S1 := 4'b0010;
    }

    if ( IM[11] --> A_BD )
    { 
        SC_BBD_S1 := 4'b0100;
    }

    if ( IM[8] --> A_BD )
    { 
        SC_BBD_S1 := 4'b1000;
    }

    if ( IM[31] --> S_B4 )
    { 
        SC_BBD_S2 := 4'b0001;
    }

    if ( IM[30] --> S_B4 )
    { 
        SC_BBD_S2 := 4'b0010;
    }

    if ( IM[34] --> S_B4 )
    { 
        SC_BBD_S2 := 4'b0100;
    }

    if ( IM[35] --> S_B4 )
    { 
        SC_BBD_S2 := 4'b1000;
    }

    if ( IM[31] --> S_BD )
    { 
        SC_BBD_S3 := 4'b0001;
    }

    if ( IM[30] --> S_BD )
    { 
        SC_BBD_S3 := 4'b0010;
    }

    if ( IM[35] --> S_BD )
    { 
        SC_BBD_S3 := 4'b0100;
    }

    if ( IM[32] --> S_BD )
    { 
        SC_BBD_S3 := 4'b1000;
    }

    if ( IM[13] --> A_C4 )
    { 
        SC_CCD_S0 := 4'b0001;
    }

    if ( IM[12] --> A_C4 )
    { 
        SC_CCD_S0 := 4'b0010;
    }

    if ( IM[16] --> A_C4 )
    { 
        SC_CCD_S0 := 4'b0100;
    }

    if ( IM[17] --> A_C4 )
    { 
        SC_CCD_S0 := 4'b1000;
    }

    if ( IM[13] --> A_CD )
    { 
        SC_CCD_S1 := 4'b0001;
    }

    if ( IM[12] --> A_CD )
    { 
        SC_CCD_S1 := 4'b0010;
    }

    if ( IM[17] --> A_CD )
    { 
        SC_CCD_S1 := 4'b0100;
    }

    if ( IM[14] --> A_CD )
    { 
        SC_CCD_S1 := 4'b1000;
    }

    if ( IM[37] --> S_C4 )
    { 
        SC_CCD_S2 := 4'b0001;
    }

    if ( IM[36] --> S_C4 )
    { 
        SC_CCD_S2 := 4'b0010;
    }

    if ( IM[40] --> S_C4 )
    { 
        SC_CCD_S2 := 4'b0100;
    }

    if ( IM[41] --> S_C4 )
    { 
        SC_CCD_S2 := 4'b1000;
    }

    if ( IM[37] --> S_CD )
    { 
        SC_CCD_S3 := 4'b0001;
    }

    if ( IM[36] --> S_CD )
    { 
        SC_CCD_S3 := 4'b0010;
    }

    if ( IM[41] --> S_CD )
    { 
        SC_CCD_S3 := 4'b0100;
    }

    if ( IM[38] --> S_CD )
    { 
        SC_CCD_S3 := 4'b1000;
    }

    if ( IM[19] --> A_DD )
    { 
        SC_DDD_S0 := 4'b0001;
    }

    if ( IM[18] --> A_DD )
    { 
        SC_DDD_S0 := 4'b0010;
    }

    if ( IM[20] --> A_DD )
    { 
        SC_DDD_S0 := 4'b0100;
    }

    if ( IM[23] --> A_DD )
    { 
        SC_DDD_S0 := 4'b1000;
    }

    if ( IM[19] --> A_D4 )
    { 
        SC_DDD_S1 := 4'b0001;
    }

    if ( IM[18] --> A_D4 )
    { 
        SC_DDD_S1 := 4'b0010;
    }

    if ( IM[23] --> A_D4 )
    { 
        SC_DDD_S1 := 4'b0100;
    }

    if ( IM[22] --> A_D4 )
    { 
        SC_DDD_S1 := 4'b1000;
    }

    if ( IM[43] --> S_D4 )
    { 
        SC_DDD_S2 := 4'b0001;
    }

    if ( IM[42] --> S_D4 )
    { 
        SC_DDD_S2 := 4'b0010;
    }

    if ( IM[46] --> S_D4 )
    { 
        SC_DDD_S2 := 4'b0100;
    }

    if ( IM[47] --> S_D4 )
    { 
        SC_DDD_S2 := 4'b1000;
    }

    if ( IM[43] --> S_DD )
    { 
        SC_DDD_S3 := 4'b0001;
    }

    if ( IM[42] --> S_DD )
    { 
        SC_DDD_S3 := 4'b0010;
    }

    if ( IM[47] --> S_DD )
    { 
        SC_DDD_S3 := 4'b0100;
    }

    if ( IM[44] --> S_DD )
    { 
        SC_DDD_S3 := 4'b1000;
    }

}; // end of configuration cfg of SIB










