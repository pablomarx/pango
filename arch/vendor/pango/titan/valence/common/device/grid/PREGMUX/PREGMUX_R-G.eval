*****************************************************************

  Device    [PREGMUX_R]

  Author    [clwang]

  Abstract  []

  Revision History:

********************************************************************************/
grid
device PREGMUX_R
{

    parameter
    (
        // These are the config parameters that are used to enable formal flow. They
        // should be present in the declaration only if a MACRO is set. In normal
        // implementation flow they should be turned off.
        // FIXME


    );
    port
    (
        config input SC_PRECLK_LR[15:0] = 16'b0 
        /*pragma PAP_CFG_BIT_NAME = "SC_PRECLK_LR<15>, SC_PRECLK_LR<14>, SC_PRECLK_LR<13>, SC_PRECLK_LR<12>, SC_PRECLK_LR<11>, SC_PRECLK_LR<10>, SC_PRECLK_LR<9>, SC_PRECLK_LR<8>, SC_PRECLK_LR<7>, SC_PRECLK_LR<6>, SC_PRECLK_LR<5>, SC_PRECLK_LR<4>, SC_PRECLK_LR<3>, SC_PRECLK_LR<2>, SC_PRECLK_LR<1>, SC_PRECLK_LR<0>" */,
        
        input  QUAD_0_0_RX   = 1'b1, 
        input  QUAD_0_0_TX   = 1'b1, 
        input  QUAD_0_REFCLK = 1'b1, 
        input  QUAD_1_0_RX   = 1'b1,
        input  QUAD_1_0_TX   = 1'b1, 
        input  QUAD_1_REFCLK = 1'b1, 
        input  QUAD_2_0_RX   = 1'b1, 
        input  QUAD_2_0_TX   = 1'b1,
        input  QUAD_2_REFCLK = 1'b1, 
        input  QUAD_3_0_RX   = 1'b1, 
        input  QUAD_3_0_TX   = 1'b1, 
        input  QUAD_3_REFCLK = 1'b1,        
        output CLKIN[7:0],
        input  PCLK_14[1:0] = 2'b11,
        input  PCLK_15[1:0] = 2'b11
    );

}// end of device PREGMUX_R

/*******************************************************************************

  Device    [PREGMUX_R]

  Author    []

  Abstract  [The structure netlist of PREGMUX_R is described in the similar fashion 
             as in HDL. In unit instantiation statement, the formal pin may be 
             connected to net which is declared explicitly. 
             
             In Valence, the connection can also be made from formal pin to other 
             pin or port, in which case Valence compiler shall create the net to 
             fulfil the connection. The built-in naming convention is kicked in 
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/
structure netlist of PREGMUX_R
{
    // Wires for input ports


   // Wires connecting to output ports
    routing
    {
        /*(
             QUAD_0_0_TX ,
             QUAD_2_0_RX ,
             QUAD_2_REFCLK ,
             PCLK_15[1] -->  CLKIN[0] ) = 150;

        (
             QUAD_0_0_RX ,
             QUAD_2_0_TX ,
             QUAD_3_0_TX ,
             PCLK_15[0] -->  CLKIN[1] ) = 150;

        (
             QUAD_0_REFCLK ,
             QUAD_1_REFCLK ,
             QUAD_3_0_RX ,
             PCLK_14[1] -->  CLKIN[2] ) = 150;

        (
             QUAD_1_0_TX ,
             QUAD_1_0_RX ,
             QUAD_3_REFCLK ,
             PCLK_14[0] -->  CLKIN[3] ) = 150;

        (
             QUAD_1_0_TX ,
             QUAD_1_0_RX ,
             QUAD_3_REFCLK ,
             PCLK_14[0] -->  CLKIN[4] ) = 150;

        (
             QUAD_0_REFCLK ,
             QUAD_1_REFCLK ,
             QUAD_3_0_RX ,
             PCLK_14[1] -->  CLKIN[5] ) = 150;

        (
             QUAD_0_0_RX ,
             QUAD_2_0_TX ,
             QUAD_3_0_TX ,
             PCLK_15[0] -->  CLKIN[6] ) = 150;

        (
             QUAD_0_0_TX ,
             QUAD_2_0_RX ,
             QUAD_2_REFCLK ,
             PCLK_15[1] -->  CLKIN[7] ) = 150;*/

        ( QUAD_0_0_TX --> CLKIN[0] ) = 144;
        ( QUAD_2_0_RX --> CLKIN[0] ) = 144;
        ( QUAD_2_REFCLK --> CLKIN[0] ) = 144;
        ( PCLK_15[1] --> CLKIN[0] ) = 239;
        ( QUAD_0_0_RX --> CLKIN[1] ) = 144;
        ( QUAD_2_0_TX --> CLKIN[1] ) = 144;
        ( QUAD_3_0_TX --> CLKIN[1] ) = 144;
        ( PCLK_15[0] --> CLKIN[1] ) = 239;
        ( QUAD_0_REFCLK --> CLKIN[2] ) = 144;
        ( QUAD_1_REFCLK --> CLKIN[2] ) = 144;
        ( QUAD_3_0_RX --> CLKIN[2] ) = 144;
        ( PCLK_14[1] --> CLKIN[2] ) = 239;
        ( QUAD_1_0_TX --> CLKIN[3] ) = 144;
        ( QUAD_1_0_RX --> CLKIN[3] ) = 144;
        ( QUAD_3_REFCLK --> CLKIN[3] ) = 144;
        ( PCLK_14[0] --> CLKIN[3] ) = 239;
        ( QUAD_1_0_TX --> CLKIN[4] ) = 144;
        ( QUAD_1_0_RX --> CLKIN[4] ) = 144;
        ( QUAD_3_REFCLK --> CLKIN[4] ) = 144;
        ( PCLK_14[0] --> CLKIN[4] ) = 239;
        ( QUAD_0_REFCLK --> CLKIN[5] ) = 144;
        ( QUAD_1_REFCLK --> CLKIN[5] ) = 144;
        ( QUAD_3_0_RX --> CLKIN[5] ) = 144;
        ( PCLK_14[1] --> CLKIN[5] ) = 239;
        ( QUAD_0_0_RX --> CLKIN[6] ) = 144;
        ( QUAD_2_0_TX --> CLKIN[6] ) = 144;
        ( QUAD_3_0_TX --> CLKIN[6] ) = 144;
        ( PCLK_15[0] --> CLKIN[6] ) = 239;
        ( QUAD_0_0_TX --> CLKIN[7] ) = 144;
        ( QUAD_2_0_RX --> CLKIN[7] ) = 144;
        ( QUAD_2_REFCLK --> CLKIN[7] ) = 144;
        ( PCLK_15[1] --> CLKIN[7] ) = 239;
    }

   // Internal wires



}; // end of structure netlist of PREGMUX_R

/*******************************************************************************

  Device    [PREGMUX_R]

  Author    []

  Abstract  [Configure the configuration bits based on the value of config parameter]

  Revision History:

********************************************************************************/
configuration cfg of PREGMUX_R
{
    if ( QUAD_0_0_TX --> CLKIN[0] )
    {
        SC_PRECLK_LR[1:0] := 2'b00;
    }

    if ( QUAD_2_0_RX --> CLKIN[0] )
    {
        SC_PRECLK_LR[1:0] := 2'b01;
    }

    if ( QUAD_2_REFCLK --> CLKIN[0] )
    {
        SC_PRECLK_LR[1:0] := 2'b10;
    }

    if ( PCLK_15[1] --> CLKIN[0] )
    {
        SC_PRECLK_LR[1:0] := 2'b11;
    }

    if ( QUAD_0_0_RX --> CLKIN[1] )
    {
        SC_PRECLK_LR[3:2] := 2'b00;
    }

    if ( QUAD_2_0_TX --> CLKIN[1] )
    {
        SC_PRECLK_LR[3:2] := 2'b01;
    }

    if ( QUAD_3_0_TX --> CLKIN[1] )
    {
        SC_PRECLK_LR[3:2] := 2'b10;
    }

    if ( PCLK_15[0] --> CLKIN[1] )
    {
        SC_PRECLK_LR[3:2] := 2'b11;
    }

    if ( QUAD_0_REFCLK --> CLKIN[2] )
    {
        SC_PRECLK_LR[5:4] := 2'b00;
    }

    if ( QUAD_1_REFCLK --> CLKIN[2] )
    {
        SC_PRECLK_LR[5:4] := 2'b01;
    }

    if ( QUAD_3_0_RX --> CLKIN[2] )
    {
        SC_PRECLK_LR[5:4] := 2'b10;
    }

    if ( PCLK_14[1] --> CLKIN[2] )
    {
        SC_PRECLK_LR[5:4] := 2'b11;
    }

    if ( QUAD_1_0_TX --> CLKIN[3] )
    {
        SC_PRECLK_LR[7:6] := 2'b00;
    }

    if ( QUAD_1_0_RX --> CLKIN[3] )
    {
        SC_PRECLK_LR[7:6] := 2'b01;
    }

    if ( QUAD_3_REFCLK --> CLKIN[3] )
    {
        SC_PRECLK_LR[7:6] := 2'b10;
    }

    if ( PCLK_14[0] --> CLKIN[3] )
    {
        SC_PRECLK_LR[7:6] := 2'b11;
    }

    if ( QUAD_1_0_TX --> CLKIN[4] )
    {
        SC_PRECLK_LR[9:8] := 2'b00;
    }

    if ( QUAD_1_0_RX --> CLKIN[4] )
    {
        SC_PRECLK_LR[9:8] := 2'b01;
    }

    if ( QUAD_3_REFCLK --> CLKIN[4] )
    {
        SC_PRECLK_LR[9:8] := 2'b10;
    }

    if ( PCLK_14[0] --> CLKIN[4] )
    {
        SC_PRECLK_LR[9:8] := 2'b11;
    }

    if ( QUAD_0_REFCLK --> CLKIN[5] )
    {
        SC_PRECLK_LR[11:10] := 2'b00;
    }

    if ( QUAD_1_REFCLK --> CLKIN[5] )
    {
        SC_PRECLK_LR[11:10] := 2'b01;
    }

    if ( QUAD_3_0_RX --> CLKIN[5] )
    {
        SC_PRECLK_LR[11:10] := 2'b10;
    }

    if ( PCLK_14[1] --> CLKIN[5] )
    {
        SC_PRECLK_LR[11:10] := 2'b11;
    }

    if ( QUAD_0_0_RX --> CLKIN[6] )
    {
        SC_PRECLK_LR[13:12] := 2'b00;
    }

    if ( QUAD_2_0_TX --> CLKIN[6] )
    {
        SC_PRECLK_LR[13:12] := 2'b01;
    }

    if ( QUAD_3_0_TX --> CLKIN[6] )
    {
        SC_PRECLK_LR[13:12] := 2'b10;
    }

    if ( PCLK_15[0] --> CLKIN[6] )
    {
        SC_PRECLK_LR[13:12] := 2'b11;
    }

    if ( QUAD_0_0_TX --> CLKIN[7] )
    {
        SC_PRECLK_LR[15:14] := 2'b00;
    }

    if ( QUAD_2_0_RX --> CLKIN[7] )
    {
        SC_PRECLK_LR[15:14] := 2'b01;
    }

    if ( QUAD_2_REFCLK --> CLKIN[7] )
    {
        SC_PRECLK_LR[15:14] := 2'b10;
    }

    if ( PCLK_15[1] --> CLKIN[7] )
    {
        SC_PRECLK_LR[15:14] := 2'b11;
    }

}; // end of configuration cfg of PREGMUX_R





