*******************************************************************

  Device    [DQS]

  Author    [tangqiang]

  Abstract  []

  Revision History:

********************************************************************************/
symbol logsym_0 of DQS // pragma PAP_ARC_COLOR="210:45:45"
{
    // The bounding box
    generate ( 50 # 460 );
    //
    // Poloygon declaration
    //
    shape
    [ 0, 0 ]  ->  [ , 460 ]  <  
                               
                               SAMPLE_CLK_DIV      @[ ,430],                                                                  
                               
                               IFIFO_WADDR[0]      @[ ,44],
                               IFIFO_WADDR[1]      @[ ,40],
                               IFIFO_WADDR[2]      @[ ,36],
                               
                               IFIFO_RADDR[0]      @[ ,32],
                               IFIFO_RADDR[1]      @[ ,28],
                               IFIFO_RADDR[2]      @[ ,24],                                                              


                               DQSI_DEL            @[ ,20],
                               WCLK_DEL            @[ ,16],                                                  
                               WCLK                @[ ,12],
                               PROBE_CLK           @[ ,8],
                               SAMPLE_CLK          @[ ,4]      
                                                                                                                 
                             >

              ->  [ 50, ]                                                         

              ->  [ , 0]  <
                               DQS_GATE_TRAINING_STATUS   @[ ,406+50],                                
                               RDEL_OV             @[ ,404+50],                                
                               WL_OV               @[ ,402+50],                                                                                                                                                                                   
                               READ_VALID          @[ ,400+50],                            

                               DQS_GATE_CTRL[0]    @[ ,388+50],
                               DQS_GATE_CTRL[1]    @[ ,386+50],
                               DQS_GATE_CTRL[2]    @[ ,384+50],  
                               DQS_GATE_CTRL[3]    @[ ,382+50], 
                                                            
                               WL_STEP[7]          @[ ,380+40],
                               WL_STEP[6]          @[ ,378+40],
                               WL_STEP[5]          @[ ,376+40],                                                                                                                                                                                     
                               WL_STEP[4]          @[ ,374+40],
                               WL_STEP[3]          @[ ,372+40],
                               WL_STEP[2]          @[ ,370+40],
                               WL_STEP[1]          @[ ,368+40],
                               WL_STEP[0]          @[ ,366+40],
                               
                               WL_CTRL[2]          @[ ,364+30],                                               
                               WL_CTRL[1]          @[ ,362+30], 
                               WL_CTRL[0]          @[ ,360+30],
                               
                               CLKGATE             @[ ,352+30],                                
                               
                               CLK1_STEP[7]        @[ ,346+30],
                               CLK1_STEP[6]        @[ ,344+30],
                               CLK1_STEP[5]        @[ ,342+30],                                
                               CLK1_STEP[4]        @[ ,340+30],                                  
                               CLK1_STEP[3]        @[ ,338+30],                                                                                                                          
                               CLK1_STEP[2]        @[ ,336+30],
                               CLK1_STEP[1]        @[ ,334+30],
                               CLK1_STEP[0]        @[ ,332+30],
                                                                                                                                                          
                               RDEL_CTRL[2]        @[ ,330+20],
                               RDEL_CTRL[1]        @[ ,328+20],                                                                                          
                               RDEL_CTRL[0]        @[ ,326+20],
                                                                                       
                               READ_CLK_CTRL[2]    @[ ,316+20],
                               READ_CLK_CTRL[1]    @[ ,314+20],
                               READ_CLK_CTRL[0]    @[ ,312+20],                                                                                        
                    
                               RST                 @[ ,304+20],                                                                                         
                               SYSCLK              @[ ,302+20], 
                          
                               DCC_CLK_CTRL[2]     @[ ,272+30],
                               DCC_CLK_CTRL[1]     @[ ,270+30],
                               DCC_CLK_CTRL[0]     @[ ,268+30],                          
                                                       
                               IOCLK_SEL[3]        @[ ,264+30],                              
                               IOCLK_SEL[2]        @[ ,262+30],                              
                               IOCLK_SEL[1]        @[ ,260+30],                                                                                                                      
                               IOCLK_SEL[0]        @[ ,258+30],                            
 
                               SAMPLE_CLK_SLIP     @[ ,258+20], 
                               
                               IOCLK[1]            @[ ,254+20],
                               IOCLK[0]            @[ ,236+20],                                                                                                                                                                                                                                                                                      

                               DLL_CODE[0]         @[ ,48],  
                               DLL_CODE[1]         @[ ,46], 
                               DLL_CODE[2]         @[ ,44],  
                               DLL_CODE[3]         @[ ,42], 
                               DLL_CODE[4]         @[ ,40], 
                               DLL_CODE[5]         @[ ,38], 
                               DLL_CODE[6]         @[ ,36], 
                               DLL_CODE[7]         @[ ,34], 
 
                               DQSI_DEL_TREE       @[ ,26],
                               WCLK_DEL_TREE       @[ ,22],
                               WCLK_TREE           @[ ,18],
                               DQSI[1]             @[ ,14],                               
                               DQSI[0]             @[ ,10],
                               CE_DQS              @[ ,6]
                              
             
              
                           >   

              ->  [ 0, ]  ;

}; // symbol logsym_0 of DQS

symbol logsym_1 of DQS // pragma PAP_ARC_COLOR="210:45:45"
{
    // The bounding box
    generate ( 50 # 460 );
    //
    // Poloygon declaration
    //
    shape
    [ 0, 0 ]  ->  [ , 460 ]  <  
                               SAMPLE_CLK_SLIP     @[ ,384+70],                                                                 
                               
                               WL_STEP[7]          @[ ,382+70],                               
                               WL_STEP[6]          @[ ,380+70],
                               WL_STEP[5]          @[ ,378+70],                               
                               WL_STEP[4]          @[ ,350+70], 
                               WL_STEP[3]          @[ ,348+70], 
                               WL_STEP[2]          @[ ,346+70],                               
                               WL_STEP[1]          @[ ,344+70], 
                               WL_STEP[0]          @[ ,342+70], 
                                                                      
                               IOCLK_SEL[3]        @[ ,294+90],                              
                               IOCLK_SEL[2]        @[ ,292+90],                              
                               IOCLK_SEL[1]        @[ ,290+90],                              
                               IOCLK_SEL[0]        @[ ,288+90],
                               
                               DCC_CLK_CTRL[2]     @[ ,286+90],                                 
                               DCC_CLK_CTRL[1]     @[ ,278+70],                             
                               DCC_CLK_CTRL[0]     @[ ,276+70],
                                                              
                               WL_CTRL[2]          @[ ,274+70],                                   
                               WL_CTRL[1]          @[ ,272+70],
                               WL_CTRL[0]          @[ ,270+70],                                
                               
                               CLKGATE             @[ ,164+10],                                 
                               
                               CLK1_STEP[7]        @[ ,162+10], 
                               CLK1_STEP[6]        @[ ,160+10], 
                               CLK1_STEP[5]        @[ ,158+10], 
                                                              
                               CLK1_STEP[4]        @[ ,130+10],
                               CLK1_STEP[3]        @[ ,128+10],
                               CLK1_STEP[2]        @[ ,126+10],
                               CLK1_STEP[1]        @[ ,124+10],
                               CLK1_STEP[0]        @[ ,122+10],
                                                                                            
                               READ_CLK_CTRL[2]    @[ ,94+10], 
                               READ_CLK_CTRL[1]    @[ ,92+10], 
                               READ_CLK_CTRL[0]    @[ ,90+10], 
                               DQS_GATE_CTRL[3]    @[ ,88+10], 
                                                                                                          
                               DQS_GATE_CTRL[2]    @[ ,86+10],                                                                      
                               DQS_GATE_CTRL[1]    @[ ,58+10],
                               DQS_GATE_CTRL[0]    @[ ,56+10],  
                                                                                                                               
                               RDEL_CTRL[2]        @[ ,54+10],                                    
                               RDEL_CTRL[1]        @[ ,52+10],                                   
                               RDEL_CTRL[0]        @[ ,50+10], 
                               
                               RST                 @[ ,12+20],                                                                                                                                                            
                               SYSCLK              @[ ,10+20], 
                               
                               DQS_GATE_TRAINING_STATUS   @[ ,16], 
                               READ_VALID                 @[ ,14],                                                                
                               RDEL_OV                    @[ ,12],                                
                               WL_OV                      @[ ,10]
                                                                                                                
                             >

              ->  [ 50, ]                                                         

              ->  [ , 0]  <
                                                         
                               SAMPLE_CLK_DIV      @[ ,392+60],
                               
                               IFIFO_WADDR[0]      @[ ,364+60],
                               IFIFO_WADDR[1]      @[ ,362+60],
                               IFIFO_WADDR[2]      @[ ,360+60],
                                                          
                               IFIFO_RADDR[0]      @[ ,350+60],
                               IFIFO_RADDR[1]      @[ ,348+60],
                               IFIFO_RADDR[2]      @[ ,346+60],                                                              


                               DQSI_DEL            @[ ,336+40],
                               WCLK_DEL            @[ ,332+40],                                                  
                               WCLK                @[ ,330+40],
                               PROBE_CLK           @[ ,328+40],
                               SAMPLE_CLK          @[ ,326+40],  
                                       
                               IOCLK[1]            @[ ,254+20],
                               IOCLK[0]            @[ ,236+20],                                                                                                                                                                                                                                                                                    

                               DLL_CODE[0]         @[ ,48], 
                               DLL_CODE[1]         @[ ,46],
                               DLL_CODE[2]         @[ ,44], 
                               DLL_CODE[3]         @[ ,42],
                               DLL_CODE[4]         @[ ,40],
                               DLL_CODE[5]         @[ ,38],
                               DLL_CODE[6]         @[ ,36],
                               DLL_CODE[7]         @[ ,34], 
 
                               DQSI_DEL_TREE       @[ ,26],
                               WCLK_DEL_TREE       @[ ,22],
                               WCLK_TREE           @[ ,18],
                               DQSI[1]             @[ ,14],                               
                               DQSI[0]             @[ ,10],
                               CE_DQS              @[ ,6]                                         
              
                           >   

              ->  [ 0, ]  ;

}; // symbol logsym_1 of DQS






/*******************************************************************************

  Device    [DQS]
  
  Author    [tangqiang]

  Abstract  [The floorplan symbol of DQS]

  Revision History:

********************************************************************************/
symbol fpsym of DQS // pragma PAP_ARC_COLOR="210:45:45"
{
    // The bounding box
    generate ( 10*8 # 10*8 );

    //
    // Poloygon declaration
    //
    shape
    [ 0, 0 ]  ->  [  0, 10*8 ]   
              ->  [ 10*8, 10*8 ]
              ->  [ 10*8,  0 ]   
              ->  [  0,  0 ]  ;

    //
    // Free-hanging text and edge
    //
    "DQS" @ [5*8,5*8];


}; // end of symbol logsym of DQS
