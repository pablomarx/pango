*****************************************************************

  Device    [DLL_CLKMUX]

  Author    [clwang]

  Abstract  []

  Revision History:

********************************************************************************/
grid
device DLL_CLKMUX
{
    port
    (
        config input SC_DLL_CLKSEL[4:0] = 5'b0_0000 /*pragma PAP_CFG_BIT_NAME = "SC_DLL_CLKSEL<4>, SC_DLL_CLKSEL<3>, SC_DLL_CLKSEL<2>, SC_DLL_CLKSEL<1>, SC_DLL_CLKSEL<0>"*/,

               input  CLK_INPUT  = 1'b1,
               input  ZERO       = 1'b0,
               input  IOCLK[3:0] = 4'b1111,
               output OUT
    );
}; // end of device DLL_CLKMUX

/*******************************************************************************

  Device    [DLL_CLKMUX]

  Author    [clwang]

  Abstract  [The structure netlist of CLMS is described in the similar fashion 
             as in HDL. In unit instantiation statement, the formal pin may be 
             connected to net which is declared explicitly. 
             
             In Valence, the connection can also be made from formal pin to other 
             pin or port, in which case Valence compiler shall create the net to 
             fulfil the connection. The built-in naming convention is kicked in 
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/
structure netlist of DLL_CLKMUX
{
    // Routing arc specification
    routing
    {
        (
             ZERO ,
             CLK_INPUT ,
             IOCLK[0] ,
             IOCLK[1] ,
             IOCLK[2] ,
             IOCLK[3] -->  OUT ) = 150;
     }


}; // end of structure netlist of DLL_CLKMUX 

/*******************************************************************************

  Device    [DLL_CLKMUX]

  Author    [clwang]

  Abstract  [Configure the configuration bits based on the value of config parameter]

  Revision History:

********************************************************************************/
configuration cfg of DLL_CLKMUX // pragma PAP_ARC_REGULAR_ROUTING_CFG_BODY
{    
    if (ZERO --> OUT)       // "NONE": 0; "CLKIN"; "IOCLK0" "IOCLK1" "IOCLK2" "IOCLK3" 
    {
        SC_DLL_CLKSEL :=  5'b0_0000;
    }
    if (CLK_INPUT --> OUT)
    {
        SC_DLL_CLKSEL :=  5'b0_0001;
    }
    if (IOCLK[0] --> OUT)
    {
        SC_DLL_CLKSEL :=  5'b0_0010;
    }
    if (IOCLK[1] --> OUT)
    {
        SC_DLL_CLKSEL :=  5'b0_0100;
    }    
    if (IOCLK[2] --> OUT)
    {
        SC_DLL_CLKSEL :=  5'b0_1000;
    }     
    if (IOCLK[3] --> OUT)
    {
        SC_DLL_CLKSEL :=  5'b1_0000;
    } 
}; // end of configuration cfg of DLL_CLKMUX






