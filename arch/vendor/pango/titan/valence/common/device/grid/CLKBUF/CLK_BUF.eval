*****************************************************************

  Device    [CLK_BUF]

  Author    [clwang]

  Abstract  []

  Revision History:

********************************************************************************/
grid
device CLK_BUF
{
    port
    ( 
        config input   SC_CLK_EN[15:0] = 16'h0000 /*pragma PAP_CFG_BIT_NAME = "SC_CLK<15>,SC_CLK<14>,SC_CLK<13>,SC_CLK<12>,SC_CLK<11>,SC_CLK<10>,SC_CLK<9>,SC_CLK<8>,SC_CLK<7>,SC_CLK<6>,SC_CLK<5>,SC_CLK<4>,SC_CLK<3>,SC_CLK<2>,SC_CLK<1>,SC_CLK<0>" */,        
               input   CLKIN[15:0] = 16'hffff,
               output  CLKOUT_T[15:0],
               output  CLKOUT_B[15:0]
    );
} // end of device CLK_BUF

/*******************************************************************************

  Device    [CLK_BUF]

  Author    [clwang]

  Abstract  [The structure netlist of CLK_BUF is described in the similar fashion
             as in HDL. In unit instantiation statement, the formal pin may be
             connected to net which is declared explicitly.

             In Valence, the connection can also be made from formal pin to other
             pin or port, in which case Valence compiler shall create the net to
             fulfil the connection. The built-in naming convention is kicked in
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/

structure netlist of CLK_BUF
{
    routing
    {
        /*(CLKIN[0]   --> CLKOUT_T[0]  ) = 150;
        (CLKIN[1]   --> CLKOUT_T[1]  ) = 150;
        (CLKIN[2]   --> CLKOUT_T[2]  ) = 150;
        (CLKIN[3]   --> CLKOUT_T[3]  ) = 150;
        (CLKIN[4]   --> CLKOUT_T[4]  ) = 150;
        (CLKIN[5]   --> CLKOUT_T[5]  ) = 150;
        (CLKIN[6]   --> CLKOUT_T[6]  ) = 150;
        (CLKIN[7]   --> CLKOUT_T[7]  ) = 150;
        (CLKIN[8]   --> CLKOUT_T[8]  ) = 150;
        (CLKIN[9]   --> CLKOUT_T[9]  ) = 150;    
        (CLKIN[10]  --> CLKOUT_T[10] ) = 150;
        (CLKIN[11]  --> CLKOUT_T[11] ) = 150;
        (CLKIN[12]  --> CLKOUT_T[12] ) = 150;
        (CLKIN[13]  --> CLKOUT_T[13] ) = 150;
        (CLKIN[14]  --> CLKOUT_T[14] ) = 150;
        (CLKIN[15]  --> CLKOUT_T[15] ) = 150;
        
        (CLKIN[0]   --> CLKOUT_B[0]  ) = 150;
        (CLKIN[1]   --> CLKOUT_B[1]  ) = 150;
        (CLKIN[2]   --> CLKOUT_B[2]  ) = 150;
        (CLKIN[3]   --> CLKOUT_B[3]  ) = 150;
        (CLKIN[4]   --> CLKOUT_B[4]  ) = 150;
        (CLKIN[5]   --> CLKOUT_B[5]  ) = 150;
        (CLKIN[6]   --> CLKOUT_B[6]  ) = 150;
        (CLKIN[7]   --> CLKOUT_B[7]  ) = 150;
        (CLKIN[8]   --> CLKOUT_B[8]  ) = 150;
        (CLKIN[9]   --> CLKOUT_B[9]  ) = 150;    
        (CLKIN[10]  --> CLKOUT_B[10] ) = 150;
        (CLKIN[11]  --> CLKOUT_B[11] ) = 150;
        (CLKIN[12]  --> CLKOUT_B[12] ) = 150;
        (CLKIN[13]  --> CLKOUT_B[13] ) = 150;
        (CLKIN[14]  --> CLKOUT_B[14] ) = 150;
        (CLKIN[15]  --> CLKOUT_B[15] ) = 150;*/

        ( CLKIN[0] --> CLKOUT_T[0] ) = 970;
        ( CLKIN[1] --> CLKOUT_T[1] ) = 970;
        ( CLKIN[2] --> CLKOUT_T[2] ) = 970;
        ( CLKIN[3] --> CLKOUT_T[3] ) = 970;
        ( CLKIN[4] --> CLKOUT_T[4] ) = 970;
        ( CLKIN[5] --> CLKOUT_T[5] ) = 970;
        ( CLKIN[6] --> CLKOUT_T[6] ) = 970;
        ( CLKIN[7] --> CLKOUT_T[7] ) = 970;
        ( CLKIN[8] --> CLKOUT_T[8] ) = 970;
        ( CLKIN[9] --> CLKOUT_T[9] ) = 970;
        ( CLKIN[10] --> CLKOUT_T[10] ) = 970;
        ( CLKIN[11] --> CLKOUT_T[11] ) = 970;
        ( CLKIN[12] --> CLKOUT_T[12] ) = 970;
        ( CLKIN[13] --> CLKOUT_T[13] ) = 970;
        ( CLKIN[14] --> CLKOUT_T[14] ) = 482;
        ( CLKIN[15] --> CLKOUT_T[15] ) = 482;
        ( CLKIN[0] --> CLKOUT_B[0] ) = 970;
        ( CLKIN[1] --> CLKOUT_B[1] ) = 970;
        ( CLKIN[2] --> CLKOUT_B[2] ) = 970;
        ( CLKIN[3] --> CLKOUT_B[3] ) = 970;
        ( CLKIN[4] --> CLKOUT_B[4] ) = 970;
        ( CLKIN[5] --> CLKOUT_B[5] ) = 970;
        ( CLKIN[6] --> CLKOUT_B[6] ) = 970;
        ( CLKIN[7] --> CLKOUT_B[7] ) = 970;
        ( CLKIN[8] --> CLKOUT_B[8] ) = 970;
        ( CLKIN[9] --> CLKOUT_B[9] ) = 970;
        ( CLKIN[10] --> CLKOUT_B[10] ) = 970;
        ( CLKIN[11] --> CLKOUT_B[11] ) = 970;
        ( CLKIN[12] --> CLKOUT_B[12] ) = 970;
        ( CLKIN[13] --> CLKOUT_B[13] ) = 970;
        ( CLKIN[14] --> CLKOUT_B[14] ) = 482;
        ( CLKIN[15] --> CLKOUT_B[15] ) = 482;
        
    }

}; // end of structure netlist of CLK_BUF

/*******************************************************************************

  Device    [CLK_BUF]

  Author    [clwang]

  Abstract  [Configure the configuration bits based on the value of config parameter]

  Revision History:

********************************************************************************/
configuration cfg of CLK_BUF
{
    if ( CLKIN[0] --> CLKOUT_T[0])
    { 
        SC_CLK_EN[0] := 1'b1;
    }
    else if (CLKIN[0] --> CLKOUT_B[0])
    {
        SC_CLK_EN[0] := 1'b1;
    }
    
    if ( CLKIN[1] --> CLKOUT_T[1])
    { 
        SC_CLK_EN[1] := 1'b1;
    }
    else if (CLKIN[1] --> CLKOUT_B[1])
    {
        SC_CLK_EN[1] := 1'b1;
    }
    
    if ( CLKIN[2] --> CLKOUT_T[2])
    { 
        SC_CLK_EN[2] := 1'b1;
    }
    else if (CLKIN[2] --> CLKOUT_B[2])
    {
        SC_CLK_EN[2] := 1'b1;
    }
    
    if ( CLKIN[3] --> CLKOUT_T[3])
    { 
        SC_CLK_EN[3] := 1'b1;
    }
    else if ( CLKIN[3] --> CLKOUT_B[3])
    { 
        SC_CLK_EN[3] := 1'b1;
    }
    
    if ( CLKIN[4] --> CLKOUT_T[4])
    { 
        SC_CLK_EN[4] := 1'b1;
    }
    else if ( CLKIN[4] --> CLKOUT_B[4])
    { 
        SC_CLK_EN[4] := 1'b1;
    }
        
    if ( CLKIN[5] --> CLKOUT_T[5])
    { 
        SC_CLK_EN[5] := 1'b1;
    }
    else if ( CLKIN[5] --> CLKOUT_B[5])
    { 
        SC_CLK_EN[5] := 1'b1;
    }     
    
    
    if ( CLKIN[6] --> CLKOUT_T[6])
    { 
        SC_CLK_EN[6] := 1'b1;
    }
    else if ( CLKIN[6] --> CLKOUT_B[6])
    { 
        SC_CLK_EN[6] := 1'b1;
    }
    
    
    if ( CLKIN[7] --> CLKOUT_T[7])
    { 
        SC_CLK_EN[7] := 1'b1;
    }
    else if ( CLKIN[7] --> CLKOUT_B[7])
    { 
        SC_CLK_EN[7] := 1'b1;
    }
    
    if ( CLKIN[8] --> CLKOUT_T[8])
    { 
        SC_CLK_EN[8] := 1'b1;
    }
    else if ( CLKIN[8] --> CLKOUT_B[8])
    { 
        SC_CLK_EN[8] := 1'b1;
    }
    
    if ( CLKIN[9] --> CLKOUT_T[9])
    { 
        SC_CLK_EN[9] := 1'b1;
    }
    else if ( CLKIN[9] --> CLKOUT_B[9])
    { 
        SC_CLK_EN[9] := 1'b1;
    } 
    
    if ( CLKIN[10] --> CLKOUT_T[10])
    { 
        SC_CLK_EN[10] := 1'b1;
    }
    else if ( CLKIN[10] --> CLKOUT_B[10])
    { 
        SC_CLK_EN[10] := 1'b1;
    }
    
    
    if ( CLKIN[11] --> CLKOUT_T[11])
    { 
        SC_CLK_EN[11] := 1'b1;
    }
    else if ( CLKIN[11] --> CLKOUT_B[11])
    { 
        SC_CLK_EN[11] := 1'b1;
    }
    
    if ( CLKIN[12] --> CLKOUT_T[12])
    { 
        SC_CLK_EN[12] := 1'b1;
    }
    else if ( CLKIN[12] --> CLKOUT_B[12])
    { 
        SC_CLK_EN[12] := 1'b1;
    }
    
    if ( CLKIN[13] --> CLKOUT_T[13])
    { 
        SC_CLK_EN[13] := 1'b1;
    }
    else if ( CLKIN[13] --> CLKOUT_B[13])
    { 
        SC_CLK_EN[13] := 1'b1;
    }
    
    if ( CLKIN[14] --> CLKOUT_T[14])
    { 
        SC_CLK_EN[14] := 1'b1;
    } 
    else if ( CLKIN[14] --> CLKOUT_B[14])
    { 
        SC_CLK_EN[14] := 1'b1;
    } 
       
    if ( CLKIN[15] --> CLKOUT_T[15])
    { 
        SC_CLK_EN[15] := 1'b1;
    } 
    else if ( CLKIN[15] --> CLKOUT_B[15])
    { 
        SC_CLK_EN[15] := 1'b1;
    } 
    
}; // end of configuration cfg of CLK_BUF
