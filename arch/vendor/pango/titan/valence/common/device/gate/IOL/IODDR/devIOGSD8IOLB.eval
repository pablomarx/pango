*****************************************************************

  Device    [devIOGSD8IOLB]

  Author    [hzhang]

  Abstract  [devIOGSD8IOLB on the TOP/RIGHT/BOTTOM of Arch.]

  Revision History:

********************************************************************************/

gate
device devIOGSD8IOLB : device IOL
{
    parameter
    (
        config string DES_SER_CLK    = "IOCLK",        // "IOCLK", "SAMPLE_CLK", "PROBE_CLK"
        config string DO_SEL         = "DO",   // "DO", "DO_COMP"
        config string TO_SEL         = "TO",   // "TO", "TO_COMP"
        config bit    IDDR_LRS_EN    = 1'b0,
        config string IDDR_ICLK      = "DQSDEL",       // "DQSDEL", "DESCLK", "SYSCLK"
        config string IDDR_MODE     := "IDDRB",       //"IGDDR", "IGDES4", "IGDES7", "IGDES8", "IGDES10"
                                                       //"IMDDR", "IMDES4", "IMDES8", "DISABLE"
        config bit    ODDR_LRS_EN    = 1'b0,
        config string ODDR_OCLK     := "SERCLK",     // "SERCLK", "WCLK", "WCLKDEL", "SYSCLK"
        config string ODDR_MODE     := "ODDRB",      //"OGDDR", "OGSER4", "OGSER7", "OGSER8", "OGSER10"
                                                     //"OMDDR", "OMSER4", "OMSER8" ,"DISABLE"
        config bit    GRS_EN         = 1'b0,
        config bit    CLK_I_INV      = 1'b0,
        config bit    CLK_O_INV      = 1'b0,
        config bit    LRS_INV        = 1'b0,

        config bit    TRI_FORCE[1:0]  := 2'b11
    );
    port
    (
        input   TX_DATA[1:0],

        output  RX_DATA[5:4],
    
        input   IOCLK,

        input   SAMPLE_CLK,
        input   PROBE_CLK,
    
        input   SYSCLK,
        input   LRS,
        input   SLIP,

        input   IDDR_CIN[6:0],
        output  ODDR_COUT[16:0],
        input   ODDR_CIN[16:0],
        output  IDDR_COUT[6:0],

        output  DO,
        output  TO,
        input   DO_IN,
        input   TO_IN
    );

}// end of device devIOGSD8IOLB

/*******************************************************************************

  Device    [devIOGSD8IOLB]

  Author    []

  Abstract  [The structure netlist of devIOGSD8IOLB is described in the similar fashion
             as in HDL. In unit instantiation statement, the formal pin may be
             connected to net which is declared explicitly.

             In Valence, the connection can also be made from formal pin to other
             pin or port, in which case Valence compiler shall create the net to
             fulfil the connection. The built-in naming convention is kicked in
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/
structure netlist of devIOGSD8IOLB
{
    // Wires for input ports

    wire ntSYSCLK, ntLRS;

    wire ntSAMPLE_CLK;
    wire ntPROBE_CLK;

    ntSYSCLK          <= SYSCLK;
    ntLRS             <= LRS;

    ntSAMPLE_CLK      <= SAMPLE_CLK;
    ntPROBE_CLK       <= PROBE_CLK;

    wire  ntDO_IN,  ntTO_IN;
    wire  ntDO_MUX, ntTO_MUX;

    ntDO_IN   <= DO_IN;
    ntTO_IN   <= TO_IN;

    TO        <= ntTO_MUX;
    DO        <= ntDO_MUX;

    // Internal wires
    wire ntLRS_MUX;
    
    wire ntSYSCLK_MUX_I;
    wire ntSYSCLK_MUX_O;


    wire ntIOCLK;
    ntIOCLK <= IOCLK;
    wire ntIDDR_DESCLK_MUX;
    wire ntIDDR_ICLK_MUX;
    wire ntIDDR_LRS_MUX;

    wire ntODDR_SERCLK_MUX;
    wire ntODDR_OCLK_MUX;
    wire ntODDR_LRS_MUX;


    device LRS_MUX LRS_MUX
        parameter map
        (
            LRS_INV => LRS_INV
        )
        port map
        (
            I1  => ntLRS,
            I0  => ntLRS,
            Y   => ntLRS_MUX
        );

    device SYSCLK_MUX_I SYSCLK_MUX_I
        parameter map
        (
            CLK_INV => CLK_I_INV
        )
        port map
        (
            I1   => ntSYSCLK,
            I0   => ntSYSCLK,
            Y    => ntSYSCLK_MUX_I
        );

    device SYSCLK_MUX_O SYSCLK_MUX_O
        parameter map
        (
            CLK_INV => CLK_O_INV
        )
        port map
        (
            I1   => ntSYSCLK,
            I0   => ntSYSCLK,
            Y    => ntSYSCLK_MUX_O
        );

    // ODDR
    device ODDR_SERCLK_MUX ODDR_SERCLK_MUX
        parameter map
        (
            SERCLK => DES_SER_CLK
        )
        port map
        (
            I2  => ntIOCLK,
            I1  => ntSAMPLE_CLK,
            I0  => ntPROBE_CLK,
            Y   => ntODDR_SERCLK_MUX
        );

    device ODDR_OCLK_MUX ODDR_OCLK_MUX
        parameter map
        (
            OCLK => ODDR_OCLK
        )
        port map
        (
            I3  => ntODDR_SERCLK_MUX,

            Y   => ntODDR_OCLK_MUX
        );

    device ODDR_LRS_MUX ODDR_LRS_MUX
        parameter map
        (
            LRS_USED => ODDR_LRS_EN
        )
        port map
        (
            LRS  => ntLRS_MUX,
            ZERO  => 1'b0,
            Y     => ntODDR_LRS_MUX
        );

    device ODDR ODDR
        parameter map
        (
            ODDR_MODE => ODDR_MODE
        )
        port map
        (
            DATA[1:0]    => TX_DATA,

            OCLK         => ntODDR_OCLK_MUX,
            SYSCLK       => ntSYSCLK_MUX_O,
            SERCLK       => ntODDR_SERCLK_MUX,

            LRS          => ntODDR_LRS_MUX,

            //for cascaded parts

            COUT         => ODDR_COUT,
            CIN          => ODDR_CIN
        );



   // IDDR
    device IDDR_DESCLK_MUX IDDR_DESCLK_MUX
        parameter map
        (
            DESCLK => DES_SER_CLK
        )
        port map
        (
            I2  => ntIOCLK,
            I1  => ntSAMPLE_CLK,
            I0  => ntPROBE_CLK,
            Y   => ntIDDR_DESCLK_MUX
        );

    device IDDR_ICLK_MUX IDDR_ICLK_MUX
        parameter map
        (
            ICLK => IDDR_ICLK
        )
        port map
        (
            I2  => ntIDDR_DESCLK_MUX,
            I0  => ntSYSCLK_MUX_I,
            Y   => ntIDDR_ICLK_MUX
        );

    device IDDR_LRS_MUX IDDR_LRS_MUX
        parameter map
        (
            LRS_USED => IDDR_LRS_EN
        )
        port map
        (
            LRS   => ntLRS_MUX,
            ZERO  => 1'b0,
            Y     => ntIDDR_LRS_MUX
        );

    device IDDR IDDR
        parameter map
        (
            IDDR_MODE    => IDDR_MODE
        )
        port map
        (
            DATAOUT[5:4] => RX_DATA[5:4],

            ICLK           => ntIDDR_ICLK_MUX,
            DESCLK         => ntIDDR_DESCLK_MUX,
            SYSCLK         => ntSYSCLK_MUX_I,

            LRS            => ntIDDR_LRS_MUX,

            //for cascaded parts
            CIN          => IDDR_CIN,
            COUT         => IDDR_COUT
        );

    device DO_MUX DO_MUX
       parameter map
       (
           DO_SEL  => DO_SEL
       )
       port map
       (
           I1   => ntDO_IN,
           Y    => ntDO_MUX
       );

    device TO_MUX TO_MUX
       parameter map
       (
           TO_SEL  => TO_SEL
       )
       port map
       (
           I1   => ntTO_IN,
           Y    => ntTO_MUX
       );
}; // end of structure netlist of devIOGSD8IOLB
