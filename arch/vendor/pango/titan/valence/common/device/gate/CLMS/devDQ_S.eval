*****************************************************************

  Device    [devDQ_S]

  Author    []

  Abstract  [D Part of CLMS]

  Revision History:

********************************************************************************/
gate
device devDQ_S : device devD_S
{
    parameter
    (
        config string GRS_EN        = "FALSE",             // "TRUE" "FALSE"
        config string LRS_EN        = "TRUE",              // "TRUE" "FALSE"
        config string Q3MUX_SEL    := "M3",                // "Y3"  "FFCD" "M3"                
        config string CEMUX_SEL     = "CE",                // "CE" "CEIN" 
        config string RSMUX_SEL     = "RS",                // "RS" "RSIN"
        config bit    CLK_POS       = 1'b0,                // 1'b0: "CLK"; 1'b1: "CLK_B"   
        config bit    CE_POS        = 1'b0,                // 1'b0: "CE";  1'b1: "CE_B"
        config bit    RS_POS        = 1'b0,                // 1'b0: "RS"   1'b1:  "RS_B"                      
        config string SYNC_MODE     = "SYNC",              // "SYNC" "ASYNC"
        config string FF3_SET       = "RESET"              // "RESET" "SET"
    );
    
    port
    (
        output   Q3,  
        input    M3,
        input    RS, CE, CLK,
        input    RSIN,
        output   RSOUT,
        input    CEIN,
        output   CEOUT
    );
}; // end of device devDQ_S


/*******************************************************************************

  Device    [devDQ_S]

  Author    []

  Abstract  []

  Revision History:

********************************************************************************/
structure netlist of devDQ_S
{
    // Wires for input ports
    wire ntM3;
    wire ntRS, ntCE, ntCLK;
    wire ntRSIN;
    wire ntCEIN;

    // Wires connecting to output ports
    wire ntFF3_Q;
    wire ntRSMUX;
    wire ntCEMUX;

    // Internal wires
    wire ntQ3MUX;    

    wire ntRSPOLMUX, ntCEPOLMUX, ntCLKPOLMUX;
    //
    // Connection to ports
    //
    ntM3      <= M3;

    ntRS      <= RS;
    ntCE      <= CE;
    ntCLK     <= CLK;

    ntRSIN    <= RSIN;
    ntCEIN    <= CEIN;

    Q3        <= ntFF3_Q;

    RSOUT     <= ntRSMUX;
    CEOUT     <= ntCEMUX;
    
    //
    // Instances. FGA section
    //
   
    device Q3MUX Q3MUX
        parameter map
        (
            CFG  => Q3MUX_SEL
        )    
        port map
        (
            M3  => ntM3,
            Z   => ntQ3MUX
        );
    
    device FF FF3
        parameter map
        (
            GRS_EN => GRS_EN,
            LRS_EN => LRS_EN,
            SET     => FF3_SET,
            SYNC    => SYNC_MODE
        )
        port map
        (
            D  => ntQ3MUX,
            RS => ntRSMUX, CE => ntCEMUX, CK => ntCLKPOLMUX,
            Q  => ntFF3_Q
        );

    device RSMUX RSMUX
        parameter map
        (
            CFG    => RSMUX_SEL
        )    
        port map
        (
            RS  => ntRSPOLMUX, RSIN => ntRSIN,
            Y   => ntRSMUX
        );

    device CEMUX CEMUX
        parameter map
        (
            CFG    => CEMUX_SEL
        )     
        port map
        (
            CE  => ntCEPOLMUX, CEIN => ntCEIN,
            Y   => ntCEMUX
        );


    device RSPOLMUX RSPOLMUX
        parameter map
        (
            CFG    => RS_POS
        )     
        port map
        (
            RS  => ntRS, RS_B => ntRS,
            Y   => ntRSPOLMUX
        );

    device CEPOLMUX CEPOLMUX
        parameter map
        (
            CFG    => CE_POS
        )     
        port map
        (
            CE  => ntCE, CE_B => ntCE,
            Y   => ntCEPOLMUX
        );

    device CLKPOLMUX CLKPOLMUX
        parameter map
        (
            CFG    => CLK_POS
        )        
        port map
        (
            CLK => ntCLK, CLK_B => ntCLK,
            Y   => ntCLKPOLMUX
        );
}; // end of structure netlist of devDQ_S

timing tnl of devDQ_S
{
    // the delay CEIN->CEOUT RSIN->RSOUT describe in the cell timing file.
    wire ntCLK;
    wire ntRS;
    wire ntCE;

    operator V_BUF V_CEMUX
        parameter map
        (
            SECTION => (CEMUX_SEL == "CE")? "CE" : "CEIN"
        )
        port map 
        (
            I => (CEMUX_SEL == "CE") ? ((CE_POS == 1'b1) ? ntCE : CE) : CEIN,
            Z => CEOUT
        );      
    
    operator V_BUF V_RSMUX
        parameter map
        (
            SECTION => (RSMUX_SEL == "RS") ? "RS" : "RSIN"
        )
        port map 
        (
             I => (RSMUX_SEL == "RS") ? ((RS_POS == 1'b1) ? ntRS : RS ) : RSIN,
             Z => RSOUT
        ); 
    
    if (CLK_POS == 1'b1)
    {
        operator V_INV V_CLKPOLMUX
            parameter map
            (
                SECTION => "CLK_INV_DUMY"
            )
            port map 
            (
                I => CLK,
                Z => ntCLK
            );    
    }
    
    if (CE_POS == 1'b1)
    {
        operator V_INV V_CEPOLMUX
            parameter map
            (
                SECTION => "CE_INV_DUMY"
            )
            port map 
            (
                I => CE,
                Z => ntCE
            );    
    }
    
    if (RS_POS == 1'b1)
    {
        operator V_INV V_RSPOLMUX
            parameter map
            (
                SECTION => "RS_INV_DUMY"
            )
            port map 
            (
                I => RS,
                Z => ntRS
            );    
    }    
                    
    if ( SYNC_MODE == "SYNC" )
    {
        
        operator V_FFSYN FF3_FF
            parameter map 
            (
                GRS_EN    => GRS_EN,
                LRS_EN    => LRS_EN,
                SET_RESET => FF3_SET,
                SECTION  => "D"
            )
            port map 
            (
                Q  => Q3,
                D  => M3,
                SR => (LRS_EN == "TRUE") ?(( RSMUX_SEL == "RS") ? (RS_POS == 1'b1 ? ntRS : RS) : RSIN) : 1'b0,
                CK => (CLK_POS == 1'b1) ? ntCLK : CLK,
                CE => ( CEMUX_SEL == "CE") ? ((CE_POS == 1'b1) ? ntCE : CE) : CEIN
            );

    } else if ( SYNC_MODE == "ASYNC" ) {

        operator V_FFASYN FF3_FF
            parameter map 
            (
                GRS_EN    => GRS_EN,
                LRS_EN    => LRS_EN,
                SET_RESET => FF3_SET,
                SECTION  => "D"
            )
            port map 
            (
                Q  => Q3,
                D  => M3,
                SR => (LRS_EN == "TRUE") ?(( RSMUX_SEL == "RS") ? (RS_POS == 1'b1 ? ntRS : RS) : RSIN) : 1'b0,
                CK => (CLK_POS == 1'b1) ? ntCLK : CLK,
                CE => ( CEMUX_SEL == "CE") ? ((CE_POS == 1'b1) ? ntCE : CE) : CEIN
            );

    }
    
}