*****************************************************************

  Device    [devBLCQ_S]

  Author    []

  Abstract  [THE DEVICE CAN BE USED FOR ADDIDTION+FF WITH B PART OF
            CLMS.]

  Revision History:

********************************************************************************/
gate
device devBLCQ_S : device devB_S
{
    parameter
    (
        config bit INITB[31:0]       = 32'h0000_0000,
        config string FGB_MODE       = "ARITH",             // "LUT5" "ROM" "WMUX" "ARITH"        
        config string RAM_LUT_SEL   := "LUT",               // "RAM"  "LUT" 
        config string GRS_EN         = "FALSE",             // "TRUE" "FALSE"
        config string LRS_EN         = "TRUE",              // "TRUE" "FALSE"
        config string Y1MUX_SEL      = "FG"  ,              // "L7"   "FG" "CY"        
        config string Q1MUX_SEL      := "Y1"  ,              // "Y1"   "FFAB" "M2"          
        config string CEMUX_SEL      = "CE",                // "CE" "CEIN" 
        config string RSMUX_SEL      = "RS",                // "RS" "RSIN"
        config bit    CLK_POS        = 1'b0,                // 1'b0: "CLK"; 1'b1: "CLK_B"   
        config bit    CE_POS         = 1'b0,                // 1'b0: "CE";  1'b1: "CE_B"
        config bit    RS_POS         = 1'b0,                // 1'b0: "RS"   1'b1:  "RS_B"                      
        config string SYNC_MODE      = "SYNC",              // "SYNC" "ASYNC"
        config string FF1_SET        = "RESET"              // "RESET" "SET"
   );
    
    port
    ( 
               input    B0, B1, B2, B3, B4, BD,
               output   Y1, Q1,                 
               input    RS, CE, CLK,
        logic  input    FGB_CIN,
        logic  output   FGB_COUT,
               input    RSIN,
               output   RSOUT,
               input    CEIN,
               output   CEOUT
    );
}; // end of device devBLCQ_S


/*******************************************************************************

  Device    [devBLCQ_S]

  Author    []

  Abstract  []

  Revision History:

********************************************************************************/
structure netlist of devBLCQ_S
{
    // Wires for input ports
    wire ntB0, ntB1, ntB2, ntB3, ntB4, ntBD; 
    wire ntRS, ntCE, ntCLK;

    wire ntRSIN;
    wire ntCEIN;

    // Wires connecting to output ports
    wire ntY1MUX,ntFF1_Q;
    wire ntRSMUX;
    wire ntCEMUX;

    // Internal wires
    wire ntFGB_Z, ntCYB;
    wire ntQ1MUX;
    wire ntCYA;
    wire ntRSPOLMUX, ntCEPOLMUX, ntCLKPOLMUX;
    //
    // Connection to ports
    //
    ntB0      <= B0;
    ntB1      <= B1;
    ntB2      <= B2;
    ntB3      <= B3;
    ntB4      <= B4;
    ntBD      <= BD;

    ntRS      <= RS;
    ntCE      <= CE;
    ntCLK     <= CLK;
    ntCYA     <= FGB_CIN;

    ntRSIN    <= RSIN;
    ntCEIN    <= CEIN;

    Y1        <= ntY1MUX;
    Q1        <= ntFF1_Q;
      
    FGB_COUT  <= ntCYB;

    RSOUT     <= ntRSMUX;
    CEOUT     <= ntCEMUX;
    
    //
    // Instances. FGA section
    //

    device FGS FGB 
        parameter map
        (
            INIT        => INITB,
            MODE        => FGB_MODE,
            RAM_LUT_SEL => RAM_LUT_SEL
        )
        port map 
        (
            A0   => ntB0, A1  => ntB1, A2  => ntB2, A3  => ntB3, A4  => ntB4,           
            WD   => ntBD,
            CIN  => ntCYA,
            COUT => ntCYB,
            Z    => ntFGB_Z 
        );

    device Y1MUX Y1MUX
        parameter map
        (
            CFG  => Y1MUX_SEL
        )    
        port map
        (
            FG  => ntFGB_Z, CY => ntCYB,
            Z   => ntY1MUX
        );
    
    device Q1MUX Q1MUX
        parameter map
        (
            CFG  => Q1MUX_SEL
        )      
        port map
        (
            Y1  => ntY1MUX,
            Z   => ntQ1MUX
        );
    
    device FF FF1
        parameter map
        (
            GRS_EN => GRS_EN,
            LRS_EN => LRS_EN,        
            SET     => FF1_SET,
            SYNC    => SYNC_MODE
        )
        port map
        (
            D  => ntQ1MUX,
            RS => ntRSMUX, CE => ntCEMUX, CK => ntCLKPOLMUX,
            Q  => ntFF1_Q
        );

    device RSMUX RSMUX
        parameter map
        (
            CFG  => RSMUX_SEL
        )    
        port map
        (
            RS  => ntRSPOLMUX, RSIN => ntRSIN,
            Y   => ntRSMUX
        );

    device CEMUX CEMUX
        parameter map
        (
            CFG  => CEMUX_SEL
        )      
        port map
        (
            CE  => ntCEPOLMUX, CEIN => ntCEIN,
            Y   => ntCEMUX
        );


    device RSPOLMUX RSPOLMUX
        parameter map
        (
            CFG  => RS_POS
        )       
        port map
        (
            RS  => ntRS, RS_B => ntRS,
            Y   => ntRSPOLMUX
        );

    device CEPOLMUX CEPOLMUX
        parameter map
        (
            CFG  => CE_POS
        )     
        port map
        (
            CE  => ntCE, CE_B => ntCE,
            Y   => ntCEPOLMUX
        );

    device CLKPOLMUX CLKPOLMUX
        parameter map
        (
            CFG  => CLK_POS
        )      
        port map
        (
            CLK => ntCLK, CLK_B => ntCLK,
            Y   => ntCLKPOLMUX
        );
}; // end of structure netlist of devBLCQ_S

timing tnl of devBLCQ_S
{   
   wire lut_o;
   wire ntCLK;
   wire ntRS;
   wire ntCE;  
   wire ntI0;
   wire ntI1;
   
   Y1 <= lut_o;     
   
    operator V_BUF V_CEMUX
        parameter map
        (
            SECTION => (CEMUX_SEL == "CE")? "CE" : "CEIN"
        )
        port map 
        (
            I => (CEMUX_SEL == "CE") ? ((CE_POS == 1'b1) ? ntCE : CE) : CEIN,
            Z => CEOUT
        );      

    operator V_BUF V_RSMUX
        parameter map
        (
            SECTION => (RSMUX_SEL == "RS") ? "RS" : "RSIN"
        )
        port map 
        (
             I => (RSMUX_SEL == "RS") ? ((RS_POS == 1'b1) ? ntRS : RS ) : RSIN,
             Z => RSOUT
        ); 
     

       operator V_LUT5CARRY V_FGB
           parameter map 
           (
               INIT => INITB,
               ID_TO_LUT   => (FGB_MODE == "ARITH4"  || FGB_MODE == "ARITH"   || FGB_MODE == "ARITH6"  || FGB_MODE == "CY01"    || FGB_MODE == "ARITH0" || FGB_MODE == "L5C01" || FGB_MODE == "LUT5"  || FGB_MODE == "ARITH3") ? "FALSE" : "TRUE",
               CIN_TO_LUT  => (FGB_MODE == "WMUX"    || FGB_MODE == "ARITH9"  || FGB_MODE == "ARITH10" || FGB_MODE == "ARITH11" || FGB_MODE == "ARITH0" || FGB_MODE == "L5C01" || FGB_MODE == "LUT5"  || FGB_MODE == "ARITH3") ? "FALSE" : "TRUE",
               I4_TO_CARRY => (FGB_MODE == "ARITH14" || FGB_MODE == "ARITH15" || FGB_MODE == "ARITH10" || FGB_MODE == "ARITH11" || FGB_MODE == "ARITH6" || FGB_MODE == "CY01"  || FGB_MODE == "LUT5"  || FGB_MODE == "ARITH3") ? "FALSE" : "TRUE",
               I4_TO_LUT   => (FGB_MODE == "ARITH13" || FGB_MODE == "ARITH15" || FGB_MODE == "ARITH9"  || FGB_MODE == "ARITH11" || FGB_MODE == "ARITH"  || FGB_MODE == "CY01"  || FGB_MODE == "L5C01" || FGB_MODE == "ARITH3") ? "FALSE" : "TRUE",
               SECTION  => "B"
           )
           port map 
           (
              CIN => FGB_CIN,  
              I0  => B0,        
              I1  => B1,   
              I2  => B2,
              I3  => B3,   
              I4  => B4,
              ID  => BD,
              COUT => ntI0, 
              S  => ntI1
           ); 

     FGB_COUT <= ntI0;

     if (Y1MUX_SEL != "FFAB")
     {
     operator V_MUX V_Y1MUX
         parameter map
         (
             SEL  => (Y1MUX_SEL == "CY") ? "I0" : "I1",
             SECTION  => "B"
         )
         port map
         (
             I0 => ntI0,
             I1 => ntI1,
             Y => lut_o
         );
     }  
 
   
    if (CLK_POS == 1'b1)
    {
        operator V_INV V_CLKPOLMUX
            parameter map
            (
                SECTION => "CLK_INV_DUMY"
            )
            port map 
            (
                 I => CLK,
                 Z => ntCLK
            );    
    }
    
    if (CE_POS == 1'b1)
    {
        operator V_INV V_CEPOLMUX
            parameter map
            (
                SECTION => "CE_INV_DUMY"
            )
            port map 
            (
                 I => CE,
                 Z => ntCE
            );    
    }
    
    if (RS_POS == 1'b1)
    {
        operator V_INV V_RSPOLMUX
            parameter map
            (
                SECTION => "RS_INV_DUMY"
            )
            port map 
            (
                 I => RS,
                 Z => ntRS
            );    
    }    
        
    if ( SYNC_MODE == "SYNC" )
    {
        operator V_FFSYN FF1_FF
            parameter map 
            (
                GRS_EN    => GRS_EN,
                LRS_EN    => LRS_EN,
                SET_RESET => FF1_SET,
                SECTION  => "B"
            )
            port map 
            (
                Q  => Q1,
                D  => lut_o,
                SR => (LRS_EN == "TRUE") ?(( RSMUX_SEL == "RS") ? (RS_POS == 1'b1 ? ntRS : RS) : RSIN) : 1'b0,
                CK => (CLK_POS == 1'b1) ? ntCLK : CLK,
                CE => ( CEMUX_SEL == "CE") ? ((CE_POS == 1'b1) ? ntCE : CE) : CEIN
            );

    } else if ( SYNC_MODE == "ASYNC" ) {

        operator V_FFASYN FF1_FF
            parameter map 
            (
                GRS_EN    => GRS_EN,
                LRS_EN    => LRS_EN,
                SET_RESET => FF1_SET,
                SECTION  => "B"
            )
            port map 
            (
                Q  => Q1,
                D  => lut_o,
                SR => (LRS_EN == "TRUE") ?(( RSMUX_SEL == "RS") ? (RS_POS == 1'b1 ? ntRS : RS) : RSIN) : 1'b0,
                CK => (CLK_POS == 1'b1) ? ntCLK : CLK,
                CE => ( CEMUX_SEL == "CE") ? ((CE_POS == 1'b1) ? ntCE : CE) : CEIN
            );

    }  
}
