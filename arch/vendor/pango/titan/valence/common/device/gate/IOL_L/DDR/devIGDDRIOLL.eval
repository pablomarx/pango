*****************************************************************

  Device    [devIGDDRIOLL]

  Author    [hzhang]

  Abstract  [devIGDDRIOLL on the TOP/RIGHT/BOTTOM of Arch.]

  Revision History:

********************************************************************************/

gate
device devIGDDRIOLL : device IOL_L
{
    parameter
    (
        config string IDDR_MODE       := "IGDDR",      //" DISABLE", "IGDDR"
        config string DELAY_MODE     = "NODELAY",      //"NODELAY", "INDELAY", "OUTDELAY",
        config bit    GRS_EN         = 1'b0,
        config bit    IDDR_LRS_EN    = 1'b0,
        config bit    CLK_I_INV      = 1'b0,
        config bit    LRS_INV        = 1'b0,
        config bit    TRI_FORCE[1:0] := 2'b00
    );
    port
    (
        output  RX_DATA[1:0],
        output  RX_DATA_DD,

        input   DPI_CTRL[1:0],
        input   DPI_STS_CLR,
        output  DPI_STS[1:0],

        input   SYSCLK,
        input   LRS,
        input   SLIP,

        // from/to IOB
        output  TO,
        input   DIN
    );

}// end of device devIGDDRIOLL

/*******************************************************************************

  Device    [devIGDDRIOLL]

  Author    []

  Abstract  [The structure netlist of devIGDDRIOLL is described in the similar fashion
             as in HDL. In unit instantiation statement, the formal pin may be
             connected to net which is declared explicitly.

             In Valence, the connection can also be made from formal pin to other
             pin or port, in which case Valence compiler shall create the net to
             fulfil the connection. The built-in naming convention is kicked in
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/
structure netlist of devIGDDRIOLL
{
    // Wires for input ports

    wire ntSYSCLK, ntLRS;
    wire ntDIN;

    ntSYSCLK          <= SYSCLK;
    ntLRS             <= LRS;
    ntDIN             <= DIN;

    // Wires connecting to output ports

    wire ntIN_DELSEL_MUX;
    RX_DATA_DD     <= ntIN_DELSEL_MUX;

    // Internal wires
    wire ntLRS_MUX;

    wire ntSYSCLK_MUX_I;

    wire ntIDDR_LRS_MUX;
    wire ntRX_DATA0;

    device LRS_MUX_L LRS_MUX_L
        parameter map
        (
            LRS_INV => LRS_INV
        )
        port map
        (
            I1  => ntLRS,
            I0  => ntLRS,
            Y   => ntLRS_MUX
        );


    device SYSCLK_MUX_I_L SYSCLK_MUX_I_L
        parameter map
        (
            CLK_INV => CLK_I_INV
        )
        port map
        (
            I1   => ntSYSCLK,
            I0   => ntSYSCLK,
            Y    => ntSYSCLK_MUX_I
        );

   // IDDR
    device IDDR_LRS_MUX_L IDDR_LRS_MUX_L
        parameter map
        (
            LRS_USED => IDDR_LRS_EN
        )
        port map
        (
            LRS   => ntLRS_MUX,
            ZERO  => 1'b0,
            Y     => ntIDDR_LRS_MUX
        );

    device IDDR_L IDDR_L
        port map
        (
            LRS            => ntIDDR_LRS_MUX,
            DATAOUT        => { RX_DATA[1:1], ntRX_DATA0 },
            IN             => ntIN_DELSEL_MUX,
            SYSCLK         => ntSYSCLK_MUX_I
        );

     device IDDR_IFF_MUX_L IDDR_IFF_MUX_L
        parameter map
        (
           DDR_USED => IDDR_MODE
        )
        port map
        (
            IDDR => ntRX_DATA0,
  
            Y    => RX_DATA[0]
        );

    device IN_DELSEL_MUX_L IN_DELSEL_MUX_L
        parameter map
        (
           DELAY_MODE => DELAY_MODE
        )
        port map
        (

            I0  => ntDIN,
            Y   => ntIN_DELSEL_MUX
        );

}; // end of structure netlist of devIGDDRIOLL

timing tnl of devIGDDRIOLL
{
    wire ntCK_I_INV;    
    wire ntCE_INV;
    wire ntRS_INV;
    
    if (CLK_I_INV == 1'b1)
    {
        operator V_INV ckinv
            parameter map
            (
                SECTION => "IOL_CLK_I_INV"
            )
            port map
            (
                I => SYSCLK,
                Z => ntCK_I_INV
            );
    }

    if (LRS_INV == 1'b1)
    {
        operator V_INV srinv
            parameter map
            (
                SECTION => "IOL_SR_INV"
            )
            port map
            (
                I => LRS,
                Z => ntRS_INV
            );
    }

     operator V_IGDDR igddr
        parameter map
        (
            LRS_EN      =>  ( IDDR_LRS_EN == 1'b1) ? "TRUE" : "FALSE", 
            GRS_EN      =>  ( GRS_EN == 1'b1)      ? "TRUE" : "FALSE"
        )
        port map
        (
            PADI           =>   DIN,      
            Q              =>   RX_DATA,
            RCLK           =>   (CLK_I_INV == 1'b1) ?  ntCK_I_INV : SYSCLK,
            RST            =>   (LRS_INV   == 1'b1) ?  ntRS_INV   : LRS
        );

    operator V_BUF ibuf
        parameter map
        (
           SECTION => "IBUF_IOL"
        )
        port map
        (
            I => DIN,
            Z => RX_DATA_DD
        );
};
