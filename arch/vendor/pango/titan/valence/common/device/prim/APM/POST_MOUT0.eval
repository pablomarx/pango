*****************************************************************

  Device    [POST_MOUT0]

  Author    []

  Abstract  []

  Revision History:

********************************************************************************/
prim
device POST_MOUT0
{
    parameter
    (
        config int OP_MULT_B = 0,
        config int OP_MULT_A = 0
    )   
    port
    (
         input MULT_A[45:0],SIGN_OUT[3:0], 
         output MOUT0[64:0]
    );
} // end of device POST_MOUT0

propagation prop_post_mout0 of POST_MOUT0
{
    if ( OP_MULT_B == 9 )
    {
        if (OP_MULT_A == 27)
        {
        propagate ( MULT_A[0]  --> MOUT0[0] ); 
        propagate ( MULT_A[1]  --> MOUT0[1] ); 
        propagate ( MULT_A[2]  --> MOUT0[2] ); 
        propagate ( MULT_A[3]  --> MOUT0[3] ); 
        propagate ( MULT_A[4]  --> MOUT0[4] ); 
        propagate ( MULT_A[5]  --> MOUT0[5] ); 
        propagate ( MULT_A[6]  --> MOUT0[6] ); 
        propagate ( MULT_A[7]  --> MOUT0[7] ); 
        propagate ( MULT_A[8]  --> MOUT0[8] ); 
        propagate ( MULT_A[9]  --> MOUT0[9] ); 
        propagate ( MULT_A[10] --> MOUT0[10] );
        propagate ( MULT_A[11] --> MOUT0[11] );
        propagate ( MULT_A[12] --> MOUT0[12] );
        propagate ( MULT_A[13] --> MOUT0[13] );
        propagate ( MULT_A[14] --> MOUT0[14] );
        propagate ( MULT_A[15] --> MOUT0[15] );
        propagate ( MULT_A[16] --> MOUT0[16] );
        propagate ( MULT_A[17] --> MOUT0[17] );
        propagate ( MULT_A[17] --> MOUT0[18] );
        propagate ( MULT_A[17] --> MOUT0[19] );
        propagate ( MULT_A[17] --> MOUT0[20] );
        propagate ( MULT_A[17] --> MOUT0[21] );
        propagate ( MULT_A[17] --> MOUT0[22] );
        propagate ( MULT_A[17] --> MOUT0[23] );
        propagate ( MULT_A[17] --> MOUT0[24] );
        propagate ( MULT_A[17] --> MOUT0[25] );
        propagate ( MULT_A[17] --> MOUT0[26] );
        propagate ( MULT_A[17] --> MOUT0[27] );
        propagate ( MULT_A[17] --> MOUT0[28] );
        propagate ( MULT_A[17] --> MOUT0[29] );
        propagate ( MULT_A[17] --> MOUT0[30] );
        propagate ( MULT_A[17] --> MOUT0[31] );
        
        propagate ( MULT_A[18] --> MOUT0[33] );
        propagate ( MULT_A[19] --> MOUT0[34] );
        propagate ( MULT_A[20] --> MOUT0[35] );
        propagate ( MULT_A[21] --> MOUT0[36] );
        propagate ( MULT_A[22] --> MOUT0[37] );
        propagate ( MULT_A[23] --> MOUT0[38] );
        propagate ( MULT_A[24] --> MOUT0[39] );
        propagate ( MULT_A[25] --> MOUT0[40] );
        propagate ( MULT_A[26] --> MOUT0[41] );
        propagate ( MULT_A[27] --> MOUT0[42] );
        propagate ( MULT_A[28] --> MOUT0[43] );
        propagate ( MULT_A[29] --> MOUT0[44] );
        propagate ( MULT_A[30] --> MOUT0[45] );
        propagate ( MULT_A[31] --> MOUT0[46] );
        propagate ( MULT_A[32] --> MOUT0[47] );
        propagate ( MULT_A[33] --> MOUT0[48] );
        propagate ( MULT_A[34] --> MOUT0[49] );
        propagate ( MULT_A[35] --> MOUT0[50] );
        propagate ( MULT_A[45] --> MOUT0[51] );
        propagate ( MULT_A[45] --> MOUT0[52] );
        propagate ( MULT_A[45] --> MOUT0[53] );
        propagate ( MULT_A[45] --> MOUT0[54] );
        propagate ( MULT_A[45] --> MOUT0[55] );
        propagate ( MULT_A[45] --> MOUT0[56] );
        propagate ( MULT_A[45] --> MOUT0[57] );
        propagate ( MULT_A[45] --> MOUT0[58] );
        propagate ( MULT_A[45] --> MOUT0[59] );
        propagate ( MULT_A[45] --> MOUT0[60] );
        propagate ( MULT_A[45] --> MOUT0[61] );
        propagate ( MULT_A[45] --> MOUT0[62] );
        propagate ( MULT_A[45] --> MOUT0[63] );
        propagate ( MULT_A[45] --> MOUT0[64] );
        }
        else
        {
        propagate ( MULT_A[0]  --> MOUT0[0] );    
        propagate ( MULT_A[1]  --> MOUT0[1] ); 
        propagate ( MULT_A[2]  --> MOUT0[2] );
        propagate ( MULT_A[3]  --> MOUT0[3] );
        propagate ( MULT_A[4]  --> MOUT0[4] );
        propagate ( MULT_A[5]  --> MOUT0[5] );
        propagate ( MULT_A[6]  --> MOUT0[6] );
        propagate ( MULT_A[7]  --> MOUT0[7] );
        propagate ( MULT_A[8]  --> MOUT0[8] );
        propagate ( MULT_A[9]  --> MOUT0[9] );
        propagate ( MULT_A[10] --> MOUT0[10] );
        propagate ( MULT_A[11] --> MOUT0[11] );
        propagate ( MULT_A[12] --> MOUT0[12] );
        propagate ( MULT_A[13] --> MOUT0[13] );
        propagate ( MULT_A[14] --> MOUT0[14] );
        propagate ( MULT_A[15] --> MOUT0[15] );
        propagate ( MULT_A[16] --> MOUT0[16] );
        propagate ( MULT_A[17] --> MOUT0[17] );
        propagate ( MULT_A[17] --> MOUT0[18] );
        propagate ( MULT_A[17] --> MOUT0[19] );
        propagate ( MULT_A[17] --> MOUT0[20] );
        propagate ( MULT_A[17] --> MOUT0[21] );
        propagate ( MULT_A[17] --> MOUT0[22] );
        propagate ( MULT_A[17] --> MOUT0[23] );
        propagate ( MULT_A[17] --> MOUT0[24] );
        propagate ( MULT_A[17] --> MOUT0[25] );
        propagate ( MULT_A[17] --> MOUT0[26] );
        propagate ( MULT_A[17] --> MOUT0[27] );
        propagate ( MULT_A[17] --> MOUT0[28] );
        propagate ( MULT_A[17] --> MOUT0[29] );
        propagate ( MULT_A[17] --> MOUT0[30] );
        propagate ( MULT_A[17] --> MOUT0[31] );
    
        propagate ( MULT_A[18] --> MOUT0[33] );
        propagate ( MULT_A[19] --> MOUT0[34] );
        propagate ( MULT_A[20] --> MOUT0[35] );
        propagate ( MULT_A[21] --> MOUT0[36] );
        propagate ( MULT_A[22] --> MOUT0[37] );
        propagate ( MULT_A[23] --> MOUT0[38] );
        propagate ( MULT_A[24] --> MOUT0[39] );
        propagate ( MULT_A[25] --> MOUT0[40] );
        propagate ( MULT_A[26] --> MOUT0[41] );
        propagate ( MULT_A[27] --> MOUT0[42] );
        propagate ( MULT_A[28] --> MOUT0[43] );
        propagate ( MULT_A[29] --> MOUT0[44] );
        propagate ( MULT_A[30] --> MOUT0[45] );
        propagate ( MULT_A[31] --> MOUT0[46] );
        propagate ( MULT_A[32] --> MOUT0[47] );
        propagate ( MULT_A[33] --> MOUT0[48] );
        propagate ( MULT_A[34] --> MOUT0[49] );
        propagate ( MULT_A[35] --> MOUT0[50] );      
        }
    }    
    else
    {
        if (OP_MULT_A == 27)
        {
        propagate ( MULT_A[0]  --> MOUT0[0] );    
        propagate ( MULT_A[1]  --> MOUT0[1] ); 
        propagate ( MULT_A[2]  --> MOUT0[2] );
        propagate ( MULT_A[3]  --> MOUT0[3] );
        propagate ( MULT_A[4]  --> MOUT0[4] );
        propagate ( MULT_A[5]  --> MOUT0[5] );
        propagate ( MULT_A[6]  --> MOUT0[6] );
        propagate ( MULT_A[7]  --> MOUT0[7] );
        propagate ( MULT_A[8]  --> MOUT0[8] );
        propagate ( MULT_A[9]  --> MOUT0[9] );
        propagate ( MULT_A[10] --> MOUT0[10] );
        propagate ( MULT_A[11] --> MOUT0[11] );
        propagate ( MULT_A[12] --> MOUT0[12] );
        propagate ( MULT_A[13] --> MOUT0[13] );
        propagate ( MULT_A[14] --> MOUT0[14] );
        propagate ( MULT_A[15] --> MOUT0[15] );
        propagate ( MULT_A[16] --> MOUT0[16] );
        propagate ( MULT_A[17] --> MOUT0[17] );
        propagate ( MULT_A[18] --> MOUT0[18] );
        propagate ( MULT_A[19] --> MOUT0[19] );
        propagate ( MULT_A[20] --> MOUT0[20] );
        propagate ( MULT_A[21] --> MOUT0[21] );
        propagate ( MULT_A[22] --> MOUT0[22] );
        propagate ( MULT_A[23] --> MOUT0[23] );
        propagate ( MULT_A[24] --> MOUT0[24] );
        propagate ( MULT_A[25] --> MOUT0[25] );
        propagate ( MULT_A[26] --> MOUT0[26] );
        propagate ( MULT_A[27] --> MOUT0[27] );
        propagate ( MULT_A[28] --> MOUT0[28] );
        propagate ( MULT_A[29] --> MOUT0[29] );
        propagate ( MULT_A[30] --> MOUT0[30] );
        propagate ( MULT_A[31] --> MOUT0[31] );
        propagate ( MULT_A[32] --> MOUT0[32] );
        propagate ( MULT_A[33] --> MOUT0[33] );
        propagate ( MULT_A[34] --> MOUT0[34] );
        propagate ( MULT_A[35] --> MOUT0[35] );
        propagate ( MULT_A[36] --> MOUT0[36] );
        propagate ( MULT_A[37] --> MOUT0[37] );
        propagate ( MULT_A[38] --> MOUT0[38] );
        propagate ( MULT_A[39] --> MOUT0[39] );
        propagate ( MULT_A[40] --> MOUT0[40] );
        propagate ( MULT_A[41] --> MOUT0[41] );
        propagate ( MULT_A[42] --> MOUT0[42] );
        propagate ( MULT_A[43] --> MOUT0[43] );
        propagate ( MULT_A[44] --> MOUT0[44] );
        propagate ( MULT_A[45] --> MOUT0[45] );
        propagate ( MULT_A[45] --> MOUT0[46] );
        propagate ( MULT_A[45] --> MOUT0[47] );
        propagate ( MULT_A[45] --> MOUT0[48] );
        propagate ( MULT_A[45] --> MOUT0[49] );
        propagate ( MULT_A[45] --> MOUT0[50] );
        propagate ( MULT_A[45] --> MOUT0[51] );
        propagate ( MULT_A[45] --> MOUT0[52] );
        propagate ( MULT_A[45] --> MOUT0[53] );
        propagate ( MULT_A[45] --> MOUT0[54] );
        propagate ( MULT_A[45] --> MOUT0[55] );
        propagate ( MULT_A[45] --> MOUT0[56] );
        propagate ( MULT_A[45] --> MOUT0[57] );
        propagate ( MULT_A[45] --> MOUT0[58] );
        propagate ( MULT_A[45] --> MOUT0[59] );
        propagate ( MULT_A[45] --> MOUT0[60] );
        propagate ( MULT_A[45] --> MOUT0[61] );
        propagate ( MULT_A[45] --> MOUT0[62] );
        propagate ( MULT_A[45] --> MOUT0[63] );
        propagate ( MULT_A[45] --> MOUT0[64] );
        }
        else
        {
        propagate ( MULT_A[0]  --> MOUT0[0] );    
        propagate ( MULT_A[1]  --> MOUT0[1] ); 
        propagate ( MULT_A[2]  --> MOUT0[2] );
        propagate ( MULT_A[3]  --> MOUT0[3] );
        propagate ( MULT_A[4]  --> MOUT0[4] );
        propagate ( MULT_A[5]  --> MOUT0[5] );
        propagate ( MULT_A[6]  --> MOUT0[6] );
        propagate ( MULT_A[7]  --> MOUT0[7] );
        propagate ( MULT_A[8]  --> MOUT0[8] );
        propagate ( MULT_A[9]  --> MOUT0[9] );
        propagate ( MULT_A[10] --> MOUT0[10] );
        propagate ( MULT_A[11] --> MOUT0[11] );
        propagate ( MULT_A[12] --> MOUT0[12] );
        propagate ( MULT_A[13] --> MOUT0[13] );
        propagate ( MULT_A[14] --> MOUT0[14] );
        propagate ( MULT_A[15] --> MOUT0[15] );
        propagate ( MULT_A[16] --> MOUT0[16] );
        propagate ( MULT_A[17] --> MOUT0[17] );
        propagate ( MULT_A[18] --> MOUT0[18] );
        propagate ( MULT_A[19] --> MOUT0[19] );
        propagate ( MULT_A[20] --> MOUT0[20] );
        propagate ( MULT_A[21] --> MOUT0[21] );
        propagate ( MULT_A[22] --> MOUT0[22] );
        propagate ( MULT_A[23] --> MOUT0[23] );
        propagate ( MULT_A[24] --> MOUT0[24] );
        propagate ( MULT_A[25] --> MOUT0[25] );
        propagate ( MULT_A[26] --> MOUT0[26] );
        propagate ( MULT_A[27] --> MOUT0[27] );
        propagate ( MULT_A[28] --> MOUT0[28] );
        propagate ( MULT_A[29] --> MOUT0[29] );
        propagate ( MULT_A[30] --> MOUT0[30] );
        propagate ( MULT_A[31] --> MOUT0[31] );
        propagate ( MULT_A[32] --> MOUT0[32] );
        propagate ( MULT_A[33] --> MOUT0[33] );
        propagate ( MULT_A[34] --> MOUT0[34] );
        propagate ( MULT_A[35] --> MOUT0[35] );
        propagate ( MULT_A[36] --> MOUT0[36] );
        propagate ( MULT_A[37] --> MOUT0[37] );
        propagate ( MULT_A[38] --> MOUT0[38] );
        propagate ( MULT_A[39] --> MOUT0[39] );
        propagate ( MULT_A[40] --> MOUT0[40] );
        propagate ( MULT_A[41] --> MOUT0[41] );
        propagate ( MULT_A[42] --> MOUT0[42] );
        propagate ( MULT_A[43] --> MOUT0[43] );
        propagate ( MULT_A[44] --> MOUT0[44] );
        propagate ( MULT_A[45] --> MOUT0[45] );       
        }


    } 
};