*****************************************************************

  Device    [POST_BI]

  Author    []

  Abstract  []

  Revision History:

********************************************************************************/
prim
device POST_BI
{
    parameter
    (
        config bit SEL_SAB_CR59 = 1'b0
    )
    port
    (
         input POST_OP[1:0],MULT_B[36:0],MOUT1[64:0],BR[35:0],CR[27:0],
         input xb_signed,yb_signed,asign_ext2,bsign_ext2,   
         output BI[64:0]
    );
} // end of device POST_BI

propagation prop_post_bi of POST_BI
{
    if (SEL_SAB_CR59 == 1'b0)
    {
        propagate ( MULT_B[19] --> BI[19] );
        propagate ( MULT_B[20] --> BI[20] );
        propagate ( MULT_B[21] --> BI[21] );
        propagate ( MULT_B[22] --> BI[22] );
        propagate ( MULT_B[23] --> BI[23] );
        propagate ( MULT_B[24] --> BI[24] );
        propagate ( MULT_B[25] --> BI[25] );
        propagate ( MULT_B[26] --> BI[26] );
        propagate ( MULT_B[27] --> BI[27] );
        propagate ( MULT_B[28] --> BI[28] );
        propagate ( MULT_B[29] --> BI[29] );
        propagate ( MULT_B[30] --> BI[30] );
        propagate ( MULT_B[31] --> BI[31] );
        propagate ( MULT_B[32] --> BI[32] );
        propagate ( MULT_B[33] --> BI[33] );
        propagate ( MULT_B[34] --> BI[34] );
        propagate ( MULT_B[35] --> BI[35] );
        propagate ( MULT_B[36] --> BI[36] );
        propagate ( MOUT1[0]  --> BI[0] );    
        propagate ( MOUT1[1]  --> BI[1] ); 
        propagate ( MOUT1[2]  --> BI[2] );
        propagate ( MOUT1[3]  --> BI[3] );
        propagate ( MOUT1[4]  --> BI[4] );
        propagate ( MOUT1[5]  --> BI[5] );
        propagate ( MOUT1[6]  --> BI[6] );
        propagate ( MOUT1[7]  --> BI[7] );
        propagate ( MOUT1[8]  --> BI[8] );
        propagate ( MOUT1[9]  --> BI[9] );
        propagate ( MOUT1[10] --> BI[10] );
        propagate ( MOUT1[11] --> BI[11] );
        propagate ( MOUT1[12] --> BI[12] );
        propagate ( MOUT1[13] --> BI[13] );
        propagate ( MOUT1[14] --> BI[14] );
        propagate ( MOUT1[15] --> BI[15] );
        propagate ( MOUT1[16] --> BI[16] );
        propagate ( MOUT1[17] --> BI[17] );
        propagate ( MOUT1[18] --> BI[18] );
        propagate ( MOUT1[19] --> BI[19] );
        propagate ( MOUT1[20] --> BI[20] );
        propagate ( MOUT1[21] --> BI[21] );
        propagate ( MOUT1[22] --> BI[22] );
        propagate ( MOUT1[23] --> BI[23] );
        propagate ( MOUT1[24] --> BI[24] );
        propagate ( MOUT1[25] --> BI[25] );
        propagate ( MOUT1[26] --> BI[26] );
        propagate ( MOUT1[27] --> BI[27] );
        propagate ( MOUT1[28] --> BI[28] );
        propagate ( MOUT1[29] --> BI[29] );
        propagate ( MOUT1[30] --> BI[30] );
        propagate ( MOUT1[31] --> BI[31] );
        propagate ( MOUT1[32] --> BI[32] );
        propagate ( MOUT1[33] --> BI[33] );
        propagate ( MOUT1[34] --> BI[34] );
        propagate ( MOUT1[35] --> BI[35] );
        propagate ( MOUT1[36] --> BI[36] );
        propagate ( MOUT1[37] --> BI[37] );
        propagate ( MOUT1[38] --> BI[38] );
        propagate ( MOUT1[39] --> BI[39] );
        propagate ( MOUT1[40] --> BI[40] );
        propagate ( MOUT1[41] --> BI[41] );
        propagate ( MOUT1[42] --> BI[42] );
        propagate ( MOUT1[43] --> BI[43] );
        propagate ( MOUT1[44] --> BI[44] );
        propagate ( MOUT1[45] --> BI[45] );
        propagate ( MOUT1[46] --> BI[46] );
        propagate ( MOUT1[47] --> BI[47] );
        propagate ( MOUT1[48] --> BI[48] );
        propagate ( MOUT1[49] --> BI[49] );
        propagate ( MOUT1[50] --> BI[50] );
        propagate ( MOUT1[51] --> BI[51] );
        propagate ( MOUT1[52] --> BI[52] );
        propagate ( MOUT1[53] --> BI[53] );
        propagate ( MOUT1[54] --> BI[54] );
        propagate ( MOUT1[55] --> BI[55] );
        propagate ( MOUT1[56] --> BI[56] );
        propagate ( MOUT1[57] --> BI[57] );
        propagate ( MOUT1[58] --> BI[58] );
        propagate ( MOUT1[59] --> BI[59] );
        propagate ( MOUT1[60] --> BI[60] );
        propagate ( MOUT1[61] --> BI[61] );
        propagate ( MOUT1[62] --> BI[62] );
        propagate ( MOUT1[63] --> BI[63] );
        propagate ( MOUT1[64] --> BI[64] );        
        propagate ( BR[0]  --> BI[0] );    
        propagate ( BR[1]  --> BI[1] ); 
        propagate ( BR[2]  --> BI[2] );
        propagate ( BR[3]  --> BI[3] );
        propagate ( BR[4]  --> BI[4] );
        propagate ( BR[5]  --> BI[5] );
        propagate ( BR[6]  --> BI[6] );
        propagate ( BR[7]  --> BI[7] );
        propagate ( BR[8]  --> BI[8] );
        propagate ( BR[9]  --> BI[9] );
        propagate ( BR[10] --> BI[10] );
        propagate ( BR[11] --> BI[11] );
        propagate ( BR[12] --> BI[12] );
        propagate ( BR[13] --> BI[13] );
        propagate ( BR[14] --> BI[14] );
        propagate ( BR[15] --> BI[15] );
        propagate ( BR[16] --> BI[16] );
        propagate ( BR[17] --> BI[17] );
        propagate ( BR[18] --> BI[18] );
        propagate ( BR[19] --> BI[19] );
        propagate ( BR[20] --> BI[20] );
        propagate ( BR[21] --> BI[21] );
        propagate ( BR[22] --> BI[22] );
        propagate ( BR[23] --> BI[23] );
        propagate ( BR[24] --> BI[24] );
        propagate ( BR[25] --> BI[25] );
        propagate ( BR[26] --> BI[26] );
        propagate ( BR[27] --> BI[27] );
        propagate ( BR[28] --> BI[28] );
        propagate ( BR[29] --> BI[29] );
        propagate ( BR[30] --> BI[30] );
        propagate ( BR[31] --> BI[31] );
        propagate ( BR[32] --> BI[32] );
        propagate ( BR[33] --> BI[33] );
        propagate ( BR[34] --> BI[34] );
        propagate ( BR[35] --> BI[35] );      
        propagate ( CR[0]  --> BI[36] );
        propagate ( CR[1]  --> BI[37] );
        propagate ( CR[2]  --> BI[38] );
        propagate ( CR[3]  --> BI[39] );
        propagate ( CR[4]  --> BI[40] );
        propagate ( CR[5]  --> BI[41] );
        propagate ( CR[6]  --> BI[42] );
        propagate ( CR[7]  --> BI[43] );
        propagate ( CR[8]  --> BI[44] );
        propagate ( CR[9]  --> BI[45] );
        propagate ( CR[10] --> BI[46] );
        propagate ( CR[11] --> BI[47] );
        propagate ( CR[12] --> BI[48] );
        propagate ( CR[13] --> BI[49] );
        propagate ( CR[14] --> BI[50] );
        propagate ( CR[15] --> BI[51] );
        propagate ( CR[16] --> BI[52] );
        propagate ( CR[17] --> BI[53] );
        propagate ( CR[18] --> BI[54] );
        propagate ( CR[19] --> BI[55] );
        propagate ( CR[20] --> BI[56] );
        propagate ( CR[21] --> BI[57] );
        propagate ( CR[22] --> BI[58] );
        propagate ( CR[23] --> BI[59] );
        propagate ( CR[24] --> BI[60] );
        propagate ( CR[25] --> BI[61] );
        propagate ( CR[26] --> BI[62] );
        propagate ( CR[27] --> BI[63] );    
        propagate ( CR[27] --> BI[64] );  
        propagate ( xb_signed --> BI[64] );
        propagate ( yb_signed --> BI[64] );           
    }

    else
    {   
        propagate ( MULT_B[19] --> BI[19] );
        propagate ( MULT_B[20] --> BI[20] );
        propagate ( MULT_B[21] --> BI[21] );
        propagate ( MULT_B[22] --> BI[22] );
        propagate ( MULT_B[23] --> BI[23] );
        propagate ( MULT_B[24] --> BI[24] );
        propagate ( MULT_B[25] --> BI[25] );
        propagate ( MULT_B[26] --> BI[26] );
        propagate ( MULT_B[27] --> BI[27] );
        propagate ( MULT_B[28] --> BI[28] );
        propagate ( MULT_B[29] --> BI[29] );
        propagate ( MULT_B[30] --> BI[30] );
        propagate ( MULT_B[31] --> BI[31] );
        propagate ( MULT_B[32] --> BI[32] );
        propagate ( MULT_B[33] --> BI[33] );
        propagate ( MULT_B[34] --> BI[34] );
        propagate ( MULT_B[35] --> BI[35] );
        propagate ( MULT_B[36] --> BI[36] );
        propagate ( MOUT1[0]  --> BI[0] );    
        propagate ( MOUT1[1]  --> BI[1] ); 
        propagate ( MOUT1[2]  --> BI[2] );
        propagate ( MOUT1[3]  --> BI[3] );
        propagate ( MOUT1[4]  --> BI[4] );
        propagate ( MOUT1[5]  --> BI[5] );
        propagate ( MOUT1[6]  --> BI[6] );
        propagate ( MOUT1[7]  --> BI[7] );
        propagate ( MOUT1[8]  --> BI[8] );
        propagate ( MOUT1[9]  --> BI[9] );
        propagate ( MOUT1[10] --> BI[10] );
        propagate ( MOUT1[11] --> BI[11] );
        propagate ( MOUT1[12] --> BI[12] );
        propagate ( MOUT1[13] --> BI[13] );
        propagate ( MOUT1[14] --> BI[14] );
        propagate ( MOUT1[15] --> BI[15] );
        propagate ( MOUT1[16] --> BI[16] );
        propagate ( MOUT1[17] --> BI[17] );
        propagate ( MOUT1[18] --> BI[18] );
        propagate ( MOUT1[19] --> BI[19] );
        propagate ( MOUT1[20] --> BI[20] );
        propagate ( MOUT1[21] --> BI[21] );
        propagate ( MOUT1[22] --> BI[22] );
        propagate ( MOUT1[23] --> BI[23] );
        propagate ( MOUT1[24] --> BI[24] );
        propagate ( MOUT1[25] --> BI[25] );
        propagate ( MOUT1[26] --> BI[26] );
        propagate ( MOUT1[27] --> BI[27] );
        propagate ( MOUT1[28] --> BI[28] );
        propagate ( MOUT1[29] --> BI[29] );
        propagate ( MOUT1[30] --> BI[30] );
        propagate ( MOUT1[31] --> BI[31] );
        propagate ( MOUT1[32] --> BI[32] );
        propagate ( MOUT1[33] --> BI[33] );
        propagate ( MOUT1[34] --> BI[34] );
        propagate ( MOUT1[35] --> BI[35] );
        propagate ( MOUT1[36] --> BI[36] );
        propagate ( MOUT1[37] --> BI[37] );
        propagate ( MOUT1[38] --> BI[38] );
        propagate ( MOUT1[39] --> BI[39] );
        propagate ( MOUT1[40] --> BI[40] );
        propagate ( MOUT1[41] --> BI[41] );
        propagate ( MOUT1[42] --> BI[42] );
        propagate ( MOUT1[43] --> BI[43] );
        propagate ( MOUT1[44] --> BI[44] );
        propagate ( MOUT1[45] --> BI[45] );
        propagate ( MOUT1[46] --> BI[46] );
        propagate ( MOUT1[47] --> BI[47] );
        propagate ( MOUT1[48] --> BI[48] );
        propagate ( MOUT1[49] --> BI[49] );
        propagate ( MOUT1[50] --> BI[50] );
        propagate ( MOUT1[51] --> BI[51] );
        propagate ( MOUT1[52] --> BI[52] );
        propagate ( MOUT1[53] --> BI[53] );
        propagate ( MOUT1[54] --> BI[54] );
        propagate ( MOUT1[55] --> BI[55] );
        propagate ( MOUT1[56] --> BI[56] );
        propagate ( MOUT1[57] --> BI[57] );
        propagate ( MOUT1[58] --> BI[58] );
        propagate ( MOUT1[59] --> BI[59] );
        propagate ( MOUT1[60] --> BI[60] );
        propagate ( MOUT1[61] --> BI[61] );
        propagate ( MOUT1[62] --> BI[62] );
        propagate ( MOUT1[63] --> BI[63] );
        propagate ( MOUT1[64] --> BI[64] );        
        propagate ( BR[0]  --> BI[0] );    
        propagate ( BR[1]  --> BI[1] ); 
        propagate ( BR[2]  --> BI[2] );
        propagate ( BR[3]  --> BI[3] );
        propagate ( BR[4]  --> BI[4] );
        propagate ( BR[5]  --> BI[5] );
        propagate ( BR[6]  --> BI[6] );
        propagate ( BR[7]  --> BI[7] );
        propagate ( BR[8]  --> BI[8] );
        propagate ( BR[9]  --> BI[9] );
        propagate ( BR[10] --> BI[10] );
        propagate ( BR[11] --> BI[11] );
        propagate ( BR[12] --> BI[12] );
        propagate ( BR[13] --> BI[13] );
        propagate ( BR[14] --> BI[14] );
        propagate ( BR[15] --> BI[15] );
        propagate ( BR[16] --> BI[16] );
        propagate ( BR[17] --> BI[17] );
        propagate ( BR[18] --> BI[18] );
        propagate ( BR[19] --> BI[19] );
        propagate ( BR[20] --> BI[20] );
        propagate ( BR[21] --> BI[21] );
        propagate ( BR[22] --> BI[22] );
        propagate ( BR[23] --> BI[23] );
        propagate ( BR[24] --> BI[24] );
        propagate ( BR[25] --> BI[25] );
        propagate ( BR[26] --> BI[26] );
        propagate ( BR[27] --> BI[27] );
        propagate ( BR[28] --> BI[28] );
        propagate ( BR[29] --> BI[29] );
        propagate ( BR[30] --> BI[30] );
        propagate ( BR[31] --> BI[31] );
        propagate ( BR[32] --> BI[32] );
        propagate ( BR[33] --> BI[33] );
        propagate ( BR[34] --> BI[34] );
        propagate ( BR[35] --> BI[35] );      
        propagate ( CR[0]  --> BI[36] );
        propagate ( CR[1]  --> BI[37] );
        propagate ( CR[2]  --> BI[38] );
        propagate ( CR[3]  --> BI[39] );
        propagate ( CR[4]  --> BI[40] );
        propagate ( CR[5]  --> BI[41] );
        propagate ( CR[6]  --> BI[42] );
        propagate ( CR[7]  --> BI[43] );
        propagate ( CR[8]  --> BI[44] );
        propagate ( CR[9]  --> BI[45] );
        propagate ( CR[10] --> BI[46] );
        propagate ( CR[11] --> BI[47] );
        propagate ( CR[12] --> BI[48] );
        propagate ( CR[13] --> BI[49] );
        propagate ( CR[14] --> BI[50] );
        propagate ( CR[15] --> BI[51] );
        propagate ( CR[16] --> BI[52] );
        propagate ( CR[17] --> BI[53] );
        propagate ( CR[18] --> BI[54] );
        propagate ( CR[19] --> BI[55] );
        propagate ( CR[20] --> BI[56] );
        propagate ( CR[21] --> BI[57] );
        propagate ( CR[22] --> BI[58] );
        propagate ( CR[23] --> BI[59] );
        propagate ( CR[24] --> BI[60] );
        propagate ( CR[25] --> BI[61] );
        propagate ( CR[26] --> BI[62] );
        propagate ( CR[27] --> BI[63] );    
        propagate ( CR[27] --> BI[64] );  
        propagate ( yb_signed --> BI[64] );

    }    
        
};