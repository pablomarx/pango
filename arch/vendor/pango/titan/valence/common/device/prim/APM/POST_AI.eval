*****************************************************************

  Device    [POST_AI]

  Author    []

  Abstract  []

  Revision History:

********************************************************************************/
prim
device POST_AI
{
    parameter
    (
        config bit SEL_SAB_CR27 = 1'b0
    )
    port
    (
         input POST_OP[1:0],MOUT0[64:0],AR[35:0],CR[27:0],
         input xb_signed,yb_signed,   
         output AI[64:0]
    );
} // end of device POST_AI

propagation prop_post_ai of POST_AI
{
    if (SEL_SAB_CR27 == 1'b0)
    {
        propagate ( MOUT0[0]  --> AI[0] );    
        propagate ( MOUT0[1]  --> AI[1] ); 
        propagate ( MOUT0[2]  --> AI[2] );
        propagate ( MOUT0[3]  --> AI[3] );
        propagate ( MOUT0[4]  --> AI[4] );
        propagate ( MOUT0[5]  --> AI[5] );
        propagate ( MOUT0[6]  --> AI[6] );
        propagate ( MOUT0[7]  --> AI[7] );
        propagate ( MOUT0[8]  --> AI[8] );
        propagate ( MOUT0[9]  --> AI[9] );
        propagate ( MOUT0[10] --> AI[10] );
        propagate ( MOUT0[11] --> AI[11] );
        propagate ( MOUT0[12] --> AI[12] );
        propagate ( MOUT0[13] --> AI[13] );
        propagate ( MOUT0[14] --> AI[14] );
        propagate ( MOUT0[15] --> AI[15] );
        propagate ( MOUT0[16] --> AI[16] );
        propagate ( MOUT0[17] --> AI[17] );
        propagate ( MOUT0[18] --> AI[18] );
        propagate ( MOUT0[19] --> AI[19] );
        propagate ( MOUT0[20] --> AI[20] );
        propagate ( MOUT0[21] --> AI[21] );
        propagate ( MOUT0[22] --> AI[22] );
        propagate ( MOUT0[23] --> AI[23] );
        propagate ( MOUT0[24] --> AI[24] );
        propagate ( MOUT0[25] --> AI[25] );
        propagate ( MOUT0[26] --> AI[26] );
        propagate ( MOUT0[27] --> AI[27] );
        propagate ( MOUT0[28] --> AI[28] );
        propagate ( MOUT0[29] --> AI[29] );
        propagate ( MOUT0[30] --> AI[30] );
        propagate ( MOUT0[31] --> AI[31] );
        propagate ( MOUT0[32] --> AI[32] );
        propagate ( MOUT0[33] --> AI[33] );
        propagate ( MOUT0[34] --> AI[34] );
        propagate ( MOUT0[35] --> AI[35] );
        propagate ( MOUT0[36] --> AI[36] );
        propagate ( MOUT0[37] --> AI[37] );
        propagate ( MOUT0[38] --> AI[38] );
        propagate ( MOUT0[39] --> AI[39] );
        propagate ( MOUT0[40] --> AI[40] );
        propagate ( MOUT0[41] --> AI[41] );
        propagate ( MOUT0[42] --> AI[42] );
        propagate ( MOUT0[43] --> AI[43] );
        propagate ( MOUT0[44] --> AI[44] );
        propagate ( MOUT0[45] --> AI[45] );
        propagate ( MOUT0[46] --> AI[46] );
        propagate ( MOUT0[47] --> AI[47] );
        propagate ( MOUT0[48] --> AI[48] );
        propagate ( MOUT0[49] --> AI[49] );
        propagate ( MOUT0[50] --> AI[50] );
        propagate ( MOUT0[51] --> AI[51] );
        propagate ( MOUT0[52] --> AI[52] );
        propagate ( MOUT0[53] --> AI[53] );
        propagate ( MOUT0[54] --> AI[54] );
        propagate ( MOUT0[55] --> AI[55] );
        propagate ( MOUT0[56] --> AI[56] );
        propagate ( MOUT0[57] --> AI[57] );
        propagate ( MOUT0[58] --> AI[58] );
        propagate ( MOUT0[59] --> AI[59] );
        propagate ( MOUT0[60] --> AI[60] );
        propagate ( MOUT0[61] --> AI[61] );
        propagate ( MOUT0[62] --> AI[62] );
        propagate ( MOUT0[63] --> AI[63] );
        propagate ( MOUT0[64] --> AI[64] );  
        propagate ( AR[0]  --> AI[0] );    
        propagate ( AR[1]  --> AI[1] ); 
        propagate ( AR[2]  --> AI[2] );
        propagate ( AR[3]  --> AI[3] );
        propagate ( AR[4]  --> AI[4] );
        propagate ( AR[5]  --> AI[5] );
        propagate ( AR[6]  --> AI[6] );
        propagate ( AR[7]  --> AI[7] );
        propagate ( AR[8]  --> AI[8] );
        propagate ( AR[9]  --> AI[9] );
        propagate ( AR[10] --> AI[10] );
        propagate ( AR[11] --> AI[11] );
        propagate ( AR[12] --> AI[12] );
        propagate ( AR[13] --> AI[13] );
        propagate ( AR[14] --> AI[14] );
        propagate ( AR[15] --> AI[15] );
        propagate ( AR[16] --> AI[16] );
        propagate ( AR[17] --> AI[17] );
        propagate ( AR[18] --> AI[18] );
        propagate ( AR[19] --> AI[19] );
        propagate ( AR[20] --> AI[20] );
        propagate ( AR[21] --> AI[21] );
        propagate ( AR[22] --> AI[22] );
        propagate ( AR[23] --> AI[23] );
        propagate ( AR[24] --> AI[24] );
        propagate ( AR[25] --> AI[25] );
        propagate ( AR[26] --> AI[26] );
        propagate ( AR[27] --> AI[27] );
        propagate ( AR[28] --> AI[28] );
        propagate ( AR[29] --> AI[29] );
        propagate ( AR[30] --> AI[30] );
        propagate ( AR[31] --> AI[31] );
        propagate ( AR[32] --> AI[32] );
        propagate ( AR[33] --> AI[33] );
        propagate ( AR[34] --> AI[34] );
        propagate ( AR[35] --> AI[35] );      
        propagate ( CR[0]  --> AI[36] );
        propagate ( CR[1]  --> AI[37] );
        propagate ( CR[2]  --> AI[38] );
        propagate ( CR[3]  --> AI[39] );
        propagate ( CR[4]  --> AI[40] );
        propagate ( CR[5]  --> AI[41] );
        propagate ( CR[6]  --> AI[42] );
        propagate ( CR[7]  --> AI[43] );
        propagate ( CR[8]  --> AI[44] );
        propagate ( CR[9]  --> AI[45] );
        propagate ( CR[10] --> AI[46] );
        propagate ( CR[11] --> AI[47] );
        propagate ( CR[12] --> AI[48] );
        propagate ( CR[13] --> AI[49] );
        propagate ( CR[14] --> AI[50] );
        propagate ( CR[15] --> AI[51] );
        propagate ( CR[16] --> AI[52] );
        propagate ( CR[17] --> AI[53] );
        propagate ( CR[18] --> AI[54] );
        propagate ( CR[19] --> AI[55] );
        propagate ( CR[20] --> AI[56] );
        propagate ( CR[21] --> AI[57] );
        propagate ( CR[22] --> AI[58] );
        propagate ( CR[23] --> AI[59] );
        propagate ( CR[24] --> AI[60] );
        propagate ( CR[25] --> AI[61] );
        propagate ( CR[26] --> AI[62] );
        propagate ( CR[27] --> AI[63] );      
        propagate ( xb_signed --> AI[64] );
        propagate ( yb_signed --> AI[64] );     
    }

    else
    {
      propagate ( MOUT0[0]  --> AI[0] ); 
      propagate ( MOUT0[1]  --> AI[1] ); 
      propagate ( MOUT0[2]  --> AI[2] ); 
      propagate ( MOUT0[3]  --> AI[3] ); 
      propagate ( MOUT0[4]  --> AI[4] ); 
      propagate ( MOUT0[5]  --> AI[5] ); 
      propagate ( MOUT0[6]  --> AI[6] ); 
      propagate ( MOUT0[7]  --> AI[7] ); 
      propagate ( MOUT0[8]  --> AI[8] ); 
      propagate ( MOUT0[9]  --> AI[9] ); 
      propagate ( MOUT0[10] --> AI[10] );
      propagate ( MOUT0[11] --> AI[11] );
      propagate ( MOUT0[12] --> AI[12] );
      propagate ( MOUT0[13] --> AI[13] );
      propagate ( MOUT0[14] --> AI[14] );
      propagate ( MOUT0[15] --> AI[15] );
      propagate ( MOUT0[16] --> AI[16] );
      propagate ( MOUT0[17] --> AI[17] );
      propagate ( MOUT0[18] --> AI[18] );
      propagate ( MOUT0[19] --> AI[19] );
      propagate ( MOUT0[20] --> AI[20] );
      propagate ( MOUT0[21] --> AI[21] );
      propagate ( MOUT0[22] --> AI[22] );
      propagate ( MOUT0[23] --> AI[23] );
      propagate ( MOUT0[24] --> AI[24] );
      propagate ( MOUT0[25] --> AI[25] );
      propagate ( MOUT0[26] --> AI[26] );
      propagate ( MOUT0[27] --> AI[27] );
      propagate ( MOUT0[28] --> AI[28] );
      propagate ( MOUT0[29] --> AI[29] );
      propagate ( MOUT0[30] --> AI[30] );
      propagate ( MOUT0[31] --> AI[31] );
      propagate ( MOUT0[32] --> AI[32] );
      propagate ( MOUT0[33] --> AI[33] );
      propagate ( MOUT0[34] --> AI[34] );
      propagate ( MOUT0[35] --> AI[35] );
      propagate ( MOUT0[36] --> AI[36] );
      propagate ( MOUT0[37] --> AI[37] );
      propagate ( MOUT0[38] --> AI[38] );
      propagate ( MOUT0[39] --> AI[39] );
      propagate ( MOUT0[40] --> AI[40] );
      propagate ( MOUT0[41] --> AI[41] );
      propagate ( MOUT0[42] --> AI[42] );
      propagate ( MOUT0[43] --> AI[43] );
      propagate ( MOUT0[44] --> AI[44] );
      propagate ( MOUT0[45] --> AI[45] );
      propagate ( MOUT0[46] --> AI[46] );
      propagate ( MOUT0[47] --> AI[47] );
      propagate ( MOUT0[48] --> AI[48] );
      propagate ( MOUT0[49] --> AI[49] );
      propagate ( MOUT0[50] --> AI[50] );
      propagate ( MOUT0[51] --> AI[51] );
      propagate ( MOUT0[52] --> AI[52] );
      propagate ( MOUT0[53] --> AI[53] );
      propagate ( MOUT0[54] --> AI[54] );
      propagate ( MOUT0[55] --> AI[55] );
      propagate ( MOUT0[56] --> AI[56] );
      propagate ( MOUT0[57] --> AI[57] );
      propagate ( MOUT0[58] --> AI[58] );
      propagate ( MOUT0[59] --> AI[59] );
      propagate ( MOUT0[60] --> AI[60] );
      propagate ( MOUT0[61] --> AI[61] );
      propagate ( MOUT0[62] --> AI[62] );
      propagate ( MOUT0[63] --> AI[63] );
      propagate ( MOUT0[64] --> AI[64] );
      propagate ( AR[0]  --> AI[0] );    
      propagate ( AR[1]  --> AI[1] );    
      propagate ( AR[2]  --> AI[2] );    
      propagate ( AR[3]  --> AI[3] );    
      propagate ( AR[4]  --> AI[4] );    
      propagate ( AR[5]  --> AI[5] );    
      propagate ( AR[6]  --> AI[6] );    
      propagate ( AR[7]  --> AI[7] );    
      propagate ( AR[8]  --> AI[8] );    
      propagate ( AR[9]  --> AI[9] );    
      propagate ( AR[10] --> AI[10] );   
      propagate ( AR[11] --> AI[11] );   
      propagate ( AR[12] --> AI[12] );   
      propagate ( AR[13] --> AI[13] );   
      propagate ( AR[14] --> AI[14] );   
      propagate ( AR[15] --> AI[15] );   
      propagate ( AR[16] --> AI[16] );   
      propagate ( AR[17] --> AI[17] );   
      propagate ( AR[18] --> AI[18] );   
      propagate ( AR[19] --> AI[19] );   
      propagate ( AR[20] --> AI[20] );   
      propagate ( AR[21] --> AI[21] );   
      propagate ( AR[22] --> AI[22] );   
      propagate ( AR[23] --> AI[23] );   
      propagate ( AR[24] --> AI[24] );   
      propagate ( AR[25] --> AI[25] );   
      propagate ( AR[26] --> AI[26] );   
      propagate ( AR[27] --> AI[27] );   
      propagate ( AR[28] --> AI[28] );   
      propagate ( AR[29] --> AI[29] );   
      propagate ( AR[30] --> AI[30] );   
      propagate ( AR[31] --> AI[31] );   
      propagate ( AR[32] --> AI[32] );   
      propagate ( AR[33] --> AI[33] );   
      propagate ( AR[34] --> AI[34] );   
      propagate ( AR[35] --> AI[35] );   
      propagate ( CR[0]  --> AI[36] );   
      propagate ( CR[1]  --> AI[37] );   
      propagate ( CR[2]  --> AI[38] );   
      propagate ( CR[3]  --> AI[39] );   
      propagate ( CR[4]  --> AI[40] );   
      propagate ( CR[5]  --> AI[41] );   
      propagate ( CR[6]  --> AI[42] );   
      propagate ( CR[7]  --> AI[43] );   
      propagate ( CR[8]  --> AI[44] );   
      propagate ( CR[9]  --> AI[45] );   
      propagate ( CR[10] --> AI[46] );   
      propagate ( CR[11] --> AI[47] );   
      propagate ( CR[12] --> AI[48] );   
      propagate ( CR[13] --> AI[49] );   
      propagate ( CR[14] --> AI[50] );   
      propagate ( CR[15] --> AI[51] );   
      propagate ( CR[16] --> AI[52] );   
      propagate ( CR[17] --> AI[53] );   
      propagate ( CR[18] --> AI[54] );   
      propagate ( CR[19] --> AI[55] );   
      propagate ( CR[20] --> AI[56] );   
      propagate ( CR[21] --> AI[57] );   
      propagate ( CR[22] --> AI[58] );   
      propagate ( CR[23] --> AI[59] );   
      propagate ( CR[24] --> AI[60] );   
      propagate ( CR[25] --> AI[61] );   
      propagate ( CR[26] --> AI[62] );   
      propagate ( CR[27] --> AI[63] );   
      propagate ( xb_signed --> AI[64] );
    }    
        
};