*****************************************************************

  Device    [POST_MOUT1]

  Author    []

  Abstract  []

  Revision History:

********************************************************************************/
prim
device POST_MOUT1
{
    parameter
    (
        //config bit M9_MODE = 1'b0
        config int OP_MULT_B = 0
    )   
    port
    (
         input MULT_B[36:0],SIGN_OUT[3:0],D2,
         output MOUT1[64:0]
    );
} // end of device POST_MOUT1

propagation prop_post_mout1 of POST_MOUT1
{
    if ( OP_MULT_B == 9 )
    {
        propagate (MULT_B[36:0] --> MOUT1 );
        propagate ( MULT_B[0]  --> MOUT1[0] );
        propagate ( MULT_B[1]  --> MOUT1[1] ); 
        propagate ( MULT_B[2]  --> MOUT1[2] );
        propagate ( MULT_B[3]  --> MOUT1[3] );
        propagate ( MULT_B[4]  --> MOUT1[4] );
        propagate ( MULT_B[5]  --> MOUT1[5] );
        propagate ( MULT_B[6]  --> MOUT1[6] );
        propagate ( MULT_B[7]  --> MOUT1[7] );
        propagate ( MULT_B[8]  --> MOUT1[8] );
        propagate ( MULT_B[9]  --> MOUT1[9] );
        propagate ( MULT_B[10] --> MOUT1[10] );
        propagate ( MULT_B[11] --> MOUT1[11] );
        propagate ( MULT_B[12] --> MOUT1[12] );
        propagate ( MULT_B[13] --> MOUT1[13] );
        propagate ( MULT_B[14] --> MOUT1[14] );
        propagate ( MULT_B[15] --> MOUT1[15] );
        propagate ( MULT_B[16] --> MOUT1[16] );
        propagate ( MULT_B[17] --> MOUT1[17] );
        propagate ( D2 --> MOUT1[18] );
        propagate ( D2 --> MOUT1[19] );
        propagate ( D2 --> MOUT1[20] );
        propagate ( D2 --> MOUT1[21] );
        propagate ( D2 --> MOUT1[22] );
        propagate ( D2 --> MOUT1[23] );
        propagate ( D2 --> MOUT1[24] );
        propagate ( D2 --> MOUT1[25] );
        propagate ( D2 --> MOUT1[26] );
        propagate ( D2 --> MOUT1[27] );
        propagate ( D2 --> MOUT1[28] );
        propagate ( D2 --> MOUT1[29] );
        propagate ( D2 --> MOUT1[30] );
        propagate ( D2 --> MOUT1[31] );

        propagate ( MULT_B[19] --> MOUT1[33] );
        propagate ( MULT_B[20] --> MOUT1[34] );
        propagate ( MULT_B[21] --> MOUT1[35] );
        propagate ( MULT_B[22] --> MOUT1[36] );
        propagate ( MULT_B[23] --> MOUT1[37] );
        propagate ( MULT_B[24] --> MOUT1[38] );
        propagate ( MULT_B[25] --> MOUT1[39] );
        propagate ( MULT_B[26] --> MOUT1[40] );
        propagate ( MULT_B[27] --> MOUT1[41] );
        propagate ( MULT_B[28] --> MOUT1[42] );
        propagate ( MULT_B[29] --> MOUT1[43] );
        propagate ( MULT_B[30] --> MOUT1[44] );
        propagate ( MULT_B[31] --> MOUT1[45] );
        propagate ( MULT_B[32] --> MOUT1[46] );
        propagate ( MULT_B[33] --> MOUT1[47] );
        propagate ( MULT_B[34] --> MOUT1[48] );
        propagate ( MULT_B[35] --> MOUT1[49] );
        propagate ( MULT_B[35] --> MOUT1[50] );
        propagate ( MULT_B[36] --> MOUT1[51] );
        propagate ( MULT_B[36] --> MOUT1[52] );
        propagate ( MULT_B[36] --> MOUT1[53] );
        propagate ( MULT_B[36] --> MOUT1[54] );
        propagate ( MULT_B[36] --> MOUT1[55] );
        propagate ( MULT_B[36] --> MOUT1[56] );
        propagate ( MULT_B[36] --> MOUT1[57] );
        propagate ( MULT_B[36] --> MOUT1[58] );
        propagate ( MULT_B[36] --> MOUT1[59] );
        propagate ( MULT_B[36] --> MOUT1[60] );
        propagate ( MULT_B[36] --> MOUT1[61] );
        propagate ( MULT_B[36] --> MOUT1[62] );
        propagate ( MULT_B[36] --> MOUT1[63] );
        propagate ( MULT_B[36] --> MOUT1[64] );
    }    
    else
    {
        propagate ( MULT_B[0]  --> MOUT1[0] );    
        propagate ( MULT_B[1]  --> MOUT1[1] ); 
        propagate ( MULT_B[2]  --> MOUT1[2] );
        propagate ( MULT_B[3]  --> MOUT1[3] );
        propagate ( MULT_B[4]  --> MOUT1[4] );
        propagate ( MULT_B[5]  --> MOUT1[5] );
        propagate ( MULT_B[6]  --> MOUT1[6] );
        propagate ( MULT_B[7]  --> MOUT1[7] );
        propagate ( MULT_B[8]  --> MOUT1[8] );
        propagate ( MULT_B[9]  --> MOUT1[9] );
        propagate ( MULT_B[10] --> MOUT1[10] );
        propagate ( MULT_B[11] --> MOUT1[11] );
        propagate ( MULT_B[12] --> MOUT1[12] );
        propagate ( MULT_B[13] --> MOUT1[13] );
        propagate ( MULT_B[14] --> MOUT1[14] );
        propagate ( MULT_B[15] --> MOUT1[15] );
        propagate ( MULT_B[16] --> MOUT1[16] );
        propagate ( MULT_B[17] --> MOUT1[17] );
        propagate ( MULT_B[18] --> MOUT1[18] );
        propagate ( MULT_B[19] --> MOUT1[19] );
        propagate ( MULT_B[20] --> MOUT1[20] );
        propagate ( MULT_B[21] --> MOUT1[21] );
        propagate ( MULT_B[22] --> MOUT1[22] );
        propagate ( MULT_B[23] --> MOUT1[23] );
        propagate ( MULT_B[24] --> MOUT1[24] );
        propagate ( MULT_B[25] --> MOUT1[25] );
        propagate ( MULT_B[26] --> MOUT1[26] );
        propagate ( MULT_B[27] --> MOUT1[27] );
        propagate ( MULT_B[28] --> MOUT1[28] );
        propagate ( MULT_B[29] --> MOUT1[29] );
        propagate ( MULT_B[30] --> MOUT1[30] );
        propagate ( MULT_B[31] --> MOUT1[31] );
        propagate ( MULT_B[32] --> MOUT1[32] );
        propagate ( MULT_B[33] --> MOUT1[33] );
        propagate ( MULT_B[34] --> MOUT1[34] );
        propagate ( MULT_B[35] --> MOUT1[35] );
        propagate ( MULT_B[36] --> MOUT1[36] );
        propagate ( MULT_B[36] --> MOUT1[37] );
        propagate ( MULT_B[36] --> MOUT1[38] );
        propagate ( MULT_B[36] --> MOUT1[39] );
        propagate ( MULT_B[36] --> MOUT1[40] );
        propagate ( MULT_B[36] --> MOUT1[41] );
        propagate ( MULT_B[36] --> MOUT1[42] );
        propagate ( MULT_B[36] --> MOUT1[43] );
        propagate ( MULT_B[36] --> MOUT1[44] );
        propagate ( MULT_B[36] --> MOUT1[45] );
        propagate ( MULT_B[36] --> MOUT1[46] );
        propagate ( MULT_B[36] --> MOUT1[47] );
        propagate ( MULT_B[36] --> MOUT1[48] );
        propagate ( MULT_B[36] --> MOUT1[49] );
        propagate ( MULT_B[36] --> MOUT1[50] );
        propagate ( MULT_B[36] --> MOUT1[51] );
        propagate ( MULT_B[36] --> MOUT1[52] );
        propagate ( MULT_B[36] --> MOUT1[53] );
        propagate ( MULT_B[36] --> MOUT1[54] );
        propagate ( MULT_B[36] --> MOUT1[55] );
        propagate ( MULT_B[36] --> MOUT1[56] );
        propagate ( MULT_B[36] --> MOUT1[57] );
        propagate ( MULT_B[36] --> MOUT1[58] );
        propagate ( MULT_B[36] --> MOUT1[59] );
        propagate ( MULT_B[36] --> MOUT1[60] );
        propagate ( MULT_B[36] --> MOUT1[61] );
        propagate ( MULT_B[36] --> MOUT1[62] );
        propagate ( MULT_B[36] --> MOUT1[63] );
        propagate ( MULT_B[36] --> MOUT1[64] );

    } 
};