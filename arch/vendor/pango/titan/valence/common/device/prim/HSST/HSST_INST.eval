*****************************************************************

  Device    [HSST_INST]

  Author    []

  Abstract  []

  Revision History:

********************************************************************************/
prim
device HSST_INST
{
      parameter
    (
        //********************  parameter -- pma_quad ********************  
        config  string PMA_QUAD_TURN_ON_BANDGAP_AT_AOS_ON = "FALSE",    // TRUE , FALSE
        config  string PMA_QUAD_TURN_ON_BANDGAP_AT_RX_DETECTION_ON  = "FALSE",    // TRUE , FALSE
        config  string PMA_QUAD_TURN_ON_BANDGAP_AT_BOUNDARY_SCAN_ON = "FALSE",    // TRUE , FALSE                               
        config  string PMA_QUAD_CFG_HSST_RSTN   = "FALSE",    // TRUE , FALSE                                                       
        config  string PMA_QUAD_SELECT_LANE_TCK_FOR_QUAD_SYNC   = "LANE0",     // LANE0,LANE1,LANE2,LANE3                               
        config  string PMA_QUAD_CK_REN  = "DISABLE",    // DISABLE , ENABLE                                                         
        config  string PMA_QUAD_C1_EN   = "DISABLE",    // DISABLE , ENABLE                                                         
        config  string PMA_QUAD_C2_EN   = "DISABLE",    // DISABLE , ENABLE                                                         
        config  int PMA_QUAD_CLK_DIVIDER_SETTING_FROM_25M_TO_200K    = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11       
        config  string PMA_QUAD_ACMODE_SCANMODE_EN  = "DISABLE",    // DISABLE , ENABLE                                             
        config  string PMA_QUAD_REGISTER_ACMODE = "FALSE",    // TRUE , FALSE                                                   
        config  string PMA_QUAD_REGISTER_SCANMODE   = "FALSE",    // TRUE , FALSE                                                   
        config  string PMA_QUAD_REFCK2CORE_EN   = "DISABLE",    // DISABLE , ENABLE                                                 
        config  string PMA_QUAD_REG_EN  = "DISABLE",    // DISABLE , ENABLE                                                         
        config  string PMA_QUAD_REGR    = "100MV",      // 100MV, 75MV, 50MV, 25MV, 0MV                                             
        config  string PMA_QUAD_REGL    = "100MV",      // 100MV, 75MV, 50MV, 25MV, 0MV                                             
        config  int PMA_QUAD_DPCK_SEL    = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11                                   
        config  string PMA_QUAD_TX_REFCK_SEL    = "FALSE",    // TRUE , FALSE                                                       
        config  string PMA_QUAD_REFCK_SRC_SEL   = "FALSE",    // TRUE , FALSE                                                       
        config  string PMA_QUAD_RREFCK_PWRUP    = "FALSE",    // TRUE , FALSE                                                               
        config  string PMA_QUAD_REFCK_SK_SEL       = "BOTH",    // BOTH, UP, DOWN, NONE                                                                                                        
        config  string PMA_QUAD_REFCK_DIV2_SEL  = "FALSE",    // TRUE , FALSE                                                       
        config  string PMA_QUAD_REFCK_TO_NQ_EN  = "DISABLE",    // DISABLE , ENABLE                                                 
        config  string PMA_QUAD_AUXI_ADJ    = "100PCT",      //  100PCT , 111PCT , 125PCT , 143PCT , 71PCT , 77PCT , 83PCT ,91PCT                 
        config  string PMA_QUAD_DC496   = "39_6MHZ",        // 5MHZ, 8MHZ, 11_5MHZ, 20_6MHZ, 39_6MHZ                                  
        config  int PMA_QUAD_REG_FDET_TIMER  = 512,        // 256, 512 , 1024 , 2048                                           
        config  string PMA_QUAD_FREQ_LKO    = "10PCT",    // 1PCT , 2PCT , 5PCT , 10PCT                                                        
        config  string PMA_QUAD_FREQ_LKI    = "10PCT",    // 1PCT , 2PCT , 5PCT , 10PCT                                                                
        config  string PMA_QUAD_CLOCK_SRC_SEL    = "LOCAL",    // LOCAL, NEIGHBOR                                   
        config  string PMA_QUAD_FRE_DET_EN  = "DISABLE",    // DISABLE , ENABLE                                                     
        config  int    PMA_QUAD_TSO_LS_SEL  = 0,        // 0 to 127                                                         
        config  string PMA_QUAD_TXPLL_START = "FALSE",    // TRUE , FALSE                                                       
        config  int PMA_QUAD_VCODIV  = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11                                       
        config  int    PMA_QUAD_LC_BAND = 0,        // 0 to 31                                                          
        config  string PMA_QUAD_SET_VCO_HI  = "FALSE",    // TRUE , FALSE                                                           
        config  string PMA_QUAD_SET_VCO_LO  = "FALSE",    // TRUE , FALSE                                                           
        config  string PMA_QUAD_CALIB_FAIL  = "FALSE",    // TRUE , FALSE                                                           
        config  string PMA_QUAD_CALIB_DONE  = "FALSE",    // TRUE , FALSE                                                           
        config  string PMA_QUAD_BIST_DONE   = "FALSE",    // TRUE , FALSE                                                           
        config  string PMA_QUAD_TOTRANGE_FAIL   = "FALSE",    // TRUE , FALSE                                                       
        config  string PMA_QUAD_SUBRANGE_FAIL   = "FALSE",    // TRUE , FALSE                                                       
        config  string PMA_QUAD_OVLP_FAIL   = "FALSE",    // TRUE , FALSE                                                           
        config  string PMA_QUAD_TXPLL_LOCK  = "FALSE",    // TRUE , FALSE                                                           
        config  string PMA_QUAD_TXPLL_LOOP_ENABLE   = "DISABLE",    // DISABLE , ENABLE                                             
        config  int PMA_QUAD_TXPLL_DIVSEL_REF_STA    = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11                       
        config  string PMA_QUAD_TXPLL_DIVSEL45_FB_STA   = "FALSE",    // TRUE , FALSE                                               
        config  int    PMA_QUAD_TXPLL_DIVSEL_FB_STA = 0,        // 0 to 7                                               
        config  string PMA_QUAD_TXPLL_DIVSEL45_FB   = "FALSE",    // TRUE , FALSE                                                   
        config  int    PMA_QUAD_TXPLL_DIVSEL_FB = 0,        // 0 to 7                                                   
        config  int PMA_QUAD_TXPLL_DIVSEL_REF    = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11                           
        config  string PMA_QUAD_REG_DISABLE_HOLDCLK = "DISABLE",    // DISABLE , ENABLE                                         
        config  string PMA_QUAD_REG_DISABLE_SYNC    = "DISABLE",    // DISABLE , ENABLE                                             
        config  string PMA_QUAD_FORCE_OUTPUT_PLL_LOCK   = "FALSE",    // TRUE , FALSE                                               
        config  string PMA_QUAD_REGISTER_SET_SYNCTCK_SEL_ENABLE = "DISABLE",    // DISABLE , ENABLE                             
        config  string PMA_QUAD_REG_SET_SYNCTCK_SEL = "LANE0",     // LANE0,LANE1,LANE2,LANE3                                      
        config  string PMA_QUAD_CK4TEST_OUTPUT_ENABLE   = "DISABLE",    // DISABLE , ENABLE                                         
        config  string PMA_QUAD_RSTGENBAS   = "100PCT",    // 100PCT , 83PCT , 133PCT , 117PCT                                                 
        config  string PMA_QUAD_LCBUFBAS    = "100PCT",    // 100PCT , 83PCT , 133PCT , 117PCT                                                
        config  string PMA_QUAD_REGISTER_SET_CPCUR_ENABEL   = "DISABLE",    // DISABLE , ENABLE                                     
       config  int    PMA_QUAD_REG_SET_CPCUR    = 0,        // 0 to 31                                                      
       config  string PMA_QUAD_CPBAS    = "100PCT",       // 100PCT , 83PCT , 133PCT , 117PCT                      
       config  string PMA_QUAD_LCOBAS   = "100PCT",       // 100PCT , 83PCT , 133PCT , 117PCT                                                    
       config  string  PMA_QUAD_LCCUR   = "DEFAULT",        //  default , -1mA , +2mA , +1mA , +4mA , +3mA , +6mA ,+5mA             
       config  string PMA_QUAD_ENABLE_REGISTER_SETTING_BAND = "DISABLE",    // DISABLE , ENABLE                                 
       config  int PMA_QUAD_CALIB_WAIT   = 1024,       // 1024 , 2048 , 4096 , 512                                             
       config  int PMA_QUAD_CALIB_TIMER  = 512,        // 512 , 1024 , 2048 , 4096                                         
       config  int PMA_QUAD_TOT_RANGE    = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11                                   
       config  int PMA_QUAD_SUB_RANGE    = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11                                   
       config  int PMA_QUAD_OVLP = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11                                       
       config  int PMA_QUAD_BIST_WAIT    = 1024,       // 1024 , 2048 , 4096 , 512                                             
       config  int PMA_QUAD_BIST_TIMER   = 512,        // 512 , 1024 , 2048 , 4096                                             
       config  int    PMA_QUAD_BAND_LB  = 0,        // 0 to 7                                                           
       config  int    PMA_QUAD_BAND_HB  = 0,        // 0 to 31                                                          
       config  int  PMA_QUAD_FREQ_LOCK_ACCURACY  = 0,        //  000 , 001 , 010 , 011 , 100 , 101 , 110 , 111               
       config  int     PMA_QUAD_REG_SET_LC_BAND = 0,        // 0 to 31                                                  
       config  int  PMA_QUAD_REG_SET_VCODIV  = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11                               
       config  string  PMA_QUAD_REGISTER_SET_VCODIV_BAND_ENABLE = "DISABLE",    // DISABLE , ENABLE                             
       config  string  PMA_QUAD_REG_SET_PLL_LOCK    = "FALSE",    // TRUE , FALSE                                                   
       config  string  PMA_QUAD_REGISTER_SET_PLL_LOCK_ENABLE    = "DISABLE",    // DISABLE , ENABLE                                 
       config  string  PMA_QUAD_REG_SET_VCO_HI  = "FALSE",    // TRUE , FALSE                                                       
       config  string  PMA_QUAD_REG_SET_VCO_LO  = "FALSE",    // TRUE , FALSE                                                       
       config  string  PMA_QUAD_REGISTER_SET_VCO_HI_VCO_LO_ENABLE   = "DISABLE",    // DISABLE , ENABLE                             
       config  string  PMA_QUAD_FORCE_LC_PLL_LOOP_EN    = "DISABLE",    // DISABLE , ENABLE                                         
       config  string  PMA_QUAD_VCO_DIV_CALI_BYPASS = "FALSE",    // TRUE , FALSE                                               
       config  string  PMA_QUAD_BIST_EN = "DISABLE",    // DISABLE , ENABLE                                                     
       config  string  PMA_QUAD_ENABLE_TXPLL_BIST_BLOCK_CLOCKS  = "DISABLE",    // DISABLE , ENABLE 
       config  string  PMA_QUAD_LF_TESTBY2     = "DISABLE",    // DISABLE , ENABLE                            
       config  int  PMA_QUAD_REG_SET_DIVSEL_REF  = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11                           
       config  string  PMA_QUAD_REG_SET_DIVSEL45_FB = "FALSE",    // TRUE , FALSE                                               
       config  int     PMA_QUAD_REG_SET_DIVSEL_FB   = 0,        // 0 to 7                                                   
       config  string  PMA_QUAD_LF_TEST_EN     = "DISABLE",    // DISABLE , ENABLE                                         
       config  string  PMA_QUAD_REGISTER_SET_TXPLL_DIV_ENABLE   = "DISABLE",    // DISABLE , ENABLE                                 
       config  string  PMA_QUAD_FORCE_TXPLL_RESET   = "FALSE",    // TRUE , FALSE                                                   
       config  string  PMA_QUAD_FORCE_TXPLL_ON  = "FALSE",    // TRUE , FALSE                                                       
       //********************  parameter -- pcs_ch0 ********************
        config  string PCS_CH0_BYPASS_WORD_ALIGN    = "FALSE",      // 0,1
        config  string PCS_CH0_BYPASS_DENC  = "FALSE",      // 0,1
        config  string PCS_CH0_BYPASS_BONDING   = "FALSE",      // 0,1
        config  string PCS_CH0_BYPASS_CTC   = "FALSE",      // 0,1
        config  string PCS_CH0_BYPASS_GEAR  = "FALSE",      // 0,1
        config  string PCS_CH0_BYPASS_BRIDGE    = "FALSE",      // 0,1
        config  string PCS_CH0_DATA_MODE    = "X8",     // 8bit,10bit,16bit,20bit
        config  string PCS_CH0_RX_POLARITY_INV  = "DELAY",      // 00: delay 01: bit polarity inversion 10: bit reversal 11: polarity inversion and bit reversal
        config  string PCS_CH0_ALIGN_MODE   = "1GB",        // 1gb,10gb,RapidIO,outside
        config  string PCS_CH0_SAMP_16B = "X16",        // 16bit,20bit
       config  int PCS_CH0_COMMA_REG0 = 0,      // 
       config  int PCS_CH0_COMMA_MASK = 0,      // 
       config  string PCS_CH0_CEB_MODE = "10GB",        // 10gb,RapidIO,outside
       config  string PCS_CH0_CTC_MODE = "1SKIP",       // 00: add or del 1 skip,01: add or del 2 skips,10: reserved ,11:4 skips
       config  int PCS_CH0_A_REG = 0,       // 
       config  string       PCS_CH0_GE_AUTO_EN = "FALSE",       // CTC,0,1
       config  int   PCS_CH0_SKIP_REG0 = 0,     // 
       config  int   PCS_CH0_SKIP_REG1 = 0,     // 
       config  int   PCS_CH0_SKIP_REG2 = 0,     // 
       config  int   PCS_CH0_SKIP_REG3 = 0,     // 
       config  string  PCS_CH0_DEC_DUAL = "FALSE",      // signal for 8b10b decoder module
       config  string  PCS_CH0_SPLIT = "FALSE",     // signal for RX GEAR split, 1:split  0:no split, 
       config  string  PCS_CH0_FIFOFLAG_CTC = "FALSE",      // 0,1
       config  string  PCS_CH0_COMMA_DET_MODE = "COMMA_PATTERN",        // 0: comma pattern mode  1: RX_CLK_SLIP mode 
       config  string  PCS_CH0_ERRDETECT_SILENCE = "FALSE",     // 0: comma pattern mode  1: RX_CLK_SLIP mode 
       config  string  PCS_CH0_PMA_RCLK_POLINV = "PMA_RCLK",        // 1'b0:pma_rclk 1'b1:reverse of pma_rclk
       config  string  PCS_CH0_PCS_RCLK_SEL = "PMA_RCLK",       // 1'b0:pma_rclk,1'b1:pma_tclk,
       config  string  PCS_CH0_MCB_RCLK_POLINV = "MCB_RCLK",        // 1'b0:mcb_rclk 1'b1:reverse of mcb_rclk
       config  string  PCS_CH0_CB_RCLK_SEL = "PMA_RCLK",        // 2'b00:pma_rclk,2'b01:pma_tclk,2'b10:mcb_rclk,2'b11:reserved
       config  string  PCS_CH0_AFTER_CTC_RCLK_SEL = "PMA_RCLK",     // 2'b00:pma_rclk,2'b01:pma_tclk,2'b10:mcb_rclk,2'b11:reserved
       config  string  PCS_CH0_RCLK_POLINV = "RCLK",        // 1'b0:rclk 1'b1:reverse of rclk
       config  string  PCS_CH0_BRIDGE_RCLK_SEL = "PMA_RCLK",        // 2'b00:pma_rclk,2'b01:pma_tclk,2'b10:mcb_rclk,2'b11:rclk
       config  string  PCS_CH0_PCS_RCLK_EN = "FALSE",       // 0,1
       config  string  PCS_CH0_CB_RCLK_EN = "FALSE",        // 0,1
       config  string  PCS_CH0_AFTER_CTC_RCLK_EN = "FALSE",     // 0,1
       config  string  PCS_CH0_AFTER_CTC_RCLK_EN_GB = "FALSE",      // 0,1
       config  string  PCS_CH0_BRIDGE_RCLK_EN = "FALSE",        // 0,1
       config  string  PCS_CH0_PCS_RX_RSTN = "FALSE",       // 1:pcs_rx_rstn is valued,is 0,0:pcs_rx_rstn is released
       config  string  PCS_CH0_SLAVE = "MASTER",        // 1:slave channel 0:master channel
       config  string  PCS_CH0_PCIE_SLAVE = "MASTER",        // 1:slave channel 0:master channel
       config  string  PCS_CH0_PCS_CB_RSTN = "FALSE",       // 1: pcs_cb_rstn is valued,is 0,0: pcs_cb_rstn is released
       config  string  PCS_CH0_TX_BYPASS_BRIDGE_UINT    = "FALSE",      // 0,1
       config  string  PCS_CH0_TX_BYPASS_GEAR   = "FALSE",      // 0,1
       config  string  PCS_CH0_TX_BYPASS_ENC    = "FALSE",      // 0,1
       config  string  PCS_CH0_TX_BYPASS_BIT_SLIP   = "FALSE",      // 0,1
       config  string  PCS_CH0_TX_GEAR_SPLIT    = "FALSE",      // 1:spilt 44bits data to 22bits data,0: no spilt
       config  string  PCS_CH0_TX_DRIVE_REG_MODE    = "NO_CHANGE",      // 00:no change, 01:enable polarity reverse,10:enable bit reverse, 11:enable both
       config  int     PCS_CH0_TX_BIT_SLIP_CYCLES = 0,      // 
       config  string PCS_CH0_INT_TX_MASK_0 = "FALSE",      // 0,1  active high to mask int triggered by tx_bridge_unit async fifo overflow
       config  string PCS_CH0_INT_TX_MASK_1 = "FALSE",      // 0,1  active high to mask int triggered by tx bridge unit underflow,
       config  string PCS_CH0_INT_TX_MASK_2 = "FALSE",      // 0,1  active high to mask int triggered by tx_invalid_k 
       config  string PCS_CH0_INT_TX_CLR_0 = "FALSE",       // 0,1  active high to clr int triggered by tx bridge unit overflow,
       config  string PCS_CH0_INT_TX_CLR_1 = "FALSE",       // 0,1  active high to clr int triggered by tx_bridge_unit async fifo underflow
       config  string PCS_CH0_INT_TX_CLR_2 = "FALSE",       // 0,1  active high to clr int triggered by tx_invalid_k
       config  string PCS_CH0_TX_PMA_TCLK_POLINV = "PMA_TCLK",      // 1'b0:pma_tclk 1'b1:reverse of pma_tclk
       config  string PCS_CH0_TX_PCS_CLK_EN_SEL = "FALSE",      // 0,1
       config  string PCS_CH0_TX_BRIDGE_TCLK_SEL = "PCS_TCLK",      // 1'b0: pcs_tclk 1'b1:tclk
       config  string PCS_CH0_TX_TCLK_POLINV = "TCLK",      // 1'b0:tclk 1'b1:reverse of tclk
       config  string PCS_CH0_TX_PCS_TX_RSTN = "FALSE",     // 1:pcs_tx_rstn is valued,is 0,0:pcs_tx_rstn is released
       config  string PCS_CH0_TX_SLAVE = "SLAVE",       // 1:slave channel,0:master channel
       config  string PCS_CH0_TX_BRIDGE_CLK_EN_SEL = "FALSE",       // 0,1
       config  string PCS_CH0_DATA_WIDTH_MODE   = "X20",        // 20bit,16bit,10bit,8bit
       config  string PCS_CH0_TX_TCLK2FABRIC_SEL = "FALSE",     // 0,1
       config  string PCS_CH0_TX_OUTZZ = "FALSE",       // 1:16bit/32bit only,0:20bit/40bit only
       config  string PCS_CH0_ENC_DUAL = "FALSE",       // 0,1
       config  string PCS_CH0_TX_BITSLIP_DATA_MODE = "X10",     // 1: 20bit,0: 10bit
       config  int  PCS_CH0_COMMA_REG1 = 0,     // 
       config  int  PCS_CH0_RAPID_IMAX = 0,     // 
       config  int  PCS_CH0_RAPID_VMIN_1 = 0,       // 
       config  int  PCS_CH0_RAPID_VMIN_2 = 0,       // 
       config  string PCS_CH0_RX_PRBS_MODE = "DISABLE",      // Mode select:4'd0: reserved,4'd1: PRBS-7,4'd2: PRBS-15,4'd3: PRBS-23,4'd4: PRBS-31,4'd5: long "TRUE",4'd6: long "FALSE",4'd7: 20UI square wave,4'd8: D10_2,4'd9: PCIe complianece pattern,Others: reserved
       config  string PCS_CH0_RX_ERRCNT_CLR = "FALSE",      // 0,1
       config  string PCS_CH0_TX_PRBS_MODE = "DISABLE",      // Mode select:4'd0: reserved,4'd1: PRBS-7,4'd2: PRBS-15,4'd3: PRBS-23,4'd4: PRBS-31,4'd5: long "TRUE",4'd6: long "FALSE",4'd7: 20UI square wave,4'd8: D10_2,4'd9: PCIe complianece pattern,Others: reserved
       config  string PCS_CH0_TX_INSERT_ER = "FALSE",       // 0,1
       config  string PCS_CH0_ENABLE_PRBS_GEN = "FALSE",        // 0,1
       config  int PCS_CH0_ERR_CNT = 0,     // 
       config  int PCS_CH0_DEFAULT_RADDR = 0,       // 
       config  int PCS_CH0_MASTER_CHECK_OFFSET = 0,     // 
       config  int PCS_CH0_DELAY_SET = 0,       // 
       config  string PCS_CH0_SEACH_OFFSET = "20BIT",       // 20bit,30bit,40bit,50bit,60bit,70bit
       config  int PCS_CH0_CEB_RAPIDLS_MMAX = 0,        // 
       config  int PCS_CH0_CTC_AFULL = 0,       // 
       config  int PCS_CH0_CTC_AEMPTY = 0,      // 
        config  string PCS_CH0_FAR_LOOP = "FALSE",      // 0,1
        config  string PCS_CH0_NEAR_LOOP = "FALSE",     // 0,1
        config  string PCS_CH0_INT_RX_MASK_0 = "FALSE",     // 0,1  active high to mask int triggered by pcs_lsm_synced
        config  string PCS_CH0_INT_RX_MASK_1 = "FALSE",     // 0,1  active high to mask int triggered by pcs_rx_mcb_status
        config  string PCS_CH0_INT_RX_MASK_2 = "FALSE",     // 0,1  active high to mask int triggered by channel bonding async fifo overflow
        config  string PCS_CH0_INT_RX_MASK_3 = "FALSE",     // 0,1  active high to mask int triggered by channel bonding async fifo underflow
        config  string PCS_CH0_INT_RX_MASK_4 = "FALSE",     // 0,1  active high to mask int triggered by ctc unit async fifo overflow
        config  string PCS_CH0_INT_RX_MASK_5 = "FALSE",     // 0,1  active high to mask int triggered by ctc unit async fifo underflow
        config  string PCS_CH0_INT_RX_MASK_6 = "FALSE",     // 0,1  active high to mask int triggered by rx_bridge_unit async fifo overflow
        config  string PCS_CH0_INT_RX_MASK_7 = "FALSE",     // 0,1  active high to mask int triggered by rx_bridge_unit async fifo underflow
        config  string PCS_CH0_INT_RX_CLR_0 = "FALSE",      // 0,1  active high to clr int triggered by pcs_lsm_synced
        config  string PCS_CH0_INT_RX_CLR_1 = "FALSE",      // 0,1  active high to clr int triggered by pcs_rx_mcb_status
        config  string PCS_CH0_INT_RX_CLR_2 = "FALSE",      // 0,1  active high to clr int triggered by channel bonding async fifo overflow
        config  string PCS_CH0_INT_RX_CLR_3 = "FALSE",      // 0,1  active high to clr int triggered by channel bonding async fifo underflow
        config  string PCS_CH0_INT_RX_CLR_4 = "FALSE",      // 0,1  active high to clr int triggered by ctc unit async fifo overflow
        config  string PCS_CH0_INT_RX_CLR_5 = "FALSE",      // 0,1  active high to clr int triggered by ctc unit async fifo underflow
        config  string PCS_CH0_INT_RX_CLR_6 = "FALSE",      // 0,1  active high to clr int triggered by rx_bridge_unit async fifo overflow
        config  string PCS_CH0_INT_RX_CLR_7 = "FALSE",      // 0,1  active high to clr int triggered by rx_bridge_unit async fifo underflow
        //********************  parameter -- pcs_ch1 ********************
        config  string PCS_CH1_BYPASS_WORD_ALIGN    = "FALSE",      // 0,1
        config  string PCS_CH1_BYPASS_DENC  = "FALSE",      // 0,1
        config  string PCS_CH1_BYPASS_BONDING   = "FALSE",      // 0,1
        config  string PCS_CH1_BYPASS_CTC   = "FALSE",      // 0,1
        config  string PCS_CH1_BYPASS_GEAR  = "FALSE",      // 0,1
        config  string PCS_CH1_BYPASS_BRIDGE    = "FALSE",      // 0,1
        config  string PCS_CH1_DATA_MODE    = "X8",     // 8bit,10bit,16bit,20bit
        config  string PCS_CH1_RX_POLARITY_INV  = "DELAY",      // 00: delay 01: bit polarity inversion 10: bit reversal 11: polarity inversion and bit reversal
        config  string PCS_CH1_ALIGN_MODE   = "1GB",        // 1gb,10gb,RapidIO,outside
        config  string PCS_CH1_SAMP_16B = "X16",        // 16bit,20bit
       config  int PCS_CH1_COMMA_REG0 = 0,      // 
       config  int PCS_CH1_COMMA_MASK = 0,      // 
       config  string PCS_CH1_CEB_MODE = "10GB",        // 10gb,RapidIO,outside
       config  string PCS_CH1_CTC_MODE = "1SKIP",       // 00: add or del 1 skip,01: add or del 2 skips,10: reserved ,11:4 skips
       config  int PCS_CH1_A_REG = 0,       // 
       config  string PCS_CH1_GE_AUTO_EN = "FALSE",     // CTC,0,1
      config  int  PCS_CH1_SKIP_REG0 = 0,       // 
      config  int  PCS_CH1_SKIP_REG1 = 0,       // 
      config  int  PCS_CH1_SKIP_REG2 = 0,       // 
      config  int  PCS_CH1_SKIP_REG3 = 0,       // 
     config  string   PCS_CH1_DEC_DUAL = "FALSE",       // signal for 8b10b decoder module
     config  string   PCS_CH1_SPLIT = "FALSE",      // signal for RX GEAR split, 1:split  0:no split, 
     config  string   PCS_CH1_FIFOFLAG_CTC = "FALSE",       // 0,1
     config  string   PCS_CH1_COMMA_DET_MODE = "COMMA_PATTERN",     // 0: comma pattern mode  1: RX_CLK_SLIP mode 
     config  string   PCS_CH1_ERRDETECT_SILENCE = "FALSE",      // 0: comma pattern mode  1: RX_CLK_SLIP mode 
     config  string   PCS_CH1_PMA_RCLK_POLINV = "PMA_RCLK",     // 1'b0:pma_rclk 1'b1:reverse of pma_rclk
     config  string   PCS_CH1_PCS_RCLK_SEL = "PMA_RCLK",        // 1'b0:pma_rclk,1'b1:pma_tclk,
     config  string   PCS_CH1_MCB_RCLK_POLINV = "MCB_RCLK",     // 1'b0:mcb_rclk 1'b1:reverse of mcb_rclk
     config  string   PCS_CH1_CB_RCLK_SEL = "PMA_RCLK",     // 2'b00:pma_rclk,2'b01:pma_tclk,2'b10:mcb_rclk,2'b11:reserved
     config  string   PCS_CH1_AFTER_CTC_RCLK_SEL = "PMA_RCLK",      // 2'b00:pma_rclk,2'b01:pma_tclk,2'b10:mcb_rclk,2'b11:reserved
     config  string   PCS_CH1_RCLK_POLINV = "RCLK",     // 1'b0:rclk 1'b1:reverse of rclk
     config  string   PCS_CH1_BRIDGE_RCLK_SEL = "PMA_RCLK",     // 2'b00:pma_rclk,2'b01:pma_tclk,2'b10:mcb_rclk,2'b11:rclk
     config  string   PCS_CH1_PCS_RCLK_EN = "FALSE",        // 0,1
     config  string   PCS_CH1_CB_RCLK_EN = "FALSE",     // 0,1
     config  string   PCS_CH1_AFTER_CTC_RCLK_EN = "FALSE",      // 0,1
     config  string   PCS_CH1_AFTER_CTC_RCLK_EN_GB = "FALSE",       // 0,1
     config  string   PCS_CH1_BRIDGE_RCLK_EN = "FALSE",     // 0,1
     config  string   PCS_CH1_PCS_RX_RSTN = "FALSE",        // 1:pcs_rx_rstn is valued,is 0,0:pcs_rx_rstn is released
     config  string   PCS_CH1_SLAVE = "MASTER",     // 1:slave channel 0:master channel
     config  string   PCS_CH1_PCIE_SLAVE = "MASTER",        // 1:slave channel 0:master channel
     config  string   PCS_CH1_PCS_CB_RSTN = "FALSE",        // 1: pcs_cb_rstn is valued,is 0,0: pcs_cb_rstn is released
     config  string   PCS_CH1_TX_BYPASS_BRIDGE_UINT = "FALSE",      // 0,1
     config  string   PCS_CH1_TX_BYPASS_GEAR    = "FALSE",      // 0,1
     config  string   PCS_CH1_TX_BYPASS_ENC = "FALSE",      // 0,1
     config  string   PCS_CH1_TX_BYPASS_BIT_SLIP    = "FALSE",      // 0,1
     config  string   PCS_CH1_TX_GEAR_SPLIT = "FALSE",      // 1:spilt 44bits data to 22bits data,0: no spilt
     config  string   PCS_CH1_TX_DRIVE_REG_MODE = "NO_CHANGE",      // 00:no change, 01:enable polarity reverse,10:enable bit reverse, 11:enable both
     config int  PCS_CH1_TX_BIT_SLIP_CYCLES = 0,        // 
     config  string  PCS_CH1_INT_TX_MASK_0 = "FALSE",       // 0,1  active high to mask int triggered by tx_bridge_unit async fifo overflow
     config  string PCS_CH1_INT_TX_MASK_1 = "FALSE",        // 0,1  active high to mask int triggered by tx bridge unit underflow,
     config  string PCS_CH1_INT_TX_MASK_2 = "FALSE",        // 0,1  active high to mask int triggered by tx_invalid_k 
     config  string PCS_CH1_INT_TX_CLR_0 = "FALSE",     // 0,1  active high to clr int triggered by tx bridge unit overflow,
     config  string PCS_CH1_INT_TX_CLR_1 = "FALSE",     // 0,1  active high to clr int triggered by tx_bridge_unit async fifo underflow
     config  string PCS_CH1_INT_TX_CLR_2 = "FALSE",     // 0,1  active high to clr int triggered by tx_invalid_k
     config  string  PCS_CH1_TX_PMA_TCLK_POLINV = "PMA_TCLK",       // 1'b0:pma_tclk 1'b1:reverse of pma_tclk
     config  string  PCS_CH1_TX_PCS_CLK_EN_SEL = "FALSE",       // 0,1
     config  string  PCS_CH1_TX_BRIDGE_TCLK_SEL = "PCS_TCLK",       // 1'b0: pcs_tclk 1'b1:tclk
     config  string  PCS_CH1_TX_TCLK_POLINV = "TCLK",       // 1'b0:tclk 1'b1:reverse of tclk
     config  string  PCS_CH1_TX_PCS_TX_RSTN = "FALSE",      // 1:pcs_tx_rstn is valued,is 0,0:pcs_tx_rstn is released
     config  string  PCS_CH1_TX_SLAVE = "SLAVE",        // 1:slave channel,0:master channel
     config  string  PCS_CH1_TX_BRIDGE_CLK_EN_SEL = "FALSE",        // 0,1
     config  string  PCS_CH1_DATA_WIDTH_MODE    = "X20",        // 20bit,16bit,10bit,8bit
     config  string  PCS_CH1_TX_TCLK2FABRIC_SEL = "FALSE",      // 0,1
     config  string  PCS_CH1_TX_OUTZZ = "FALSE",        // 1:16bit/32bit only,0:20bit/40bit only
     config  string  PCS_CH1_ENC_DUAL = "FALSE",        // 0,1
     config  string  PCS_CH1_TX_BITSLIP_DATA_MODE = "X10",      // 1: 20bit,0: 10bit
     config  int PCS_CH1_COMMA_REG1 = 0,        // 
     config  int PCS_CH1_RAPID_IMAX = 0,        // 
     config  int PCS_CH1_RAPID_VMIN_1 = 0,      // 
     config  int PCS_CH1_RAPID_VMIN_2 = 0,      // 
     config  string   PCS_CH1_RX_PRBS_MODE = "DISABLE",      // Mode select:4'd0: reserved,4'd1: PRBS-7,4'd2: PRBS-15,4'd3: PRBS-23,4'd4: PRBS-31,4'd5: long "TRUE",4'd6: long "FALSE",4'd7: 20UI square wave,4'd8: D10_2,4'd9: PCIe complianece pattern,Others: reserved
     config  string   PCS_CH1_RX_ERRCNT_CLR = "FALSE",      // 0,1
     config  string   PCS_CH1_TX_PRBS_MODE = "DISABLE",      // Mode select:4'd0: reserved,4'd1: PRBS-7,4'd2: PRBS-15,4'd3: PRBS-23,4'd4: PRBS-31,4'd5: long "TRUE",4'd6: long "FALSE",4'd7: 20UI square wave,4'd8: D10_2,4'd9: PCIe complianece pattern,Others: reserved
     config  string   PCS_CH1_TX_INSERT_ER = "FALSE",       // 0,1
     config  string   PCS_CH1_ENABLE_PRBS_GEN = "FALSE",        // 0,1
    config  int PCS_CH1_ERR_CNT = 0,        // 
    config  int PCS_CH1_DEFAULT_RADDR = 0,      // 
    config  int PCS_CH1_MASTER_CHECK_OFFSET = 0,        // 
    config  int PCS_CH1_DELAY_SET = 0,      // 
    config  string    PCS_CH1_SEACH_OFFSET = "20BIT",       // 20bit,30bit,40bit,50bit,60bit,70bit
    config  int  PCS_CH1_CEB_RAPIDLS_MMAX = 0,      // 
    config  int  PCS_CH1_CTC_AFULL = 0,     // 
    config  int  PCS_CH1_CTC_AEMPTY = 0,        // 
     config  string   PCS_CH1_FAR_LOOP = "FALSE",       // 0,1
     config  string     PCS_CH1_NEAR_LOOP = "FALSE",        // 0,1
     config  string     PCS_CH1_INT_RX_MASK_0 = "FALSE",        // 0,1  active high to mask int triggered by pcs_lsm_synced
     config  string     PCS_CH1_INT_RX_MASK_1 = "FALSE",        // 0,1  active high to mask int triggered by pcs_rx_mcb_status
     config  string     PCS_CH1_INT_RX_MASK_2 = "FALSE",        // 0,1  active high to mask int triggered by channel bonding async fifo overflow
     config  string     PCS_CH1_INT_RX_MASK_3 = "FALSE",        // 0,1  active high to mask int triggered by channel bonding async fifo underflow
     config  string     PCS_CH1_INT_RX_MASK_4 = "FALSE",        // 0,1  active high to mask int triggered by ctc unit async fifo overflow
     config  string     PCS_CH1_INT_RX_MASK_5 = "FALSE",        // 0,1  active high to mask int triggered by ctc unit async fifo underflow
     config  string     PCS_CH1_INT_RX_MASK_6 = "FALSE",        // 0,1  active high to mask int triggered by rx_bridge_unit async fifo overflow
     config  string     PCS_CH1_INT_RX_MASK_7 = "FALSE",        // 0,1  active high to mask int triggered by rx_bridge_unit async fifo underflow
     config  string     PCS_CH1_INT_RX_CLR_0 = "FALSE",     // 0,1  active high to clr int triggered by pcs_lsm_synced
     config  string     PCS_CH1_INT_RX_CLR_1 = "FALSE",     // 0,1  active high to clr int triggered by pcs_rx_mcb_status
     config  string     PCS_CH1_INT_RX_CLR_2 = "FALSE",     // 0,1  active high to clr int triggered by channel bonding async fifo overflow
     config  string     PCS_CH1_INT_RX_CLR_3 = "FALSE",     // 0,1  active high to clr int triggered by channel bonding async fifo underflow
     config  string     PCS_CH1_INT_RX_CLR_4 = "FALSE",     // 0,1  active high to clr int triggered by ctc unit async fifo overflow
     config  string     PCS_CH1_INT_RX_CLR_5 = "FALSE",     // 0,1  active high to clr int triggered by ctc unit async fifo underflow
     config  string     PCS_CH1_INT_RX_CLR_6 = "FALSE",     // 0,1  active high to clr int triggered by rx_bridge_unit async fifo overflow
     config  string     PCS_CH1_INT_RX_CLR_7 = "FALSE",     // 0,1  active high to clr int triggered by rx_bridge_unit async fifo underflow
        //********************  parameter -- pcs_ch2 ********************
        config  string PCS_CH2_BYPASS_WORD_ALIGN    = "FALSE",      // 0,1
        config  string PCS_CH2_BYPASS_DENC  = "FALSE",      // 0,1
        config  string PCS_CH2_BYPASS_BONDING   = "FALSE",      // 0,1
        config  string PCS_CH2_BYPASS_CTC   = "FALSE",      // 0,1
        config  string PCS_CH2_BYPASS_GEAR  = "FALSE",      // 0,1
        config  string PCS_CH2_BYPASS_BRIDGE    = "FALSE",      // 0,1
        config  string PCS_CH2_DATA_MODE    = "X8",     // 8bit,10bit,16bit,20bit
        config  string PCS_CH2_RX_POLARITY_INV  = "DELAY",      // 00: delay 01: bit polarity inversion 10: bit reversal 11: polarity inversion and bit reversal
        config  string PCS_CH2_ALIGN_MODE   = "1GB",        // 1gb,10gb,RapidIO,outside
        config  string PCS_CH2_SAMP_16B = "X16",        // 16bit,20bit
       config  int   PCS_CH2_COMMA_REG0 = 0,        // 
       config  int   PCS_CH2_COMMA_MASK = 0,        // 
       config  string PCS_CH2_CEB_MODE = "10GB",        // 10gb,RapidIO,outside
       config  string PCS_CH2_CTC_MODE = "1SKIP",       // 00: add or del 1 skip,01: add or del 2 skips,10: reserved ,11:4 skips
       config  int    PCS_CH2_A_REG = 0,        // 
       config  string  PCS_CH2_GE_AUTO_EN = "FALSE",        // CTC,0,1
      config  int  PCS_CH2_SKIP_REG0 = 0,       // 
      config  int  PCS_CH2_SKIP_REG1 = 0,       // 
      config  int  PCS_CH2_SKIP_REG2 = 0,       // 
      config  int  PCS_CH2_SKIP_REG3 = 0,       // 
      config  string        PCS_CH2_DEC_DUAL = "FALSE",     // signal for 8b10b decoder module
      config  string        PCS_CH2_SPLIT = "FALSE",        // signal for RX GEAR split, 1:split  0:no split, 
      config  string        PCS_CH2_FIFOFLAG_CTC = "FALSE",     // 0,1
      config  string        PCS_CH2_COMMA_DET_MODE = "COMMA_PATTERN",       // 0: comma pattern mode  1: RX_CLK_SLIP mode 
      config  string        PCS_CH2_ERRDETECT_SILENCE = "FALSE",        // 0: comma pattern mode  1: RX_CLK_SLIP mode 
      config  string        PCS_CH2_PMA_RCLK_POLINV = "PMA_RCLK",       // 1'b0:pma_rclk 1'b1:reverse of pma_rclk
      config  string        PCS_CH2_PCS_RCLK_SEL = "PMA_RCLK",      // 1'b0:pma_rclk,1'b1:pma_tclk,
      config  string        PCS_CH2_MCB_RCLK_POLINV = "MCB_RCLK",       // 1'b0:mcb_rclk 1'b1:reverse of mcb_rclk
      config  string        PCS_CH2_CB_RCLK_SEL = "PMA_RCLK",       // 2'b00:pma_rclk,2'b01:pma_tclk,2'b10:mcb_rclk,2'b11:reserved
      config  string        PCS_CH2_AFTER_CTC_RCLK_SEL = "PMA_RCLK",        // 2'b00:pma_rclk,2'b01:pma_tclk,2'b10:mcb_rclk,2'b11:reserved
      config  string        PCS_CH2_RCLK_POLINV = "RCLK",       // 1'b0:rclk 1'b1:reverse of rclk
      config  string        PCS_CH2_BRIDGE_RCLK_SEL = "PMA_RCLK",       // 2'b00:pma_rclk,2'b01:pma_tclk,2'b10:mcb_rclk,2'b11:rclk
      config  string        PCS_CH2_PCS_RCLK_EN = "FALSE",      // 0,1
      config  string        PCS_CH2_CB_RCLK_EN = "FALSE",       // 0,1
      config  string        PCS_CH2_AFTER_CTC_RCLK_EN = "FALSE",        // 0,1
      config  string        PCS_CH2_AFTER_CTC_RCLK_EN_GB = "FALSE",     // 0,1
      config  string        PCS_CH2_BRIDGE_RCLK_EN = "FALSE",       // 0,1
      config  string        PCS_CH2_PCS_RX_RSTN = "FALSE",      // 1:pcs_rx_rstn is valued,is 0,0:pcs_rx_rstn is released
      config  string        PCS_CH2_SLAVE = "MASTER",       // 1:slave channel 0:master channel
      config  string        PCS_CH2_PCIE_SLAVE = "MASTER",        // 1:slave channel 0:master channel
      config  string        PCS_CH2_PCS_CB_RSTN = "FALSE",      // 1: pcs_cb_rstn is valued,is 0,0: pcs_cb_rstn is released
      config  string        PCS_CH2_TX_BYPASS_BRIDGE_UINT   = "FALSE",      // 0,1
      config  string        PCS_CH2_TX_BYPASS_GEAR  = "FALSE",      // 0,1
      config  string        PCS_CH2_TX_BYPASS_ENC   = "FALSE",      // 0,1
      config  string        PCS_CH2_TX_BYPASS_BIT_SLIP  = "FALSE",      // 0,1
      config  string        PCS_CH2_TX_GEAR_SPLIT   = "FALSE",      // 1:spilt 44bits data to 22bits data,0: no spilt
      config  string        PCS_CH2_TX_DRIVE_REG_MODE   = "NO_CHANGE",      // 00:no change, 01:enable polarity reverse,10:enable bit reverse, 11:enable both
      config  int     PCS_CH2_TX_BIT_SLIP_CYCLES = 0,       // 
     config  string   PCS_CH2_INT_TX_MASK_0 = "FALSE",      // 0,1  active high to mask int triggered by tx_bridge_unit async fifo overflow
     config  string         PCS_CH2_INT_TX_MASK_1 = "FALSE",        // 0,1  active high to mask int triggered by tx bridge unit underflow,
     config  string         PCS_CH2_INT_TX_MASK_2 = "FALSE",        // 0,1  active high to mask int triggered by tx_invalid_k 
     config  string         PCS_CH2_INT_TX_CLR_0 = "FALSE",     // 0,1  active high to clr int triggered by tx bridge unit overflow,
     config  string         PCS_CH2_INT_TX_CLR_1 = "FALSE",     // 0,1  active high to clr int triggered by tx_bridge_unit async fifo underflow
     config  string         PCS_CH2_INT_TX_CLR_2 = "FALSE",     // 0,1  active high to clr int triggered by tx_invalid_k
     config  string   PCS_CH2_TX_PMA_TCLK_POLINV = "PMA_TCLK",      // 1'b0:pma_tclk 1'b1:reverse of pma_tclk
     config  string   PCS_CH2_TX_PCS_CLK_EN_SEL = "FALSE",      // 0,1
     config  string   PCS_CH2_TX_BRIDGE_TCLK_SEL = "PCS_TCLK",      // 1'b0: pcs_tclk 1'b1:tclk
     config  string   PCS_CH2_TX_TCLK_POLINV = "TCLK",      // 1'b0:tclk 1'b1:reverse of tclk
     config  string   PCS_CH2_TX_PCS_TX_RSTN = "FALSE",     // 1:pcs_tx_rstn is valued,is 0,0:pcs_tx_rstn is released
     config  string   PCS_CH2_TX_SLAVE = "SLAVE",       // 1:slave channel,0:master channel
     config  string   PCS_CH2_TX_BRIDGE_CLK_EN_SEL = "FALSE",       // 0,1
     config  string   PCS_CH2_DATA_WIDTH_MODE   = "X20",        // 20bit,16bit,10bit,8bit
     config  string   PCS_CH2_TX_TCLK2FABRIC_SEL = "FALSE",     // 0,1
     config  string   PCS_CH2_TX_OUTZZ = "FALSE",       // 1:16bit/32bit only,0:20bit/40bit only
     config  string   PCS_CH2_ENC_DUAL = "FALSE",       // 0,1
     config  string   PCS_CH2_TX_BITSLIP_DATA_MODE = "X10",     // 1: 20bit,0: 10bit
     config  int      PCS_CH2_COMMA_REG1 = 0,       // 
     config  int      PCS_CH2_RAPID_IMAX = 0,       // 
     config  int      PCS_CH2_RAPID_VMIN_1 = 0,     // 
     config  int      PCS_CH2_RAPID_VMIN_2 = 0,     // 
     config  string   PCS_CH2_RX_PRBS_MODE = "DISABLE",      // Mode select:4'd0: reserved,4'd1: PRBS-7,4'd2: PRBS-15,4'd3: PRBS-23,4'd4: PRBS-31,4'd5: long "TRUE",4'd6: long "FALSE",4'd7: 20UI square wave,4'd8: D10_2,4'd9: PCIe complianece pattern,Others: reserved
     config  string   PCS_CH2_RX_ERRCNT_CLR = "FALSE",      // 0,1
     config  string   PCS_CH2_TX_PRBS_MODE = "DISABLE",      // Mode select:4'd0: reserved,4'd1: PRBS-7,4'd2: PRBS-15,4'd3: PRBS-23,4'd4: PRBS-31,4'd5: long "TRUE",4'd6: long "FALSE",4'd7: 20UI square wave,4'd8: D10_2,4'd9: PCIe complianece pattern,Others: reserved
     config  string   PCS_CH2_TX_INSERT_ER = "FALSE",       // 0,1
     config  string   PCS_CH2_ENABLE_PRBS_GEN = "FALSE",        // 0,1
     config  int      PCS_CH2_ERR_CNT = 0,      // 
     config  int      PCS_CH2_DEFAULT_RADDR = 0,        // 
     config  int      PCS_CH2_MASTER_CHECK_OFFSET = 0,      // 
     config  int      PCS_CH2_DELAY_SET = 0,        // 
     config  string   PCS_CH2_SEACH_OFFSET = "20BIT",       // 20bit,30bit,40bit,50bit,60bit,70bit
     config  int      PCS_CH2_CEB_RAPIDLS_MMAX = 0,     // 
     config  int      PCS_CH2_CTC_AFULL = 0,        // 
     config  int      PCS_CH2_CTC_AEMPTY = 0,       // 
     config  string   PCS_CH2_FAR_LOOP = "FALSE",       // 0,1
     config  string     PCS_CH2_NEAR_LOOP = "FALSE",        // 0,1
     config  string     PCS_CH2_INT_RX_MASK_0 = "FALSE",        // 0,1  active high to mask int triggered by pcs_lsm_synced
     config  string     PCS_CH2_INT_RX_MASK_1 = "FALSE",        // 0,1  active high to mask int triggered by pcs_rx_mcb_status
     config  string     PCS_CH2_INT_RX_MASK_2 = "FALSE",        // 0,1  active high to mask int triggered by channel bonding async fifo overflow
     config  string     PCS_CH2_INT_RX_MASK_3 = "FALSE",        // 0,1  active high to mask int triggered by channel bonding async fifo underflow
     config  string     PCS_CH2_INT_RX_MASK_4 = "FALSE",        // 0,1  active high to mask int triggered by ctc unit async fifo overflow
     config  string     PCS_CH2_INT_RX_MASK_5 = "FALSE",        // 0,1  active high to mask int triggered by ctc unit async fifo underflow
     config  string     PCS_CH2_INT_RX_MASK_6 = "FALSE",        // 0,1  active high to mask int triggered by rx_bridge_unit async fifo overflow
     config  string     PCS_CH2_INT_RX_MASK_7 = "FALSE",        // 0,1  active high to mask int triggered by rx_bridge_unit async fifo underflow
     config  string     PCS_CH2_INT_RX_CLR_0 = "FALSE",     // 0,1  active high to clr int triggered by pcs_lsm_synced
     config  string     PCS_CH2_INT_RX_CLR_1 = "FALSE",     // 0,1  active high to clr int triggered by pcs_rx_mcb_status
     config  string     PCS_CH2_INT_RX_CLR_2 = "FALSE",     // 0,1  active high to clr int triggered by channel bonding async fifo overflow
     config  string     PCS_CH2_INT_RX_CLR_3 = "FALSE",     // 0,1  active high to clr int triggered by channel bonding async fifo underflow
     config  string     PCS_CH2_INT_RX_CLR_4 = "FALSE",     // 0,1  active high to clr int triggered by ctc unit async fifo overflow
     config  string     PCS_CH2_INT_RX_CLR_5 = "FALSE",     // 0,1  active high to clr int triggered by ctc unit async fifo underflow
     config  string     PCS_CH2_INT_RX_CLR_6 = "FALSE",     // 0,1  active high to clr int triggered by rx_bridge_unit async fifo overflow
     config  string     PCS_CH2_INT_RX_CLR_7 = "FALSE",     // 0,1  active high to clr int triggered by rx_bridge_unit async fifo underflow
      //********************  parameter -- pcs_ch3 ********************
      config  string  PCS_CH3_BYPASS_WORD_ALIGN = "FALSE",      // 0,1
      config  string  PCS_CH3_BYPASS_DENC   = "FALSE",      // 0,1
      config  string  PCS_CH3_BYPASS_BONDING    = "FALSE",      // 0,1
      config  string  PCS_CH3_BYPASS_CTC    = "FALSE",      // 0,1
      config  string  PCS_CH3_BYPASS_GEAR   = "FALSE",      // 0,1
      config  string  PCS_CH3_BYPASS_BRIDGE = "FALSE",      // 0,1
      config  string  PCS_CH3_DATA_MODE = "X8",     // 8bit,10bit,16bit,20bit
      config  string  PCS_CH3_RX_POLARITY_INV   = "DELAY",      // 00: delay 01: bit polarity inversion 10: bit reversal 11: polarity inversion and bit reversal
      config  string  PCS_CH3_ALIGN_MODE    = "1GB",        // 1gb,10gb,RapidIO,outside
      config  string  PCS_CH3_SAMP_16B = "X16",     // 16bit,20bit
      config  int     PCS_CH3_COMMA_REG0 = 0,       // 
      config  int     PCS_CH3_COMMA_MASK = 0,       // 
      config  string  PCS_CH3_CEB_MODE = "10GB",        // 10gb,RapidIO,outside
      config  string  PCS_CH3_CTC_MODE = "1SKIP",       // 00: add or del 1 skip,01: add or del 2 skips,10: reserved ,11:4 skips
      config  int     PCS_CH3_A_REG = 0,        // 
      config  string  PCS_CH3_GE_AUTO_EN = "FALSE",     // CTC,0,1
     config  int     PCS_CH3_SKIP_REG0 = 0,     // 
     config  int     PCS_CH3_SKIP_REG1 = 0,     // 
     config  int     PCS_CH3_SKIP_REG2 = 0,     // 
     config  int     PCS_CH3_SKIP_REG3 = 0,     // 
     config  string   PCS_CH3_DEC_DUAL = "FALSE",       // signal for 8b10b decoder module
     config  string   PCS_CH3_SPLIT = "FALSE",      // signal for RX GEAR split, 1:split  0:no split, 
     config  string   PCS_CH3_FIFOFLAG_CTC = "FALSE",       // 0,1
     config  string   PCS_CH3_COMMA_DET_MODE = "COMMA_PATTERN",     // 0: comma pattern mode  1: RX_CLK_SLIP mode 
     config  string   PCS_CH3_ERRDETECT_SILENCE = "FALSE",      // 0: comma pattern mode  1: RX_CLK_SLIP mode 
     config  string   PCS_CH3_PMA_RCLK_POLINV = "PMA_RCLK",     // 1'b0:pma_rclk 1'b1:reverse of pma_rclk
     config  string   PCS_CH3_PCS_RCLK_SEL = "PMA_RCLK",        // 1'b0:pma_rclk,1'b1:pma_tclk,
     config  string   PCS_CH3_MCB_RCLK_POLINV = "MCB_RCLK",     // 1'b0:mcb_rclk 1'b1:reverse of mcb_rclk
     config  string   PCS_CH3_CB_RCLK_SEL = "PMA_RCLK",     // 2'b00:pma_rclk,2'b01:pma_tclk,2'b10:mcb_rclk,2'b11:reserved
     config  string   PCS_CH3_AFTER_CTC_RCLK_SEL = "PMA_RCLK",      // 2'b00:pma_rclk,2'b01:pma_tclk,2'b10:mcb_rclk,2'b11:reserved
     config  string   PCS_CH3_RCLK_POLINV = "RCLK",     // 1'b0:rclk 1'b1:reverse of rclk
     config  string   PCS_CH3_BRIDGE_RCLK_SEL = "PMA_RCLK",     // 2'b00:pma_rclk,2'b01:pma_tclk,2'b10:mcb_rclk,2'b11:rclk
     config  string   PCS_CH3_PCS_RCLK_EN = "FALSE",        // 0,1
     config  string   PCS_CH3_CB_RCLK_EN = "FALSE",     // 0,1
     config  string   PCS_CH3_AFTER_CTC_RCLK_EN = "FALSE",      // 0,1
     config  string   PCS_CH3_AFTER_CTC_RCLK_EN_GB = "FALSE",       // 0,1
     config  string   PCS_CH3_BRIDGE_RCLK_EN = "FALSE",     // 0,1
     config  string   PCS_CH3_PCS_RX_RSTN = "FALSE",        // 1:pcs_rx_rstn is valued,is 0,0:pcs_rx_rstn is released
     config  string   PCS_CH3_SLAVE = "MASTER",     // 1:slave channel 0:master channel
     config  string   PCS_CH3_PCIE_SLAVE = "MASTER",        // 1:slave channel 0:master channel
     config  string   PCS_CH3_PCS_CB_RSTN = "FALSE",        // 1: pcs_cb_rstn is valued,is 0,0: pcs_cb_rstn is released
     config  string   PCS_CH3_TX_BYPASS_BRIDGE_UINT = "FALSE",      // 0,1
     config  string   PCS_CH3_TX_BYPASS_GEAR    = "FALSE",      // 0,1
     config  string   PCS_CH3_TX_BYPASS_ENC = "FALSE",      // 0,1
     config  string   PCS_CH3_TX_BYPASS_BIT_SLIP    = "FALSE",      // 0,1
     config  string   PCS_CH3_TX_GEAR_SPLIT = "FALSE",      // 1:spilt 44bits data to 22bits data,0: no spilt
     config  string   PCS_CH3_TX_DRIVE_REG_MODE = "NO_CHANGE",      // 00:no change, 01:enable polarity reverse,10:enable bit reverse, 11:enable both
     config  int      PCS_CH3_TX_BIT_SLIP_CYCLES = 0,       // 
     config  string   PCS_CH3_INT_TX_MASK_0 = "FALSE",      // 0,1  active high to mask int triggered by tx_bridge_unit async fifo overflow
     config  string     PCS_CH3_INT_TX_MASK_1 = "FALSE",        // 0,1  active high to mask int triggered by tx bridge unit underflow,
     config  string     PCS_CH3_INT_TX_MASK_2 = "FALSE",        // 0,1  active high to mask int triggered by tx_invalid_k 
     config  string     PCS_CH3_INT_TX_CLR_0 = "FALSE",     // 0,1  active high to clr int triggered by tx bridge unit overflow,
     config  string     PCS_CH3_INT_TX_CLR_1 = "FALSE",     // 0,1  active high to clr int triggered by tx_bridge_unit async fifo underflow
     config  string     PCS_CH3_INT_TX_CLR_2 = "FALSE",     // 0,1  active high to clr int triggered by tx_invalid_k
     config  string   PCS_CH3_TX_PMA_TCLK_POLINV = "PMA_TCLK",      // 1'b0:pma_tclk 1'b1:reverse of pma_tclk
     config  string   PCS_CH3_TX_PCS_CLK_EN_SEL = "FALSE",      // 0,1
     config  string   PCS_CH3_TX_BRIDGE_TCLK_SEL = "PCS_TCLK",      // 1'b0: pcs_tclk 1'b1:tclk
     config  string   PCS_CH3_TX_TCLK_POLINV = "TCLK",      // 1'b0:tclk 1'b1:reverse of tclk
     config  string   PCS_CH3_TX_PCS_TX_RSTN = "FALSE",     // 1:pcs_tx_rstn is valued,is 0,0:pcs_tx_rstn is released
     config  string   PCS_CH3_TX_SLAVE = "SLAVE",       // 1:slave channel,0:master channel
     config  string   PCS_CH3_TX_BRIDGE_CLK_EN_SEL = "FALSE",       // 0,1
     config  string   PCS_CH3_DATA_WIDTH_MODE   = "X20",        // 20bit,16bit,10bit,8bit
     config  string   PCS_CH3_TX_TCLK2FABRIC_SEL = "FALSE",     // 0,1
     config  string   PCS_CH3_TX_OUTZZ = "FALSE",       // 1:16bit/32bit only,0:20bit/40bit only
     config  string   PCS_CH3_ENC_DUAL = "FALSE",       // 0,1
     config  string   PCS_CH3_TX_BITSLIP_DATA_MODE = "X10",     // 1: 20bit,0: 10bit
     config  int     PCS_CH3_COMMA_REG1 = 0,        // 
     config  int     PCS_CH3_RAPID_IMAX = 0,        // 
     config  int     PCS_CH3_RAPID_VMIN_1 = 0,      // 
     config  int     PCS_CH3_RAPID_VMIN_2 = 0,      // 
     config  string   PCS_CH3_RX_PRBS_MODE = "DISABLE",      // Mode select:4'd0: reserved,4'd1: PRBS-7,4'd2: PRBS-15,4'd3: PRBS-23,4'd4: PRBS-31,4'd5: long "TRUE",4'd6: long "FALSE",4'd7: 20UI square wave,4'd8: D10_2,4'd9: PCIe complianece pattern,Others: reserved
     config  string   PCS_CH3_RX_ERRCNT_CLR = "FALSE",      // 0,1
     config  string   PCS_CH3_TX_PRBS_MODE = "DISABLE",      // Mode select:4'd0: reserved,4'd1: PRBS-7,4'd2: PRBS-15,4'd3: PRBS-23,4'd4: PRBS-31,4'd5: long "TRUE",4'd6: long "FALSE",4'd7: 20UI square wave,4'd8: D10_2,4'd9: PCIe complianece pattern,Others: reserved
     config  string   PCS_CH3_TX_INSERT_ER = "FALSE",       // 0,1
     config  string   PCS_CH3_ENABLE_PRBS_GEN = "FALSE",        // 0,1
     config  int     PCS_CH3_ERR_CNT = 0,       // 
     config  int     PCS_CH3_DEFAULT_RADDR = 0,     // 
     config  int     PCS_CH3_MASTER_CHECK_OFFSET = 0,       // 
     config  int     PCS_CH3_DELAY_SET = 0,     // 
     config  string   PCS_CH3_SEACH_OFFSET = "20BIT",       // 20bit,30bit,40bit,50bit,60bit,70bit
     config  int     PCS_CH3_CEB_RAPIDLS_MMAX = 0,      // 
     config  int     PCS_CH3_CTC_AFULL = 0,     // 
     config  int     PCS_CH3_CTC_AEMPTY = 0,        // 
     config  string   PCS_CH3_FAR_LOOP = "FALSE",       // 0,1
     config  string     PCS_CH3_NEAR_LOOP = "FALSE",        // 0,1
     config  string     PCS_CH3_INT_RX_MASK_0 = "FALSE",        // 0,1  active high to mask int triggered by pcs_lsm_synced
     config  string     PCS_CH3_INT_RX_MASK_1 = "FALSE",        // 0,1  active high to mask int triggered by pcs_rx_mcb_status
     config  string     PCS_CH3_INT_RX_MASK_2 = "FALSE",        // 0,1  active high to mask int triggered by channel bonding async fifo overflow
     config  string     PCS_CH3_INT_RX_MASK_3 = "FALSE",        // 0,1  active high to mask int triggered by channel bonding async fifo underflow
     config  string     PCS_CH3_INT_RX_MASK_4 = "FALSE",        // 0,1  active high to mask int triggered by ctc unit async fifo overflow
     config  string     PCS_CH3_INT_RX_MASK_5 = "FALSE",        // 0,1  active high to mask int triggered by ctc unit async fifo underflow
     config  string     PCS_CH3_INT_RX_MASK_6 = "FALSE",        // 0,1  active high to mask int triggered by rx_bridge_unit async fifo overflow
     config  string     PCS_CH3_INT_RX_MASK_7 = "FALSE",        // 0,1  active high to mask int triggered by rx_bridge_unit async fifo underflow
     config  string     PCS_CH3_INT_RX_CLR_0 = "FALSE",     // 0,1  active high to clr int triggered by pcs_lsm_synced
     config  string     PCS_CH3_INT_RX_CLR_1 = "FALSE",     // 0,1  active high to clr int triggered by pcs_rx_mcb_status
     config  string     PCS_CH3_INT_RX_CLR_2 = "FALSE",     // 0,1  active high to clr int triggered by channel bonding async fifo overflow
     config  string     PCS_CH3_INT_RX_CLR_3 = "FALSE",     // 0,1  active high to clr int triggered by channel bonding async fifo underflow
     config  string     PCS_CH3_INT_RX_CLR_4 = "FALSE",     // 0,1  active high to clr int triggered by ctc unit async fifo overflow
     config  string     PCS_CH3_INT_RX_CLR_5 = "FALSE",     // 0,1  active high to clr int triggered by ctc unit async fifo underflow
     config  string     PCS_CH3_INT_RX_CLR_6 = "FALSE",     // 0,1  active high to clr int triggered by rx_bridge_unit async fifo overflow
     config  string     PCS_CH3_INT_RX_CLR_7 = "FALSE",     // 0,1  active high to clr int triggered by rx_bridge_unit async fifo underflow
     //********************  parameter -- pma_ch0 ********************
     config  string   PMA_CH0_TXDATA_WIDTH  = "8_BIT",      // 8-bit:2'b00, 10-bit:2'b01, 16-bit:2'b10, 20-bit:2'b11
     config  int   PMA_CH0_TX_TESTPATTERN    = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH0_TESTPATTERN_O_ENABLE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_DISABLE_BSMODE_DRVAMP = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_FORCE_BIST_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_FORCE_ELECTRICAL_IDLE = "FALSE",    // TRUE , FALSE 
     config  string   PMA_CH0_FORCE_RXDCT_ENABLE    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_FORCE_EXTLB_ENABLE    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_DISABLE_LANE_SYNC = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_DISABLE_ELECTRICAL_IDLE   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_DISABLE_RXDCT_ENABLE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_DISABLE_EXTLB_ENABLE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_DISABLE_LOW_SPEED_PATH_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_FORCE_LANE_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_FORCE_LANE_RESETB_DISABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_RXDCT_LGBW_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_RXDCT_VTH = "-MINUS_300MV",    // -300mv:1'b00 ,-375mv:1'b01 ,-150mv:1'b10 ,-225mv:1'b11 
     config  string   PMA_CH0_DE_EMPHASIS_ADDITIONAL_CONTROL    = "0DB",       // +0db:1'b00 ,+0.7db:1'b01 ,+1.4db:1'b11 
     config  string   PMA_CH0_DRV_RTERM_CONTROL = "100PCT",       //  100% , 95% , 91% , 87% , 105% , 111% , 117% ,highZ
     config  string   PMA_CH0_FDRV_AMP_CONTROL  = "100PCT",    // 100% , 92% , 109% , 120%
     config  string   PMA_CH0_PREPC_AMP_CONTROL = "100PCT",    // 100% , 83% , 133% , 117%
     config  string   PMA_CH0_PREMC_AMP_CONTROL = "100PCT",    // 100% , 83% , 133% , 117%
     config  string   PMA_CH0_SER_AMP_CONTROL   = "100PCT",    // 100% , 83% , 133% , 117%
     config  int   PMA_CH0_PFD_LOOP_RESISTOR_SETTING = 0,       // 0000 -> 1111 
     config  int   PMA_CH0_PD_LOOP_RESISTOR_SETTING  = 0,       // 0000 -> 1111 
     config  string   PMA_CH0_CDR_TEST_OUT_SELECT   = "FBCK",    // FBCK , PD
     config  string   PMA_CH0_PI_DIV1_BP    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_PI_TEST_FOR_CKI   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_PI_CURRENT_SETTING    = "100PCT",       // 100%,80%,140%,120%,160%,120%r,200%,180%
     config  int   PMA_CH0_PI_FREQUENCY_SETTING  = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH0_TEST_OUT_SELECT_FOR_RCK   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_TEST_OUT_SELECT_SOURCE    = "SLPI1UI",    // SLPI1UI , PD1
     config  string   PMA_CH0_TEST_DATA_OUT_SELECT_SOURCE   = "DO",    // DO , DE
     config  string   PMA_CH0_TEST_CK_OUT_SELECT_SOURCE = "DATA",    // DATA , CLOCK
     config  string   PMA_CH0_ENABLE_SLIP1UI_MODULE = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_PN_SWAP_ENABLE    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_SIPO_BIT_SETTING  = "10_BIT",     // 10-bit:2'b00, 8-bit:2'b01, 20-bit:2'b10, 16-bit:2'b11
     config  string   PMA_CH0_OOB_EN    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_ALOS_EN   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_LFMODE    = "HIGH",    // HIGH , LOW
     config  string   PMA_CH0_TSO_HS_SEL    = "CDR",    // CDR , EQ
     config  string   PMA_CH0_LX_SELLC  = "RING",           // ring , LC
     config  int   PMA_CH0_LX_RXPLL_DIVSEL45_FB  = 4,          // 4 , 5
     config  int   PMA_CH0_LX_RXPLL_DIVSEL_FB    = 2,      // 2,4,5,8,10
     config  int   PMA_CH0_LX_RXPLL_DIVSEL_REF   = 1,      // 1:2'b00 ,2:1'b01 ,4:2'b10 ,4:2'b11 
     config  int      PMA_CH0_PICODE    = 0,        // 0 to 255 
     config  int   PMA_CH0_RX_REFCK_SEL  = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH0_PFDLPEN_REGISTER_CONTROL_ENABLE   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_PFDLPEN_REGISTER_SETTING  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_PDLPEN_REGISTER_CONTROL_ENABLE    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_PDLPEN_REGISTER_SETTING   = "FALSE",    // TRUE , FALSE
     config  int   PMA_CH0_DIV_CHANGE_ENABLE_DELAY_TIMER = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH0_DIV_CHANGE_ENABLE_SIGNAL_GATING   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_CDR_ALIGN_REGISTER_SETTING_VALUE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_FORCE_CDR_ALIGN_ENABLE    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_SELLC_REGISTER_SETTING_VALUE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_SELLC_CONTROL_BY_REGISTER = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_REG_PLLI_LDO_VREF_SETTING = "0_9V",       //  000:0.9v , 001:0.95v , 010:1.00v , 011:1.05v , 100: 1.1v(df) , 101:1.15v , 110:1.20v , 111:1.25v
     config  int   PMA_CH0_REG_PLLI_LDO_BYPASS_CURRENT   = 0,        //  000 , 001 , 010 , 011 , 100 , 101 , 110 , 111
     config  string   PMA_CH0_REG_PLL_HSTEST_ENABLE = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_REG_PLL_ISNK_CURRENT_CONTROL  = "5U",     // 5u:1'b00 ,15u:1'b01 ,25u:1'b10 ,35u:1'b11 
     config  int PMA_CH0_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING   = 0,        // 0 to 31 
     config  string   PMA_CH0_REG_PLL_PD_LOOP_PLLGM_SETTING = "100PCT",       //  100% , 89% , 122% , 111% , 144% , 133% , 167% ,156%
     config  int PMA_CH0_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING   = 0,        // 0 to 31 
     config  string   PMA_CH0_REG_PLL_CP0_BIAS_CONTROL  = "100PCT",       //  100% , 111% , 125% , 143% , 71% , 77% , 83% ,91%
     config  int PMA_CH0_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING    = 0,        // 0 to 31 
     config  string   PMA_CH0_REG_PLL_CP1_BIAS_CONTROL  = "100PCT",       //  100% , 111% , 125% , 143% , 71% , 77% , 83% ,91%
     config  int PMA_CH0_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING    = 0,        // 0 to 31 
     config  string   PMA_CH0_REG_PLL_CP0_CURRENT_SETTING   = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH0_REG_PLL_CP1_CURRENT_SETTING   = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH0_REG_PLL_GM1_CURRENT_SETTING   = "100PCT",       //  100% , 67% , 167% , 133% , 300% , 267% , 367% ,333%
     config  string   PMA_CH0_REG_PLL_LC_BF2_CURRENT_SETTING    = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH0_REG_PLL_LC_BF2_CURRENT_SETTING_LOW    = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH0_REG_PLL_REG_CUR   = "100PCT",       //  100% , 80% , 140% , 120% , 180% , 160% , 220% ,200%
     config  string   PMA_CH0_REG_PLL_LCCUR = "DEFAULT",        //  default , -1mA , +2mA , +1mA , +4mA , +3mA , +6mA ,+5mA
     config  string   PMA_CH0_REG_PLL_LCOBAS    = "100PCT",       // 100% , 75% , 150% , 125% 
     config  string   PMA_CH0_REG_PLL_FB_CK_TEST_OUT_ENABLE = "DISABLE",    // DISABLE , ENABLE
     config  int   PMA_CH0_CDR_ALIGN_TIMER   = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH0_CALIB_WAIT    = 1024,       // 1024 , 2048 , 4096 , 512 
     config  int   PMA_CH0_CALIB_TIMER   = 512,        // 512 , 1024 , 2048 , 4096 
     config  int   PMA_CH0_TOT_RANGE = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH0_SUB_RANGE = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH0_OVLP  = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH0_BIST_WAIT = 1024,       // 1024 , 2048 , 4096 , 512 
     config  int   PMA_CH0_BIST_TIMER    = 512,        // 512 , 1024 , 2048 , 4096 
     config  int PMA_CH0_BAND_LB    = 0,        // 0 to 7 
     config  int PMA_CH0_BAND_HB    = 0,        // 0 to 31 
     config  int   PMA_CH0_FREQ_LOCK_ACCURACY    = 0,        //  000 , 001 , 010 , 011 , 100 , 101 , 110 , 111
     config  int PMA_CH0_REG_SET_LC_BAND    = 0,        // 0 to 31 
     config  int   PMA_CH0_REG_SET_VCODIV    = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH0_REGISTER_SET_VCODIV_BAND_ENABLE   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_REG_SET_PLL_LOCK  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_REGISTER_SET_PLL_LOCK_ENABLE  = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_REG_SET_VCO_HI    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_REG_SET_VCO_LO    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_REGISTER_SET_VCO_HI_VCO_LO_ENABLE = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_FORCE_LC_PLL_LOOP_EN  = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_VCO_DIV_CALI_BYPASS   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_BIST_EN   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE  = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_FREQ_DETECT_ENABLE_SOURCE     = "DISABLE",    // DISABLE , ENABLE
     config  int   PMA_CH0_REG_SET_DIVSEL_REF    = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH0_REG_SET_DIVSEL45_FB   = "FALSE",    // TRUE , FALSE
     config  int PMA_CH0_REG_SET_DIVSEL_FB  = 0,        // 0 to 7  
     config  string   PMA_CH0_PLL_LOOP_EN_SETTING   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_REGISTER_SET_TXPLL_DIV_ENABLE     = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_FORCE_RXPLL_RESET = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_FORCE_RXPLL_ON    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_DPCK_DIV2 = "FALSE",    // 0:1'b0, 1:1'b1 
     config  int   PMA_CH0_LFO_SETTING   = 0,        //  000 , 001 , 010 , 011 , 100 , 101 , 110 , 111
     config  string   PMA_CH0_ALOS_COUNTER_CLOCK_SELECTION  = "LOCAL",    // LOCAL , GLOBAL25M
     config  string   PMA_CH0_RX_BIAS_CURRENT_ADJUSTMENT    = "100PCT",       //  100% , 111% , 125% , 143% , 71% , 77% , 83% ,91%
     config  int   PMA_CH0_OOB_ENTER_DELAY_SETTING   = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int   PMA_CH0_ALOS_LOW_TO_HIGH_COUNTER_SETTING  = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH0_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL   = "DISABLE",    // DISABLE , ENABLE
     config  int   PMA_CH0_ALOS_EXIT_COUNTER_CLOCK_DIVIDER   = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int   PMA_CH0_OOB_OSCILATER_FREQUENCY_SETTING   = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH0_FORCE_OOB = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_OOB_VTH_SET   = "27MV",       // 27mv, 30mv, 35mv, 42.5mv, 52mv, 68mv 
     config  string   PMA_CH0_FORCE_DET_FORCE_ALOS_LOW  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_ALOS_THRESHOLD_VOLTAGE    = "27MV",       // 27mv, 30mv, 35mv, 42.5mv, 52mv, 68mv 
     config  int   PMA_CH0_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH0_REGR_NEGATIVE_HYSTERESIS_SETTING  = "100MV",      // 100mv, 75mv, 50mv, 25mv, 25mv, 0mv 
     config  string   PMA_CH0_REGL_POSITIVE_HYSTERESIS_SETTING  = "100MV",      // 100mv, 75mv, 50mv, 25mv, 25mv, 0mv 
     config  string   PMA_CH0_REG_EN    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_REGREF_SEL    = "VREF",    // Vref , self_DC
     config  string   PMA_CH0_DC496 = "39_6MHZ",        // 5MHz, 8MHz, 11.5MHz, 20.6MHz, 39.6MHz 
     config  int   PMA_CH0_EQ2_AC_VAR_SETTING    = 0,       // 11111111,11111110,11111100,11111000,11110000,11100000,11000000,10000000,00000000 
     config  int PMA_CH0_EQ2_AC_RES_SETTING = 0,        // 0 to 31 
     config  int   PMA_CH0_EQ2_DC_RESTOP_SETTING = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int   PMA_CH0_EQ1_DC_RESTOP_SETTING = 50,     //  50, 60, 71, 78, 107 
     config  int   PMA_CH0_EQ1_AC_VAR_SETTING    = 0,       // 11111111,11111110,11111100,11111000,11110000,11100000,11000000,10000000,00000000 
     config  int   PMA_CH0_EQ2_CURRENT_SETTING   = 0,        // 111, 011, 001, 000 
     config  int PMA_CH0_EQ1_AC_RES_SETTING = 0,        // 0 to 31 
     config  int   PMA_CH0_EQ1_CURRENT_SETTING   = 0,        // 1111, 0111, 0011, 1001, 0001, 0000 
     config  int   PMA_CH0_RPLUS = 0,       // 0000,0001,0011,0111,1111 
     config  int   PMA_CH0_RMINUS    = 0,       // 0000,0001,0011,0111,1111 
     config  int   PMA_CH0_RVALSET   = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int   PMA_CH0_RTERM = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH0_DCFB_EN   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH0_DCCOUP    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH0_3G    = "FALSE",    // TRUE , FALSE
     //********************  parameter -- pma_ch1 ********************
     config  string   PMA_CH1_TXDATA_WIDTH  = "8_BIT",      // 8-bit:2'b00, 10-bit:2'b01, 16-bit:2'b10, 20-bit:2'b11
     config  int   PMA_CH1_TX_TESTPATTERN    = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH1_TESTPATTERN_O_ENABLE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_DISABLE_BSMODE_DRVAMP = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_FORCE_BIST_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_FORCE_ELECTRICAL_IDLE = "FALSE",    // TRUE , FALSE 
     config  string   PMA_CH1_FORCE_RXDCT_ENABLE    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_FORCE_EXTLB_ENABLE    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_DISABLE_LANE_SYNC = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_DISABLE_ELECTRICAL_IDLE   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_DISABLE_RXDCT_ENABLE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_DISABLE_EXTLB_ENABLE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_DISABLE_LOW_SPEED_PATH_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_FORCE_LANE_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_FORCE_LANE_RESETB_DISABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_RXDCT_LGBW_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_RXDCT_VTH = "-MINUS_300MV",    // -300mv:1'b00 ,-375mv:1'b01 ,-150mv:1'b10 ,-225mv:1'b11 
     config  string   PMA_CH1_DE_EMPHASIS_ADDITIONAL_CONTROL    = "0DB",       // +0db:1'b00 ,+0.7db:1'b01 ,+1.4db:1'b11 
     config  string   PMA_CH1_DRV_RTERM_CONTROL = "100PCT",       //  100% , 95% , 91% , 87% , 105% , 111% , 117% ,highZ
     config  string   PMA_CH1_FDRV_AMP_CONTROL  = "100PCT",    // 100% , 92% , 109% , 120%
     config  string   PMA_CH1_PREPC_AMP_CONTROL = "100PCT",    // 100% , 83% , 133% , 117%
     config  string   PMA_CH1_PREMC_AMP_CONTROL = "100PCT",    // 100% , 83% , 133% , 117%
     config  string   PMA_CH1_SER_AMP_CONTROL   = "100PCT",    // 100% , 83% , 133% , 117%
     config  int   PMA_CH1_PFD_LOOP_RESISTOR_SETTING = 0,       // 0000 -> 1111 
     config  int   PMA_CH1_PD_LOOP_RESISTOR_SETTING  = 0,       // 0000 -> 1111 
     config  string   PMA_CH1_CDR_TEST_OUT_SELECT   = "FBCK",    // FBCK , PD
     config  string   PMA_CH1_PI_DIV1_BP    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_PI_TEST_FOR_CKI   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_PI_CURRENT_SETTING    = "100PCT",       // 100%,80%,140%,120%,160%,120%r,200%,180%
     config  int   PMA_CH1_PI_FREQUENCY_SETTING  = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH1_TEST_OUT_SELECT_FOR_RCK   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_TEST_OUT_SELECT_SOURCE    = "SLPI1UI",    // SLPI1UI , PD1
     config  string   PMA_CH1_TEST_DATA_OUT_SELECT_SOURCE   = "DO",    // DO , DE
     config  string   PMA_CH1_TEST_CK_OUT_SELECT_SOURCE = "DATA",    // DATA , CLOCK
     config  string   PMA_CH1_ENABLE_SLIP1UI_MODULE = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_PN_SWAP_ENABLE    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_SIPO_BIT_SETTING  = "10_BIT",     // 10-bit:2'b00, 8-bit:2'b01, 20-bit:2'b10, 16-bit:2'b11
     config  string   PMA_CH1_OOB_EN    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_ALOS_EN   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_LFMODE    = "HIGH",    // HIGH , LOW
     config  string   PMA_CH1_TSO_HS_SEL    = "CDR",    // CDR , EQ
     config  string   PMA_CH1_LX_SELLC  = "RING",           // ring , LC
     config  int   PMA_CH1_LX_RXPLL_DIVSEL45_FB  = 4,          // 4 , 5
     config  int   PMA_CH1_LX_RXPLL_DIVSEL_FB    = 2,      // 2,4,5,8,10
     config  int   PMA_CH1_LX_RXPLL_DIVSEL_REF   = 1,      // 1:2'b00 ,2:1'b01 ,4:2'b10 ,4:2'b11 
     config  int PMA_CH1_PICODE = 0,        // 0 to 255 
     config  int   PMA_CH1_RX_REFCK_SEL  = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH1_PFDLPEN_REGISTER_CONTROL_ENABLE   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_PFDLPEN_REGISTER_SETTING  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_PDLPEN_REGISTER_CONTROL_ENABLE    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_PDLPEN_REGISTER_SETTING   = "FALSE",    // TRUE , FALSE
     config  int   PMA_CH1_DIV_CHANGE_ENABLE_DELAY_TIMER = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH1_DIV_CHANGE_ENABLE_SIGNAL_GATING   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_CDR_ALIGN_REGISTER_SETTING_VALUE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_FORCE_CDR_ALIGN_ENABLE    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_SELLC_REGISTER_SETTING_VALUE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_SELLC_CONTROL_BY_REGISTER = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_REG_PLLI_LDO_VREF_SETTING = "0_9V",       //  000:0.9v , 001:0.95v , 010:1.00v , 011:1.05v , 100: 1.1v(df) , 101:1.15v , 110:1.20v , 111:1.25v
     config  int   PMA_CH1_REG_PLLI_LDO_BYPASS_CURRENT   = 0,        //  000 , 001 , 010 , 011 , 100 , 101 , 110 , 111
     config  string   PMA_CH1_REG_PLL_HSTEST_ENABLE = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_REG_PLL_ISNK_CURRENT_CONTROL  = "5U",     // 5u:1'b00 ,15u:1'b01 ,25u:1'b10 ,35u:1'b11 
     config  int PMA_CH1_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING   = 0,        // 0 to 31 
     config  string   PMA_CH1_REG_PLL_PD_LOOP_PLLGM_SETTING = "100PCT",       //  100% , 89% , 122% , 111% , 144% , 133% , 167% ,156%
     config  int PMA_CH1_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING   = 0,        // 0 to 31 
     config  string   PMA_CH1_REG_PLL_CP0_BIAS_CONTROL  = "100PCT",       //  100% , 111% , 125% , 143% , 71% , 77% , 83% ,91%
     config  int PMA_CH1_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING    = 0,        // 0 to 31 
     config  string   PMA_CH1_REG_PLL_CP1_BIAS_CONTROL  = "100PCT",       //  100% , 111% , 125% , 143% , 71% , 77% , 83% ,91%
     config  int PMA_CH1_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING    = 0,        // 0 to 31 
     config  string   PMA_CH1_REG_PLL_CP0_CURRENT_SETTING   = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH1_REG_PLL_CP1_CURRENT_SETTING   = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH1_REG_PLL_GM1_CURRENT_SETTING   = "100PCT",       //  100% , 67% , 167% , 133% , 300% , 267% , 367% ,333%
     config  string   PMA_CH1_REG_PLL_LC_BF2_CURRENT_SETTING    = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH1_REG_PLL_LC_BF2_CURRENT_SETTING_LOW    = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH1_REG_PLL_REG_CUR   = "100PCT",       //  100% , 80% , 140% , 120% , 180% , 160% , 220% ,200%
     config  string   PMA_CH1_REG_PLL_LCCUR = "DEFAULT",        //  default , -1mA , +2mA , +1mA , +4mA , +3mA , +6mA ,+5mA
     config  string   PMA_CH1_REG_PLL_LCOBAS    = "100PCT",       // 100% , 75% , 150% , 125% 
     config  string   PMA_CH1_REG_PLL_FB_CK_TEST_OUT_ENABLE = "DISABLE",    // DISABLE , ENABLE
     config  int   PMA_CH1_CDR_ALIGN_TIMER   = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH1_CALIB_WAIT    = 1024,       // 1024 , 2048 , 4096 , 512 
     config  int   PMA_CH1_CALIB_TIMER   = 512,        // 512 , 1024 , 2048 , 4096 
     config  int   PMA_CH1_TOT_RANGE = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH1_SUB_RANGE = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH1_OVLP  = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH1_BIST_WAIT = 1024,       // 1024 , 2048 , 4096 , 512 
     config  int   PMA_CH1_BIST_TIMER    = 512,        // 512 , 1024 , 2048 , 4096 
     config  int PMA_CH1_BAND_LB    = 0,        // 0 to 7 
     config  int PMA_CH1_BAND_HB    = 0,        // 0 to 31 
     config  int   PMA_CH1_FREQ_LOCK_ACCURACY    = 0,        //  000 , 001 , 010 , 011 , 100 , 101 , 110 , 111
     config  int PMA_CH1_REG_SET_LC_BAND    = 0,        // 0 to 31 
     config  int   PMA_CH1_REG_SET_VCODIV    = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH1_REGISTER_SET_VCODIV_BAND_ENABLE   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_REG_SET_PLL_LOCK  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_REGISTER_SET_PLL_LOCK_ENABLE  = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_REG_SET_VCO_HI    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_REG_SET_VCO_LO    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_REGISTER_SET_VCO_HI_VCO_LO_ENABLE = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_FORCE_LC_PLL_LOOP_EN  = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_VCO_DIV_CALI_BYPASS   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_BIST_EN   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE  = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_FREQ_DETECT_ENABLE_SOURCE     = "DISABLE",    // DISABLE , ENABLE
     config  int   PMA_CH1_REG_SET_DIVSEL_REF    = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH1_REG_SET_DIVSEL45_FB   = "FALSE",    // TRUE , FALSE
     config  int PMA_CH1_REG_SET_DIVSEL_FB  = 0,        // 0 to 7  
     config  string   PMA_CH1_PLL_LOOP_EN_SETTING   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_REGISTER_SET_TXPLL_DIV_ENABLE     = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_FORCE_RXPLL_RESET = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_FORCE_RXPLL_ON    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_DPCK_DIV2 = "FALSE",    // 0:1'b0, 1:1'b1 
     config  int   PMA_CH1_LFO_SETTING   = 0,        //  000 , 001 , 010 , 011 , 100 , 101 , 110 , 111
     config  string   PMA_CH1_ALOS_COUNTER_CLOCK_SELECTION  = "LOCAL",    // LOCAL , GLOBAL25M
     config  string   PMA_CH1_RX_BIAS_CURRENT_ADJUSTMENT    = "100PCT",       //  100% , 111% , 125% , 143% , 71% , 77% , 83% ,91%
     config  int   PMA_CH1_OOB_ENTER_DELAY_SETTING   = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int   PMA_CH1_ALOS_LOW_TO_HIGH_COUNTER_SETTING  = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH1_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL   = "DISABLE",    // DISABLE , ENABLE
     config  int   PMA_CH1_ALOS_EXIT_COUNTER_CLOCK_DIVIDER   = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int   PMA_CH1_OOB_OSCILATER_FREQUENCY_SETTING   = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH1_FORCE_OOB = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_OOB_VTH_SET   = "27MV",       // 27mv, 30mv, 35mv, 42.5mv, 52mv, 68mv 
     config  string   PMA_CH1_FORCE_DET_FORCE_ALOS_LOW  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_ALOS_THRESHOLD_VOLTAGE    = "27MV",       // 27mv, 30mv, 35mv, 42.5mv, 52mv, 68mv 
     config  int   PMA_CH1_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH1_REGR_NEGATIVE_HYSTERESIS_SETTING  = "100MV",      // 100mv, 75mv, 50mv, 25mv, 25mv, 0mv 
     config  string   PMA_CH1_REGL_POSITIVE_HYSTERESIS_SETTING  = "100MV",      // 100mv, 75mv, 50mv, 25mv, 25mv, 0mv 
     config  string   PMA_CH1_REG_EN    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_REGREF_SEL    = "VREF",    // Vref , self_DC
     config  string   PMA_CH1_DC496 = "39_6MHZ",        // 5MHz, 8MHz, 11.5MHz, 20.6MHz, 39.6MHz 
     config  int   PMA_CH1_EQ2_AC_VAR_SETTING    = 0,       // 11111111,11111110,11111100,11111000,11110000,11100000,11000000,10000000,00000000 
     config  int PMA_CH1_EQ2_AC_RES_SETTING = 0,        // 0 to 31 
     config  int   PMA_CH1_EQ2_DC_RESTOP_SETTING = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int   PMA_CH1_EQ1_DC_RESTOP_SETTING = 50,     //  50, 60, 71, 78, 107 
     config  int   PMA_CH1_EQ1_AC_VAR_SETTING    = 0,       // 11111111,11111110,11111100,11111000,11110000,11100000,11000000,10000000,00000000 
     config  int   PMA_CH1_EQ2_CURRENT_SETTING   = 0,        // 111, 011, 001, 000 
     config  int PMA_CH1_EQ1_AC_RES_SETTING = 0,        // 0 to 31 
     config  int   PMA_CH1_EQ1_CURRENT_SETTING   = 0,        // 1111, 0111, 0011, 1001, 0001, 0000 
     config  int   PMA_CH1_RPLUS = 0,       // 0000,0001,0011,0111,1111 
     config  int   PMA_CH1_RMINUS    = 0,       // 0000,0001,0011,0111,1111 
     config  int   PMA_CH1_RVALSET   = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int   PMA_CH1_RTERM = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH1_DCFB_EN   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH1_DCCOUP    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH1_3G    = "FALSE",    // TRUE , FALSE
     //********************  parameter -- pma_ch2 ********************
     config  string   PMA_CH2_TXDATA_WIDTH  = "8_BIT",      // 8-bit:2'b00, 10-bit:2'b01, 16-bit:2'b10, 20-bit:2'b11
     config  int   PMA_CH2_TX_TESTPATTERN    = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH2_TESTPATTERN_O_ENABLE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_DISABLE_BSMODE_DRVAMP = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_FORCE_BIST_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_FORCE_ELECTRICAL_IDLE = "FALSE",    // TRUE , FALSE 
     config  string   PMA_CH2_FORCE_RXDCT_ENABLE    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_FORCE_EXTLB_ENABLE    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_DISABLE_LANE_SYNC = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_DISABLE_ELECTRICAL_IDLE   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_DISABLE_RXDCT_ENABLE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_DISABLE_EXTLB_ENABLE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_DISABLE_LOW_SPEED_PATH_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_FORCE_LANE_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_FORCE_LANE_RESETB_DISABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_RXDCT_LGBW_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_RXDCT_VTH = "-MINUS_300MV",    // -300mv:1'b00 ,-375mv:1'b01 ,-150mv:1'b10 ,-225mv:1'b11 
     config  string   PMA_CH2_DE_EMPHASIS_ADDITIONAL_CONTROL    = "0DB",       // +0db:1'b00 ,+0.7db:1'b01 ,+1.4db:1'b11 
     config  string   PMA_CH2_DRV_RTERM_CONTROL = "100PCT",       //  100% , 95% , 91% , 87% , 105% , 111% , 117% ,highZ
     config  string   PMA_CH2_FDRV_AMP_CONTROL  = "100PCT",    // 100% , 92% , 109% , 120%
     config  string   PMA_CH2_PREPC_AMP_CONTROL = "100PCT",    // 100% , 83% , 133% , 117%
     config  string   PMA_CH2_PREMC_AMP_CONTROL = "100PCT",    // 100% , 83% , 133% , 117%
     config  string   PMA_CH2_SER_AMP_CONTROL   = "100PCT",    // 100% , 83% , 133% , 117%
     config  int   PMA_CH2_PFD_LOOP_RESISTOR_SETTING = 0,       // 0000 -> 1111 
     config  int   PMA_CH2_PD_LOOP_RESISTOR_SETTING  = 0,       // 0000 -> 1111 
     config  string   PMA_CH2_CDR_TEST_OUT_SELECT   = "FBCK",    // FBCK , PD
     config  string   PMA_CH2_PI_DIV1_BP    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH2_PI_TEST_FOR_CKI   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_PI_CURRENT_SETTING    = "100PCT",       // 100%,80%,140%,120%,160%,120%r,200%,180%
     config  int   PMA_CH2_PI_FREQUENCY_SETTING  = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH2_TEST_OUT_SELECT_FOR_RCK   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_TEST_OUT_SELECT_SOURCE    = "SLPI1UI",    // SLPI1UI , PD1
     config  string   PMA_CH2_TEST_DATA_OUT_SELECT_SOURCE   = "DO",    // DO , DE
     config  string   PMA_CH2_TEST_CK_OUT_SELECT_SOURCE = "DATA",    // DATA , CLOCK
     config  string   PMA_CH2_ENABLE_SLIP1UI_MODULE = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH2_PN_SWAP_ENABLE    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH2_SIPO_BIT_SETTING  = "10_BIT",     // 10-bit:2'b00, 8-bit:2'b01, 20-bit:2'b10, 16-bit:2'b11
     config  string   PMA_CH2_OOB_EN    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH2_ALOS_EN   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH2_LFMODE    = "HIGH",    // HIGH , LOW
     config  string   PMA_CH2_TSO_HS_SEL    = "CDR",    // CDR , EQ
     config  string   PMA_CH2_LX_SELLC  = "RING",           // ring , LC
     config  int   PMA_CH2_LX_RXPLL_DIVSEL45_FB  = 4,          // 4 , 5
     config  int   PMA_CH2_LX_RXPLL_DIVSEL_FB    = 2,      // 2,4,5,8,10
     config  int   PMA_CH2_LX_RXPLL_DIVSEL_REF   = 1,      // 1:2'b00 ,2:1'b01 ,4:2'b10 ,4:2'b11 
     config  int PMA_CH2_PICODE = 0,        // 0 to 255 
     config  int   PMA_CH2_RX_REFCK_SEL  = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH2_PFDLPEN_REGISTER_CONTROL_ENABLE   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH2_PFDLPEN_REGISTER_SETTING  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_PDLPEN_REGISTER_CONTROL_ENABLE    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH2_PDLPEN_REGISTER_SETTING   = "FALSE",    // TRUE , FALSE
     config  int   PMA_CH2_DIV_CHANGE_ENABLE_DELAY_TIMER = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH2_DIV_CHANGE_ENABLE_SIGNAL_GATING   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_CDR_ALIGN_REGISTER_SETTING_VALUE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_FORCE_CDR_ALIGN_ENABLE    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH2_SELLC_REGISTER_SETTING_VALUE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_SELLC_CONTROL_BY_REGISTER = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_REG_PLLI_LDO_VREF_SETTING = "0_9V",       //  000:0.9v , 001:0.95v , 010:1.00v , 011:1.05v , 100: 1.1v(df) , 101:1.15v , 110:1.20v , 111:1.25v
     config  int   PMA_CH2_REG_PLLI_LDO_BYPASS_CURRENT   = 0,        //  000 , 001 , 010 , 011 , 100 , 101 , 110 , 111
     config  string   PMA_CH2_REG_PLL_HSTEST_ENABLE = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH2_REG_PLL_ISNK_CURRENT_CONTROL  = "5U",     // 5u:1'b00 ,15u:1'b01 ,25u:1'b10 ,35u:1'b11 
     config  int PMA_CH2_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING   = 0,        // 0 to 31 
     config  string   PMA_CH2_REG_PLL_PD_LOOP_PLLGM_SETTING = "100PCT",       //  100% , 89% , 122% , 111% , 144% , 133% , 167% ,156%
     config  int PMA_CH2_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING   = 0,        // 0 to 31 
     config  string   PMA_CH2_REG_PLL_CP0_BIAS_CONTROL  = "100PCT",       //  100% , 111% , 125% , 143% , 71% , 77% , 83% ,91%
     config  int PMA_CH2_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING    = 0,        // 0 to 31 
     config  string   PMA_CH2_REG_PLL_CP1_BIAS_CONTROL  = "100PCT",       //  100% , 111% , 125% , 143% , 71% , 77% , 83% ,91%
     config  int PMA_CH2_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING    = 0,        // 0 to 31 
     config  string   PMA_CH2_REG_PLL_CP0_CURRENT_SETTING   = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH2_REG_PLL_CP1_CURRENT_SETTING   = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH2_REG_PLL_GM1_CURRENT_SETTING   = "100PCT",       //  100% , 67% , 167% , 133% , 300% , 267% , 367% ,333%
     config  string   PMA_CH2_REG_PLL_LC_BF2_CURRENT_SETTING    = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH2_REG_PLL_LC_BF2_CURRENT_SETTING_LOW    = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH2_REG_PLL_REG_CUR   = "100PCT",       //  100% , 80% , 140% , 120% , 180% , 160% , 220% ,200%
     config  string   PMA_CH2_REG_PLL_LCCUR = "DEFAULT",        //  default , -1mA , +2mA , +1mA , +4mA , +3mA , +6mA ,+5mA
     config  string   PMA_CH2_REG_PLL_LCOBAS    = "100PCT",       // 100% , 75% , 150% , 125% 
     config  string   PMA_CH2_REG_PLL_FB_CK_TEST_OUT_ENABLE = "DISABLE",    // DISABLE , ENABLE
     config  int   PMA_CH2_CDR_ALIGN_TIMER   = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH2_CALIB_WAIT    = 1024,       // 1024 , 2048 , 4096 , 512 
     config  int   PMA_CH2_CALIB_TIMER   = 512,        // 512 , 1024 , 2048 , 4096 
     config  int   PMA_CH2_TOT_RANGE = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH2_SUB_RANGE = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH2_OVLP  = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH2_BIST_WAIT = 1024,       // 1024 , 2048 , 4096 , 512 
     config  int   PMA_CH2_BIST_TIMER    = 512,        // 512 , 1024 , 2048 , 4096 
     config  int PMA_CH2_BAND_LB    = 0,        // 0 to 7 
     config  int PMA_CH2_BAND_HB    = 0,        // 0 to 31 
     config  int   PMA_CH2_FREQ_LOCK_ACCURACY    = 0,        //  000 , 001 , 010 , 011 , 100 , 101 , 110 , 111
     config  int PMA_CH2_REG_SET_LC_BAND    = 0,        // 0 to 31 
     config  int   PMA_CH2_REG_SET_VCODIV    = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH2_REGISTER_SET_VCODIV_BAND_ENABLE   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH2_REG_SET_PLL_LOCK  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_REGISTER_SET_PLL_LOCK_ENABLE  = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH2_REG_SET_VCO_HI    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_REG_SET_VCO_LO    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_REGISTER_SET_VCO_HI_VCO_LO_ENABLE = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH2_FORCE_LC_PLL_LOOP_EN  = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH2_VCO_DIV_CALI_BYPASS   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH2_BIST_EN   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH2_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE  = "DISABLE",    // DISABLE , ENABLE
     config  string  PMA_CH2_FREQ_DETECT_ENABLE_SOURCE  = "DISABLE",    // DISABLE , ENABLE
     config  int  PMA_CH2_REG_SET_DIVSEL_REF = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string  PMA_CH2_REG_SET_DIVSEL45_FB    = "FALSE",    // TRUE , FALSE
     config  int PMA_CH2_REG_SET_DIVSEL_FB  = 0,        // 0 to 7  
     config  string  PMA_CH2_PLL_LOOP_EN_SETTING    = "DISABLE",    // DISABLE , ENABLE
     config  string  PMA_CH2_REGISTER_SET_TXPLL_DIV_ENABLE  = "DISABLE",    // DISABLE , ENABLE
     config  string  PMA_CH2_FORCE_RXPLL_RESET  = "FALSE",    // TRUE , FALSE
     config  string  PMA_CH2_FORCE_RXPLL_ON = "FALSE",    // TRUE , FALSE
     config  string  PMA_CH2_DPCK_DIV2  = "FALSE",    // 0:1'b0, 1:1'b1 
     config  int  PMA_CH2_LFO_SETTING    = 0,        //  000 , 001 , 010 , 011 , 100 , 101 , 110 , 111
     config  string  PMA_CH2_ALOS_COUNTER_CLOCK_SELECTION   = "LOCAL",    // LOCAL , GLOBAL25M
     config  string  PMA_CH2_RX_BIAS_CURRENT_ADJUSTMENT = "100PCT",       //  100% , 111% , 125% , 143% , 71% , 77% , 83% ,91%
     config  int  PMA_CH2_OOB_ENTER_DELAY_SETTING    = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int  PMA_CH2_ALOS_LOW_TO_HIGH_COUNTER_SETTING   = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string  PMA_CH2_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL    = "DISABLE",    // DISABLE , ENABLE
     config  int  PMA_CH2_ALOS_EXIT_COUNTER_CLOCK_DIVIDER    = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int  PMA_CH2_OOB_OSCILATER_FREQUENCY_SETTING    = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string  PMA_CH2_FORCE_OOB  = "FALSE",    // TRUE , FALSE
     config  string  PMA_CH2_OOB_VTH_SET    = "27MV",       // 27mv, 30mv, 35mv, 42.5mv, 52mv, 68mv 
     config  string  PMA_CH2_FORCE_DET_FORCE_ALOS_LOW   = "FALSE",    // TRUE , FALSE
     config  string  PMA_CH2_ALOS_THRESHOLD_VOLTAGE = "27MV",       // 27mv, 30mv, 35mv, 42.5mv, 52mv, 68mv 
     config  int  PMA_CH2_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE  = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string  PMA_CH2_REGR_NEGATIVE_HYSTERESIS_SETTING   = "100MV",      // 100mv, 75mv, 50mv, 25mv, 25mv, 0mv 
     config  string  PMA_CH2_REGL_POSITIVE_HYSTERESIS_SETTING   = "100MV",      // 100mv, 75mv, 50mv, 25mv, 25mv, 0mv 
     config  string  PMA_CH2_REG_EN = "DISABLE",    // DISABLE , ENABLE
     config  string  PMA_CH2_REGREF_SEL = "VREF",    // Vref , self_DC
     config  string  PMA_CH2_DC496  = "39_6MHZ",        // 5MHz, 8MHz, 11.5MHz, 20.6MHz, 39.6MHz 
     config  int  PMA_CH2_EQ2_AC_VAR_SETTING = 0,       // 11111111,11111110,11111100,11111000,11110000,11100000,11000000,10000000,00000000 
     config  int PMA_CH2_EQ2_AC_RES_SETTING = 0,        // 0 to 31 
     config  int  PMA_CH2_EQ2_DC_RESTOP_SETTING  = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int  PMA_CH2_EQ1_DC_RESTOP_SETTING  = 50,     //  50, 60, 71, 78, 107 
     config  int  PMA_CH2_EQ1_AC_VAR_SETTING = 0,       // 11111111,11111110,11111100,11111000,11110000,11100000,11000000,10000000,00000000 
     config  int  PMA_CH2_EQ2_CURRENT_SETTING    = 0,        // 111, 011, 001, 000 
     config  int PMA_CH2_EQ1_AC_RES_SETTING = 0,        // 0 to 31 
     config  int  PMA_CH2_EQ1_CURRENT_SETTING    = 0,        // 1111, 0111, 0011, 1001, 0001, 0000 
     config  int  PMA_CH2_RPLUS  = 0,       // 0000,0001,0011,0111,1111 
     config  int  PMA_CH2_RMINUS = 0,       // 0000,0001,0011,0111,1111 
     config  int  PMA_CH2_RVALSET    = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int  PMA_CH2_RTERM  = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string  PMA_CH2_DCFB_EN    = "DISABLE",    // DISABLE , ENABLE
     config  string  PMA_CH2_DCCOUP = "FALSE",    // TRUE , FALSE
     config  string  PMA_CH2_3G = "FALSE",    // TRUE , FALSE
     //********************  parameter -- pma_ch3 ********************
     config  string   PMA_CH3_TXDATA_WIDTH  = "8_BIT",      // 8-bit:2'b00, 10-bit:2'b01, 16-bit:2'b10, 20-bit:2'b11
     config  int   PMA_CH3_TX_TESTPATTERN    = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH3_TESTPATTERN_O_ENABLE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_DISABLE_BSMODE_DRVAMP = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_FORCE_BIST_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_FORCE_ELECTRICAL_IDLE = "FALSE",    // TRUE , FALSE 
     config  string   PMA_CH3_FORCE_RXDCT_ENABLE    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_FORCE_EXTLB_ENABLE    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_DISABLE_LANE_SYNC = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_DISABLE_ELECTRICAL_IDLE   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_DISABLE_RXDCT_ENABLE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_DISABLE_EXTLB_ENABLE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_DISABLE_LOW_SPEED_PATH_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_FORCE_LANE_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_FORCE_LANE_RESETB_DISABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_RXDCT_LGBW_ENABLE = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_RXDCT_VTH = "-MINUS_300MV",    // -300mv:1'b00 ,-375mv:1'b01 ,-150mv:1'b10 ,-225mv:1'b11 
     config  string   PMA_CH3_DE_EMPHASIS_ADDITIONAL_CONTROL    = "0DB",       // +0db:1'b00 ,+0.7db:1'b01 ,+1.4db:1'b11 
     config  string   PMA_CH3_DRV_RTERM_CONTROL = "100PCT",       //  100% , 95% , 91% , 87% , 105% , 111% , 117% ,highZ
     config  string   PMA_CH3_FDRV_AMP_CONTROL  = "100PCT",    // 100% , 92% , 109% , 120%
     config  string   PMA_CH3_PREPC_AMP_CONTROL = "100PCT",    // 100% , 83% , 133% , 117%
     config  string   PMA_CH3_PREMC_AMP_CONTROL = "100PCT",    // 100% , 83% , 133% , 117%
     config  string   PMA_CH3_SER_AMP_CONTROL   = "100PCT",    // 100% , 83% , 133% , 117%
     config  int   PMA_CH3_PFD_LOOP_RESISTOR_SETTING = 0,       // 0000 -> 1111 
     config  int   PMA_CH3_PD_LOOP_RESISTOR_SETTING  = 0,       // 0000 -> 1111 
     config  string   PMA_CH3_CDR_TEST_OUT_SELECT   = "FBCK",    // FBCK , PD
     config  string   PMA_CH3_PI_DIV1_BP    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_PI_TEST_FOR_CKI   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_PI_CURRENT_SETTING    = "100PCT",       // 100%,80%,140%,120%,160%,120%r,200%,180%
     config  int   PMA_CH3_PI_FREQUENCY_SETTING  = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH3_TEST_OUT_SELECT_FOR_RCK   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_TEST_OUT_SELECT_SOURCE    = "SLPI1UI",    // SLPI1UI , PD1
     config  string   PMA_CH3_TEST_DATA_OUT_SELECT_SOURCE   = "DO",    // DO , DE
     config  string   PMA_CH3_TEST_CK_OUT_SELECT_SOURCE = "DATA",    // DATA , CLOCK
     config  string   PMA_CH3_ENABLE_SLIP1UI_MODULE = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_PN_SWAP_ENABLE    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_SIPO_BIT_SETTING  = "10_BIT",     // 10-bit:2'b00, 8-bit:2'b01, 20-bit:2'b10, 16-bit:2'b11
     config  string   PMA_CH3_OOB_EN    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_ALOS_EN   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_LFMODE    = "HIGH",    // HIGH , LOW
     config  string   PMA_CH3_TSO_HS_SEL    = "CDR",    // CDR , EQ
     config  string   PMA_CH3_LX_SELLC  = "RING",           // ring , LC
     config  int   PMA_CH3_LX_RXPLL_DIVSEL45_FB  = 4,          // 4 , 5
     config  int   PMA_CH3_LX_RXPLL_DIVSEL_FB    = 2,      // 2,4,5,8,10
     config  int   PMA_CH3_LX_RXPLL_DIVSEL_REF   = 1,      // 1:2'b00 ,2:1'b01 ,4:2'b10 ,4:2'b11 
     config  int PMA_CH3_PICODE = 0,        // 0 to 255 
     config  int   PMA_CH3_RX_REFCK_SEL  = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH3_PFDLPEN_REGISTER_CONTROL_ENABLE   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_PFDLPEN_REGISTER_SETTING  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_PDLPEN_REGISTER_CONTROL_ENABLE    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_PDLPEN_REGISTER_SETTING   = "FALSE",    // TRUE , FALSE
     config  int   PMA_CH3_DIV_CHANGE_ENABLE_DELAY_TIMER = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH3_DIV_CHANGE_ENABLE_SIGNAL_GATING   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_CDR_ALIGN_REGISTER_SETTING_VALUE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_FORCE_CDR_ALIGN_ENABLE    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_SELLC_REGISTER_SETTING_VALUE  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_SELLC_CONTROL_BY_REGISTER = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_REG_PLLI_LDO_VREF_SETTING = "0_9V",       //  000:0.9v , 001:0.95v , 010:1.00v , 011:1.05v , 100: 1.1v(df) , 101:1.15v , 110:1.20v , 111:1.25v
     config  int   PMA_CH3_REG_PLLI_LDO_BYPASS_CURRENT   = 0,        //  000 , 001 , 010 , 011 , 100 , 101 , 110 , 111
     config  string   PMA_CH3_REG_PLL_HSTEST_ENABLE = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_REG_PLL_ISNK_CURRENT_CONTROL  = "5U",     // 5u:1'b00 ,15u:1'b01 ,25u:1'b10 ,35u:1'b11 
     config  int PMA_CH3_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING   = 0,        // 0 to 31 
     config  string   PMA_CH3_REG_PLL_PD_LOOP_PLLGM_SETTING = "100PCT",       //  100% , 89% , 122% , 111% , 144% , 133% , 167% ,156%
     config  int PMA_CH3_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING   = 0,        // 0 to 31 
     config  string   PMA_CH3_REG_PLL_CP0_BIAS_CONTROL  = "100PCT",       //  100% , 111% , 125% , 143% , 71% , 77% , 83% ,91%
     config  int PMA_CH3_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING    = 0,        // 0 to 31 
     config  string   PMA_CH3_REG_PLL_CP1_BIAS_CONTROL  = "100PCT",       //  100% , 111% , 125% , 143% , 71% , 77% , 83% ,91%
     config  int PMA_CH3_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING    = 0,        // 0 to 31 
     config  string   PMA_CH3_REG_PLL_CP0_CURRENT_SETTING   = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH3_REG_PLL_CP1_CURRENT_SETTING   = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH3_REG_PLL_GM1_CURRENT_SETTING   = "100PCT",       //  100% , 67% , 167% , 133% , 300% , 267% , 367% ,333%
     config  string   PMA_CH3_REG_PLL_LC_BF2_CURRENT_SETTING    = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH3_REG_PLL_LC_BF2_CURRENT_SETTING_LOW    = "100PCT",       //  100% , 20% , 140% , 60% , 160% , 80% , 200% ,120%
     config  string   PMA_CH3_REG_PLL_REG_CUR   = "100PCT",       //  100% , 80% , 140% , 120% , 180% , 160% , 220% ,200%
     config  string   PMA_CH3_REG_PLL_LCCUR = "DEFAULT",        //  default , -1mA , +2mA , +1mA , +4mA , +3mA , +6mA ,+5mA
     config  string   PMA_CH3_REG_PLL_LCOBAS    = "100PCT",       // 100% , 75% , 150% , 125% 
     config  string   PMA_CH3_REG_PLL_FB_CK_TEST_OUT_ENABLE = "DISABLE",    // DISABLE , ENABLE
     config  int   PMA_CH3_CDR_ALIGN_TIMER   = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH3_CALIB_WAIT    = 1024,       // 1024 , 2048 , 4096 , 512 
     config  int   PMA_CH3_CALIB_TIMER   = 512,        // 512 , 1024 , 2048 , 4096 
     config  int   PMA_CH3_TOT_RANGE = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH3_SUB_RANGE = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH3_OVLP  = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  int   PMA_CH3_BIST_WAIT = 1024,       // 1024 , 2048 , 4096 , 512 
     config  int   PMA_CH3_BIST_TIMER    = 512,        // 512 , 1024 , 2048 , 4096 
     config  int PMA_CH3_BAND_LB    = 0,        // 0 to 7 
     config  int PMA_CH3_BAND_HB    = 0,        // 0 to 31 
     config  int   PMA_CH3_FREQ_LOCK_ACCURACY    = 0,        //  000 , 001 , 010 , 011 , 100 , 101 , 110 , 111
     config  int PMA_CH3_REG_SET_LC_BAND    = 0,        // 0 to 31 
     config  int   PMA_CH3_REG_SET_VCODIV    = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH3_REGISTER_SET_VCODIV_BAND_ENABLE   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_REG_SET_PLL_LOCK  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_REGISTER_SET_PLL_LOCK_ENABLE  = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_REG_SET_VCO_HI    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_REG_SET_VCO_LO    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_REGISTER_SET_VCO_HI_VCO_LO_ENABLE = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_FORCE_LC_PLL_LOOP_EN  = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_VCO_DIV_CALI_BYPASS   = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_BIST_EN   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE  = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_FREQ_DETECT_ENABLE_SOURCE     = "DISABLE",    // DISABLE , ENABLE
     config  int   PMA_CH3_REG_SET_DIVSEL_REF    = 0,     // 00:2'b00 ,01:2'b01 ,10:2'b10 ,11:2'b11 
     config  string   PMA_CH3_REG_SET_DIVSEL45_FB   = "FALSE",    // TRUE , FALSE
     config  int PMA_CH3_REG_SET_DIVSEL_FB  = 0,        // 0 to 7  
     config  string   PMA_CH3_PLL_LOOP_EN_SETTING   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_REGISTER_SET_TXPLL_DIV_ENABLE     = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_FORCE_RXPLL_RESET = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_FORCE_RXPLL_ON    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_DPCK_DIV2 = "FALSE",    // 0:1'b0, 1:1'b1 
     config  int   PMA_CH3_LFO_SETTING   = 0,        //  000 , 001 , 010 , 011 , 100 , 101 , 110 , 111
     config  string   PMA_CH3_ALOS_COUNTER_CLOCK_SELECTION  = "LOCAL",    // LOCAL , GLOBAL25M
     config  string   PMA_CH3_RX_BIAS_CURRENT_ADJUSTMENT    = "100PCT",       //  100% , 111% , 125% , 143% , 71% , 77% , 83% ,91%
     config  int   PMA_CH3_OOB_ENTER_DELAY_SETTING   = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int   PMA_CH3_ALOS_LOW_TO_HIGH_COUNTER_SETTING  = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH3_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL   = "DISABLE",    // DISABLE , ENABLE
     config  int   PMA_CH3_ALOS_EXIT_COUNTER_CLOCK_DIVIDER   = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int   PMA_CH3_OOB_OSCILATER_FREQUENCY_SETTING   = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH3_FORCE_OOB = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_OOB_VTH_SET   = "27MV",       // 27mv, 30mv, 35mv, 42.5mv, 52mv, 68mv 
     config  string   PMA_CH3_FORCE_DET_FORCE_ALOS_LOW  = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_ALOS_THRESHOLD_VOLTAGE    = "27MV",       // 27mv, 30mv, 35mv, 42.5mv, 52mv, 68mv 
     config  int   PMA_CH3_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH3_REGR_NEGATIVE_HYSTERESIS_SETTING  = "100MV",      // 100mv, 75mv, 50mv, 25mv, 25mv, 0mv 
     config  string   PMA_CH3_REGL_POSITIVE_HYSTERESIS_SETTING  = "100MV",      // 100mv, 75mv, 50mv, 25mv, 25mv, 0mv 
     config  string   PMA_CH3_REG_EN    = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_REGREF_SEL    = "VREF",    // Vref , self_DC
     config  string   PMA_CH3_DC496 = "39_6MHZ",        // 5MHz, 8MHz, 11.5MHz, 20.6MHz, 39.6MHz 
     config  int   PMA_CH3_EQ2_AC_VAR_SETTING    = 0,       // 11111111,11111110,11111100,11111000,11110000,11100000,11000000,10000000,00000000 
     config  int PMA_CH3_EQ2_AC_RES_SETTING = 0,        // 0 to 31 
     config  int   PMA_CH3_EQ2_DC_RESTOP_SETTING = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int   PMA_CH3_EQ1_DC_RESTOP_SETTING = 50,     //  50, 60, 71, 78, 107 
     config  int   PMA_CH3_EQ1_AC_VAR_SETTING    = 0,       // 11111111,11111110,11111100,11111000,11110000,11100000,11000000,10000000,00000000 
     config  int   PMA_CH3_EQ2_CURRENT_SETTING   = 0,        // 111, 011, 001, 000 
     config  int PMA_CH3_EQ1_AC_RES_SETTING = 0,        // 0 to 31 
     config  int   PMA_CH3_EQ1_CURRENT_SETTING   = 0,        // 1111, 0111, 0011, 1001, 0001, 0000 
     config  int   PMA_CH3_RPLUS = 0,       // 0000,0001,0011,0111,1111 
     config  int   PMA_CH3_RMINUS    = 0,       // 0000,0001,0011,0111,1111 
     config  int   PMA_CH3_RVALSET   = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  int   PMA_CH3_RTERM = 0,     // 00:1'b00 ,01:1'b01 ,10:1'b10 ,11:1'b11 
     config  string   PMA_CH3_DCFB_EN   = "DISABLE",    // DISABLE , ENABLE
     config  string   PMA_CH3_DCCOUP    = "FALSE",    // TRUE , FALSE
     config  string   PMA_CH3_3G    = "FALSE",    // TRUE , FALSE
     //********************  parameter -- others ********************
     config  int  CLK_ALIGNER_RX0   = 0,        // 
     config  int  CLK_ALIGNER_RX1   = 0,        // 
     config  int  CLK_ALIGNER_RX2   = 0,        // 
     config  int  CLK_ALIGNER_RX3   = 0,        // 
     config  int  CLK_ALIGNER_TX0   = 0,        // 
     config  int  CLK_ALIGNER_TX1   = 0,        // 
     config  int  CLK_ALIGNER_TX2   = 0,        // 
     config  int  CLK_ALIGNER_TX3   = 0,        // 
     config  string     DYN_DLY_EN_RX0  = "FALSE",      // 
     config  string     DYN_DLY_EN_RX1  = "FALSE",      // 
     config  string     DYN_DLY_EN_RX2  = "FALSE",      // 
     config  string     DYN_DLY_EN_RX3  = "FALSE",      // 
     config  string     DYN_DLY_EN_TX0  = "FALSE",      // 
     config  string     DYN_DLY_EN_TX1  = "FALSE",      // 
     config  string     DYN_DLY_EN_TX2  = "FALSE",      // 
     config  string     DYN_DLY_EN_TX3  = "FALSE",      // 
     config  string     DYN_DLY_SEL_RX0 = "FALSE",      // 
     config  string     DYN_DLY_SEL_RX1 = "FALSE",      // 
     config  string     DYN_DLY_SEL_RX2 = "FALSE",      // 
     config  string     DYN_DLY_SEL_RX3 = "FALSE",      // 
     config  string     DYN_DLY_SEL_TX0 = "FALSE",      // 
     config  string     DYN_DLY_SEL_TX1 = "FALSE",      // 
     config  string     DYN_DLY_SEL_TX2 = "FALSE",      // 
     config  string     DYN_DLY_SEL_TX3 = "FALSE",      // 
     config  int  CLK_ALIGNER_RSTN_RX   = 0,        // 
     config  int  CLK_ALIGNER_RSTN_TX   = 0,        // 
     config  int  PT_LX_BISTLB_EN   = 0,        // 
     config  int  PT_LX_ELECIDLE_EN_MSB = 0,        // 
     config  int  PT_LX_EXTLB_EN    = 0,        // 
     config  int  PT_LX_RXDCT_EN    = 0,        // 
     config  int  PT_LX_TX_LFMODE   = 0,        // 
     config  int  PT_RX_LANE_POWERUP    = 0,        // 
     config  int  PT_TX_LANE_POWERUP    = 0,        // 
     config  string     PT_PLL_RSTN = "FALSE",      // 
     config  string     PT_PLLPOWERDOWN = "FALSE",      // 
     config  string     PT_QUAD_PWRUP   = "FALSE",      // 
     config  string     GRSN_DIS    = "FALSE",      // 
     config  string     PT_HSST_RSTN    = "FALSE",      // 
     config  string     PMA_CH0_FORCE_LC_PLL_LOOP_EN_H    = "DISABLE",      // 
     config  string     PMA_CH0_FORCE_LC_PLL_LOOP_EN_L    = "DISABLE", 
     config  string     PMA_CH1_FORCE_LC_PLL_LOOP_EN_H    = "DISABLE",      //    
     config  string     PMA_CH1_FORCE_LC_PLL_LOOP_EN_L    = "DISABLE",            
     config  string     PMA_CH2_FORCE_LC_PLL_LOOP_EN_H    = "DISABLE",      //    
     config  string     PMA_CH2_FORCE_LC_PLL_LOOP_EN_L    = "DISABLE",            
     config  string     PMA_CH3_FORCE_LC_PLL_LOOP_EN_H    = "DISABLE",      //    
     config  string     PMA_CH3_FORCE_LC_PLL_LOOP_EN_L    = "DISABLE",            
     config  string     PMA_QUAD_FORCE_LC_PLL_LOOP_EN_H    = "DISABLE",      //    
     config  string     PMA_QUAD_FORCE_LC_PLL_LOOP_EN_L    = "DISABLE",            
     config  string     PT_CFG_RSTN = "FALSE"       // 
    );
    port
    (
        output    L0TXN,
        output    L0TXP,
        input     L0RXN         = 1'b1,
        input     L0RXP         = 1'b1,
        output    RDATA_0[46:0],
        output    LX_ALOS_STA_0,
        output    LX_CDR_ALIGN_0,
        output    LX_LFO_0,
        output    LX_OOB_STA_0,
        output    LX_RXDCT_DONE_0,
        output    LX_RXDCT_OUT_0,
        input     LX_LFD_FRCORE_0      ,
        input     LX_RX_CKDIV_DYNSEL_0 ,
        input     PCS_RX_RSTN_0        ,
        input     PCS_TX_RSTN_0        ,
        input     RX0_CLK_FR_CORE      ,
        input     RX_PLL_RSTN_0        ,
        input     RX_PMA_RSTN_0        ,
        input     RX_REF_CLK_0         ,
        input     TX0_CLK_FR_CORE      ,
        input     TX_PMA_RSTN_0        ,
        input     LANE_SYNC_EN_0       ,
        input     LX_AMP_CTL_0[3:0]   ,
        input     CIM_CLK_ALIGNER_RX0[7:0],
        input     CIM_CLK_ALIGNER_TX0[7:0],
        input     LX_DEEMP_CTL_0[2:0] ,
        input     LX_RX_CKDIV_0[1:0]   ,
        input     TX_CKDIV_0[1:0]      ,
        input     TDATA_0[43:0]     ,
        input     LX_ELECIDLE_EN_0[1:0],
        output    L1TXN,
        output    L1TXP,
        input     L1RXN = 1'b1,
        input     L1RXP = 1'b1,
        output    RDATA_1[46:0],
        output    LX_ALOS_STA_1,
        output    LX_CDR_ALIGN_1,
        output    LX_LFO_1,
        output    LX_OOB_STA_1,
        output    LX_RXDCT_DONE_1,
        output    LX_RXDCT_OUT_1,
        input     LX_LFD_FRCORE_1     ,
        input     LX_RX_CKDIV_DYNSEL_1,
        input     PCS_RX_RSTN_1       ,
        input     PCS_TX_RSTN_1       ,
        input     RX1_CLK_FR_CORE     ,
        input     RX_PLL_RSTN_1       ,
        input     RX_PMA_RSTN_1       ,
        input     RX_REF_CLK_1        ,
        input     TX1_CLK_FR_CORE     ,
        input     TX_PMA_RSTN_1       ,
        input     LANE_SYNC_EN_1      ,
        input     LX_AMP_CTL_1[3:0]   ,
        input     CIM_CLK_ALIGNER_RX1[7:0] ,
        input     CIM_CLK_ALIGNER_TX1[7:0] ,
        input     LX_DEEMP_CTL_1[2:0]  ,
        input     LX_RX_CKDIV_1[1:0]   ,
        input     TX_CKDIV_1[1:0]      ,
        input     TDATA_1[43:0]      ,
        input     LX_ELECIDLE_EN_1[1:0],
        output    L2TXN,
        output    L2TXP,
        input     L2RXN = 1'b1,
        input     L2RXP = 1'b1,
        output    RDATA_2[46:0],
        output    LX_ALOS_STA_2,
        output    LX_CDR_ALIGN_2,
        output    LX_LFO_2,
        output    LX_OOB_STA_2,
        output    LX_RXDCT_DONE_2,
        output    LX_RXDCT_OUT_2,
        input     LX_LFD_FRCORE_2      ,
        input     LX_RX_CKDIV_DYNSEL_2 ,
        input     PCS_RX_RSTN_2        ,
        input     PCS_TX_RSTN_2        ,
        input     RX2_CLK_FR_CORE      ,
        input     RX_PLL_RSTN_2        ,
        input     RX_PMA_RSTN_2        ,
        input     RX_REF_CLK_2         ,
        input     TX2_CLK_FR_CORE      ,
        input     TX_PMA_RSTN_2        ,
        input     LANE_SYNC_EN_2       ,
        input     LX_AMP_CTL_2[3:0]    ,
        input     CIM_CLK_ALIGNER_RX2[7:0] ,
        input     CIM_CLK_ALIGNER_TX2[7:0] ,
        input     LX_DEEMP_CTL_2[2:0]  ,
        input     LX_RX_CKDIV_2[1:0]   ,
        input     TX_CKDIV_2[1:0]      ,
        input     TDATA_2[43:0]       ,
        input     LX_ELECIDLE_EN_2[1:0],
        output    L3TXN,
        output    L3TXP,
        input     L3RXN = 1'b1,
        input     L3RXP = 1'b1,
        output    RDATA_3[46:0],
        output    LX_ALOS_STA_3,
        output    LX_CDR_ALIGN_3,
        output    LX_LFO_3,
        output    LX_OOB_STA_3,
        output    LX_RXDCT_DONE_3,
        output    LX_RXDCT_OUT_3,
        input     LX_LFD_FRCORE_3      ,
        input     LX_RX_CKDIV_DYNSEL_3 ,
        input     PCS_RX_RSTN_3        ,
        input     PCS_TX_RSTN_3        ,
        input     RX3_CLK_FR_CORE      ,
        input     RX_PLL_RSTN_3        ,
        input     RX_PMA_RSTN_3        ,
        input     RX_REF_CLK_3         ,
        input     TX3_CLK_FR_CORE      ,
        input     TX_PMA_RSTN_3        ,
        input     LANE_SYNC_EN_3       ,
        input     LX_AMP_CTL_3[3:0]   ,
        input     CIM_CLK_ALIGNER_RX3[7:0],
        input     CIM_CLK_ALIGNER_TX3[7:0],
        input     LX_DEEMP_CTL_3[2:0],
        input     LX_RX_CKDIV_3[1:0]  ,
        input     TX_CKDIV_3[1:0]     ,
        input     TDATA_3[43:0]      ,
        input     LX_ELECIDLE_EN_3[1:0],
        output    CLK2CORE_RX[3:0],
        output    ALIGN_TX[3:0],
        output    ALIGN_RX[3:0],
        output    CLK2CORE_TX[3:0],
        output    PCS_RX_MCB_STATUS[3:0],
        output    PCS_LSM_SYNCED[3:0],
        input     LX_ELECIDLE_EN_MSB[3:0]    ,
        input     LX_BISTLB_EN[3:0]          ,
        input     LX_TX_LFMODE[3:0]          ,
        input     CIM_CLK_START_ALIGN_TX[3:0],
        input     CIM_CLK_START_ALIGN_RX[3:0],
        input     TX_LANE_POWERUP[3:0]       ,
        input     RX_LANE_POWERUP[3:0]       ,
        input     CIM_CLK_DYN_DLY_SEL_TX[3:0],
        input     LX_RXDCT_EN[3:0]           ,
        input     CIM_CLK_DYN_DLY_SEL_RX[3:0],
        input     LX_EXTLB_EN[3:0]           ,
        input     PCS_WORD_ALIGN_EN[3:0]     ,
        input     PCS_FAREND_LOOP[3:0]       ,
        input     PCS_NEAREND_LOOP[3:0]      ,
        input     CEB_ADETECT_EN[3:0]        ,
        input     PCS_MCB_EXT_EN[3:0]        ,
        input     RX_POLARITY_INVERT[3:0]    ,
        input     REFCKN = 1'b1,
        input     REFCKP = 1'b1,
        output    REXT,
        input     TEST_CLK  ,
        input     TEST_MODE ,
        input     TEST_RSTN ,
        input     TEST_SE   ,
        input     TEST_SI0  ,
        input     TEST_SI1  ,
        input     TEST_SI2  ,
        input     TEST_SI3  ,
        input     TEST_SI4  ,
        input     TEST_SI5  ,
        input     TEST_SI6  ,
        input     TEST_SI7  ,
        output    TEST_SO0,
        output    TEST_SO1,
        output    TEST_SO2,
        output    TEST_SO3,
        output    TEST_SO4,
        output    TEST_SO5,
        output    TEST_SO6,
        output    TEST_SO7,
        input     COMPRESSION_MODE,
        input     PLL_RESET       ,
        input     PLL_BYPASS      ,
        input     CFG_CLK         ,
        input     CFG_ENABLE      ,
        input     CFG_RSTN        ,
        input     CFG_WRITE       ,
        input     CFG_ADDR[15:0] ,
        input     CFG_WDATA[7:0] ,
        output    CFG_INT,
        output    CFG_READY,
        output    CFG_RDATA[7:0],
        input     AFTER_CTC_RCLK_EN_CIN     ,
        input     AFTER_CTC_RCLK_EN_GB_CIN  ,
        input     APATTERN_MATCH_LSB_CIN    ,
        input     APATTERN_MATCH_MSB_CIN    ,
        input     APATTERN_SEACHING_PROC_CIN,
        input     APATTERN_STATUS_CIN       ,
        input     BRIDGE_RCLK_EN_CIN        ,
        input     BRIDGE_TCLK_EN_CIN        ,
        input     CB_RCLK_EN_CIN            ,
        input     PCS_TCLK_EN_CIN           ,
        input     RFIFO_EN_AFTER_CTC_CIN    ,
        input     RFIFO_EN_AFTER_CTC_GB_CIN ,
        input     RFIFO_EN_BRIDGE_CIN       ,
        input     RFIFO_EN_CB_CIN           ,
        input     SKIP_ADD_LSB_MCB_CIN      ,
        input     SKIP_ADD_MCB_CIN          ,
        input     SKIP_DEL_LSB_MCB_CIN      ,
        input     SKIP_DEL_MCB_CIN          ,
        input     CTC_RD_FIFO_CIN           ,
        input     TFIFO_EN_BRIDGE_CIN       ,
        input     TFIFO_EN_PCS_TX_CIN       ,
        output    AFTER_CTC_RCLK_EN_COUT,
        output    AFTER_CTC_RCLK_EN_GB_COUT,
        output    APATTERN_MATCH_LSB_COUT,
        output    APATTERN_MATCH_MSB_COUT,
        output    APATTERN_SEACHING_PROC_COUT,
        output    APATTERN_STATUS_COUT,
        output    BRIDGE_RCLK_EN_COUT,
        output    BRIDGE_TCLK_EN_COUT,
        output    CB_RCLK_EN_COUT,
        output    PCS_TCLK_EN_COUT,
        output    RFIFO_EN_AFTER_CTC_COUT,
        output    RFIFO_EN_AFTER_CTC_GB_COUT,
        output    RFIFO_EN_BRIDGE_COUT,
        output    RFIFO_EN_CB_COUT,
        output    SKIP_ADD_LSB_MCB_COUT,
        output    SKIP_ADD_MCB_COUT,
        output    SKIP_DEL_LCB_MCB_COUT,
        output    SKIP_DEL_MCB_COUT,
        output    CTC_RD_FIFO_COUT,
        output    TFIFO_EN_BRIDGE_COUT,
        output    TFIFO_EN_PCS_TX_COUT,
        output    PLL_LOCK,
        output    REFCK2CORE,
        output    TSO_LS_OUT,
        output    REFCK_2NMQ,
        output    REFCK_2NPQ,
        input     REFCK_FRNMQ ,
        input     REFCK_FRNPQ,       
        input     MCB_CLK_FRNQ,
        input     HSST_RSTN ,
        input     PLL_REF_CLK,
        input     PLL_RSTN  ,
        input     PLLPOWERDOWN,
        input     QUAD_PWRUP ,
        input     SYNC_TOGGLE,
        input     TXCKDIV_DYNSEL
    );

}; // end of device HSST_INST


timing tnl of HSST_INST
{
     operator V_HSST V_HSST
        parameter map
        (
            /*******pcs_ch0*****/
            PCS_CH0_BYPASS_WORD_ALIGN         =>   PCS_CH0_BYPASS_WORD_ALIGN,
            PCS_CH0_BYPASS_DENC               =>   PCS_CH0_BYPASS_DENC,
            PCS_CH0_BYPASS_BONDING            =>   PCS_CH0_BYPASS_BONDING,
            PCS_CH0_BYPASS_CTC                =>   PCS_CH0_BYPASS_CTC,
            PCS_CH0_BYPASS_GEAR               =>   PCS_CH0_BYPASS_GEAR,
            PCS_CH0_BYPASS_BRIDGE             =>   PCS_CH0_BYPASS_BRIDGE,
            PCS_CH0_DATA_MODE                 =>   PCS_CH0_DATA_MODE,
            PCS_CH0_RX_POLARITY_INV           =>   PCS_CH0_RX_POLARITY_INV,
            PCS_CH0_ALIGN_MODE                =>   PCS_CH0_ALIGN_MODE,
            PCS_CH0_SAMP_16B                  =>   PCS_CH0_SAMP_16B,
            PCS_CH0_COMMA_REG0                =>   PCS_CH0_COMMA_REG0,
            PCS_CH0_COMMA_MASK                =>   PCS_CH0_COMMA_MASK,
            PCS_CH0_CEB_MODE                  =>   PCS_CH0_CEB_MODE,
            PCS_CH0_CTC_MODE                  =>   PCS_CH0_CTC_MODE,
            PCS_CH0_A_REG                     =>   PCS_CH0_A_REG,
            PCS_CH0_GE_AUTO_EN                =>   PCS_CH0_GE_AUTO_EN,
            PCS_CH0_SKIP_REG0                 =>   PCS_CH0_SKIP_REG0,
            PCS_CH0_SKIP_REG1                 =>   PCS_CH0_SKIP_REG1,
            PCS_CH0_SKIP_REG2                 =>   PCS_CH0_SKIP_REG2,
            PCS_CH0_SKIP_REG3                 =>   PCS_CH0_SKIP_REG3,
            PCS_CH0_DEC_DUAL                  =>   PCS_CH0_DEC_DUAL,
            PCS_CH0_SPLIT                     =>   PCS_CH0_SPLIT,
            PCS_CH0_FIFOFLAG_CTC              =>   PCS_CH0_FIFOFLAG_CTC,
            PCS_CH0_COMMA_DET_MODE            =>   PCS_CH0_COMMA_DET_MODE,
            PCS_CH0_ERRDETECT_SILENCE         =>   PCS_CH0_ERRDETECT_SILENCE,
            PCS_CH0_PMA_RCLK_POLINV           =>   PCS_CH0_PMA_RCLK_POLINV,
            PCS_CH0_PCS_RCLK_SEL              =>   PCS_CH0_PCS_RCLK_SEL,
            PCS_CH0_MCB_RCLK_POLINV           =>   PCS_CH0_MCB_RCLK_POLINV,
            PCS_CH0_CB_RCLK_SEL               =>   PCS_CH0_CB_RCLK_SEL,
            PCS_CH0_AFTER_CTC_RCLK_SEL        =>   PCS_CH0_AFTER_CTC_RCLK_SEL,
            PCS_CH0_RCLK_POLINV               =>   PCS_CH0_RCLK_POLINV,
            PCS_CH0_BRIDGE_RCLK_SEL           =>   PCS_CH0_BRIDGE_RCLK_SEL,
            PCS_CH0_PCS_RCLK_EN               =>   PCS_CH0_PCS_RCLK_EN,
            PCS_CH0_CB_RCLK_EN                =>   PCS_CH0_CB_RCLK_EN,
            PCS_CH0_AFTER_CTC_RCLK_EN         =>   PCS_CH0_AFTER_CTC_RCLK_EN,
            PCS_CH0_AFTER_CTC_RCLK_EN_GB      =>   PCS_CH0_AFTER_CTC_RCLK_EN_GB,
            PCS_CH0_BRIDGE_RCLK_EN            =>   PCS_CH0_BRIDGE_RCLK_EN,
            PCS_CH0_PCS_RX_RSTN               =>   PCS_CH0_PCS_RX_RSTN,
            PCS_CH0_SLAVE                     =>   PCS_CH0_SLAVE,
            PCS_CH0_PCS_CB_RSTN               =>   PCS_CH0_PCS_CB_RSTN,
            PCS_CH0_TX_BYPASS_BRIDGE_UINT     =>   PCS_CH0_TX_BYPASS_BRIDGE_UINT,
            PCS_CH0_TX_BYPASS_GEAR            =>   PCS_CH0_TX_BYPASS_GEAR,
            PCS_CH0_TX_BYPASS_ENC             =>   PCS_CH0_TX_BYPASS_ENC,
            PCS_CH0_TX_BYPASS_BIT_SLIP        =>   PCS_CH0_TX_BYPASS_BIT_SLIP,
            PCS_CH0_TX_GEAR_SPLIT             =>   PCS_CH0_TX_GEAR_SPLIT,
            PCS_CH0_TX_DRIVE_REG_MODE         =>   PCS_CH0_TX_DRIVE_REG_MODE,
            PCS_CH0_TX_BIT_SLIP_CYCLES        =>   PCS_CH0_TX_BIT_SLIP_CYCLES,
            PCS_CH0_INT_TX_MASK_0             =>   PCS_CH0_INT_TX_MASK_0,
            PCS_CH0_INT_TX_MASK_1             =>   PCS_CH0_INT_TX_MASK_1,
            PCS_CH0_INT_TX_MASK_2             =>   PCS_CH0_INT_TX_MASK_2,
            PCS_CH0_INT_TX_CLR_0              =>   PCS_CH0_INT_TX_CLR_0,
            PCS_CH0_INT_TX_CLR_1              =>   PCS_CH0_INT_TX_CLR_1,
            PCS_CH0_INT_TX_CLR_2              =>   PCS_CH0_INT_TX_CLR_2,
            PCS_CH0_TX_PMA_TCLK_POLINV        =>   PCS_CH0_TX_PMA_TCLK_POLINV,
            PCS_CH0_TX_PCS_CLK_EN_SEL         =>   PCS_CH0_TX_PCS_CLK_EN_SEL,
            PCS_CH0_TX_BRIDGE_TCLK_SEL        =>   PCS_CH0_TX_BRIDGE_TCLK_SEL,
            PCS_CH0_TX_TCLK_POLINV            =>   PCS_CH0_TX_TCLK_POLINV,
            PCS_CH0_TX_PCS_TX_RSTN            =>   PCS_CH0_TX_PCS_TX_RSTN,
            PCS_CH0_TX_SLAVE                  =>   PCS_CH0_TX_SLAVE,
            PCS_CH0_TX_BRIDGE_CLK_EN_SEL      =>   PCS_CH0_TX_BRIDGE_CLK_EN_SEL,
            PCS_CH0_DATA_WIDTH_MODE           =>   PCS_CH0_DATA_WIDTH_MODE,
            PCS_CH0_TX_TCLK2FABRIC_SEL        =>   PCS_CH0_TX_TCLK2FABRIC_SEL,
            PCS_CH0_TX_OUTZZ                  =>   PCS_CH0_TX_OUTZZ,
            PCS_CH0_ENC_DUAL                  =>   PCS_CH0_ENC_DUAL,
            PCS_CH0_TX_BITSLIP_DATA_MODE      =>   PCS_CH0_TX_BITSLIP_DATA_MODE,
            PCS_CH0_COMMA_REG1                =>   PCS_CH0_COMMA_REG1,
            PCS_CH0_RAPID_IMAX                =>   PCS_CH0_RAPID_IMAX,
            PCS_CH0_RAPID_VMIN_1              =>   PCS_CH0_RAPID_VMIN_1,
            PCS_CH0_RAPID_VMIN_2              =>   PCS_CH0_RAPID_VMIN_2,
            PCS_CH0_RX_PRBS_MODE              =>   PCS_CH0_RX_PRBS_MODE,
            PCS_CH0_RX_ERRCNT_CLR             =>   PCS_CH0_RX_ERRCNT_CLR,
            PCS_CH0_TX_PRBS_MODE              =>   PCS_CH0_TX_PRBS_MODE,
            PCS_CH0_TX_INSERT_ER              =>   PCS_CH0_TX_INSERT_ER,
            PCS_CH0_ENABLE_PRBS_GEN           =>   PCS_CH0_ENABLE_PRBS_GEN,
            PCS_CH0_ERR_CNT                   =>   PCS_CH0_ERR_CNT,
            PCS_CH0_DEFAULT_RADDR             =>   PCS_CH0_DEFAULT_RADDR,
            PCS_CH0_MASTER_CHECK_OFFSET       =>   PCS_CH0_MASTER_CHECK_OFFSET,
            PCS_CH0_DELAY_SET                 =>   PCS_CH0_DELAY_SET,
            PCS_CH0_SEACH_OFFSET              =>   PCS_CH0_SEACH_OFFSET,
            PCS_CH0_CEB_RAPIDLS_MMAX          =>   PCS_CH0_CEB_RAPIDLS_MMAX,
            PCS_CH0_CTC_AFULL                 =>   PCS_CH0_CTC_AFULL,
            PCS_CH0_CTC_AEMPTY                =>   PCS_CH0_CTC_AEMPTY,
            PCS_CH0_FAR_LOOP                  =>   PCS_CH0_FAR_LOOP,
            PCS_CH0_NEAR_LOOP                 =>   PCS_CH0_NEAR_LOOP,
            PCS_CH0_INT_RX_MASK_0             =>   PCS_CH0_INT_RX_MASK_0,
            PCS_CH0_INT_RX_MASK_1             =>   PCS_CH0_INT_RX_MASK_1,
            PCS_CH0_INT_RX_MASK_2             =>   PCS_CH0_INT_RX_MASK_2,
            PCS_CH0_INT_RX_MASK_3             =>   PCS_CH0_INT_RX_MASK_3,
            PCS_CH0_INT_RX_MASK_4             =>   PCS_CH0_INT_RX_MASK_4,
            PCS_CH0_INT_RX_MASK_5             =>   PCS_CH0_INT_RX_MASK_5,
            PCS_CH0_INT_RX_MASK_6             =>   PCS_CH0_INT_RX_MASK_6,
            PCS_CH0_INT_RX_MASK_7             =>   PCS_CH0_INT_RX_MASK_7,
            PCS_CH0_INT_RX_CLR_0              =>   PCS_CH0_INT_RX_CLR_0,
            PCS_CH0_INT_RX_CLR_1              =>   PCS_CH0_INT_RX_CLR_1,
            PCS_CH0_INT_RX_CLR_2              =>   PCS_CH0_INT_RX_CLR_2,
            PCS_CH0_INT_RX_CLR_3              =>   PCS_CH0_INT_RX_CLR_3,
            PCS_CH0_INT_RX_CLR_4              =>   PCS_CH0_INT_RX_CLR_4,
            PCS_CH0_INT_RX_CLR_5              =>   PCS_CH0_INT_RX_CLR_5,
            PCS_CH0_INT_RX_CLR_6              =>   PCS_CH0_INT_RX_CLR_6,
            PCS_CH0_INT_RX_CLR_7              =>   PCS_CH0_INT_RX_CLR_7,
            
            /*******pcs_ch1*******/
            PCS_CH1_BYPASS_WORD_ALIGN         =>   PCS_CH1_BYPASS_WORD_ALIGN,
            PCS_CH1_BYPASS_DENC               =>   PCS_CH1_BYPASS_DENC,
            PCS_CH1_BYPASS_BONDING            =>   PCS_CH1_BYPASS_BONDING,
            PCS_CH1_BYPASS_CTC                =>   PCS_CH1_BYPASS_CTC,
            PCS_CH1_BYPASS_GEAR               =>   PCS_CH1_BYPASS_GEAR,
            PCS_CH1_BYPASS_BRIDGE             =>   PCS_CH1_BYPASS_BRIDGE,
            PCS_CH1_DATA_MODE                 =>   PCS_CH1_DATA_MODE,
            PCS_CH1_RX_POLARITY_INV           =>   PCS_CH1_RX_POLARITY_INV,
            PCS_CH1_ALIGN_MODE                =>   PCS_CH1_ALIGN_MODE,
            PCS_CH1_SAMP_16B                  =>   PCS_CH1_SAMP_16B,
            PCS_CH1_COMMA_REG0                =>   PCS_CH1_COMMA_REG0,
            PCS_CH1_COMMA_MASK                =>   PCS_CH1_COMMA_MASK,
            PCS_CH1_CEB_MODE                  =>   PCS_CH1_CEB_MODE,
            PCS_CH1_CTC_MODE                  =>   PCS_CH1_CTC_MODE,
            PCS_CH1_A_REG                     =>   PCS_CH1_A_REG,
            PCS_CH1_GE_AUTO_EN                =>   PCS_CH1_GE_AUTO_EN,
            PCS_CH1_SKIP_REG0                 =>   PCS_CH1_SKIP_REG0,
            PCS_CH1_SKIP_REG1                 =>   PCS_CH1_SKIP_REG1,
            PCS_CH1_SKIP_REG2                 =>   PCS_CH1_SKIP_REG2,
            PCS_CH1_SKIP_REG3                 =>   PCS_CH1_SKIP_REG3,
            PCS_CH1_DEC_DUAL                  =>   PCS_CH1_DEC_DUAL,
            PCS_CH1_SPLIT                     =>   PCS_CH1_SPLIT,
            PCS_CH1_FIFOFLAG_CTC              =>   PCS_CH1_FIFOFLAG_CTC,
            PCS_CH1_COMMA_DET_MODE            =>   PCS_CH1_COMMA_DET_MODE,
            PCS_CH1_ERRDETECT_SILENCE         =>   PCS_CH1_ERRDETECT_SILENCE,
            PCS_CH1_PMA_RCLK_POLINV           =>   PCS_CH1_PMA_RCLK_POLINV,
            PCS_CH1_PCS_RCLK_SEL              =>   PCS_CH1_PCS_RCLK_SEL,
            PCS_CH1_MCB_RCLK_POLINV           =>   PCS_CH1_MCB_RCLK_POLINV,
            PCS_CH1_CB_RCLK_SEL               =>   PCS_CH1_CB_RCLK_SEL,
            PCS_CH1_AFTER_CTC_RCLK_SEL        =>   PCS_CH1_AFTER_CTC_RCLK_SEL,
            PCS_CH1_RCLK_POLINV               =>   PCS_CH1_RCLK_POLINV,
            PCS_CH1_BRIDGE_RCLK_SEL           =>   PCS_CH1_BRIDGE_RCLK_SEL,
            PCS_CH1_PCS_RCLK_EN               =>   PCS_CH1_PCS_RCLK_EN,
            PCS_CH1_CB_RCLK_EN                =>   PCS_CH1_CB_RCLK_EN,
            PCS_CH1_AFTER_CTC_RCLK_EN         =>   PCS_CH1_AFTER_CTC_RCLK_EN,
            PCS_CH1_AFTER_CTC_RCLK_EN_GB      =>   PCS_CH1_AFTER_CTC_RCLK_EN_GB,
            PCS_CH1_BRIDGE_RCLK_EN            =>   PCS_CH1_BRIDGE_RCLK_EN,
            PCS_CH1_PCS_RX_RSTN               =>   PCS_CH1_PCS_RX_RSTN,
            PCS_CH1_SLAVE                     =>   PCS_CH1_SLAVE,
            PCS_CH1_PCS_CB_RSTN               =>   PCS_CH1_PCS_CB_RSTN,
            PCS_CH1_TX_BYPASS_BRIDGE_UINT     =>   PCS_CH1_TX_BYPASS_BRIDGE_UINT,
            PCS_CH1_TX_BYPASS_GEAR            =>   PCS_CH1_TX_BYPASS_GEAR,
            PCS_CH1_TX_BYPASS_ENC             =>   PCS_CH1_TX_BYPASS_ENC,
            PCS_CH1_TX_BYPASS_BIT_SLIP        =>   PCS_CH1_TX_BYPASS_BIT_SLIP,
            PCS_CH1_TX_GEAR_SPLIT             =>   PCS_CH1_TX_GEAR_SPLIT,
            PCS_CH1_TX_DRIVE_REG_MODE         =>   PCS_CH1_TX_DRIVE_REG_MODE,
            PCS_CH1_TX_BIT_SLIP_CYCLES        =>   PCS_CH1_TX_BIT_SLIP_CYCLES,
            PCS_CH1_INT_TX_MASK_0             =>   PCS_CH1_INT_TX_MASK_0,
            PCS_CH1_INT_TX_MASK_1             =>   PCS_CH1_INT_TX_MASK_1,
            PCS_CH1_INT_TX_MASK_2             =>   PCS_CH1_INT_TX_MASK_2,
            PCS_CH1_INT_TX_CLR_0              =>   PCS_CH1_INT_TX_CLR_0,
            PCS_CH1_INT_TX_CLR_1              =>   PCS_CH1_INT_TX_CLR_1,
            PCS_CH1_INT_TX_CLR_2              =>   PCS_CH1_INT_TX_CLR_2,
            PCS_CH1_TX_PMA_TCLK_POLINV        =>   PCS_CH1_TX_PMA_TCLK_POLINV,
            PCS_CH1_TX_PCS_CLK_EN_SEL         =>   PCS_CH1_TX_PCS_CLK_EN_SEL,
            PCS_CH1_TX_BRIDGE_TCLK_SEL        =>   PCS_CH1_TX_BRIDGE_TCLK_SEL,
            PCS_CH1_TX_TCLK_POLINV            =>   PCS_CH1_TX_TCLK_POLINV,
            PCS_CH1_TX_PCS_TX_RSTN            =>   PCS_CH1_TX_PCS_TX_RSTN,
            PCS_CH1_TX_SLAVE                  =>   PCS_CH1_TX_SLAVE,
            PCS_CH1_TX_BRIDGE_CLK_EN_SEL      =>   PCS_CH1_TX_BRIDGE_CLK_EN_SEL,
            PCS_CH1_DATA_WIDTH_MODE           =>   PCS_CH1_DATA_WIDTH_MODE,
            PCS_CH1_TX_TCLK2FABRIC_SEL        =>   PCS_CH1_TX_TCLK2FABRIC_SEL,
            PCS_CH1_TX_OUTZZ                  =>   PCS_CH1_TX_OUTZZ,
            PCS_CH1_ENC_DUAL                  =>   PCS_CH1_ENC_DUAL,
            PCS_CH1_TX_BITSLIP_DATA_MODE      =>   PCS_CH1_TX_BITSLIP_DATA_MODE,
            PCS_CH1_COMMA_REG1                =>   PCS_CH1_COMMA_REG1,
            PCS_CH1_RAPID_IMAX                =>   PCS_CH1_RAPID_IMAX,
            PCS_CH1_RAPID_VMIN_1              =>   PCS_CH1_RAPID_VMIN_1,
            PCS_CH1_RAPID_VMIN_2              =>   PCS_CH1_RAPID_VMIN_2,
            PCS_CH1_RX_PRBS_MODE              =>   PCS_CH1_RX_PRBS_MODE,
            PCS_CH1_RX_ERRCNT_CLR             =>   PCS_CH1_RX_ERRCNT_CLR,
            PCS_CH1_TX_PRBS_MODE              =>   PCS_CH1_TX_PRBS_MODE,
            PCS_CH1_TX_INSERT_ER              =>   PCS_CH1_TX_INSERT_ER,
            PCS_CH1_ENABLE_PRBS_GEN           =>   PCS_CH1_ENABLE_PRBS_GEN,
            PCS_CH1_ERR_CNT                   =>   PCS_CH1_ERR_CNT,
            PCS_CH1_DEFAULT_RADDR             =>   PCS_CH1_DEFAULT_RADDR,
            PCS_CH1_MASTER_CHECK_OFFSET       =>   PCS_CH1_MASTER_CHECK_OFFSET,
            PCS_CH1_DELAY_SET                 =>   PCS_CH1_DELAY_SET,
            PCS_CH1_SEACH_OFFSET              =>   PCS_CH1_SEACH_OFFSET,
            PCS_CH1_CEB_RAPIDLS_MMAX          =>   PCS_CH1_CEB_RAPIDLS_MMAX,
            PCS_CH1_CTC_AFULL                 =>   PCS_CH1_CTC_AFULL,
            PCS_CH1_CTC_AEMPTY                =>   PCS_CH1_CTC_AEMPTY,
            PCS_CH1_FAR_LOOP                  =>   PCS_CH1_FAR_LOOP,
            PCS_CH1_NEAR_LOOP                 =>   PCS_CH1_NEAR_LOOP,
            PCS_CH1_INT_RX_MASK_0             =>   PCS_CH1_INT_RX_MASK_0,
            PCS_CH1_INT_RX_MASK_1             =>   PCS_CH1_INT_RX_MASK_1,
            PCS_CH1_INT_RX_MASK_2             =>   PCS_CH1_INT_RX_MASK_2,
            PCS_CH1_INT_RX_MASK_3             =>   PCS_CH1_INT_RX_MASK_3,
            PCS_CH1_INT_RX_MASK_4             =>   PCS_CH1_INT_RX_MASK_4,
            PCS_CH1_INT_RX_MASK_5             =>   PCS_CH1_INT_RX_MASK_5,
            PCS_CH1_INT_RX_MASK_6             =>   PCS_CH1_INT_RX_MASK_6,
            PCS_CH1_INT_RX_MASK_7             =>   PCS_CH1_INT_RX_MASK_7,
            PCS_CH1_INT_RX_CLR_0              =>   PCS_CH1_INT_RX_CLR_0,
            PCS_CH1_INT_RX_CLR_1              =>   PCS_CH1_INT_RX_CLR_1,
            PCS_CH1_INT_RX_CLR_2              =>   PCS_CH1_INT_RX_CLR_2,
            PCS_CH1_INT_RX_CLR_3              =>   PCS_CH1_INT_RX_CLR_3,
            PCS_CH1_INT_RX_CLR_4              =>   PCS_CH1_INT_RX_CLR_4,
            PCS_CH1_INT_RX_CLR_5              =>   PCS_CH1_INT_RX_CLR_5,
            PCS_CH1_INT_RX_CLR_6              =>   PCS_CH1_INT_RX_CLR_6,
            PCS_CH1_INT_RX_CLR_7              =>   PCS_CH1_INT_RX_CLR_7,
            
            /******pcs_ch2*******/
            PCS_CH2_BYPASS_WORD_ALIGN         =>   PCS_CH2_BYPASS_WORD_ALIGN,
            PCS_CH2_BYPASS_DENC               =>   PCS_CH2_BYPASS_DENC,
            PCS_CH2_BYPASS_BONDING            =>   PCS_CH2_BYPASS_BONDING,
            PCS_CH2_BYPASS_CTC                =>   PCS_CH2_BYPASS_CTC,
            PCS_CH2_BYPASS_GEAR               =>   PCS_CH2_BYPASS_GEAR,
            PCS_CH2_BYPASS_BRIDGE             =>   PCS_CH2_BYPASS_BRIDGE,
            PCS_CH2_DATA_MODE                 =>   PCS_CH2_DATA_MODE,
            PCS_CH2_RX_POLARITY_INV           =>   PCS_CH2_RX_POLARITY_INV,
            PCS_CH2_ALIGN_MODE                =>   PCS_CH2_ALIGN_MODE,
            PCS_CH2_SAMP_16B                  =>   PCS_CH2_SAMP_16B,
            PCS_CH2_COMMA_REG0                =>   PCS_CH2_COMMA_REG0,
            PCS_CH2_COMMA_MASK                =>   PCS_CH2_COMMA_MASK,
            PCS_CH2_CEB_MODE                  =>   PCS_CH2_CEB_MODE,
            PCS_CH2_CTC_MODE                  =>   PCS_CH2_CTC_MODE,
            PCS_CH2_A_REG                     =>   PCS_CH2_A_REG,
            PCS_CH2_GE_AUTO_EN                =>   PCS_CH2_GE_AUTO_EN,
            PCS_CH2_SKIP_REG0                 =>   PCS_CH2_SKIP_REG0,
            PCS_CH2_SKIP_REG1                 =>   PCS_CH2_SKIP_REG1,
            PCS_CH2_SKIP_REG2                 =>   PCS_CH2_SKIP_REG2,
            PCS_CH2_SKIP_REG3                 =>   PCS_CH2_SKIP_REG3,
            PCS_CH2_DEC_DUAL                  =>   PCS_CH2_DEC_DUAL,
            PCS_CH2_SPLIT                     =>   PCS_CH2_SPLIT,
            PCS_CH2_FIFOFLAG_CTC              =>   PCS_CH2_FIFOFLAG_CTC,
            PCS_CH2_COMMA_DET_MODE            =>   PCS_CH2_COMMA_DET_MODE,
            PCS_CH2_ERRDETECT_SILENCE         =>   PCS_CH2_ERRDETECT_SILENCE,
            PCS_CH2_PMA_RCLK_POLINV           =>   PCS_CH2_PMA_RCLK_POLINV,
            PCS_CH2_PCS_RCLK_SEL              =>   PCS_CH2_PCS_RCLK_SEL,
            PCS_CH2_MCB_RCLK_POLINV           =>   PCS_CH2_MCB_RCLK_POLINV,
            PCS_CH2_CB_RCLK_SEL               =>   PCS_CH2_CB_RCLK_SEL,
            PCS_CH2_AFTER_CTC_RCLK_SEL        =>   PCS_CH2_AFTER_CTC_RCLK_SEL,
            PCS_CH2_RCLK_POLINV               =>   PCS_CH2_RCLK_POLINV,
            PCS_CH2_BRIDGE_RCLK_SEL           =>   PCS_CH2_BRIDGE_RCLK_SEL,
            PCS_CH2_PCS_RCLK_EN               =>   PCS_CH2_PCS_RCLK_EN,
            PCS_CH2_CB_RCLK_EN                =>   PCS_CH2_CB_RCLK_EN,
            PCS_CH2_AFTER_CTC_RCLK_EN         =>   PCS_CH2_AFTER_CTC_RCLK_EN,
            PCS_CH2_AFTER_CTC_RCLK_EN_GB      =>   PCS_CH2_AFTER_CTC_RCLK_EN_GB,
            PCS_CH2_BRIDGE_RCLK_EN            =>   PCS_CH2_BRIDGE_RCLK_EN,
            PCS_CH2_PCS_RX_RSTN               =>   PCS_CH2_PCS_RX_RSTN,
            PCS_CH2_SLAVE                     =>   PCS_CH2_SLAVE,
            PCS_CH2_PCS_CB_RSTN               =>   PCS_CH2_PCS_CB_RSTN,
            PCS_CH2_TX_BYPASS_BRIDGE_UINT     =>   PCS_CH2_TX_BYPASS_BRIDGE_UINT,
            PCS_CH2_TX_BYPASS_GEAR            =>   PCS_CH2_TX_BYPASS_GEAR,
            PCS_CH2_TX_BYPASS_ENC             =>   PCS_CH2_TX_BYPASS_ENC,
            PCS_CH2_TX_BYPASS_BIT_SLIP        =>   PCS_CH2_TX_BYPASS_BIT_SLIP,
            PCS_CH2_TX_GEAR_SPLIT             =>   PCS_CH2_TX_GEAR_SPLIT,
            PCS_CH2_TX_DRIVE_REG_MODE         =>   PCS_CH2_TX_DRIVE_REG_MODE,
            PCS_CH2_TX_BIT_SLIP_CYCLES        =>   PCS_CH2_TX_BIT_SLIP_CYCLES,
            PCS_CH2_INT_TX_MASK_0             =>   PCS_CH2_INT_TX_MASK_0,
            PCS_CH2_INT_TX_MASK_1             =>   PCS_CH2_INT_TX_MASK_1,
            PCS_CH2_INT_TX_MASK_2             =>   PCS_CH2_INT_TX_MASK_2,
            PCS_CH2_INT_TX_CLR_0              =>   PCS_CH2_INT_TX_CLR_0,
            PCS_CH2_INT_TX_CLR_1              =>   PCS_CH2_INT_TX_CLR_1,
            PCS_CH2_INT_TX_CLR_2              =>   PCS_CH2_INT_TX_CLR_2,
            PCS_CH2_TX_PMA_TCLK_POLINV        =>   PCS_CH2_TX_PMA_TCLK_POLINV,
            PCS_CH2_TX_PCS_CLK_EN_SEL         =>   PCS_CH2_TX_PCS_CLK_EN_SEL,
            PCS_CH2_TX_BRIDGE_TCLK_SEL        =>   PCS_CH2_TX_BRIDGE_TCLK_SEL,
            PCS_CH2_TX_TCLK_POLINV            =>   PCS_CH2_TX_TCLK_POLINV,
            PCS_CH2_TX_PCS_TX_RSTN            =>   PCS_CH2_TX_PCS_TX_RSTN,
            PCS_CH2_TX_SLAVE                  =>   PCS_CH2_TX_SLAVE,
            PCS_CH2_TX_BRIDGE_CLK_EN_SEL      =>   PCS_CH2_TX_BRIDGE_CLK_EN_SEL,
            PCS_CH2_DATA_WIDTH_MODE           =>   PCS_CH2_DATA_WIDTH_MODE,
            PCS_CH2_TX_TCLK2FABRIC_SEL        =>   PCS_CH2_TX_TCLK2FABRIC_SEL,
            PCS_CH2_TX_OUTZZ                  =>   PCS_CH2_TX_OUTZZ,
            PCS_CH2_ENC_DUAL                  =>   PCS_CH2_ENC_DUAL,
            PCS_CH2_TX_BITSLIP_DATA_MODE      =>   PCS_CH2_TX_BITSLIP_DATA_MODE,
            PCS_CH2_COMMA_REG1                =>   PCS_CH2_COMMA_REG1,
            PCS_CH2_RAPID_IMAX                =>   PCS_CH2_RAPID_IMAX,
            PCS_CH2_RAPID_VMIN_1              =>   PCS_CH2_RAPID_VMIN_1,
            PCS_CH2_RAPID_VMIN_2              =>   PCS_CH2_RAPID_VMIN_2,
            PCS_CH2_RX_PRBS_MODE              =>   PCS_CH2_RX_PRBS_MODE,
            PCS_CH2_RX_ERRCNT_CLR             =>   PCS_CH2_RX_ERRCNT_CLR,
            PCS_CH2_TX_PRBS_MODE              =>   PCS_CH2_TX_PRBS_MODE,
            PCS_CH2_TX_INSERT_ER              =>   PCS_CH2_TX_INSERT_ER,
            PCS_CH2_ENABLE_PRBS_GEN           =>   PCS_CH2_ENABLE_PRBS_GEN,
            PCS_CH2_ERR_CNT                   =>   PCS_CH2_ERR_CNT,
            PCS_CH2_DEFAULT_RADDR             =>   PCS_CH2_DEFAULT_RADDR,
            PCS_CH2_MASTER_CHECK_OFFSET       =>   PCS_CH2_MASTER_CHECK_OFFSET,
            PCS_CH2_DELAY_SET                 =>   PCS_CH2_DELAY_SET,
            PCS_CH2_SEACH_OFFSET              =>   PCS_CH2_SEACH_OFFSET,
            PCS_CH2_CEB_RAPIDLS_MMAX          =>   PCS_CH2_CEB_RAPIDLS_MMAX,
            PCS_CH2_CTC_AFULL                 =>   PCS_CH2_CTC_AFULL,
            PCS_CH2_CTC_AEMPTY                =>   PCS_CH2_CTC_AEMPTY,
            PCS_CH2_FAR_LOOP                  =>   PCS_CH2_FAR_LOOP,
            PCS_CH2_NEAR_LOOP                 =>   PCS_CH2_NEAR_LOOP,
            PCS_CH2_INT_RX_MASK_0             =>   PCS_CH2_INT_RX_MASK_0,
            PCS_CH2_INT_RX_MASK_1             =>   PCS_CH2_INT_RX_MASK_1,
            PCS_CH2_INT_RX_MASK_2             =>   PCS_CH2_INT_RX_MASK_2,
            PCS_CH2_INT_RX_MASK_3             =>   PCS_CH2_INT_RX_MASK_3,
            PCS_CH2_INT_RX_MASK_4             =>   PCS_CH2_INT_RX_MASK_4,
            PCS_CH2_INT_RX_MASK_5             =>   PCS_CH2_INT_RX_MASK_5,
            PCS_CH2_INT_RX_MASK_6             =>   PCS_CH2_INT_RX_MASK_6,
            PCS_CH2_INT_RX_MASK_7             =>   PCS_CH2_INT_RX_MASK_7,
            PCS_CH2_INT_RX_CLR_0              =>   PCS_CH2_INT_RX_CLR_0,
            PCS_CH2_INT_RX_CLR_1              =>   PCS_CH2_INT_RX_CLR_1,
            PCS_CH2_INT_RX_CLR_2              =>   PCS_CH2_INT_RX_CLR_2,
            PCS_CH2_INT_RX_CLR_3              =>   PCS_CH2_INT_RX_CLR_3,
            PCS_CH2_INT_RX_CLR_4              =>   PCS_CH2_INT_RX_CLR_4,
            PCS_CH2_INT_RX_CLR_5              =>   PCS_CH2_INT_RX_CLR_5,
            PCS_CH2_INT_RX_CLR_6              =>   PCS_CH2_INT_RX_CLR_6,
            PCS_CH2_INT_RX_CLR_7              =>   PCS_CH2_INT_RX_CLR_7,
            
            /*******pcs_ch3*******/
            PCS_CH3_BYPASS_WORD_ALIGN         =>   PCS_CH3_BYPASS_WORD_ALIGN,
            PCS_CH3_BYPASS_DENC               =>   PCS_CH3_BYPASS_DENC,
            PCS_CH3_BYPASS_BONDING            =>   PCS_CH3_BYPASS_BONDING,
            PCS_CH3_BYPASS_CTC                =>   PCS_CH3_BYPASS_CTC,
            PCS_CH3_BYPASS_GEAR               =>   PCS_CH3_BYPASS_GEAR,
            PCS_CH3_BYPASS_BRIDGE             =>   PCS_CH3_BYPASS_BRIDGE,
            PCS_CH3_DATA_MODE                 =>   PCS_CH3_DATA_MODE,
            PCS_CH3_RX_POLARITY_INV           =>   PCS_CH3_RX_POLARITY_INV,
            PCS_CH3_ALIGN_MODE                =>   PCS_CH3_ALIGN_MODE,
            PCS_CH3_SAMP_16B                  =>   PCS_CH3_SAMP_16B,
            PCS_CH3_COMMA_REG0                =>   PCS_CH3_COMMA_REG0,
            PCS_CH3_COMMA_MASK                =>   PCS_CH3_COMMA_MASK,
            PCS_CH3_CEB_MODE                  =>   PCS_CH3_CEB_MODE,
            PCS_CH3_CTC_MODE                  =>   PCS_CH3_CTC_MODE,
            PCS_CH3_A_REG                     =>   PCS_CH3_A_REG,
            PCS_CH3_GE_AUTO_EN                =>   PCS_CH3_GE_AUTO_EN,
            PCS_CH3_SKIP_REG0                 =>   PCS_CH3_SKIP_REG0,
            PCS_CH3_SKIP_REG1                 =>   PCS_CH3_SKIP_REG1,
            PCS_CH3_SKIP_REG2                 =>   PCS_CH3_SKIP_REG2,
            PCS_CH3_SKIP_REG3                 =>   PCS_CH3_SKIP_REG3,
            PCS_CH3_DEC_DUAL                  =>   PCS_CH3_DEC_DUAL,
            PCS_CH3_SPLIT                     =>   PCS_CH3_SPLIT,
            PCS_CH3_FIFOFLAG_CTC              =>   PCS_CH3_FIFOFLAG_CTC,
            PCS_CH3_COMMA_DET_MODE            =>   PCS_CH3_COMMA_DET_MODE,
            PCS_CH3_ERRDETECT_SILENCE         =>   PCS_CH3_ERRDETECT_SILENCE,
            PCS_CH3_PMA_RCLK_POLINV           =>   PCS_CH3_PMA_RCLK_POLINV,
            PCS_CH3_PCS_RCLK_SEL              =>   PCS_CH3_PCS_RCLK_SEL,
            PCS_CH3_MCB_RCLK_POLINV           =>   PCS_CH3_MCB_RCLK_POLINV,
            PCS_CH3_CB_RCLK_SEL               =>   PCS_CH3_CB_RCLK_SEL,
            PCS_CH3_AFTER_CTC_RCLK_SEL        =>   PCS_CH3_AFTER_CTC_RCLK_SEL,
            PCS_CH3_RCLK_POLINV               =>   PCS_CH3_RCLK_POLINV,
            PCS_CH3_BRIDGE_RCLK_SEL           =>   PCS_CH3_BRIDGE_RCLK_SEL,
            PCS_CH3_PCS_RCLK_EN               =>   PCS_CH3_PCS_RCLK_EN,
            PCS_CH3_CB_RCLK_EN                =>   PCS_CH3_CB_RCLK_EN,
            PCS_CH3_AFTER_CTC_RCLK_EN         =>   PCS_CH3_AFTER_CTC_RCLK_EN,
            PCS_CH3_AFTER_CTC_RCLK_EN_GB      =>   PCS_CH3_AFTER_CTC_RCLK_EN_GB,
            PCS_CH3_BRIDGE_RCLK_EN            =>   PCS_CH3_BRIDGE_RCLK_EN,
            PCS_CH3_PCS_RX_RSTN               =>   PCS_CH3_PCS_RX_RSTN,
            PCS_CH3_SLAVE                     =>   PCS_CH3_SLAVE,
            PCS_CH3_PCS_CB_RSTN               =>   PCS_CH3_PCS_CB_RSTN,
            PCS_CH3_TX_BYPASS_BRIDGE_UINT     =>   PCS_CH3_TX_BYPASS_BRIDGE_UINT,
            PCS_CH3_TX_BYPASS_GEAR            =>   PCS_CH3_TX_BYPASS_GEAR,
            PCS_CH3_TX_BYPASS_ENC             =>   PCS_CH3_TX_BYPASS_ENC,
            PCS_CH3_TX_BYPASS_BIT_SLIP        =>   PCS_CH3_TX_BYPASS_BIT_SLIP,
            PCS_CH3_TX_GEAR_SPLIT             =>   PCS_CH3_TX_GEAR_SPLIT,
            PCS_CH3_TX_DRIVE_REG_MODE         =>   PCS_CH3_TX_DRIVE_REG_MODE,
            PCS_CH3_TX_BIT_SLIP_CYCLES        =>   PCS_CH3_TX_BIT_SLIP_CYCLES,
            PCS_CH3_INT_TX_MASK_0             =>   PCS_CH3_INT_TX_MASK_0,
            PCS_CH3_INT_TX_MASK_1             =>   PCS_CH3_INT_TX_MASK_1,
            PCS_CH3_INT_TX_MASK_2             =>   PCS_CH3_INT_TX_MASK_2,
            PCS_CH3_INT_TX_CLR_0              =>   PCS_CH3_INT_TX_CLR_0,
            PCS_CH3_INT_TX_CLR_1              =>   PCS_CH3_INT_TX_CLR_1,
            PCS_CH3_INT_TX_CLR_2              =>   PCS_CH3_INT_TX_CLR_2,
            PCS_CH3_TX_PMA_TCLK_POLINV        =>   PCS_CH3_TX_PMA_TCLK_POLINV,
            PCS_CH3_TX_PCS_CLK_EN_SEL         =>   PCS_CH3_TX_PCS_CLK_EN_SEL,
            PCS_CH3_TX_BRIDGE_TCLK_SEL        =>   PCS_CH3_TX_BRIDGE_TCLK_SEL,
            PCS_CH3_TX_TCLK_POLINV            =>   PCS_CH3_TX_TCLK_POLINV,
            PCS_CH3_TX_PCS_TX_RSTN            =>   PCS_CH3_TX_PCS_TX_RSTN,
            PCS_CH3_TX_SLAVE                  =>   PCS_CH3_TX_SLAVE,
            PCS_CH3_TX_BRIDGE_CLK_EN_SEL      =>   PCS_CH3_TX_BRIDGE_CLK_EN_SEL,
            PCS_CH3_DATA_WIDTH_MODE           =>   PCS_CH3_DATA_WIDTH_MODE,
            PCS_CH3_TX_TCLK2FABRIC_SEL        =>   PCS_CH3_TX_TCLK2FABRIC_SEL,
            PCS_CH3_TX_OUTZZ                  =>   PCS_CH3_TX_OUTZZ,
            PCS_CH3_ENC_DUAL                  =>   PCS_CH3_ENC_DUAL,
            PCS_CH3_TX_BITSLIP_DATA_MODE      =>   PCS_CH3_TX_BITSLIP_DATA_MODE,
            PCS_CH3_COMMA_REG1                =>   PCS_CH3_COMMA_REG1,
            PCS_CH3_RAPID_IMAX                =>   PCS_CH3_RAPID_IMAX,
            PCS_CH3_RAPID_VMIN_1              =>   PCS_CH3_RAPID_VMIN_1,
            PCS_CH3_RAPID_VMIN_2              =>   PCS_CH3_RAPID_VMIN_2,
            PCS_CH3_RX_PRBS_MODE              =>   PCS_CH3_RX_PRBS_MODE,
            PCS_CH3_RX_ERRCNT_CLR             =>   PCS_CH3_RX_ERRCNT_CLR,
            PCS_CH3_TX_PRBS_MODE              =>   PCS_CH3_TX_PRBS_MODE,
            PCS_CH3_TX_INSERT_ER              =>   PCS_CH3_TX_INSERT_ER,
            PCS_CH3_ENABLE_PRBS_GEN           =>   PCS_CH3_ENABLE_PRBS_GEN,
            PCS_CH3_ERR_CNT                   =>   PCS_CH3_ERR_CNT,
            PCS_CH3_DEFAULT_RADDR             =>   PCS_CH3_DEFAULT_RADDR,
            PCS_CH3_MASTER_CHECK_OFFSET       =>   PCS_CH3_MASTER_CHECK_OFFSET,
            PCS_CH3_DELAY_SET                 =>   PCS_CH3_DELAY_SET,
            PCS_CH3_SEACH_OFFSET              =>   PCS_CH3_SEACH_OFFSET,
            PCS_CH3_CEB_RAPIDLS_MMAX          =>   PCS_CH3_CEB_RAPIDLS_MMAX,
            PCS_CH3_CTC_AFULL                 =>   PCS_CH3_CTC_AFULL,
            PCS_CH3_CTC_AEMPTY                =>   PCS_CH3_CTC_AEMPTY,
            PCS_CH3_FAR_LOOP                  =>   PCS_CH3_FAR_LOOP,
            PCS_CH3_NEAR_LOOP                 =>   PCS_CH3_NEAR_LOOP,
            PCS_CH3_INT_RX_MASK_0             =>   PCS_CH3_INT_RX_MASK_0,
            PCS_CH3_INT_RX_MASK_1             =>   PCS_CH3_INT_RX_MASK_1,
            PCS_CH3_INT_RX_MASK_2             =>   PCS_CH3_INT_RX_MASK_2,
            PCS_CH3_INT_RX_MASK_3             =>   PCS_CH3_INT_RX_MASK_3,
            PCS_CH3_INT_RX_MASK_4             =>   PCS_CH3_INT_RX_MASK_4,
            PCS_CH3_INT_RX_MASK_5             =>   PCS_CH3_INT_RX_MASK_5,
            PCS_CH3_INT_RX_MASK_6             =>   PCS_CH3_INT_RX_MASK_6,
            PCS_CH3_INT_RX_MASK_7             =>   PCS_CH3_INT_RX_MASK_7,
            PCS_CH3_INT_RX_CLR_0              =>   PCS_CH3_INT_RX_CLR_0,
            PCS_CH3_INT_RX_CLR_1              =>   PCS_CH3_INT_RX_CLR_1,
            PCS_CH3_INT_RX_CLR_2              =>   PCS_CH3_INT_RX_CLR_2,
            PCS_CH3_INT_RX_CLR_3              =>   PCS_CH3_INT_RX_CLR_3,
            PCS_CH3_INT_RX_CLR_4              =>   PCS_CH3_INT_RX_CLR_4,
            PCS_CH3_INT_RX_CLR_5              =>   PCS_CH3_INT_RX_CLR_5,
            PCS_CH3_INT_RX_CLR_6              =>   PCS_CH3_INT_RX_CLR_6,
            PCS_CH3_INT_RX_CLR_7              =>   PCS_CH3_INT_RX_CLR_7,
            
            /*****pma_ch0******/
            PMA_CH0_TXDATA_WIDTH                            =>   PMA_CH0_TXDATA_WIDTH,                                                                        
            PMA_CH0_TX_TESTPATTERN                          =>   PMA_CH0_TX_TESTPATTERN,                                                                        
            PMA_CH0_TESTPATTERN_O_ENABLE                    =>   PMA_CH0_TESTPATTERN_O_ENABLE,
            PMA_CH0_DISABLE_BSMODE_DRVAMP                   =>   PMA_CH0_DISABLE_BSMODE_DRVAMP,                              
            PMA_CH0_FORCE_BIST_ENABLE                       =>   PMA_CH0_FORCE_BIST_ENABLE,   
            PMA_CH0_FORCE_ELECTRICAL_IDLE                   =>   PMA_CH0_FORCE_ELECTRICAL_IDLE,   
            PMA_CH0_FORCE_RXDCT_ENABLE                      =>   PMA_CH0_FORCE_RXDCT_ENABLE,                                     
            PMA_CH0_FORCE_EXTLB_ENABLE                      =>   PMA_CH0_FORCE_EXTLB_ENABLE,                                     
            PMA_CH0_DISABLE_LANE_SYNC                       =>   PMA_CH0_DISABLE_LANE_SYNC,                                     
            PMA_CH0_DISABLE_ELECTRICAL_IDLE                 =>   PMA_CH0_DISABLE_ELECTRICAL_IDLE,                                  
            PMA_CH0_DISABLE_RXDCT_ENABLE                    =>   PMA_CH0_DISABLE_RXDCT_ENABLE,                                  
            PMA_CH0_DISABLE_EXTLB_ENABLE                    =>   PMA_CH0_DISABLE_EXTLB_ENABLE,                                  
            PMA_CH0_DISABLE_LOW_SPEED_PATH_ENABLE           =>   PMA_CH0_DISABLE_LOW_SPEED_PATH_ENABLE,   
            PMA_CH0_FORCE_LANE_ENABLE                       =>   PMA_CH0_FORCE_LANE_ENABLE,   
            PMA_CH0_FORCE_LANE_RESETB_DISABLE               =>   PMA_CH0_FORCE_LANE_RESETB_DISABLE,   
            PMA_CH0_RXDCT_LGBW_ENABLE                       =>   PMA_CH0_RXDCT_LGBW_ENABLE,   
            PMA_CH0_RXDCT_VTH                               =>   PMA_CH0_RXDCT_VTH,   
            PMA_CH0_DE_EMPHASIS_ADDITIONAL_CONTROL          =>   PMA_CH0_DE_EMPHASIS_ADDITIONAL_CONTROL,   
            PMA_CH0_DRV_RTERM_CONTROL                       =>   PMA_CH0_DRV_RTERM_CONTROL,   
            PMA_CH0_FDRV_AMP_CONTROL                        =>   PMA_CH0_FDRV_AMP_CONTROL,                                          
            PMA_CH0_PREPC_AMP_CONTROL                       =>   PMA_CH0_PREPC_AMP_CONTROL,                                          
            PMA_CH0_PREMC_AMP_CONTROL                       =>   PMA_CH0_PREMC_AMP_CONTROL,                                          
            PMA_CH0_SER_AMP_CONTROL                         =>   PMA_CH0_SER_AMP_CONTROL,   
            PMA_CH0_PFD_LOOP_RESISTOR_SETTING               =>   PMA_CH0_PFD_LOOP_RESISTOR_SETTING,                                  
            PMA_CH0_PD_LOOP_RESISTOR_SETTING                =>   PMA_CH0_PD_LOOP_RESISTOR_SETTING,                                  
            PMA_CH0_CDR_TEST_OUT_SELECT                     =>   PMA_CH0_CDR_TEST_OUT_SELECT,   
            PMA_CH0_PI_DIV1_BP                              =>   PMA_CH0_PI_DIV1_BP,   
            PMA_CH0_PI_TEST_FOR_CKI                         =>   PMA_CH0_PI_TEST_FOR_CKI,   
            PMA_CH0_PI_CURRENT_SETTING                      =>   PMA_CH0_PI_CURRENT_SETTING,   
            PMA_CH0_PI_FREQUENCY_SETTING                    =>   PMA_CH0_PI_FREQUENCY_SETTING,   
            PMA_CH0_TEST_OUT_SELECT_FOR_RCK                 =>   PMA_CH0_TEST_OUT_SELECT_FOR_RCK,                                 
            PMA_CH0_TEST_OUT_SELECT_SOURCE                  =>   PMA_CH0_TEST_OUT_SELECT_SOURCE,                                 
            PMA_CH0_TEST_DATA_OUT_SELECT_SOURCE             =>   PMA_CH0_TEST_DATA_OUT_SELECT_SOURCE,   
            PMA_CH0_TEST_CK_OUT_SELECT_SOURCE               =>   PMA_CH0_TEST_CK_OUT_SELECT_SOURCE,                                             
            PMA_CH0_ENABLE_SLIP1UI_MODULE                   =>   PMA_CH0_ENABLE_SLIP1UI_MODULE,                                             
            PMA_CH0_PN_SWAP_ENABLE                          =>   PMA_CH0_PN_SWAP_ENABLE,         
            PMA_CH0_SIPO_BIT_SETTING                        =>   PMA_CH0_SIPO_BIT_SETTING,         
            PMA_CH0_OOB_EN                                  =>   PMA_CH0_OOB_EN,         
            PMA_CH0_ALOS_EN                                 =>   PMA_CH0_ALOS_EN,  
            PMA_CH0_LFMODE                                  =>   PMA_CH0_LFMODE,   
            PMA_CH0_TSO_HS_SEL                              =>   PMA_CH0_TSO_HS_SEL,   
            PMA_CH0_LX_SELLC                                =>   PMA_CH0_LX_SELLC,   
            PMA_CH0_LX_RXPLL_DIVSEL45_FB                    =>   PMA_CH0_LX_RXPLL_DIVSEL45_FB,   
            PMA_CH0_LX_RXPLL_DIVSEL_FB                      =>   PMA_CH0_LX_RXPLL_DIVSEL_FB,   
            PMA_CH0_LX_RXPLL_DIVSEL_REF                     =>   PMA_CH0_LX_RXPLL_DIVSEL_REF,   
            PMA_CH0_PICODE                                  =>   PMA_CH0_PICODE,   
            PMA_CH0_RX_REFCK_SEL                            =>   PMA_CH0_RX_REFCK_SEL,  
            PMA_CH0_PFDLPEN_REGISTER_CONTROL_ENABLE         =>   PMA_CH0_PFDLPEN_REGISTER_CONTROL_ENABLE,  
            PMA_CH0_PFDLPEN_REGISTER_SETTING                =>   PMA_CH0_PFDLPEN_REGISTER_SETTING,   
            PMA_CH0_PDLPEN_REGISTER_CONTROL_ENABLE          =>   PMA_CH0_PDLPEN_REGISTER_CONTROL_ENABLE,   
            PMA_CH0_PDLPEN_REGISTER_SETTING                 =>   PMA_CH0_PDLPEN_REGISTER_SETTING,   
            PMA_CH0_DIV_CHANGE_ENABLE_DELAY_TIMER           =>   PMA_CH0_DIV_CHANGE_ENABLE_DELAY_TIMER,   
            PMA_CH0_DIV_CHANGE_ENABLE_SIGNAL_GATING         =>   PMA_CH0_DIV_CHANGE_ENABLE_SIGNAL_GATING,   
            PMA_CH0_CDR_ALIGN_REGISTER_SETTING_VALUE        =>   PMA_CH0_CDR_ALIGN_REGISTER_SETTING_VALUE,   
            PMA_CH0_FORCE_CDR_ALIGN_ENABLE                  =>   PMA_CH0_FORCE_CDR_ALIGN_ENABLE,   
            PMA_CH0_SELLC_REGISTER_SETTING_VALUE            =>   PMA_CH0_SELLC_REGISTER_SETTING_VALUE,   
            PMA_CH0_SELLC_CONTROL_BY_REGISTER               =>   PMA_CH0_SELLC_CONTROL_BY_REGISTER,  
            PMA_CH0_REG_PLLI_LDO_VREF_SETTING               =>   PMA_CH0_REG_PLLI_LDO_VREF_SETTING,    
            PMA_CH0_REG_PLLI_LDO_BYPASS_CURRENT             =>   PMA_CH0_REG_PLLI_LDO_BYPASS_CURRENT,   
            PMA_CH0_REG_PLL_HSTEST_ENABLE                   =>   PMA_CH0_REG_PLL_HSTEST_ENABLE,   
            PMA_CH0_REG_PLL_ISNK_CURRENT_CONTROL            =>   PMA_CH0_REG_PLL_ISNK_CURRENT_CONTROL,   
            PMA_CH0_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING    =>   PMA_CH0_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING,  
            PMA_CH0_REG_PLL_PD_LOOP_PLLGM_SETTING           =>   PMA_CH0_REG_PLL_PD_LOOP_PLLGM_SETTING,   
            PMA_CH0_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING    =>   PMA_CH0_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING,   
            PMA_CH0_REG_PLL_CP0_BIAS_CONTROL                =>   PMA_CH0_REG_PLL_CP0_BIAS_CONTROL,    
            PMA_CH0_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING     =>   PMA_CH0_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING,   
            PMA_CH0_REG_PLL_CP1_BIAS_CONTROL                =>   PMA_CH0_REG_PLL_CP1_BIAS_CONTROL,    
            PMA_CH0_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING     =>   PMA_CH0_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING,   
            PMA_CH0_REG_PLL_CP0_CURRENT_SETTING             =>   PMA_CH0_REG_PLL_CP0_CURRENT_SETTING,   
            PMA_CH0_REG_PLL_CP1_CURRENT_SETTING             =>   PMA_CH0_REG_PLL_CP1_CURRENT_SETTING,    
            PMA_CH0_REG_PLL_GM1_CURRENT_SETTING             =>   PMA_CH0_REG_PLL_GM1_CURRENT_SETTING,   
            PMA_CH0_REG_PLL_LC_BF2_CURRENT_SETTING          =>   PMA_CH0_REG_PLL_LC_BF2_CURRENT_SETTING,    
            PMA_CH0_REG_PLL_LC_BF2_CURRENT_SETTING_LOW      =>   PMA_CH0_REG_PLL_LC_BF2_CURRENT_SETTING_LOW,    
            PMA_CH0_REG_PLL_REG_CUR                         =>   PMA_CH0_REG_PLL_REG_CUR,    
            PMA_CH0_REG_PLL_LCCUR                           =>   PMA_CH0_REG_PLL_LCCUR,                                                                                                 
            PMA_CH0_REG_PLL_LCOBAS                          =>   PMA_CH0_REG_PLL_LCOBAS,                                                                                                 
            PMA_CH0_REG_PLL_FB_CK_TEST_OUT_ENABLE           =>   PMA_CH0_REG_PLL_FB_CK_TEST_OUT_ENABLE,    
            PMA_CH0_CDR_ALIGN_TIMER                         =>   PMA_CH0_CDR_ALIGN_TIMER,    
            PMA_CH0_CALIB_WAIT                              =>   PMA_CH0_CALIB_WAIT,    
            PMA_CH0_CALIB_TIMER                             =>   PMA_CH0_CALIB_TIMER,   
            PMA_CH0_TOT_RANGE                               =>   PMA_CH0_TOT_RANGE,                                                                
            PMA_CH0_SUB_RANGE                               =>   PMA_CH0_SUB_RANGE,                                                                
            PMA_CH0_OVLP                                    =>   PMA_CH0_OVLP,   
            PMA_CH0_BIST_WAIT                               =>   PMA_CH0_BIST_WAIT,                                             
            PMA_CH0_BIST_TIMER                              =>   PMA_CH0_BIST_TIMER,                                             
            PMA_CH0_BAND_LB                                 =>   PMA_CH0_BAND_LB,                               
            PMA_CH0_BAND_HB                                 =>   PMA_CH0_BAND_HB,
            PMA_CH0_FREQ_LOCK_ACCURACY                      =>   PMA_CH0_FREQ_LOCK_ACCURACY,    
            PMA_CH0_REG_SET_LC_BAND                         =>   PMA_CH0_REG_SET_LC_BAND,    
            PMA_CH0_REG_SET_VCODIV                          =>   PMA_CH0_REG_SET_VCODIV,    
            PMA_CH0_REGISTER_SET_VCODIV_BAND_ENABLE         =>   PMA_CH0_REGISTER_SET_VCODIV_BAND_ENABLE,   
            PMA_CH0_REG_SET_PLL_LOCK                        =>   PMA_CH0_REG_SET_PLL_LOCK,    
            PMA_CH0_REGISTER_SET_PLL_LOCK_ENABLE            =>   PMA_CH0_REGISTER_SET_PLL_LOCK_ENABLE,    
            PMA_CH0_REG_SET_VCO_HI                          =>   PMA_CH0_REG_SET_VCO_HI,                                     
            PMA_CH0_REG_SET_VCO_LO                          =>   PMA_CH0_REG_SET_VCO_LO,                                     
            PMA_CH0_REGISTER_SET_VCO_HI_VCO_LO_ENABLE       =>   PMA_CH0_REGISTER_SET_VCO_HI_VCO_LO_ENABLE,
            PMA_CH0_FORCE_LC_PLL_LOOP_EN_H                  =>   PMA_CH0_FORCE_LC_PLL_LOOP_EN_H,
            PMA_CH0_FORCE_LC_PLL_LOOP_EN_L                  =>   PMA_CH0_FORCE_LC_PLL_LOOP_EN_L,
            PMA_CH0_VCO_DIV_CALI_BYPASS                     =>   PMA_CH0_VCO_DIV_CALI_BYPASS,
            PMA_CH0_BIST_EN                                 =>   PMA_CH0_BIST_EN,
            PMA_CH0_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE    =>      PMA_CH0_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE,
            PMA_CH0_FREQ_DETECT_ENABLE_SOURCE               =>   PMA_CH0_FREQ_DETECT_ENABLE_SOURCE,   
            PMA_CH0_REG_SET_DIVSEL_REF                      =>   PMA_CH0_REG_SET_DIVSEL_REF,                                                                          
            PMA_CH0_REG_SET_DIVSEL45_FB                     =>   PMA_CH0_REG_SET_DIVSEL45_FB,                                                                          
            PMA_CH0_REG_SET_DIVSEL_FB                       =>   PMA_CH0_REG_SET_DIVSEL_FB,   
            PMA_CH0_PLL_LOOP_EN_SETTING                     =>   PMA_CH0_PLL_LOOP_EN_SETTING,   
            PMA_CH0_REGISTER_SET_TXPLL_DIV_ENABLE           =>   PMA_CH0_REGISTER_SET_TXPLL_DIV_ENABLE,                                                        
            PMA_CH0_FORCE_RXPLL_RESET                       =>   PMA_CH0_FORCE_RXPLL_RESET,                                                      
            PMA_CH0_FORCE_RXPLL_ON                          =>   PMA_CH0_FORCE_RXPLL_ON,   
            PMA_CH0_DPCK_DIV2                               =>   PMA_CH0_DPCK_DIV2,   
            PMA_CH0_LFO_SETTING                             =>   PMA_CH0_LFO_SETTING,   
            PMA_CH0_ALOS_COUNTER_CLOCK_SELECTION            =>   PMA_CH0_ALOS_COUNTER_CLOCK_SELECTION,   
            PMA_CH0_RX_BIAS_CURRENT_ADJUSTMENT              =>   PMA_CH0_RX_BIAS_CURRENT_ADJUSTMENT,  
            PMA_CH0_OOB_ENTER_DELAY_SETTING                 =>   PMA_CH0_OOB_ENTER_DELAY_SETTING,  
            PMA_CH0_ALOS_LOW_TO_HIGH_COUNTER_SETTING        =>   PMA_CH0_ALOS_LOW_TO_HIGH_COUNTER_SETTING,  
            PMA_CH0_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL     =>   PMA_CH0_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL,
            PMA_CH0_ALOS_EXIT_COUNTER_CLOCK_DIVIDER         =>   PMA_CH0_ALOS_EXIT_COUNTER_CLOCK_DIVIDER,                                                        
            PMA_CH0_OOB_OSCILATER_FREQUENCY_SETTING         =>   PMA_CH0_OOB_OSCILATER_FREQUENCY_SETTING,                                                        
            PMA_CH0_FORCE_OOB                               =>   PMA_CH0_FORCE_OOB,                                                     
            PMA_CH0_OOB_VTH_SET                             =>   PMA_CH0_OOB_VTH_SET,                                                     
            PMA_CH0_FORCE_DET_FORCE_ALOS_LOW                =>   PMA_CH0_FORCE_DET_FORCE_ALOS_LOW,
            PMA_CH0_ALOS_THRESHOLD_VOLTAGE                  =>   PMA_CH0_ALOS_THRESHOLD_VOLTAGE,
            PMA_CH0_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE       =>   PMA_CH0_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE,                                                            
            PMA_CH0_REGR_NEGATIVE_HYSTERESIS_SETTING        =>   PMA_CH0_REGR_NEGATIVE_HYSTERESIS_SETTING,                                                            
            PMA_CH0_REGL_POSITIVE_HYSTERESIS_SETTING        =>   PMA_CH0_REGL_POSITIVE_HYSTERESIS_SETTING,                                                            
            PMA_CH0_REG_EN                                  =>   PMA_CH0_REG_EN,
            PMA_CH0_REGREF_SEL                              =>   PMA_CH0_REGREF_SEL,
            PMA_CH0_DC496                                   =>   PMA_CH0_DC496,
            PMA_CH0_EQ2_AC_VAR_SETTING                      =>   PMA_CH0_EQ2_AC_VAR_SETTING,
            PMA_CH0_EQ2_AC_RES_SETTING                      =>   PMA_CH0_EQ2_AC_RES_SETTING,
            PMA_CH0_EQ2_DC_RESTOP_SETTING                   =>   PMA_CH0_EQ2_DC_RESTOP_SETTING,                                                                                    
            PMA_CH0_EQ1_DC_RESTOP_SETTING                   =>   PMA_CH0_EQ1_DC_RESTOP_SETTING,                                                                                    
            PMA_CH0_EQ1_AC_VAR_SETTING                      =>   PMA_CH0_EQ1_AC_VAR_SETTING,                                                                                                  
            PMA_CH0_EQ2_CURRENT_SETTING                     =>   PMA_CH0_EQ2_CURRENT_SETTING,                                                                                                 
            PMA_CH0_EQ1_AC_RES_SETTING                      =>   PMA_CH0_EQ1_AC_RES_SETTING,                                                             
            PMA_CH0_EQ1_CURRENT_SETTING                     =>   PMA_CH0_EQ1_CURRENT_SETTING,                                                             
            PMA_CH0_RPLUS                                   =>   PMA_CH0_RPLUS,                                             
            PMA_CH0_RMINUS                                  =>   PMA_CH0_RMINUS,                                             
            PMA_CH0_RVALSET                                 =>   PMA_CH0_RVALSET,                                                      
            PMA_CH0_RTERM                                   =>   PMA_CH0_RTERM,                                                      
            PMA_CH0_DCFB_EN                                 =>   PMA_CH0_DCFB_EN,                                      
            PMA_CH0_DCCOUP                                  =>   PMA_CH0_DCCOUP,                                      
            PMA_CH0_3G                                      =>   PMA_CH0_3G,
            
            /******pma_ch1*****/
            PMA_CH1_TXDATA_WIDTH                            =>   PMA_CH1_TXDATA_WIDTH,                                                                        
            PMA_CH1_TX_TESTPATTERN                          =>   PMA_CH1_TX_TESTPATTERN,                                                                        
            PMA_CH1_TESTPATTERN_O_ENABLE                    =>   PMA_CH1_TESTPATTERN_O_ENABLE,
            PMA_CH1_DISABLE_BSMODE_DRVAMP                   =>   PMA_CH1_DISABLE_BSMODE_DRVAMP,                              
            PMA_CH1_FORCE_BIST_ENABLE                       =>   PMA_CH1_FORCE_BIST_ENABLE,   
            PMA_CH1_FORCE_ELECTRICAL_IDLE                   =>   PMA_CH1_FORCE_ELECTRICAL_IDLE,   
            PMA_CH1_FORCE_RXDCT_ENABLE                      =>   PMA_CH1_FORCE_RXDCT_ENABLE,                                     
            PMA_CH1_FORCE_EXTLB_ENABLE                      =>   PMA_CH1_FORCE_EXTLB_ENABLE,                                     
            PMA_CH1_DISABLE_LANE_SYNC                       =>   PMA_CH1_DISABLE_LANE_SYNC,                                     
            PMA_CH1_DISABLE_ELECTRICAL_IDLE                 =>   PMA_CH1_DISABLE_ELECTRICAL_IDLE,                                  
            PMA_CH1_DISABLE_RXDCT_ENABLE                    =>   PMA_CH1_DISABLE_RXDCT_ENABLE,                                  
            PMA_CH1_DISABLE_EXTLB_ENABLE                    =>   PMA_CH1_DISABLE_EXTLB_ENABLE,                                  
            PMA_CH1_DISABLE_LOW_SPEED_PATH_ENABLE           =>   PMA_CH1_DISABLE_LOW_SPEED_PATH_ENABLE,   
            PMA_CH1_FORCE_LANE_ENABLE                       =>   PMA_CH1_FORCE_LANE_ENABLE,   
            PMA_CH1_FORCE_LANE_RESETB_DISABLE               =>   PMA_CH1_FORCE_LANE_RESETB_DISABLE,   
            PMA_CH1_RXDCT_LGBW_ENABLE                       =>   PMA_CH1_RXDCT_LGBW_ENABLE,   
            PMA_CH1_RXDCT_VTH                               =>   PMA_CH1_RXDCT_VTH,   
            PMA_CH1_DE_EMPHASIS_ADDITIONAL_CONTROL          =>   PMA_CH1_DE_EMPHASIS_ADDITIONAL_CONTROL,   
            PMA_CH1_DRV_RTERM_CONTROL                       =>   PMA_CH1_DRV_RTERM_CONTROL,   
            PMA_CH1_FDRV_AMP_CONTROL                        =>   PMA_CH1_FDRV_AMP_CONTROL,                                          
            PMA_CH1_PREPC_AMP_CONTROL                       =>   PMA_CH1_PREPC_AMP_CONTROL,                                          
            PMA_CH1_PREMC_AMP_CONTROL                       =>   PMA_CH1_PREMC_AMP_CONTROL,                                          
            PMA_CH1_SER_AMP_CONTROL                         =>   PMA_CH1_SER_AMP_CONTROL,   
            PMA_CH1_PFD_LOOP_RESISTOR_SETTING               =>   PMA_CH1_PFD_LOOP_RESISTOR_SETTING,                                  
            PMA_CH1_PD_LOOP_RESISTOR_SETTING                =>   PMA_CH1_PD_LOOP_RESISTOR_SETTING,                                  
            PMA_CH1_CDR_TEST_OUT_SELECT                     =>   PMA_CH1_CDR_TEST_OUT_SELECT,   
            PMA_CH1_PI_DIV1_BP                              =>   PMA_CH1_PI_DIV1_BP,   
            PMA_CH1_PI_TEST_FOR_CKI                         =>   PMA_CH1_PI_TEST_FOR_CKI,   
            PMA_CH1_PI_CURRENT_SETTING                      =>   PMA_CH1_PI_CURRENT_SETTING,   
            PMA_CH1_PI_FREQUENCY_SETTING                    =>   PMA_CH1_PI_FREQUENCY_SETTING,   
            PMA_CH1_TEST_OUT_SELECT_FOR_RCK                 =>   PMA_CH1_TEST_OUT_SELECT_FOR_RCK,                                 
            PMA_CH1_TEST_OUT_SELECT_SOURCE                  =>   PMA_CH1_TEST_OUT_SELECT_SOURCE,                                 
            PMA_CH1_TEST_DATA_OUT_SELECT_SOURCE             =>   PMA_CH1_TEST_DATA_OUT_SELECT_SOURCE,   
            PMA_CH1_TEST_CK_OUT_SELECT_SOURCE               =>   PMA_CH1_TEST_CK_OUT_SELECT_SOURCE,                                             
            PMA_CH1_ENABLE_SLIP1UI_MODULE                   =>   PMA_CH1_ENABLE_SLIP1UI_MODULE,                                             
            PMA_CH1_PN_SWAP_ENABLE                          =>   PMA_CH1_PN_SWAP_ENABLE,         
            PMA_CH1_SIPO_BIT_SETTING                        =>   PMA_CH1_SIPO_BIT_SETTING,         
            PMA_CH1_OOB_EN                                  =>   PMA_CH1_OOB_EN,         
            PMA_CH1_ALOS_EN                                 =>   PMA_CH1_ALOS_EN,  
            PMA_CH1_LFMODE                                  =>   PMA_CH1_LFMODE,   
            PMA_CH1_TSO_HS_SEL                              =>   PMA_CH1_TSO_HS_SEL,   
            PMA_CH1_LX_SELLC                                =>   PMA_CH1_LX_SELLC,   
            PMA_CH1_LX_RXPLL_DIVSEL45_FB                    =>   PMA_CH1_LX_RXPLL_DIVSEL45_FB,   
            PMA_CH1_LX_RXPLL_DIVSEL_FB                      =>   PMA_CH1_LX_RXPLL_DIVSEL_FB,   
            PMA_CH1_LX_RXPLL_DIVSEL_REF                     =>   PMA_CH1_LX_RXPLL_DIVSEL_REF,   
            PMA_CH1_PICODE                                  =>   PMA_CH1_PICODE,   
            PMA_CH1_RX_REFCK_SEL                            =>   PMA_CH1_RX_REFCK_SEL,  
            PMA_CH1_PFDLPEN_REGISTER_CONTROL_ENABLE         =>   PMA_CH1_PFDLPEN_REGISTER_CONTROL_ENABLE,  
            PMA_CH1_PFDLPEN_REGISTER_SETTING                =>   PMA_CH1_PFDLPEN_REGISTER_SETTING,   
            PMA_CH1_PDLPEN_REGISTER_CONTROL_ENABLE          =>   PMA_CH1_PDLPEN_REGISTER_CONTROL_ENABLE,   
            PMA_CH1_PDLPEN_REGISTER_SETTING                 =>   PMA_CH1_PDLPEN_REGISTER_SETTING,   
            PMA_CH1_DIV_CHANGE_ENABLE_DELAY_TIMER           =>   PMA_CH1_DIV_CHANGE_ENABLE_DELAY_TIMER,   
            PMA_CH1_DIV_CHANGE_ENABLE_SIGNAL_GATING         =>   PMA_CH1_DIV_CHANGE_ENABLE_SIGNAL_GATING,   
            PMA_CH1_CDR_ALIGN_REGISTER_SETTING_VALUE        =>   PMA_CH1_CDR_ALIGN_REGISTER_SETTING_VALUE,   
            PMA_CH1_FORCE_CDR_ALIGN_ENABLE                  =>   PMA_CH1_FORCE_CDR_ALIGN_ENABLE,   
            PMA_CH1_SELLC_REGISTER_SETTING_VALUE            =>   PMA_CH1_SELLC_REGISTER_SETTING_VALUE,   
            PMA_CH1_SELLC_CONTROL_BY_REGISTER               =>   PMA_CH1_SELLC_CONTROL_BY_REGISTER,  
            PMA_CH1_REG_PLLI_LDO_VREF_SETTING               =>   PMA_CH1_REG_PLLI_LDO_VREF_SETTING,    
            PMA_CH1_REG_PLLI_LDO_BYPASS_CURRENT             =>   PMA_CH1_REG_PLLI_LDO_BYPASS_CURRENT,   
            PMA_CH1_REG_PLL_HSTEST_ENABLE                   =>   PMA_CH1_REG_PLL_HSTEST_ENABLE,   
            PMA_CH1_REG_PLL_ISNK_CURRENT_CONTROL            =>   PMA_CH1_REG_PLL_ISNK_CURRENT_CONTROL,   
            PMA_CH1_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING    =>   PMA_CH1_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING,  
            PMA_CH1_REG_PLL_PD_LOOP_PLLGM_SETTING           =>   PMA_CH1_REG_PLL_PD_LOOP_PLLGM_SETTING,   
            PMA_CH1_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING    =>   PMA_CH1_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING,   
            PMA_CH1_REG_PLL_CP0_BIAS_CONTROL                =>   PMA_CH1_REG_PLL_CP0_BIAS_CONTROL,    
            PMA_CH1_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING     =>   PMA_CH1_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING,   
            PMA_CH1_REG_PLL_CP1_BIAS_CONTROL                =>   PMA_CH1_REG_PLL_CP1_BIAS_CONTROL,    
            PMA_CH1_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING     =>   PMA_CH1_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING,   
            PMA_CH1_REG_PLL_CP0_CURRENT_SETTING             =>   PMA_CH1_REG_PLL_CP0_CURRENT_SETTING,   
            PMA_CH1_REG_PLL_CP1_CURRENT_SETTING             =>   PMA_CH1_REG_PLL_CP1_CURRENT_SETTING,    
            PMA_CH1_REG_PLL_GM1_CURRENT_SETTING             =>   PMA_CH1_REG_PLL_GM1_CURRENT_SETTING,   
            PMA_CH1_REG_PLL_LC_BF2_CURRENT_SETTING          =>   PMA_CH1_REG_PLL_LC_BF2_CURRENT_SETTING,    
            PMA_CH1_REG_PLL_LC_BF2_CURRENT_SETTING_LOW      =>   PMA_CH1_REG_PLL_LC_BF2_CURRENT_SETTING_LOW,    
            PMA_CH1_REG_PLL_REG_CUR                         =>   PMA_CH1_REG_PLL_REG_CUR,    
            PMA_CH1_REG_PLL_LCCUR                           =>   PMA_CH1_REG_PLL_LCCUR,                                                                                                 
            PMA_CH1_REG_PLL_LCOBAS                          =>   PMA_CH1_REG_PLL_LCOBAS,                                                                                                 
            PMA_CH1_REG_PLL_FB_CK_TEST_OUT_ENABLE           =>   PMA_CH1_REG_PLL_FB_CK_TEST_OUT_ENABLE,    
            PMA_CH1_CDR_ALIGN_TIMER                         =>   PMA_CH1_CDR_ALIGN_TIMER,    
            PMA_CH1_CALIB_WAIT                              =>   PMA_CH1_CALIB_WAIT,    
            PMA_CH1_CALIB_TIMER                             =>   PMA_CH1_CALIB_TIMER,   
            PMA_CH1_TOT_RANGE                               =>   PMA_CH1_TOT_RANGE,                                                                
            PMA_CH1_SUB_RANGE                               =>   PMA_CH1_SUB_RANGE,                                                                
            PMA_CH1_OVLP                                    =>   PMA_CH1_OVLP,   
            PMA_CH1_BIST_WAIT                               =>   PMA_CH1_BIST_WAIT,                                             
            PMA_CH1_BIST_TIMER                              =>   PMA_CH1_BIST_TIMER,                                             
            PMA_CH1_BAND_LB                                 =>   PMA_CH1_BAND_LB,                               
            PMA_CH1_BAND_HB                                 =>   PMA_CH1_BAND_HB,
            PMA_CH1_FREQ_LOCK_ACCURACY                      =>   PMA_CH1_FREQ_LOCK_ACCURACY,    
            PMA_CH1_REG_SET_LC_BAND                         =>   PMA_CH1_REG_SET_LC_BAND,    
            PMA_CH1_REG_SET_VCODIV                          =>   PMA_CH1_REG_SET_VCODIV,    
            PMA_CH1_REGISTER_SET_VCODIV_BAND_ENABLE         =>   PMA_CH1_REGISTER_SET_VCODIV_BAND_ENABLE,   
            PMA_CH1_REG_SET_PLL_LOCK                        =>   PMA_CH1_REG_SET_PLL_LOCK,    
            PMA_CH1_REGISTER_SET_PLL_LOCK_ENABLE            =>   PMA_CH1_REGISTER_SET_PLL_LOCK_ENABLE,    
            PMA_CH1_REG_SET_VCO_HI                          =>   PMA_CH1_REG_SET_VCO_HI,                                     
            PMA_CH1_REG_SET_VCO_LO                          =>   PMA_CH1_REG_SET_VCO_LO,                                     
            PMA_CH1_REGISTER_SET_VCO_HI_VCO_LO_ENABLE       =>   PMA_CH1_REGISTER_SET_VCO_HI_VCO_LO_ENABLE,
            PMA_CH1_FORCE_LC_PLL_LOOP_EN_H                  =>   PMA_CH1_FORCE_LC_PLL_LOOP_EN_H,
            PMA_CH1_FORCE_LC_PLL_LOOP_EN_L                  =>   PMA_CH1_FORCE_LC_PLL_LOOP_EN_L,
            PMA_CH1_VCO_DIV_CALI_BYPASS                     =>   PMA_CH1_VCO_DIV_CALI_BYPASS,
            PMA_CH1_BIST_EN                                 =>   PMA_CH1_BIST_EN,
            PMA_CH1_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE    =>      PMA_CH1_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE,
            PMA_CH1_FREQ_DETECT_ENABLE_SOURCE               =>   PMA_CH1_FREQ_DETECT_ENABLE_SOURCE,   
            PMA_CH1_REG_SET_DIVSEL_REF                      =>   PMA_CH1_REG_SET_DIVSEL_REF,                                                                          
            PMA_CH1_REG_SET_DIVSEL45_FB                     =>   PMA_CH1_REG_SET_DIVSEL45_FB,                                                                          
            PMA_CH1_REG_SET_DIVSEL_FB                       =>   PMA_CH1_REG_SET_DIVSEL_FB,   
            PMA_CH1_PLL_LOOP_EN_SETTING                     =>   PMA_CH1_PLL_LOOP_EN_SETTING,   
            PMA_CH1_REGISTER_SET_TXPLL_DIV_ENABLE           =>   PMA_CH1_REGISTER_SET_TXPLL_DIV_ENABLE,                                                        
            PMA_CH1_FORCE_RXPLL_RESET                       =>   PMA_CH1_FORCE_RXPLL_RESET,                                                      
            PMA_CH1_FORCE_RXPLL_ON                          =>   PMA_CH1_FORCE_RXPLL_ON,   
            PMA_CH1_DPCK_DIV2                               =>   PMA_CH1_DPCK_DIV2,   
            PMA_CH1_LFO_SETTING                             =>   PMA_CH1_LFO_SETTING,   
            PMA_CH1_ALOS_COUNTER_CLOCK_SELECTION            =>   PMA_CH1_ALOS_COUNTER_CLOCK_SELECTION,   
            PMA_CH1_RX_BIAS_CURRENT_ADJUSTMENT              =>   PMA_CH1_RX_BIAS_CURRENT_ADJUSTMENT,  
            PMA_CH1_OOB_ENTER_DELAY_SETTING                 =>   PMA_CH1_OOB_ENTER_DELAY_SETTING,  
            PMA_CH1_ALOS_LOW_TO_HIGH_COUNTER_SETTING        =>   PMA_CH1_ALOS_LOW_TO_HIGH_COUNTER_SETTING,  
            PMA_CH1_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL     =>   PMA_CH1_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL,
            PMA_CH1_ALOS_EXIT_COUNTER_CLOCK_DIVIDER         =>   PMA_CH1_ALOS_EXIT_COUNTER_CLOCK_DIVIDER,                                                        
            PMA_CH1_OOB_OSCILATER_FREQUENCY_SETTING         =>   PMA_CH1_OOB_OSCILATER_FREQUENCY_SETTING,                                                        
            PMA_CH1_FORCE_OOB                               =>   PMA_CH1_FORCE_OOB,                                                     
            PMA_CH1_OOB_VTH_SET                             =>   PMA_CH1_OOB_VTH_SET,                                                     
            PMA_CH1_FORCE_DET_FORCE_ALOS_LOW                =>   PMA_CH1_FORCE_DET_FORCE_ALOS_LOW,
            PMA_CH1_ALOS_THRESHOLD_VOLTAGE                  =>   PMA_CH1_ALOS_THRESHOLD_VOLTAGE,
            PMA_CH1_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE       =>   PMA_CH1_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE,                                                            
            PMA_CH1_REGR_NEGATIVE_HYSTERESIS_SETTING        =>   PMA_CH1_REGR_NEGATIVE_HYSTERESIS_SETTING,                                                            
            PMA_CH1_REGL_POSITIVE_HYSTERESIS_SETTING        =>   PMA_CH1_REGL_POSITIVE_HYSTERESIS_SETTING,                                                            
            PMA_CH1_REG_EN                                  =>   PMA_CH1_REG_EN,
            PMA_CH1_REGREF_SEL                              =>   PMA_CH1_REGREF_SEL,
            PMA_CH1_DC496                                   =>   PMA_CH1_DC496,
            PMA_CH1_EQ2_AC_VAR_SETTING                      =>   PMA_CH1_EQ2_AC_VAR_SETTING,
            PMA_CH1_EQ2_AC_RES_SETTING                      =>   PMA_CH1_EQ2_AC_RES_SETTING,
            PMA_CH1_EQ2_DC_RESTOP_SETTING                   =>   PMA_CH1_EQ2_DC_RESTOP_SETTING,                                                                                    
            PMA_CH1_EQ1_DC_RESTOP_SETTING                   =>   PMA_CH1_EQ1_DC_RESTOP_SETTING,                                                                                    
            PMA_CH1_EQ1_AC_VAR_SETTING                      =>   PMA_CH1_EQ1_AC_VAR_SETTING,                                                                                                  
            PMA_CH1_EQ2_CURRENT_SETTING                     =>   PMA_CH1_EQ2_CURRENT_SETTING,                                                                                                 
            PMA_CH1_EQ1_AC_RES_SETTING                      =>   PMA_CH1_EQ1_AC_RES_SETTING,                                                             
            PMA_CH1_EQ1_CURRENT_SETTING                     =>   PMA_CH1_EQ1_CURRENT_SETTING,                                                             
            PMA_CH1_RPLUS                                   =>   PMA_CH1_RPLUS,                                             
            PMA_CH1_RMINUS                                  =>   PMA_CH1_RMINUS,                                             
            PMA_CH1_RVALSET                                 =>   PMA_CH1_RVALSET,                                                      
            PMA_CH1_RTERM                                   =>   PMA_CH1_RTERM,                                                      
            PMA_CH1_DCFB_EN                                 =>   PMA_CH1_DCFB_EN,                                      
            PMA_CH1_DCCOUP                                  =>   PMA_CH1_DCCOUP,                                      
            PMA_CH1_3G                                      =>   PMA_CH1_3G,
            
            /*******pma_ch2******/
            PMA_CH2_TXDATA_WIDTH                            =>   PMA_CH2_TXDATA_WIDTH,                                                                        
            PMA_CH2_TX_TESTPATTERN                          =>   PMA_CH2_TX_TESTPATTERN,                                                                        
            PMA_CH2_TESTPATTERN_O_ENABLE                    =>   PMA_CH2_TESTPATTERN_O_ENABLE,
            PMA_CH2_DISABLE_BSMODE_DRVAMP                   =>   PMA_CH2_DISABLE_BSMODE_DRVAMP,                              
            PMA_CH2_FORCE_BIST_ENABLE                       =>   PMA_CH2_FORCE_BIST_ENABLE,   
            PMA_CH2_FORCE_ELECTRICAL_IDLE                   =>   PMA_CH2_FORCE_ELECTRICAL_IDLE,   
            PMA_CH2_FORCE_RXDCT_ENABLE                      =>   PMA_CH2_FORCE_RXDCT_ENABLE,                                     
            PMA_CH2_FORCE_EXTLB_ENABLE                      =>   PMA_CH2_FORCE_EXTLB_ENABLE,                                     
            PMA_CH2_DISABLE_LANE_SYNC                       =>   PMA_CH2_DISABLE_LANE_SYNC,                                     
            PMA_CH2_DISABLE_ELECTRICAL_IDLE                 =>   PMA_CH2_DISABLE_ELECTRICAL_IDLE,                                  
            PMA_CH2_DISABLE_RXDCT_ENABLE                    =>   PMA_CH2_DISABLE_RXDCT_ENABLE,                                  
            PMA_CH2_DISABLE_EXTLB_ENABLE                    =>   PMA_CH2_DISABLE_EXTLB_ENABLE,                                  
            PMA_CH2_DISABLE_LOW_SPEED_PATH_ENABLE           =>   PMA_CH2_DISABLE_LOW_SPEED_PATH_ENABLE,   
            PMA_CH2_FORCE_LANE_ENABLE                       =>   PMA_CH2_FORCE_LANE_ENABLE,   
            PMA_CH2_FORCE_LANE_RESETB_DISABLE               =>   PMA_CH2_FORCE_LANE_RESETB_DISABLE,   
            PMA_CH2_RXDCT_LGBW_ENABLE                       =>   PMA_CH2_RXDCT_LGBW_ENABLE,   
            PMA_CH2_RXDCT_VTH                               =>   PMA_CH2_RXDCT_VTH,   
            PMA_CH2_DE_EMPHASIS_ADDITIONAL_CONTROL          =>   PMA_CH2_DE_EMPHASIS_ADDITIONAL_CONTROL,   
            PMA_CH2_DRV_RTERM_CONTROL                       =>   PMA_CH2_DRV_RTERM_CONTROL,   
            PMA_CH2_FDRV_AMP_CONTROL                        =>   PMA_CH2_FDRV_AMP_CONTROL,                                          
            PMA_CH2_PREPC_AMP_CONTROL                       =>   PMA_CH2_PREPC_AMP_CONTROL,                                          
            PMA_CH2_PREMC_AMP_CONTROL                       =>   PMA_CH2_PREMC_AMP_CONTROL,                                          
            PMA_CH2_SER_AMP_CONTROL                         =>   PMA_CH2_SER_AMP_CONTROL,   
            PMA_CH2_PFD_LOOP_RESISTOR_SETTING               =>   PMA_CH2_PFD_LOOP_RESISTOR_SETTING,                                  
            PMA_CH2_PD_LOOP_RESISTOR_SETTING                =>   PMA_CH2_PD_LOOP_RESISTOR_SETTING,                                  
            PMA_CH2_CDR_TEST_OUT_SELECT                     =>   PMA_CH2_CDR_TEST_OUT_SELECT,   
            PMA_CH2_PI_DIV1_BP                              =>   PMA_CH2_PI_DIV1_BP,   
            PMA_CH2_PI_TEST_FOR_CKI                         =>   PMA_CH2_PI_TEST_FOR_CKI,   
            PMA_CH2_PI_CURRENT_SETTING                      =>   PMA_CH2_PI_CURRENT_SETTING,   
            PMA_CH2_PI_FREQUENCY_SETTING                    =>   PMA_CH2_PI_FREQUENCY_SETTING,   
            PMA_CH2_TEST_OUT_SELECT_FOR_RCK                 =>   PMA_CH2_TEST_OUT_SELECT_FOR_RCK,                                 
            PMA_CH2_TEST_OUT_SELECT_SOURCE                  =>   PMA_CH2_TEST_OUT_SELECT_SOURCE,                                 
            PMA_CH2_TEST_DATA_OUT_SELECT_SOURCE             =>   PMA_CH2_TEST_DATA_OUT_SELECT_SOURCE,   
            PMA_CH2_TEST_CK_OUT_SELECT_SOURCE               =>   PMA_CH2_TEST_CK_OUT_SELECT_SOURCE,                                             
            PMA_CH2_ENABLE_SLIP1UI_MODULE                   =>   PMA_CH2_ENABLE_SLIP1UI_MODULE,                                             
            PMA_CH2_PN_SWAP_ENABLE                          =>   PMA_CH2_PN_SWAP_ENABLE,         
            PMA_CH2_SIPO_BIT_SETTING                        =>   PMA_CH2_SIPO_BIT_SETTING,         
            PMA_CH2_OOB_EN                                  =>   PMA_CH2_OOB_EN,         
            PMA_CH2_ALOS_EN                                 =>   PMA_CH2_ALOS_EN,  
            PMA_CH2_LFMODE                                  =>   PMA_CH2_LFMODE,   
            PMA_CH2_TSO_HS_SEL                              =>   PMA_CH2_TSO_HS_SEL,   
            PMA_CH2_LX_SELLC                                =>   PMA_CH2_LX_SELLC,   
            PMA_CH2_LX_RXPLL_DIVSEL45_FB                    =>   PMA_CH2_LX_RXPLL_DIVSEL45_FB,   
            PMA_CH2_LX_RXPLL_DIVSEL_FB                      =>   PMA_CH2_LX_RXPLL_DIVSEL_FB,   
            PMA_CH2_LX_RXPLL_DIVSEL_REF                     =>   PMA_CH2_LX_RXPLL_DIVSEL_REF,   
            PMA_CH2_PICODE                                  =>   PMA_CH2_PICODE,   
            PMA_CH2_RX_REFCK_SEL                            =>   PMA_CH2_RX_REFCK_SEL,  
            PMA_CH2_PFDLPEN_REGISTER_CONTROL_ENABLE         =>   PMA_CH2_PFDLPEN_REGISTER_CONTROL_ENABLE,  
            PMA_CH2_PFDLPEN_REGISTER_SETTING                =>   PMA_CH2_PFDLPEN_REGISTER_SETTING,   
            PMA_CH2_PDLPEN_REGISTER_CONTROL_ENABLE          =>   PMA_CH2_PDLPEN_REGISTER_CONTROL_ENABLE,   
            PMA_CH2_PDLPEN_REGISTER_SETTING                 =>   PMA_CH2_PDLPEN_REGISTER_SETTING,   
            PMA_CH2_DIV_CHANGE_ENABLE_DELAY_TIMER           =>   PMA_CH2_DIV_CHANGE_ENABLE_DELAY_TIMER,   
            PMA_CH2_DIV_CHANGE_ENABLE_SIGNAL_GATING         =>   PMA_CH2_DIV_CHANGE_ENABLE_SIGNAL_GATING,   
            PMA_CH2_CDR_ALIGN_REGISTER_SETTING_VALUE        =>   PMA_CH2_CDR_ALIGN_REGISTER_SETTING_VALUE,   
            PMA_CH2_FORCE_CDR_ALIGN_ENABLE                  =>   PMA_CH2_FORCE_CDR_ALIGN_ENABLE,   
            PMA_CH2_SELLC_REGISTER_SETTING_VALUE            =>   PMA_CH2_SELLC_REGISTER_SETTING_VALUE,   
            PMA_CH2_SELLC_CONTROL_BY_REGISTER               =>   PMA_CH2_SELLC_CONTROL_BY_REGISTER,  
            PMA_CH2_REG_PLLI_LDO_VREF_SETTING               =>   PMA_CH2_REG_PLLI_LDO_VREF_SETTING,    
            PMA_CH2_REG_PLLI_LDO_BYPASS_CURRENT             =>   PMA_CH2_REG_PLLI_LDO_BYPASS_CURRENT,   
            PMA_CH2_REG_PLL_HSTEST_ENABLE                   =>   PMA_CH2_REG_PLL_HSTEST_ENABLE,   
            PMA_CH2_REG_PLL_ISNK_CURRENT_CONTROL            =>   PMA_CH2_REG_PLL_ISNK_CURRENT_CONTROL,   
            PMA_CH2_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING    =>   PMA_CH2_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING,  
            PMA_CH2_REG_PLL_PD_LOOP_PLLGM_SETTING           =>   PMA_CH2_REG_PLL_PD_LOOP_PLLGM_SETTING,   
            PMA_CH2_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING    =>   PMA_CH2_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING,   
            PMA_CH2_REG_PLL_CP0_BIAS_CONTROL                =>   PMA_CH2_REG_PLL_CP0_BIAS_CONTROL,    
            PMA_CH2_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING     =>   PMA_CH2_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING,   
            PMA_CH2_REG_PLL_CP1_BIAS_CONTROL                =>   PMA_CH2_REG_PLL_CP1_BIAS_CONTROL,    
            PMA_CH2_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING     =>   PMA_CH2_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING,   
            PMA_CH2_REG_PLL_CP0_CURRENT_SETTING             =>   PMA_CH2_REG_PLL_CP0_CURRENT_SETTING,   
            PMA_CH2_REG_PLL_CP1_CURRENT_SETTING             =>   PMA_CH2_REG_PLL_CP1_CURRENT_SETTING,    
            PMA_CH2_REG_PLL_GM1_CURRENT_SETTING             =>   PMA_CH2_REG_PLL_GM1_CURRENT_SETTING,   
            PMA_CH2_REG_PLL_LC_BF2_CURRENT_SETTING          =>   PMA_CH2_REG_PLL_LC_BF2_CURRENT_SETTING,    
            PMA_CH2_REG_PLL_LC_BF2_CURRENT_SETTING_LOW      =>   PMA_CH2_REG_PLL_LC_BF2_CURRENT_SETTING_LOW,    
            PMA_CH2_REG_PLL_REG_CUR                         =>   PMA_CH2_REG_PLL_REG_CUR,    
            PMA_CH2_REG_PLL_LCCUR                           =>   PMA_CH2_REG_PLL_LCCUR,                                                                                                 
            PMA_CH2_REG_PLL_LCOBAS                          =>   PMA_CH2_REG_PLL_LCOBAS,                                                                                                 
            PMA_CH2_REG_PLL_FB_CK_TEST_OUT_ENABLE           =>   PMA_CH2_REG_PLL_FB_CK_TEST_OUT_ENABLE,    
            PMA_CH2_CDR_ALIGN_TIMER                         =>   PMA_CH2_CDR_ALIGN_TIMER,    
            PMA_CH2_CALIB_WAIT                              =>   PMA_CH2_CALIB_WAIT,    
            PMA_CH2_CALIB_TIMER                             =>   PMA_CH2_CALIB_TIMER,   
            PMA_CH2_TOT_RANGE                               =>   PMA_CH2_TOT_RANGE,                                                                
            PMA_CH2_SUB_RANGE                               =>   PMA_CH2_SUB_RANGE,                                                                
            PMA_CH2_OVLP                                    =>   PMA_CH2_OVLP,   
            PMA_CH2_BIST_WAIT                               =>   PMA_CH2_BIST_WAIT,                                             
            PMA_CH2_BIST_TIMER                              =>   PMA_CH2_BIST_TIMER,                                             
            PMA_CH2_BAND_LB                                 =>   PMA_CH2_BAND_LB,                               
            PMA_CH2_BAND_HB                                 =>   PMA_CH2_BAND_HB,
            PMA_CH2_FREQ_LOCK_ACCURACY                      =>   PMA_CH2_FREQ_LOCK_ACCURACY,    
            PMA_CH2_REG_SET_LC_BAND                         =>   PMA_CH2_REG_SET_LC_BAND,    
            PMA_CH2_REG_SET_VCODIV                          =>   PMA_CH2_REG_SET_VCODIV,    
            PMA_CH2_REGISTER_SET_VCODIV_BAND_ENABLE         =>   PMA_CH2_REGISTER_SET_VCODIV_BAND_ENABLE,   
            PMA_CH2_REG_SET_PLL_LOCK                        =>   PMA_CH2_REG_SET_PLL_LOCK,    
            PMA_CH2_REGISTER_SET_PLL_LOCK_ENABLE            =>   PMA_CH2_REGISTER_SET_PLL_LOCK_ENABLE,    
            PMA_CH2_REG_SET_VCO_HI                          =>   PMA_CH2_REG_SET_VCO_HI,                                     
            PMA_CH2_REG_SET_VCO_LO                          =>   PMA_CH2_REG_SET_VCO_LO,                                     
            PMA_CH2_REGISTER_SET_VCO_HI_VCO_LO_ENABLE       =>   PMA_CH2_REGISTER_SET_VCO_HI_VCO_LO_ENABLE,
            PMA_CH2_FORCE_LC_PLL_LOOP_EN_H                  =>   PMA_CH2_FORCE_LC_PLL_LOOP_EN_H,
            PMA_CH2_FORCE_LC_PLL_LOOP_EN_L                  =>   PMA_CH2_FORCE_LC_PLL_LOOP_EN_L,
            PMA_CH2_VCO_DIV_CALI_BYPASS                     =>   PMA_CH2_VCO_DIV_CALI_BYPASS,
            PMA_CH2_BIST_EN                                 =>   PMA_CH2_BIST_EN,
            PMA_CH2_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE    =>      PMA_CH2_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE,
            PMA_CH2_FREQ_DETECT_ENABLE_SOURCE               =>   PMA_CH2_FREQ_DETECT_ENABLE_SOURCE,   
            PMA_CH2_REG_SET_DIVSEL_REF                      =>   PMA_CH2_REG_SET_DIVSEL_REF,                                                                          
            PMA_CH2_REG_SET_DIVSEL45_FB                     =>   PMA_CH2_REG_SET_DIVSEL45_FB,                                                                          
            PMA_CH2_REG_SET_DIVSEL_FB                       =>   PMA_CH2_REG_SET_DIVSEL_FB,   
            PMA_CH2_PLL_LOOP_EN_SETTING                     =>   PMA_CH2_PLL_LOOP_EN_SETTING,   
            PMA_CH2_REGISTER_SET_TXPLL_DIV_ENABLE           =>   PMA_CH2_REGISTER_SET_TXPLL_DIV_ENABLE,                                                        
            PMA_CH2_FORCE_RXPLL_RESET                       =>   PMA_CH2_FORCE_RXPLL_RESET,                                                      
            PMA_CH2_FORCE_RXPLL_ON                          =>   PMA_CH2_FORCE_RXPLL_ON,   
            PMA_CH2_DPCK_DIV2                               =>   PMA_CH2_DPCK_DIV2,   
            PMA_CH2_LFO_SETTING                             =>   PMA_CH2_LFO_SETTING,   
            PMA_CH2_ALOS_COUNTER_CLOCK_SELECTION            =>   PMA_CH2_ALOS_COUNTER_CLOCK_SELECTION,   
            PMA_CH2_RX_BIAS_CURRENT_ADJUSTMENT              =>   PMA_CH2_RX_BIAS_CURRENT_ADJUSTMENT,  
            PMA_CH2_OOB_ENTER_DELAY_SETTING                 =>   PMA_CH2_OOB_ENTER_DELAY_SETTING,  
            PMA_CH2_ALOS_LOW_TO_HIGH_COUNTER_SETTING        =>   PMA_CH2_ALOS_LOW_TO_HIGH_COUNTER_SETTING,  
            PMA_CH2_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL     =>   PMA_CH2_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL,
            PMA_CH2_ALOS_EXIT_COUNTER_CLOCK_DIVIDER         =>   PMA_CH2_ALOS_EXIT_COUNTER_CLOCK_DIVIDER,                                                        
            PMA_CH2_OOB_OSCILATER_FREQUENCY_SETTING         =>   PMA_CH2_OOB_OSCILATER_FREQUENCY_SETTING,                                                        
            PMA_CH2_FORCE_OOB                               =>   PMA_CH2_FORCE_OOB,                                                     
            PMA_CH2_OOB_VTH_SET                             =>   PMA_CH2_OOB_VTH_SET,                                                     
            PMA_CH2_FORCE_DET_FORCE_ALOS_LOW                =>   PMA_CH2_FORCE_DET_FORCE_ALOS_LOW,
            PMA_CH2_ALOS_THRESHOLD_VOLTAGE                  =>   PMA_CH2_ALOS_THRESHOLD_VOLTAGE,
            PMA_CH2_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE       =>   PMA_CH2_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE,                                                            
            PMA_CH2_REGR_NEGATIVE_HYSTERESIS_SETTING        =>   PMA_CH2_REGR_NEGATIVE_HYSTERESIS_SETTING,                                                            
            PMA_CH2_REGL_POSITIVE_HYSTERESIS_SETTING        =>   PMA_CH2_REGL_POSITIVE_HYSTERESIS_SETTING,                                                            
            PMA_CH2_REG_EN                                  =>   PMA_CH2_REG_EN,
            PMA_CH2_REGREF_SEL                              =>   PMA_CH2_REGREF_SEL,
            PMA_CH2_DC496                                   =>   PMA_CH2_DC496,
            PMA_CH2_EQ2_AC_VAR_SETTING                      =>   PMA_CH2_EQ2_AC_VAR_SETTING,
            PMA_CH2_EQ2_AC_RES_SETTING                      =>   PMA_CH2_EQ2_AC_RES_SETTING,
            PMA_CH2_EQ2_DC_RESTOP_SETTING                   =>   PMA_CH2_EQ2_DC_RESTOP_SETTING,                                                                                    
            PMA_CH2_EQ1_DC_RESTOP_SETTING                   =>   PMA_CH2_EQ1_DC_RESTOP_SETTING,                                                                                    
            PMA_CH2_EQ1_AC_VAR_SETTING                      =>   PMA_CH2_EQ1_AC_VAR_SETTING,                                                                                                  
            PMA_CH2_EQ2_CURRENT_SETTING                     =>   PMA_CH2_EQ2_CURRENT_SETTING,                                                                                                 
            PMA_CH2_EQ1_AC_RES_SETTING                      =>   PMA_CH2_EQ1_AC_RES_SETTING,                                                             
            PMA_CH2_EQ1_CURRENT_SETTING                     =>   PMA_CH2_EQ1_CURRENT_SETTING,                                                             
            PMA_CH2_RPLUS                                   =>   PMA_CH2_RPLUS,                                             
            PMA_CH2_RMINUS                                  =>   PMA_CH2_RMINUS,                                             
            PMA_CH2_RVALSET                                 =>   PMA_CH2_RVALSET,                                                      
            PMA_CH2_RTERM                                   =>   PMA_CH2_RTERM,                                                      
            PMA_CH2_DCFB_EN                                 =>   PMA_CH2_DCFB_EN,                                      
            PMA_CH2_DCCOUP                                  =>   PMA_CH2_DCCOUP,                                      
            PMA_CH2_3G                                      =>   PMA_CH2_3G, 
            
            /******pma_ch3*******/
            PMA_CH3_TXDATA_WIDTH                            =>   PMA_CH3_TXDATA_WIDTH,                                                                        
            PMA_CH3_TX_TESTPATTERN                          =>   PMA_CH3_TX_TESTPATTERN,                                                                        
            PMA_CH3_TESTPATTERN_O_ENABLE                    =>   PMA_CH3_TESTPATTERN_O_ENABLE,
            PMA_CH3_DISABLE_BSMODE_DRVAMP                   =>   PMA_CH3_DISABLE_BSMODE_DRVAMP,                              
            PMA_CH3_FORCE_BIST_ENABLE                       =>   PMA_CH3_FORCE_BIST_ENABLE,   
            PMA_CH3_FORCE_ELECTRICAL_IDLE                   =>   PMA_CH3_FORCE_ELECTRICAL_IDLE,   
            PMA_CH3_FORCE_RXDCT_ENABLE                      =>   PMA_CH3_FORCE_RXDCT_ENABLE,                                     
            PMA_CH3_FORCE_EXTLB_ENABLE                      =>   PMA_CH3_FORCE_EXTLB_ENABLE,                                     
            PMA_CH3_DISABLE_LANE_SYNC                       =>   PMA_CH3_DISABLE_LANE_SYNC,                                     
            PMA_CH3_DISABLE_ELECTRICAL_IDLE                 =>   PMA_CH3_DISABLE_ELECTRICAL_IDLE,                                  
            PMA_CH3_DISABLE_RXDCT_ENABLE                    =>   PMA_CH3_DISABLE_RXDCT_ENABLE,                                  
            PMA_CH3_DISABLE_EXTLB_ENABLE                    =>   PMA_CH3_DISABLE_EXTLB_ENABLE,                                  
            PMA_CH3_DISABLE_LOW_SPEED_PATH_ENABLE           =>   PMA_CH3_DISABLE_LOW_SPEED_PATH_ENABLE,   
            PMA_CH3_FORCE_LANE_ENABLE                       =>   PMA_CH3_FORCE_LANE_ENABLE,   
            PMA_CH3_FORCE_LANE_RESETB_DISABLE               =>   PMA_CH3_FORCE_LANE_RESETB_DISABLE,   
            PMA_CH3_RXDCT_LGBW_ENABLE                       =>   PMA_CH3_RXDCT_LGBW_ENABLE,   
            PMA_CH3_RXDCT_VTH                               =>   PMA_CH3_RXDCT_VTH,   
            PMA_CH3_DE_EMPHASIS_ADDITIONAL_CONTROL          =>   PMA_CH3_DE_EMPHASIS_ADDITIONAL_CONTROL,   
            PMA_CH3_DRV_RTERM_CONTROL                       =>   PMA_CH3_DRV_RTERM_CONTROL,   
            PMA_CH3_FDRV_AMP_CONTROL                        =>   PMA_CH3_FDRV_AMP_CONTROL,                                          
            PMA_CH3_PREPC_AMP_CONTROL                       =>   PMA_CH3_PREPC_AMP_CONTROL,                                          
            PMA_CH3_PREMC_AMP_CONTROL                       =>   PMA_CH3_PREMC_AMP_CONTROL,                                          
            PMA_CH3_SER_AMP_CONTROL                         =>   PMA_CH3_SER_AMP_CONTROL,   
            PMA_CH3_PFD_LOOP_RESISTOR_SETTING               =>   PMA_CH3_PFD_LOOP_RESISTOR_SETTING,                                  
            PMA_CH3_PD_LOOP_RESISTOR_SETTING                =>   PMA_CH3_PD_LOOP_RESISTOR_SETTING,                                  
            PMA_CH3_CDR_TEST_OUT_SELECT                     =>   PMA_CH3_CDR_TEST_OUT_SELECT,   
            PMA_CH3_PI_DIV1_BP                              =>   PMA_CH3_PI_DIV1_BP,   
            PMA_CH3_PI_TEST_FOR_CKI                         =>   PMA_CH3_PI_TEST_FOR_CKI,   
            PMA_CH3_PI_CURRENT_SETTING                      =>   PMA_CH3_PI_CURRENT_SETTING,   
            PMA_CH3_PI_FREQUENCY_SETTING                    =>   PMA_CH3_PI_FREQUENCY_SETTING,   
            PMA_CH3_TEST_OUT_SELECT_FOR_RCK                 =>   PMA_CH3_TEST_OUT_SELECT_FOR_RCK,                                 
            PMA_CH3_TEST_OUT_SELECT_SOURCE                  =>   PMA_CH3_TEST_OUT_SELECT_SOURCE,                                 
            PMA_CH3_TEST_DATA_OUT_SELECT_SOURCE             =>   PMA_CH3_TEST_DATA_OUT_SELECT_SOURCE,   
            PMA_CH3_TEST_CK_OUT_SELECT_SOURCE               =>   PMA_CH3_TEST_CK_OUT_SELECT_SOURCE,                                             
            PMA_CH3_ENABLE_SLIP1UI_MODULE                   =>   PMA_CH3_ENABLE_SLIP1UI_MODULE,                                             
            PMA_CH3_PN_SWAP_ENABLE                          =>   PMA_CH3_PN_SWAP_ENABLE,         
            PMA_CH3_SIPO_BIT_SETTING                        =>   PMA_CH3_SIPO_BIT_SETTING,         
            PMA_CH3_OOB_EN                                  =>   PMA_CH3_OOB_EN,         
            PMA_CH3_ALOS_EN                                 =>   PMA_CH3_ALOS_EN,  
            PMA_CH3_LFMODE                                  =>   PMA_CH3_LFMODE,   
            PMA_CH3_TSO_HS_SEL                              =>   PMA_CH3_TSO_HS_SEL,   
            PMA_CH3_LX_SELLC                                =>   PMA_CH3_LX_SELLC,   
            PMA_CH3_LX_RXPLL_DIVSEL45_FB                    =>   PMA_CH3_LX_RXPLL_DIVSEL45_FB,   
            PMA_CH3_LX_RXPLL_DIVSEL_FB                      =>   PMA_CH3_LX_RXPLL_DIVSEL_FB,   
            PMA_CH3_LX_RXPLL_DIVSEL_REF                     =>   PMA_CH3_LX_RXPLL_DIVSEL_REF,   
            PMA_CH3_PICODE                                  =>   PMA_CH3_PICODE,   
            PMA_CH3_RX_REFCK_SEL                            =>   PMA_CH3_RX_REFCK_SEL,  
            PMA_CH3_PFDLPEN_REGISTER_CONTROL_ENABLE         =>   PMA_CH3_PFDLPEN_REGISTER_CONTROL_ENABLE,  
            PMA_CH3_PFDLPEN_REGISTER_SETTING                =>   PMA_CH3_PFDLPEN_REGISTER_SETTING,   
            PMA_CH3_PDLPEN_REGISTER_CONTROL_ENABLE          =>   PMA_CH3_PDLPEN_REGISTER_CONTROL_ENABLE,   
            PMA_CH3_PDLPEN_REGISTER_SETTING                 =>   PMA_CH3_PDLPEN_REGISTER_SETTING,   
            PMA_CH3_DIV_CHANGE_ENABLE_DELAY_TIMER           =>   PMA_CH3_DIV_CHANGE_ENABLE_DELAY_TIMER,   
            PMA_CH3_DIV_CHANGE_ENABLE_SIGNAL_GATING         =>   PMA_CH3_DIV_CHANGE_ENABLE_SIGNAL_GATING,   
            PMA_CH3_CDR_ALIGN_REGISTER_SETTING_VALUE        =>   PMA_CH3_CDR_ALIGN_REGISTER_SETTING_VALUE,   
            PMA_CH3_FORCE_CDR_ALIGN_ENABLE                  =>   PMA_CH3_FORCE_CDR_ALIGN_ENABLE,   
            PMA_CH3_SELLC_REGISTER_SETTING_VALUE            =>   PMA_CH3_SELLC_REGISTER_SETTING_VALUE,   
            PMA_CH3_SELLC_CONTROL_BY_REGISTER               =>   PMA_CH3_SELLC_CONTROL_BY_REGISTER,  
            PMA_CH3_REG_PLLI_LDO_VREF_SETTING               =>   PMA_CH3_REG_PLLI_LDO_VREF_SETTING,    
            PMA_CH3_REG_PLLI_LDO_BYPASS_CURRENT             =>   PMA_CH3_REG_PLLI_LDO_BYPASS_CURRENT,   
            PMA_CH3_REG_PLL_HSTEST_ENABLE                   =>   PMA_CH3_REG_PLL_HSTEST_ENABLE,   
            PMA_CH3_REG_PLL_ISNK_CURRENT_CONTROL            =>   PMA_CH3_REG_PLL_ISNK_CURRENT_CONTROL,   
            PMA_CH3_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING    =>   PMA_CH3_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING,  
            PMA_CH3_REG_PLL_PD_LOOP_PLLGM_SETTING           =>   PMA_CH3_REG_PLL_PD_LOOP_PLLGM_SETTING,   
            PMA_CH3_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING    =>   PMA_CH3_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING,   
            PMA_CH3_REG_PLL_CP0_BIAS_CONTROL                =>   PMA_CH3_REG_PLL_CP0_BIAS_CONTROL,    
            PMA_CH3_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING     =>   PMA_CH3_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING,   
            PMA_CH3_REG_PLL_CP1_BIAS_CONTROL                =>   PMA_CH3_REG_PLL_CP1_BIAS_CONTROL,    
            PMA_CH3_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING     =>   PMA_CH3_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING,   
            PMA_CH3_REG_PLL_CP0_CURRENT_SETTING             =>   PMA_CH3_REG_PLL_CP0_CURRENT_SETTING,   
            PMA_CH3_REG_PLL_CP1_CURRENT_SETTING             =>   PMA_CH3_REG_PLL_CP1_CURRENT_SETTING,    
            PMA_CH3_REG_PLL_GM1_CURRENT_SETTING             =>   PMA_CH3_REG_PLL_GM1_CURRENT_SETTING,   
            PMA_CH3_REG_PLL_LC_BF2_CURRENT_SETTING          =>   PMA_CH3_REG_PLL_LC_BF2_CURRENT_SETTING,    
            PMA_CH3_REG_PLL_LC_BF2_CURRENT_SETTING_LOW      =>   PMA_CH3_REG_PLL_LC_BF2_CURRENT_SETTING_LOW,    
            PMA_CH3_REG_PLL_REG_CUR                         =>   PMA_CH3_REG_PLL_REG_CUR,    
            PMA_CH3_REG_PLL_LCCUR                           =>   PMA_CH3_REG_PLL_LCCUR,                                                                                                 
            PMA_CH3_REG_PLL_LCOBAS                          =>   PMA_CH3_REG_PLL_LCOBAS,                                                                                                 
            PMA_CH3_REG_PLL_FB_CK_TEST_OUT_ENABLE           =>   PMA_CH3_REG_PLL_FB_CK_TEST_OUT_ENABLE,    
            PMA_CH3_CDR_ALIGN_TIMER                         =>   PMA_CH3_CDR_ALIGN_TIMER,    
            PMA_CH3_CALIB_WAIT                              =>   PMA_CH3_CALIB_WAIT,    
            PMA_CH3_CALIB_TIMER                             =>   PMA_CH3_CALIB_TIMER,   
            PMA_CH3_TOT_RANGE                               =>   PMA_CH3_TOT_RANGE,                                                                
            PMA_CH3_SUB_RANGE                               =>   PMA_CH3_SUB_RANGE,                                                                
            PMA_CH3_OVLP                                    =>   PMA_CH3_OVLP,   
            PMA_CH3_BIST_WAIT                               =>   PMA_CH3_BIST_WAIT,                                             
            PMA_CH3_BIST_TIMER                              =>   PMA_CH3_BIST_TIMER,                                             
            PMA_CH3_BAND_LB                                 =>   PMA_CH3_BAND_LB,                               
            PMA_CH3_BAND_HB                                 =>   PMA_CH3_BAND_HB,
            PMA_CH3_FREQ_LOCK_ACCURACY                      =>   PMA_CH3_FREQ_LOCK_ACCURACY,    
            PMA_CH3_REG_SET_LC_BAND                         =>   PMA_CH3_REG_SET_LC_BAND,    
            PMA_CH3_REG_SET_VCODIV                          =>   PMA_CH3_REG_SET_VCODIV,    
            PMA_CH3_REGISTER_SET_VCODIV_BAND_ENABLE         =>   PMA_CH3_REGISTER_SET_VCODIV_BAND_ENABLE,   
            PMA_CH3_REG_SET_PLL_LOCK                        =>   PMA_CH3_REG_SET_PLL_LOCK,    
            PMA_CH3_REGISTER_SET_PLL_LOCK_ENABLE            =>   PMA_CH3_REGISTER_SET_PLL_LOCK_ENABLE,    
            PMA_CH3_REG_SET_VCO_HI                          =>   PMA_CH3_REG_SET_VCO_HI,                                     
            PMA_CH3_REG_SET_VCO_LO                          =>   PMA_CH3_REG_SET_VCO_LO,                                     
            PMA_CH3_REGISTER_SET_VCO_HI_VCO_LO_ENABLE       =>   PMA_CH3_REGISTER_SET_VCO_HI_VCO_LO_ENABLE,
            PMA_CH3_FORCE_LC_PLL_LOOP_EN_H                  =>   PMA_CH3_FORCE_LC_PLL_LOOP_EN_H,
            PMA_CH3_FORCE_LC_PLL_LOOP_EN_L                  =>   PMA_CH3_FORCE_LC_PLL_LOOP_EN_L,
            PMA_CH3_VCO_DIV_CALI_BYPASS                     =>   PMA_CH3_VCO_DIV_CALI_BYPASS,
            PMA_CH3_BIST_EN                                 =>   PMA_CH3_BIST_EN,
            PMA_CH3_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE    =>      PMA_CH3_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE,
            PMA_CH3_FREQ_DETECT_ENABLE_SOURCE               =>   PMA_CH3_FREQ_DETECT_ENABLE_SOURCE,   
            PMA_CH3_REG_SET_DIVSEL_REF                      =>   PMA_CH3_REG_SET_DIVSEL_REF,                                                                          
            PMA_CH3_REG_SET_DIVSEL45_FB                     =>   PMA_CH3_REG_SET_DIVSEL45_FB,                                                                          
            PMA_CH3_REG_SET_DIVSEL_FB                       =>   PMA_CH3_REG_SET_DIVSEL_FB,   
            PMA_CH3_PLL_LOOP_EN_SETTING                     =>   PMA_CH3_PLL_LOOP_EN_SETTING,   
            PMA_CH3_REGISTER_SET_TXPLL_DIV_ENABLE           =>   PMA_CH3_REGISTER_SET_TXPLL_DIV_ENABLE,                                                        
            PMA_CH3_FORCE_RXPLL_RESET                       =>   PMA_CH3_FORCE_RXPLL_RESET,                                                      
            PMA_CH3_FORCE_RXPLL_ON                          =>   PMA_CH3_FORCE_RXPLL_ON,   
            PMA_CH3_DPCK_DIV2                               =>   PMA_CH3_DPCK_DIV2,   
            PMA_CH3_LFO_SETTING                             =>   PMA_CH3_LFO_SETTING,   
            PMA_CH3_ALOS_COUNTER_CLOCK_SELECTION            =>   PMA_CH3_ALOS_COUNTER_CLOCK_SELECTION,   
            PMA_CH3_RX_BIAS_CURRENT_ADJUSTMENT              =>   PMA_CH3_RX_BIAS_CURRENT_ADJUSTMENT,  
            PMA_CH3_OOB_ENTER_DELAY_SETTING                 =>   PMA_CH3_OOB_ENTER_DELAY_SETTING,  
            PMA_CH3_ALOS_LOW_TO_HIGH_COUNTER_SETTING        =>   PMA_CH3_ALOS_LOW_TO_HIGH_COUNTER_SETTING,  
            PMA_CH3_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL     =>   PMA_CH3_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL,
            PMA_CH3_ALOS_EXIT_COUNTER_CLOCK_DIVIDER         =>   PMA_CH3_ALOS_EXIT_COUNTER_CLOCK_DIVIDER,                                                        
            PMA_CH3_OOB_OSCILATER_FREQUENCY_SETTING         =>   PMA_CH3_OOB_OSCILATER_FREQUENCY_SETTING,                                                        
            PMA_CH3_FORCE_OOB                               =>   PMA_CH3_FORCE_OOB,                                                     
            PMA_CH3_OOB_VTH_SET                             =>   PMA_CH3_OOB_VTH_SET,                                                     
            PMA_CH3_FORCE_DET_FORCE_ALOS_LOW                =>   PMA_CH3_FORCE_DET_FORCE_ALOS_LOW,
            PMA_CH3_ALOS_THRESHOLD_VOLTAGE                  =>   PMA_CH3_ALOS_THRESHOLD_VOLTAGE,
            PMA_CH3_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE       =>   PMA_CH3_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE,                                                            
            PMA_CH3_REGR_NEGATIVE_HYSTERESIS_SETTING        =>   PMA_CH3_REGR_NEGATIVE_HYSTERESIS_SETTING,                                                            
            PMA_CH3_REGL_POSITIVE_HYSTERESIS_SETTING        =>   PMA_CH3_REGL_POSITIVE_HYSTERESIS_SETTING,                                                            
            PMA_CH3_REG_EN                                  =>   PMA_CH3_REG_EN,
            PMA_CH3_REGREF_SEL                              =>   PMA_CH3_REGREF_SEL,
            PMA_CH3_DC496                                   =>   PMA_CH3_DC496,
            PMA_CH3_EQ2_AC_VAR_SETTING                      =>   PMA_CH3_EQ2_AC_VAR_SETTING,
            PMA_CH3_EQ2_AC_RES_SETTING                      =>   PMA_CH3_EQ2_AC_RES_SETTING,
            PMA_CH3_EQ2_DC_RESTOP_SETTING                   =>   PMA_CH3_EQ2_DC_RESTOP_SETTING,                                                                                    
            PMA_CH3_EQ1_DC_RESTOP_SETTING                   =>   PMA_CH3_EQ1_DC_RESTOP_SETTING,                                                                                    
            PMA_CH3_EQ1_AC_VAR_SETTING                      =>   PMA_CH3_EQ1_AC_VAR_SETTING,                                                                                                  
            PMA_CH3_EQ2_CURRENT_SETTING                     =>   PMA_CH3_EQ2_CURRENT_SETTING,                                                                                                 
            PMA_CH3_EQ1_AC_RES_SETTING                      =>   PMA_CH3_EQ1_AC_RES_SETTING,                                                             
            PMA_CH3_EQ1_CURRENT_SETTING                     =>   PMA_CH3_EQ1_CURRENT_SETTING,                                                             
            PMA_CH3_RPLUS                                   =>   PMA_CH3_RPLUS,                                             
            PMA_CH3_RMINUS                                  =>   PMA_CH3_RMINUS,                                             
            PMA_CH3_RVALSET                                 =>   PMA_CH3_RVALSET,                                                      
            PMA_CH3_RTERM                                   =>   PMA_CH3_RTERM,                                                      
            PMA_CH3_DCFB_EN                                 =>   PMA_CH3_DCFB_EN,                                      
            PMA_CH3_DCCOUP                                  =>   PMA_CH3_DCCOUP,                                      
            PMA_CH3_3G                                      =>   PMA_CH3_3G,
            
            /*******pma_quad*******/
            PMA_QUAD_TURN_ON_BANDGAP_AT_AOS_ON              =>   PMA_QUAD_TURN_ON_BANDGAP_AT_AOS_ON,
            PMA_QUAD_TURN_ON_BANDGAP_AT_RX_DETECTION_ON     =>   PMA_QUAD_TURN_ON_BANDGAP_AT_RX_DETECTION_ON,
            PMA_QUAD_TURN_ON_BANDGAP_AT_BOUNDARY_SCAN_ON    =>   PMA_QUAD_TURN_ON_BANDGAP_AT_BOUNDARY_SCAN_ON,                           
            PMA_QUAD_CFG_HSST_RSTN                          =>   PMA_QUAD_CFG_HSST_RSTN,                                                   
            PMA_QUAD_SELECT_LANE_TCK_FOR_QUAD_SYNC          =>   PMA_QUAD_SELECT_LANE_TCK_FOR_QUAD_SYNC,                             
            PMA_QUAD_CK_REN                                 =>   PMA_QUAD_CK_REN,                                                         
            PMA_QUAD_C1_EN                                  =>   PMA_QUAD_C1_EN,                                                              
            PMA_QUAD_C2_EN                                  =>   PMA_QUAD_C2_EN,                                                              
            PMA_QUAD_CLK_DIVIDER_SETTING_FROM_25M_TO_200K   =>   PMA_QUAD_CLK_DIVIDER_SETTING_FROM_25M_TO_200K,        
            PMA_QUAD_ACMODE_SCANMODE_EN                     =>   PMA_QUAD_ACMODE_SCANMODE_EN,                                            
            PMA_QUAD_REGISTER_ACMODE                        =>   PMA_QUAD_REGISTER_ACMODE,                                                    
            PMA_QUAD_REGISTER_SCANMODE                      =>   PMA_QUAD_REGISTER_SCANMODE,                                                   
            PMA_QUAD_REFCK2CORE_EN                          =>   PMA_QUAD_REFCK2CORE_EN,                                                  
            PMA_QUAD_REG_EN                                 =>   PMA_QUAD_REG_EN,                                                        
            PMA_QUAD_REGR                                   =>   PMA_QUAD_REGR,                                            
            PMA_QUAD_REGL                                   =>   PMA_QUAD_REGL,                                           
            PMA_QUAD_DPCK_SEL                               =>   PMA_QUAD_DPCK_SEL,                                    
            PMA_QUAD_TX_REFCK_SEL                           =>   PMA_QUAD_TX_REFCK_SEL,                                                       
            PMA_QUAD_REFCK_SRC_SEL                          =>   PMA_QUAD_REFCK_SRC_SEL,                                                    
            PMA_QUAD_RREFCK_PWRUP                           =>   PMA_QUAD_RREFCK_PWRUP,                                                                    
            PMA_QUAD_REFCK_SK_SEL                           =>   PMA_QUAD_REFCK_SK_SEL,                                                                                                                
            PMA_QUAD_REFCK_DIV2_SEL                         =>   PMA_QUAD_REFCK_DIV2_SEL,                                                  
            PMA_QUAD_REFCK_TO_NQ_EN                         =>   PMA_QUAD_REFCK_TO_NQ_EN,                                             
            PMA_QUAD_AUXI_ADJ                               =>   PMA_QUAD_AUXI_ADJ,                  
            PMA_QUAD_DC496                                  =>   PMA_QUAD_DC496,                        
            PMA_QUAD_REG_FDET_TIMER                         =>   PMA_QUAD_REG_FDET_TIMER,                            
            PMA_QUAD_FREQ_LKO                               =>   PMA_QUAD_FREQ_LKO,                                                                                     
            PMA_QUAD_FREQ_LKI                               =>   PMA_QUAD_FREQ_LKI,   
            PMA_QUAD_CLOCK_SRC_SEL                          =>   PMA_QUAD_CLOCK_SRC_SEL,                                                                                                                              
            PMA_QUAD_FRE_DET_EN                             =>   PMA_QUAD_FRE_DET_EN,                                     
            PMA_QUAD_TSO_LS_SEL                             =>   PMA_QUAD_TSO_LS_SEL,                                  
            PMA_QUAD_TXPLL_START                            =>   PMA_QUAD_TXPLL_START,                                        
            PMA_QUAD_VCODIV                                 =>   PMA_QUAD_VCODIV,                   
            PMA_QUAD_LC_BAND                                =>   PMA_QUAD_LC_BAND,                                       
            PMA_QUAD_SET_VCO_HI                             =>   PMA_QUAD_SET_VCO_HI,                                         
            PMA_QUAD_SET_VCO_LO                             =>   PMA_QUAD_SET_VCO_LO,                                         
            PMA_QUAD_CALIB_FAIL                             =>   PMA_QUAD_CALIB_FAIL,                                         
            PMA_QUAD_CALIB_DONE                             =>   PMA_QUAD_CALIB_DONE,                                         
            PMA_QUAD_BIST_DONE                              =>   PMA_QUAD_BIST_DONE,                                          
            PMA_QUAD_TOTRANGE_FAIL                          =>   PMA_QUAD_TOTRANGE_FAIL,                                           
            PMA_QUAD_SUBRANGE_FAIL                          =>   PMA_QUAD_SUBRANGE_FAIL,                                           
            PMA_QUAD_OVLP_FAIL                              =>   PMA_QUAD_OVLP_FAIL,                                           
            PMA_QUAD_TXPLL_LOCK                             =>   PMA_QUAD_TXPLL_LOCK,                                         
            PMA_QUAD_TXPLL_LOOP_ENABLE                      =>   PMA_QUAD_TXPLL_LOOP_ENABLE,                                   
            PMA_QUAD_TXPLL_DIVSEL_REF_STA                   =>   PMA_QUAD_TXPLL_DIVSEL_REF_STA,                
            PMA_QUAD_TXPLL_DIVSEL45_FB_STA                  =>   PMA_QUAD_TXPLL_DIVSEL45_FB_STA,                                         
            PMA_QUAD_TXPLL_DIVSEL_FB_STA                    =>   PMA_QUAD_TXPLL_DIVSEL_FB_STA,                                         
            PMA_QUAD_TXPLL_DIVSEL45_FB                      =>   PMA_QUAD_TXPLL_DIVSEL45_FB,                             
            PMA_QUAD_TXPLL_DIVSEL_FB                        =>   PMA_QUAD_TXPLL_DIVSEL_FB,                     
            PMA_QUAD_TXPLL_DIVSEL_REF                       =>   PMA_QUAD_TXPLL_DIVSEL_REF,                             
            PMA_QUAD_REG_DISABLE_HOLDCLK                    =>   PMA_QUAD_REG_DISABLE_HOLDCLK,                                         
            PMA_QUAD_REG_DISABLE_SYNC                       =>   PMA_QUAD_REG_DISABLE_SYNC,                                               
            PMA_QUAD_FORCE_OUTPUT_PLL_LOCK                  =>   PMA_QUAD_FORCE_OUTPUT_PLL_LOCK,                                         
            PMA_QUAD_REGISTER_SET_SYNCTCK_SEL_ENABLE        =>   PMA_QUAD_REGISTER_SET_SYNCTCK_SEL_ENABLE,                     
            PMA_QUAD_REG_SET_SYNCTCK_SEL                    =>   PMA_QUAD_REG_SET_SYNCTCK_SEL,                             
            PMA_QUAD_CK4TEST_OUTPUT_ENABLE                  =>   PMA_QUAD_CK4TEST_OUTPUT_ENABLE,                                   
            PMA_QUAD_RSTGENBAS                              =>   PMA_QUAD_RSTGENBAS,                                            
            PMA_QUAD_LCBUFBAS                               =>   PMA_QUAD_LCBUFBAS,                                            
            PMA_QUAD_REGISTER_SET_CPCUR_ENABEL              =>   PMA_QUAD_REGISTER_SET_CPCUR_ENABEL,                               
            PMA_QUAD_REG_SET_CPCUR                          =>   PMA_QUAD_REG_SET_CPCUR,                                          
            PMA_QUAD_CPBAS                                  =>   PMA_QUAD_CPBAS,                          
            PMA_QUAD_LCOBAS                                 =>   PMA_QUAD_LCOBAS,                                              
            PMA_QUAD_LCCUR                                  =>   PMA_QUAD_LCCUR,         
            PMA_QUAD_ENABLE_REGISTER_SETTING_BAND           =>   PMA_QUAD_ENABLE_REGISTER_SETTING_BAND,             
            PMA_QUAD_CALIB_WAIT                             =>   PMA_QUAD_CALIB_WAIT,                                     
            PMA_QUAD_CALIB_TIMER                            =>   PMA_QUAD_CALIB_TIMER,                     
            PMA_QUAD_TOT_RANGE                              =>   PMA_QUAD_TOT_RANGE,
            PMA_QUAD_SUB_RANGE                              =>   PMA_QUAD_SUB_RANGE,
            PMA_QUAD_OVLP                                   =>   PMA_QUAD_OVLP,
            PMA_QUAD_BIST_WAIT                              =>   PMA_QUAD_BIST_WAIT,
            PMA_QUAD_BIST_TIMER                             =>   PMA_QUAD_BIST_TIMER,                                   
            PMA_QUAD_BAND_LB                                =>   PMA_QUAD_BAND_LB,                                       
            PMA_QUAD_BAND_HB                                =>   PMA_QUAD_BAND_HB,                                               
            PMA_QUAD_FREQ_LOCK_ACCURACY                     =>   PMA_QUAD_FREQ_LOCK_ACCURACY,  
            PMA_QUAD_REG_SET_LC_BAND                        =>   PMA_QUAD_REG_SET_LC_BAND,                    
            PMA_QUAD_REG_SET_VCODIV                         =>   PMA_QUAD_REG_SET_VCODIV,                                
            PMA_QUAD_REGISTER_SET_VCODIV_BAND_ENABLE        =>   PMA_QUAD_REGISTER_SET_VCODIV_BAND_ENABLE,
            PMA_QUAD_REG_SET_PLL_LOCK                       =>   PMA_QUAD_REG_SET_PLL_LOCK,                                     
            PMA_QUAD_REGISTER_SET_PLL_LOCK_ENABLE           =>   PMA_QUAD_REGISTER_SET_PLL_LOCK_ENABLE,                  
            PMA_QUAD_REG_SET_VCO_HI                         =>   PMA_QUAD_REG_SET_VCO_HI,                                                    
            PMA_QUAD_REG_SET_VCO_LO                         =>   PMA_QUAD_REG_SET_VCO_LO,                                                    
            PMA_QUAD_REGISTER_SET_VCO_HI_VCO_LO_ENABLE      =>   PMA_QUAD_REGISTER_SET_VCO_HI_VCO_LO_ENABLE,                
            PMA_QUAD_FORCE_LC_PLL_LOOP_EN_H                 =>   PMA_QUAD_FORCE_LC_PLL_LOOP_EN_H,   
            PMA_QUAD_FORCE_LC_PLL_LOOP_EN_L                 =>   PMA_QUAD_FORCE_LC_PLL_LOOP_EN_L,                           
            PMA_QUAD_VCO_DIV_CALI_BYPASS                    =>   PMA_QUAD_VCO_DIV_CALI_BYPASS,
            PMA_QUAD_BIST_EN                                =>   PMA_QUAD_BIST_EN,                                   
            PMA_QUAD_ENABLE_TXPLL_BIST_BLOCK_CLOCKS         =>   PMA_QUAD_ENABLE_TXPLL_BIST_BLOCK_CLOCKS,  
            PMA_QUAD_LF_TESTBY2                             =>   PMA_QUAD_LF_TESTBY2,  
            PMA_QUAD_REG_SET_DIVSEL_REF                     =>   PMA_QUAD_REG_SET_DIVSEL_REF,
            PMA_QUAD_REG_SET_DIVSEL45_FB                    =>   PMA_QUAD_REG_SET_DIVSEL45_FB,
            PMA_QUAD_REG_SET_DIVSEL_FB                      =>   PMA_QUAD_REG_SET_DIVSEL_FB,
            PMA_QUAD_LF_TEST_EN                             =>   PMA_QUAD_LF_TEST_EN,
            PMA_QUAD_REGISTER_SET_TXPLL_DIV_ENABLE          =>   PMA_QUAD_REGISTER_SET_TXPLL_DIV_ENABLE,
            PMA_QUAD_FORCE_TXPLL_RESET                      =>   PMA_QUAD_FORCE_TXPLL_RESET,                                             
            PMA_QUAD_FORCE_TXPLL_ON                         =>   PMA_QUAD_FORCE_TXPLL_ON,
            
            /*********others*******/
            CLK_ALIGNER_RX0                                 =>   CLK_ALIGNER_RX0,       
            CLK_ALIGNER_RX1                                 =>   CLK_ALIGNER_RX1,       
            CLK_ALIGNER_RX2                                 =>   CLK_ALIGNER_RX2,       
            CLK_ALIGNER_RX3                                 =>   CLK_ALIGNER_RX3,       
            CLK_ALIGNER_TX0                                 =>   CLK_ALIGNER_TX0,       
            CLK_ALIGNER_TX1                                 =>   CLK_ALIGNER_TX1,       
            CLK_ALIGNER_TX2                                 =>   CLK_ALIGNER_TX2,       
            CLK_ALIGNER_TX3                                 =>   CLK_ALIGNER_TX3,       
            DYN_DLY_EN_RX0                                  =>   DYN_DLY_EN_RX0,       
            DYN_DLY_EN_RX1                                  =>   DYN_DLY_EN_RX1,       
            DYN_DLY_EN_RX2                                  =>   DYN_DLY_EN_RX2,       
            DYN_DLY_EN_RX3                                  =>   DYN_DLY_EN_RX3,       
            DYN_DLY_EN_TX0                                  =>   DYN_DLY_EN_TX0,       
            DYN_DLY_EN_TX1                                  =>   DYN_DLY_EN_TX1,       
            DYN_DLY_EN_TX2                                  =>   DYN_DLY_EN_TX2,       
            DYN_DLY_EN_TX3                                  =>   DYN_DLY_EN_TX3,       
            DYN_DLY_SEL_RX0                                 =>   DYN_DLY_SEL_RX0,       
            DYN_DLY_SEL_RX1                                 =>   DYN_DLY_SEL_RX1,       
            DYN_DLY_SEL_RX2                                 =>   DYN_DLY_SEL_RX2,       
            DYN_DLY_SEL_RX3                                 =>   DYN_DLY_SEL_RX3,       
            DYN_DLY_SEL_TX0                                 =>   DYN_DLY_SEL_TX0,       
            DYN_DLY_SEL_TX1                                 =>   DYN_DLY_SEL_TX1,       
            DYN_DLY_SEL_TX2                                 =>   DYN_DLY_SEL_TX2,       
            DYN_DLY_SEL_TX3                                 =>   DYN_DLY_SEL_TX3,       
            CLK_ALIGNER_RSTN_RX                             =>   CLK_ALIGNER_RSTN_RX,       
            CLK_ALIGNER_RSTN_TX                             =>   CLK_ALIGNER_RSTN_TX,       
            LX_BISTLB_EN                                    =>   PT_LX_BISTLB_EN,
            LX_ELECIDLE_EN_MSB                              =>   PT_LX_ELECIDLE_EN_MSB,
            LX_EXTLB_EN                                     =>   PT_LX_EXTLB_EN,          
            LX_RXDCT_EN                                     =>   PT_LX_RXDCT_EN,          
            LX_TX_LFMODE                                    =>   PT_LX_TX_LFMODE,        
            RX_LANE_POWERUP                                 =>   PT_RX_LANE_POWERUP,        
            TX_LANE_POWERUP                                 =>   PT_TX_LANE_POWERUP,        
            PLL_RSTN                                        =>   PT_PLL_RSTN,
            PLLPOWERDOWN                                    =>   PT_PLLPOWERDOWN,
            QUAD_PWRUP                                      =>   PT_QUAD_PWRUP,        
            GRSN_DIS                                        =>   GRSN_DIS,        
            HSST_RSTN                                       =>   PT_HSST_RSTN,        
            CFG_RSTN                                        =>   PT_CFG_RSTN      
        )
        port map
        (
           P_L0RXN                                          =>   L0RXN,                          
           P_L0RXP                                          =>   L0RXP,                          
           P_LX_LFD_FRCORE_0                                =>   LX_LFD_FRCORE_0,                          
           P_LX_RX_CKDIV_DYNSEL_0                           =>   LX_RX_CKDIV_DYNSEL_0,                          
           P_PCS_RX_RSTN_0                                  =>   PCS_RX_RSTN_0,
           P_PCS_TX_RSTN_0                                  =>   PCS_TX_RSTN_0,
           P_RX0_CLK_FR_CORE                                =>   RX0_CLK_FR_CORE,                          
           P_RX_PLL_RSTN_0                                  =>   RX_PLL_RSTN_0,
           P_RX_PMA_RSTN_0                                  =>   RX_PMA_RSTN_0,                          
           P_RX_REF_CLK_0                                   =>   RX_REF_CLK_0,
           P_TX0_CLK_FR_CORE                                =>   TX0_CLK_FR_CORE,                          
           P_TX_PMA_RSTN_0                                  =>   TX_PMA_RSTN_0,                          
           P_LANE_SYNC_EN_0                                 =>   LANE_SYNC_EN_0,                          
           P_LX_AMP_CTL_0[3:0]                              =>   LX_AMP_CTL_0[3:0],                          
           P_CIM_CLK_ALIGNER_RX0[7:0]                       =>   CIM_CLK_ALIGNER_RX0[7:0],
           P_CIM_CLK_ALIGNER_TX0[7:0]                       =>   CIM_CLK_ALIGNER_TX0[7:0],
           P_LX_DEEMP_CTL_0[2:0]                            =>   LX_DEEMP_CTL_0[2:0],                          
           P_LX_RX_CKDIV_0[1:0]                             =>   LX_RX_CKDIV_0[1:0],                          
           P_TX_CKDIV_0[1:0]                                =>   TX_CKDIV_0[1:0],                          
           P_TDATA_0[43:0]                                  =>   TDATA_0[43:0],                          
           P_LX_ELECIDLE_EN_0[1:0]                          =>   LX_ELECIDLE_EN_0[1:0],                          
           P_L1RXN                                          =>   L1RXN,                          
           P_L1RXP                                          =>   L1RXP,
           P_LX_LFD_FRCORE_1                                =>   LX_LFD_FRCORE_1,
           P_LX_RX_CKDIV_DYNSEL_1                           =>   LX_RX_CKDIV_DYNSEL_1,
           P_PCS_RX_RSTN_1                                  =>   PCS_RX_RSTN_1,                          
           P_PCS_TX_RSTN_1                                  =>   PCS_TX_RSTN_1,                          
           P_RX1_CLK_FR_CORE                                =>   RX1_CLK_FR_CORE,                          
           P_RX_PLL_RSTN_1                                  =>   RX_PLL_RSTN_1,                          
           P_RX_PMA_RSTN_1                                  =>   RX_PMA_RSTN_1,                          
           P_RX_REF_CLK_1                                   =>   RX_REF_CLK_1,                          
           P_TX1_CLK_FR_CORE                                =>   TX1_CLK_FR_CORE,                          
           P_TX_PMA_RSTN_1                                  =>   TX_PMA_RSTN_1,                          
           P_LANE_SYNC_EN_1                                 =>   LANE_SYNC_EN_1,                          
           P_LX_AMP_CTL_1[3:0]                              =>   LX_AMP_CTL_1[3:0],                          
           P_CIM_CLK_ALIGNER_RX1[7:0]                       =>   CIM_CLK_ALIGNER_RX1[7:0],                          
           P_CIM_CLK_ALIGNER_TX1[7:0]                       =>   CIM_CLK_ALIGNER_TX1[7:0],                          
           P_LX_DEEMP_CTL_1[2:0]                            =>   LX_DEEMP_CTL_1[2:0],                          
           P_LX_RX_CKDIV_1[1:0]                             =>   LX_RX_CKDIV_1[1:0],                          
           P_TX_CKDIV_1[1:0]                                =>   TX_CKDIV_1[1:0],                          
           P_TDATA_1[43:0]                                  =>   TDATA_1[43:0],                          
           P_LX_ELECIDLE_EN_1[1:0]                          =>   LX_ELECIDLE_EN_1[1:0],                          
           P_L2RXN                                          =>   L2RXN,                          
           P_L2RXP                                          =>   L2RXP,                          
           P_LX_LFD_FRCORE_2                                =>   LX_LFD_FRCORE_2,                          
           P_LX_RX_CKDIV_DYNSEL_2                           =>   LX_RX_CKDIV_DYNSEL_2,                          
           P_PCS_RX_RSTN_2                                  =>   PCS_RX_RSTN_2,                          
           P_PCS_TX_RSTN_2                                  =>   PCS_TX_RSTN_2,                          
           P_RX2_CLK_FR_CORE                                =>   RX2_CLK_FR_CORE,                          
           P_RX_PLL_RSTN_2                                  =>   RX_PLL_RSTN_2,                          
           P_RX_PMA_RSTN_2                                  =>   RX_PMA_RSTN_2,                          
           P_RX_REF_CLK_2                                   =>   RX_REF_CLK_2,                          
           P_TX2_CLK_FR_CORE                                =>   TX2_CLK_FR_CORE,                          
           P_TX_PMA_RSTN_2                                  =>   TX_PMA_RSTN_2,                          
           P_LANE_SYNC_EN_2                                 =>   LANE_SYNC_EN_2,                          
           P_LX_AMP_CTL_2[3:0]                              =>   LX_AMP_CTL_2[3:0],                          
           P_CIM_CLK_ALIGNER_RX2[7:0]                       =>   CIM_CLK_ALIGNER_RX2[7:0],
           P_CIM_CLK_ALIGNER_TX2[7:0]                       =>   CIM_CLK_ALIGNER_TX2[7:0],
           P_LX_DEEMP_CTL_2[2:0]                            =>   LX_DEEMP_CTL_2[2:0],                          
           P_LX_RX_CKDIV_2[1:0]                             =>   LX_RX_CKDIV_2[1:0],                          
           P_TX_CKDIV_2[1:0]                                =>   TX_CKDIV_2[1:0],                          
           P_TDATA_2[43:0]                                  =>   TDATA_2[43:0],                          
           P_LX_ELECIDLE_EN_2[1:0]                          =>   LX_ELECIDLE_EN_2[1:0],                          
           P_L3RXN                                          =>   L3RXN,                          
           P_L3RXP                                          =>   L3RXP,                          
           P_LX_LFD_FRCORE_3                                =>   LX_LFD_FRCORE_3,                          
           P_LX_RX_CKDIV_DYNSEL_3                           =>   LX_RX_CKDIV_DYNSEL_3,                          
           P_PCS_RX_RSTN_3                                  =>   PCS_RX_RSTN_3,                          
           P_PCS_TX_RSTN_3                                  =>   PCS_TX_RSTN_3,                          
           P_RX3_CLK_FR_CORE                                =>   RX3_CLK_FR_CORE,                          
           P_RX_PLL_RSTN_3                                  =>   RX_PLL_RSTN_3,                          
           P_RX_PMA_RSTN_3                                  =>   RX_PMA_RSTN_3,                          
           P_RX_REF_CLK_3                                   =>   RX_REF_CLK_3,                          
           P_TX3_CLK_FR_CORE                                =>   TX3_CLK_FR_CORE,                          
           P_TX_PMA_RSTN_3                                  =>   TX_PMA_RSTN_3,                          
           P_LANE_SYNC_EN_3                                 =>   LANE_SYNC_EN_3,                          
           P_LX_AMP_CTL_3[3:0]                              =>   LX_AMP_CTL_3[3:0],                          
           P_CIM_CLK_ALIGNER_RX3[7:0]                       =>   CIM_CLK_ALIGNER_RX3[7:0],                          
           P_CIM_CLK_ALIGNER_TX3[7:0]                       =>   CIM_CLK_ALIGNER_TX3[7:0],
           P_LX_DEEMP_CTL_3[2:0]                            =>   LX_DEEMP_CTL_3[2:0],
           P_LX_RX_CKDIV_3[1:0]                             =>   LX_RX_CKDIV_3[1:0],
           P_TX_CKDIV_3[1:0]                                =>   TX_CKDIV_3[1:0],
           P_TDATA_3[43:0]                                  =>   TDATA_3[43:0],                          
           P_LX_ELECIDLE_EN_3[1:0]                          =>   LX_ELECIDLE_EN_3[1:0],                          
           P_LX_ELECIDLE_EN_MSB[3:0]                        =>   LX_ELECIDLE_EN_MSB[3:0],                          
           P_LX_BISTLB_EN[3:0]                              =>   LX_BISTLB_EN[3:0],                          
           P_LX_TX_LFMODE[3:0]                              =>   LX_TX_LFMODE[3:0],                          
           P_CIM_CLK_START_ALIGN_TX[3:0]                    =>   CIM_CLK_START_ALIGN_TX[3:0] ,                          
           P_CIM_CLK_START_ALIGN_RX[3:0]                    =>   CIM_CLK_START_ALIGN_RX[3:0],                          
           P_TX_LANE_POWERUP[3:0]                           =>   TX_LANE_POWERUP[3:0],                          
           P_RX_LANE_POWERUP[3:0]                           =>   RX_LANE_POWERUP[3:0],                          
           P_CIM_CLK_DYN_DLY_SEL_TX[3:0]                    =>   CIM_CLK_DYN_DLY_SEL_TX[3:0],                          
           P_LX_RXDCT_EN[3:0]                               =>   LX_RXDCT_EN[3:0],                          
           P_CIM_CLK_DYN_DLY_SEL_RX[3:0]                    =>   CIM_CLK_DYN_DLY_SEL_RX[3:0],                          
           P_LX_EXTLB_EN[3:0]                               =>   LX_EXTLB_EN[3:0],                          
           P_PCS_WORD_ALIGN_EN[3:0]                         =>   PCS_WORD_ALIGN_EN[3:0],                          
           P_PCS_FAREND_LOOP[3:0]                           =>   PCS_FAREND_LOOP[3:0],                          
           P_PCS_NEAREND_LOOP[3:0]                          =>   PCS_NEAREND_LOOP[3:0],                          
           P_CEB_ADETECT_EN[3:0]                            =>   CEB_ADETECT_EN[3:0],                          
           P_PCS_MCB_EXT_EN[3:0]                            =>   PCS_MCB_EXT_EN[3:0],                          
           P_RX_POLARITY_INVERT[3:0]                        =>   RX_POLARITY_INVERT[3:0],                          
           P_REFCKN                                         =>   REFCKN,                          
           P_REFCKP                                         =>   REFCKP,                          
           //P_TEST_CLK                                       =>   TEST_CLK,                          
           //P_TEST_MODE                                      =>   TEST_MODE,                          
           //P_TEST_RSTN                                      =>   TEST_RSTN,                          
           //P_TEST_SE                                        =>   TEST_SE,                          
           //P_TEST_SI0                                       =>   TEST_SI0,                          
           //P_TEST_SI1                                       =>   TEST_SI1,                          
           //P_TEST_SI2                                       =>   TEST_SI2,                          
           //P_TEST_SI3                                       =>   TEST_SI3,                          
           //P_TEST_SI4                                       =>   TEST_SI4,                          
           //P_TEST_SI5                                       =>   TEST_SI5,                          
           //P_TEST_SI6                                       =>   TEST_SI6,                          
           //P_TEST_SI7                                       =>   TEST_SI7,
           P_COMPRESSION_MODE                               =>   COMPRESSION_MODE,                          
           P_PLL_RESET                                      =>   PLL_RESET,                          
           P_PLL_BYPASS                                     =>   PLL_BYPASS,                          
           P_CFG_CLK                                        =>   CFG_CLK,                          
           P_CFG_ENABLE                                     =>   CFG_ENABLE,                          
           P_CFG_RSTN                                       =>   CFG_RSTN,                          
           P_CFG_WRITE                                      =>   CFG_WRITE,                          
           P_CFG_ADDR[15:0]                                 =>   CFG_ADDR[15:0],                          
           P_CFG_WDATA[7:0]                                 =>   CFG_WDATA[7:0],                          
           P_AFTER_CTC_RCLK_EN_CIN                          =>   AFTER_CTC_RCLK_EN_CIN,                          
           P_AFTER_CTC_RCLK_EN_GB_CIN                       =>   AFTER_CTC_RCLK_EN_GB_CIN,                          
           P_APATTERN_MATCH_LSB_CIN                         =>   APATTERN_MATCH_LSB_CIN,                          
           P_APATTERN_MATCH_MSB_CIN                         =>   APATTERN_MATCH_MSB_CIN,                          
           P_APATTERN_SEACHING_PROC_CIN                     =>   APATTERN_SEACHING_PROC_CIN,                          
           P_APATTERN_STATUS_CIN                            =>   APATTERN_STATUS_CIN,                          
           P_BRIDGE_RCLK_EN_CIN                             =>   BRIDGE_RCLK_EN_CIN,                          
           P_BRIDGE_TCLK_EN_CIN                             =>   BRIDGE_TCLK_EN_CIN,                          
           P_CB_RCLK_EN_CIN                                 =>   CB_RCLK_EN_CIN,                          
           P_PCS_TCLK_EN_CIN                                =>   PCS_TCLK_EN_CIN,                          
           P_RFIFO_EN_AFTER_CTC_CIN                         =>   RFIFO_EN_AFTER_CTC_CIN,                          
           P_RFIFO_EN_AFTER_CTC_GB_CIN                      =>   RFIFO_EN_AFTER_CTC_GB_CIN,                          
           P_RFIFO_EN_BRIDGE_CIN                            =>   RFIFO_EN_BRIDGE_CIN,                          
           P_RFIFO_EN_CB_CIN                                =>   RFIFO_EN_CB_CIN,                          
           P_SKIP_ADD_LSB_MCB_CIN                           =>   SKIP_ADD_LSB_MCB_CIN,                          
           P_SKIP_ADD_MCB_CIN                               =>   SKIP_ADD_MCB_CIN,                          
           P_SKIP_DEL_LSB_MCB_CIN                           =>   SKIP_DEL_LSB_MCB_CIN,                          
           P_SKIP_DEL_MCB_CIN                               =>   SKIP_DEL_MCB_CIN,
           P_CTC_RD_FIFO_CIN                                =>   CTC_RD_FIFO_CIN,
           P_TFIFO_EN_BRIDGE_CIN                            =>   TFIFO_EN_BRIDGE_CIN,                          
           P_TFIFO_EN_PCS_TX_CIN                            =>   TFIFO_EN_PCS_TX_CIN,                          
           P_MCB_CLK_FRNQ                                   =>   MCB_CLK_FRNQ,                          
           P_HSST_RSTN                                      =>   HSST_RSTN,                          
           P_PLL_REF_CLK                                    =>   PLL_REF_CLK,                          
           P_PLL_RSTN                                       =>   PLL_RSTN,                          
           P_PLLPOWERDOWN                                   =>   PLLPOWERDOWN,                          
           P_QUAD_PWRUP                                     =>   QUAD_PWRUP,                          
           P_SYNC_TOGGLE                                    =>   SYNC_TOGGLE,                          
           P_TXCKDIV_DYNSEL                                 =>   TXCKDIV_DYNSEL,                          
           P_L0TXN                                          =>   L0TXN,                          
           P_L0TXP                                          =>   L0TXP,                          
           P_RDATA_0[46:0]                                  =>   RDATA_0[46:0],                          
           P_LX_ALOS_STA_0                                  =>   LX_ALOS_STA_0,                          
           P_LX_CDR_ALIGN_0                                 =>   LX_CDR_ALIGN_0,                          
           P_LX_LFO_0                                       =>   LX_LFO_0,                          
           P_LX_OOB_STA_0                                   =>   LX_OOB_STA_0,                          
           P_LX_RXDCT_DONE_0                                =>   LX_RXDCT_DONE_0,                          
           P_LX_RXDCT_OUT_0                                 =>   LX_RXDCT_OUT_0,
           P_L1TXN                                          =>   L1TXN,                          
           P_L1TXP                                          =>   L1TXP,                          
           P_RDATA_1[46:0]                                  =>   RDATA_1[46:0],                          
           P_LX_ALOS_STA_1                                  =>   LX_ALOS_STA_1,                          
           P_LX_CDR_ALIGN_1                                 =>   LX_CDR_ALIGN_1,                          
           P_LX_LFO_1                                       =>   LX_LFO_1,                          
           P_LX_OOB_STA_1                                   =>   LX_OOB_STA_1,
           P_LX_RXDCT_DONE_1                                =>   LX_RXDCT_DONE_1,                          
           P_LX_RXDCT_OUT_1                                 =>   LX_RXDCT_OUT_1,                          
           P_L2TXN                                          =>   L2TXN,                          
           P_L2TXP                                          =>   L2TXP,                          
           P_RDATA_2[46:0]                                  =>   RDATA_2[46:0],                          
           P_LX_ALOS_STA_2                                  =>   LX_ALOS_STA_2,                          
           P_LX_CDR_ALIGN_2                                 =>   LX_CDR_ALIGN_2,                          
           P_LX_LFO_2                                       =>   LX_LFO_2,                          
           P_LX_OOB_STA_2                                   =>   LX_OOB_STA_2,                          
           P_LX_RXDCT_DONE_2                                =>   LX_RXDCT_DONE_2,                          
           P_LX_RXDCT_OUT_2                                 =>   LX_RXDCT_OUT_2,                          
           P_L3TXN                                          =>   L3TXN,                          
           P_L3TXP                                          =>   L3TXP,                          
           P_RDATA_3[46:0]                                  =>   RDATA_3[46:0],                          
           P_LX_ALOS_STA_3                                  =>   LX_ALOS_STA_3,                          
           P_LX_CDR_ALIGN_3                                 =>   LX_CDR_ALIGN_3,                          
           P_LX_LFO_3                                       =>   LX_LFO_3,                          
           P_LX_OOB_STA_3                                   =>   LX_OOB_STA_3,                          
           P_LX_RXDCT_DONE_3                                =>   LX_RXDCT_DONE_3,                          
           P_LX_RXDCT_OUT_3                                 =>   LX_RXDCT_OUT_3,                          
           P_CLK2CORE_RX[3:0]                               =>   CLK2CORE_RX[3:0],                          
           P_ALIGN_TX[3:0]                                  =>   ALIGN_TX[3:0],                          
           P_ALIGN_RX[3:0]                                  =>   ALIGN_RX[3:0],                          
           P_CLK2CORE_TX[3:0]                               =>   CLK2CORE_TX[3:0],                          
           P_PCS_RX_MCB_STATUS[3:0]                         =>   PCS_RX_MCB_STATUS[3:0],                          
           P_PCS_LSM_SYNCED[3:0]                            =>   PCS_LSM_SYNCED[3:0],                          
           P_REXT                                           =>   REXT,                          
          // P_TEST_SO0                                       =>   TEST_SO0,                          
          // P_TEST_SO1                                       =>   TEST_SO1,                          
          // P_TEST_SO2                                       =>   TEST_SO2,                          
          // P_TEST_SO3                                       =>   TEST_SO3,                          
          // P_TEST_SO4                                       =>   TEST_SO4,                          
          // P_TEST_SO5                                       =>   TEST_SO5,                          
          // P_TEST_SO6                                       =>   TEST_SO6,                          
          // P_TEST_SO7                                       =>   TEST_SO7,                          
           P_CFG_INT                                        =>   CFG_INT,                          
           P_CFG_READY                                      =>   CFG_READY,                          
           P_CFG_RDATA[7:0]                                 =>   CFG_RDATA[7:0],                          
           P_AFTER_CTC_RCLK_EN_COUT                         =>   AFTER_CTC_RCLK_EN_COUT,                          
           P_AFTER_CTC_RCLK_EN_GB_COUT                      =>   AFTER_CTC_RCLK_EN_GB_COUT,                          
           P_APATTERN_MATCH_LSB_COUT                        =>   APATTERN_MATCH_LSB_COUT,                          
           P_APATTERN_MATCH_MSB_COUT                        =>   APATTERN_MATCH_MSB_COUT,                          
           P_APATTERN_SEACHING_PROC_COUT                    =>   APATTERN_SEACHING_PROC_COUT,                          
           P_APATTERN_STATUS_COUT                           =>   APATTERN_STATUS_COUT,                          
           P_BRIDGE_RCLK_EN_COUT                            =>   BRIDGE_RCLK_EN_COUT,                          
           P_BRIDGE_TCLK_EN_COUT                            =>   BRIDGE_TCLK_EN_COUT,                          
           P_CB_RCLK_EN_COUT                                =>   CB_RCLK_EN_COUT,                          
           P_PCS_TCLK_EN_COUT                               =>   PCS_TCLK_EN_COUT,                          
           P_RFIFO_EN_AFTER_CTC_COUT                        =>   RFIFO_EN_AFTER_CTC_COUT,                          
           P_RFIFO_EN_AFTER_CTC_GB_COUT                     =>   RFIFO_EN_AFTER_CTC_GB_COUT,                          
           P_RFIFO_EN_BRIDGE_COUT                           =>   RFIFO_EN_BRIDGE_COUT,                          
           P_RFIFO_EN_CB_COUT                               =>   RFIFO_EN_CB_COUT,                          
           P_SKIP_ADD_LSB_MCB_COUT                          =>   SKIP_ADD_LSB_MCB_COUT,                          
           P_SKIP_ADD_MCB_COUT                              =>   SKIP_ADD_MCB_COUT,                          
           P_SKIP_DEL_LSB_MCB_COUT                          =>   SKIP_DEL_LCB_MCB_COUT,                  
           P_SKIP_DEL_MCB_COUT                              =>   SKIP_DEL_MCB_COUT,                          
           P_CTC_RD_FIFO_COUT                               =>   CTC_RD_FIFO_COUT,                          
           P_TFIFO_EN_BRIDGE_COUT                           =>   TFIFO_EN_BRIDGE_COUT,                          
           P_TFIFO_EN_PCS_TX_COUT                           =>   TFIFO_EN_PCS_TX_COUT,                          
           P_PLL_LOCK                                       =>   PLL_LOCK,                          
           P_REFCK2CORE                                     =>   REFCK2CORE,                          
           P_TSO_LS_OUT                                     =>   TSO_LS_OUT,
           P_REFCK_2NMQ                                     =>   REFCK_2NMQ,  
           P_REFCK_2NPQ                                     =>   REFCK_2NPQ,  
           P_REFCK_FRNMQ                                    =>   REFCK_FRNMQ,
           P_REFCK_FRNPQ                                    =>   REFCK_FRNPQ
           
        );
};

