*****************************************************************

  Device    [MULT_B_P]

  Author    []

  Abstract  []

  Revision History:

********************************************************************************/
prim
device MULT_B_P
{
    parameter
    (
        //config bit M9_MODE  = 1'b0, // 1'b1 1'b0
      //  config bit M19_MODE  = 1'b0,
      //  config bit M27_MODE  = 1'b0
         config int OP_MULT_B = 0,
         CONFIG int OP_MULT_A = 0
    );
    port
    (
         input PREADD_XB[17:0],    
         input PREADD_YB[18:0],
         input PREADD_XA[17:0],    
         input xb_signed,
         input yb_signed,
        // input zb_signed,
         output MULT_B_P[36:0]
    );
} // end of device MULT_B_P

propagation prop_mult_b_p of MULT_B_P
{
    if (   OP_MULT_B == 9 )
    {
        propagate(PREADD_XB[8:0] --> MULT_B_P[17:0]);
        propagate(PREADD_XB[17:9] --> MULT_B_P[35:18]);
        propagate(PREADD_YB[8:0] --> MULT_B_P[17:0]);
        propagate(PREADD_YB[17:9] --> MULT_B_P[35:18]);
        propagate(xb_signed --> MULT_B_P[36:0]);
        propagate(yb_signed --> MULT_B_P[36:0]);
       // propagate(zb_signed --> MULT_B_P[36:0]);
        
    }
    else if (  OP_MULT_B == 19 )
    {
        propagate(PREADD_XB[17:0] --> MULT_B_P[36:0]);
        propagate(PREADD_YB[18:0] --> MULT_B_P[36:0]);
        propagate(xb_signed --> MULT_B_P[36:0]);
        propagate(yb_signed --> MULT_B_P[36:0]);
       // propagate(zb_signed --> MULT_B_P[36:0]);
    }
    else if (  OP_MULT_A == 27  )
    {
        propagate(PREADD_XA[17:0] --> MULT_B_P[36:0]);
        propagate(PREADD_XB[8:0] --> MULT_B_P[36:0]);
        propagate(PREADD_YB[8:0] --> MULT_B_P[36:0]);
        propagate(xb_signed --> MULT_B_P[36:0]);
        propagate(yb_signed --> MULT_B_P[36:0]);
       // propagate(zb_signed --> MULT_B_P[36:0]);
    } 
    else 
    {
        propagate(PREADD_XB[17:0] --> MULT_B_P[36:0]);
        propagate(PREADD_YB[17:0] --> MULT_B_P[36:0]);
        propagate(xb_signed --> MULT_B_P[36:0]);
        propagate(yb_signed --> MULT_B_P[36:0]);
       // propagate(zb_signed --> MULT_B_P[36:0]);
    }        
};
