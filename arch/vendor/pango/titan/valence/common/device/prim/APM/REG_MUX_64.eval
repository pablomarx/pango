*****************************************************************

  Device    [REG_MUX_64]

  Author    []

  Abstract  []

  Revision History:

********************************************************************************/
prim
device REG_MUX_64
{
    parameter
    (
         config bit IN_SEL  = 1'b0 // 1'b1 1'b0
    );
    port
    (
         input D0[63:0],    
         input D1[63:0],
         output DOUT[63:0]
    );
} // end of device REG_MUX_64

propagation prop_reg_mux_64 of REG_MUX_64
{
    if (IN_SEL == 1'b0)
    {
        propagate ( D0[0]  --> DOUT[0] );    
        propagate ( D0[1]  --> DOUT[1] ); 
        propagate ( D0[2]  --> DOUT[2] );
        propagate ( D0[3]  --> DOUT[3] );
        propagate ( D0[4]  --> DOUT[4] );
        propagate ( D0[5]  --> DOUT[5] );
        propagate ( D0[6]  --> DOUT[6] );
        propagate ( D0[7]  --> DOUT[7] );
        propagate ( D0[8]  --> DOUT[8] );
        propagate ( D0[9]  --> DOUT[9] );
        propagate ( D0[10] --> DOUT[10] );
        propagate ( D0[11] --> DOUT[11] );
        propagate ( D0[12] --> DOUT[12] );
        propagate ( D0[13] --> DOUT[13] );
        propagate ( D0[14] --> DOUT[14] );
        propagate ( D0[15] --> DOUT[15] );
        propagate ( D0[16] --> DOUT[16] );
        propagate ( D0[17] --> DOUT[17] );
        propagate ( D0[18] --> DOUT[18] );
        propagate ( D0[19] --> DOUT[19] );
        propagate ( D0[20] --> DOUT[20] );
        propagate ( D0[21] --> DOUT[21] );
        propagate ( D0[22] --> DOUT[22] );
        propagate ( D0[23] --> DOUT[23] );
        propagate ( D0[24] --> DOUT[24] );
        propagate ( D0[25] --> DOUT[25] );
        propagate ( D0[26] --> DOUT[26] );
        propagate ( D0[27] --> DOUT[27] );
        propagate ( D0[28] --> DOUT[28] );
        propagate ( D0[29] --> DOUT[29] );
        propagate ( D0[30] --> DOUT[30] );
        propagate ( D0[31] --> DOUT[31] );
        propagate ( D0[32] --> DOUT[32] );
        propagate ( D0[33] --> DOUT[33] );
        propagate ( D0[34] --> DOUT[34] );
        propagate ( D0[35] --> DOUT[35] );
        propagate ( D0[36] --> DOUT[36] );
        propagate ( D0[37] --> DOUT[37] );
        propagate ( D0[38] --> DOUT[38] );
        propagate ( D0[39] --> DOUT[39] );
        propagate ( D0[40] --> DOUT[40] );
        propagate ( D0[41] --> DOUT[41] );
        propagate ( D0[42] --> DOUT[42] );
        propagate ( D0[43] --> DOUT[43] );
        propagate ( D0[44] --> DOUT[44] );
        propagate ( D0[45] --> DOUT[45] );
        propagate ( D0[46] --> DOUT[46] );
        propagate ( D0[47] --> DOUT[47] );
        propagate ( D0[48] --> DOUT[48] );
        propagate ( D0[49] --> DOUT[49] );
        propagate ( D0[50] --> DOUT[50] );
        propagate ( D0[51] --> DOUT[51] );
        propagate ( D0[52] --> DOUT[52] );
        propagate ( D0[53] --> DOUT[53] );
        propagate ( D0[54] --> DOUT[54] );
        propagate ( D0[55] --> DOUT[55] );
        propagate ( D0[56] --> DOUT[56] );
        propagate ( D0[57] --> DOUT[57] );
        propagate ( D0[58] --> DOUT[58] );
        propagate ( D0[59] --> DOUT[59] );
        propagate ( D0[60] --> DOUT[60] );
        propagate ( D0[61] --> DOUT[61] );
        propagate ( D0[62] --> DOUT[62] );
        propagate ( D0[63] --> DOUT[63] );
    }
    else
    {
        propagate ( D1[0]  --> DOUT[0] );    
        propagate ( D1[1]  --> DOUT[1] ); 
        propagate ( D1[2]  --> DOUT[2] );
        propagate ( D1[3]  --> DOUT[3] );
        propagate ( D1[4]  --> DOUT[4] );
        propagate ( D1[5]  --> DOUT[5] );
        propagate ( D1[6]  --> DOUT[6] );
        propagate ( D1[7]  --> DOUT[7] );
        propagate ( D1[8]  --> DOUT[8] );
        propagate ( D1[9]  --> DOUT[9] );
        propagate ( D1[10] --> DOUT[10] );
        propagate ( D1[11] --> DOUT[11] );
        propagate ( D1[12] --> DOUT[12] );
        propagate ( D1[13] --> DOUT[13] );
        propagate ( D1[14] --> DOUT[14] );
        propagate ( D1[15] --> DOUT[15] );
        propagate ( D1[16] --> DOUT[16] );
        propagate ( D1[17] --> DOUT[17] );
        propagate ( D1[18] --> DOUT[18] );
        propagate ( D1[19] --> DOUT[19] );
        propagate ( D1[20] --> DOUT[20] );
        propagate ( D1[21] --> DOUT[21] );
        propagate ( D1[22] --> DOUT[22] );
        propagate ( D1[23] --> DOUT[23] );
        propagate ( D1[24] --> DOUT[24] );
        propagate ( D1[25] --> DOUT[25] );
        propagate ( D1[26] --> DOUT[26] );
        propagate ( D1[27] --> DOUT[27] );
        propagate ( D1[28] --> DOUT[28] );
        propagate ( D1[29] --> DOUT[29] );
        propagate ( D1[30] --> DOUT[30] );
        propagate ( D1[31] --> DOUT[31] );
        propagate ( D1[32] --> DOUT[32] );
        propagate ( D1[33] --> DOUT[33] );
        propagate ( D1[34] --> DOUT[34] );
        propagate ( D1[35] --> DOUT[35] );
        propagate ( D1[36] --> DOUT[36] );
        propagate ( D1[37] --> DOUT[37] );
        propagate ( D1[38] --> DOUT[38] );
        propagate ( D1[39] --> DOUT[39] );
        propagate ( D1[40] --> DOUT[40] );
        propagate ( D1[41] --> DOUT[41] );
        propagate ( D1[42] --> DOUT[42] );
        propagate ( D1[43] --> DOUT[43] );
        propagate ( D1[44] --> DOUT[44] );
        propagate ( D1[45] --> DOUT[45] );
        propagate ( D1[46] --> DOUT[46] );
        propagate ( D1[47] --> DOUT[47] );
        propagate ( D1[48] --> DOUT[48] );
        propagate ( D1[49] --> DOUT[49] );
        propagate ( D1[50] --> DOUT[50] );
        propagate ( D1[51] --> DOUT[51] );
        propagate ( D1[52] --> DOUT[52] );
        propagate ( D1[53] --> DOUT[53] );
        propagate ( D1[54] --> DOUT[54] );
        propagate ( D1[55] --> DOUT[55] );
        propagate ( D1[56] --> DOUT[56] );
        propagate ( D1[57] --> DOUT[57] );
        propagate ( D1[58] --> DOUT[58] );
        propagate ( D1[59] --> DOUT[59] );
        propagate ( D1[60] --> DOUT[60] );
        propagate ( D1[61] --> DOUT[61] );
        propagate ( D1[62] --> DOUT[62] );
        propagate ( D1[63] --> DOUT[63] );
    }
};