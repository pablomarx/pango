*****************************************************************

  Device    [OUT_SEL]

  Author    []

  Abstract  []

  Revision History:

********************************************************************************/
prim
device OUT_SEL
{
    parameter
    (
        //config bit IN_SEL  = 2'b00 // 2'b00 2'b01 2'b10 2'b11
        config bit IN_SEL = 1'b1,
        config string ALU_MODE = "DISABLE"
    );
    port
    (
         input D0[36:0],    
         input D1[36:0],
         input D2[36:0],
         input D3[36:0],
         output DOUT[36:0]
    );
} // end of device OUT_SEL

propagation prop_out_sel of OUT_SEL
{
    if ( IN_SEL == 1'b0 )
    {
         if ( ALU_MODE == "DISABLE" )
         {
        propagate ( D0[0]  --> DOUT[0] );    
        propagate ( D0[1]  --> DOUT[1] ); 
        propagate ( D0[2]  --> DOUT[2] );
        propagate ( D0[3]  --> DOUT[3] );
        propagate ( D0[4]  --> DOUT[4] );
        propagate ( D0[5]  --> DOUT[5] );
        propagate ( D0[6]  --> DOUT[6] );
        propagate ( D0[7]  --> DOUT[7] );
        propagate ( D0[8]  --> DOUT[8] );
        propagate ( D0[9]  --> DOUT[9] );
        propagate ( D0[10] --> DOUT[10] );
        propagate ( D0[11] --> DOUT[11] );
        propagate ( D0[12] --> DOUT[12] );
        propagate ( D0[13] --> DOUT[13] );
        propagate ( D0[14] --> DOUT[14] );
        propagate ( D0[15] --> DOUT[15] );
        propagate ( D0[16] --> DOUT[16] );
        propagate ( D0[17] --> DOUT[17] );
        propagate ( D0[18] --> DOUT[18] );
        propagate ( D0[19] --> DOUT[19] );
        propagate ( D0[20] --> DOUT[20] );
        propagate ( D0[21] --> DOUT[21] );
        propagate ( D0[22] --> DOUT[22] );
        propagate ( D0[23] --> DOUT[23] );
        propagate ( D0[24] --> DOUT[24] );
        propagate ( D0[25] --> DOUT[25] );
        propagate ( D0[26] --> DOUT[26] );
        propagate ( D0[27] --> DOUT[27] );
        propagate ( D0[28] --> DOUT[28] );
        propagate ( D0[29] --> DOUT[29] );
        propagate ( D0[30] --> DOUT[30] );
        propagate ( D0[31] --> DOUT[31] );
        propagate ( D0[32] --> DOUT[32] );
        propagate ( D0[33] --> DOUT[33] );
        propagate ( D0[34] --> DOUT[34] );
        propagate ( D0[35] --> DOUT[35] );
        propagate ( D0[36] --> DOUT[36] );        
         }
         else
         {
        propagate ( D1[0]  --> DOUT[0] );    
        propagate ( D1[1]  --> DOUT[1] ); 
        propagate ( D1[2]  --> DOUT[2] );
        propagate ( D1[3]  --> DOUT[3] );
        propagate ( D1[4]  --> DOUT[4] );
        propagate ( D1[5]  --> DOUT[5] );
        propagate ( D1[6]  --> DOUT[6] );
        propagate ( D1[7]  --> DOUT[7] );
        propagate ( D1[8]  --> DOUT[8] );
        propagate ( D1[9]  --> DOUT[9] );
        propagate ( D1[10] --> DOUT[10] );
        propagate ( D1[11] --> DOUT[11] );
        propagate ( D1[12] --> DOUT[12] );
        propagate ( D1[13] --> DOUT[13] );
        propagate ( D1[14] --> DOUT[14] );
        propagate ( D1[15] --> DOUT[15] );
        propagate ( D1[16] --> DOUT[16] );
        propagate ( D1[17] --> DOUT[17] );
        propagate ( D1[18] --> DOUT[18] );
        propagate ( D1[19] --> DOUT[19] );
        propagate ( D1[20] --> DOUT[20] );
        propagate ( D1[21] --> DOUT[21] );
        propagate ( D1[22] --> DOUT[22] );
        propagate ( D1[23] --> DOUT[23] );
        propagate ( D1[24] --> DOUT[24] );
        propagate ( D1[25] --> DOUT[25] );
        propagate ( D1[26] --> DOUT[26] );
        propagate ( D1[27] --> DOUT[27] );
        propagate ( D1[28] --> DOUT[28] );
        propagate ( D1[29] --> DOUT[29] );
        propagate ( D1[30] --> DOUT[30] );
        propagate ( D1[31] --> DOUT[31] );
        propagate ( D1[32] --> DOUT[32] );
        propagate ( D1[33] --> DOUT[33] );
        propagate ( D1[34] --> DOUT[34] );
        propagate ( D1[35] --> DOUT[35] );
        propagate ( D1[36] --> DOUT[36] ); 
         }    
    } 
    else
    {
         if  ( ALU_MODE == "DISABLE" )
         {
        propagate ( D2[0]  --> DOUT[0] );    
        propagate ( D2[1]  --> DOUT[1] ); 
        propagate ( D2[2]  --> DOUT[2] );
        propagate ( D2[3]  --> DOUT[3] );
        propagate ( D2[4]  --> DOUT[4] );
        propagate ( D2[5]  --> DOUT[5] );
        propagate ( D2[6]  --> DOUT[6] );
        propagate ( D2[7]  --> DOUT[7] );
        propagate ( D2[8]  --> DOUT[8] );
        propagate ( D2[9]  --> DOUT[9] );
        propagate ( D2[10] --> DOUT[10] );
        propagate ( D2[11] --> DOUT[11] );
        propagate ( D2[12] --> DOUT[12] );
        propagate ( D2[13] --> DOUT[13] );
        propagate ( D2[14] --> DOUT[14] );
        propagate ( D2[15] --> DOUT[15] );
        propagate ( D2[16] --> DOUT[16] );
        propagate ( D2[17] --> DOUT[17] );
        propagate ( D2[18] --> DOUT[18] );
        propagate ( D2[19] --> DOUT[19] );
        propagate ( D2[20] --> DOUT[20] );
        propagate ( D2[21] --> DOUT[21] );
        propagate ( D2[22] --> DOUT[22] );
        propagate ( D2[23] --> DOUT[23] );
        propagate ( D2[24] --> DOUT[24] );
        propagate ( D2[25] --> DOUT[25] );
        propagate ( D2[26] --> DOUT[26] );
        propagate ( D2[27] --> DOUT[27] );
        propagate ( D2[28] --> DOUT[28] );
        propagate ( D2[29] --> DOUT[29] );
        propagate ( D2[30] --> DOUT[30] );
        propagate ( D2[31] --> DOUT[31] );
        propagate ( D2[32] --> DOUT[32] );
        propagate ( D2[33] --> DOUT[33] );
        propagate ( D2[34] --> DOUT[34] );
        propagate ( D2[35] --> DOUT[35] );
        propagate ( D2[36] --> DOUT[36] );
         }
         else
         {
        propagate ( D3[0]  --> DOUT[0] );    
        propagate ( D3[1]  --> DOUT[1] ); 
        propagate ( D3[2]  --> DOUT[2] );
        propagate ( D3[3]  --> DOUT[3] );
        propagate ( D3[4]  --> DOUT[4] );
        propagate ( D3[5]  --> DOUT[5] );
        propagate ( D3[6]  --> DOUT[6] );
        propagate ( D3[7]  --> DOUT[7] );
        propagate ( D3[8]  --> DOUT[8] );
        propagate ( D3[9]  --> DOUT[9] );
        propagate ( D3[10] --> DOUT[10] );
        propagate ( D3[11] --> DOUT[11] );
        propagate ( D3[12] --> DOUT[12] );
        propagate ( D3[13] --> DOUT[13] );
        propagate ( D3[14] --> DOUT[14] );
        propagate ( D3[15] --> DOUT[15] );
        propagate ( D3[16] --> DOUT[16] );
        propagate ( D3[17] --> DOUT[17] );
        propagate ( D3[18] --> DOUT[18] );
        propagate ( D3[19] --> DOUT[19] );
        propagate ( D3[20] --> DOUT[20] );
        propagate ( D3[21] --> DOUT[21] );
        propagate ( D3[22] --> DOUT[22] );
        propagate ( D3[23] --> DOUT[23] );
        propagate ( D3[24] --> DOUT[24] );
        propagate ( D3[25] --> DOUT[25] );
        propagate ( D3[26] --> DOUT[26] );
        propagate ( D3[27] --> DOUT[27] );
        propagate ( D3[28] --> DOUT[28] );
        propagate ( D3[29] --> DOUT[29] );
        propagate ( D3[30] --> DOUT[30] );
        propagate ( D3[31] --> DOUT[31] );
        propagate ( D3[32] --> DOUT[32] );
        propagate ( D3[33] --> DOUT[33] );
        propagate ( D3[34] --> DOUT[34] );
        propagate ( D3[35] --> DOUT[35] );
        propagate ( D3[36] --> DOUT[36] );
         }
    }
    
    
    
    
  // if (IN_SEL == 2'b00)
  // {
  //     propagate ( D0[36:0] --> DOUT );
  // }
  // if (IN_SEL == 2'b01)
  // {
  //     propagate ( D1[36:0] --> DOUT );
  // }
  // if (IN_SEL == 2'b10)
  // {
  //     propagate ( D2[36:0] --> DOUT );
  // }
  // else
  // {
  //     propagate ( D3[36:0] --> DOUT );
  // }
};