*****************************************************************

Copyright (c) 2014 by SHENZHEN PANGO MICROSYSTEMS CO.,LTD
ALL RIGHTS RESERVED.

THE SOURCE CODE CONTAINED HEREIN IS PROPRIETARY TO PANGO MICROSYSTEMS, INC.
IT SHALL NOT BE REPRODUCED OR DISCLOSED IN WHOLE OR IN PART OR USED BY
PARTIES WITHOUT WRITTEN AUTHORIZATION FROM THE OWNER.

  Operator  [GTP_OSERDES_E2]

  Author    [Peifu Shen]

  Abstract  []

  Revision History:

  IMPORTANT [SCRIPT GENERATED, DO NOT EDIT MANUALLY!]

*******************************************************************************/

tech
operator GTP_OSERDES_E2
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string OSERDES_MODE = "SDR4TO1",
        string TSERDES_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string UPD0_SHIFT_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string UPD1_SHIFT_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit INIT_SET[1:0] = 2'b00,
        string GRS_TYPE_DQ = "RESET",
        string LRS_TYPE_DQ0 = "ASYNC_RESET",
        string LRS_TYPE_DQ1 = "ASYNC_RESET",
        string LRS_TYPE_DQ2 = "ASYNC_RESET",
        string LRS_TYPE_DQ3 = "ASYNC_RESET",
        string GRS_TYPE_TQ = "RESET",
        string LRS_TYPE_TQ0 = "ASYNC_RESET",
        string LRS_TYPE_TQ1 = "ASYNC_RESET",
        string LRS_TYPE_TQ2 = "ASYNC_RESET",
        string LRS_TYPE_TQ3 = "ASYNC_RESET",
        string TRI_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string TBYTE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string MIPI_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string OCASCADE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        input RST,
        input OCE,
        input TCE,
        input OCLKDIV,
        input SERCLK,
        input OCLK,
        input MIPI_CTRL,
        input UPD0_SHIFT,
        input UPD1_SHIFT,
        input OSHIFTIN0,
        input OSHIFTIN1,
        input DI[7:0],
        input TI[1:0],
        input TBYTE_IN,
        output OSHIFTOUT0,
        output OSHIFTOUT1,
        output TQ,
        output DO
    );
};










