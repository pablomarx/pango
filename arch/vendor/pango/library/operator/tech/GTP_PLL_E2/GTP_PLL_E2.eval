*****************************************************************

Copyright (c) 2014 by SHENZHEN PANGO MICROSYSTEMS CO.,LTD
ALL RIGHTS RESERVED.

THE SOURCE CODE CONTAINED HEREIN IS PROPRIETARY TO PANGO MICROSYSTEMS, INC.
IT SHALL NOT BE REPRODUCED OR DISCLOSED IN WHOLE OR IN PART OR USED BY
PARTIES WITHOUT WRITTEN AUTHORIZATION FROM THE OWNER.

  Operator  [GTP_PLL_E2]

  Author    [Peifu Shen]

  Abstract  []

  Revision History:

  IMPORTANT [SCRIPT GENERATED, DO NOT EDIT MANUALLY!]

*******************************************************************************/

tech
operator GTP_PLL_E2
{
    parameter
    (
        real CLKIN_FREQ = 50.0,
        string PFDEN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PFDEN_APB_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit LOCK_MODE = 1'b0 /* 0 | 1 */,
        int STATIC_RATIOI = 1,
        int STATIC_RATIO0 = 1,
        int STATIC_RATIO1 = 1,
        int STATIC_RATIO2 = 1,
        int STATIC_RATIO3 = 1,
        int STATIC_RATIOF = 1,
        string FRACN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int FRACN_DIV = 0,
        string PHASE_APB_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int STATIC_PHASE0 = 0,
        int STATIC_PHASE1 = 0,
        int STATIC_PHASE2 = 0,
        int STATIC_PHASE3 = 0,
        int STATIC_CPHASE0 = 0,
        int STATIC_CPHASE1 = 0,
        int STATIC_CPHASE2 = 0,
        int STATIC_CPHASE3 = 0,
        string VCOCLK_BYPASS0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string VCOCLK_BYPASS1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string VCOCLK_BYPASS2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string VCOCLK_BYPASS3 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int ODIV0_CLKIN_SEL = 0,
        int ODIV1_CLKIN_SEL = 0,
        int ODIV2_CLKIN_SEL = 0,
        int ODIV3_CLKIN_SEL = 0,
        int CLKOUT0_SEL = 0,
        int CLKOUT1_SEL = 0,
        int CLKOUT2_SEL = 0,
        int CLKOUT3_SEL = 0,
        string CLKOUT0_SYN_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT1_SYN_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT2_SYN_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT3_SYN_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string INTERNAL_FB = "CLKOUT0" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "DISABLE | CLKOUT0 | CLKOUT1 | CLKOUT2 | CLKOUT3" */,
        string EXTERNAL_FB = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "DISABLE | CLKOUT0 | CLKOUT1 | CLKOUT2 | CLKOUT3" */,
        string BANDWIDTH = "OPTIMIZED",
        string STDBY_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string RST_INNER_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string RSTODIV_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string RSTODIV2_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string RSTODIV3_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        output CLKOUT,
        output CLKOUT0,
        output CLKOUT1,
        output CLKOUT2,
        output CLKOUT3,
        output PHASE_SOURCE,
        output LOCK,
        input CLKIN1,
        input CLKIN2,
        input CLKFB,
        input CLKIN_SEL,
        input PFDEN,
        input PHASE_SEL[1:0],
        input PHASE_DIR,
        input PHASE_STEP_N,
        input LOAD_PHASE,
        input CPHASE_STEP_N,
        input CLKOUT0_SYN,
        input CLKOUT1_SYN,
        input CLKOUT2_SYN,
        input CLKOUT3_SYN,
        input STDBY,
        input PLL_PWD,
        input RST,
        input RSTODIV,
        input RSTODIV2,
        input RSTODIV3,
        input APB_CLK,
        input APB_RST_N,
        input APB_ADDR[4:0],
        input APB_SEL,
        input APB_EN,
        input APB_WRITE,
        input APB_WDATA[7:0]
    );
};










