*****************************************************************

Copyright (c) 2014 by SHENZHEN PANGO MICROSYSTEMS CO.,LTD
ALL RIGHTS RESERVED.

THE SOURCE CODE CONTAINED HEREIN IS PROPRIETARY TO PANGO MICROSYSTEMS, INC.
IT SHALL NOT BE REPRODUCED OR DISCLOSED IN WHOLE OR IN PART OR USED BY
PARTIES WITHOUT WRITTEN AUTHORIZATION FROM THE OWNER.

  Operator  [GTP_IOLHR_DFT]

  Author    [XuYongji]

  Abstract  [The IOLHR]

  Revision History:

  IMPORTANT [SCRIPT GENERATED, DO NOT EDIT MANUALLY!]

*******************************************************************************/

tech
operator GTP_IOLHR_DFT
{
    parameter
    (
        string DYN_CLKDIVPOL = "FALSE",
        string OVERSAMPLE_EN = "FALSE",
        string DYN_CLKPOL = "FALSE",
        string IHSMEM_EN = "FALSE",
        string OCLKBPOL = "FALSE",
        string OCLKPOL = "FALSE",
        string CLK_POL0 = "FALSE",
        string CLK_POL1 = "FALSE",
        string CLK_POL2 = "FALSE",
        string CLK_POL3 = "FALSE",
        string LSMEM_EN = "FALSE",
        string OPPOSITE_EN = "FALSE",
        string CLK_POL4 = "FALSE",
        string CLK_POL5 = "FALSE",
        string CLK_POL6 = "FALSE",
        string IDLY_EN = "FALSE",
        bit    IDLY_SET[7:0] = 8'b00000000,
        string IDYN_EN = "FALSE",
        string ZHOLD_EN = "FALSE",
        bit    ZHOLD_SET[3:0] = 4'b0000,
        string ODLY_EN = "FALSE",
        bit    ODLY_SET[7:0] = 8'b00000000,
        string ODYN_EN = "FALSE",
        bit    GRS_DIS = 1'b0,
        string D_POL0 = "FALSE",
        string D_POL1 = "FALSE",
        bit    D_SEL0 = 1'b0,
        bit    D_SEL1 = 1'b0,
        bit    D_SEL2 = 1'b0,
        bit    D_SEL3 = 1'b0,
        bit    D_SEL4[1:0] = 2'b00,
        bit    D_SEL5[1:0] = 2'b00,
        bit    D_SEL6[1:0] = 2'b00,
        string TEST_EN0 = "FALSE",
        string TEST_EN1 = "FALSE",
        string MIPI_EN = "FALSE",
        string DDRI_EN = "FALSE",
        string DES_DDREN = "FALSE",
        string DES_SDREN = "FALSE",
        string ISERDES_MODE = "SDR1TO2",
        string SAMEPIPELINE_EN = "FALSE",
        string ISAME_EN = "FALSE",
        string IOPPOSITE_EN = "FALSE",
        string IDFFEN = "FALSE",
        string ILTHEN = "FALSE",
        string MASTER = "MASTER",
        string NETWORKING_EN = "FALSE",
        string BITSLIP_EN = "FALSE",
        string ISR_POL = "FALSE",
        string ISR_SYNC = "ASYNC",
        string ISR_EN = "FALSE",
        bit    NUM_ICE = 1'b0,
        string IFIFO_EN = "FALSE",
        bit    INIT_Q0 = 1'b0,
        bit    INIT_Q1 = 1'b0,
        bit    INIT_Q2 = 1'b0,
        bit    INIT_Q3 = 1'b0,
        string SRVAL_Q0 = "RESET",
        string SRVAL_Q1 = "RESET",
        string SRVAL_Q2 = "RESET",
        string SRVAL_Q3 = "RESET",
        string OSR_POL = "FALSE",
        string O_SYNC = "ASYNC",
        string SRO_EN = "FALSE",
        bit    INIT_DQ = 1'b0,
        string SRVAL_DQ0 = "RESET",
        string SRVAL_DQ1 = "RESET",
        string SRVAL_DQ2 = "RESET",
        string SRVAL_DQ3 = "RESET",
        string PDIFF = "FALSE",
        string OSERDES_EN = "FALSE",
        string OSERDES_MODE = "SDR2TO1",
        string SER_SDREN = "FALSE",
        string SER_DDREN = "FALSE",
        string OHSMEM_EN = "FALSE",
        string ODFFEN = "FALSE",
        string OLTHEN = "FALSE",
        string OCASCADE_EN = "FALSE",
        bit    DO_SEL = 1'b0,
        string UPD0_SHIFTEN = "FALSE",
        string UPD1_SHIFTEN = "FALSE",
        bit    DQMODE[1:0] = 2'b00,
        bit    INIT_SET[1:0] = 2'b00,
        string T_SYNC = "ASYNC",
        string SRT_EN = "FALSE",
        bit    INIT_TQ = 1'b0,
        string SRVAL_TQ0 = "RESET",
        string SRVAL_TQ1 = "RESET",
        string SRVAL_TQ2 = "RESET",
        string SRVAL_TQ3 = "RESET",
        string TBYTE_EN = "FALSE",
        string TRI_EN = "FALSE",
        bit    TQMODE[1:0] = 2'b00
    );

    port
    (
        input IFIFO_WADDR[2:0]    ,
        input IFIFO_RADDR[2:0]    ,
        input TX_DATA[7:0]        ,
        input TS_CTRL[1:0]        ,
        input IDLY_DYN_SET[7:0]   ,
        input ODLY_DYN_SET[7:0]   ,
        input DI                  ,
        input DI_N                ,
        input DI_MIPI             ,
        input DI_FROM_SRB         ,
        input ISHIFTIN0           ,
        input ISHIFTIN1           ,
        input BITSLIP             ,
        input ISR_IOLHR           ,
        input ICE0                ,
        input ICE1                ,
//        input DYN_CLKPOL          ,
//        input DYN_CLKDIVPOL       ,
        input ICLK                ,
        input ICLKB               ,
        input DESCLK              ,
        input SERCLK              ,
        input SERCLKB             ,
        input OCLK                ,
        input OCLKB               ,
        input ICLKDIV             ,
        input OCLKDIV             ,
        input OCLKDIVB            ,
        input OSHIFTIN0           ,
        input OSHIFTIN1           ,
        input OSR_IOLHR           ,
        input OCE                 ,
        input UPD0_SHIFT          ,
        input UPD1_SHIFT          ,
        input DO_CAS_IN           ,
        input INBUF_DYN_DIS_N_I   ,
        input MIPI_SW_DYN_I       ,
        input TCE                 ,
        input TERM_BYTEIN         ,
        input T_BYTEIN            ,
        input TO_CAS_IN           ,
        input TERM_CAS_IN         ,
        input IDLY_SEL            ,
        input ODLY_SEL            ,
        output RX_DATA[7:0]       ,
        output ISHIFTOUT0         ,
        output ISHIFTOUT1         ,
        output DI_TO_CLK          ,
        output DI_TO_CLKB         ,
        output RSTN_OUT           ,
        output MIPI_SW_DYN_O      ,
        output INBUF_DYN_DIS_N_O  ,
        output DO_P               ,
        output DO_N               ,
        output OSHIFTOUT0         ,
        output OSHIFTOUT1         ,
        output OFB                ,
        output DO_CAS_OUT         ,
        output TERM               ,
        output TERM_CAS_OUT       ,
        output TO_CAS_OUT
    );
};
