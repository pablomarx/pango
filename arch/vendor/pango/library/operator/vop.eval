***********************************************************************
 *
 *  This is the library of cell for post configuration timing and behavior modelling. 
 *  Contrast to 'top' for tech operator,'vop' is for Verification Operator. For the sake
 *  of consistency,the name of all verification operator starts with "V_"
 *
 *  All cells in the netlist used by 3rd party timing/functional verification tools are
 *  modeled in this file.
 *
 *  There MUST be a cell with EXACT the same name in both verification Verilog library and
 *  Liberty library. For example,cell 'V_LUT4' must be found in both libraries
 *
 ***********************************************************************************/

design
operator V_LUT5
{
    parameter
    (
        bit INIT[31:0] = 32'h0000_0000,
        string SECTION = ""    // A, B, C, D,
    );

    port
    (
        input  I0,I1,I2,I3,I4,
        output Y
    );
};

design
operator V_LUT5M
{
    parameter
    (
        bit INIT[31:0] = 32'h0000_0000,
        string SECTION = ""    // A, B, C, D,
    );

    port
    (
        input  I0,I1,I2,I3,I4,ID,
        output Z
    );
};

design
operator V_FFSYN
{
    parameter
    (
        string GRS_EN    = "FALSE", // "TRUE"; "FALSE"
        string SET_RESET = "SET",   // "SET" "RESET"
        string LRS_EN    = "FALSE",
        string SECTION   = ""       // A, B, C, D, AB, CD, TFF OFF IFF 
    );

    port
    (
        input  SR,CE,CK,D,
        output Q
    );
};

design
operator V_FFASYN
{
    parameter
    (
        string GRS_EN    = "FALSE", // "TRUE"; "FALSE"
        string SET_RESET = "SET",   // "SET" "RESET"
        string LRS_EN    = "FALSE",
        string SECTION   = ""       // A, B, C, D,  AB, CD, TFF OFF IFF
    );

    port
    (
        input  SR,CE,CK,D,
        output Q
    );
};

design
operator V_LAASYN
{
    parameter
    (
        string GRS_EN    = "FALSE", // "TRUE"; "FALSE"
        string SET_RESET = "SET",   // "SET" "RESET"
        string LRS_EN    = "FALSE",
        string CLK_POL   = "FALSE",
        string SECTION   = ""       // TFF OFF IFF
    );

    port
    (
        input  SR,CE,CK,D,
        output Q
    );
};

design
operator V_LUT5CARRY
{
    parameter
    (
        bit INIT[31:0] = 32'h0000_0000,
        string ID_TO_LUT = "FALSE",  // I0 or ID
        string CIN_TO_LUT = "TRUE",  // CIN or I0
        string I4_TO_CARRY = "TRUE", // I4 or Y1
        string I4_TO_LUT = "FALSE",  // I4 or 1'b1
        string SECTION = ""          // A, B, C, D,
    );

    port
    (
        input CIN, I0, ID, I1, I2, I3, I4,
        output COUT, S
    );
}

design
operator V_LUT5CARRY2
{
    parameter
    (
        bit INIT_A[31:0] = 32'h0000_0000,
        string ID_TO_LUT_A = "FALSE",  // I0 or ID
        string CIN_TO_LUT_A = "TRUE",  // CIN or I0
        string I4_TO_CARRY_A = "TRUE", // I4 or Y1
        string I4_TO_LUT_A = "FALSE", // I4 or 1'b1

        bit INIT_B[31:0] = 32'h0000_0000,
        string ID_TO_LUT_B = "FALSE",  // I0 or ID
        string CIN_TO_LUT_B = "TRUE",  // CIN or I0
        string I4_TO_CARRY_B = "TRUE", // I4 or Y1
        string I4_TO_LUT_B = "FALSE", // I4 or 1'b1
        string SECTION = ""            // AB, CD,
    );

    port
    (
        input  CIN, A0, AD, A1, A2, A3, A4, B0, BD, B1, B2, B3, B4,
        output COUT, FCOUT, S0, S1
    );
}

design
operator V_MUX4
{
    parameter
    (
        string SECTION = ""     // A, B, C, D, AF, BF, CF, DF
    );
    port
    (
        input  I0,I1,I2,I3,S0,S1,
        output Z
    );
};

design
operator V_MUX2LUT6
{
    parameter
    (
        string SECTION = ""     // AB, CD
    );
    port
    (
        input  I0,I1,S,
        output Z
    );
}; 

design
operator V_MUX2
{
    port
    (
        input I0,I1,SEL,
        output Z
    );
};

design
operator V_MUX2LUT7
{
    port
    (
        input  I0,I1,S,
        output Z
    );
};

design
operator V_MUX2LUT8
{
    port
    (
        input  I0,I1,S,
        output Z
    );
};

design
operator V_MUX
{
    parameter
    (
        string SEL     = "I0",
        string SECTION = ""    // AB, CD
    );
    port
    (
        input  I0,I1,
        output Y
    );
};

design
operator V_INV
{
    parameter
    (
        string SECTION = ""    // CLK_POS CLK_INV_DUMY  CE_INV_DUMY  RS_INV_DUMY 
    );
    port
    (
        input  I,
        output Z
    );
};

design
operator V_BUF
{
    parameter
    (
        string SECTION = ""   // IBUF_IOL OBUF_IOL_DO OBUF_IOL_DOOUT
    );
    port
    (
        input  I = 1'b0,
        output Z
    );
};

design
operator V_IBUF
{
    parameter
    (
        string IOSTANDARD = "DEFAULT",
        string TERM_DDR = "ON"
    );
    port
    (
        input  I,
        output O
    );
};

design
operator V_INBUF_MIPI
{
    parameter
    (
        string MIPI_MODE  = "MASTER" , // SLAVE
        string IOSTANDARD = "DEFAULT",
        string TERM_DIFF = "ON"
    );
    port
    (
        input  I,
        input  IB,
        input  TS,
        input  M,
        output O
    );
};

design
operator V_IBUFDS
{
    parameter
    (
        string IOSTANDARD = "DEFAULT",
        string TERM_DIFF = "ON"
    );
    port
    (
        input  I, IB,
        output O
    );
};

design
operator V_OBUF
{
    parameter
    (
        string IOSTANDARD = "DEFAULT",
        string SLEW_RATE = "SLOW",
        string DRIVE_STRENGTH = "8"
    );
    port
    (
        input  I,
        output O
    );
}; 

design
operator V_OBUFDS
{
    parameter
    (
        string IOSTANDARD = "DEFAULT"
    );
    port
    (
        input  I,
        output O, OB
    );
};

design
operator V_OBUFT
{
    parameter
    (
        string IOSTANDARD = "DEFAULT",
        string SLEW_RATE = "SLOW",
        string DRIVE_STRENGTH = "8"
    );
    port
    (
        input I,T,
        output O
    );
};

design
operator V_OUTBUFT_MIPI
{
    parameter
    (
        string IOSTANDARD = "DEFAULT",
        string SLEW_RATE = "SLOW",
        string DRIVE_STRENGTH = "8"
    );
    port
    (
        input I,T,M,
        output O,OB
    );
};

design
operator V_OBUFTDS
{
    parameter
    (
        string IOSTANDARD = "DEFAULT"
    );
    port
    (
        input  I, T,
        output O, OB
    );
};

design
operator V_APM
{
    parameter
    (
        string GRS_EN = "TRUE",
        
        //  bit for INPUT UNIT
        bit CLK_IR_0_XA[1:0]  = 2'b00,
        bit CLK_IR_1_XA[1:0]  = 2'b00,
        bit CLK_IR_2_YA[1:0]  = 2'b00,
        bit CLK_IR_3_YA[1:0]  = 2'b00,
        bit CLK_IR_4_ZA[1:0]  = 2'b00,
        bit CLK_IR_5_ZA[1:0]  = 2'b00,
        bit CLK_IR_6_ZA[1:0]  = 2'b00,
        bit CLK_IR_7_XB[1:0]  = 2'b00,
        bit CLK_IR_8_XB[1:0]  = 2'b00,
        bit CLK_IR_9_YB[1:0]  = 2'b00,
        bit CLK_IR_10_YB[1:0] = 2'b00,
        bit CLK_IR_11_ZB[1:0] = 2'b00,
        bit CLK_IR_12_ZB[1:0] = 2'b00,
        bit CLK_IR_13_ZB[1:0] = 2'b00,
        bit CE_IR_0_XA[1:0]   = 2'b00,
        bit CE_IR_1_XA[1:0]   = 2'b00,
        bit CE_IR_2_YA[1:0]   = 2'b00,
        bit CE_IR_3_YA[1:0]   = 2'b00,
        bit CE_IR_4_ZA[1:0]   = 2'b00,
        bit CE_IR_5_ZA[1:0]   = 2'b00,
        bit CE_IR_6_ZA[1:0]   = 2'b00,
        bit CE_IR_7_XB[1:0]   = 2'b00,
        bit CE_IR_8_XB[1:0]   = 2'b00,
        bit CE_IR_9_YB[1:0]   = 2'b00,
        bit CE_IR_10_YB[1:0]  = 2'b00,
        bit CE_IR_11_ZB[1:0]  = 2'b00,
        bit CE_IR_12_ZB[1:0]  = 2'b00,
        bit CE_IR_13_ZB[1:0]  = 2'b00,
        bit RST_IR_0_XA[1:0]  = 2'b00,
        bit RST_IR_1_XA[1:0]  = 2'b00,
        bit RST_IR_2_YA[1:0]  = 2'b00,
        bit RST_IR_3_YA[1:0]  = 2'b00,
        bit RST_IR_4_ZA[1:0]  = 2'b00,
        bit RST_IR_5_ZA[1:0]  = 2'b00,
        bit RST_IR_6_ZA[1:0]  = 2'b00,
        bit RST_IR_7_XB[1:0]  = 2'b00,
        bit RST_IR_8_XB[1:0]  = 2'b00,
        bit RST_IR_9_YB[1:0]  = 2'b00,
        bit RST_IR_10_YB[1:0] = 2'b00,
        bit RST_IR_11_ZB[1:0] = 2'b00,
        bit RST_IR_12_ZB[1:0] = 2'b00,
        bit RST_IR_13_ZB[1:0] = 2'b00,
        bit SYNC_IR_0_XA      = 1'b0,
        bit SYNC_IR_1_XA      = 1'b0,
        bit SYNC_IR_2_YA      = 1'b0,
        bit SYNC_IR_3_YA      = 1'b0,
        bit SYNC_IR_4_ZA      = 1'b0,
        bit SYNC_IR_5_ZA      = 1'b0,
        bit SYNC_IR_6_ZA      = 1'b0,
        bit SYNC_IR_7_XB      = 1'b0,
        bit SYNC_IR_8_XB      = 1'b0,
        bit SYNC_IR_9_YB      = 1'b0,
        bit SYNC_IR_10_YB     = 1'b0,
        bit SYNC_IR_11_ZB     = 1'b0,
        bit SYNC_IR_12_ZB     = 1'b0,
        bit SYNC_IR_13_ZB     = 1'b0,
        bit IR_BYP_0_XA        = 1'b0,
        bit IR_BYP_1_XA        = 1'b0,
        bit IR_BYP_2_YA        = 1'b0,
        bit IR_BYP_3_YA        = 1'b0,
        bit IR_BYP_4_ZA        = 1'b0,
        bit IR_BYP_5_ZA        = 1'b0,
        bit IR_BYP_6_ZA        = 1'b0,
        bit IR_BYP_7_XB        = 1'b0,
        bit IR_BYP_8_XB        = 1'b0,
        bit IR_BYP_9_YB        = 1'b0,
        bit IR_BYP_10_YB       = 1'b0,
        bit IR_BYP_11_ZB       = 1'b0,
        bit IR_BYP_12_ZB       = 1'b0,
        bit IR_BYP_13_ZB       = 1'b0,
        bit OPCD_BYP[8:0]     = 9'h00,
        bit CONST_IA0[18:0]   = 19'h00000,
        bit CONST_IA1[18:0]   = 19'h00000,
        bit SOURCEA[1:0]      = 2'b00,
        bit SOURCEB[1:0]      = 2'b00,
        bit SOURCEC[1:0]      = 2'b00,
        bit IRDSEL_B[1:0]     = 2'b00,
        bit IRDSEL_C[1:0]     = 2'b00,
        bit DBYP_C[1:0]       = 2'b00,

        bit DXIA_SIGNED_POL = 1'b0,
        bit DYIA_SIGNED_POL = 1'b0,
        bit DZIA_SIGNED_POL = 1'b0,
        bit DXIB_SIGNED_POL = 1'b0,
        bit DYIB_SIGNED_POL = 1'b0,
        bit DZIB_SIGNED_POL = 1'b0,
        bit OP_PRAD_A_POL = 1'b0,
        bit OP_PRAD_B_POL = 1'b0,
        bit OPCD_DYN_POL[10:0] = 11'h000,

        bit OPCD[10:0]         = 11'h000,
        bit OPCD_DYN_SEL[10:0] = 11'h000,
        bit CLK_CTIR[7:0]      = 8'h00,
        bit CE_CTIR[7:0]       = 8'h00,
        bit RST_CTIR[7:0]      = 8'h00,
        bit SYNC_CTIR[3:0]     = 4'h0,
        bit CTRL_IRBYP[4:0]    = 5'h00,
        bit IRSHF_B_SEL         = 1'b0,
        bit CYSIGNED_SEL        = 1'b0,
        bit IRSHF_C_SEL         = 1'b0,
        bit CZSIGNED_SEL        = 1'b0,
        bit SIGNED_ENA[1:0]     = 2'b00,
        bit SIGNED_ENB[1:0]     = 2'b00,
        bit SIGNED_ENC[1:0]     = 2'b00,
        bit DXIA_PSE[16:0]      = 17'h0_0000,
        bit DYIA_PSE[16:0]      = 17'h0_0000,
        bit DZIA_PSE[31:0]      = 32'h0000_0000,
        bit DXIB_PSE[16:0]      = 17'h0_0000,
        bit DYIB_PSE[16:0]      = 17'h0_0000,
        bit DZIB_PSE[30:0]      = 31'h0000_0000,
        //   bit for PRADR UNIT
        bit PRAD_EN[1:0]       = 2'b00,
        bit    PRAD26             = 1'b0,
        bit CLK_PRAD_0_XA[1:0] = 2'b00,
        bit CLK_PRAD_1_XA[1:0] = 2'b00,
        bit CLK_PRAD_2_YA[1:0] = 2'b00,
        bit CLK_PRAD_3_YA[1:0] = 2'b00,
        bit CLK_PRAD_4_XB[1:0] = 2'b00,
        bit CLK_PRAD_5_XB[1:0] = 2'b00,
        bit CLK_PRAD_6_YB[1:0] = 2'b00,
        bit CLK_PRAD_7_YB[1:0] = 2'b00,
        bit CE_PRAD_0_XA[1:0]  = 2'b00,
        bit CE_PRAD_1_XA[1:0]  = 2'b00,
        bit CE_PRAD_2_YA[1:0]  = 2'b00,
        bit CE_PRAD_3_YA[1:0]  = 2'b00,
        bit CE_PRAD_4_XB[1:0]  = 2'b00,
        bit CE_PRAD_5_XB[1:0]  = 2'b00,
        bit CE_PRAD_6_YB[1:0]  = 2'b00,
        bit CE_PRAD_7_YB[1:0]  = 2'b00,
        bit RST_PRAD_0_XA[1:0] = 2'b00,
        bit RST_PRAD_1_XA[1:0] = 2'b00,
        bit RST_PRAD_2_YA[1:0] = 2'b00,
        bit RST_PRAD_3_YA[1:0] = 2'b00,
        bit RST_PRAD_4_XB[1:0] = 2'b00,
        bit RST_PRAD_5_XB[1:0] = 2'b00,
        bit RST_PRAD_6_YB[1:0] = 2'b00,
        bit RST_PRAD_7_YB[1:0] = 2'b00,
        bit SYNC_PRAD_0_XA     = 1'b0,
        bit SYNC_PRAD_1_XA     = 1'b0,
        bit SYNC_PRAD_2_YA     = 1'b0,
        bit SYNC_PRAD_3_YA     = 1'b0,
        bit SYNC_PRAD_4_XB     = 1'b0,
        bit SYNC_PRAD_5_XB     = 1'b0,
        bit SYNC_PRAD_6_YB     = 1'b0,
        bit SYNC_PRAD_7_YB     = 1'b0,
        bit PRADOR_BYP_0_XA    = 1'b0,
        bit PRADOR_BYP_1_XA    = 1'b0,
        bit PRADOR_BYP_2_YA    = 1'b0,
        bit PRADOR_BYP_3_YA    = 1'b0,
        bit PRADOR_BYP_4_XB    = 1'b0,
        bit PRADOR_BYP_5_XB    = 1'b0,
        bit PRADOR_BYP_6_YB    = 1'b0,
        bit PRADOR_BYP_7_YB    = 1'b0,
        //  bit for MULT UNIT
        bit CLK_PR_0_MA[1:0]   = 2'b00,
        bit CLK_PR_1_MA[1:0]   = 2'b00,
        bit CLK_PR_2_MB[1:0]   = 2'b00,
        bit CLK_PR_3_MB[1:0]   = 2'b00,
        bit CLK_PR_4_XA[1:0]   = 2'b00,
        bit CLK_PR_5_XB[1:0]   = 2'b00,
        bit CLK_PR_6_YA[1:0]   = 2'b00,
        bit CLK_PR_7_YB[1:0]   = 2'b00,
        bit CLK_PR_8_ZA[1:0]   = 2'b00,
        bit CLK_PR_9_ZB[1:0]   = 2'b00,
        bit CE_PR_0_MA[1:0]    = 2'b00,
        bit CE_PR_1_MA[1:0]    = 2'b00,
        bit CE_PR_2_MB[1:0]    = 2'b00,
        bit CE_PR_3_MB[1:0]    = 2'b00,
        bit CE_PR_4_XA[1:0]    = 2'b00,
        bit CE_PR_5_XB[1:0]    = 2'b00,
        bit CE_PR_6_YA[1:0]    = 2'b00,
        bit CE_PR_7_YB[1:0]    = 2'b00,
        bit CE_PR_8_ZA[1:0]    = 2'b00,
        bit CE_PR_9_ZB[1:0]    = 2'b00,
        bit RST_PR_0_MA[1:0]   = 2'b00,
        bit RST_PR_1_MA[1:0]   = 2'b00,
        bit RST_PR_2_MB[1:0]   = 2'b00,
        bit RST_PR_3_MB[1:0]   = 2'b00,
        bit RST_PR_4_XA[1:0]   = 2'b00,
        bit RST_PR_5_XB[1:0]   = 2'b00,
        bit RST_PR_6_YA[1:0]   = 2'b00,
        bit RST_PR_7_YB[1:0]   = 2'b00,
        bit RST_PR_8_ZA[1:0]   = 2'b00,
        bit RST_PR_9_ZB[1:0]   = 2'b00,
        bit SYNC_PR_0_MA       = 1'b0,
        bit SYNC_PR_1_MA       = 1'b0,
        bit SYNC_PR_2_MB       = 1'b0,
        bit SYNC_PR_3_MB       = 1'b0,
        bit SYNC_PR_4_XA       = 1'b0,
        bit SYNC_PR_5_XB       = 1'b0,
        bit SYNC_PR_6_YA       = 1'b0,
        bit SYNC_PR_7_YB       = 1'b0,
        bit SYNC_PR_8_ZA       = 1'b0,
        bit SYNC_PR_9_ZB       = 1'b0,
        bit PR_BYP_0_MA        = 1'b0,
        bit PR_BYP_1_MA        = 1'b0,
        bit PR_BYP_2_MB        = 1'b0,
        bit PR_BYP_3_MB        = 1'b0,
        bit PR_BYP_4_XA        = 1'b0,
        bit PR_BYP_5_XB        = 1'b0,
        bit PR_BYP_6_YA        = 1'b0,
        bit PR_BYP_7_YB        = 1'b0,
        bit PR_BYP_8_ZA        = 1'b0,
        bit PR_BYP_9_ZB        = 1'b0,
        bit M9_MODE[1:0]       = 2'b00,
        bit M19_MODE[1:0]       = 2'b00,
        bit M27_MODE           = 1'b0,
        bit CLK_CTPR[3:0]      = 4'b0000,
        bit CE_CTPR[3:0]       = 4'b0000,
        bit RST_CTPR[3:0]      = 4'b0000,
        bit SYNC_CTPR[1:0]     = 2'b00,
        bit CTRL_PRBYP[2:0]    = 3'b00,
        //  bit for post unit
        bit CLK_OR_3_B[1:0]    = 2'b00,
        bit CLK_OR_2_B[1:0]    = 2'b00,
        bit CLK_OR_1_A[1:0]    = 2'b00,
        bit CLK_OR_0_A[1:0]    = 2'b00,
        bit CE_OR_3_B[1:0]     = 2'b00,
        bit CE_OR_2_B[1:0]     = 2'b00,
        bit CE_OR_1_A[1:0]     = 2'b00,
        bit CE_OR_0_A[1:0]     = 2'b00,
        bit RST_OR_3_B[1:0]    = 2'b00,
        bit RST_OR_2_B[1:0]    = 2'b00,
        bit RST_OR_1_A[1:0]    = 2'b00,
        bit RST_OR_0_A[1:0]    = 2'b00,
        bit SYNC_OR_3_B        = 1'b0,
        bit SYNC_OR_2_B        = 1'b0,
        bit SYNC_OR_1_A        = 1'b0,
        bit SYNC_OR_0_A        = 1'b0,
        bit OR_BYP_3_B         = 1'b0,
        bit OR_BYP_2_B         = 1'b0,
        bit OR_BYP_1_A         = 1'b0,
        bit OR_BYP_0_A         = 1'b0,
        bit RTI[63:0]          = 64'h0000_0000_0000_0000,
        bit SEL_SAB_CR27       = 1'b0,
        bit SEL_SAB_CR59       = 1'b0,
        bit FLAG_EN            = 1'b0,
        bit CR64_SAB           = 1'b0,
        bit SIGN_SELIR[1:0]    = 2'b00,
        bit TERNARY            = 1'b0,
        bit MASK01[64:0]       = 65'h0_0000_0000_0000_0000,
        bit MASKPAT[63:0]      = 64'h0000_0000_0000_0000,
        bit MCPAT[63:0]        = 64'h0000_0000_0000_0000,
        bit MASKPATSEL         = 1'b0,
        bit MCPATSEL           = 1'b0,
        bit CSIGN_EXT          = 1'b0,
        bit CSIGN_PRE          = 1'b0,
        bit SC_ALUEN           = 1'b0,
        bit SEL_SYO            = 1'b0,
        bit SEL_SZO            = 1'b0,
        bit OR2CASCADE_EN      = 1'b0
    );
    port
    (
        input  DXIA[17:0],
        input  DXIA_SIGNED,
        input  DYIA[17:0],
        input  DYIA_SIGNED,
        input  DZIA[31:0],
        input  DZIA_SIGNED,

        input  DXIB[17:0],
        input  DXIB_SIGNED,
        input  DYIB[17:0],
        input  DYIB_SIGNED,
        input  DZIB[31:0],
        input  DZIB_SIGNED,

        input  APM_OP_POST[10:0],
        input  APM_OP_IR[8:0],
        input  APM_OP_PRAD[1:0],

        input  CLK[3:0],
        input  CE[3:0],
        input  RST[3:0],

        input  CYI[26:0],
        input  CYI_SIGNED,
        output CYO[26:0],
        output CYO_SIGNED,

        input  CZI[26:0],
        input  CZI_SIGNED,
        output CZO[26:0],
        output CZO_SIGNED,

        input  CPI[64:0],
        input  CPI_SIGNED,
        output CPO[64:0],
        output CPO_SIGNED,
        output DPO[73:0]
    );
}

design
operator V_APM_H
{
    parameter
    (
        string GRS_EN = "TRUE",
        
        //  bit for INPUT UNIT
        bit CLK_IR_0_XA[1:0]  = 2'b00,
        bit CLK_IR_1_XA[1:0]  = 2'b00,
        bit CLK_IR_2_YA[1:0]  = 2'b00,
        bit CLK_IR_3_YA[1:0]  = 2'b00,
        bit CLK_IR_4_ZA[1:0]  = 2'b00,
        bit CLK_IR_5_ZA[1:0]  = 2'b00,
        bit CLK_IR_6_ZA[1:0]  = 2'b00,
        bit CLK_IR_7_XB[1:0]  = 2'b00,
        bit CLK_IR_8_XB[1:0]  = 2'b00,
        bit CLK_IR_9_YB[1:0]  = 2'b00,
        bit CLK_IR_10_YB[1:0] = 2'b00,
        bit CLK_IR_11_ZB[1:0] = 2'b00,
        bit CLK_IR_12_ZB[1:0] = 2'b00,
        bit CLK_IR_13_ZB[1:0] = 2'b00,
        bit CE_IR_0_XA[1:0]   = 2'b00,
        bit CE_IR_1_XA[1:0]   = 2'b00,
        bit CE_IR_2_YA[1:0]   = 2'b00,
        bit CE_IR_3_YA[1:0]   = 2'b00,
        bit CE_IR_4_ZA[1:0]   = 2'b00,
        bit CE_IR_5_ZA[1:0]   = 2'b00,
        bit CE_IR_6_ZA[1:0]   = 2'b00,
        bit CE_IR_7_XB[1:0]   = 2'b00,
        bit CE_IR_8_XB[1:0]   = 2'b00,
        bit CE_IR_9_YB[1:0]   = 2'b00,
        bit CE_IR_10_YB[1:0]  = 2'b00,
        bit CE_IR_11_ZB[1:0]  = 2'b00,
        bit CE_IR_12_ZB[1:0]  = 2'b00,
        bit CE_IR_13_ZB[1:0]  = 2'b00,
        bit RST_IR_0_XA[1:0]  = 2'b00,
        bit RST_IR_1_XA[1:0]  = 2'b00,
        bit RST_IR_2_YA[1:0]  = 2'b00,
        bit RST_IR_3_YA[1:0]  = 2'b00,
        bit RST_IR_4_ZA[1:0]  = 2'b00,
        bit RST_IR_5_ZA[1:0]  = 2'b00,
        bit RST_IR_6_ZA[1:0]  = 2'b00,
        bit RST_IR_7_XB[1:0]  = 2'b00,
        bit RST_IR_8_XB[1:0]  = 2'b00,
        bit RST_IR_9_YB[1:0]  = 2'b00,
        bit RST_IR_10_YB[1:0] = 2'b00,
        bit RST_IR_11_ZB[1:0] = 2'b00,
        bit RST_IR_12_ZB[1:0] = 2'b00,
        bit RST_IR_13_ZB[1:0] = 2'b00,
        bit SYNC_IR_0_XA      = 1'b0,
        bit SYNC_IR_1_XA      = 1'b0,
        bit SYNC_IR_2_YA      = 1'b0,
        bit SYNC_IR_3_YA      = 1'b0,
        bit SYNC_IR_4_ZA      = 1'b0,
        bit SYNC_IR_5_ZA      = 1'b0,
        bit SYNC_IR_6_ZA      = 1'b0,
        bit SYNC_IR_7_XB      = 1'b0,
        bit SYNC_IR_8_XB      = 1'b0,
        bit SYNC_IR_9_YB      = 1'b0,
        bit SYNC_IR_10_YB     = 1'b0,
        bit SYNC_IR_11_ZB     = 1'b0,
        bit SYNC_IR_12_ZB     = 1'b0,
        bit SYNC_IR_13_ZB     = 1'b0,
        bit IR_BYP_0_XA        = 1'b0,
        bit IR_BYP_1_XA        = 1'b0,
        bit IR_BYP_2_YA        = 1'b0,
        bit IR_BYP_3_YA        = 1'b0,
        bit IR_BYP_4_ZA        = 1'b0,
        bit IR_BYP_5_ZA        = 1'b0,
        bit IR_BYP_6_ZA        = 1'b0,
        bit IR_BYP_7_XB        = 1'b0,
        bit IR_BYP_8_XB        = 1'b0,
        bit IR_BYP_9_YB        = 1'b0,
        bit IR_BYP_10_YB       = 1'b0,
        bit IR_BYP_11_ZB       = 1'b0,
        bit IR_BYP_12_ZB       = 1'b0,
        bit IR_BYP_13_ZB       = 1'b0,
        bit OPCD_BYP[8:0]     = 9'h00,
        bit CONST_IA0[18:0]   = 19'h00000,
        bit CONST_IA1[18:0]   = 19'h00000,
        bit SOURCEA[1:0]      = 2'b00,
        bit SOURCEB[1:0]      = 2'b00,
        bit SOURCEC[1:0]      = 2'b00,
        bit IRDSEL_B[1:0]     = 2'b00,
        bit IRDSEL_C[1:0]     = 2'b00,
        bit DBYP_C[1:0]       = 2'b00,

        bit DXIA_SIGNED_POL = 1'b0,
        bit DYIA_SIGNED_POL = 1'b0,
        bit DZIA_SIGNED_POL = 1'b0,
        bit DXIB_SIGNED_POL = 1'b0,
        bit DYIB_SIGNED_POL = 1'b0,
        bit DZIB_SIGNED_POL = 1'b0,
        bit OP_PRAD_A_POL = 1'b0,
        bit OP_PRAD_B_POL = 1'b0,
        bit OPCD_DYN_POL[10:0] = 11'h000,

        bit OPCD[10:0]         = 11'h000,
        bit OPCD_DYN_SEL[10:0] = 11'h000,
        bit CLK_CTIR[7:0]      = 8'h00,
        bit CE_CTIR[7:0]       = 8'h00,
        bit RST_CTIR[7:0]      = 8'h00,
        bit SYNC_CTIR[3:0]     = 4'h0,
        bit CTRL_IRBYP[4:0]    = 5'h00,
        bit IRSHF_B_SEL         = 1'b0,
        bit CYSIGNED_SEL        = 1'b0,
        bit IRSHF_C_SEL         = 1'b0,
        bit CZSIGNED_SEL        = 1'b0,
        bit SIGNED_ENA[1:0]     = 2'b00,
        bit SIGNED_ENB[1:0]     = 2'b00,
        bit SIGNED_ENC[1:0]     = 2'b00,
        bit DXIA_PSE[16:0]      = 17'h0_0000,
        bit DYIA_PSE[16:0]      = 17'h0_0000,
        bit DZIA_PSE[31:0]      = 32'h0000_0000,
        bit DXIB_PSE[16:0]      = 17'h0_0000,
        bit DYIB_PSE[16:0]      = 17'h0_0000,
        bit DZIB_PSE[30:0]      = 31'h0000_0000,
        //   bit for PRADR UNIT
        bit PRAD_EN[1:0]       = 2'b00,
        bit    PRAD26             = 1'b0,
        bit CLK_PRAD_0_XA[1:0] = 2'b00,
        bit CLK_PRAD_1_XA[1:0] = 2'b00,
        bit CLK_PRAD_2_YA[1:0] = 2'b00,
        bit CLK_PRAD_3_YA[1:0] = 2'b00,
        bit CLK_PRAD_4_XB[1:0] = 2'b00,
        bit CLK_PRAD_5_XB[1:0] = 2'b00,
        bit CLK_PRAD_6_YB[1:0] = 2'b00,
        bit CLK_PRAD_7_YB[1:0] = 2'b00,
        bit CE_PRAD_0_XA[1:0]  = 2'b00,
        bit CE_PRAD_1_XA[1:0]  = 2'b00,
        bit CE_PRAD_2_YA[1:0]  = 2'b00,
        bit CE_PRAD_3_YA[1:0]  = 2'b00,
        bit CE_PRAD_4_XB[1:0]  = 2'b00,
        bit CE_PRAD_5_XB[1:0]  = 2'b00,
        bit CE_PRAD_6_YB[1:0]  = 2'b00,
        bit CE_PRAD_7_YB[1:0]  = 2'b00,
        bit RST_PRAD_0_XA[1:0] = 2'b00,
        bit RST_PRAD_1_XA[1:0] = 2'b00,
        bit RST_PRAD_2_YA[1:0] = 2'b00,
        bit RST_PRAD_3_YA[1:0] = 2'b00,
        bit RST_PRAD_4_XB[1:0] = 2'b00,
        bit RST_PRAD_5_XB[1:0] = 2'b00,
        bit RST_PRAD_6_YB[1:0] = 2'b00,
        bit RST_PRAD_7_YB[1:0] = 2'b00,
        bit SYNC_PRAD_0_XA     = 1'b0,
        bit SYNC_PRAD_1_XA     = 1'b0,
        bit SYNC_PRAD_2_YA     = 1'b0,
        bit SYNC_PRAD_3_YA     = 1'b0,
        bit SYNC_PRAD_4_XB     = 1'b0,
        bit SYNC_PRAD_5_XB     = 1'b0,
        bit SYNC_PRAD_6_YB     = 1'b0,
        bit SYNC_PRAD_7_YB     = 1'b0,
        bit PRADOR_BYP_0_XA    = 1'b0,
        bit PRADOR_BYP_1_XA    = 1'b0,
        bit PRADOR_BYP_2_YA    = 1'b0,
        bit PRADOR_BYP_3_YA    = 1'b0,
        bit PRADOR_BYP_4_XB    = 1'b0,
        bit PRADOR_BYP_5_XB    = 1'b0,
        bit PRADOR_BYP_6_YB    = 1'b0,
        bit PRADOR_BYP_7_YB    = 1'b0,
        //  bit for MULT UNIT
        bit CLK_PR_0_MA[1:0]   = 2'b00,
        bit CLK_PR_1_MA[1:0]   = 2'b00,
        bit CLK_PR_2_MB[1:0]   = 2'b00,
        bit CLK_PR_3_MB[1:0]   = 2'b00,
        bit CLK_PR_4_XA[1:0]   = 2'b00,
        bit CLK_PR_5_XB[1:0]   = 2'b00,
        bit CLK_PR_6_YA[1:0]   = 2'b00,
        bit CLK_PR_7_YB[1:0]   = 2'b00,
        bit CLK_PR_8_ZA[1:0]   = 2'b00,
        bit CLK_PR_9_ZB[1:0]   = 2'b00,
        bit CE_PR_0_MA[1:0]    = 2'b00,
        bit CE_PR_1_MA[1:0]    = 2'b00,
        bit CE_PR_2_MB[1:0]    = 2'b00,
        bit CE_PR_3_MB[1:0]    = 2'b00,
        bit CE_PR_4_XA[1:0]    = 2'b00,
        bit CE_PR_5_XB[1:0]    = 2'b00,
        bit CE_PR_6_YA[1:0]    = 2'b00,
        bit CE_PR_7_YB[1:0]    = 2'b00,
        bit CE_PR_8_ZA[1:0]    = 2'b00,
        bit CE_PR_9_ZB[1:0]    = 2'b00,
        bit RST_PR_0_MA[1:0]   = 2'b00,
        bit RST_PR_1_MA[1:0]   = 2'b00,
        bit RST_PR_2_MB[1:0]   = 2'b00,
        bit RST_PR_3_MB[1:0]   = 2'b00,
        bit RST_PR_4_XA[1:0]   = 2'b00,
        bit RST_PR_5_XB[1:0]   = 2'b00,
        bit RST_PR_6_YA[1:0]   = 2'b00,
        bit RST_PR_7_YB[1:0]   = 2'b00,
        bit RST_PR_8_ZA[1:0]   = 2'b00,
        bit RST_PR_9_ZB[1:0]   = 2'b00,
        bit SYNC_PR_0_MA       = 1'b0,
        bit SYNC_PR_1_MA       = 1'b0,
        bit SYNC_PR_2_MB       = 1'b0,
        bit SYNC_PR_3_MB       = 1'b0,
        bit SYNC_PR_4_XA       = 1'b0,
        bit SYNC_PR_5_XB       = 1'b0,
        bit SYNC_PR_6_YA       = 1'b0,
        bit SYNC_PR_7_YB       = 1'b0,
        bit SYNC_PR_8_ZA       = 1'b0,
        bit SYNC_PR_9_ZB       = 1'b0,
        bit PR_BYP_0_MA        = 1'b0,
        bit PR_BYP_1_MA        = 1'b0,
        bit PR_BYP_2_MB        = 1'b0,
        bit PR_BYP_3_MB        = 1'b0,
        bit PR_BYP_4_XA        = 1'b0,
        bit PR_BYP_5_XB        = 1'b0,
        bit PR_BYP_6_YA        = 1'b0,
        bit PR_BYP_7_YB        = 1'b0,
        bit PR_BYP_8_ZA        = 1'b0,
        bit PR_BYP_9_ZB        = 1'b0,
        bit M9_MODE[1:0]       = 2'b00,
        bit M19_MODE[1:0]       = 2'b00,
        bit M27_MODE           = 1'b0,
        bit CLK_CTPR[3:0]      = 4'b0000,
        bit CE_CTPR[3:0]       = 4'b0000,
        bit RST_CTPR[3:0]      = 4'b0000,
        bit SYNC_CTPR[1:0]     = 2'b00,
        bit CTRL_PRBYP[2:0]    = 3'b00,
        //  bit for post unit
        bit CLK_OR_3_B[1:0]    = 2'b00,
        bit CLK_OR_2_B[1:0]    = 2'b00,
        bit CLK_OR_1_A[1:0]    = 2'b00,
        bit CLK_OR_0_A[1:0]    = 2'b00,
        bit CE_OR_3_B[1:0]     = 2'b00,
        bit CE_OR_2_B[1:0]     = 2'b00,
        bit CE_OR_1_A[1:0]     = 2'b00,
        bit CE_OR_0_A[1:0]     = 2'b00,
        bit RST_OR_3_B[1:0]    = 2'b00,
        bit RST_OR_2_B[1:0]    = 2'b00,
        bit RST_OR_1_A[1:0]    = 2'b00,
        bit RST_OR_0_A[1:0]    = 2'b00,
        bit SYNC_OR_3_B        = 1'b0,
        bit SYNC_OR_2_B        = 1'b0,
        bit SYNC_OR_1_A        = 1'b0,
        bit SYNC_OR_0_A        = 1'b0,
        bit OR_BYP_3_B         = 1'b0,
        bit OR_BYP_2_B         = 1'b0,
        bit OR_BYP_1_A         = 1'b0,
        bit OR_BYP_0_A         = 1'b0,
        bit RTI[63:0]          = 64'h0000_0000_0000_0000,
        bit SEL_SAB_CR27       = 1'b0,
        bit SEL_SAB_CR59       = 1'b0,
        bit FLAG_EN            = 1'b0,
        bit CR64_SAB           = 1'b0,
        bit SIGN_SELIR[1:0]    = 2'b00,
        bit TERNARY            = 1'b0,
        bit MASK01[64:0]       = 65'h0_0000_0000_0000_0000,
        bit MASKPAT[63:0]      = 64'h0000_0000_0000_0000,
        bit MCPAT[63:0]        = 64'h0000_0000_0000_0000,
        bit MASKPATSEL         = 1'b0,
        bit MCPATSEL           = 1'b0,
        bit CSIGN_EXT          = 1'b0,
        bit CSIGN_PRE          = 1'b0,
        bit SC_ALUEN           = 1'b0,
        bit SEL_SYO            = 1'b0,
        bit SEL_SZO            = 1'b0,
        bit OR2CASCADE_EN      = 1'b0
    );
    port
    (
        input  DXIA[17:0],
        input  DXIA_SIGNED,
        input  DYIA[17:0],
        input  DYIA_SIGNED,
        input  DZIA[31:0],
        input  DZIA_SIGNED,

        input  DXIB[17:0],
        input  DXIB_SIGNED,
        input  DYIB[17:0],
        input  DYIB_SIGNED,
        input  DZIB[31:0],
        input  DZIB_SIGNED,

        input  APM_OP_POST[10:0],
        input  APM_OP_IR[8:0],
        input  APM_OP_PRAD[1:0],

        input  CLK[3:0],
        input  CE[3:0],
        input  RST[3:0],

        input  CYI[26:0],
        input  CYI_SIGNED,
        output CYO[26:0],
        output CYO_SIGNED,

        input  CZI[26:0],
        input  CZI_SIGNED,
        output CZO[26:0],
        output CZO_SIGNED,

        input  CPI[64:0],
        input  CPI_SIGNED,
        output CPO[64:0],
        output CPO_SIGNED,
        output DPO[73:0]
    );
}

design
operator V_RAM16X1
{
    parameter
    (
        bit INIT[15:0] = 16'h0000,
        string WE_POL = "FALSE",
        string SECTION = ""        // A, B, C, D, AF, BF, CF, DF
    );

    port
    (
        output RDO,
        input  WDI,
        input  RADDR[3:0],
        input  WADDR[3:0],
        input  WCLK,
        input  WE
    );
};

design
operator V_FIFO18K
{
    parameter
    (
        string GRS_EN = "TRUE",
        int DATA_WIDTH = 2,
        int DO_REG = 0,
        bit  ALMOST_FULL_OFFSET[13:0]  =   14'h0FFA,
        bit  ALMOST_EMPTY_OFFSET[13:0] =   14'h0004,
     
        int USE_EMPTY = 0,
        int USE_FULL = 0,
        string REWRITE_EN = "FALSE",
        string RESEND_EN  = "FALSE",
        string SYNC_FIFO  = "FALSE",
        string  SECTION             =   ""
    );

    port
    (
        output ALMOST_EMPTY,
        output ALMOST_FULL,
        output      EMPTY,
        output      FULL,
        output DO[35:0],
                     
        input DI[35:0] = 36'b0,
        input       WCLK  = 1'b0,
        input       RCLK  = 1'b0,
        input WCE = 1'b0,
        input RCE = 1'b0,
        input WERR = 1'b0,
        input WEOP = 1'b0,
        input RNAK = 1'b0,
        input ORCE = 1'b0,
        input RST = 1'b0
    );
};

design
operator V_DRM18K
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit CSA_MASK[2:0] = 3'b000,
        bit CSB_MASK[2:0] = 3'b000,
        int DATA_WIDTH_A = 18,
        int DATA_WIDTH_B = 18,
        int DOA_REG = 0 /* 0 | 1 */,
        int DOB_REG = 0 /* 0 | 1 */,
        int DOA_REG_CLKINV = 0 /* 0 | 1 */,
        int DOB_REG_CLKINV = 0 /* 0 | 1 */,
        string RST_TYPE = "SYNC" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "SYNC | ASYNC | ASYNC_SYNC_RELEASE" */,
        string RAM_MODE = "TRUE_DUAL_PORT" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE_DUAL_PORT | ROM | SINGLE_PORT | SIMPLE_DUAL_PORT" */,
        string WRITE_MODE_A = "NORMAL_WRITE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NORMAL_WRITE | TRANSPARENT_WRITE | READ_BEFORE_WRITE" */,
        string WRITE_MODE_B = "NORMAL_WRITE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NORMAL_WRITE | TRANSPARENT_WRITE | READ_BEFORE_WRITE" */,
        string WRITE_COLLISION_ARBITER = "NULL" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NULL" */,
        string SIM_DEVICE = "TITAN" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TITAN | LOGOS | PGL22G" */,
        bit INIT_00[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_01[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_02[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_03[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_04[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_05[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_06[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_07[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_08[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_09[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_10[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_11[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_12[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_13[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_14[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_15[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_16[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_17[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_18[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_19[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_20[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_21[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_22[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_23[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_24[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_25[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_26[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_27[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_28[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_29[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_30[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_31[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_32[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_33[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_34[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_35[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_36[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_37[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_38[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_39[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        string INIT_FILE = "NONE",
        int BLOCK_X = 0,
        int BLOCK_Y = 0,
        int RAM_DATA_WIDTH = 9,
        int RAM_ADDR_WIDTH = 11,
        string INIT_FORMAT = "BIN"
    );

    port
    (
        output DOA[17:0],
        output DOB[17:0],
        output WWCONF,
        input DIA[17:0],
        input DIB[17:0],
        input ADDRA[13:0],
        input ADDRA_HOLD,
        input ADDRB[13:0],
        input ADDRB_HOLD,
        input CSA[2:0],
        input CSB[2:0],
        input CLKA /* pragma PAP_IS_CLOCK_PIN PAP_LIB_IS_INV_PIN */,
        input CLKB /* pragma PAP_IS_CLOCK_PIN PAP_LIB_IS_INV_PIN */,
        input CEA /* pragma PAP_LIB_IS_INV_PIN */,
        input CEB /* pragma PAP_LIB_IS_INV_PIN */,
        input WEA /* pragma PAP_LIB_IS_INV_PIN */,
        input WEB /* pragma PAP_LIB_IS_INV_PIN */,
        input ORCEA /* pragma PAP_LIB_IS_INV_PIN */,
        input ORCEB /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTA /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTB /* pragma PAP_LIB_IS_INV_PIN */
    );
};

design
operator V_DRM9K
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int DATA_WIDTH_A = 18,
        int DATA_WIDTH_B = 18,
        int DOA_REG = 0 /* 0 | 1 */,
        int DOB_REG = 0 /* 0 | 1 */,
        int DOA_REG_CLKINV = 0 /* 0 | 1 */,
        int DOB_REG_CLKINV = 0 /* 0 | 1 */,
        string RST_TYPE = "SYNC" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "SYNC | ASYNC | ASYNC_SYNC_RELEASE" */,
        string RAM_MODE = "TRUE_DUAL_PORT" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE_DUAL_PORT | ROM | SINGLE_PORT | SIMPLE_DUAL_PORT" */,
        string WRITE_MODE_A = "NORMAL_WRITE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NORMAL_WRITE | TRANSPARENT_WRITE | READ_BEFORE_WRITE" */,
        string WRITE_MODE_B = "NORMAL_WRITE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NORMAL_WRITE | TRANSPARENT_WRITE | READ_BEFORE_WRITE" */,
        string SIM_DEVICE = "LOGOS" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "LOGOS | PGL22G" */,
        bit INIT_00[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_01[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_02[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_03[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_04[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_05[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_06[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_07[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_08[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_09[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_10[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_11[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_12[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_13[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_14[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_15[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_16[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_17[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_18[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_19[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        string INIT_FILE = "NONE",
        int BLOCK_X = 0,
        int BLOCK_Y = 0,
        int RAM_DATA_WIDTH = 9,
        int RAM_ADDR_WIDTH = 10,
        string INIT_FORMAT = "BIN"
    );

    port
    (
        output DOA[17:0],
        output DOB[17:0],
        input DIA[17:0],
        input DIB[17:0],
        input ADDRA[12:0],
        input ADDRA_HOLD,
        input ADDRB[12:0],
        input ADDRB_HOLD,
        input CLKA /* pragma PAP_IS_CLOCK_PIN PAP_LIB_IS_INV_PIN */,
        input CLKB /* pragma PAP_IS_CLOCK_PIN PAP_LIB_IS_INV_PIN */,
        input CEA /* pragma PAP_LIB_IS_INV_PIN */,
        input CEB /* pragma PAP_LIB_IS_INV_PIN */,
        input WEA /* pragma PAP_LIB_IS_INV_PIN */,
        input WEB /* pragma PAP_LIB_IS_INV_PIN */,
        input ORCEA /* pragma PAP_LIB_IS_INV_PIN */,
        input ORCEB /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTA /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTB /* pragma PAP_LIB_IS_INV_PIN */
    );
};

design
operator V_APM_E1
{
    parameter
    (
        string GRS_EN = "TRUE",
        int ASYNC_RST = 0,
        int X_SIGNED = 0,
        int Y_SIGNED = 0,
        int X_REG = 0,
        int Y_REG = 0,
        int Z_REG = 0,
        int P_REG = 0,
        int CXO_REG = 0,
        int CPO_REG = 0,
        int MULT_REG = 0,
        int PREADD_REG = 0,
        int MODEX_REG = 0,
        int MODEY_REG = 0,
        int MODEZ_REG = 0,
        int X_SEL = 0,
        int XB_SEL = 0,
        int CIN_SEL = 0,
        int USE_SIMD = 0,
        int USE_ACCLOW = 0,
        int USE_PREADD = 0,
        int USE_POSTADD = 0,
        bit Z_INIT[47:0] = 48'b000000000000000000000000000000000000000000000000,
        bit X_PSE[7:0] = 8'b00000000,
        bit Y_PSE[7:0] = 8'b00000000,
        bit Z_PSE[22:0] = 23'h000000
    );

    port
    (
        output COUT,
        output CPO[47:0],
        output CXO[17:0],
        output CXBO[17:0],
        output P[47:0],
        input CIN,
        input CPI[47:0],
        input CXI[17:0],
        input CXBI[17:0],
        input X[17:0],
        input Y[17:0],
        input Z[47:0],
        input MODEX,
        input MODEY[2:0],
        input MODEZ[3:0],
        input CLK,
        input CEX = 1'b1,
        input CEY = 1'b1,
        input CEZ = 1'b1,
        input CEM = 1'b1,
        input CEP = 1'b1,
        input CEPRE = 1'b1,
        input CEMODEX = 1'b1,
        input CEMODEY = 1'b1,
        input CEMODEZ = 1'b1,
        input RSTX = 1'b0,
        input RSTY = 1'b0,
        input RSTZ = 1'b0,
        input RSTM = 1'b0,
        input RSTP = 1'b0,
        input RSTPRE = 1'b0,
        input RSTMODEX = 1'b0,
        input RSTMODEY = 1'b0,
        input RSTMODEZ = 1'b0
    );
};

design
operator V_IGDDR
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE",//"TRUE"; "FALSE"
        string DPI_EN = "FALSE"  //"TRUE"; "FALSE"
    );

    port
    (
        input  DPI_CTRL[1:0],
        input  DPI_STS_CLR_N,
        output DPI_STS[1:0],

        input PADI,
        input RCLK,
        input RST,

        output Q[1:0]
    );
};

design
operator V_IGDES4
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE",//"TRUE"; "FALSE"
        string DPI_EN = "FALSE"  //"TRUE"; "FALSE"
    );

    port
    ( 
        input  DPI_CTRL[1:0],
        input  DPI_STS_CLR_N,
        output DPI_STS[1:0],

        input PADI,
        input RCLK,
        input DESCLK,
        input RST,

        output Q[3:0]
    );
};

design
operator V_IGDES7
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE",//"TRUE"; "FALSE"
        string DPI_EN = "FALSE"  //"TRUE"; "FALSE"
    );

    port
    ( 
        input  DPI_CTRL[1:0],
        input  DPI_STS_CLR_N,
        output DPI_STS[1:0],
        
        input PADI,
        input RCLK,
        input DESCLK,
        input RST,

        output Q[6:0]
    );
};

design
operator V_IGDES8
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE",//"TRUE"; "FALSE"
        string DPI_EN = "FALSE"  //"TRUE"; "FALSE"
    );

    port
    ( 
        input  DPI_CTRL[1:0],
        input  DPI_STS_CLR_N,
        output DPI_STS[1:0],

        input PADI,
        input RCLK,
        input DESCLK,
        input RST,

        output Q[7:0]
    );
};


design
operator V_IGDES10
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE",//"TRUE"; "FALSE"
        string DPI_EN = "FALSE"  //"TRUE"; "FALSE"
    );

    port
    (
        input  DPI_CTRL[1:0],
        input  DPI_STS_CLR_N,
        output DPI_STS[1:0],

        input PADI,
        input RCLK,
        input DESCLK,
        input RST,

        output Q[9:0]
    );
};


design
operator V_IMDDR
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE",//"TRUE"; "FALSE"
        string DPI_EN = "FALSE"  //"TRUE"; "FALSE"
    );

    port
    ( 
        input  DPI_CTRL[1:0],
        input  DPI_STS_CLR_N,
        output DPI_STS[1:0],

        input PADI,
        input ICLK,
        input RCLK,
        input IFIFO_WADDR[2:0],
        input IFIFO_RADDR[2:0],
        input RST,

        output Q[1:0]
    );
};

design
operator V_IMDES4
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE",//"TRUE"; "FALSE"
        string DPI_EN = "FALSE"  //"TRUE"; "FALSE"
    );

    port
    (
        input  DPI_CTRL[1:0],
        input  DPI_STS_CLR_N,
        output DPI_STS[1:0],

        input PADI,
        input ICLK,
        input RCLK,
        input DESCLK,
        input IFIFO_WADDR[2:0],
        input IFIFO_RADDR[2:0],
        input RST,

        output Q[3:0]
    );
};

design
operator V_IMDES8
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE",//"TRUE"; "FALSE"
        string DPI_EN = "FALSE"  //"TRUE"; "FALSE"
    );

    port
    (
        input  DPI_CTRL[1:0],
        input  DPI_STS_CLR_N,
        output DPI_STS[1:0],

        input PADI,
        input ICLK,
        input RCLK,
        input DESCLK,
        input IFIFO_WADDR[2:0],
        input IFIFO_RADDR[2:0],
        input RST,

        output Q[7:0]
    );
};

design
operator V_ISERDES
{
    parameter
    (
        string ISERDES_MODE = "IGDDR",   //"IDDR","IMDDR","IDES4","IMDES4","IDES7","IDES8","IMDES8"
        string GRS_EN       = "TRUE",    //"TRUE"; "FALSE"
        string LRS_EN       = "TRUE"     //"TRUE"; "FALSE"
    );

    port
    (
        input  DI,
        input  ICLK,
        input  DESCLK,
        input  RCLK,
        input  WADDR[2:0],
        input  RADDR[2:0],
        input  RST,
        output DO[7:0]
    );
};

design
operator V_OSERDES
{
    parameter
    (
        string OSERDES_MODE = "OGDDR",   //"ODDR","OMDDR","OSER4","OMSER4","OSER7","OSER8",OMSER8"
        string WL_EXTEND    = "FALSE",   //"TRUE"; "FALSE"
        bit    TSDDR_INIT   = 1'b0,      //1'b0;1'b1
        string GRS_EN       = "TRUE",    //"TRUE"; "FALSE"
        string LRS_EN       = "TRUE"     //"TRUE"; "FALSE"
    );

    port
    (
        output DO,
        output TO,
        input  DI[7:0],
        input  TI[3:0],
        input  RCLK,
        input  SERCLK,
        input  OCLK,
        input  RST
    );
};

design
operator V_OGDDR
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE"  //"TRUE"; "FALSE"
    );

    port
    (
        input D[1:0],
        input T,
        input RCLK,
        input RST,
        output PADO,
        output PADT
    );
};

design
operator V_OGSER4
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE"  //"TRUE"; "FALSE"
    );

    port
    (
        input D[3:0],
        input T[1:0],
        input RCLK,
        input SERCLK,
        input RST,
        output PADO,
        output PADT
    );
};

design
operator V_OGSER4E
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE"  //"TRUE"; "FALSE"
    );

    port
    (
        input D[3:0],
        input RCLK,
        input SERCLK,
        input RST,
        output PADO
    );
};

design
operator V_OGSER7
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE"  //"TRUE"; "FALSE"
    );

    port
    (
        input D[6:0],
        input RCLK,
        input SERCLK,
        input RST,
        output PADO
    );
};

design
operator V_OGSER8
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE"  //"TRUE"; "FALSE"
    );

    port
    (
        input D[7:0],
        input T[3:0],
        input RCLK,
        input SERCLK,
        input RST,
        output PADO,
        output PADT
    );
};

design
operator V_OGSER10
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE"  //"TRUE"; "FALSE"
    );

    port
    (
        input D[9:0],
        input RCLK,
        input SERCLK,
        input RST,
        output PADO
    );
};

design
operator V_OMDDR
{
    parameter
    (
        string GRS_EN = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN = "TRUE"  //"TRUE"; "FALSE"
    );

    port
    (
        input D[1:0],
        input T,
        input OCLK,
        input RCLK,
        input RST,
        output PADO,
        output PADT
    );
};

design
operator V_OMSER4
{
    parameter
    (
        string WL_EXTEND = "FALSE",//"TRUE"; "FALSE"
        string GRS_EN    = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN    = "TRUE"  //"TRUE"; "FALSE"
    );

    port
    (
        input D[3:0],
        input T[1:0],
        input OCLK,
        input RCLK,
        input SERCLK,
        input RST,
        output PADO,
        output PADT
    );
};

design
operator V_OMSER8
{
    parameter
    (
        string WL_EXTEND = "FALSE",//"TRUE"; "FALSE"
        string GRS_EN    = "FALSE",//"TRUE"; "FALSE"
        string LRS_EN    = "TRUE"  //"TRUE"; "FALSE"
    );

    port
    (
        input D[7:0],
        input T[3:0],
        input OCLK,
        input RCLK,
        input SERCLK,
        input RST,
        output PADO,
        output PADT
    );
};
design
operator V_PLL
{
    parameter
    (
        string CLKIN_FREQ = "50MHZ",
        string DYNAMIC_CLKIN_EN = "FALSE",     //"TRUE"; "FALSE"
        int CLKIN_SSEL        = 0,    //0~1
        string DYNAMIC_RATIOI_EN = "FALSE", //"TRUE"; "FALSE"
        int STATIC_RATIOI = 1,   //1~64
        string DYNAMIC_RATIOF_EN = "FALSE", //"TRUE"; "FALSE"
        int STATIC_RATIOF = 1,   //1~64
        string DYNAMIC_RATIO_EN  = "FALSE", //"TRUE"; "FALSE"
        int STATIC_RATIO  = 2,   //2,4,~128
        int CLKOUT2_SEL   = 2,   //0~3
        string DYNAMIC_RATIO2_EN = "FALSE", //"TRUE"; "FALSE"
        int STATIC_RATIO2 = 2,   //2,4,6,8~128
        int CLKOUT3_SEL   = 2,   //0~3
        string DYNAMIC_RATIO3_EN = "FALSE", //"TRUE"; "FALSE"
        int STATIC_RATIO3 = 2,   //2,4,6,8~128
        int CLKOUT4_SEL   = 2,   //0~3
        string DYNAMIC_RATIO4_EN = "FALSE", //"TRUE"; "FALSE"
        int STATIC_RATIO4 = 2,   //2,4,6,8~128
        string INTERNAL_FB = "DISABLE",     //"CLKOUT0"; "CLKOUT1"; "CLKOUT2"; "DISABLE"
        string EXTERNAL_FB = "DISABLE",     //"CLKOUT0"; "CLKOUT1"; "CLKOUT2"; "CLKOUT3"; "CLKOUT4"; "DISABLE"
        string DYNAMIC_DUPS1_EN = "FALSE",     //"TRUE"; "FALSE"
        int STATIC_DUTY1  = 8,
        int STATIC_PHASE1 = 0,
        string DYNAMIC_DUPS2_EN = "FALSE",     //"TRUE"; "FALSE"
        int STATIC_DUTY2  = 8,
        int STATIC_PHASE2 = 0,
        string DYNAMIC_DUPS3_EN = "FALSE",     //"TRUE"; "FALSE"
        int STATIC_DUTY3  = 8,
        int STATIC_PHASE3 = 0,
        string DYNAMIC_DUPS4_EN = "FALSE",     //"TRUE"; "FALSE"
        int STATIC_DUTY4  = 8,
        int STATIC_PHASE4 = 0,
        string CLKOUT0_SYN_EN = "TRUE",  //"TRUE"; "FALSE"
        string CLKOUT1_SYN_EN = "FALSE", //"TRUE"; "FALSE"
        string CLKOUT2_SYN_EN = "FALSE", //"TRUE"; "FALSE"
        string CLKOUT3_SYN_EN = "FALSE", //"TRUE"; "FALSE"
        string CLKOUT4_SYN_EN = "FALSE", //"TRUE"; "FALSE"
        string RST_INNER_EN   = "TRUE",  //"TRUE"; "FALSE"
        string RSTIDIV_EN     = "TRUE",  //"TRUE"; "FALSE"
        string RSTODIV_EN     = "TRUE",  //"TRUE"; "FALSE"
        int CLKOUT3_DIV125_M = 1,
        int CLKOUT3_DIV125_N = 1,
        int CLKOUT4_DIV32BIT_K = 1000
    );

    port
    (
        output CLKOUT0,
        output CLKOUT1,
        output CLKOUT2,
        output CLKOUT3,
        output CLKOUT4,
        output LOCK,
        input CLKIN1,
        input CLKIN2,
        input CLKIN_DSEL,
        input CLKFB,
        input CLKOUT0_SYN,
        input CLKOUT1_SYN,
        input CLKOUT2_SYN,
        input CLKOUT3_SYN,
        input CLKOUT4_SYN,
        input RATIOI[5:0],
        input RATIOF[5:0],
        input RATIO[5:0],
        input RATIO2[5:0],
        input RATIO3[5:0],
        input RATIO4[5:0],
        input DUTY1[3:0],
        input DUTY2[3:0],
        input DUTY3[3:0],
        input DUTY4[3:0],
        input PHASE1[3:0],
        input PHASE2[3:0],
        input PHASE3[3:0],
        input PHASE4[3:0],
        input PLL_PWD,
        input RST,
        input RSTIDIV,
        input RSTODIV
    );
};

design
operator V_PLL_E1
{
    parameter
    (
        real CLKIN_FREQ = 50.0,
        string PFDEN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit VCOCLK_DIV2 = 1'b0 /* 0 | 1 */,
        string DYNAMIC_RATIOI_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_RATIO0_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_RATIO1_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_RATIO2_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_RATIO3_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_RATIO4_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_RATIOF_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int STATIC_RATIOI = 1 /* 1 ~ 512 */,
        int STATIC_RATIO0 = 1 /* 1 ~ 512 */,
        int STATIC_RATIO1 = 1 /* 1 ~ 512 */,
        int STATIC_RATIO2 = 1 /* 1 ~ 512 */,
        int STATIC_RATIO3 = 1 /* 1 ~ 512 */,
        int STATIC_RATIO4 = 1 /* 1 ~ 512 */,
        int STATIC_RATIOF = 1 /* 1 ~ 512 */,
        string DYNAMIC_DUTY0_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_DUTY1_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_DUTY2_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_DUTY3_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_DUTY4_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_DUTYF_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int STATIC_DUTY0 = 1,
        int STATIC_DUTY1 = 1,
        int STATIC_DUTY2 = 1,
        int STATIC_DUTY3 = 1,
        int STATIC_DUTY4 = 1,
        int STATIC_DUTYF = 1,
        string PHASE_ADJUST0_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PHASE_ADJUST1_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PHASE_ADJUST2_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PHASE_ADJUST3_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PHASE_ADJUST4_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_PHASE0_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_PHASE1_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_PHASE2_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_PHASE3_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_PHASE4_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_PHASEF_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int STATIC_PHASE0 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE1 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE2 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE3 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE4 = 0 /* 0 ~ 7 */,
        int STATIC_PHASEF = 0 /* 0 ~ 7 */,
        int STATIC_CPHASE0 = 2 /* 2 ~ 513 */,
        int STATIC_CPHASE1 = 2 /* 2 ~ 513 */,
        int STATIC_CPHASE2 = 2 /* 2 ~ 513 */,
        int STATIC_CPHASE3 = 2 /* 2 ~ 513 */,
        int STATIC_CPHASE4 = 2 /* 2 ~ 513 */,
        int STATIC_CPHASEF = 2 /* 2 ~ 513 */,
        string CLK_CAS0_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_CAS1_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_CAS2_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_CAS3_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_CAS4_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int CLKOUT5_SEL = 0 /* 0 ~ 4 */,
        string CLKIN_BYPASS_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT0_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT0_EXT_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT1_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT2_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT3_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT4_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT5_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string INTERNAL_FB = "ENABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "DISABLE | ENABLE" */,
        string EXTERNAL_FB = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "DISABLE | CLKOUT0 | CLKOUT1 | CLKOUT2 | CLKOUT3 | CLKOUT4" */,
        string BANDWIDTH = "OPTIMIZED" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "OPTIMIZED | LOW | HIGH" */,
        string RSTODIV_PHASE_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string SIM_DEVICE = "PGL22G" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "PGL22G | PGL35ES" */
    );

    port
    (
        output CLKOUT0,
        output CLKOUT0_EXT,
        output CLKOUT1,
        output CLKOUT2,
        output CLKOUT3,
        output CLKOUT4,
        output CLKOUT5,
        output CLKSWITCH_FLAG,
        output LOCK,
        input CLKFB,
        input CLKIN1,
        input CLKIN2,
        input CLKIN_SEL,
        input CLKIN_SEL_EN,
        input PFDEN,
        input CLKOUT0_SYN,
        input CLKOUT0_EXT_SYN,
        input CLKOUT1_SYN,
        input CLKOUT2_SYN,
        input CLKOUT3_SYN,
        input CLKOUT4_SYN,
        input CLKOUT5_SYN,
        input RATIOI[9:0],
        input RATIO0[9:0],
        input RATIO1[9:0],
        input RATIO2[9:0],
        input RATIO3[9:0],
        input RATIO4[9:0],
        input RATIOF[9:0],
        input DUTY0[9:0],
        input DUTY1[9:0],
        input DUTY2[9:0],
        input DUTY3[9:0],
        input DUTY4[9:0],
        input DUTYF[9:0],
        input PHASE0[2:0],
        input PHASE1[2:0],
        input PHASE2[2:0],
        input PHASE3[2:0],
        input PHASE4[2:0],
        input PHASEF[2:0],
        input CPHASE0[9:0],
        input CPHASE1[9:0],
        input CPHASE2[9:0],
        input CPHASE3[9:0],
        input CPHASE4[9:0],
        input CPHASEF[9:0],
        input PLL_PWD,
        input RST,
        input RSTODIV_PHASE
    );
};

design
operator V_ADC_E1
{
    parameter
    (
        string AVERAGE = "1",
        string CALIB = "NONE",
        string REFERENCE = "INTERNAL",
        string CALIB_REFERENCE = "INTERNAL",
        string FULL_SWING = "0.5V",
        string VCM = "0.8V",
        string DIVIDER = "2",
        string ADC_MODE = "DEFAULT",
        string EVENT_DRIVE = "FALSE",
        string ADC_MODE_1MSPS = "FALSE",
        string CLKSWITCH = "FALSE",
        string INTERNAL_VOL_SEL = "VDD33",
        string SINGLE_CH_SEL = "0",
        string SINGLE_CH_IN = "SINGLE_END",
        string SEQ_CH11_10_SEL = "NONE",
        string SEQ_CH9_8_SEL = "NONE",
        string SEQ_CH7_6_SEL = "NONE",
        string SEQ_CH5_4_SEL = "NONE",
        string SEQ_CH3_2_SEL = "NONE",
        string SEQ_CH1_0_SEL = "NONE",
        string SEQ_CH11_10_IN = "SINGLE_END",
        string SEQ_CH9_8_IN = "SINGLE_END",
        string SEQ_CH7_6_IN = "SINGLE_END",
        string SEQ_CH5_4_IN = "SINGLE_END",
        string SEQ_CH3_2_IN = "SINGLE_END",
        string SEQ_CH1_0_IN = "SINGLE_END",
        int TEMP_SENSOR_HIGH = 0,
        int TEMP_SENSOR_LOW = 0,
        string ADC_EN_ENABLE = "FALSE"
    );

    port
    (
        input VAUX[9:0],
        input VA[1:0],
        input RST_N,
        input LOADSC_N,
        input DCLK,
        input DEN,
        input DI[15:0],
        input DWE,
        input DADDR[7:0],
        input CONVST,
        input ADC_EN,
        output DBUSY,
        output DO[15:0],
        output DRDY,
        output DMODIFIED,
        output LOGIC_DONE,
        output OVER_TEMP
    );
};


design
operator V_CRYSTAL
{
    parameter
    (
        string CLK_EN = "FALSE"
    );

    port
    (
        output CLKOUT,
        input XTALA,
        input XTALB,
        input EN_N
    );
};

design
operator V_DLL
{
    parameter
    (
        string GRS_EN = "FALSE",
        string FAST_LOCK = "TRUE",
        int DELAY_STEP_OFFSET = 0
    );

    port
    (
        input CLKIN,
        input UPDATE_N,
        input RST,
        input PWD,
        output DELAY_STEP[7:0],
        output LOCK
    );
};

design
operator V_DDC_E1
{
    parameter
    (
        string GRS_EN = "TRUE",
        string DDC_MODE = "FULL_RATE" /* FULL_RATE | HALF_RATE | QUAD_RATE */,
        string IFIFO_GENERIC = "FALSE",
        bit WCLK_DELAY_OFFSET[8:0] = 9'b000000000,
        bit DQSI_DELAY_OFFSET[8:0] = 9'b000000000,
        string CLKA_GATE_EN = "FALSE",
        string R_DELAY_STEP_EN = "TRUE",
        string R_MOVE_EN = "FALSE",
        string W_MOVE_EN = "FALSE",
        string R_EXTEND = "FALSE",
        string GATE_SEL = "FALSE",
        string WCLK_DELAY_SEL = "FALSE",
        string RCLK_SEL = "FALSE",
        bit RADDR_INIT[2:0] = 3'b000
    );

    port
    (
        output WDELAY_OB,
        output WCLK,
        output WCLK_DELAY,
        output RCLK,
        output RDELAY_OB,
        output DQSI_DELAY,
        output DGTS,
        output READ_VALID,
        output GATE_OUT,
        output IFIFO_WADDR[2:0],
        output IFIFO_RADDR[2:0],
        output DQS_DRIFT[1:0],
        output DRIFT_DETECT_ERR,
        output DQS_DRIFT_STATUS,
        input RST,
        input CLKB,
        input CLKA,
        input CLKA_GATE,
        input DELAY_STEP1[7:0],
        input DELAY_STEP0[7:0],
        input W_DIRECTION,
        input W_MOVE,
        input W_LOAD_N,
        input DQS_GATE_CTRL[3:0],
        input READ_CLK_CTRL[2:0],
        input DQSI,
        input GATE_IN,
        input R_DIRECTION,
        input R_MOVE,
        input R_LOAD_N,
        input RST_TRAINING_N
    );
};

design
operator V_IPAL_E1
{
    parameter
    (
        string DATA_WIDTH = "X8" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "X8 | X16 | X32" */,
        bit IDCODE[31:0] = 32'hAAAA5555,
        string SIM_DEVICE = "PGL25G"
    );

    port
    (
        output BUSY,
        output DO[31:0],
        input DI[31:0],
        input CLK,
        input CS_N,
        input RST_N,
        input RW_SEL,
        output RBCRC_ERR,
        output RBCRC_VALID,
        output ECC_VALID,
        output ECC_INDEX[11:0],
        output SERROR,
        output DERROR
    );
};

design
operator V_OSC_E1
{
    parameter
    (
        int CLK_DIV = 2
    );

    port
    (
        output CLKOUT,
        input EN,
        input RST_N
    );
};

design
operator V_RES_CAL
{
    parameter
    (
        string BANK_LOC = "L0", // IO Bank location: L0/L1/L2/R0/R1/R2
        bit CAL_CODE[19:0] = 20'b11111_11111_10000_10000,  // static code to set resistor at "STATIC_MODE"
        string CAL_MODE = "STATIC_MODE", //"STATIC_MODE","DYNAMIC_MODE","AUTO_MODE","AUTO_MODE2"
        string DDR_RES = "50" // "75","60","50","40"
    );
    port
    (
        output CAL_DONE,
        input CAL_REQ,
        input USR_DRVN[4:0],
        input USR_DRVP[4:0],
        input USR_TERMN[4:0],
        input USR_TERMP[4:0],
        output NL[4:0],
        output PL[4:0],
        output TNL[4:0],
        output TPL[4:0]
    );
};

design
operator V_SCANCHAIN_E1
{
    parameter
    (
        bit IDCODE[31:0] = 32'hAAAA5555,
        int CHAIN_NUM = 1
    );

    port
    (
        output TDO,
        input TCK,
        input TDI,
        input TMS,
        output CAPDR,
        output SHFTDR,
        output UPDR,
        output JCLK,
        output RST,
        output JRTI,
        output FLG_USER,
        output TCK_USER,
        output TDI_USER,
        output TMS_USER,
        input TDO_USER
    );
};

design
operator V_START_E1
{
    port
    (
        output WAKEUP_OVER,
        input CLK,
        input GOE,
        input GRS_N,
        input GWE
    );
};

design
operator V_UDID
{
    parameter
    (
        bit UDID_CODE[63:0] = 64'b0000000000000000000000000000000000000000000000000000000000000000
    );

    port
    (
        input DI,
        output DO,
        input LOAD,
        input SE,
        input CLK
    );
};


design
operator V_DDRC
{
    port
    (
        input SRB_CORE_CLK,
        input CORE_DDRC_CORE_CLK,
        input CORE_DDRC_RST,
        input ARESET_0,
        input ACLK_0,
        input AWID_0[7:0],
        input AWADDR_0[31:0],
        input AWLEN_0[7:0],
        input AWSIZE_0[2:0],
        input AWBURST_0[1:0],
        input AWLOCK_0,
        input AWVALID_0,
        output AWREADY_0,
        input AWURGENT_0,
        input AWPOISON_0,
        input WDATA_0[127:0],
        input WSTRB_0[15:0],
        input WLAST_0,
        input WVALID_0,
        output WREADY_0,
        output BID_0[7:0],
        output BRESP_0[1:0],
        output BVALID_0,
        input BREADY_0,
        input ARID_0[7:0],
        input ARADDR_0[31:0],
        input ARLEN_0[7:0],
        input ARSIZE_0[2:0],
        input ARBURST_0[1:0],
        input ARLOCK_0,
        input ARVALID_0,
        output ARREADY_0,
        input ARPOISON_0,
        output RID_0[7:0],
        output RDATA_0[127:0],
        output RRESP_0[1:0],
        output RLAST_0,
        output RVALID_0,
        input RREADY_0,
        input ARURGENT_0,
        output RAQ_PUSH_0,
        output RAQ_SPLIT_0,
        output WAQ_PUSH_0,
        output WAQ_SPLIT_0,
        input ARESET_1,
        input ACLK_1,
        input AWID_1[7:0],
        input AWADDR_1[31:0],
        input AWLEN_1[7:0],
        input AWSIZE_1[2:0],
        input AWBURST_1[1:0],
        input AWLOCK_1,
        input AWVALID_1,
        output AWREADY_1,
        input AWURGENT_1,
        input AWPOISON_1,
        input WDATA_1[63:0],
        input WSTRB_1[7:0],
        input WLAST_1,
        input WVALID_1,
        output WREADY_1,
        output BID_1[7:0],
        output BRESP_1[1:0],
        output BVALID_1,
        input BREADY_1,
        input ARID_1[7:0],
        input ARADDR_1[31:0],
        input ARLEN_1[7:0],
        input ARSIZE_1[2:0],
        input ARBURST_1[1:0],
        input ARLOCK_1,
        input ARVALID_1,
        output ARREADY_1,
        input ARPOISON_1,
        output RID_1[7:0],
        output RDATA_1[63:0],
        output RRESP_1[1:0],
        output RLAST_1,
        output RVALID_1,
        input RREADY_1,
        input ARURGENT_1,
        output RAQ_PUSH_1,
        output RAQ_SPLIT_1,
        output WAQ_PUSH_1,
        output WAQ_SPLIT_1,
        input ARESET_2,
        input ACLK_2,
        input AWID_2[7:0],
        input AWADDR_2[31:0],
        input AWLEN_2[7:0],
        input AWSIZE_2[2:0],
        input AWBURST_2[1:0],
        input AWLOCK_2,
        input AWVALID_2,
        output AWREADY_2,
        input AWURGENT_2,
        input AWPOISON_2,
        input WDATA_2[63:0],
        input WSTRB_2[7:0],
        input WLAST_2,
        input WVALID_2,
        output WREADY_2,
        output BID_2[7:0],
        output BRESP_2[1:0],
        output BVALID_2,
        input BREADY_2,
        input ARID_2[7:0],
        input ARADDR_2[31:0],
        input ARLEN_2[7:0],
        input ARSIZE_2[2:0],
        input ARBURST_2[1:0],
        input ARLOCK_2,
        input ARVALID_2,
        output ARREADY_2,
        input ARPOISON_2,
        output RID_2[7:0],
        output RDATA_2[63:0],
        output RRESP_2[1:0],
        output RLAST_2,
        output RVALID_2,
        input RREADY_2,
        input ARURGENT_2,
        output RAQ_PUSH_2,
        output RAQ_SPLIT_2,
        output WAQ_PUSH_2,
        output WAQ_SPLIT_2,
        input AWQOS_0[3:0],
        input ARQOS_0[3:0],
        input AWQOS_1[3:0],
        input ARQOS_1[3:0],
        input AWQOS_2[3:0],
        input ARQOS_2[3:0],
        input CSYSREQ_0,
        output CSYSACK_0,
        output CACTIVE_0,
        input CSYSREQ_1,
        output CSYSACK_1,
        output CACTIVE_1,
        input CSYSREQ_2,
        output CSYSACK_2,
        output CACTIVE_2,
        input CSYSREQ_DDRC,
        output CSYSACK_DDRC,
        output CACTIVE_DDRC,
        input PA_RMASK[2:0],
        input PA_WMASK[2:0],
        output DFI_ADDRESS[31:0],
        output DFI_BANK[5:0],
        output DFI_CAS_N[1:0],
        output DFI_RAS_N[1:0],
        output DFI_WE_N[1:0],
        output DFI_CKE[1:0],
        output DFI_CS[1:0],
        output DFI_ODT[1:0],
        output DFI_RESET_N[1:0],
        output DFI_WRDATA[63:0],
        output DFI_WRDATA_MASK[7:0],
        output DFI_WRDATA_EN[3:0],
        input DFI_RDDATA[63:0],
        output DFI_RDDATA_EN[3:0],
        input DFI_RDDATA_VALID[3:0],
        input DFI_CTRLUPD_ACK,
        output DFI_CTRLUPD_REQ,
        output DFI_DRAM_CLK_DISABLE,
        input DFI_INIT_COMPLETE,
        output DFI_INIT_START,
        output DFI_FREQUENCY[4:0],
        input DFI_PHYUPD_REQ,
        input DFI_PHYUPD_TYPE[1:0],
        output DFI_PHYUPD_ACK,
        output DFI_LP_REQ,
        output DFI_LP_WAKEUP[3:0],
        input DFI_LP_ACK,
        input PCLK,
        input PRESET,
        input PADDR[11:0],
        input PWDATA[31:0],
        input PWRITE,
        input PSEL,
        input PENABLE,
        output PREADY,
        output PRDATA[31:0],
        output PSLVERR,
        output AWPOISON_INTR_2,
        output ARPOISON_INTR_2,
        output AWPOISON_INTR_1,
        output ARPOISON_INTR_1,
        output AWPOISON_INTR_0,
        output ARPOISON_INTR_0,
        output RAQ_WCOUNT_0[2:0],
        output RAQ_POP_0,
        output WAQ_WCOUNT_0[2:0],
        output WAQ_POP_0,
        output RAQ_WCOUNT_1[2:0],
        output RAQ_POP_1,
        output WAQ_WCOUNT_1[2:0],
        output WAQ_POP_1,
        output RAQ_WCOUNT_2[2:0],
        output RAQ_POP_2,
        output WAQ_WCOUNT_2[2:0],
        output WAQ_POP_2,
        output STAT_DDRC_REG_SELFREF_TYPE[1:0],
        output PERF_HIF_RD_OR_WR,
        output PERF_HIF_WR,
        output PERF_HIF_RD,
        output PERF_HIF_RMW,
        output PERF_HIF_HI_PRI_RD,
        output PERF_DFI_WR_DATA_CYCLES,
        output PERF_DFI_RD_DATA_CYCLES,
        output PERF_HPR_XACT_WHEN_CRITICAL,
        output PERF_LPR_XACT_WHEN_CRITICAL,
        output PERF_WR_XACT_WHEN_CRITICAL,
        output PERF_OP_IS_ACTIVATE,
        output PERF_OP_IS_RD_OR_WR,
        output PERF_OP_IS_RD_ACTIVATE,
        output PERF_OP_IS_RD,
        output PERF_OP_IS_WR,
        output PERF_OP_IS_PRECHARGE,
        output PERF_PRECHARGE_FOR_RDWR,
        output PERF_PRECHARGE_FOR_OTHER,
        output PERF_RDWR_TRANSITIONS,
        output PERF_WRITE_COMBINE,
        output PERF_WAR_HAZARD,
        output PERF_RAW_HAZARD,
        output PERF_WAW_HAZARD,
        output PERF_OP_IS_ENTER_SELFREF,
        output PERF_OP_IS_ENTER_POWERDOWN,
        output PERF_OP_IS_ENTER_DEEPPOWERDOWN,
        output PERF_SELFREF_MODE,
        output PERF_OP_IS_REFRESH,
        output PERF_OP_IS_LOAD_MODE,
        output PERF_OP_IS_ZQCL,
        output PERF_OP_IS_ZQCS,
        output PERF_BANK[2:0],
        output PERF_HPR_REQ_WITH_NOCREDIT,
        output PERF_LPR_REQ_WITH_NOCREDIT,
        output LPR_CREDIT_CNT[6:0],
        output HPR_CREDIT_CNT[6:0],
        output WR_CREDIT_CNT[6:0],
        input SCANMODE_N,
        input SCAN_RESET,
        input SCAN_EN,
        output RESTART_H,
        output TST_DONE,
        input DIAG_CLK,
        output FAIL_H,
        input HOLD_L,
        input DEBUGZ,
        output DIAG_SCAN_OUT,
        input TEST_H,
        input BIST_CLK,
        input RST_L
    );
};


design
operator V_DDRPHY
{
    parameter
    (
        bit TEST_PATTERN2[31:0] = 32'h00000000,
        bit TEST_PATTERN3[31:0] = 32'h00000000,
        int T200US = 54000,
        bit MR0_DDR3[15:0] = 16'h1108,
        bit MR1_DDR3[15:0] = 16'h0001,
        bit MR2_DDR3[15:0] = 16'h0000,
        bit MR3_DDR3[15:0] = 16'h0000,
        bit MR_DDR2[15:0] = 16'h0100,
        bit EMR1_DDR2[15:0] = 16'h0401,
        bit EMR2_DDR2[15:0] = 16'h0000,
        bit EMR3_DDR2[15:0] = 16'h0000,
        bit MR_LPDDR[15:0] = 16'h0003,
        bit EMR_LPDDR[15:0] = 16'h0000,
        int TMRD = 0,
        int TMOD = 0,
        int TZQINIT = 0,
        int TXPR = 0,
        int TRP = 0,
        int TRFC = 0,
        string WL_EN = "FALSE",
        string DDR_TYPE = "DDR3",
        string DATA_WIDTH = "16BIT",
        bit DQS_GATE_MODE[1:0] = 2'b00,
        string WRDATA_PATH_ADJ = "FALSE",
        string CTRL_PATH_ADJ = "FALSE",
        bit WL_MAX_STEP[7:0] = 8'b00000000,
        bit WL_MAX_CHECK[4:0] = 5'b00000,
        string MAN_WRLVL_DQS_L = "FALSE",
        string MAN_WRLVL_DQS_H = "FALSE",
        bit WL_CTRL_L[2:0] = 3'b000,
        bit WL_CTRL_H[2:0] = 3'b000,
        bit INIT_READ_CLK_CTRL[1:0] = 2'b00,
        bit INIT_READ_CLK_CTRL_H[1:0] = 2'b00,
        bit INIT_SLIP_STEP[3:0] = 4'b0000,
        bit INIT_SLIP_STEP_H[3:0] = 4'b0000,
        string FORCE_READ_CLK_CTRL_L = "FALSE",
        string FORCE_READ_CLK_CTRL_H = "FALSE",
        string STOP_WITH_ERROR = "TRUE",
        bit DQGT_DEBUG = 1'b0,
        bit WRITE_DEBUG = 1'b0,
        bit RDEL_ADJ_MAX_RANG[4:0] = 5'b00000,
        bit MIN_DQSI_WIN[3:0] = 4'b0000,
        bit INIT_SAMP_POSITION[7:0] = 8'b00000000,
        bit INIT_SAMP_POSITION_H[7:0] = 8'b00000000,
        string FORCE_SAMP_POSITION_L = "FALSE",
        string FORCE_SAMP_POSITION_H = "FALSE",
        bit RDEL_RD_CNT[18:0] = 19'b0000000000000000000,
        int T400NS = 0,
        bit T_LPDDR[8:0] = 9'b000000000,
        bit REF_CNT[7:0] = 8'b00000000,
        string APB_VLD = "FALSE",
        bit TEST_PATTERN1[127:0] = 128'h0000ffff0000ffff0000ffff0000ffff,
        string TRAIN_RST_TYPE = "FALSE",
        bit TXS[7:0] = 8'b00000000,
        bit WL_SETTING = 1'b0,
        bit WCLK_DEL_SEL = 1'b0,
        bit INIT_WRLVL_STEP_L[7:0] = 8'b00000000,
        bit INIT_WRLVL_STEP_H[7:0] = 8'b00000000
    );

    port
    (
        input DDRPHY_UPDATE_TYPE[1:0],
        input DDRPHY_UPDATE_COMP_VAL_L[1:0],
        input DDRPHY_UPDATE_COMP_DIR_L,
        input DDRPHY_UPDATE_COMP_VAL_H[1:0],
        input DDRPHY_UPDATE_COMP_DIR_H,
        input DDRPHY_CLKIN,
        input DDRPHY_RST,
        output DDRPHY_RST_REQ,
        input DDRPHY_RST_ACK,
        input DDRPHY_UPDATE,
        output DDRPHY_UPDATE_DONE,
        input PCLK,
        input PRESET,
        input PADDR[11:0],
        input PWDATA[31:0],
        input PWRITE,
        input PSEL,
        input PENABLE,
        output PREADY,
        output PRDATA[31:0],
        output DDRPHY_GATEI_H,
        output DDRPHY_GATEI_L,
        input DDRPHY_DQ_L[7:0],
        input DDRPHY_DQ_H[7:0],
        input DLL_UPDATE_ACK,
        output DLL_UPDATE_REQ,
        output DDRPHY_WL_STEP_L[7:0],
        output DDRPHY_WL_CTRL_L[2:0],
        output DDRPHY_RDQS_STEP_L[2:0],
        output DDRPHY_DQS_GATE_CTRL_L[1:0],
        output DDRPHY_READ_CLK_CTRL_L[2:0],
        input DDRPHY_WL_OV_L,
        input DDRPHY_DGTS_L,
        input DDRPHY_READ_VALID_L,
        input DDRPHY_DLL_STEP[7:0],
        input DDRPHY_RDEL_OV_L,
        input DDRPHY_RDATA_L[31:0],
        output DDRPHY_WEN_L[15:0],
        output DDRPHY_WDATA_L[31:0],
        output DDRPHY_WDQS_L[3:0],
        output DDRPHY_WDQS_EN_L[1:0],
        output DDRPHY_DM_L[3:0],
        output DDRPHY_WL_STEP_H[7:0],
        output DDRPHY_WL_CTRL_H[2:0],
        output DDRPHY_RDQS_STEP_H[2:0],
        output DDRPHY_DQS_GATE_CTRL_H[1:0],
        output DDRPHY_READ_CLK_CTRL_H[2:0],
        input DDRPHY_WL_OV_H,
        input DDRPHY_DGTS_H,
        input DDRPHY_READ_VALID_H,
        input DDRPHY_RDEL_OV_H,
        output DDRPHY_WEN_H[15:0],
        input DDRPHY_RDATA_H[31:0],
        output DDRPHY_WDATA_H[31:0],
        output DDRPHY_WDQS_H[3:0],
        output DDRPHY_DM_H[3:0],
        output DDRPHY_WDQS_EN_H[1:0],
        output IOL_CE[59:0],
        output IOL_CLK_SYS[59:0],
        output IOL_LRS[59:0],
        output RST_DLL,
        output UPDATE_N,
        output DLL_CLK_INPUT,
        output DLL_FREEZE,
        output DQS_RST[4:0],
        output DQS_RST_TRAINING_N[4:0],
        output DQS_CLK_REGIONAL[4:0],
        output DQS_GATEI[2:0],
        output DQS_WL_STEP[23:0],
        output DQS_WL_CTRL[8:0],
        output DQS_DQS_GATE_CTRL[11:0],
        output DQS_DQS_GATE_CTRL_TF2[3:0],
        output DQS_READ_CLK_CTRL[8:0],
        output DQS_RDEL_CTRL[8:0],
        output IOL_TX_DATA_TF8[103:0],
        output IOL_TX_DATA_TF4[183:0],
        output IOL_TX_DATA_TF7[6:0],
        output IOL_IODLY_CTRL[179:0],
        output IOL_MIPI_SW_DYN_I[59:0],
        output IOL_TS_CTRL_TF4[51:0],
        output IOL_TS_CTRL_TF2[91:0],
        output IOL_TS_CTRL_TF3[2:0],
        output MEM_RST_EN,
        input SRB_RST_DLL,
        input DLL_UPDATE_N,
        input SRB_DLL_FREEZE,
        input SRB_IOL_RST,
        input SRB_DQS_RST,
        input SRB_DQS_RST_TRAINING,
        output DDRPHY_CA_EN[55:0],
        output DDRPHY_ADDR[63:0],
        output DDRPHY_BA[11:0],
        output DDRPHY_CK[3:0],
        output DDRPHY_CKE[3:0],
        output DDRPHY_CS_N[3:0],
        output DDRPHY_RAS_N[3:0],
        output DDRPHY_CAS_N[3:0],
        output DDRPHY_WE_N[3:0],
        output DDRPHY_ODT[3:0],
        output DDRPHY_MEM_RST,
        output DFI_RDDATA[63:0],
        output DFI_RDDATA_VALID[3:0],
        output DFI_CTRLUPD_ACK,
        output DFI_INIT_COMPLETE,
        output DFI_PHYUPD_REQ,
        output DFI_PHYUPD_TYPE[1:0],
        output DFI_LP_ACK,
        output DFI_ERROR,
        output DFI_ERROR_INFO[2:0],
        input DFI_ADDRESS[31:0],
        input DFI_BANK[5:0],
        input DFI_CAS_N[1:0],
        input DFI_RAS_N[1:0],
        input DFI_WE_N[1:0],
        input DFI_CKE[1:0],
        input DFI_CS[1:0],
        input DFI_ODT[1:0],
        input DFI_RESET_N[1:0],
        input DFI_WRDATA[63:0],
        input DFI_WRDATA_MASK[7:0],
        input DFI_WRDATA_EN[3:0],
        input DFI_RDDATA_EN[3:0],
        input DFI_CTRLUPD_REQ,
        input DFI_DRAM_CLK_DISABLE,
        input DFI_INIT_START,
        input DFI_FREQUENCY[4:0],
        input DFI_PHYUPD_ACK,
        input DFI_LP_REQ,
        input DFI_LP_WAKEUP[3:0],
        input MODE_SEL_DBG,
        output DDRPHY_DBG[143:0]
    );
};

design
operator V_DCC
{
    parameter
    (
        string GRS_EN = "FALSE", // "TRUE"; "FALSE"
        string SAMPLE_CLKDIV_FACTOR = "2" // "1"; "2"; "3.5"; "4"; "5";
    );

    port
    (
        output SAMPLE_CLKOUT,
        output PROBE_CLKOUT,
        output SAMPLE_CLKDIVOUT,
        input  CLKOUT_CTRL[2:0],
        input  CLKIN0,
        input  CLKIN1,
        input  RST,
        input  CLK0_SEL[1:0],
        input  CLK1_SEL[1:0],
        input  DELAY_STEP0[7:0],
        input  DELAY_STEP1[7:0]
    );
};

design
operator V_DDC
{
    parameter
    (
        string GRS_EN = "FALSE", // "TRUE"; "FALSE"
        string DDC_MODE = "FULL_RATE", // "FULL_RATE"; "HALF_RATE"; "QUAD_RATE"
        string IFIFO_GENERIC = "TRUE", // "TRUE"; "FALSE"
        bit WCLK_DELAY_OFFSET[8:0] = 9'b000000000, // 0~255
        bit DQSI_DELAY_OFFSET[8:0] = 9'b000000000, // 0~255
        string CLKA_GATE_EN = "FALSE",
        string R_DELAY_STEP_EN = "TRUE", // "TRUE"; "FALSE"
        string R_MOVE_EN = "TRUE", // "TRUE"; "FALSE"
        string W_MOVE_EN = "TRUE", // "TRUE"; "FALSE"
        string R_EXTEND = "FALSE", // "TRUE"; "FALSE"
        bit RADDR_INIT[2:0] = 3'b000
    );

    port
    (
        //output
        output WDELAY_OB,
        output WCLK,
        output WCLK_DELAY,
        output RDELAY_OB,
        output DQSI_DELAY,
        output DGTS,
        output READ_VALID,
        output IFIFO_WADDR[2:0],
        output IFIFO_RADDR[2:0],
        //input
        input RST,
        input CLKB,
        input CLKA,
        input CLKA_GATE,
        input DELAY_STEP1[7:0],
        input DELAY_STEP0[7:0],
        input W_DIRECTION,
        input W_MOVE,
        input W_LOAD_N,
        input DQS_GATE_CTRL[3:0],
        input READ_CLK_CTRL[2:0],
        input DQSI,
        input R_DIRECTION,
        input R_MOVE,
        input R_LOAD_N
    );
};

design
operator V_IODELAY
{
    parameter
    (
        bit DELAY_STEP[6:0] = 7'b0000000,
        int DELAY_DEPTH = 7
    );
    port
    (
        input  DI,
        input  LOAD_N,
        input  MOVE,
        input  DIRECTION,
        output DELAY_OB,
        output DO
    );
};

design
operator V_IOCLKDELAY
{
    parameter
    (
        bit    DELAY_STEP_VALUE[7:0] = 8'b00000000,
        string DELAY_STEP_SEL = "PARAMETER" //"PARAMETER"
    );

    port
    (
        output CLKOUT,
        output DELAY_OB,
        input  CLKIN,
        input  DELAY_STEP[7:0],
        input  DIRECTION,
        input  LOAD,
        input  MOVE
    );
};

design
operator V_IOCLKBUF
{   
    parameter
    (
        string GATE_EN = "TRUE"
    );
    port
    (
        input CLKIN,
        input DI,
        output CLKOUT
    );
};

design
operator V_IOCLKDIV
{
    parameter
    (
        string GRS_EN = "FALSE",
        string DIV_FACTOR = "2"
    );

    port
    (
        input CLKIN,
        input RST_N,
        output CLKDIVOUT
    );
};

design
operator V_USCM
{
    parameter
    (
        string USCM_MODE = "USCM",
        string SIM_DEVICE = "TITAN"
    );

    port
    (
        input CLK0,
        input CLK1,
        input SEL,
        output CLKOUT
    );
};

design
operator V_IPAL
{
    parameter
    (
        string DATA_WIDTH = "X8",
        bit IDCODE[31:0] = 32'hAAAA5555,
        int MEM_DEPTH = 1616
    );

    port
    (
        input RST_N,
        input CLK,
        input DI[7:0],
        input CS_N,
        input RW_SEL,
        output DO[7:0],
        output BUSY
    );
};

design
operator V_SCANCHAIN /* pragma PAP_LIB_NO_PRUNE */
{
    parameter
    (
        bit IDCODE[31:0] = 32'hAAAA5555
    );

    port
    (
        input TCK,
        input TDI,
        input TMS,
        output TDO,
        output CAPDR,
        output JCLK,
        output RST,
        output FLG_USER,
        output SHFTDR,
        output TDI_USER,
        output UPDR,
        input TDO_USER
    );
};

design
operator V_EFUSECODE
{
    parameter
    (
        bit SIM_EFUSE_VALUE[31:0] = 32'h12345678
    );

    port
    (
        output EFUSE_CODE[31:0]
    );
};

design
operator V_START /* pragma PAP_LIB_NO_PRUNE */
{
    port
    (
        input CLK,
        input GOE,
        input GRS_N,
        input GWE
    );
};

design
operator V_ONE
{  
    parameter
    (
        string SECTION = ""     // A, B, C, D
    );
    port
    (
        output Z
    );
};

design
operator V_ZERO
{
    parameter
    (
        string SECTION = ""     // A, B, C, D
    );
    port
    (
        output Z
    );
};

design
operator V_GRS /* pragma PAP_LIB_NO_PRUNE */
{
    port
    (
        input GRS_N
    );
};

design
operator V_HSST
{
    parameter
    (
        string PCS_CH0_BYPASS_WORD_ALIGN = "FALSE",
        string PCS_CH0_BYPASS_DENC = "FALSE",
        string PCS_CH0_BYPASS_BONDING = "FALSE",
        string PCS_CH0_BYPASS_CTC = "FALSE",
        string PCS_CH0_BYPASS_GEAR = "FALSE",
        string PCS_CH0_BYPASS_BRIDGE = "FALSE",
        string PCS_CH0_DATA_MODE = "X8",
        string PCS_CH0_RX_POLARITY_INV = "DELAY",
        string PCS_CH0_ALIGN_MODE = "1GB",          // 1GB,10GB,RAPIDIO,OUTSIDE  
        string PCS_CH0_SAMP_16B = "X16",
        int PCS_CH0_COMMA_REG0 = 0,
        int PCS_CH0_COMMA_MASK = 0,
        string PCS_CH0_CEB_MODE = "10GB",           // 10GB,RAPIDIO,OUTSIDE 
        string PCS_CH0_CTC_MODE = "1SKIP",
        int PCS_CH0_A_REG = 0,
        string PCS_CH0_GE_AUTO_EN = "FALSE",
        int PCS_CH0_SKIP_REG0 = 0,
        int PCS_CH0_SKIP_REG1 = 0,
        int PCS_CH0_SKIP_REG2 = 0,
        int PCS_CH0_SKIP_REG3 = 0,
        string PCS_CH0_DEC_DUAL = "FALSE",
        string PCS_CH0_SPLIT = "FALSE",
        string PCS_CH0_FIFOFLAG_CTC = "FALSE",
        string PCS_CH0_COMMA_DET_MODE = "COMMA_PATTERN",
        string PCS_CH0_ERRDETECT_SILENCE = "FALSE",
        string PCS_CH0_PMA_RCLK_POLINV = "PMA_RCLK",
        string PCS_CH0_PCS_RCLK_SEL = "PMA_RCLK",
        string PCS_CH0_MCB_RCLK_POLINV = "MCB_RCLK",
        string PCS_CH0_CB_RCLK_SEL = "PMA_RCLK",
        string PCS_CH0_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        string PCS_CH0_RCLK_POLINV = "RCLK",
        string PCS_CH0_BRIDGE_RCLK_SEL = "PMA_RCLK",
        string PCS_CH0_PCS_RCLK_EN = "FALSE",
        string PCS_CH0_CB_RCLK_EN = "FALSE",
        string PCS_CH0_AFTER_CTC_RCLK_EN = "FALSE",
        string PCS_CH0_AFTER_CTC_RCLK_EN_GB = "FALSE",
        string PCS_CH0_BRIDGE_RCLK_EN = "FALSE",
        string PCS_CH0_PCS_RX_RSTN = "FALSE",
        string PCS_CH0_SLAVE = "MASTER",
        string PCS_CH0_PCS_CB_RSTN = "FALSE",
        string PCS_CH0_TX_BYPASS_BRIDGE_UINT = "FALSE",
        string PCS_CH0_TX_BYPASS_GEAR = "FALSE",
        string PCS_CH0_TX_BYPASS_ENC = "FALSE",
        string PCS_CH0_TX_BYPASS_BIT_SLIP = "FALSE",
        string PCS_CH0_TX_GEAR_SPLIT = "FALSE",
        string PCS_CH0_TX_DRIVE_REG_MODE = "NO_CHANGE",
        int PCS_CH0_TX_BIT_SLIP_CYCLES = 0,
        string PCS_CH0_INT_TX_MASK_0 = "FALSE",
        string PCS_CH0_INT_TX_MASK_1 = "FALSE",
        string PCS_CH0_INT_TX_MASK_2 = "FALSE",
        string PCS_CH0_INT_TX_CLR_0 = "FALSE",
        string PCS_CH0_INT_TX_CLR_1 = "FALSE",
        string PCS_CH0_INT_TX_CLR_2 = "FALSE",
        string PCS_CH0_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        string PCS_CH0_TX_PCS_CLK_EN_SEL = "FALSE",
        string PCS_CH0_TX_BRIDGE_TCLK_SEL = "PCS_TCLK",
        string PCS_CH0_TX_TCLK_POLINV = "TCLK",
        string PCS_CH0_TX_PCS_TX_RSTN = "FALSE",
        string PCS_CH0_TX_SLAVE = "SLAVE",
        string PCS_CH0_TX_BRIDGE_CLK_EN_SEL = "FALSE",
        string PCS_CH0_DATA_WIDTH_MODE = "X20",
        string PCS_CH0_TX_TCLK2FABRIC_SEL = "FALSE",
        string PCS_CH0_TX_OUTZZ = "FALSE",
        string PCS_CH0_ENC_DUAL = "FALSE",
        string PCS_CH0_TX_BITSLIP_DATA_MODE = "X10",
        int PCS_CH0_COMMA_REG1 = 0,
        int PCS_CH0_RAPID_IMAX = 0,
        int PCS_CH0_RAPID_VMIN_1 = 0,
        int PCS_CH0_RAPID_VMIN_2 = 0,
        string PCS_CH0_RX_PRBS_MODE = "DISABLE",
        string PCS_CH0_RX_ERRCNT_CLR = "FALSE",
        string PCS_CH0_TX_PRBS_MODE = "DISABLE",
        string PCS_CH0_TX_INSERT_ER = "FALSE",
        string PCS_CH0_ENABLE_PRBS_GEN = "FALSE",
        int PCS_CH0_ERR_CNT = 0,
        int PCS_CH0_DEFAULT_RADDR = 0,
        int PCS_CH0_MASTER_CHECK_OFFSET = 0,
        int PCS_CH0_DELAY_SET = 0,
        string PCS_CH0_SEACH_OFFSET = "20BIT",
        int PCS_CH0_CEB_RAPIDLS_MMAX = 0,
        int PCS_CH0_CTC_AFULL = 0,
        int PCS_CH0_CTC_AEMPTY = 0,
        string PCS_CH0_FAR_LOOP = "FALSE",
        string PCS_CH0_NEAR_LOOP = "FALSE",
        string PCS_CH0_INT_RX_MASK_0 = "FALSE",
        string PCS_CH0_INT_RX_MASK_1 = "FALSE",
        string PCS_CH0_INT_RX_MASK_2 = "FALSE",
        string PCS_CH0_INT_RX_MASK_3 = "FALSE",
        string PCS_CH0_INT_RX_MASK_4 = "FALSE",
        string PCS_CH0_INT_RX_MASK_5 = "FALSE",
        string PCS_CH0_INT_RX_MASK_6 = "FALSE",
        string PCS_CH0_INT_RX_MASK_7 = "FALSE",
        string PCS_CH0_INT_RX_CLR_0 = "FALSE",
        string PCS_CH0_INT_RX_CLR_1 = "FALSE",
        string PCS_CH0_INT_RX_CLR_2 = "FALSE",
        string PCS_CH0_INT_RX_CLR_3 = "FALSE",
        string PCS_CH0_INT_RX_CLR_4 = "FALSE",
        string PCS_CH0_INT_RX_CLR_5 = "FALSE",
        string PCS_CH0_INT_RX_CLR_6 = "FALSE",
        string PCS_CH0_INT_RX_CLR_7 = "FALSE",
        string PCS_CH1_BYPASS_WORD_ALIGN = "FALSE",
        string PCS_CH1_BYPASS_DENC = "FALSE",
        string PCS_CH1_BYPASS_BONDING = "FALSE",
        string PCS_CH1_BYPASS_CTC = "FALSE",
        string PCS_CH1_BYPASS_GEAR = "FALSE",
        string PCS_CH1_BYPASS_BRIDGE = "FALSE",
        string PCS_CH1_DATA_MODE = "X8",
        string PCS_CH1_RX_POLARITY_INV = "DELAY",
        string PCS_CH1_ALIGN_MODE = "1GB",
        string PCS_CH1_SAMP_16B = "X16",
        int PCS_CH1_COMMA_REG0 = 0,
        int PCS_CH1_COMMA_MASK = 0,
        string PCS_CH1_CEB_MODE = "10GB",
        string PCS_CH1_CTC_MODE = "1SKIP",
        int PCS_CH1_A_REG = 0,
        string PCS_CH1_GE_AUTO_EN = "FALSE",
        int PCS_CH1_SKIP_REG0 = 0,
        int PCS_CH1_SKIP_REG1 = 0,
        int PCS_CH1_SKIP_REG2 = 0,
        int PCS_CH1_SKIP_REG3 = 0,
        string PCS_CH1_DEC_DUAL = "FALSE",
        string PCS_CH1_SPLIT = "FALSE",
        string PCS_CH1_FIFOFLAG_CTC = "FALSE",
        string PCS_CH1_COMMA_DET_MODE = "COMMA_PATTERN",
        string PCS_CH1_ERRDETECT_SILENCE = "FALSE",
        string PCS_CH1_PMA_RCLK_POLINV = "PMA_RCLK",
        string PCS_CH1_PCS_RCLK_SEL = "PMA_RCLK",
        string PCS_CH1_MCB_RCLK_POLINV = "MCB_RCLK",
        string PCS_CH1_CB_RCLK_SEL = "PMA_RCLK",
        string PCS_CH1_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        string PCS_CH1_RCLK_POLINV = "RCLK",
        string PCS_CH1_BRIDGE_RCLK_SEL = "PMA_RCLK",
        string PCS_CH1_PCS_RCLK_EN = "FALSE",
        string PCS_CH1_CB_RCLK_EN = "FALSE",
        string PCS_CH1_AFTER_CTC_RCLK_EN = "FALSE",
        string PCS_CH1_AFTER_CTC_RCLK_EN_GB = "FALSE",
        string PCS_CH1_BRIDGE_RCLK_EN = "FALSE",
        string PCS_CH1_PCS_RX_RSTN = "FALSE",
        string PCS_CH1_SLAVE = "MASTER",
        string PCS_CH1_PCS_CB_RSTN = "FALSE",
        string PCS_CH1_TX_BYPASS_BRIDGE_UINT = "FALSE",
        string PCS_CH1_TX_BYPASS_GEAR = "FALSE",
        string PCS_CH1_TX_BYPASS_ENC = "FALSE",
        string PCS_CH1_TX_BYPASS_BIT_SLIP = "FALSE",
        string PCS_CH1_TX_GEAR_SPLIT = "FALSE",
        string PCS_CH1_TX_DRIVE_REG_MODE = "NO_CHANGE",
        int PCS_CH1_TX_BIT_SLIP_CYCLES = 0,
        string PCS_CH1_INT_TX_MASK_0 = "FALSE",
        string PCS_CH1_INT_TX_MASK_1 = "FALSE",
        string PCS_CH1_INT_TX_MASK_2 = "FALSE",
        string PCS_CH1_INT_TX_CLR_0 = "FALSE",
        string PCS_CH1_INT_TX_CLR_1 = "FALSE",
        string PCS_CH1_INT_TX_CLR_2 = "FALSE",
        string PCS_CH1_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        string PCS_CH1_TX_PCS_CLK_EN_SEL = "FALSE",
        string PCS_CH1_TX_BRIDGE_TCLK_SEL = "PCS_TCLK",
        string PCS_CH1_TX_TCLK_POLINV = "TCLK",
        string PCS_CH1_TX_PCS_TX_RSTN = "FALSE",
        string PCS_CH1_TX_SLAVE = "SLAVE",
        string PCS_CH1_TX_BRIDGE_CLK_EN_SEL = "FALSE",
        string PCS_CH1_DATA_WIDTH_MODE = "X20",
        string PCS_CH1_TX_TCLK2FABRIC_SEL = "FALSE",
        string PCS_CH1_TX_OUTZZ = "FALSE",
        string PCS_CH1_ENC_DUAL = "FALSE",
        string PCS_CH1_TX_BITSLIP_DATA_MODE = "X10",
        int PCS_CH1_COMMA_REG1 = 0,
        int PCS_CH1_RAPID_IMAX = 0,
        int PCS_CH1_RAPID_VMIN_1 = 0,
        int PCS_CH1_RAPID_VMIN_2 = 0,
        string PCS_CH1_RX_PRBS_MODE = "DISABLE",
        string PCS_CH1_RX_ERRCNT_CLR = "FALSE",
        string PCS_CH1_TX_PRBS_MODE = "DISABLE",
        string PCS_CH1_TX_INSERT_ER = "FALSE",
        string PCS_CH1_ENABLE_PRBS_GEN = "FALSE",
        int PCS_CH1_ERR_CNT = 0,
        int PCS_CH1_DEFAULT_RADDR = 0,
        int PCS_CH1_MASTER_CHECK_OFFSET = 0,
        int PCS_CH1_DELAY_SET = 0,
        string PCS_CH1_SEACH_OFFSET = "20BIT",
        int PCS_CH1_CEB_RAPIDLS_MMAX = 0,
        int PCS_CH1_CTC_AFULL = 0,
        int PCS_CH1_CTC_AEMPTY = 0,
        string PCS_CH1_FAR_LOOP = "FALSE",
        string PCS_CH1_NEAR_LOOP = "FALSE",
        string PCS_CH1_INT_RX_MASK_0 = "FALSE",
        string PCS_CH1_INT_RX_MASK_1 = "FALSE",
        string PCS_CH1_INT_RX_MASK_2 = "FALSE",
        string PCS_CH1_INT_RX_MASK_3 = "FALSE",
        string PCS_CH1_INT_RX_MASK_4 = "FALSE",
        string PCS_CH1_INT_RX_MASK_5 = "FALSE",
        string PCS_CH1_INT_RX_MASK_6 = "FALSE",
        string PCS_CH1_INT_RX_MASK_7 = "FALSE",
        string PCS_CH1_INT_RX_CLR_0 = "FALSE",
        string PCS_CH1_INT_RX_CLR_1 = "FALSE",
        string PCS_CH1_INT_RX_CLR_2 = "FALSE",
        string PCS_CH1_INT_RX_CLR_3 = "FALSE",
        string PCS_CH1_INT_RX_CLR_4 = "FALSE",
        string PCS_CH1_INT_RX_CLR_5 = "FALSE",
        string PCS_CH1_INT_RX_CLR_6 = "FALSE",
        string PCS_CH1_INT_RX_CLR_7 = "FALSE",
        string PCS_CH2_BYPASS_WORD_ALIGN = "FALSE",
        string PCS_CH2_BYPASS_DENC = "FALSE",
        string PCS_CH2_BYPASS_BONDING = "FALSE",
        string PCS_CH2_BYPASS_CTC = "FALSE",
        string PCS_CH2_BYPASS_GEAR = "FALSE",
        string PCS_CH2_BYPASS_BRIDGE = "FALSE",
        string PCS_CH2_DATA_MODE = "X8",
        string PCS_CH2_RX_POLARITY_INV = "DELAY",
        string PCS_CH2_ALIGN_MODE = "1GB",
        string PCS_CH2_SAMP_16B = "X16",
        int PCS_CH2_COMMA_REG0 = 0,
        int PCS_CH2_COMMA_MASK = 0,
        string PCS_CH2_CEB_MODE = "10GB",
        string PCS_CH2_CTC_MODE = "1SKIP",
        int PCS_CH2_A_REG = 0,
        string PCS_CH2_GE_AUTO_EN = "FALSE",
        int PCS_CH2_SKIP_REG0 = 0,
        int PCS_CH2_SKIP_REG1 = 0,
        int PCS_CH2_SKIP_REG2 = 0,
        int PCS_CH2_SKIP_REG3 = 0,
        string PCS_CH2_DEC_DUAL = "FALSE",
        string PCS_CH2_SPLIT = "FALSE",
        string PCS_CH2_FIFOFLAG_CTC = "FALSE",
        string PCS_CH2_COMMA_DET_MODE = "COMMA_PATTERN",
        string PCS_CH2_ERRDETECT_SILENCE = "FALSE",
        string PCS_CH2_PMA_RCLK_POLINV = "PMA_RCLK",
        string PCS_CH2_PCS_RCLK_SEL = "PMA_RCLK",
        string PCS_CH2_MCB_RCLK_POLINV = "MCB_RCLK",
        string PCS_CH2_CB_RCLK_SEL = "PMA_RCLK",
        string PCS_CH2_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        string PCS_CH2_RCLK_POLINV = "RCLK",
        string PCS_CH2_BRIDGE_RCLK_SEL = "PMA_RCLK",
        string PCS_CH2_PCS_RCLK_EN = "FALSE",
        string PCS_CH2_CB_RCLK_EN = "FALSE",
        string PCS_CH2_AFTER_CTC_RCLK_EN = "FALSE",
        string PCS_CH2_AFTER_CTC_RCLK_EN_GB = "FALSE",
        string PCS_CH2_BRIDGE_RCLK_EN = "FALSE",
        string PCS_CH2_PCS_RX_RSTN = "FALSE",
        string PCS_CH2_SLAVE = "MASTER",
        string PCS_CH2_PCS_CB_RSTN = "FALSE",
        string PCS_CH2_TX_BYPASS_BRIDGE_UINT = "FALSE",
        string PCS_CH2_TX_BYPASS_GEAR = "FALSE",
        string PCS_CH2_TX_BYPASS_ENC = "FALSE",
        string PCS_CH2_TX_BYPASS_BIT_SLIP = "FALSE",
        string PCS_CH2_TX_GEAR_SPLIT = "FALSE",
        string PCS_CH2_TX_DRIVE_REG_MODE = "NO_CHANGE",
        int PCS_CH2_TX_BIT_SLIP_CYCLES = 0,
        string PCS_CH2_INT_TX_MASK_0 = "FALSE",
        string PCS_CH2_INT_TX_MASK_1 = "FALSE",
        string PCS_CH2_INT_TX_MASK_2 = "FALSE",
        string PCS_CH2_INT_TX_CLR_0 = "FALSE",
        string PCS_CH2_INT_TX_CLR_1 = "FALSE",
        string PCS_CH2_INT_TX_CLR_2 = "FALSE",
        string PCS_CH2_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        string PCS_CH2_TX_PCS_CLK_EN_SEL = "FALSE",
        string PCS_CH2_TX_BRIDGE_TCLK_SEL = "PCS_TCLK",
        string PCS_CH2_TX_TCLK_POLINV = "TCLK",
        string PCS_CH2_TX_PCS_TX_RSTN = "FALSE",
        string PCS_CH2_TX_SLAVE = "SLAVE",
        string PCS_CH2_TX_BRIDGE_CLK_EN_SEL = "FALSE",
        string PCS_CH2_DATA_WIDTH_MODE = "X20",
        string PCS_CH2_TX_TCLK2FABRIC_SEL = "FALSE",
        string PCS_CH2_TX_OUTZZ = "FALSE",
        string PCS_CH2_ENC_DUAL = "FALSE",
        string PCS_CH2_TX_BITSLIP_DATA_MODE = "X10",
        int PCS_CH2_COMMA_REG1 = 0,
        int PCS_CH2_RAPID_IMAX = 0,
        int PCS_CH2_RAPID_VMIN_1 = 0,
        int PCS_CH2_RAPID_VMIN_2 = 0,
        string PCS_CH2_RX_PRBS_MODE = "DISABLE",
        string PCS_CH2_RX_ERRCNT_CLR = "FALSE",
        string PCS_CH2_TX_PRBS_MODE = "DISABLE",
        string PCS_CH2_TX_INSERT_ER = "FALSE",
        string PCS_CH2_ENABLE_PRBS_GEN = "FALSE",
        int PCS_CH2_ERR_CNT = 0,
        int PCS_CH2_DEFAULT_RADDR = 0,
        int PCS_CH2_MASTER_CHECK_OFFSET = 0,
        int PCS_CH2_DELAY_SET = 0,
        string PCS_CH2_SEACH_OFFSET = "20BIT",
        int PCS_CH2_CEB_RAPIDLS_MMAX = 0,
        int PCS_CH2_CTC_AFULL = 0,
        int PCS_CH2_CTC_AEMPTY = 0,
        string PCS_CH2_FAR_LOOP = "FALSE",
        string PCS_CH2_NEAR_LOOP = "FALSE",
        string PCS_CH2_INT_RX_MASK_0 = "FALSE",
        string PCS_CH2_INT_RX_MASK_1 = "FALSE",
        string PCS_CH2_INT_RX_MASK_2 = "FALSE",
        string PCS_CH2_INT_RX_MASK_3 = "FALSE",
        string PCS_CH2_INT_RX_MASK_4 = "FALSE",
        string PCS_CH2_INT_RX_MASK_5 = "FALSE",
        string PCS_CH2_INT_RX_MASK_6 = "FALSE",
        string PCS_CH2_INT_RX_MASK_7 = "FALSE",
        string PCS_CH2_INT_RX_CLR_0 = "FALSE",
        string PCS_CH2_INT_RX_CLR_1 = "FALSE",
        string PCS_CH2_INT_RX_CLR_2 = "FALSE",
        string PCS_CH2_INT_RX_CLR_3 = "FALSE",
        string PCS_CH2_INT_RX_CLR_4 = "FALSE",
        string PCS_CH2_INT_RX_CLR_5 = "FALSE",
        string PCS_CH2_INT_RX_CLR_6 = "FALSE",
        string PCS_CH2_INT_RX_CLR_7 = "FALSE",
        string PCS_CH3_BYPASS_WORD_ALIGN = "FALSE",
        string PCS_CH3_BYPASS_DENC = "FALSE",
        string PCS_CH3_BYPASS_BONDING = "FALSE",
        string PCS_CH3_BYPASS_CTC = "FALSE",
        string PCS_CH3_BYPASS_GEAR = "FALSE",
        string PCS_CH3_BYPASS_BRIDGE = "FALSE",
        string PCS_CH3_DATA_MODE = "X8",
        string PCS_CH3_RX_POLARITY_INV = "DELAY",
        string PCS_CH3_ALIGN_MODE = "1GB",
        string PCS_CH3_SAMP_16B = "X16",
        int PCS_CH3_COMMA_REG0 = 0,
        int PCS_CH3_COMMA_MASK = 0,
        string PCS_CH3_CEB_MODE = "10GB",
        string PCS_CH3_CTC_MODE = "1SKIP",
        int PCS_CH3_A_REG = 0,
        string PCS_CH3_GE_AUTO_EN = "FALSE",
        int PCS_CH3_SKIP_REG0 = 0,
        int PCS_CH3_SKIP_REG1 = 0,
        int PCS_CH3_SKIP_REG2 = 0,
        int PCS_CH3_SKIP_REG3 = 0,
        string PCS_CH3_DEC_DUAL = "FALSE",
        string PCS_CH3_SPLIT = "FALSE",
        string PCS_CH3_FIFOFLAG_CTC = "FALSE",
        string PCS_CH3_COMMA_DET_MODE = "COMMA_PATTERN",
        string PCS_CH3_ERRDETECT_SILENCE = "FALSE",
        string PCS_CH3_PMA_RCLK_POLINV = "PMA_RCLK",
        string PCS_CH3_PCS_RCLK_SEL = "PMA_RCLK",
        string PCS_CH3_MCB_RCLK_POLINV = "MCB_RCLK",
        string PCS_CH3_CB_RCLK_SEL = "PMA_RCLK",
        string PCS_CH3_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        string PCS_CH3_RCLK_POLINV = "RCLK",
        string PCS_CH3_BRIDGE_RCLK_SEL = "PMA_RCLK",
        string PCS_CH3_PCS_RCLK_EN = "FALSE",
        string PCS_CH3_CB_RCLK_EN = "FALSE",
        string PCS_CH3_AFTER_CTC_RCLK_EN = "FALSE",
        string PCS_CH3_AFTER_CTC_RCLK_EN_GB = "FALSE",
        string PCS_CH3_BRIDGE_RCLK_EN = "FALSE",
        string PCS_CH3_PCS_RX_RSTN = "FALSE",
        string PCS_CH3_SLAVE = "MASTER",
        string PCS_CH3_PCS_CB_RSTN = "FALSE",
        string PCS_CH3_TX_BYPASS_BRIDGE_UINT = "FALSE",
        string PCS_CH3_TX_BYPASS_GEAR = "FALSE",
        string PCS_CH3_TX_BYPASS_ENC = "FALSE",
        string PCS_CH3_TX_BYPASS_BIT_SLIP = "FALSE",
        string PCS_CH3_TX_GEAR_SPLIT = "FALSE",
        string PCS_CH3_TX_DRIVE_REG_MODE = "NO_CHANGE",
        int PCS_CH3_TX_BIT_SLIP_CYCLES = 0,
        string PCS_CH3_INT_TX_MASK_0 = "FALSE",
        string PCS_CH3_INT_TX_MASK_1 = "FALSE",
        string PCS_CH3_INT_TX_MASK_2 = "FALSE",
        string PCS_CH3_INT_TX_CLR_0 = "FALSE",
        string PCS_CH3_INT_TX_CLR_1 = "FALSE",
        string PCS_CH3_INT_TX_CLR_2 = "FALSE",
        string PCS_CH3_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        string PCS_CH3_TX_PCS_CLK_EN_SEL = "FALSE",
        string PCS_CH3_TX_BRIDGE_TCLK_SEL = "PCS_TCLK",
        string PCS_CH3_TX_TCLK_POLINV = "TCLK",
        string PCS_CH3_TX_PCS_TX_RSTN = "FALSE",
        string PCS_CH3_TX_SLAVE = "SLAVE",
        string PCS_CH3_TX_BRIDGE_CLK_EN_SEL = "FALSE",
        string PCS_CH3_DATA_WIDTH_MODE = "X20",
        string PCS_CH3_TX_TCLK2FABRIC_SEL = "FALSE",
        string PCS_CH3_TX_OUTZZ = "FALSE",
        string PCS_CH3_ENC_DUAL = "FALSE",
        string PCS_CH3_TX_BITSLIP_DATA_MODE = "X10",
        int PCS_CH3_COMMA_REG1 = 0,
        int PCS_CH3_RAPID_IMAX = 0,
        int PCS_CH3_RAPID_VMIN_1 = 0,
        int PCS_CH3_RAPID_VMIN_2 = 0,
        string PCS_CH3_RX_PRBS_MODE = "DISABLE",
        string PCS_CH3_RX_ERRCNT_CLR = "FALSE",
        string PCS_CH3_TX_PRBS_MODE = "DISABLE",
        string PCS_CH3_TX_INSERT_ER = "FALSE",
        string PCS_CH3_ENABLE_PRBS_GEN = "FALSE",
        int PCS_CH3_ERR_CNT = 0,
        int PCS_CH3_DEFAULT_RADDR = 0,
        int PCS_CH3_MASTER_CHECK_OFFSET = 0,
        int PCS_CH3_DELAY_SET = 0,
        string PCS_CH3_SEACH_OFFSET = "20BIT",
        int PCS_CH3_CEB_RAPIDLS_MMAX = 0,
        int PCS_CH3_CTC_AFULL = 0,
        int PCS_CH3_CTC_AEMPTY = 0,
        string PCS_CH3_FAR_LOOP = "FALSE",
        string PCS_CH3_NEAR_LOOP = "FALSE",
        string PCS_CH3_INT_RX_MASK_0 = "FALSE",
        string PCS_CH3_INT_RX_MASK_1 = "FALSE",
        string PCS_CH3_INT_RX_MASK_2 = "FALSE",
        string PCS_CH3_INT_RX_MASK_3 = "FALSE",
        string PCS_CH3_INT_RX_MASK_4 = "FALSE",
        string PCS_CH3_INT_RX_MASK_5 = "FALSE",
        string PCS_CH3_INT_RX_MASK_6 = "FALSE",
        string PCS_CH3_INT_RX_MASK_7 = "FALSE",
        string PCS_CH3_INT_RX_CLR_0 = "FALSE",
        string PCS_CH3_INT_RX_CLR_1 = "FALSE",
        string PCS_CH3_INT_RX_CLR_2 = "FALSE",
        string PCS_CH3_INT_RX_CLR_3 = "FALSE",
        string PCS_CH3_INT_RX_CLR_4 = "FALSE",
        string PCS_CH3_INT_RX_CLR_5 = "FALSE",
        string PCS_CH3_INT_RX_CLR_6 = "FALSE",
        string PCS_CH3_INT_RX_CLR_7 = "FALSE",
        string PMA_CH0_TXDATA_WIDTH = "8_BIT",
        int PMA_CH0_TX_TESTPATTERN = 0,
        string PMA_CH0_TESTPATTERN_O_ENABLE = "FALSE",
        string PMA_CH0_DISABLE_BSMODE_DRVAMP = "FALSE",
        string PMA_CH0_FORCE_BIST_ENABLE = "FALSE",
        string PMA_CH0_FORCE_ELECTRICAL_IDLE = "FALSE",
        string PMA_CH0_FORCE_RXDCT_ENABLE = "FALSE",
        string PMA_CH0_FORCE_EXTLB_ENABLE = "FALSE",
        string PMA_CH0_DISABLE_LANE_SYNC = "FALSE",
        string PMA_CH0_DISABLE_ELECTRICAL_IDLE = "FALSE",
        string PMA_CH0_DISABLE_RXDCT_ENABLE = "FALSE",
        string PMA_CH0_DISABLE_EXTLB_ENABLE = "FALSE",
        string PMA_CH0_DISABLE_LOW_SPEED_PATH_ENABLE = "FALSE",
        string PMA_CH0_FORCE_LANE_ENABLE = "FALSE",
        string PMA_CH0_FORCE_LANE_RESETB_DISABLE = "FALSE",
        string PMA_CH0_RXDCT_LGBW_ENABLE = "FALSE",
        string PMA_CH0_RXDCT_VTH = "MINUS_300MV",
        string PMA_CH0_DE_EMPHASIS_ADDITIONAL_CONTROL = "0DB",
        string PMA_CH0_DRV_RTERM_CONTROL = "100PCT",
        string PMA_CH0_FDRV_AMP_CONTROL = "100PCT",
        string PMA_CH0_PREPC_AMP_CONTROL = "100PCT",
        string PMA_CH0_PREMC_AMP_CONTROL = "100PCT",
        string PMA_CH0_SER_AMP_CONTROL = "100PCT",
        int PMA_CH0_PFD_LOOP_RESISTOR_SETTING = 0,
        int PMA_CH0_PD_LOOP_RESISTOR_SETTING = 0,
        string PMA_CH0_CDR_TEST_OUT_SELECT = "FB_CK",
        string PMA_CH0_PI_DIV1_BP = "DISABLE",
        string PMA_CH0_PI_TEST_FOR_CKI = "FALSE",
        string PMA_CH0_PI_CURRENT_SETTING = "100PCT",
        int PMA_CH0_PI_FREQUENCY_SETTING = 0,
        string PMA_CH0_TEST_OUT_SELECT_FOR_RCK = "FALSE",
        string PMA_CH0_TEST_OUT_SELECT_SOURCE = "SLPI1UI",
        string PMA_CH0_TEST_DATA_OUT_SELECT_SOURCE = "DO",
        string PMA_CH0_TEST_CK_OUT_SELECT_SOURCE = "DATA",
        string PMA_CH0_ENABLE_SLIP1UI_MODULE = "DISABLE",
        string PMA_CH0_PN_SWAP_ENABLE = "DISABLE",
        string PMA_CH0_SIPO_BIT_SETTING = "10_BIT",
        string PMA_CH0_OOB_EN = "DISABLE",
        string PMA_CH0_ALOS_EN = "DISABLE",
        string PMA_CH0_LFMODE = "HIGH",
        string PMA_CH0_TSO_HS_SEL = "CDR",
        string PMA_CH0_LX_SELLC = "RING",
        int PMA_CH0_LX_RXPLL_DIVSEL45_FB = 4,
        int PMA_CH0_LX_RXPLL_DIVSEL_FB = 2,
        int PMA_CH0_LX_RXPLL_DIVSEL_REF = 1,
        int PMA_CH0_PICODE = 0,
        int PMA_CH0_RX_REFCK_SEL = 0,
        string PMA_CH0_PFDLPEN_REGISTER_CONTROL_ENABLE = "DISABLE",
        string PMA_CH0_PFDLPEN_REGISTER_SETTING = "FALSE",
        string PMA_CH0_PDLPEN_REGISTER_CONTROL_ENABLE = "DISABLE",
        string PMA_CH0_PDLPEN_REGISTER_SETTING = "FALSE",
        int PMA_CH0_DIV_CHANGE_ENABLE_DELAY_TIMER = 0,
        string PMA_CH0_DIV_CHANGE_ENABLE_SIGNAL_GATING = "FALSE",
        string PMA_CH0_CDR_ALIGN_REGISTER_SETTING_VALUE = "FALSE",
        string PMA_CH0_FORCE_CDR_ALIGN_ENABLE = "DISABLE",
        string PMA_CH0_SELLC_REGISTER_SETTING_VALUE = "FALSE",
        string PMA_CH0_SELLC_CONTROL_BY_REGISTER = "FALSE",
        string PMA_CH0_REG_PLLI_LDO_VREF_SETTING = "0_9V",
        int PMA_CH0_REG_PLLI_LDO_BYPASS_CURRENT = 0,
        string PMA_CH0_REG_PLL_HSTEST_ENABLE = "DISABLE",
        string PMA_CH0_REG_PLL_ISNK_CURRENT_CONTROL = "5U",
        int PMA_CH0_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING = 0,
        string PMA_CH0_REG_PLL_PD_LOOP_PLLGM_SETTING = "100PCT",
        int PMA_CH0_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING = 0,
        string PMA_CH0_REG_PLL_CP0_BIAS_CONTROL = "100PCT",
        int PMA_CH0_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING = 0,
        string PMA_CH0_REG_PLL_CP1_BIAS_CONTROL = "100PCT",
        int PMA_CH0_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING = 0,
        string PMA_CH0_REG_PLL_CP0_CURRENT_SETTING = "100PCT",
        string PMA_CH0_REG_PLL_CP1_CURRENT_SETTING = "100PCT",
        string PMA_CH0_REG_PLL_GM1_CURRENT_SETTING = "100PCT",
        string PMA_CH0_REG_PLL_LC_BF2_CURRENT_SETTING = "100PCT",
        string PMA_CH0_REG_PLL_LC_BF2_CURRENT_SETTING_LOW = "100PCT",
        string PMA_CH0_REG_PLL_REG_CUR = "100PCT",
        string PMA_CH0_REG_PLL_LCCUR = "DEFAULT",
        string PMA_CH0_REG_PLL_LCOBAS = "100PCT",
        string PMA_CH0_REG_PLL_FB_CK_TEST_OUT_ENABLE = "DISABLE",
        int PMA_CH0_CDR_ALIGN_TIMER = 0,
        int PMA_CH0_CALIB_WAIT = 1024,
        int PMA_CH0_CALIB_TIMER = 512,
        int PMA_CH0_TOT_RANGE = 0,
        int PMA_CH0_SUB_RANGE = 0,
        int PMA_CH0_OVLP = 0,
        int PMA_CH0_BIST_WAIT = 1024,
        int PMA_CH0_BIST_TIMER = 512,
        int PMA_CH0_BAND_LB = 0,
        int PMA_CH0_BAND_HB = 0,
        int PMA_CH0_FREQ_LOCK_ACCURACY = 0,
        int PMA_CH0_REG_SET_LC_BAND = 0,
        int PMA_CH0_REG_SET_VCODIV = 0,
        string PMA_CH0_REGISTER_SET_VCODIV_BAND_ENABLE = "DISABLE",
        string PMA_CH0_REG_SET_PLL_LOCK = "FALSE",
        string PMA_CH0_REGISTER_SET_PLL_LOCK_ENABLE = "DISABLE",
        string PMA_CH0_REG_SET_VCO_HI = "FALSE",
        string PMA_CH0_REG_SET_VCO_LO = "FALSE",
        string PMA_CH0_REGISTER_SET_VCO_HI_VCO_LO_ENABLE = "DISABLE",
        string PMA_CH0_FORCE_LC_PLL_LOOP_EN_H = "DISABLE",
        string PMA_CH0_FORCE_LC_PLL_LOOP_EN_L = "DISABLE",
        string PMA_CH0_VCO_DIV_CALI_BYPASS = "FALSE",
        string PMA_CH0_BIST_EN = "DISABLE",
        string PMA_CH0_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE = "DISABLE",
        string PMA_CH0_FREQ_DETECT_ENABLE_SOURCE = "DISABLE",
        int PMA_CH0_REG_SET_DIVSEL_REF = 0,
        string PMA_CH0_REG_SET_DIVSEL45_FB = "FALSE",
        int PMA_CH0_REG_SET_DIVSEL_FB = 0,
        string PMA_CH0_PLL_LOOP_EN_SETTING = "DISABLE",
        string PMA_CH0_REGISTER_SET_TXPLL_DIV_ENABLE = "DISABLE",
        string PMA_CH0_FORCE_RXPLL_RESET = "FALSE",
        string PMA_CH0_FORCE_RXPLL_ON = "FALSE",
        string PMA_CH0_DPCK_DIV2 = "FALSE",
        int PMA_CH0_LFO_SETTING = 0,
        string PMA_CH0_ALOS_COUNTER_CLOCK_SELECTION = "LOCAL",
        string PMA_CH0_RX_BIAS_CURRENT_ADJUSTMENT = "100PCT",
        int PMA_CH0_OOB_ENTER_DELAY_SETTING = 0,
        int PMA_CH0_ALOS_LOW_TO_HIGH_COUNTER_SETTING = 0,
        string PMA_CH0_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL = "DISABLE",
        int PMA_CH0_ALOS_EXIT_COUNTER_CLOCK_DIVIDER = 0,
        int PMA_CH0_OOB_OSCILATER_FREQUENCY_SETTING = 0,
        string PMA_CH0_FORCE_OOB = "FALSE",
        string PMA_CH0_OOB_VTH_SET = "27MV",
        string PMA_CH0_FORCE_DET_FORCE_ALOS_LOW = "FALSE",
        string PMA_CH0_ALOS_THRESHOLD_VOLTAGE = "27MV",
        int PMA_CH0_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE = 0,
        string PMA_CH0_REGR_NEGATIVE_HYSTERESIS_SETTING = "100MV",
        string PMA_CH0_REGL_POSITIVE_HYSTERESIS_SETTING = "100MV",
        string PMA_CH0_REG_EN = "DISABLE",
        string PMA_CH0_REGREF_SEL = "VREF",
        string PMA_CH0_DC496 = "39_6MHZ",
        int PMA_CH0_EQ2_AC_VAR_SETTING = 0,
        int PMA_CH0_EQ2_AC_RES_SETTING = 0,
        int PMA_CH0_EQ2_DC_RESTOP_SETTING = 0,
        int PMA_CH0_EQ1_DC_RESTOP_SETTING = 50,
        int PMA_CH0_EQ1_AC_VAR_SETTING = 0,
        int PMA_CH0_EQ2_CURRENT_SETTING = 0,
        int PMA_CH0_EQ1_AC_RES_SETTING = 0,
        int PMA_CH0_EQ1_CURRENT_SETTING = 0,
        int PMA_CH0_RPLUS = 0,
        int PMA_CH0_RMINUS = 0,
        int PMA_CH0_RVALSET = 0,
        int PMA_CH0_RTERM = 0,
        string PMA_CH0_DCFB_EN = "DISABLE",
        string PMA_CH0_DCCOUP = "FALSE",
        string PMA_CH0_3G = "FALSE",
        string PMA_CH1_TXDATA_WIDTH = "8_BIT",
        int PMA_CH1_TX_TESTPATTERN = 0,
        string PMA_CH1_TESTPATTERN_O_ENABLE = "FALSE",
        string PMA_CH1_DISABLE_BSMODE_DRVAMP = "FALSE",
        string PMA_CH1_FORCE_BIST_ENABLE = "FALSE",
        string PMA_CH1_FORCE_ELECTRICAL_IDLE = "FALSE",
        string PMA_CH1_FORCE_RXDCT_ENABLE = "FALSE",
        string PMA_CH1_FORCE_EXTLB_ENABLE = "FALSE",
        string PMA_CH1_DISABLE_LANE_SYNC = "FALSE",
        string PMA_CH1_DISABLE_ELECTRICAL_IDLE = "FALSE",
        string PMA_CH1_DISABLE_RXDCT_ENABLE = "FALSE",
        string PMA_CH1_DISABLE_EXTLB_ENABLE = "FALSE",
        string PMA_CH1_DISABLE_LOW_SPEED_PATH_ENABLE = "FALSE",
        string PMA_CH1_FORCE_LANE_ENABLE = "FALSE",
        string PMA_CH1_FORCE_LANE_RESETB_DISABLE = "FALSE",
        string PMA_CH1_RXDCT_LGBW_ENABLE = "FALSE",
        string PMA_CH1_RXDCT_VTH = "MINUS_300MV",
        string PMA_CH1_DE_EMPHASIS_ADDITIONAL_CONTROL = "0DB",
        string PMA_CH1_DRV_RTERM_CONTROL = "100PCT",
        string PMA_CH1_FDRV_AMP_CONTROL = "100PCT",
        string PMA_CH1_PREPC_AMP_CONTROL = "100PCT",
        string PMA_CH1_PREMC_AMP_CONTROL = "100PCT",
        string PMA_CH1_SER_AMP_CONTROL = "100PCT",
        int PMA_CH1_PFD_LOOP_RESISTOR_SETTING = 0,
        int PMA_CH1_PD_LOOP_RESISTOR_SETTING = 0,
        string PMA_CH1_CDR_TEST_OUT_SELECT = "FB_CK",
        string PMA_CH1_PI_DIV1_BP = "DISABLE",
        string PMA_CH1_PI_TEST_FOR_CKI = "FALSE",
        string PMA_CH1_PI_CURRENT_SETTING = "100PCT",
        int PMA_CH1_PI_FREQUENCY_SETTING = 0,
        string PMA_CH1_TEST_OUT_SELECT_FOR_RCK = "FALSE",
        string PMA_CH1_TEST_OUT_SELECT_SOURCE = "SLPI1UI",
        string PMA_CH1_TEST_DATA_OUT_SELECT_SOURCE = "DO",
        string PMA_CH1_TEST_CK_OUT_SELECT_SOURCE = "DATA",
        string PMA_CH1_ENABLE_SLIP1UI_MODULE = "DISABLE",
        string PMA_CH1_PN_SWAP_ENABLE = "DISABLE",
        string PMA_CH1_SIPO_BIT_SETTING = "10_BIT",
        string PMA_CH1_OOB_EN = "DISABLE",
        string PMA_CH1_ALOS_EN = "DISABLE",
        string PMA_CH1_LFMODE = "HIGH",
        string PMA_CH1_TSO_HS_SEL = "CDR",
        string PMA_CH1_LX_SELLC = "RING",
        int PMA_CH1_LX_RXPLL_DIVSEL45_FB = 4,
        int PMA_CH1_LX_RXPLL_DIVSEL_FB = 2,
        int PMA_CH1_LX_RXPLL_DIVSEL_REF = 1,
        int PMA_CH1_PICODE = 0,
        int PMA_CH1_RX_REFCK_SEL = 0,
        string PMA_CH1_PFDLPEN_REGISTER_CONTROL_ENABLE = "DISABLE",
        string PMA_CH1_PFDLPEN_REGISTER_SETTING = "FALSE",
        string PMA_CH1_PDLPEN_REGISTER_CONTROL_ENABLE = "DISABLE",
        string PMA_CH1_PDLPEN_REGISTER_SETTING = "FALSE",
        int PMA_CH1_DIV_CHANGE_ENABLE_DELAY_TIMER = 0,
        string PMA_CH1_DIV_CHANGE_ENABLE_SIGNAL_GATING = "FALSE",
        string PMA_CH1_CDR_ALIGN_REGISTER_SETTING_VALUE = "FALSE",
        string PMA_CH1_FORCE_CDR_ALIGN_ENABLE = "DISABLE",
        string PMA_CH1_SELLC_REGISTER_SETTING_VALUE = "FALSE",
        string PMA_CH1_SELLC_CONTROL_BY_REGISTER = "FALSE",
        string PMA_CH1_REG_PLLI_LDO_VREF_SETTING = "0_9V",
        int PMA_CH1_REG_PLLI_LDO_BYPASS_CURRENT = 0,
        string PMA_CH1_REG_PLL_HSTEST_ENABLE = "DISABLE",
        string PMA_CH1_REG_PLL_ISNK_CURRENT_CONTROL = "5U",
        int PMA_CH1_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING = 0,
        string PMA_CH1_REG_PLL_PD_LOOP_PLLGM_SETTING = "100PCT",
        int PMA_CH1_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING = 0,
        string PMA_CH1_REG_PLL_CP0_BIAS_CONTROL = "100PCT",
        int PMA_CH1_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING = 0,
        string PMA_CH1_REG_PLL_CP1_BIAS_CONTROL = "100PCT",
        int PMA_CH1_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING = 0,
        string PMA_CH1_REG_PLL_CP0_CURRENT_SETTING = "100PCT",
        string PMA_CH1_REG_PLL_CP1_CURRENT_SETTING = "100PCT",
        string PMA_CH1_REG_PLL_GM1_CURRENT_SETTING = "100PCT",
        string PMA_CH1_REG_PLL_LC_BF2_CURRENT_SETTING = "100PCT",
        string PMA_CH1_REG_PLL_LC_BF2_CURRENT_SETTING_LOW = "100PCT",
        string PMA_CH1_REG_PLL_REG_CUR = "100PCT",
        string PMA_CH1_REG_PLL_LCCUR = "DEFAULT",
        string PMA_CH1_REG_PLL_LCOBAS = "100PCT",
        string PMA_CH1_REG_PLL_FB_CK_TEST_OUT_ENABLE = "DISABLE",
        int PMA_CH1_CDR_ALIGN_TIMER = 0,
        int PMA_CH1_CALIB_WAIT = 1024,
        int PMA_CH1_CALIB_TIMER = 512,
        int PMA_CH1_TOT_RANGE = 0,
        int PMA_CH1_SUB_RANGE = 0,
        int PMA_CH1_OVLP = 0,
        int PMA_CH1_BIST_WAIT = 1024,
        int PMA_CH1_BIST_TIMER = 512,
        int PMA_CH1_BAND_LB = 0,
        int PMA_CH1_BAND_HB = 0,
        int PMA_CH1_FREQ_LOCK_ACCURACY = 0,
        int PMA_CH1_REG_SET_LC_BAND = 0,
        int PMA_CH1_REG_SET_VCODIV = 0,
        string PMA_CH1_REGISTER_SET_VCODIV_BAND_ENABLE = "DISABLE",
        string PMA_CH1_REG_SET_PLL_LOCK = "FALSE",
        string PMA_CH1_REGISTER_SET_PLL_LOCK_ENABLE = "DISABLE",
        string PMA_CH1_REG_SET_VCO_HI = "FALSE",
        string PMA_CH1_REG_SET_VCO_LO = "FALSE",
        string PMA_CH1_REGISTER_SET_VCO_HI_VCO_LO_ENABLE = "DISABLE",
        string PMA_CH1_FORCE_LC_PLL_LOOP_EN_H = "DISABLE",
        string PMA_CH1_FORCE_LC_PLL_LOOP_EN_L = "DISABLE",
        string PMA_CH1_VCO_DIV_CALI_BYPASS = "FALSE",
        string PMA_CH1_BIST_EN = "DISABLE",
        string PMA_CH1_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE = "DISABLE",
        string PMA_CH1_FREQ_DETECT_ENABLE_SOURCE = "DISABLE",
        int PMA_CH1_REG_SET_DIVSEL_REF = 0,
        string PMA_CH1_REG_SET_DIVSEL45_FB = "FALSE",
        int PMA_CH1_REG_SET_DIVSEL_FB = 0,
        string PMA_CH1_PLL_LOOP_EN_SETTING = "DISABLE",
        string PMA_CH1_REGISTER_SET_TXPLL_DIV_ENABLE = "DISABLE",
        string PMA_CH1_FORCE_RXPLL_RESET = "FALSE",
        string PMA_CH1_FORCE_RXPLL_ON = "FALSE",
        string PMA_CH1_DPCK_DIV2 = "FALSE",
        int PMA_CH1_LFO_SETTING = 0,
        string PMA_CH1_ALOS_COUNTER_CLOCK_SELECTION = "LOCAL",
        string PMA_CH1_RX_BIAS_CURRENT_ADJUSTMENT = "100PCT",
        int PMA_CH1_OOB_ENTER_DELAY_SETTING = 0,
        int PMA_CH1_ALOS_LOW_TO_HIGH_COUNTER_SETTING = 0,
        string PMA_CH1_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL = "DISABLE",
        int PMA_CH1_ALOS_EXIT_COUNTER_CLOCK_DIVIDER = 0,
        int PMA_CH1_OOB_OSCILATER_FREQUENCY_SETTING = 0,
        string PMA_CH1_FORCE_OOB = "FALSE",
        string PMA_CH1_OOB_VTH_SET = "27MV",
        string PMA_CH1_FORCE_DET_FORCE_ALOS_LOW = "FALSE",
        string PMA_CH1_ALOS_THRESHOLD_VOLTAGE = "27MV",
        int PMA_CH1_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE = 0,
        string PMA_CH1_REGR_NEGATIVE_HYSTERESIS_SETTING = "100MV",
        string PMA_CH1_REGL_POSITIVE_HYSTERESIS_SETTING = "100MV",
        string PMA_CH1_REG_EN = "DISABLE",
        string PMA_CH1_REGREF_SEL = "VREF",
        string PMA_CH1_DC496 = "39_6MHZ",
        int PMA_CH1_EQ2_AC_VAR_SETTING = 0,
        int PMA_CH1_EQ2_AC_RES_SETTING = 0,
        int PMA_CH1_EQ2_DC_RESTOP_SETTING = 0,
        int PMA_CH1_EQ1_DC_RESTOP_SETTING = 50,
        int PMA_CH1_EQ1_AC_VAR_SETTING = 0,
        int PMA_CH1_EQ2_CURRENT_SETTING = 0,
        int PMA_CH1_EQ1_AC_RES_SETTING = 0,
        int PMA_CH1_EQ1_CURRENT_SETTING = 0,
        int PMA_CH1_RPLUS = 0,
        int PMA_CH1_RMINUS = 0,
        int PMA_CH1_RVALSET = 0,
        int PMA_CH1_RTERM = 0,
        string PMA_CH1_DCFB_EN = "DISABLE",
        string PMA_CH1_DCCOUP = "FALSE",
        string PMA_CH1_3G = "FALSE",
        string PMA_CH2_TXDATA_WIDTH = "8_BIT",
        int PMA_CH2_TX_TESTPATTERN = 0,
        string PMA_CH2_TESTPATTERN_O_ENABLE = "FALSE",
        string PMA_CH2_DISABLE_BSMODE_DRVAMP = "FALSE",
        string PMA_CH2_FORCE_BIST_ENABLE = "FALSE",
        string PMA_CH2_FORCE_ELECTRICAL_IDLE = "FALSE",
        string PMA_CH2_FORCE_RXDCT_ENABLE = "FALSE",
        string PMA_CH2_FORCE_EXTLB_ENABLE = "FALSE",
        string PMA_CH2_DISABLE_LANE_SYNC = "FALSE",
        string PMA_CH2_DISABLE_ELECTRICAL_IDLE = "FALSE",
        string PMA_CH2_DISABLE_RXDCT_ENABLE = "FALSE",
        string PMA_CH2_DISABLE_EXTLB_ENABLE = "FALSE",
        string PMA_CH2_DISABLE_LOW_SPEED_PATH_ENABLE = "FALSE",
        string PMA_CH2_FORCE_LANE_ENABLE = "FALSE",
        string PMA_CH2_FORCE_LANE_RESETB_DISABLE = "FALSE",
        string PMA_CH2_RXDCT_LGBW_ENABLE = "FALSE",
        string PMA_CH2_RXDCT_VTH = "MINUS_300MV",
        string PMA_CH2_DE_EMPHASIS_ADDITIONAL_CONTROL = "0DB",
        string PMA_CH2_DRV_RTERM_CONTROL = "100PCT",
        string PMA_CH2_FDRV_AMP_CONTROL = "100PCT",
        string PMA_CH2_PREPC_AMP_CONTROL = "100PCT",
        string PMA_CH2_PREMC_AMP_CONTROL = "100PCT",
        string PMA_CH2_SER_AMP_CONTROL = "100PCT",
        int PMA_CH2_PFD_LOOP_RESISTOR_SETTING = 0,
        int PMA_CH2_PD_LOOP_RESISTOR_SETTING = 0,
        string PMA_CH2_CDR_TEST_OUT_SELECT = "FB_CK",
        string PMA_CH2_PI_DIV1_BP = "DISABLE",
        string PMA_CH2_PI_TEST_FOR_CKI = "FALSE",
        string PMA_CH2_PI_CURRENT_SETTING = "100PCT",
        int PMA_CH2_PI_FREQUENCY_SETTING = 0,
        string PMA_CH2_TEST_OUT_SELECT_FOR_RCK = "FALSE",
        string PMA_CH2_TEST_OUT_SELECT_SOURCE = "SLPI1UI",
        string PMA_CH2_TEST_DATA_OUT_SELECT_SOURCE = "DO",
        string PMA_CH2_TEST_CK_OUT_SELECT_SOURCE = "DATA",
        string PMA_CH2_ENABLE_SLIP1UI_MODULE = "DISABLE",
        string PMA_CH2_PN_SWAP_ENABLE = "DISABLE",
        string PMA_CH2_SIPO_BIT_SETTING = "10_BIT",
        string PMA_CH2_OOB_EN = "DISABLE",
        string PMA_CH2_ALOS_EN = "DISABLE",
        string PMA_CH2_LFMODE = "HIGH",
        string PMA_CH2_TSO_HS_SEL = "CDR",
        string PMA_CH2_LX_SELLC = "RING",
        int PMA_CH2_LX_RXPLL_DIVSEL45_FB = 4,
        int PMA_CH2_LX_RXPLL_DIVSEL_FB = 2,
        int PMA_CH2_LX_RXPLL_DIVSEL_REF = 1,
        int PMA_CH2_PICODE = 0,
        int PMA_CH2_RX_REFCK_SEL = 0,
        string PMA_CH2_PFDLPEN_REGISTER_CONTROL_ENABLE = "DISABLE",
        string PMA_CH2_PFDLPEN_REGISTER_SETTING = "FALSE",
        string PMA_CH2_PDLPEN_REGISTER_CONTROL_ENABLE = "DISABLE",
        string PMA_CH2_PDLPEN_REGISTER_SETTING = "FALSE",
        int PMA_CH2_DIV_CHANGE_ENABLE_DELAY_TIMER = 0,
        string PMA_CH2_DIV_CHANGE_ENABLE_SIGNAL_GATING = "FALSE",
        string PMA_CH2_CDR_ALIGN_REGISTER_SETTING_VALUE = "FALSE",
        string PMA_CH2_FORCE_CDR_ALIGN_ENABLE = "DISABLE",
        string PMA_CH2_SELLC_REGISTER_SETTING_VALUE = "FALSE",
        string PMA_CH2_SELLC_CONTROL_BY_REGISTER = "FALSE",
        string PMA_CH2_REG_PLLI_LDO_VREF_SETTING = "0_9V",
        int PMA_CH2_REG_PLLI_LDO_BYPASS_CURRENT = 0,
        string PMA_CH2_REG_PLL_HSTEST_ENABLE = "DISABLE",
        string PMA_CH2_REG_PLL_ISNK_CURRENT_CONTROL = "5U",
        int PMA_CH2_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING = 0,
        string PMA_CH2_REG_PLL_PD_LOOP_PLLGM_SETTING = "100PCT",
        int PMA_CH2_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING = 0,
        string PMA_CH2_REG_PLL_CP0_BIAS_CONTROL = "100PCT",
        int PMA_CH2_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING = 0,
        string PMA_CH2_REG_PLL_CP1_BIAS_CONTROL = "100PCT",
        int PMA_CH2_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING = 0,
        string PMA_CH2_REG_PLL_CP0_CURRENT_SETTING = "100PCT",
        string PMA_CH2_REG_PLL_CP1_CURRENT_SETTING = "100PCT",
        string PMA_CH2_REG_PLL_GM1_CURRENT_SETTING = "100PCT",
        string PMA_CH2_REG_PLL_LC_BF2_CURRENT_SETTING = "100PCT",
        string PMA_CH2_REG_PLL_LC_BF2_CURRENT_SETTING_LOW = "100PCT",
        string PMA_CH2_REG_PLL_REG_CUR = "100PCT",
        string PMA_CH2_REG_PLL_LCCUR = "DEFAULT",
        string PMA_CH2_REG_PLL_LCOBAS = "100PCT",
        string PMA_CH2_REG_PLL_FB_CK_TEST_OUT_ENABLE = "DISABLE",
        int PMA_CH2_CDR_ALIGN_TIMER = 0,
        int PMA_CH2_CALIB_WAIT = 1024,
        int PMA_CH2_CALIB_TIMER = 512,
        int PMA_CH2_TOT_RANGE = 0,
        int PMA_CH2_SUB_RANGE = 0,
        int PMA_CH2_OVLP = 0,
        int PMA_CH2_BIST_WAIT = 1024,
        int PMA_CH2_BIST_TIMER = 512,
        int PMA_CH2_BAND_LB = 0,
        int PMA_CH2_BAND_HB = 0,
        int PMA_CH2_FREQ_LOCK_ACCURACY = 0,
        int PMA_CH2_REG_SET_LC_BAND = 0,
        int PMA_CH2_REG_SET_VCODIV = 0,
        string PMA_CH2_REGISTER_SET_VCODIV_BAND_ENABLE = "DISABLE",
        string PMA_CH2_REG_SET_PLL_LOCK = "FALSE",
        string PMA_CH2_REGISTER_SET_PLL_LOCK_ENABLE = "DISABLE",
        string PMA_CH2_REG_SET_VCO_HI = "FALSE",
        string PMA_CH2_REG_SET_VCO_LO = "FALSE",
        string PMA_CH2_REGISTER_SET_VCO_HI_VCO_LO_ENABLE = "DISABLE",
        string PMA_CH2_FORCE_LC_PLL_LOOP_EN_H = "DISABLE",
        string PMA_CH2_FORCE_LC_PLL_LOOP_EN_L = "DISABLE",
        string PMA_CH2_VCO_DIV_CALI_BYPASS = "FALSE",
        string PMA_CH2_BIST_EN = "DISABLE",
        string PMA_CH2_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE = "DISABLE",
        string PMA_CH2_FREQ_DETECT_ENABLE_SOURCE = "DISABLE",
        int PMA_CH2_REG_SET_DIVSEL_REF = 0,
        string PMA_CH2_REG_SET_DIVSEL45_FB = "FALSE",
        int PMA_CH2_REG_SET_DIVSEL_FB = 0,
        string PMA_CH2_PLL_LOOP_EN_SETTING = "DISABLE",
        string PMA_CH2_REGISTER_SET_TXPLL_DIV_ENABLE = "DISABLE",
        string PMA_CH2_FORCE_RXPLL_RESET = "FALSE",
        string PMA_CH2_FORCE_RXPLL_ON = "FALSE",
        string PMA_CH2_DPCK_DIV2 = "FALSE",
        int PMA_CH2_LFO_SETTING = 0,
        string PMA_CH2_ALOS_COUNTER_CLOCK_SELECTION = "LOCAL",
        string PMA_CH2_RX_BIAS_CURRENT_ADJUSTMENT = "100PCT",
        int PMA_CH2_OOB_ENTER_DELAY_SETTING = 0,
        int PMA_CH2_ALOS_LOW_TO_HIGH_COUNTER_SETTING = 0,
        string PMA_CH2_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL = "DISABLE",
        int PMA_CH2_ALOS_EXIT_COUNTER_CLOCK_DIVIDER = 0,
        int PMA_CH2_OOB_OSCILATER_FREQUENCY_SETTING = 0,
        string PMA_CH2_FORCE_OOB = "FALSE",
        string PMA_CH2_OOB_VTH_SET = "27MV",
        string PMA_CH2_FORCE_DET_FORCE_ALOS_LOW = "FALSE",
        string PMA_CH2_ALOS_THRESHOLD_VOLTAGE = "27MV",
        int PMA_CH2_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE = 0,
        string PMA_CH2_REGR_NEGATIVE_HYSTERESIS_SETTING = "100MV",
        string PMA_CH2_REGL_POSITIVE_HYSTERESIS_SETTING = "100MV",
        string PMA_CH2_REG_EN = "DISABLE",
        string PMA_CH2_REGREF_SEL = "VREF",
        string PMA_CH2_DC496 = "39_6MHZ",
        int PMA_CH2_EQ2_AC_VAR_SETTING = 0,
        int PMA_CH2_EQ2_AC_RES_SETTING = 0,
        int PMA_CH2_EQ2_DC_RESTOP_SETTING = 0,
        int PMA_CH2_EQ1_DC_RESTOP_SETTING = 50,
        int PMA_CH2_EQ1_AC_VAR_SETTING = 0,
        int PMA_CH2_EQ2_CURRENT_SETTING = 0,
        int PMA_CH2_EQ1_AC_RES_SETTING = 0,
        int PMA_CH2_EQ1_CURRENT_SETTING = 0,
        int PMA_CH2_RPLUS = 0,
        int PMA_CH2_RMINUS = 0,
        int PMA_CH2_RVALSET = 0,
        int PMA_CH2_RTERM = 0,
        string PMA_CH2_DCFB_EN = "DISABLE",
        string PMA_CH2_DCCOUP = "FALSE",
        string PMA_CH2_3G = "FALSE",
        string PMA_CH3_TXDATA_WIDTH = "8_BIT",
        int PMA_CH3_TX_TESTPATTERN = 0,
        string PMA_CH3_TESTPATTERN_O_ENABLE = "FALSE",
        string PMA_CH3_DISABLE_BSMODE_DRVAMP = "FALSE",
        string PMA_CH3_FORCE_BIST_ENABLE = "FALSE",
        string PMA_CH3_FORCE_ELECTRICAL_IDLE = "FALSE",
        string PMA_CH3_FORCE_RXDCT_ENABLE = "FALSE",
        string PMA_CH3_FORCE_EXTLB_ENABLE = "FALSE",
        string PMA_CH3_DISABLE_LANE_SYNC = "FALSE",
        string PMA_CH3_DISABLE_ELECTRICAL_IDLE = "FALSE",
        string PMA_CH3_DISABLE_RXDCT_ENABLE = "FALSE",
        string PMA_CH3_DISABLE_EXTLB_ENABLE = "FALSE",
        string PMA_CH3_DISABLE_LOW_SPEED_PATH_ENABLE = "FALSE",
        string PMA_CH3_FORCE_LANE_ENABLE = "FALSE",
        string PMA_CH3_FORCE_LANE_RESETB_DISABLE = "FALSE",
        string PMA_CH3_RXDCT_LGBW_ENABLE = "FALSE",
        string PMA_CH3_RXDCT_VTH = "MINUS_300MV",
        string PMA_CH3_DE_EMPHASIS_ADDITIONAL_CONTROL = "0DB",
        string PMA_CH3_DRV_RTERM_CONTROL = "100PCT",
        string PMA_CH3_FDRV_AMP_CONTROL = "100PCT",
        string PMA_CH3_PREPC_AMP_CONTROL = "100PCT",
        string PMA_CH3_PREMC_AMP_CONTROL = "100PCT",
        string PMA_CH3_SER_AMP_CONTROL = "100PCT",
        int PMA_CH3_PFD_LOOP_RESISTOR_SETTING = 0,
        int PMA_CH3_PD_LOOP_RESISTOR_SETTING = 0,
        string PMA_CH3_CDR_TEST_OUT_SELECT = "FB_CK",
        string PMA_CH3_PI_DIV1_BP = "DISABLE",
        string PMA_CH3_PI_TEST_FOR_CKI = "FALSE",
        string PMA_CH3_PI_CURRENT_SETTING = "100PCT",
        int PMA_CH3_PI_FREQUENCY_SETTING = 0,
        string PMA_CH3_TEST_OUT_SELECT_FOR_RCK = "FALSE",
        string PMA_CH3_TEST_OUT_SELECT_SOURCE = "SLPI1UI",
        string PMA_CH3_TEST_DATA_OUT_SELECT_SOURCE = "DO",
        string PMA_CH3_TEST_CK_OUT_SELECT_SOURCE = "DATA",
        string PMA_CH3_ENABLE_SLIP1UI_MODULE = "DISABLE",
        string PMA_CH3_PN_SWAP_ENABLE = "DISABLE",
        string PMA_CH3_SIPO_BIT_SETTING = "10_BIT",
        string PMA_CH3_OOB_EN = "DISABLE",
        string PMA_CH3_ALOS_EN = "DISABLE",
        string PMA_CH3_LFMODE = "HIGH",
        string PMA_CH3_TSO_HS_SEL = "CDR",
        string PMA_CH3_LX_SELLC = "RING",
        int PMA_CH3_LX_RXPLL_DIVSEL45_FB = 4,
        int PMA_CH3_LX_RXPLL_DIVSEL_FB = 2,
        int PMA_CH3_LX_RXPLL_DIVSEL_REF = 1,
        int PMA_CH3_PICODE = 0,
        int PMA_CH3_RX_REFCK_SEL = 0,
        string PMA_CH3_PFDLPEN_REGISTER_CONTROL_ENABLE = "DISABLE",
        string PMA_CH3_PFDLPEN_REGISTER_SETTING = "FALSE",
        string PMA_CH3_PDLPEN_REGISTER_CONTROL_ENABLE = "DISABLE",
        string PMA_CH3_PDLPEN_REGISTER_SETTING = "FALSE",
        int PMA_CH3_DIV_CHANGE_ENABLE_DELAY_TIMER = 0,
        string PMA_CH3_DIV_CHANGE_ENABLE_SIGNAL_GATING = "FALSE",
        string PMA_CH3_CDR_ALIGN_REGISTER_SETTING_VALUE = "FALSE",
        string PMA_CH3_FORCE_CDR_ALIGN_ENABLE = "DISABLE",
        string PMA_CH3_SELLC_REGISTER_SETTING_VALUE = "FALSE",
        string PMA_CH3_SELLC_CONTROL_BY_REGISTER = "FALSE",
        string PMA_CH3_REG_PLLI_LDO_VREF_SETTING = "0_9V",
        int PMA_CH3_REG_PLLI_LDO_BYPASS_CURRENT = 0,
        string PMA_CH3_REG_PLL_HSTEST_ENABLE = "DISABLE",
        string PMA_CH3_REG_PLL_ISNK_CURRENT_CONTROL = "5U",
        int PMA_CH3_REG_PLL_PFD_LOOP_CP0_CURRENT_SETTING = 0,
        string PMA_CH3_REG_PLL_PD_LOOP_PLLGM_SETTING = "100PCT",
        int PMA_CH3_REG_PLL_PFD_LOOP_CP1_CURRENT_SETTING = 0,
        string PMA_CH3_REG_PLL_CP0_BIAS_CONTROL = "100PCT",
        int PMA_CH3_REG_PLL_PD_LOOP_CP0_CURRENT_SETTING = 0,
        string PMA_CH3_REG_PLL_CP1_BIAS_CONTROL = "100PCT",
        int PMA_CH3_REG_PLL_PD_LOOP_CP1_CURRENT_SETTING = 0,
        string PMA_CH3_REG_PLL_CP0_CURRENT_SETTING = "100PCT",
        string PMA_CH3_REG_PLL_CP1_CURRENT_SETTING = "100PCT",
        string PMA_CH3_REG_PLL_GM1_CURRENT_SETTING = "100PCT",
        string PMA_CH3_REG_PLL_LC_BF2_CURRENT_SETTING = "100PCT",
        string PMA_CH3_REG_PLL_LC_BF2_CURRENT_SETTING_LOW = "100PCT",
        string PMA_CH3_REG_PLL_REG_CUR = "100PCT",
        string PMA_CH3_REG_PLL_LCCUR = "DEFAULT",
        string PMA_CH3_REG_PLL_LCOBAS = "100PCT",
        string PMA_CH3_REG_PLL_FB_CK_TEST_OUT_ENABLE = "DISABLE",
        int PMA_CH3_CDR_ALIGN_TIMER = 0,
        int PMA_CH3_CALIB_WAIT = 1024,
        int PMA_CH3_CALIB_TIMER = 512,
        int PMA_CH3_TOT_RANGE = 0,
        int PMA_CH3_SUB_RANGE = 0,
        int PMA_CH3_OVLP = 0,
        int PMA_CH3_BIST_WAIT = 1024,
        int PMA_CH3_BIST_TIMER = 512,
        int PMA_CH3_BAND_LB = 0,
        int PMA_CH3_BAND_HB = 0,
        int PMA_CH3_FREQ_LOCK_ACCURACY = 0,
        int PMA_CH3_REG_SET_LC_BAND = 0,
        int PMA_CH3_REG_SET_VCODIV = 0,
        string PMA_CH3_REGISTER_SET_VCODIV_BAND_ENABLE = "DISABLE",
        string PMA_CH3_REG_SET_PLL_LOCK = "FALSE",
        string PMA_CH3_REGISTER_SET_PLL_LOCK_ENABLE = "DISABLE",
        string PMA_CH3_REG_SET_VCO_HI = "FALSE",
        string PMA_CH3_REG_SET_VCO_LO = "FALSE",
        string PMA_CH3_REGISTER_SET_VCO_HI_VCO_LO_ENABLE = "DISABLE",
        string PMA_CH3_FORCE_LC_PLL_LOOP_EN_H = "DISABLE",
        string PMA_CH3_FORCE_LC_PLL_LOOP_EN_L = "DISABLE",
        string PMA_CH3_VCO_DIV_CALI_BYPASS = "FALSE",
        string PMA_CH3_BIST_EN = "DISABLE",
        string PMA_CH3_PLL_LOOP_EN_SETTING_FROM_REGISTER_ENABLE = "DISABLE",
        string PMA_CH3_FREQ_DETECT_ENABLE_SOURCE = "DISABLE",
        int PMA_CH3_REG_SET_DIVSEL_REF = 0,
        string PMA_CH3_REG_SET_DIVSEL45_FB = "FALSE",
        int PMA_CH3_REG_SET_DIVSEL_FB = 0,
        string PMA_CH3_PLL_LOOP_EN_SETTING = "DISABLE",
        string PMA_CH3_REGISTER_SET_TXPLL_DIV_ENABLE = "DISABLE",
        string PMA_CH3_FORCE_RXPLL_RESET = "FALSE",
        string PMA_CH3_FORCE_RXPLL_ON = "FALSE",
        string PMA_CH3_DPCK_DIV2 = "FALSE",
        int PMA_CH3_LFO_SETTING = 0,
        string PMA_CH3_ALOS_COUNTER_CLOCK_SELECTION = "LOCAL",
        string PMA_CH3_RX_BIAS_CURRENT_ADJUSTMENT = "100PCT",
        int PMA_CH3_OOB_ENTER_DELAY_SETTING = 0,
        int PMA_CH3_ALOS_LOW_TO_HIGH_COUNTER_SETTING = 0,
        string PMA_CH3_ENABLE_ALOS_RESULT_AUTOMATICALLY_ENABLE_CHANNEL = "DISABLE",
        int PMA_CH3_ALOS_EXIT_COUNTER_CLOCK_DIVIDER = 0,
        int PMA_CH3_OOB_OSCILATER_FREQUENCY_SETTING = 0,
        string PMA_CH3_FORCE_OOB = "FALSE",
        string PMA_CH3_OOB_VTH_SET = "27MV",
        string PMA_CH3_FORCE_DET_FORCE_ALOS_LOW = "FALSE",
        string PMA_CH3_ALOS_THRESHOLD_VOLTAGE = "27MV",
        int PMA_CH3_WAKEUP_VCM_RX_COMMON_MODE_VOLTAGE = 0,
        string PMA_CH3_REGR_NEGATIVE_HYSTERESIS_SETTING = "100MV",
        string PMA_CH3_REGL_POSITIVE_HYSTERESIS_SETTING = "100MV",
        string PMA_CH3_REG_EN = "DISABLE",
        string PMA_CH3_REGREF_SEL = "VREF",
        string PMA_CH3_DC496 = "39_6MHZ",
        int PMA_CH3_EQ2_AC_VAR_SETTING = 0,
        int PMA_CH3_EQ2_AC_RES_SETTING = 0,
        int PMA_CH3_EQ2_DC_RESTOP_SETTING = 0,
        int PMA_CH3_EQ1_DC_RESTOP_SETTING = 50,
        int PMA_CH3_EQ1_AC_VAR_SETTING = 0,
        int PMA_CH3_EQ2_CURRENT_SETTING = 0,
        int PMA_CH3_EQ1_AC_RES_SETTING = 0,
        int PMA_CH3_EQ1_CURRENT_SETTING = 0,
        int PMA_CH3_RPLUS = 0,
        int PMA_CH3_RMINUS = 0,
        int PMA_CH3_RVALSET = 0,
        int PMA_CH3_RTERM = 0,
        string PMA_CH3_DCFB_EN = "DISABLE",
        string PMA_CH3_DCCOUP = "FALSE",
        string PMA_CH3_3G = "FALSE",
        string PMA_QUAD_TURN_ON_BANDGAP_AT_AOS_ON = "FALSE",
        string PMA_QUAD_TURN_ON_BANDGAP_AT_RX_DETECTION_ON = "FALSE",
        string PMA_QUAD_TURN_ON_BANDGAP_AT_BOUNDARY_SCAN_ON = "FALSE",
        string PMA_QUAD_CFG_HSST_RSTN = "FALSE",
        string PMA_QUAD_SELECT_LANE_TCK_FOR_QUAD_SYNC = "LANE0",
        string PMA_QUAD_CK_REN = "DISABLE",
        string PMA_QUAD_C1_EN = "DISABLE",
        string PMA_QUAD_C2_EN = "DISABLE",
        int PMA_QUAD_CLK_DIVIDER_SETTING_FROM_25M_TO_200K = 0,
        string PMA_QUAD_ACMODE_SCANMODE_EN = "DISABLE",
        string PMA_QUAD_REGISTER_ACMODE = "FALSE",
        string PMA_QUAD_REGISTER_SCANMODE = "FALSE",
        string PMA_QUAD_REFCK2CORE_EN = "DISABLE",
        string PMA_QUAD_REG_EN = "DISABLE",
        string PMA_QUAD_REGR = "100MV",
        string PMA_QUAD_REGL = "100MV",
        int PMA_QUAD_DPCK_SEL = 0,
        string PMA_QUAD_TX_REFCK_SEL = "FALSE",
        string PMA_QUAD_REFCK_SRC_SEL = "FALSE",
        string PMA_QUAD_RREFCK_PWRUP = "FALSE",        
        string PMA_QUAD_REFCK_SK_SEL       = "BOTH",
        string PMA_QUAD_REFCK_DIV2_SEL = "FALSE",
        string PMA_QUAD_REFCK_TO_NQ_EN = "DISABLE",
        string PMA_QUAD_AUXI_ADJ = "100PCT",
        string PMA_QUAD_DC496 = "39_6MHZ",
        int PMA_QUAD_REG_FDET_TIMER = 512,
        string PMA_QUAD_FREQ_LKO = "100PCT",
        string PMA_QUAD_FREQ_LKI = "100PCT",
        string PMA_QUAD_CLOCK_SRC_SEL = "LOCAL",
        string PMA_QUAD_FRE_DET_EN = "DISABLE",
        int PMA_QUAD_TSO_LS_SEL = 0,
        string PMA_QUAD_TXPLL_START = "FALSE",
        int PMA_QUAD_VCODIV = 0,
        int PMA_QUAD_LC_BAND = 0,
        string PMA_QUAD_SET_VCO_HI = "FALSE",
        string PMA_QUAD_SET_VCO_LO = "FALSE",
        string PMA_QUAD_CALIB_FAIL = "FALSE",
        string PMA_QUAD_CALIB_DONE = "FALSE",
        string PMA_QUAD_BIST_DONE = "FALSE",
        string PMA_QUAD_TOTRANGE_FAIL = "FALSE",
        string PMA_QUAD_SUBRANGE_FAIL = "FALSE",
        string PMA_QUAD_OVLP_FAIL = "FALSE",
        string PMA_QUAD_TXPLL_LOCK = "FALSE",
        string PMA_QUAD_TXPLL_LOOP_ENABLE = "DISABLE",
        int PMA_QUAD_TXPLL_DIVSEL_REF_STA = 0,
        string PMA_QUAD_TXPLL_DIVSEL45_FB_STA = "FALSE",
        int PMA_QUAD_TXPLL_DIVSEL_FB_STA = 0,
        string PMA_QUAD_TXPLL_DIVSEL45_FB = "FALSE",
        int PMA_QUAD_TXPLL_DIVSEL_FB = 0,
        int PMA_QUAD_TXPLL_DIVSEL_REF = 0,
        string PMA_QUAD_REG_DISABLE_HOLDCLK = "DISABLE",
        string PMA_QUAD_REG_DISABLE_SYNC = "DISABLE",
        string PMA_QUAD_FORCE_OUTPUT_PLL_LOCK = "FALSE",
        string PMA_QUAD_REGISTER_SET_SYNCTCK_SEL_ENABLE = "DISABLE",
        string PMA_QUAD_REG_SET_SYNCTCK_SEL = "LANE0",          // LANE0,LANE1,LANE2,LANE3
        string PMA_QUAD_CK4TEST_OUTPUT_ENABLE = "DISABLE",
        string PMA_QUAD_RSTGENBAS = "100PCT",       // 100PCT , 83PCT , 133PCT , 117PCT
        string PMA_QUAD_LCBUFBAS = "100PCT",        // 100PCT , 83PCT , 133PCT , 117PCT
        string PMA_QUAD_REGISTER_SET_CPCUR_ENABEL = "DISABLE",
        int PMA_QUAD_REG_SET_CPCUR = 0,
        string PMA_QUAD_CPBAS = "100PCT",           //  100PCT , 111PCT , 125PCT , 143PCT , 71PCT , 77PCT , 83PCT ,91PCT   
        string PMA_QUAD_LCOBAS = "100PCT",          // 100PCT , 75PCT , 150PCT , 125PCT  
        string PMA_QUAD_LCCUR = "DEFAULT",          //  DEFAULT , _1MA , 2MA , 1MA , 4MA , 3MA , 6MA ,5MA   
        string PMA_QUAD_ENABLE_REGISTER_SETTING_BAND = "DISABLE",
        int PMA_QUAD_CALIB_WAIT = 1024,
        int PMA_QUAD_CALIB_TIMER = 512,
        int PMA_QUAD_TOT_RANGE = 0,
        int PMA_QUAD_SUB_RANGE = 0,
        int PMA_QUAD_OVLP = 0,
        int PMA_QUAD_BIST_WAIT = 1024,
        int PMA_QUAD_BIST_TIMER = 512,
        int PMA_QUAD_BAND_LB = 0,
        int PMA_QUAD_BAND_HB = 0,
        int PMA_QUAD_FREQ_LOCK_ACCURACY = 0,
        int PMA_QUAD_REG_SET_LC_BAND = 0,
        int PMA_QUAD_REG_SET_VCODIV = 0,
        string PMA_QUAD_REGISTER_SET_VCODIV_BAND_ENABLE = "DISABLE",
        string PMA_QUAD_REG_SET_PLL_LOCK = "FALSE",
        string PMA_QUAD_REGISTER_SET_PLL_LOCK_ENABLE = "DISABLE",
        string PMA_QUAD_REG_SET_VCO_HI = "FALSE",
        string PMA_QUAD_REG_SET_VCO_LO = "FALSE",
        string PMA_QUAD_REGISTER_SET_VCO_HI_VCO_LO_ENABLE = "DISABLE",
        string PMA_QUAD_FORCE_LC_PLL_LOOP_EN_H = "DISABLE",
        string PMA_QUAD_FORCE_LC_PLL_LOOP_EN_L = "DISABLE",
        string PMA_QUAD_VCO_DIV_CALI_BYPASS = "FALSE",
        string PMA_QUAD_BIST_EN = "DISABLE",
        string PMA_QUAD_ENABLE_TXPLL_BIST_BLOCK_CLOCKS = "DISABLE",
        string PMA_QUAD_LF_TESTBY2     = "DISABLE",
        int PMA_QUAD_REG_SET_DIVSEL_REF = 0,
        string PMA_QUAD_REG_SET_DIVSEL45_FB = "FALSE",
        int PMA_QUAD_REG_SET_DIVSEL_FB = 0,
        string PMA_QUAD_LF_TEST_EN = "DISABLE",
        string PMA_QUAD_REGISTER_SET_TXPLL_DIV_ENABLE = "DISABLE",
        string PMA_QUAD_FORCE_TXPLL_RESET = "FALSE",
        string PMA_QUAD_FORCE_TXPLL_ON = "FALSE",
        int CLK_ALIGNER_RX0 = 0,
        int CLK_ALIGNER_RX1 = 0,
        int CLK_ALIGNER_RX2 = 0,
        int CLK_ALIGNER_RX3 = 0,
        int CLK_ALIGNER_TX0 = 0,
        int CLK_ALIGNER_TX1 = 0,
        int CLK_ALIGNER_TX2 = 0,
        int CLK_ALIGNER_TX3 = 0,
        string DYN_DLY_EN_RX0 = "FALSE",
        string DYN_DLY_EN_RX1 = "FALSE",
        string DYN_DLY_EN_RX2 = "FALSE",
        string DYN_DLY_EN_RX3 = "FALSE",
        string DYN_DLY_EN_TX0 = "FALSE",
        string DYN_DLY_EN_TX1 = "FALSE",
        string DYN_DLY_EN_TX2 = "FALSE",
        string DYN_DLY_EN_TX3 = "FALSE",
        string DYN_DLY_SEL_RX0 = "FALSE",
        string DYN_DLY_SEL_RX1 = "FALSE",
        string DYN_DLY_SEL_RX2 = "FALSE",
        string DYN_DLY_SEL_RX3 = "FALSE",
        string DYN_DLY_SEL_TX0 = "FALSE",
        string DYN_DLY_SEL_TX1 = "FALSE",
        string DYN_DLY_SEL_TX2 = "FALSE",
        string DYN_DLY_SEL_TX3 = "FALSE",
        int CLK_ALIGNER_RSTN_RX = 0,
        int CLK_ALIGNER_RSTN_TX = 0,
        int LX_BISTLB_EN = 0,
        int LX_ELECIDLE_EN_MSB = 0,
        int LX_EXTLB_EN = 0,
        int LX_RXDCT_EN = 0,
        int LX_TX_LFMODE = 0,
        int RX_LANE_POWERUP = 0,
        int TX_LANE_POWERUP = 0,
        string PLL_RSTN = "FALSE",
        string PLLPOWERDOWN = "FALSE",
        string QUAD_PWRUP = "FALSE",
        string GRSN_DIS = "FALSE",
        string HSST_RSTN = "FALSE",
        string CFG_RSTN = "FALSE"
    );
    port
    (   input P_AFTER_CTC_RCLK_EN_CIN = 1'b0,
        input P_AFTER_CTC_RCLK_EN_GB_CIN = 1'b0,
        input P_APATTERN_MATCH_LSB_CIN = 1'b0,
        input P_APATTERN_MATCH_MSB_CIN = 1'b0,
        input P_APATTERN_SEACHING_PROC_CIN = 1'b0,
        input P_APATTERN_STATUS_CIN = 1'b0,
        input P_BRIDGE_RCLK_EN_CIN = 1'b0,
        input P_BRIDGE_TCLK_EN_CIN = 1'b0,
        input P_CB_RCLK_EN_CIN = 1'b0,
        input P_CFG_CLK = 1'b0,
        input P_CFG_ENABLE = 1'b0,
        input P_CFG_RSTN = 1'b0,
        input P_CFG_WRITE = 1'b0,
        input P_COMPRESSION_MODE = 1'b0,
        input P_CTC_RD_FIFO_CIN = 1'b0,
        input P_HSST_RSTN = 1'b0,
        input P_L0RXN = 1'b0,
        input P_L0RXP = 1'b0,
        input P_L1RXN = 1'b0,
        input P_L1RXP = 1'b0,
        input P_L2RXN = 1'b0,
        input P_L2RXP = 1'b0,
        input P_L3RXN = 1'b0,
        input P_L3RXP = 1'b0,
        input P_LANE_SYNC_EN_0 = 1'b0,
        input P_LANE_SYNC_EN_1 = 1'b0,
        input P_LANE_SYNC_EN_2 = 1'b0,
        input P_LANE_SYNC_EN_3 = 1'b0,
        input P_LX_LFD_FRCORE_0 = 1'b0,
        input P_LX_LFD_FRCORE_1 = 1'b0,
        input P_LX_LFD_FRCORE_2 = 1'b0,
        input P_LX_LFD_FRCORE_3 = 1'b0,
        input P_LX_RX_CKDIV_DYNSEL_0 = 1'b0,
        input P_LX_RX_CKDIV_DYNSEL_1 = 1'b0,
        input P_LX_RX_CKDIV_DYNSEL_2 = 1'b0,
        input P_LX_RX_CKDIV_DYNSEL_3 = 1'b0,
        input P_MCB_CLK_FRNQ = 1'b0,
        input P_PCS_RX_RSTN_0 = 1'b0,
        input P_PCS_RX_RSTN_1 = 1'b0,
        input P_PCS_RX_RSTN_2 = 1'b0,
        input P_PCS_RX_RSTN_3 = 1'b0,
        input P_PCS_TCLK_EN_CIN = 1'b0,
        input P_PCS_TX_RSTN_0 = 1'b0,
        input P_PCS_TX_RSTN_1 = 1'b0,
        input P_PCS_TX_RSTN_2 = 1'b0,
        input P_PCS_TX_RSTN_3 = 1'b0,
        input P_PLL_BYPASS = 1'b0,
        input P_PLL_REF_CLK = 1'b0,
        input P_PLL_RESET = 1'b0,
        input P_PLL_RSTN = 1'b0,
        input P_PLLPOWERDOWN = 1'b0,
        input P_QUAD_PWRUP = 1'b0,
        input P_REFCK_FRNMQ = 1'b0,
        input P_REFCK_FRNPQ = 1'b0,
        input P_REFCKN = 1'b0,
        input P_REFCKP = 1'b0,
        input P_RFIFO_EN_AFTER_CTC_CIN = 1'b0,
        input P_RFIFO_EN_AFTER_CTC_GB_CIN = 1'b0,
        input P_RFIFO_EN_BRIDGE_CIN = 1'b0,
        input P_RFIFO_EN_CB_CIN = 1'b0,
        input P_RX0_CLK_FR_CORE = 1'b0,
        input P_RX1_CLK_FR_CORE = 1'b0,
        input P_RX2_CLK_FR_CORE = 1'b0,
        input P_RX3_CLK_FR_CORE = 1'b0,
        input P_RX_PLL_RSTN_0 = 1'b0,
        input P_RX_PLL_RSTN_1 = 1'b0,
        input P_RX_PLL_RSTN_2 = 1'b0,
        input P_RX_PLL_RSTN_3 = 1'b0,
        input P_RX_PMA_RSTN_0 = 1'b0,
        input P_RX_PMA_RSTN_1 = 1'b0,
        input P_RX_PMA_RSTN_2 = 1'b0,
        input P_RX_PMA_RSTN_3 = 1'b0,
        input P_RX_REF_CLK_0 = 1'b0,
        input P_RX_REF_CLK_1 = 1'b0,
        input P_RX_REF_CLK_2 = 1'b0,
        input P_RX_REF_CLK_3 = 1'b0,
        input P_SEL_SYNC_NXQ = 1'b0,
        input P_SKIP_ADD_LSB_MCB_CIN = 1'b0,
        input P_SKIP_ADD_MCB_CIN = 1'b0,
        input P_SKIP_DEL_LSB_MCB_CIN = 1'b0,
        input P_SKIP_DEL_MCB_CIN = 1'b0,
        input P_SYNC_TOGGLE = 1'b0,
        input P_TFIFO_EN_BRIDGE_CIN = 1'b0,
        input P_TFIFO_EN_PCS_TX_CIN = 1'b0,
        input P_TWOQUAD_SYNC_EN = 1'b0,
        input P_TX0_CLK_FR_CORE = 1'b0,
        input P_TX1_CLK_FR_CORE = 1'b0,
        input P_TX2_CLK_FR_CORE = 1'b0,
        input P_TX3_CLK_FR_CORE = 1'b0,
        input P_TX_PMA_RSTN_0 = 1'b0,
        input P_TX_PMA_RSTN_1 = 1'b0,
        input P_TX_PMA_RSTN_2 = 1'b0,
        input P_TX_PMA_RSTN_3 = 1'b0,
        input P_TXCKDIV_DYNSEL = 1'b0,
        input P_CIM_CLK_ALIGNER_TX3[7:0] = 8'b0,
        input P_TX_CKDIV_1[1:0] = 2'b0,
        input P_LX_DEEMP_CTL_1[2:0] = 3'b0,
        input P_LX_TX_LFMODE[3:0] = 4'b0,
        input P_LX_AMP_CTL_0[3:0] = 4'b0,
        input P_LX_RXDCT_EN[3:0] = 4'b0,
        input P_TX_CKDIV_0[1:0] = 2'b0,
        input P_LX_RX_CKDIV_3[1:0] = 2'b0,
        input P_PCS_MCB_EXT_EN[3:0] = 4'b0,
        input P_CIM_CLK_ALIGNER_TX0[7:0] = 8'b0,
        input P_LX_DEEMP_CTL_0[2:0] = 3'b0,
        input P_TDATA_2[43:0] = 44'b0,
        input P_LX_AMP_CTL_3[3:0] = 4'b0,
        input P_CIM_CLK_ALIGNER_TX1[7:0] = 8'b0,
        input P_LX_RX_CKDIV_2[1:0] = 2'b0,
        input P_CEB_ADETECT_EN[3:0] = 4'b0,
        input P_TX_CKDIV_3[1:0] = 2'b0,
        input P_CIM_CLK_ALIGNER_RX1[7:0] = 8'b0,
        input P_CFG_WDATA[7:0] = 8'b0,
        input P_TX_LANE_POWERUP[3:0] = 4'b0,
        input P_TDATA_1[43:0] = 44'b0,
        input P_LX_EXTLB_EN[3:0] = 4'b0,
        input P_CFG_ADDR[15:0] = 16'b0,
        input P_CIM_CLK_ALIGNER_RX0[7:0] = 8'b0,
        input P_LX_ELECIDLE_EN_MSB[3:0] = 4'b0,
        input P_PCS_NEAREND_LOOP[3:0] = 4'b0,
        input P_LX_ELECIDLE_EN_0[1:0] = 2'b0,
        input P_LX_ELECIDLE_EN_3[1:0] = 2'b0,
        input P_CIM_CLK_DYN_DLY_SEL_RX[3:0] = 4'b0,
        input P_LX_DEEMP_CTL_3[2:0] = 3'b0,
        input P_LX_ELECIDLE_EN_1[1:0] = 2'b0,
        input P_CIM_CLK_START_ALIGN_TX[3:0] = 4'b0,
        input P_LX_BISTLB_EN[3:0] = 4'b0,
        input P_TDATA_0[43:0] = 44'b0,
        input P_CIM_CLK_ALIGNER_RX3[7:0] = 8'b0,
        input P_CIM_CLK_DYN_DLY_SEL_TX[3:0] = 4'b0,
        input P_CIM_CLK_ALIGNER_TX2[7:0] = 8'b0,
        input P_LX_ELECIDLE_EN_2[1:0] = 2'b0,
        input P_RX_LANE_POWERUP[3:0] = 4'b0,
        input P_TX_CKDIV_2[1:0] = 2'b0,
        input P_PCS_WORD_ALIGN_EN[3:0] = 4'b0,
        input P_LX_AMP_CTL_1[3:0] = 4'b0,
        input P_CIM_CLK_ALIGNER_RX2[7:0] = 8'b0,
        input P_RX_POLARITY_INVERT[3:0] = 4'b0,
        input P_LX_DEEMP_CTL_2[2:0] = 3'b0,
        input P_LX_AMP_CTL_2[3:0] = 4'b0,
        input P_LX_RX_CKDIV_1[1:0] = 2'b0,
        input P_TDATA_3[43:0] = 44'b0,
        input P_PCS_FAREND_LOOP[3:0] = 4'b0,
        input P_CIM_CLK_START_ALIGN_RX[3:0] = 4'b0,
        input P_LX_RX_CKDIV_0[1:0] = 2'b0,
        output P_AFTER_CTC_RCLK_EN_COUT,
        output P_AFTER_CTC_RCLK_EN_GB_COUT,
        output P_APATTERN_MATCH_LSB_COUT,
        output P_APATTERN_MATCH_MSB_COUT,
        output P_APATTERN_SEACHING_PROC_COUT,
        output P_APATTERN_STATUS_COUT,
        output P_BRIDGE_RCLK_EN_COUT,
        output P_BRIDGE_TCLK_EN_COUT,
        output P_CB_RCLK_EN_COUT,
        output P_CFG_INT,
        output P_CFG_READY,
        output P_CTC_RD_FIFO_COUT,
        output P_L0TXN,
        output P_L0TXP,
        output P_L1TXN,
        output P_L1TXP,
        output P_L2TXN,
        output P_L2TXP,
        output P_L3TXN,
        output P_L3TXP,
        output P_LX_ALOS_STA_0,
        output P_LX_ALOS_STA_1,
        output P_LX_ALOS_STA_2,
        output P_LX_ALOS_STA_3,
        output P_LX_CDR_ALIGN_0,
        output P_LX_CDR_ALIGN_1,
        output P_LX_CDR_ALIGN_2,
        output P_LX_CDR_ALIGN_3,
        output P_LX_LFO_0,
        output P_LX_LFO_1,
        output P_LX_LFO_2,
        output P_LX_LFO_3,
        output P_LX_OOB_STA_0,
        output P_LX_OOB_STA_1,
        output P_LX_OOB_STA_2,
        output P_LX_OOB_STA_3,
        output P_LX_RXDCT_DONE_0,
        output P_LX_RXDCT_DONE_1,
        output P_LX_RXDCT_DONE_2,
        output P_LX_RXDCT_DONE_3,
        output P_LX_RXDCT_OUT_0,
        output P_LX_RXDCT_OUT_1,
        output P_LX_RXDCT_OUT_2,
        output P_LX_RXDCT_OUT_3,
        output P_PCS_TCLK_EN_COUT,
        output P_PLL_LOCK,
        output P_REFCK2CORE,
        output P_REFCK_2NMQ,
        output P_REFCK_2NPQ,
        output P_REXT,
        output P_RFIFO_EN_AFTER_CTC_COUT,
        output P_RFIFO_EN_AFTER_CTC_GB_COUT,
        output P_RFIFO_EN_BRIDGE_COUT,
        output P_RFIFO_EN_CB_COUT,
        output P_SKIP_ADD_LSB_MCB_COUT,
        output P_SKIP_ADD_MCB_COUT,
        output P_SKIP_DEL_LSB_MCB_COUT,
        output P_SKIP_DEL_MCB_COUT,
        output P_TFIFO_EN_BRIDGE_COUT,
        output P_TFIFO_EN_PCS_TX_COUT,
        output P_TSO_LS_OUT,
        output P_RDATA_0[46:0],
        output P_RDATA_1[46:0],
        output P_PCS_LSM_SYNCED[3:0],
        output P_RDATA_2[46:0],
        output P_ALIGN_TX[3:0],
        output P_ALIGN_RX[3:0],
        output P_RDATA_3[46:0],
        output P_CLK2CORE_TX[3:0],
        output P_CLK2CORE_RX[3:0],
        output P_CFG_RDATA[7:0],
        output P_PCS_RX_MCB_STATUS[3:0],
        
        input P_TEST_CLK = 1'b0,
        input P_TEST_MODE = 1'b0,
        input P_TEST_RSTN = 1'b0,
        input P_TEST_SE = 1'b0,
        input P_TEST_SI0 = 1'b0,
        input P_TEST_SI1 = 1'b0,
        input P_TEST_SI2 = 1'b0,
        input P_TEST_SI3 = 1'b0,
        input P_TEST_SI4 = 1'b0,
        input P_TEST_SI5 = 1'b0,
        input P_TEST_SI6 = 1'b0,
        input P_TEST_SI7 = 1'b0,
        output P_TEST_SO0,
        output P_TEST_SO1,
        output P_TEST_SO2,
        output P_TEST_SO3,
        output P_TEST_SO4,
        output P_TEST_SO5,
        output P_TEST_SO6,
        output P_TEST_SO7,
        
        input P_BSMODE = 1'b0
    ); 
};


design
operator V_OUTBUFT_MIPI_SLAVE
{
    parameter
    (
        string IOSTANDARD = "DEFAULT",
        string SLEW_RATE = "SLOW",
        string DRIVE_STRENGTH = "8"
    );
    port
    (
        input I,IB,TB,M,
        output OB
    );
};

// Add for PGC
design
operator V_DLL_E1
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string FAST_LOCK = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int DELAY_STEP_OFFSET = 0
    );

    port
    (
        output DELAY_STEP[7:0],
        output DELAY_STEP1[7:0],
        output LOCK,
        input CLKIN,
        input UPDATE_N,
        input RST,
        input PWD
    );
};

design
operator V_DRM9K_E1
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit CSA_MASK[2:0] = 3'b000,
        bit CSB_MASK[2:0] = 3'b000,
        int DATA_WIDTH_A = 9,
        int DATA_WIDTH_B = 9,
        string WRITE_MODE_A = "NORMAL_WRITE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NORMAL_WRITE | TRANSPARENT_WRITE | READ_BEFORE_WRITE" */,
        string WRITE_MODE_B = "NORMAL_WRITE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NORMAL_WRITE | TRANSPARENT_WRITE | READ_BEFORE_WRITE" */,
        int DOA_REG = 0 /* 0 | 1 */,
        int DOB_REG = 0 /* 0 | 1 */,
        int DOA_REG_CLKINV = 0 /* 0 | 1 */,
        int DOB_REG_CLKINV = 0 /* 0 | 1 */,
        bit RSTA_VAL[8:0] = 9'b000,
        bit RSTB_VAL[8:0] = 9'b000,
        string RST_TYPE = "SYNC" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "SYNC | ASYNC | ASYNC_SYNC_RELEASE" */,
        string RAM_MODE = "TRUE_DUAL_PORT" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE_DUAL_PORT | ROM | SINGLE_PORT | SIMPLE_DUAL_PORT" */,
        string RAM_CASCADE = "NONE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NONE | UPPER | LOWER" */,
        bit INIT_00[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_01[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_02[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_03[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_04[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_05[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_06[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_07[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_08[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_09[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_10[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_11[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_12[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_13[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_14[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_15[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_16[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_17[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_18[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_19[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        string INIT_FILE = "NONE",
        int BLOCK_X = 0,
        int BLOCK_Y = 0,
        int RAM_DATA_WIDTH = 9,
        int RAM_ADDR_WIDTH = 10,
        string INIT_FORMAT = "BIN"
    );

    port
    (
        output COUTA,
        output COUTB,
        output DOA[8:0],
        output DOB[8:0],
        input CINA,
        input CINB,
        input DIA[8:0],
        input DIB[8:0],
        input ADDRA[13:0],
        input ADDRA_HOLD,
        input ADDRB[13:0],
        input ADDRB_HOLD,
        input CSA[2:0],
        input CSB[2:0],
        input BWEA[1:0],
        input CLKA /* pragma PAP_LIB_IS_INV_PIN */,
        input CLKB /* pragma PAP_LIB_IS_INV_PIN */,
        input CEA,
        input CEB,
        input WEA,
        input WEB,
        input ORCEA,
        input ORCEB,
        input RSTA /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTB /* pragma PAP_LIB_IS_INV_PIN */
    );
};

design
operator V_FIFO9K
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int DATA_WIDTH = 9,
        int DO_REG = 0,
        bit ALMOST_FULL_OFFSET[12:0] = 13'h000,
        bit ALMOST_EMPTY_OFFSET[12:0] = 13'h000,
        int USE_EMPTY = 0,
        int USE_FULL = 0,
        string SYNC_FIFO = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        output ALMOST_EMPTY,
        output ALMOST_FULL,
        output EMPTY,
        output FULL,
        output WCNT[12:0],
        output RCNT[12:0],
        output DO[17:0],
        input DI[17:0],
        input WCLK,
        input RCLK,
        input WCE,
        input RCE,
        input ORCE,
        input RST
    );
};

design
operator V_IDDR
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string RS_TYPE = "ASYNC_SET" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ASYNC_SET | ASYNC_RESET | SYNC_SET | SYNC_RESET" */
    );

    port
    (
        output Q0,
        output Q1,
        input D,
        input CE,
        input RS,
        input CLK
    );
};

design
operator V_IODELAY_E1
{
    parameter
    (
        bit DELAY_STEP_VALUE[4:0] = 5'b00000,
        string DELAY_STEP_SEL = "PARAMETER"
    );

    port
    (
        output DO,
        input DI,
        input DELAY_STEP[4:0]
    );
};

design
operator V_INBUFE
{
    parameter
    (
        string IOSTANDARD = "DEFAULT",
        string TERM_DDR = "ON"
    );

    port
    (
        output O,
        input EN,
        input I
    );
};

design
operator V_INBUFEDS
{
    parameter
    (
        string IOSTANDARD = "DEFAULT",
        string TERM_DIFF = "ON"
    );

    port
    (
        output O,
        input EN,
        input I,
        input IB
    );
};

design
operator V_IOCLKDIV_E1
{
    parameter
    (
        string DIV_FACTOR = "DIV_DIS",
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        output CLKOUT,
        output CLKDIVOUT,
        input CLKIN,
        input RST_N,
        input ALIGNWD
    );
};

design
operator V_ISERDES_E1
{
    parameter
    (
        string ISERDES_MODE = "IDES4",
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        output DO[7:0],
        input DIA,
        input DIC,
        input ICLKA,
        input ICLKC,
        input RCLKA,
        input RCLKC,
        input ALIGNWDA,
        input ALIGNWDC,
        input RSTA,
        input RSTC
    );
};

design
operator V_ODDR
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string RS_TYPE = "ASYNC_SET" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ASYNC_SET | ASYNC_RESET | SYNC_SET | SYNC_RESET" */
    );

    port
    (
        output Q,
        input D0,
        input D1,
        input CE,
        input RS,
        input CLK
    );
};

design
operator V_OSC_E2
{
    parameter
    (
        int CLK_DIV = 0,
        string USER_DIV_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        input EN_N,
        output CLKOUT,
        output CLKCRC
    );
};

design
operator V_OSERDES_E1
{
    parameter
    (
        string OSERDES_MODE = "OSER4",
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        output DOA,
        output DOC,
        input DI[7:0],
        input RCLKA,
        input RCLKC,
        input OCLKA,
        input OCLKC,
        input RSTA,
        input RSTC
    );
};

design
operator V_PLL_E2
{
    parameter
    (
        real CLKIN_FREQ = 50.0,
        string PFDEN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PFDEN_APB_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit LOCK_MODE = 1'b0 /* 0 | 1 */,
        int STATIC_RATIOI = 1,
        int STATIC_RATIO0 = 1,
        int STATIC_RATIO1 = 1,
        int STATIC_RATIO2 = 1,
        int STATIC_RATIO3 = 1,
        int STATIC_RATIOF = 1,
        string FRACN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int FRACN_DIV = 0,
        string PHASE_APB_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int STATIC_PHASE0 = 0,
        int STATIC_PHASE1 = 0,
        int STATIC_PHASE2 = 0,
        int STATIC_PHASE3 = 0,
        int STATIC_CPHASE0 = 0,
        int STATIC_CPHASE1 = 0,
        int STATIC_CPHASE2 = 0,
        int STATIC_CPHASE3 = 0,
        string VCOCLK_BYPASS0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string VCOCLK_BYPASS1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string VCOCLK_BYPASS2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string VCOCLK_BYPASS3 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int ODIV0_CLKIN_SEL = 0,
        int ODIV1_CLKIN_SEL = 0,
        int ODIV2_CLKIN_SEL = 0,
        int ODIV3_CLKIN_SEL = 0,
        int CLKOUT0_SEL = 0,
        int CLKOUT1_SEL = 0,
        int CLKOUT2_SEL = 0,
        int CLKOUT3_SEL = 0,
        string CLKOUT0_SYN_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT1_SYN_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT2_SYN_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT3_SYN_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string INTERNAL_FB = "CLKOUT0" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "DISABLE | CLKOUT0 | CLKOUT1 | CLKOUT2 | CLKOUT3" */,
        string EXTERNAL_FB = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "DISABLE | CLKOUT0 | CLKOUT1 | CLKOUT2 | CLKOUT3" */,
        string BANDWIDTH = "OPTIMIZED",
        string STDBY_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string RST_INNER_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string RSTODIV_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string RSTODIV2_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string RSTODIV3_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        output CLKOUT,
        output CLKOUT0,
        output CLKOUT1,
        output CLKOUT2,
        output CLKOUT3,
        output PHASE_SOURCE,
        output LOCK,
        input CLKI,
        input CLKFB,
        input PFDEN,
        input PHASE_SEL[1:0],
        input PHASE_DIR,
        input PHASE_STEP_N,
        input LOAD_PHASE,
        input CPHASE_STEP_N,
        input CLKOUT0_SYN,
        input CLKOUT1_SYN,
        input CLKOUT2_SYN,
        input CLKOUT3_SYN,
        input STDBY,
        input PLL_PWD,
        input RST,
        input RSTODIV,
        input RSTODIV2,
        input RSTODIV3,
        input APB_CLK,
        input APB_RST_N,
        input APB_ADDR[4:0],
        input APB_SEL,
        input APB_EN,
        input APB_WRITE,
        input APB_WDATA[7:0]
    );
};

//design
//operator V_APB
//{
//    port
//    (
//        input CLK,
//        input RST_N,
//        input ADDR[4:0],
//        input SEL_CCS,
//        input SEL_SPI,
//        input SEL_I2C0,
//        input SEL_I2C1,
//        input SEL_TIMER,
//        input SEL_PLL0,
//        input SEL_PLL1,
//        input EN,
//        input WR,
//        input WDATA[7:0],
//        output RDATA[7:0],
//        output RDY
//    );
//};
//design
//operator V_I2C
//{
//    parameter
//    (
//        int I2C_NUM = 0
//    );
//
//    port
//    (
//        output SCL_OE_N,
//        input SCL_I,
//        output SCL_O,
//        output SDA_OE_N,
//        input SDA_I,
//        output SDA_O,
//        output IRQ
//    );
//};
//design
//operator V_POWERCTL
//{
//    port
//    (
//        input CLK,
//        input STDBY_EN_N,
//        input TIMER_EN_N,
//        input CLR_N,
//        output STOP,
//        output STDBY,
//        output STDBY_FLG
//    );
//};
//
//design
//operator V_RBCRC
//{
//    port
//    (
//        input CLK,
//        input RST,
//        input START,
//        output ERR,
//        output VALID
//    );
//};
//
//design
//operator V_SPI
//{
//    port
//    (
//        output SCK_OE_N,
//        input SCK_I,
//        output SCK_O,
//        output SS_O_N[7:0],
//        input SS_I_N,
//        output MISO_OE_N,
//        input MISO_I,
//        output MISO_O,
//        output MOSI_OE_N,
//        input MOSI_I,
//        output MOSI_O,
//        output IRQ
//    );
//};
//
//design
//operator V_TIMER
//{
//    port
//    (
//        input RST_N,
//        input CLK,
//        input STAMP,
//        output PWM,
//        output IRQ
//    );
//};

//Add by PGL12G

design
operator V_PLL_E3
{
    parameter
    (
        real CLKIN_FREQ = 50.0,
        string PFDEN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit VCOCLK_DIV2 = 1'b0 /* 0 | 1 */,
        string DYNAMIC_RATIOI_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_RATIOM_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_RATIO0_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_RATIO1_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_RATIO2_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_RATIO3_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_RATIO4_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_RATIOF_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int STATIC_RATIOI = 1 /* 1 ~ 512 */,
        int STATIC_RATIOM = 1 /* 1 ~ 64 */,
        int STATIC_RATIO0 = 1 /* 1 ~ 512 */,
        int STATIC_RATIO1 = 1 /* 1 ~ 512 */,
        int STATIC_RATIO2 = 1 /* 1 ~ 512 */,
        int STATIC_RATIO3 = 1 /* 1 ~ 512 */,
        int STATIC_RATIO4 = 1 /* 1 ~ 512 */,
        int STATIC_RATIOF = 1 /* 1 ~ 512 */,
        string DYNAMIC_DUTY0_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_DUTY1_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_DUTY2_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_DUTY3_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DYNAMIC_DUTY4_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int STATIC_DUTY0 = 2,
        int STATIC_DUTY1 = 2,
        int STATIC_DUTY2 = 2,
        int STATIC_DUTY3 = 2,
        int STATIC_DUTY4 = 2,
        int STATIC_PHASE0 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE1 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE2 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE3 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE4 = 0 /* 0 ~ 7 */,
        int STATIC_PHASEF = 0 /* 0 ~ 7 */,
        int STATIC_CPHASE0 = 0 /* 0 ~ 511 */,
        int STATIC_CPHASE1 = 0 /* 0 ~ 511 */,
        int STATIC_CPHASE2 = 0 /* 0 ~ 511 */,
        int STATIC_CPHASE3 = 0 /* 0 ~ 511 */,
        int STATIC_CPHASE4 = 0 /* 0 ~ 511 */,
        int STATIC_CPHASEF = 0 /* 0 ~ 511 */,
        string CLK_CAS1_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_CAS2_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_CAS3_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_CAS4_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int CLKOUT5_SEL = 0 /* 0 ~ 4 */,
        string CLKIN_BYPASS_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT0_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT0_EXT_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT1_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT2_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT3_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT4_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT5_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string INTERNAL_FB = "ENABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "DISABLE | ENABLE" */,
        string EXTERNAL_FB = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "DISABLE | CLKOUT0 | CLKOUT1 | CLKOUT2 | CLKOUT3 | CLKOUT4" */,
        string DYNAMIC_LOOP_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string LOOP_MAPPING_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string BANDWIDTH = "OPTIMIZED" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "OPTIMIZED | LOW | HIGH" */
    );

    port
    (
        output CLKOUT0,
        output CLKOUT0_EXT,
        output CLKOUT1,
        output CLKOUT2,
        output CLKOUT3,
        output CLKOUT4,
        output CLKOUT5,
        output CLKSWITCH_FLAG,
        output LOCK,
        input CLKIN1,
        input CLKIN2,
        input CLKFB,
        input CLKIN_SEL,
        input CLKIN_SEL_EN,
        input PFDEN,
        input ICP_BASE,
        input ICP_SEL[3:0],
        input LPFRES_SEL[2:0],
        input CRIPPLE_SEL,
        input PHASE_SEL[2:0],
        input PHASE_DIR,
        input PHASE_STEP_N,
        input LOAD_PHASE,
        input RATIOI[9:0],
        input RATIOM[6:0],
        input RATIO0[9:0],
        input RATIO1[9:0],
        input RATIO2[9:0],
        input RATIO3[9:0],
        input RATIO4[9:0],
        input RATIOF[9:0],
        input DUTY0[9:0],
        input DUTY1[9:0],
        input DUTY2[9:0],
        input DUTY3[9:0],
        input DUTY4[9:0],
        input CLKOUT0_SYN,
        input CLKOUT0_EXT_SYN,
        input CLKOUT1_SYN,
        input CLKOUT2_SYN,
        input CLKOUT3_SYN,
        input CLKOUT4_SYN,
        input CLKOUT5_SYN,
        input PLL_PWD,
        input RST,
        input RSTODIV
    );
};

design
operator V_OSC_E3
{
    parameter
    (
        int CLK_DIV = 2
    );

    port
    (
        output CLKOUT,
        input EN_N,
        input RST_N
    );
};


design
operator V_RAM32X1
{
    parameter
    (
        bit INIT[31:0] = 32'h00000000,
        string WE_POL = "FALSE",
        string SECTION = ""        // A, B, C, D, AF, BF, CF, DF
    );

    port
    (
        output RDO,
        input  WDI,
        input  RADDR[4:0],
        input  WADDR[4:0],
        input  WCLK,
        input  WE
    );
};


design
operator V_APM_MULT9 
{
    parameter
    (
        string GRS_EN           = "TRUE",   //"TRUE"; "FALSE"
        string SYNC_RST         = "FALSE",  //"TRUE"; "FALSE"
        string INREG_EN         = "FALSE",  //"TRUE"; "FALSE"
        string PREREG_EN        = "FALSE",  //"TRUE"; "FALSE"
        string MULTREG_EN       = "FALSE",  //"TRUE"; "FALSE"
        string POSTREG_EN       = "FALSE",  //"TRUE"; "FALSE"
        string USED_PREADD      = "FALSE",  //"TRUE"; "FALSE"
        string USED_POSTADD     = "FALSE",  //"TRUE"; "FALSE"
        string USED_ACC         = "FALSE",  //"TRUE"; "FALSE"
        string POSTADD_INPUT_ORDER = "CPI_MULT", // "MULT_CPI"; "CPI_MULT"
        string DYN_INIT_EN      = "FALSE",  //"TRUE"; "FALSE"
        bit SINIT_VALUE[31:0]   = 32'h0,
        bit OVERFLOW_MASK[31:0] = 32'h0,
        bit PATTERN[31:0]       = 32'h0, //compare pattern
        bit MASKPAT[31:0]       = 32'h0  //pattern mask
    );
    port
    (
        input  CLK,
        input  CE,
        input  RST,
        input  A_SIGNED,
        input  B_SIGNED,
        input  C_SIGNED,
        input  A[8:0],
        input  B[8:0],
        input  C[7:0],
        output P[31:0],
        input  PRE_ADDSUB,
        input  POST_ADDSUB,
        input  CPI_SIGNED,
        output CPO_SIGNED,
        input  CPI[31:0],
        output CPO[31:0],
        input  RELOAD,
        input  ACC_ADDSUB,
        input  DINIT_VALUE[31:0],
        output OVER,
        output UNDER,
        output EQZ,
        output EQZM,
        output EQOM,
        output EQPAT,
        output EQPATN
    );
};

design
operator V_APM_MULT18
{
    parameter
    (
        string GRS_EN           = "TRUE",   //"TRUE"; "FALSE"
        string SYNC_RST         = "FALSE",  //"TRUE"; "FALSE"
        string INREG_EN         = "FALSE",  //"TRUE"; "FALSE"
        string PREREG_EN        = "FALSE",  //"TRUE"; "FALSE"
        string MULTREG_EN       = "FALSE",  //"TRUE"; "FALSE"
        string POSTREG_EN       = "FALSE",  //"TRUE"; "FALSE"
        string USED_PREADD      = "FALSE",  //"TRUE"; "FALSE"
        string USED_POSTADD     = "FALSE",  //"TRUE"; "FALSE"
        string USED_ACC         = "FALSE",  //"TRUE"; "FALSE"
        string POSTADD_INPUT_ORDER = "CPI_MULT", // "MULT_CPI"; "CPI_MULT"
        string DYN_INIT_EN      = "FALSE",  //"TRUE"; "FALSE"
        bit SINIT_VALUE[63:0]   = 64'h0,
        bit OVERFLOW_MASK[63:0] = 64'h0,
        bit PATTERN[63:0]       = 64'h0, //compare pattern
        bit MASKPAT[63:0]       = 64'h0  //pattern mask
    );
    port
    (
        input  CLK,
        input  CE,
        input  RST,
        input  A_SIGNED,
        input  B_SIGNED,
        input  C_SIGNED,
        input  A[17:0],
        input  B[17:0],
        input  C[17:0],
        output P[63:0],
        input  PRE_ADDSUB,
        input  POST_ADDSUB,
        input  CPI_SIGNED,
        output CPO_SIGNED,
        input  CPI[63:0],
        output CPO[63:0],
        input  RELOAD,
        input  ACC_ADDSUB,
        input  DINIT_VALUE[63:0],
        output OVER,
        output UNDER,
        output EQZ,
        output EQZM,
        output EQOM,
        output EQPAT,
        output EQPATN
    );
};

design
operator V_APM_MULT27
{
    parameter
    (
        string GRS_EN           = "TRUE",   //"TRUE"; "FALSE"
        string SYNC_RST         = "FALSE",  //"TRUE"; "FALSE"
        string INREG_EN         = "FALSE",  //"TRUE"; "FALSE"
        string PREREG_EN        = "FALSE",  //"TRUE"; "FALSE"
        string MULTREG_EN       = "FALSE",  //"TRUE"; "FALSE"
        string POSTREG_EN       = "FALSE",  //"TRUE"; "FALSE"
        string USED_PREADD      = "FALSE",  //"TRUE"; "FALSE"
        string USED_POSTADD     = "FALSE",  //"TRUE"; "FALSE"
        string USED_ACC         = "FALSE",  //"TRUE"; "FALSE"
        string POSTADD_INPUT_ORDER = "CPI_MULT", // "MULT_CPI"; "CPI_MULT"
        string DYN_INIT_EN      = "FALSE",  //"TRUE"; "FALSE"
        bit SINIT_VALUE[63:0]   = 64'h0,
        bit OVERFLOW_MASK[63:0] = 64'h0,
        bit PATTERN[63:0]       = 64'h0, //compare pattern
        bit MASKPAT[63:0]       = 64'h0  //pattern mask
    );
    port
    (
        input  CLK,
        input  CE,
        input  RST,
        input  A_SIGNED,
        input  B_SIGNED,
        input  C_SIGNED,
        input  A[26:0],
        input  B[26:0],
        input  C[25:0],
        output P[63:0],
        input  PRE_ADDSUB,
        input  POST_ADDSUB,
        input  CPI_SIGNED,
        output CPO_SIGNED,
        input  CPI[63:0],
        output CPO[63:0],
        input  RELOAD,
        input  ACC_ADDSUB,
        input  DINIT_VALUE[63:0],
        output OVER,
        output UNDER,
        output EQZ,
        output EQZM,
        output EQOM,
        output EQPAT,
        output EQPATN
    );
};

design
operator V_APM_MULT36
{
    parameter
    (
        string GRS_EN           = "TRUE",   //"TRUE"; "FALSE"
        string SYNC_RST         = "FALSE",  //"TRUE"; "FALSE"
        string INREG_EN         = "FALSE",  //"TRUE"; "FALSE"
        string PREREG_EN        = "FALSE",  //"TRUE"; "FALSE"
        string MULTREG_EN       = "FALSE",  //"TRUE"; "FALSE"
        string POSTREG_EN       = "FALSE",  //"TRUE"; "FALSE"
        string USED_PREADD      = "FALSE",  //"TRUE"; "FALSE"
        string USED_POSTADD     = "FALSE",  //"TRUE"; "FALSE"
        string USED_ACC         = "FALSE",  //"TRUE"; "FALSE"
        string POSTADD_INPUT_ORDER = "CPI_MULT", // "MULT_CPI"; "CPI_MULT"
        string DYN_INIT_EN      = "FALSE",  //"TRUE"; "FALSE"
        bit SINIT_VALUE[63:0]   = 64'h0,
        bit OVERFLOW_MASK[63:0] = 64'h0,
        bit PATTERN[63:0]       = 64'h0, //compare pattern
        bit MASKPAT[63:0]       = 64'h0  //pattern mask
    );
    port
    (
        input  CLK,
        input  CE,
        input  RST,
        input  A_SIGNED,
        input  B_SIGNED,
        input  C_SIGNED,
        input  A[35:0],
        input  B[17:0],
        input  C[17:0],
        output P[63:0],
        input  PRE_ADDSUB,
        input  POST_ADDSUB,
        input  CPI_SIGNED,
        output CPO_SIGNED,
        input  CPI[63:0],
        output CPO[63:0],
        input  RELOAD,
        input  ACC_ADDSUB,
        input  DINIT_VALUE[63:0],
        output OVER,
        output UNDER,
        output EQZ,
        output EQZM,
        output EQOM,
        output EQPAT,
        output EQPATN
    );
};

design
operator V_APM_FIR_A
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string SYNC_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string INREG_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string OUTREG_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit OPCD_DYN_SEL = 1'b0,
        bit OPCD_CPI_SEL = 1'b0,
        bit INPUT_OP[1:0] = 2'b11,
        bit DYN_OP_SEL[1:0] = 2'b11
    );

    port
    (
        output CYO[17:0],
        output CYO_SIGNED,
        output CPO[63:0],
        output CPO_SIGNED,
        output P[63:0],
        input CLK /* pragma PAP_IS_CLOCK_PIN */,
        input CE,
        input RST,
        input S1,
        input S0,
        input Y0[17:0],
        input Y0_SIGNED,
        input H0[17:0],
        input H0_SIGNED,
        input Y1[17:0],
        input Y1_SIGNED,
        input H1[17:0],
        input H1_SIGNED,
        input OPCD_CPI_DYN,
        input CYI[17:0],
        input CYI_SIGNED,
        input CPI[63:0],
        input CPI_SIGNED
    );
};

design
operator V_APM_FIR_B
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string SYNC_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string INREG_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string OUTREG_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit OPCD_DYN_SEL = 1'b0,
        bit OPCD_CPI_SEL = 1'b0,
        bit INPUT_OP = 1'b1,
        bit DYN_OP_SEL = 1'b1
    );

    port
    (
        output CYO[26:0],
        output CYO_SIGNED,
        output CPO[63:0],
        output CPO_SIGNED,
        output P[63:0],
        input CLK /* pragma PAP_IS_CLOCK_PIN */,
        input CE,
        input RST,
        input S0,
        input Y0[26:0],
        input Y0_SIGNED,
        input H0[26:0],
        input H0_SIGNED,
        input OPCD_CPI_DYN,
        input CYI[26:0],
        input CYI_SIGNED,
        input CPI[63:0],
        input CPI_SIGNED
    );
};

design
operator V_APM_PREADD_FIR_A
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string SYNC_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string INREG_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string OUTREG_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit OPCD_DYN_SEL = 1'b0,
        bit OPCD_CPI_SEL = 1'b0,
        string INREG_Z1_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit INPUT_OP[7:0] = 8'b11000110,
        bit DYN_OP_SEL[7:0] = 8'b11111111
    );

    port
    (
        output CYO[17:0],
        output CYO_SIGNED,
        output CZO[17:0],
        output CZO_SIGNED,
        output CPO[63:0],
        output CPO_SIGNED,
        output P[63:0],
        input CLK /* pragma PAP_IS_CLOCK_PIN */,
        input CE,
        input RST,
        input S1,
        input S0,
        input DYN_OP[5:0],
        input Y0[17:0],
        input Y0_SIGNED,
        input Z0[17:0],
        input Z0_SIGNED,
        input H0[17:0],
        input H0_SIGNED,
        input Y1[17:0],
        input Y1_SIGNED,
        input Z1[17:0],
        input Z1_SIGNED,
        input H1[17:0],
        input H1_SIGNED,
        input OPCD_CPI_DYN,
        input CYI[17:0],
        input CYI_SIGNED,
        input CZI[17:0],
        input CZI_SIGNED,
        input CPI[63:0],
        input CPI_SIGNED
    );
};

design
operator V_APM_PREADD_FIR_B
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string SYNC_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string INREG_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string OUTREG_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit OPCD_DYN_SEL = 1'b0,
        bit OPCD_CPI_SEL = 1'b0,
        string INREG_Z0_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit INPUT_OP[3:0] = 4'b1111,
        bit DYN_OP_SEL[3:0] = 4'b1111
    );

    port
    (
        output CYO[25:0],
        output CYO_SIGNED,
        output CZO[25:0],
        output CZO_SIGNED,
        output CPO[63:0],
        output CPO_SIGNED,
        output P[63:0],
        input CLK /* pragma PAP_IS_CLOCK_PIN */,
        input CE,
        input RST,
        input S1,
        input S0,
        input DYN_OP[1:0],
        input Y0[25:0],
        input Y0_SIGNED,
        input Z0[25:0],
        input Z0_SIGNED,
        input H0[26:0],
        input H0_SIGNED,
        input OPCD_CPI_DYN,
        input CYI[25:0],
        input CYI_SIGNED,
        input CZI[25:0],
        input CZI_SIGNED,
        input CPI[63:0],
        input CPI_SIGNED
    );
};


design
operator V_HSST_E1
{
    parameter
    (
        string PCS_CH0_BYPASS_WORD_ALIGN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_BYPASS_DENC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_BYPASS_BONDING = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_BYPASS_CTC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_BYPASS_GEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_BYPASS_BRIDGE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_DATA_MODE = "X8",
        string PCS_CH0_RX_POLARITY_INV = "DELAY",
        string PCS_CH0_ALIGN_MODE = "1GB",
        string PCS_CH0_SAMP_16B = "X16",
        int PCS_CH0_COMMA_REG0 = 0,
        int PCS_CH0_COMMA_MASK = 0,
        string PCS_CH0_CEB_MODE = "10GB",
        string PCS_CH0_CTC_MODE = "1SKIP",
        int PCS_CH0_A_REG = 0,
        string PCS_CH0_GE_AUTO_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PCS_CH0_SKIP_REG0 = 0,
        int PCS_CH0_SKIP_REG1 = 0,
        int PCS_CH0_SKIP_REG2 = 0,
        int PCS_CH0_SKIP_REG3 = 0,
        string PCS_CH0_DEC_DUAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_SPLIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_FIFOFLAG_CTC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_COMMA_DET_MODE = "COMMA_PATTERN",
        string PCS_CH0_ERRDETECT_SILENCE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_PMA_RCLK_POLINV = "PMA_RCLK",
        string PCS_CH0_PCS_RCLK_SEL = "PMA_RCLK",
        string PCS_CH0_MCB_RCLK_POLINV = "MCB_RCLK",
        string PCS_CH0_CB_RCLK_SEL = "PMA_RCLK",
        string PCS_CH0_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        string PCS_CH0_RCLK_POLINV = "RCLK",
        string PCS_CH0_BRIDGE_RCLK_SEL = "PMA_RCLK",
        string PCS_CH0_PCS_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_CB_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_AFTER_CTC_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_AFTER_CTC_RCLK_EN_GB = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_BRIDGE_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_PCS_RX_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_SLAVE = "MASTER",
        string PCS_CH0_PCIE_SLAVE = "MASTER",
        string PCS_CH0_PCS_CB_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_TX_BYPASS_BRIDGE_UINT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_TX_BYPASS_GEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_TX_BYPASS_ENC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_TX_BYPASS_BIT_SLIP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_TX_GEAR_SPLIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_TX_DRIVE_REG_MODE = "NO_CHANGE",
        int PCS_CH0_TX_BIT_SLIP_CYCLES = 0,
        string PCS_CH0_INT_TX_MASK_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_TX_MASK_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_TX_MASK_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_TX_CLR_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_TX_CLR_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_TX_CLR_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        string PCS_CH0_TX_PCS_CLK_EN_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_TX_BRIDGE_TCLK_SEL = "PCS_TCLK",
        string PCS_CH0_TX_TCLK_POLINV = "TCLK",
        string PCS_CH0_TX_PCS_TX_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_TX_SLAVE = "SLAVE",
        string PCS_CH0_TX_BRIDGE_CLK_EN_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_DATA_WIDTH_MODE = "X20",
        string PCS_CH0_TX_TCLK2FABRIC_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_TX_OUTZZ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_ENC_DUAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_TX_BITSLIP_DATA_MODE = "X10",
        int PCS_CH0_COMMA_REG1 = 0,
        int PCS_CH0_RAPID_IMAX = 0,
        int PCS_CH0_RAPID_VMIN_1 = 0,
        int PCS_CH0_RAPID_VMIN_2 = 0,
        string PCS_CH0_RX_PRBS_MODE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PCS_CH0_RX_ERRCNT_CLR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_TX_PRBS_MODE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PCS_CH0_TX_INSERT_ER = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_ENABLE_PRBS_GEN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PCS_CH0_ERR_CNT = 0,
        int PCS_CH0_DEFAULT_RADDR = 0,
        int PCS_CH0_MASTER_CHECK_OFFSET = 0,
        int PCS_CH0_DELAY_SET = 0,
        string PCS_CH0_SEACH_OFFSET = "20BIT",
        int PCS_CH0_CEB_RAPIDLS_MMAX = 0,
        int PCS_CH0_CTC_AFULL = 0,
        int PCS_CH0_CTC_AEMPTY = 0,
        int PCS_CH0_CTC_CONTI_SKP_SET = 0,
        string PCS_CH0_FAR_LOOP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_NEAR_LOOP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_MASK_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_MASK_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_MASK_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_MASK_3 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_MASK_4 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_MASK_5 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_MASK_6 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_MASK_7 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_CLR_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_CLR_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_CLR_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_CLR_3 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_CLR_4 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_CLR_5 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_CLR_6 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_INT_RX_CLR_7 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PCS_CH0_CA_RX = 0,
        int PCS_CH1_CA_RX = 0,
        int PCS_CH2_CA_RX = 0,
        int PCS_CH3_CA_RX = 0,
        int PCS_CH0_CA_TX = 0,
        int PCS_CH1_CA_TX = 0,
        int PCS_CH2_CA_TX = 0,
        int PCS_CH3_CA_TX = 0,
        string PCS_CH0_CA_DYN_DLY_EN_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_CA_DYN_DLY_EN_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_CA_DYN_DLY_EN_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_CA_DYN_DLY_EN_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_CA_DYN_DLY_EN_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_CA_DYN_DLY_EN_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_CA_DYN_DLY_EN_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_CA_DYN_DLY_EN_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_CA_DYN_DLY_SEL_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_CA_DYN_DLY_SEL_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_CA_DYN_DLY_SEL_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_CA_DYN_DLY_SEL_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_CA_DYN_DLY_SEL_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_CA_DYN_DLY_SEL_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_CA_DYN_DLY_SEL_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_CA_DYN_DLY_SEL_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_CA_RSTN_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_CA_RSTN_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_CA_RSTN_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_CA_RSTN_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH0_CA_RSTN_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_CA_RSTN_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_CA_RSTN_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_CA_RSTN_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_BYPASS_WORD_ALIGN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_BYPASS_DENC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_BYPASS_BONDING = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_BYPASS_CTC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_BYPASS_GEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_BYPASS_BRIDGE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_DATA_MODE = "X8",
        string PCS_CH1_RX_POLARITY_INV = "DELAY",
        string PCS_CH1_ALIGN_MODE = "1GB",
        string PCS_CH1_SAMP_16B = "X16",
        int PCS_CH1_COMMA_REG0 = 0,
        int PCS_CH1_COMMA_MASK = 0,
        string PCS_CH1_CEB_MODE = "10GB",
        string PCS_CH1_CTC_MODE = "1SKIP",
        int PCS_CH1_A_REG = 0,
        string PCS_CH1_GE_AUTO_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PCS_CH1_SKIP_REG0 = 0,
        int PCS_CH1_SKIP_REG1 = 0,
        int PCS_CH1_SKIP_REG2 = 0,
        int PCS_CH1_SKIP_REG3 = 0,
        string PCS_CH1_DEC_DUAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_SPLIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_FIFOFLAG_CTC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_COMMA_DET_MODE = "COMMA_PATTERN",
        string PCS_CH1_ERRDETECT_SILENCE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_PMA_RCLK_POLINV = "PMA_RCLK",
        string PCS_CH1_PCS_RCLK_SEL = "PMA_RCLK",
        string PCS_CH1_MCB_RCLK_POLINV = "MCB_RCLK",
        string PCS_CH1_CB_RCLK_SEL = "PMA_RCLK",
        string PCS_CH1_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        string PCS_CH1_RCLK_POLINV = "RCLK",
        string PCS_CH1_BRIDGE_RCLK_SEL = "PMA_RCLK",
        string PCS_CH1_PCS_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_CB_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_AFTER_CTC_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_AFTER_CTC_RCLK_EN_GB = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_BRIDGE_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_PCS_RX_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_SLAVE = "MASTER",
        string PCS_CH1_PCIE_SLAVE = "MASTER",
        string PCS_CH1_PCS_CB_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_TX_BYPASS_BRIDGE_UINT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_TX_BYPASS_GEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_TX_BYPASS_ENC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_TX_BYPASS_BIT_SLIP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_TX_GEAR_SPLIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_TX_DRIVE_REG_MODE = "NO_CHANGE",
        int PCS_CH1_TX_BIT_SLIP_CYCLES = 0,
        string PCS_CH1_INT_TX_MASK_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_TX_MASK_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_TX_MASK_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_TX_CLR_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_TX_CLR_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_TX_CLR_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        string PCS_CH1_TX_PCS_CLK_EN_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_TX_BRIDGE_TCLK_SEL = "PCS_TCLK",
        string PCS_CH1_TX_TCLK_POLINV = "TCLK",
        string PCS_CH1_TX_PCS_TX_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_TX_SLAVE = "SLAVE",
        string PCS_CH1_TX_BRIDGE_CLK_EN_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_DATA_WIDTH_MODE = "X20",
        string PCS_CH1_TX_TCLK2FABRIC_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_TX_OUTZZ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_ENC_DUAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_TX_BITSLIP_DATA_MODE = "X10",
        int PCS_CH1_COMMA_REG1 = 0,
        int PCS_CH1_RAPID_IMAX = 0,
        int PCS_CH1_RAPID_VMIN_1 = 0,
        int PCS_CH1_RAPID_VMIN_2 = 0,
        string PCS_CH1_RX_PRBS_MODE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PCS_CH1_RX_ERRCNT_CLR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_TX_PRBS_MODE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PCS_CH1_TX_INSERT_ER = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_ENABLE_PRBS_GEN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PCS_CH1_ERR_CNT = 0,
        int PCS_CH1_DEFAULT_RADDR = 0,
        int PCS_CH1_MASTER_CHECK_OFFSET = 0,
        int PCS_CH1_DELAY_SET = 0,
        string PCS_CH1_SEACH_OFFSET = "20BIT",
        int PCS_CH1_CEB_RAPIDLS_MMAX = 0,
        int PCS_CH1_CTC_AFULL = 0,
        int PCS_CH1_CTC_AEMPTY = 0,
        int PCS_CH1_CTC_CONTI_SKP_SET = 0,
        string PCS_CH1_FAR_LOOP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_NEAR_LOOP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_MASK_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_MASK_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_MASK_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_MASK_3 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_MASK_4 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_MASK_5 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_MASK_6 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_MASK_7 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_CLR_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_CLR_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_CLR_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_CLR_3 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_CLR_4 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_CLR_5 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_CLR_6 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH1_INT_RX_CLR_7 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_BYPASS_WORD_ALIGN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_BYPASS_DENC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_BYPASS_BONDING = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_BYPASS_CTC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_BYPASS_GEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_BYPASS_BRIDGE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_DATA_MODE = "X8",
        string PCS_CH2_RX_POLARITY_INV = "DELAY",
        string PCS_CH2_ALIGN_MODE = "1GB",
        string PCS_CH2_SAMP_16B = "X16",
        int PCS_CH2_COMMA_REG0 = 0,
        int PCS_CH2_COMMA_MASK = 0,
        string PCS_CH2_CEB_MODE = "10GB",
        string PCS_CH2_CTC_MODE = "1SKIP",
        int PCS_CH2_A_REG = 0,
        string PCS_CH2_GE_AUTO_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PCS_CH2_SKIP_REG0 = 0,
        int PCS_CH2_SKIP_REG1 = 0,
        int PCS_CH2_SKIP_REG2 = 0,
        int PCS_CH2_SKIP_REG3 = 0,
        string PCS_CH2_DEC_DUAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_SPLIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_FIFOFLAG_CTC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_COMMA_DET_MODE = "COMMA_PATTERN",
        string PCS_CH2_ERRDETECT_SILENCE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_PMA_RCLK_POLINV = "PMA_RCLK",
        string PCS_CH2_PCS_RCLK_SEL = "PMA_RCLK",
        string PCS_CH2_MCB_RCLK_POLINV = "MCB_RCLK",
        string PCS_CH2_CB_RCLK_SEL = "PMA_RCLK",
        string PCS_CH2_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        string PCS_CH2_RCLK_POLINV = "RCLK",
        string PCS_CH2_BRIDGE_RCLK_SEL = "PMA_RCLK",
        string PCS_CH2_PCS_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_CB_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_AFTER_CTC_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_AFTER_CTC_RCLK_EN_GB = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_BRIDGE_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_PCS_RX_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_SLAVE = "MASTER",
        string PCS_CH2_PCIE_SLAVE = "MASTER",
        string PCS_CH2_PCS_CB_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_TX_BYPASS_BRIDGE_UINT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_TX_BYPASS_GEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_TX_BYPASS_ENC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_TX_BYPASS_BIT_SLIP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_TX_GEAR_SPLIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_TX_DRIVE_REG_MODE = "NO_CHANGE",
        int PCS_CH2_TX_BIT_SLIP_CYCLES = 0,
        string PCS_CH2_INT_TX_MASK_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_TX_MASK_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_TX_MASK_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_TX_CLR_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_TX_CLR_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_TX_CLR_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        string PCS_CH2_TX_PCS_CLK_EN_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_TX_BRIDGE_TCLK_SEL = "PCS_TCLK",
        string PCS_CH2_TX_TCLK_POLINV = "TCLK",
        string PCS_CH2_TX_PCS_TX_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_TX_SLAVE = "SLAVE",
        string PCS_CH2_TX_BRIDGE_CLK_EN_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_DATA_WIDTH_MODE = "X20",
        string PCS_CH2_TX_TCLK2FABRIC_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_TX_OUTZZ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_ENC_DUAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_TX_BITSLIP_DATA_MODE = "X10",
        int PCS_CH2_COMMA_REG1 = 0,
        int PCS_CH2_RAPID_IMAX = 0,
        int PCS_CH2_RAPID_VMIN_1 = 0,
        int PCS_CH2_RAPID_VMIN_2 = 0,
        string PCS_CH2_RX_PRBS_MODE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PCS_CH2_RX_ERRCNT_CLR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_TX_PRBS_MODE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PCS_CH2_TX_INSERT_ER = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_ENABLE_PRBS_GEN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PCS_CH2_ERR_CNT = 0,
        int PCS_CH2_DEFAULT_RADDR = 0,
        int PCS_CH2_MASTER_CHECK_OFFSET = 0,
        int PCS_CH2_DELAY_SET = 0,
        string PCS_CH2_SEACH_OFFSET = "20BIT",
        int PCS_CH2_CEB_RAPIDLS_MMAX = 0,
        int PCS_CH2_CTC_AFULL = 0,
        int PCS_CH2_CTC_AEMPTY = 0,
        int PCS_CH2_CTC_CONTI_SKP_SET = 0,
        string PCS_CH2_FAR_LOOP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_NEAR_LOOP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_MASK_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_MASK_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_MASK_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_MASK_3 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_MASK_4 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_MASK_5 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_MASK_6 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_MASK_7 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_CLR_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_CLR_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_CLR_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_CLR_3 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_CLR_4 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_CLR_5 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_CLR_6 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH2_INT_RX_CLR_7 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_BYPASS_WORD_ALIGN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_BYPASS_DENC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_BYPASS_BONDING = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_BYPASS_CTC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_BYPASS_GEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_BYPASS_BRIDGE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_DATA_MODE = "X8",
        string PCS_CH3_RX_POLARITY_INV = "DELAY",
        string PCS_CH3_ALIGN_MODE = "1GB",
        string PCS_CH3_SAMP_16B = "X16",
        int PCS_CH3_COMMA_REG0 = 0,
        int PCS_CH3_COMMA_MASK = 0,
        string PCS_CH3_CEB_MODE = "10GB",
        string PCS_CH3_CTC_MODE = "1SKIP",
        int PCS_CH3_A_REG = 0,
        string PCS_CH3_GE_AUTO_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PCS_CH3_SKIP_REG0 = 0,
        int PCS_CH3_SKIP_REG1 = 0,
        int PCS_CH3_SKIP_REG2 = 0,
        int PCS_CH3_SKIP_REG3 = 0,
        string PCS_CH3_DEC_DUAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_SPLIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_FIFOFLAG_CTC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_COMMA_DET_MODE = "COMMA_PATTERN",
        string PCS_CH3_ERRDETECT_SILENCE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_PMA_RCLK_POLINV = "PMA_RCLK",
        string PCS_CH3_PCS_RCLK_SEL = "PMA_RCLK",
        string PCS_CH3_MCB_RCLK_POLINV = "MCB_RCLK",
        string PCS_CH3_CB_RCLK_SEL = "PMA_RCLK",
        string PCS_CH3_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        string PCS_CH3_RCLK_POLINV = "RCLK",
        string PCS_CH3_BRIDGE_RCLK_SEL = "PMA_RCLK",
        string PCS_CH3_PCS_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_CB_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_AFTER_CTC_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_AFTER_CTC_RCLK_EN_GB = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_BRIDGE_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_PCS_RX_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_SLAVE = "MASTER",
        string PCS_CH3_PCIE_SLAVE = "MASTER",
        string PCS_CH3_PCS_CB_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_TX_BYPASS_BRIDGE_UINT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_TX_BYPASS_GEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_TX_BYPASS_ENC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_TX_BYPASS_BIT_SLIP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_TX_GEAR_SPLIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_TX_DRIVE_REG_MODE = "NO_CHANGE",
        int PCS_CH3_TX_BIT_SLIP_CYCLES = 0,
        string PCS_CH3_INT_TX_MASK_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_TX_MASK_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_TX_MASK_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_TX_CLR_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_TX_CLR_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_TX_CLR_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        string PCS_CH3_TX_PCS_CLK_EN_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_TX_BRIDGE_TCLK_SEL = "PCS_TCLK",
        string PCS_CH3_TX_TCLK_POLINV = "TCLK",
        string PCS_CH3_TX_PCS_TX_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_TX_SLAVE = "SLAVE",
        string PCS_CH3_TX_BRIDGE_CLK_EN_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_DATA_WIDTH_MODE = "X20",
        string PCS_CH3_TX_TCLK2FABRIC_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_TX_OUTZZ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_ENC_DUAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_TX_BITSLIP_DATA_MODE = "X10",
        int PCS_CH3_COMMA_REG1 = 0,
        int PCS_CH3_RAPID_IMAX = 0,
        int PCS_CH3_RAPID_VMIN_1 = 0,
        int PCS_CH3_RAPID_VMIN_2 = 0,
        string PCS_CH3_RX_PRBS_MODE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PCS_CH3_RX_ERRCNT_CLR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_TX_PRBS_MODE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PCS_CH3_TX_INSERT_ER = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_ENABLE_PRBS_GEN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PCS_CH3_ERR_CNT = 0,
        int PCS_CH3_DEFAULT_RADDR = 0,
        int PCS_CH3_MASTER_CHECK_OFFSET = 0,
        int PCS_CH3_DELAY_SET = 0,
        string PCS_CH3_SEACH_OFFSET = "20BIT",
        int PCS_CH3_CEB_RAPIDLS_MMAX = 0,
        int PCS_CH3_CTC_AFULL = 0,
        int PCS_CH3_CTC_AEMPTY = 0,
        int PCS_CH3_CTC_CONTI_SKP_SET = 0,
        string PCS_CH3_FAR_LOOP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_NEAR_LOOP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_MASK_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_MASK_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_MASK_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_MASK_3 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_MASK_4 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_MASK_5 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_MASK_6 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_MASK_7 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_CLR_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_CLR_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_CLR_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_CLR_3 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_CLR_4 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_CLR_5 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_CLR_6 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CH3_INT_RX_CLR_7 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_PD = "ON",
        string PMA_CH0_REG_RX_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_CLKPATH_PD = "ON",
        string PMA_CH0_REG_RX_CLKPATH_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_DATAPATH_PD = "ON",
        string PMA_CH0_REG_RX_DATAPATH_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_SIGDET_PD = "ON",
        string PMA_CH0_REG_RX_SIGDET_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_DCC_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_DCC_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_CDR_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_CDR_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_SIGDET_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_SIGDET_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RXPCLK_SLIP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RXPCLK_SLIP_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_RX_PCLKSWITCH_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_PCLKSWITCH_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_PCLKSWITCH = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_PCLKSWITCH_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_HIGHZ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_HIGHZ_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_RX_EQ_C_SET = 8,
        int PMA_CH0_REG_RX_EQ_R_SET = 8,
        string PMA_CH0_REG_RX_BUSWIDTH = "20BIT",
        string PMA_CH0_REG_RX_BUSWIDTH_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_RATE = "DIV1",
        string PMA_CH0_REG_RX_RATE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_RX_RES_TRIM = 51,
        string PMA_CH0_REG_RX_RES_TRIM_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_EQ_OFF = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_RX_PREAMP_IC = 1367,
        string PMA_CH0_REG_RX_PCLK_EDGE_SEL = "POS_EDGE",
        int PMA_CH0_REG_RX_PIBUF_IC = 2,
        int PMA_CH0_REG_RX_DCC_IC_RX = 3,
        int PMA_CH0_REG_RX_DCC_IC_TX = 3,
        string PMA_CH0_REG_RX_ICTRL_TRX = "100PCT",
        int PMA_CH0_REG_RX_ICTRL_SIGDET = 5,
        string PMA_CH0_REG_RX_ICTRL_PREAMP = "100PCT",
        string PMA_CH0_REG_RX_ICTRL_SLICER = "100PCT",
        string PMA_CH0_REG_RX_ICTRL_PIBUF = "100PCT",
        string PMA_CH0_REG_RX_ICTRL_PI = "100PCT",
        string PMA_CH0_REG_RX_ICTRL_DCC = "100PCT",
        string PMA_CH0_REG_RX_ICTRL_PREDRV = "100PCT",
        string PMA_CH0_REG_TX_RATE = "DIV1",
        string PMA_CH0_REG_TX_RATE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_TX2RX_PLPBK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_TXCLK_SEL = "PLL",
        string PMA_CH0_REG_RX_DATA_POLARITY = "NORMAL",
        string PMA_CH0_REG_RX_ERR_INSERT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_UDP_CHK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_PRBS_SEL = "PRBS7",
        string PMA_CH0_REG_PRBS_CHK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_PRBS_CHK_WIDTH_SEL = "20BIT",
        string PMA_CH0_REG_BIST_CHK_PAT_SEL = "PRBS",
        string PMA_CH0_REG_LOAD_ERR_CNT = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_CHK_COUNTER_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_CDR_PROP_GAIN = 2,
        int PMA_CH0_REG_CDR_PROP_TURBO_GAIN = 6,
        int PMA_CH0_REG_CDR_INT_GAIN = 2,
        int PMA_CH0_REG_CDR_INT_TURBO_GAIN = 6,
        int PMA_CH0_REG_CDR_INT_SAT_MAX = 992,
        int PMA_CH0_REG_CDR_INT_SAT_MIN = 32,
        string PMA_CH0_REG_CDR_INT_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_CDR_INT_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_CDR_PROP_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_CDR_PROP_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_CDR_LOCK_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_CDR_LOCK_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH0_REG_CDR_RX_PI_FORCE_SEL = 0,
        int PMA_CH0_REG_CDR_RX_PI_FORCE_D = 0,
        string PMA_CH0_REG_CDR_LOCK_TIMER = "1_2U",
        int PMA_CH0_REG_CDR_TURBO_MODE_TIMER = 1,
        string PMA_CH0_REG_CDR_LOCK_VAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_CDR_LOCK_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_CDR_INT_SAT_DET_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_CDR_SAT_DET_STATUS_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_CDR_SAT_DET_STATUS_RESET_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_CDR_PI_CTRL_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_CDR_PI_CTRL_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_CDR_SAT_DET_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_CDR_SAT_DET_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_CDR_SAT_DET_STICKY_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_CDR_SIGDET_STATUS_DIS = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_CDR_SAT_DET_TIMER = 2,
        string PMA_CH0_REG_CDR_SAT_DET_STATUS_VAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_CDR_SAT_DET_STATUS_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_CDR_TURBO_MODE_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_CDR_STATUS_RADDR_INIT = 0,
        string PMA_CH0_REG_CDR_STATUS_FIFO_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_PMA_TEST_SEL = 0,
        int PMA_CH0_REG_OOB_COMWAKE_GAP_MIN = 3,
        int PMA_CH0_REG_OOB_COMWAKE_GAP_MAX = 11,
        int PMA_CH0_REG_OOB_COMINIT_GAP_MIN = 15,
        int PMA_CH0_REG_OOB_COMINIT_GAP_MAX = 35,
        int PMA_CH0_REG_RX_PIBUF_IC_TX = 1,
        int PMA_CH0_REG_COMWAKE_STATUS_CLEAR = 0,
        int PMA_CH0_REG_COMINIT_STATUS_CLEAR = 0,
        string PMA_CH0_REG_RX_SYNC_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_SYNC_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_SATA_COMINIT_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_RX_SATA_COMINIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_SATA_COMWAKE_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_RX_SATA_COMWAKE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_DCC_DISABLE = "ENABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_DCC_DISABLE = "ENABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_RX_SLIP_SEL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_RX_SLIP_SEL = 0,
        string PMA_CH0_REG_RX_SLIP_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_RX_SIGDET_STATUS_SEL = 5,
        string PMA_CH0_REG_RX_SIGDET_FSM_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_SIGDET_STATUS_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_RX_SIGDET_STATUS = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_SIGDET_VTH = "50MV",
        int PMA_CH0_REG_RX_SIGDET_GRM = 0,
        string PMA_CH0_REG_RX_SIGDET_PULSE_EXT = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH0_REG_RX_SIGDET_CH2_SEL = 0,
        int PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW = 3,
        string PMA_CH0_REG_RX_SIGDET_CHK_WINDOW_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_RX_SIGDET_NOSIG_COUNT_SETTING = 4,
        int PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL = 0,
        string PMA_CH0_REG_SLIP_FIFO_INV_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_SLIP_FIFO_INV = "POS_EDGE",
        int PMA_CH0_REG_RX_SIGDET_4OOB_DET_SEL = 7,
        int PMA_CH0_REG_RX_SIGDET_IC_I = 10,
        string PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_OOB_DETECTOR_PD_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_RX_OOB_DETECTOR_PD = "ON",
        string PMA_CH0_REG_RX_TERM_CM_CTRL = "5DIV7",
        string PMA_CH0_REG_TX_PD = "ON",
        string PMA_CH0_REG_TX_PD_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_CLKPATH_PD = "ON",
        string PMA_CH0_REG_TX_CLKPATH_PD_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH0_REG_TX_BEACON_TIMER_SEL = 0,
        string PMA_CH0_REG_TX_RXDET_REQ_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_RXDET_REQ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_TX_BEACON_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_BEACON_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_TX_EI_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_EI_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_TX_RES_CAL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_TX_RES_CAL = 51,
        string PMA_CH0_REG_TX_BIAS_CAL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_TX_BIAS_CTRL = 48,
        string PMA_CH0_REG_TX_RXDET_TIMER_SEL = "12CYCLE",
        string PMA_CH0_REG_TX_SYNC_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_SYNC = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_PD_POST = "OFF",
        string PMA_CH0_REG_TX_PD_POST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_RESET_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_TX_DCC_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_DCC_RESET_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_TX_BUSWIDTH_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_BUSWIDTH = "20BIT",
        string PMA_CH0_REG_PLL_READY_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_PLL_READY = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_TX_PCLK_SW_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_PCLK_SW = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_EI_PCLK_DELAY_SEL = 0,
        int PMA_CH0_REG_TX_DRV01_DAC0 = 0,
        int PMA_CH0_REG_TX_DRV01_DAC1 = 10,
        int PMA_CH0_REG_TX_DRV01_DAC2 = 16,
        int PMA_CH0_REG_TX_DRV00_DAC0 = 63,
        int PMA_CH0_REG_TX_DRV00_DAC1 = 53,
        int PMA_CH0_REG_TX_DRV00_DAC2 = 48,
        int PMA_CH0_REG_TX_AMP0 = 8,
        int PMA_CH0_REG_TX_AMP1 = 16,
        int PMA_CH0_REG_TX_AMP2 = 32,
        int PMA_CH0_REG_TX_AMP3 = 48,
        int PMA_CH0_REG_TX_AMP4 = 56,
        int PMA_CH0_REG_TX_MARGIN = 0,
        string PMA_CH0_REG_TX_MARGIN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH0_REG_TX_DEEMP = 0,
        string PMA_CH0_REG_TX_DEEMP_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_SWING = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_TX_SWING_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_RXDET_THRESHOLD = "100MV",
        int PMA_CH0_REG_TX_BEACON_OSC_CTRL = 4,
        int PMA_CH0_REG_TX_PREDRV_DAC = 1,
        int PMA_CH0_REG_TX_PREDRV_CM_CTRL = 1,
        string PMA_CH0_REG_TX_TX2RX_SLPBACK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_TX_PCLK_EDGE_SEL = "POS_EDGE",
        string PMA_CH0_REG_TX_RXDET_STATUS_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_RXDET_STATUS = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_TX_PRBS_GEN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL = "20BIT",
        string PMA_CH0_REG_TX_PRBS_SEL = "PRBS7",
        int PMA_CH0_REG_TX_UDP_DATA = 256773,
        string PMA_CH0_REG_TX_FIFO_RST_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_TX_FIFO_WP_CTRL = 2,
        string PMA_CH0_REG_TX_FIFO_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_TX_DATA_MUX_SEL = 2,
        string PMA_CH0_REG_TX_ERR_INSERT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_TX_SATA_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON = "ENABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH0_REG_TX_PULLUP_DAC0 = 8,
        int PMA_CH0_REG_TX_PULLUP_DAC1 = 8,
        int PMA_CH0_REG_TX_PULLUP_DAC2 = 8,
        int PMA_CH0_REG_TX_PULLUP_DAC3 = 8,
        int PMA_CH0_REG_TX_OOB_DELAY_SEL = 0,
        string PMA_CH0_REG_TX_POLARITY = "NORMAL",
        int PMA_CH0_REG_TX_SLPBK_AMP = 1,
        string PMA_CH0_REG_TX_LS_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_TX_JTAG_MODE_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_TX_JTAG_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_JTAG_MODE_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH0_REG_RX_JTAG_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_REG_RX_JTAG_OE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH0_REG_RX_ACJTAG_VHYSTSE = 0,
        string PMA_CH0_REG_TX_FBCLK_FAR_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_RX_TERM_MODE_CTRL = 6,
        string PMA_CH0_REG_PLPBK_TXPCLK_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_CFG_LANE_POWERUP = "OFF",
        string PMA_CH0_CFG_PMA_POR_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_CFG_RX_LANE_POWERUP = "OFF",
        string PMA_CH0_CFG_RX_PMA_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH0_CFG_TX_LANE_POWERUP = "OFF",
        string PMA_CH0_CFG_TX_PMA_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH0_REG_RESERVED_48_45 = 0,
        int PMA_CH0_REG_RESERVED_69 = 0,
        int PMA_CH0_REG_RESERVED_77_76 = 0,
        int PMA_CH0_REG_RESERVED_171_164 = 0,
        int PMA_CH0_REG_RESERVED_175_172 = 0,
        int PMA_CH0_REG_RESERVED_190 = 0,
        int PMA_CH0_REG_RESERVED_233_232 = 0,
        int PMA_CH0_REG_RESERVED_235_234 = 0,
        int PMA_CH0_REG_RESERVED_241_240 = 0,
        int PMA_CH0_REG_RESERVED_285_283 = 0,
        int PMA_CH0_REG_RESERVED_286 = 0,
        int PMA_CH0_REG_RESERVED_295 = 0,
        int PMA_CH0_REG_RESERVED_298 = 0,
        int PMA_CH0_REG_RESERVED_332_325 = 0,
        int PMA_CH0_REG_RESERVED_340_333 = 0,
        int PMA_CH0_REG_RESERVED_348_341 = 0,
        int PMA_CH0_REG_RESERVED_354_349 = 0,
        int PMA_CH0_REG_RESERVED_373 = 0,
        int PMA_CH0_REG_RESERVED_376 = 0,
        int PMA_CH0_REG_RESERVED_452 = 0,
        int PMA_CH0_REG_RESERVED_502_499 = 0,
        int PMA_CH0_REG_RESERVED_506_505 = 0,
        int PMA_CH0_REG_RESERVED_550_549 = 0,
        int PMA_CH0_REG_RESERVED_556_552 = 0,
        string PMA_CH1_REG_RX_PD = "ON",
        string PMA_CH1_REG_RX_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_CLKPATH_PD = "ON",
        string PMA_CH1_REG_RX_CLKPATH_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_DATAPATH_PD = "ON",
        string PMA_CH1_REG_RX_DATAPATH_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_SIGDET_PD = "ON",
        string PMA_CH1_REG_RX_SIGDET_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_DCC_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_DCC_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_CDR_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_CDR_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_SIGDET_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_SIGDET_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RXPCLK_SLIP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RXPCLK_SLIP_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_RX_PCLKSWITCH_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_PCLKSWITCH_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_PCLKSWITCH = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_PCLKSWITCH_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_HIGHZ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_HIGHZ_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_RX_EQ_C_SET = 8,
        int PMA_CH1_REG_RX_EQ_R_SET = 8,
        string PMA_CH1_REG_RX_BUSWIDTH = "20BIT",
        string PMA_CH1_REG_RX_BUSWIDTH_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_RATE = "DIV1",
        string PMA_CH1_REG_RX_RATE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_RX_RES_TRIM = 51,
        string PMA_CH1_REG_RX_RES_TRIM_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_EQ_OFF = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_RX_PREAMP_IC = 1367,
        string PMA_CH1_REG_RX_PCLK_EDGE_SEL = "POS_EDGE",
        int PMA_CH1_REG_RX_PIBUF_IC = 2,
        int PMA_CH1_REG_RX_DCC_IC_RX = 3,
        int PMA_CH1_REG_RX_DCC_IC_TX = 3,
        string PMA_CH1_REG_RX_ICTRL_TRX = "100PCT",
        int PMA_CH1_REG_RX_ICTRL_SIGDET = 5,
        string PMA_CH1_REG_RX_ICTRL_PREAMP = "100PCT",
        string PMA_CH1_REG_RX_ICTRL_SLICER = "100PCT",
        string PMA_CH1_REG_RX_ICTRL_PIBUF = "100PCT",
        string PMA_CH1_REG_RX_ICTRL_PI = "100PCT",
        string PMA_CH1_REG_RX_ICTRL_DCC = "100PCT",
        string PMA_CH1_REG_RX_ICTRL_PREDRV = "100PCT",
        string PMA_CH1_REG_TX_RATE = "DIV1",
        string PMA_CH1_REG_TX_RATE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_TX2RX_PLPBK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_TXCLK_SEL = "PLL",
        string PMA_CH1_REG_RX_DATA_POLARITY = "NORMAL",
        string PMA_CH1_REG_RX_ERR_INSERT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_UDP_CHK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_PRBS_SEL = "PRBS7",
        string PMA_CH1_REG_PRBS_CHK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_PRBS_CHK_WIDTH_SEL = "20BIT",
        string PMA_CH1_REG_BIST_CHK_PAT_SEL = "PRBS",
        string PMA_CH1_REG_LOAD_ERR_CNT = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_CHK_COUNTER_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_CDR_PROP_GAIN = 2,
        int PMA_CH1_REG_CDR_PROP_TURBO_GAIN = 6,
        int PMA_CH1_REG_CDR_INT_GAIN = 2,
        int PMA_CH1_REG_CDR_INT_TURBO_GAIN = 6,
        int PMA_CH1_REG_CDR_INT_SAT_MAX = 992,
        int PMA_CH1_REG_CDR_INT_SAT_MIN = 32,
        string PMA_CH1_REG_CDR_INT_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_CDR_INT_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_CDR_PROP_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_CDR_PROP_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_CDR_LOCK_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_CDR_LOCK_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH1_REG_CDR_RX_PI_FORCE_SEL = 0,
        int PMA_CH1_REG_CDR_RX_PI_FORCE_D = 0,
        string PMA_CH1_REG_CDR_LOCK_TIMER = "1_2U",
        int PMA_CH1_REG_CDR_TURBO_MODE_TIMER = 1,
        string PMA_CH1_REG_CDR_LOCK_VAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_CDR_LOCK_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_CDR_INT_SAT_DET_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_CDR_SAT_DET_STATUS_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_CDR_SAT_DET_STATUS_RESET_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_CDR_PI_CTRL_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_CDR_PI_CTRL_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_CDR_SAT_DET_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_CDR_SAT_DET_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_CDR_SAT_DET_STICKY_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_CDR_SIGDET_STATUS_DIS = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_CDR_SAT_DET_TIMER = 2,
        string PMA_CH1_REG_CDR_SAT_DET_STATUS_VAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_CDR_SAT_DET_STATUS_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_CDR_TURBO_MODE_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_CDR_STATUS_RADDR_INIT = 0,
        string PMA_CH1_REG_CDR_STATUS_FIFO_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_PMA_TEST_SEL = 0,
        int PMA_CH1_REG_OOB_COMWAKE_GAP_MIN = 3,
        int PMA_CH1_REG_OOB_COMWAKE_GAP_MAX = 11,
        int PMA_CH1_REG_OOB_COMINIT_GAP_MIN = 15,
        int PMA_CH1_REG_OOB_COMINIT_GAP_MAX = 35,
        int PMA_CH1_REG_RX_PIBUF_IC_TX = 1,
        int PMA_CH1_REG_COMWAKE_STATUS_CLEAR = 0,
        int PMA_CH1_REG_COMINIT_STATUS_CLEAR = 0,
        string PMA_CH1_REG_RX_SYNC_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_SYNC_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_SATA_COMINIT_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_RX_SATA_COMINIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_SATA_COMWAKE_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_RX_SATA_COMWAKE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_DCC_DISABLE = "ENABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_DCC_DISABLE = "ENABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_RX_SLIP_SEL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_RX_SLIP_SEL = 0,
        string PMA_CH1_REG_RX_SLIP_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_RX_SIGDET_STATUS_SEL = 5,
        string PMA_CH1_REG_RX_SIGDET_FSM_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_SIGDET_STATUS_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_RX_SIGDET_STATUS = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_SIGDET_VTH = "50MV",
        int PMA_CH1_REG_RX_SIGDET_GRM = 0,
        string PMA_CH1_REG_RX_SIGDET_PULSE_EXT = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH1_REG_RX_SIGDET_CH2_SEL = 0,
        int PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW = 3,
        string PMA_CH1_REG_RX_SIGDET_CHK_WINDOW_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_RX_SIGDET_NOSIG_COUNT_SETTING = 4,
        int PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL = 0,
        string PMA_CH1_REG_SLIP_FIFO_INV_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_SLIP_FIFO_INV = "POS_EDGE",
        int PMA_CH1_REG_RX_SIGDET_4OOB_DET_SEL = 7,
        int PMA_CH1_REG_RX_SIGDET_IC_I = 10,
        string PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_OOB_DETECTOR_PD_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_RX_OOB_DETECTOR_PD = "ON",
        string PMA_CH1_REG_RX_TERM_CM_CTRL = "5DIV7",
        string PMA_CH1_REG_TX_PD = "ON",
        string PMA_CH1_REG_TX_PD_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_CLKPATH_PD = "ON",
        string PMA_CH1_REG_TX_CLKPATH_PD_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH1_REG_TX_BEACON_TIMER_SEL = 0,
        string PMA_CH1_REG_TX_RXDET_REQ_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_RXDET_REQ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_TX_BEACON_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_BEACON_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_TX_EI_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_EI_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_TX_RES_CAL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_TX_RES_CAL = 51,
        string PMA_CH1_REG_TX_BIAS_CAL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_TX_BIAS_CTRL = 48,
        string PMA_CH1_REG_TX_RXDET_TIMER_SEL = "12CYCLE",
        string PMA_CH1_REG_TX_SYNC_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_SYNC = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_PD_POST = "OFF",
        string PMA_CH1_REG_TX_PD_POST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_RESET_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_TX_DCC_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_DCC_RESET_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_TX_BUSWIDTH_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_BUSWIDTH = "20BIT",
        string PMA_CH1_REG_PLL_READY_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_PLL_READY = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_TX_PCLK_SW_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_PCLK_SW = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_EI_PCLK_DELAY_SEL = 0,
        int PMA_CH1_REG_TX_DRV01_DAC0 = 0,
        int PMA_CH1_REG_TX_DRV01_DAC1 = 10,
        int PMA_CH1_REG_TX_DRV01_DAC2 = 16,
        int PMA_CH1_REG_TX_DRV00_DAC0 = 63,
        int PMA_CH1_REG_TX_DRV00_DAC1 = 53,
        int PMA_CH1_REG_TX_DRV00_DAC2 = 48,
        int PMA_CH1_REG_TX_AMP0 = 8,
        int PMA_CH1_REG_TX_AMP1 = 16,
        int PMA_CH1_REG_TX_AMP2 = 32,
        int PMA_CH1_REG_TX_AMP3 = 48,
        int PMA_CH1_REG_TX_AMP4 = 56,
        int PMA_CH1_REG_TX_MARGIN = 0,
        string PMA_CH1_REG_TX_MARGIN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH1_REG_TX_DEEMP = 0,
        string PMA_CH1_REG_TX_DEEMP_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_SWING = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_TX_SWING_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_RXDET_THRESHOLD = "100MV",
        int PMA_CH1_REG_TX_BEACON_OSC_CTRL = 4,
        int PMA_CH1_REG_TX_PREDRV_DAC = 1,
        int PMA_CH1_REG_TX_PREDRV_CM_CTRL = 1,
        string PMA_CH1_REG_TX_TX2RX_SLPBACK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_TX_PCLK_EDGE_SEL = "POS_EDGE",
        string PMA_CH1_REG_TX_RXDET_STATUS_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_RXDET_STATUS = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_TX_PRBS_GEN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL = "20BIT",
        string PMA_CH1_REG_TX_PRBS_SEL = "PRBS7",
        int PMA_CH1_REG_TX_UDP_DATA = 256773,
        string PMA_CH1_REG_TX_FIFO_RST_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_TX_FIFO_WP_CTRL = 2,
        string PMA_CH1_REG_TX_FIFO_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_TX_DATA_MUX_SEL = 2,
        string PMA_CH1_REG_TX_ERR_INSERT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_TX_SATA_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON = "ENABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH1_REG_TX_PULLUP_DAC0 = 8,
        int PMA_CH1_REG_TX_PULLUP_DAC1 = 8,
        int PMA_CH1_REG_TX_PULLUP_DAC2 = 8,
        int PMA_CH1_REG_TX_PULLUP_DAC3 = 8,
        int PMA_CH1_REG_TX_OOB_DELAY_SEL = 0,
        string PMA_CH1_REG_TX_POLARITY = "NORMAL",
        int PMA_CH1_REG_TX_SLPBK_AMP = 1,
        string PMA_CH1_REG_TX_LS_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_TX_JTAG_MODE_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_TX_JTAG_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_JTAG_MODE_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH1_REG_RX_JTAG_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_REG_RX_JTAG_OE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH1_REG_RX_ACJTAG_VHYSTSE = 0,
        string PMA_CH1_REG_TX_FBCLK_FAR_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_RX_TERM_MODE_CTRL = 6,
        string PMA_CH1_REG_PLPBK_TXPCLK_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_CFG_LANE_POWERUP = "OFF",
        string PMA_CH1_CFG_PMA_POR_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_CFG_RX_LANE_POWERUP = "OFF",
        string PMA_CH1_CFG_RX_PMA_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH1_CFG_TX_LANE_POWERUP = "OFF",
        string PMA_CH1_CFG_TX_PMA_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH1_REG_RESERVED_48_45 = 0,
        int PMA_CH1_REG_RESERVED_69 = 0,
        int PMA_CH1_REG_RESERVED_77_76 = 0,
        int PMA_CH1_REG_RESERVED_171_164 = 0,
        int PMA_CH1_REG_RESERVED_175_172 = 0,
        int PMA_CH1_REG_RESERVED_190 = 0,
        int PMA_CH1_REG_RESERVED_233_232 = 0,
        int PMA_CH1_REG_RESERVED_235_234 = 0,
        int PMA_CH1_REG_RESERVED_241_240 = 0,
        int PMA_CH1_REG_RESERVED_285_283 = 0,
        int PMA_CH1_REG_RESERVED_286 = 0,
        int PMA_CH1_REG_RESERVED_295 = 0,
        int PMA_CH1_REG_RESERVED_298 = 0,
        int PMA_CH1_REG_RESERVED_332_325 = 0,
        int PMA_CH1_REG_RESERVED_340_333 = 0,
        int PMA_CH1_REG_RESERVED_348_341 = 0,
        int PMA_CH1_REG_RESERVED_354_349 = 0,
        int PMA_CH1_REG_RESERVED_373 = 0,
        int PMA_CH1_REG_RESERVED_376 = 0,
        int PMA_CH1_REG_RESERVED_452 = 0,
        int PMA_CH1_REG_RESERVED_502_499 = 0,
        int PMA_CH1_REG_RESERVED_506_505 = 0,
        int PMA_CH1_REG_RESERVED_550_549 = 0,
        int PMA_CH1_REG_RESERVED_556_552 = 0,
        string PMA_CH2_REG_RX_PD = "ON",
        string PMA_CH2_REG_RX_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_CLKPATH_PD = "ON",
        string PMA_CH2_REG_RX_CLKPATH_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_DATAPATH_PD = "ON",
        string PMA_CH2_REG_RX_DATAPATH_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_SIGDET_PD = "ON",
        string PMA_CH2_REG_RX_SIGDET_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_DCC_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_DCC_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_CDR_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_CDR_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_SIGDET_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_SIGDET_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RXPCLK_SLIP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RXPCLK_SLIP_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_RX_PCLKSWITCH_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_PCLKSWITCH_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_PCLKSWITCH = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_PCLKSWITCH_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_HIGHZ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_HIGHZ_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_RX_EQ_C_SET = 8,
        int PMA_CH2_REG_RX_EQ_R_SET = 8,
        string PMA_CH2_REG_RX_BUSWIDTH = "20BIT",
        string PMA_CH2_REG_RX_BUSWIDTH_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_RATE = "DIV1",
        string PMA_CH2_REG_RX_RATE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_RX_RES_TRIM = 51,
        string PMA_CH2_REG_RX_RES_TRIM_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_EQ_OFF = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_RX_PREAMP_IC = 1367,
        string PMA_CH2_REG_RX_PCLK_EDGE_SEL = "POS_EDGE",
        int PMA_CH2_REG_RX_PIBUF_IC = 2,
        int PMA_CH2_REG_RX_DCC_IC_RX = 3,
        int PMA_CH2_REG_RX_DCC_IC_TX = 3,
        string PMA_CH2_REG_RX_ICTRL_TRX = "100PCT",
        int PMA_CH2_REG_RX_ICTRL_SIGDET = 5,
        string PMA_CH2_REG_RX_ICTRL_PREAMP = "100PCT",
        string PMA_CH2_REG_RX_ICTRL_SLICER = "100PCT",
        string PMA_CH2_REG_RX_ICTRL_PIBUF = "100PCT",
        string PMA_CH2_REG_RX_ICTRL_PI = "100PCT",
        string PMA_CH2_REG_RX_ICTRL_DCC = "100PCT",
        string PMA_CH2_REG_RX_ICTRL_PREDRV = "100PCT",
        string PMA_CH2_REG_TX_RATE = "DIV1",
        string PMA_CH2_REG_TX_RATE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_TX2RX_PLPBK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_TXCLK_SEL = "PLL",
        string PMA_CH2_REG_RX_DATA_POLARITY = "NORMAL",
        string PMA_CH2_REG_RX_ERR_INSERT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_UDP_CHK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_PRBS_SEL = "PRBS7",
        string PMA_CH2_REG_PRBS_CHK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_PRBS_CHK_WIDTH_SEL = "20BIT",
        string PMA_CH2_REG_BIST_CHK_PAT_SEL = "PRBS",
        string PMA_CH2_REG_LOAD_ERR_CNT = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_CHK_COUNTER_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_CDR_PROP_GAIN = 2,
        int PMA_CH2_REG_CDR_PROP_TURBO_GAIN = 6,
        int PMA_CH2_REG_CDR_INT_GAIN = 2,
        int PMA_CH2_REG_CDR_INT_TURBO_GAIN = 6,
        int PMA_CH2_REG_CDR_INT_SAT_MAX = 992,
        int PMA_CH2_REG_CDR_INT_SAT_MIN = 32,
        string PMA_CH2_REG_CDR_INT_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_CDR_INT_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_CDR_PROP_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_CDR_PROP_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_CDR_LOCK_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_CDR_LOCK_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH2_REG_CDR_RX_PI_FORCE_SEL = 0,
        int PMA_CH2_REG_CDR_RX_PI_FORCE_D = 0,
        string PMA_CH2_REG_CDR_LOCK_TIMER = "1_2U",
        int PMA_CH2_REG_CDR_TURBO_MODE_TIMER = 1,
        string PMA_CH2_REG_CDR_LOCK_VAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_CDR_LOCK_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_CDR_INT_SAT_DET_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_CDR_SAT_DET_STATUS_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_CDR_SAT_DET_STATUS_RESET_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_CDR_PI_CTRL_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_CDR_PI_CTRL_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_CDR_SAT_DET_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_CDR_SAT_DET_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_CDR_SAT_DET_STICKY_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_CDR_SIGDET_STATUS_DIS = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_CDR_SAT_DET_TIMER = 2,
        string PMA_CH2_REG_CDR_SAT_DET_STATUS_VAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_CDR_SAT_DET_STATUS_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_CDR_TURBO_MODE_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_CDR_STATUS_RADDR_INIT = 0,
        string PMA_CH2_REG_CDR_STATUS_FIFO_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_PMA_TEST_SEL = 0,
        int PMA_CH2_REG_OOB_COMWAKE_GAP_MIN = 3,
        int PMA_CH2_REG_OOB_COMWAKE_GAP_MAX = 11,
        int PMA_CH2_REG_OOB_COMINIT_GAP_MIN = 15,
        int PMA_CH2_REG_OOB_COMINIT_GAP_MAX = 35,
        int PMA_CH2_REG_RX_PIBUF_IC_TX = 1,
        int PMA_CH2_REG_COMWAKE_STATUS_CLEAR = 0,
        int PMA_CH2_REG_COMINIT_STATUS_CLEAR = 0,
        string PMA_CH2_REG_RX_SYNC_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_SYNC_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_SATA_COMINIT_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_RX_SATA_COMINIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_SATA_COMWAKE_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_RX_SATA_COMWAKE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_DCC_DISABLE = "ENABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_DCC_DISABLE = "ENABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_RX_SLIP_SEL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_RX_SLIP_SEL = 0,
        string PMA_CH2_REG_RX_SLIP_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_RX_SIGDET_STATUS_SEL = 5,
        string PMA_CH2_REG_RX_SIGDET_FSM_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_SIGDET_STATUS_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_RX_SIGDET_STATUS = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_SIGDET_VTH = "50MV",
        int PMA_CH2_REG_RX_SIGDET_GRM = 0,
        string PMA_CH2_REG_RX_SIGDET_PULSE_EXT = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH2_REG_RX_SIGDET_CH2_SEL = 0,
        int PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW = 3,
        string PMA_CH2_REG_RX_SIGDET_CHK_WINDOW_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_RX_SIGDET_NOSIG_COUNT_SETTING = 4,
        int PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL = 0,
        string PMA_CH2_REG_SLIP_FIFO_INV_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_SLIP_FIFO_INV = "POS_EDGE",
        int PMA_CH2_REG_RX_SIGDET_4OOB_DET_SEL = 7,
        int PMA_CH2_REG_RX_SIGDET_IC_I = 10,
        string PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_OOB_DETECTOR_PD_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_RX_OOB_DETECTOR_PD = "ON",
        string PMA_CH2_REG_RX_TERM_CM_CTRL = "5DIV7",
        string PMA_CH2_REG_TX_PD = "ON",
        string PMA_CH2_REG_TX_PD_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_CLKPATH_PD = "ON",
        string PMA_CH2_REG_TX_CLKPATH_PD_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH2_REG_TX_BEACON_TIMER_SEL = 0,
        string PMA_CH2_REG_TX_RXDET_REQ_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_RXDET_REQ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_TX_BEACON_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_BEACON_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_TX_EI_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_EI_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_TX_RES_CAL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_TX_RES_CAL = 51,
        string PMA_CH2_REG_TX_BIAS_CAL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_TX_BIAS_CTRL = 48,
        string PMA_CH2_REG_TX_RXDET_TIMER_SEL = "12CYCLE",
        string PMA_CH2_REG_TX_SYNC_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_SYNC = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_PD_POST = "OFF",
        string PMA_CH2_REG_TX_PD_POST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_RESET_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_TX_DCC_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_DCC_RESET_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_TX_BUSWIDTH_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_BUSWIDTH = "20BIT",
        string PMA_CH2_REG_PLL_READY_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_PLL_READY = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_TX_PCLK_SW_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_PCLK_SW = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_EI_PCLK_DELAY_SEL = 0,
        int PMA_CH2_REG_TX_DRV01_DAC0 = 0,
        int PMA_CH2_REG_TX_DRV01_DAC1 = 10,
        int PMA_CH2_REG_TX_DRV01_DAC2 = 16,
        int PMA_CH2_REG_TX_DRV00_DAC0 = 63,
        int PMA_CH2_REG_TX_DRV00_DAC1 = 53,
        int PMA_CH2_REG_TX_DRV00_DAC2 = 48,
        int PMA_CH2_REG_TX_AMP0 = 8,
        int PMA_CH2_REG_TX_AMP1 = 16,
        int PMA_CH2_REG_TX_AMP2 = 32,
        int PMA_CH2_REG_TX_AMP3 = 48,
        int PMA_CH2_REG_TX_AMP4 = 56,
        int PMA_CH2_REG_TX_MARGIN = 0,
        string PMA_CH2_REG_TX_MARGIN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH2_REG_TX_DEEMP = 0,
        string PMA_CH2_REG_TX_DEEMP_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_SWING = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_TX_SWING_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_RXDET_THRESHOLD = "100MV",
        int PMA_CH2_REG_TX_BEACON_OSC_CTRL = 4,
        int PMA_CH2_REG_TX_PREDRV_DAC = 1,
        int PMA_CH2_REG_TX_PREDRV_CM_CTRL = 1,
        string PMA_CH2_REG_TX_TX2RX_SLPBACK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_TX_PCLK_EDGE_SEL = "POS_EDGE",
        string PMA_CH2_REG_TX_RXDET_STATUS_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_RXDET_STATUS = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_TX_PRBS_GEN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL = "20BIT",
        string PMA_CH2_REG_TX_PRBS_SEL = "PRBS7",
        int PMA_CH2_REG_TX_UDP_DATA = 256773,
        string PMA_CH2_REG_TX_FIFO_RST_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_TX_FIFO_WP_CTRL = 2,
        string PMA_CH2_REG_TX_FIFO_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_TX_DATA_MUX_SEL = 2,
        string PMA_CH2_REG_TX_ERR_INSERT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_TX_SATA_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON = "ENABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH2_REG_TX_PULLUP_DAC0 = 8,
        int PMA_CH2_REG_TX_PULLUP_DAC1 = 8,
        int PMA_CH2_REG_TX_PULLUP_DAC2 = 8,
        int PMA_CH2_REG_TX_PULLUP_DAC3 = 8,
        int PMA_CH2_REG_TX_OOB_DELAY_SEL = 0,
        string PMA_CH2_REG_TX_POLARITY = "NORMAL",
        int PMA_CH2_REG_TX_SLPBK_AMP = 1,
        string PMA_CH2_REG_TX_LS_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_TX_JTAG_MODE_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_TX_JTAG_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_JTAG_MODE_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH2_REG_RX_JTAG_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_REG_RX_JTAG_OE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH2_REG_RX_ACJTAG_VHYSTSE = 0,
        string PMA_CH2_REG_TX_FBCLK_FAR_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_RX_TERM_MODE_CTRL = 6,
        string PMA_CH2_REG_PLPBK_TXPCLK_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_CFG_LANE_POWERUP = "OFF",
        string PMA_CH2_CFG_PMA_POR_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_CFG_RX_LANE_POWERUP = "OFF",
        string PMA_CH2_CFG_RX_PMA_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH2_CFG_TX_LANE_POWERUP = "OFF",
        string PMA_CH2_CFG_TX_PMA_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH2_REG_RESERVED_48_45 = 0,
        int PMA_CH2_REG_RESERVED_69 = 0,
        int PMA_CH2_REG_RESERVED_77_76 = 0,
        int PMA_CH2_REG_RESERVED_171_164 = 0,
        int PMA_CH2_REG_RESERVED_175_172 = 0,
        int PMA_CH2_REG_RESERVED_190 = 0,
        int PMA_CH2_REG_RESERVED_233_232 = 0,
        int PMA_CH2_REG_RESERVED_235_234 = 0,
        int PMA_CH2_REG_RESERVED_241_240 = 0,
        int PMA_CH2_REG_RESERVED_285_283 = 0,
        int PMA_CH2_REG_RESERVED_286 = 0,
        int PMA_CH2_REG_RESERVED_295 = 0,
        int PMA_CH2_REG_RESERVED_298 = 0,
        int PMA_CH2_REG_RESERVED_332_325 = 0,
        int PMA_CH2_REG_RESERVED_340_333 = 0,
        int PMA_CH2_REG_RESERVED_348_341 = 0,
        int PMA_CH2_REG_RESERVED_354_349 = 0,
        int PMA_CH2_REG_RESERVED_373 = 0,
        int PMA_CH2_REG_RESERVED_376 = 0,
        int PMA_CH2_REG_RESERVED_452 = 0,
        int PMA_CH2_REG_RESERVED_502_499 = 0,
        int PMA_CH2_REG_RESERVED_506_505 = 0,
        int PMA_CH2_REG_RESERVED_550_549 = 0,
        int PMA_CH2_REG_RESERVED_556_552 = 0,
        string PMA_CH3_REG_RX_PD = "ON",
        string PMA_CH3_REG_RX_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_CLKPATH_PD = "ON",
        string PMA_CH3_REG_RX_CLKPATH_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_DATAPATH_PD = "ON",
        string PMA_CH3_REG_RX_DATAPATH_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_SIGDET_PD = "ON",
        string PMA_CH3_REG_RX_SIGDET_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_DCC_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_DCC_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_CDR_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_CDR_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_SIGDET_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_SIGDET_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RXPCLK_SLIP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RXPCLK_SLIP_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_RX_PCLKSWITCH_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_PCLKSWITCH_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_PCLKSWITCH = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_PCLKSWITCH_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_HIGHZ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_HIGHZ_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_RX_EQ_C_SET = 8,
        int PMA_CH3_REG_RX_EQ_R_SET = 8,
        string PMA_CH3_REG_RX_BUSWIDTH = "20BIT",
        string PMA_CH3_REG_RX_BUSWIDTH_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_RATE = "DIV1",
        string PMA_CH3_REG_RX_RATE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_RX_RES_TRIM = 51,
        string PMA_CH3_REG_RX_RES_TRIM_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_EQ_OFF = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_RX_PREAMP_IC = 1367,
        string PMA_CH3_REG_RX_PCLK_EDGE_SEL = "POS_EDGE",
        int PMA_CH3_REG_RX_PIBUF_IC = 2,
        int PMA_CH3_REG_RX_DCC_IC_RX = 3,
        int PMA_CH3_REG_RX_DCC_IC_TX = 3,
        string PMA_CH3_REG_RX_ICTRL_TRX = "100PCT",
        int PMA_CH3_REG_RX_ICTRL_SIGDET = 5,
        string PMA_CH3_REG_RX_ICTRL_PREAMP = "100PCT",
        string PMA_CH3_REG_RX_ICTRL_SLICER = "100PCT",
        string PMA_CH3_REG_RX_ICTRL_PIBUF = "100PCT",
        string PMA_CH3_REG_RX_ICTRL_PI = "100PCT",
        string PMA_CH3_REG_RX_ICTRL_DCC = "100PCT",
        string PMA_CH3_REG_RX_ICTRL_PREDRV = "100PCT",
        string PMA_CH3_REG_TX_RATE = "DIV1",
        string PMA_CH3_REG_TX_RATE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_TX2RX_PLPBK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_TXCLK_SEL = "PLL",
        string PMA_CH3_REG_RX_DATA_POLARITY = "NORMAL",
        string PMA_CH3_REG_RX_ERR_INSERT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_UDP_CHK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_PRBS_SEL = "PRBS7",
        string PMA_CH3_REG_PRBS_CHK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_PRBS_CHK_WIDTH_SEL = "20BIT",
        string PMA_CH3_REG_BIST_CHK_PAT_SEL = "PRBS",
        string PMA_CH3_REG_LOAD_ERR_CNT = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_CHK_COUNTER_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_CDR_PROP_GAIN = 2,
        int PMA_CH3_REG_CDR_PROP_TURBO_GAIN = 6,
        int PMA_CH3_REG_CDR_INT_GAIN = 2,
        int PMA_CH3_REG_CDR_INT_TURBO_GAIN = 6,
        int PMA_CH3_REG_CDR_INT_SAT_MAX = 992,
        int PMA_CH3_REG_CDR_INT_SAT_MIN = 32,
        string PMA_CH3_REG_CDR_INT_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_CDR_INT_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_CDR_PROP_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_CDR_PROP_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_CDR_LOCK_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_CDR_LOCK_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH3_REG_CDR_RX_PI_FORCE_SEL = 0,
        int PMA_CH3_REG_CDR_RX_PI_FORCE_D = 0,
        string PMA_CH3_REG_CDR_LOCK_TIMER = "1_2U",
        int PMA_CH3_REG_CDR_TURBO_MODE_TIMER = 1,
        string PMA_CH3_REG_CDR_LOCK_VAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_CDR_LOCK_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_CDR_INT_SAT_DET_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_CDR_SAT_DET_STATUS_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_CDR_SAT_DET_STATUS_RESET_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_CDR_PI_CTRL_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_CDR_PI_CTRL_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_CDR_SAT_DET_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_CDR_SAT_DET_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_CDR_SAT_DET_STICKY_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_CDR_SIGDET_STATUS_DIS = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_CDR_SAT_DET_TIMER = 2,
        string PMA_CH3_REG_CDR_SAT_DET_STATUS_VAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_CDR_SAT_DET_STATUS_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_CDR_TURBO_MODE_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_CDR_STATUS_RADDR_INIT = 0,
        string PMA_CH3_REG_CDR_STATUS_FIFO_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_PMA_TEST_SEL = 0,
        int PMA_CH3_REG_OOB_COMWAKE_GAP_MIN = 3,
        int PMA_CH3_REG_OOB_COMWAKE_GAP_MAX = 11,
        int PMA_CH3_REG_OOB_COMINIT_GAP_MIN = 15,
        int PMA_CH3_REG_OOB_COMINIT_GAP_MAX = 35,
        int PMA_CH3_REG_RX_PIBUF_IC_TX = 1,
        int PMA_CH3_REG_COMWAKE_STATUS_CLEAR = 0,
        int PMA_CH3_REG_COMINIT_STATUS_CLEAR = 0,
        string PMA_CH3_REG_RX_SYNC_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_SYNC_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_SATA_COMINIT_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_RX_SATA_COMINIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_SATA_COMWAKE_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_RX_SATA_COMWAKE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_DCC_DISABLE = "ENABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_DCC_DISABLE = "ENABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_RX_SLIP_SEL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_RX_SLIP_SEL = 0,
        string PMA_CH3_REG_RX_SLIP_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_RX_SIGDET_STATUS_SEL = 5,
        string PMA_CH3_REG_RX_SIGDET_FSM_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_SIGDET_STATUS_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_RX_SIGDET_STATUS = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_SIGDET_VTH = "50MV",
        int PMA_CH3_REG_RX_SIGDET_GRM = 0,
        string PMA_CH3_REG_RX_SIGDET_PULSE_EXT = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH3_REG_RX_SIGDET_CH2_SEL = 0,
        int PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW = 3,
        string PMA_CH3_REG_RX_SIGDET_CHK_WINDOW_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_RX_SIGDET_NOSIG_COUNT_SETTING = 4,
        int PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL = 0,
        string PMA_CH3_REG_SLIP_FIFO_INV_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_SLIP_FIFO_INV = "POS_EDGE",
        int PMA_CH3_REG_RX_SIGDET_4OOB_DET_SEL = 7,
        int PMA_CH3_REG_RX_SIGDET_IC_I = 10,
        string PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_OOB_DETECTOR_PD_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_RX_OOB_DETECTOR_PD = "ON",
        string PMA_CH3_REG_RX_TERM_CM_CTRL = "5DIV7",
        string PMA_CH3_REG_TX_PD = "ON",
        string PMA_CH3_REG_TX_PD_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_CLKPATH_PD = "ON",
        string PMA_CH3_REG_TX_CLKPATH_PD_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH3_REG_TX_BEACON_TIMER_SEL = 0,
        string PMA_CH3_REG_TX_RXDET_REQ_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_RXDET_REQ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_TX_BEACON_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_BEACON_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_TX_EI_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_EI_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_TX_RES_CAL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_TX_RES_CAL = 51,
        string PMA_CH3_REG_TX_BIAS_CAL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_TX_BIAS_CTRL = 48,
        string PMA_CH3_REG_TX_RXDET_TIMER_SEL = "12CYCLE",
        string PMA_CH3_REG_TX_SYNC_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_SYNC = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_PD_POST = "OFF",
        string PMA_CH3_REG_TX_PD_POST_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_RESET_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_TX_DCC_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_DCC_RESET_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_TX_BUSWIDTH_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_BUSWIDTH = "20BIT",
        string PMA_CH3_REG_PLL_READY_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_PLL_READY = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_TX_PCLK_SW_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_PCLK_SW = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_EI_PCLK_DELAY_SEL = 0,
        int PMA_CH3_REG_TX_DRV01_DAC0 = 0,
        int PMA_CH3_REG_TX_DRV01_DAC1 = 10,
        int PMA_CH3_REG_TX_DRV01_DAC2 = 16,
        int PMA_CH3_REG_TX_DRV00_DAC0 = 63,
        int PMA_CH3_REG_TX_DRV00_DAC1 = 53,
        int PMA_CH3_REG_TX_DRV00_DAC2 = 48,
        int PMA_CH3_REG_TX_AMP0 = 8,
        int PMA_CH3_REG_TX_AMP1 = 16,
        int PMA_CH3_REG_TX_AMP2 = 32,
        int PMA_CH3_REG_TX_AMP3 = 48,
        int PMA_CH3_REG_TX_AMP4 = 56,
        int PMA_CH3_REG_TX_MARGIN = 0,
        string PMA_CH3_REG_TX_MARGIN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH3_REG_TX_DEEMP = 0,
        string PMA_CH3_REG_TX_DEEMP_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_SWING = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_TX_SWING_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_RXDET_THRESHOLD = "100MV",
        int PMA_CH3_REG_TX_BEACON_OSC_CTRL = 4,
        int PMA_CH3_REG_TX_PREDRV_DAC = 1,
        int PMA_CH3_REG_TX_PREDRV_CM_CTRL = 1,
        string PMA_CH3_REG_TX_TX2RX_SLPBACK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_TX_PCLK_EDGE_SEL = "POS_EDGE",
        string PMA_CH3_REG_TX_RXDET_STATUS_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_RXDET_STATUS = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_TX_PRBS_GEN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL = "20BIT",
        string PMA_CH3_REG_TX_PRBS_SEL = "PRBS7",
        int PMA_CH3_REG_TX_UDP_DATA = 256773,
        string PMA_CH3_REG_TX_FIFO_RST_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_TX_FIFO_WP_CTRL = 2,
        string PMA_CH3_REG_TX_FIFO_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_TX_DATA_MUX_SEL = 2,
        string PMA_CH3_REG_TX_ERR_INSERT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_TX_SATA_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON = "ENABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH3_REG_TX_PULLUP_DAC0 = 8,
        int PMA_CH3_REG_TX_PULLUP_DAC1 = 8,
        int PMA_CH3_REG_TX_PULLUP_DAC2 = 8,
        int PMA_CH3_REG_TX_PULLUP_DAC3 = 8,
        int PMA_CH3_REG_TX_OOB_DELAY_SEL = 0,
        string PMA_CH3_REG_TX_POLARITY = "NORMAL",
        int PMA_CH3_REG_TX_SLPBK_AMP = 1,
        string PMA_CH3_REG_TX_LS_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_TX_JTAG_MODE_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_TX_JTAG_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_JTAG_MODE_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_CH3_REG_RX_JTAG_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_REG_RX_JTAG_OE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_CH3_REG_RX_ACJTAG_VHYSTSE = 0,
        string PMA_CH3_REG_TX_FBCLK_FAR_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_RX_TERM_MODE_CTRL = 6,
        string PMA_CH3_REG_PLPBK_TXPCLK_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_CFG_LANE_POWERUP = "OFF",
        string PMA_CH3_CFG_PMA_POR_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_CFG_RX_LANE_POWERUP = "OFF",
        string PMA_CH3_CFG_RX_PMA_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CH3_CFG_TX_LANE_POWERUP = "OFF",
        string PMA_CH3_CFG_TX_PMA_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CH3_REG_RESERVED_48_45 = 0,
        int PMA_CH3_REG_RESERVED_69 = 0,
        int PMA_CH3_REG_RESERVED_77_76 = 0,
        int PMA_CH3_REG_RESERVED_171_164 = 0,
        int PMA_CH3_REG_RESERVED_175_172 = 0,
        int PMA_CH3_REG_RESERVED_190 = 0,
        int PMA_CH3_REG_RESERVED_233_232 = 0,
        int PMA_CH3_REG_RESERVED_235_234 = 0,
        int PMA_CH3_REG_RESERVED_241_240 = 0,
        int PMA_CH3_REG_RESERVED_285_283 = 0,
        int PMA_CH3_REG_RESERVED_286 = 0,
        int PMA_CH3_REG_RESERVED_295 = 0,
        int PMA_CH3_REG_RESERVED_298 = 0,
        int PMA_CH3_REG_RESERVED_332_325 = 0,
        int PMA_CH3_REG_RESERVED_340_333 = 0,
        int PMA_CH3_REG_RESERVED_348_341 = 0,
        int PMA_CH3_REG_RESERVED_354_349 = 0,
        int PMA_CH3_REG_RESERVED_373 = 0,
        int PMA_CH3_REG_RESERVED_376 = 0,
        int PMA_CH3_REG_RESERVED_452 = 0,
        int PMA_CH3_REG_RESERVED_502_499 = 0,
        int PMA_CH3_REG_RESERVED_506_505 = 0,
        int PMA_CH3_REG_RESERVED_550_549 = 0,
        int PMA_CH3_REG_RESERVED_556_552 = 0,
        string PMA_PLL0_REG_PLL_POWERDOWN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL0_REG_PLL_POWERDOWN = "ON",
        string PMA_PLL0_REG_PLL_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL0_REG_PLL_RESET_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_PLL_READY_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL0_REG_PLL_READY = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_LANE_SYNC_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL0_REG_LANE_SYNC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_LOCKDET_REPEAT = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL0_REG_RESCAL_I_CODE_PMA = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL0_REG_RESCAL_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL0_REG_RESCAL_RESET_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_RESCAL_DONE_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL0_REG_RESCAL_DONE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_RESCAL_CODE_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_PLL0_REG_LDO_VREF_SEL = 2,
        int PMA_PLL0_REG_BIAS_VCOREP_C = 1,
        int PMA_PLL0_REG_RESCAL_I_CODE = 32,
        string PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_PLL0_REG_RESCAL_ONCHIP_SMALL = 0,
        string PMA_PLL0_REG_JTAG_OE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL0_REG_JTAG_AC_MODE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_PLL0_REG_JTAG_VHYSTSEL = 0,
        string PMA_PLL0_REG_PLL_LOCKDET_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL0_REG_PLL_LOCKDET_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_PLL_LOCKDET_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL0_REG_PLL_LOCKDET_RESET_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_PLL_LOCKED_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL0_REG_PLL_LOCKED = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_PLL_LOCKED_STICKY_CLEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_PLL_UNLOCKED_STICKY_CLEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_NOFBCLK_STICKY_CLEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL0_REG_PLL_LOCKDET_REFCT = 7,
        int PMA_PLL0_REG_PLL_LOCKDET_FBCT = 7,
        int PMA_PLL0_REG_PLL_LOCKDET_LOCKCT = 4,
        int PMA_PLL0_REG_PLL_LOCKDET_ITER = 3,
        int PMA_PLL0_REG_PLL_UNLOCKDET_ITER = 2,
        string PMA_PLL0_REG_PD_VCO = "ON",
        string PMA_PLL0_REG_FBCLK_TEST_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_REFCLK_TEST_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL0_REG_TEST_SEL = 0,
        string PMA_PLL0_REG_TEST_V_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_TEST_SIG_HALF_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL0_REG_TEST_FSM = 0,
        string PMA_PLL0_REG_REFCLK_OUT_PD = "OFF",
        string PMA_PLL0_REG_BGR_STARTUP_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_BGR_STARTUP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_PD_BGR = "ON",
        string PMA_PLL0_REG_REFCLK_TERM_VCM_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_FBDIVA_5_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL0_REG_FBDIVB = 1,
        string PMA_PLL0_REG_RESET_N_PFDQP_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL0_REG_RESET_N_PFDQP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL0_REG_QPCURRENT = 12,
        string PMA_PLL0_REG_VC_FORCE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL0_REG_VCRESET_C_RING = 24,
        int PMA_PLL0_REG_LPF_R_C = 0,
        int PMA_PLL0_REG_LPF_TR_C = 2,
        string PMA_PLL0_REG_PD_BIAS = "ON",
        int PMA_PLL0_REG_ICTRL_PLL = 1,
        int PMA_PLL0_REG_BIAS_QP = 1,
        int PMA_PLL0_REG_BIAS_LANE_SYNC = 1,
        int PMA_PLL0_REG_BIAS_CLKBUFS1 = 1,
        int PMA_PLL0_REG_TXPCLK_SEL = 0,
        int PMA_PLL0_REG_BIAS_CLKBUFS3 = 1,
        string PMA_PLL0_REG_LANE_SYNC_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_LANE_SYNC_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_PLL0_REG_BIAS_D2S = 1,
        int PMA_PLL0_REG_BIAS_REFD2S_C = 1,
        int PMA_PLL0_REG_BIAS_VCRST_C = 1,
        int PMA_PLL0_REG_BIAS_REFBUF_C = 1,
        int PMA_PLL0_REG_CLKBUFS1_C = 1,
        int PMA_PLL0_REG_CLKBUFS2_C = 6,
        int PMA_PLL0_REG_CLKBUFS3_C = 6,
        int PMA_PLL0_REG_CLKBUFS4_C = 1,
        int PMA_PLL0_REG_PLL_REFCLK_CML_SEL = 0,
        string PMA_PLL0_REG_REFCLK_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_RESCAL_R_CODE_SIGN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_PLL_UNLOCKED_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL0_REG_PLL_UNLOCKED = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_PLL_LOCKDET_MODE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL0_REG_PLL_CLKBUF_PD_LEFT = "ON",
        string PMA_PLL0_REG_PLL_CLKBUF_PD_RIGHT = "ON",
        string PMA_PLL0_REG_RESCAL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL0_REG_RESCAL_I_CODE_VAL = 0,
        int PMA_PLL0_REG_RESCAL_I_CODE_OW = 0,
        int PMA_PLL0_REG_RESCAL_ITER_VALID_SEL = 0,
        int PMA_PLL0_REG_RESCAL_WAIT_SEL = 0,
        int PMA_PLL0_REG_I_CTRL_MAX = 45,
        int PMA_PLL0_REG_I_CTRL_MIN = 19,
        string PARM_CFG_HSST_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PARM_PLL0_POWERUP = "OFF",
        string PARM_PLL0_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_PLL_POWERDOWN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL1_REG_PLL_POWERDOWN = "ON",
        string PMA_PLL1_REG_PLL_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL1_REG_PLL_RESET_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_PLL_READY_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL1_REG_PLL_READY = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_LANE_SYNC_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL1_REG_LANE_SYNC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_LOCKDET_REPEAT = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL1_REG_RESCAL_I_CODE_PMA = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL1_REG_RESCAL_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL1_REG_RESCAL_RESET_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_RESCAL_DONE_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL1_REG_RESCAL_DONE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_RESCAL_CODE_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_PLL1_REG_LDO_VREF_SEL = 2,
        int PMA_PLL1_REG_BIAS_VCOREP_C = 1,
        int PMA_PLL1_REG_RESCAL_I_CODE = 32,
        string PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_PLL1_REG_RESCAL_ONCHIP_SMALL = 0,
        string PMA_PLL1_REG_JTAG_OE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL1_REG_JTAG_AC_MODE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_PLL1_REG_JTAG_VHYSTSEL = 0,
        string PMA_PLL1_REG_PLL_LOCKDET_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL1_REG_PLL_LOCKDET_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_PLL_LOCKDET_RESET_N_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL1_REG_PLL_LOCKDET_RESET_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_PLL_LOCKED_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL1_REG_PLL_LOCKED = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_PLL_LOCKED_STICKY_CLEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_PLL_UNLOCKED_STICKY_CLEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_NOFBCLK_STICKY_CLEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL1_REG_PLL_LOCKDET_REFCT = 7,
        int PMA_PLL1_REG_PLL_LOCKDET_FBCT = 7,
        int PMA_PLL1_REG_PLL_LOCKDET_LOCKCT = 4,
        int PMA_PLL1_REG_PLL_LOCKDET_ITER = 3,
        int PMA_PLL1_REG_PLL_UNLOCKDET_ITER = 2,
        string PMA_PLL1_REG_PD_VCO = "ON",
        string PMA_PLL1_REG_FBCLK_TEST_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_REFCLK_TEST_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL1_REG_TEST_SEL = 0,
        string PMA_PLL1_REG_TEST_V_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_TEST_SIG_HALF_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL1_REG_TEST_FSM = 0,
        string PMA_PLL1_REG_REFCLK_OUT_PD = "OFF",
        string PMA_PLL1_REG_BGR_STARTUP_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_BGR_STARTUP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_PD_BGR = "ON",
        string PMA_PLL1_REG_REFCLK_TERM_VCM_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_FBDIVA_5_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL1_REG_FBDIVB = 1,
        string PMA_PLL1_REG_RESET_N_PFDQP_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL1_REG_RESET_N_PFDQP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL1_REG_QPCURRENT = 12,
        string PMA_PLL1_REG_VC_FORCE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL1_REG_VCRESET_C_RING = 24,
        int PMA_PLL1_REG_LPF_R_C = 0,
        int PMA_PLL1_REG_LPF_TR_C = 2,
        string PMA_PLL1_REG_PD_BIAS = "ON",
        int PMA_PLL1_REG_ICTRL_PLL = 1,
        int PMA_PLL1_REG_BIAS_QP = 1,
        int PMA_PLL1_REG_BIAS_LANE_SYNC = 1,
        int PMA_PLL1_REG_BIAS_CLKBUFS1 = 1,
        int PMA_PLL1_REG_TXPCLK_SEL = 0,
        int PMA_PLL1_REG_BIAS_CLKBUFS3 = 1,
        string PMA_PLL1_REG_LANE_SYNC_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_LANE_SYNC_EN_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        int PMA_PLL1_REG_BIAS_D2S = 1,
        int PMA_PLL1_REG_BIAS_REFD2S_C = 1,
        int PMA_PLL1_REG_BIAS_VCRST_C = 1,
        int PMA_PLL1_REG_BIAS_REFBUF_C = 1,
        int PMA_PLL1_REG_CLKBUFS1_C = 1,
        int PMA_PLL1_REG_CLKBUFS2_C = 6,
        int PMA_PLL1_REG_CLKBUFS3_C = 6,
        int PMA_PLL1_REG_CLKBUFS4_C = 1,
        int PMA_PLL1_REG_PLL_REFCLK_CML_SEL = 0,
        string PMA_PLL1_REG_REFCLK_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_RESCAL_R_CODE_SIGN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_PLL_UNLOCKED_OW = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PMA_PLL1_REG_PLL_UNLOCKED = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_PLL_LOCKDET_MODE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL1_REG_PLL_CLKBUF_PD_LEFT = "ON",
        string PMA_PLL1_REG_PLL_CLKBUF_PD_RIGHT = "ON",
        string PMA_PLL1_REG_RESCAL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL1_REG_RESCAL_I_CODE_VAL = 0,
        int PMA_PLL1_REG_RESCAL_I_CODE_OW = 0,
        int PMA_PLL1_REG_RESCAL_ITER_VALID_SEL = 0,
        int PMA_PLL1_REG_RESCAL_WAIT_SEL = 0,
        int PMA_PLL1_REG_I_CTRL_MAX = 45,
        int PMA_PLL1_REG_I_CTRL_MIN = 19,
        string PARM_PLL1_POWERUP = "OFF",
        string PARM_PLL1_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PARM_GRSN_DIS = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PARM_CFG_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        input P_REFCLKP_0,
        input P_REFCLKN_0,
        output P_PLL_TEST_0,
        input P_REFCLKP_1,
        input P_REFCLKN_1,
        output P_PLL_TEST_1,
        input P_RX_SDP0,
        input P_RX_SDN0,
        output P_TX_SDP0,
        output P_TX_SDN0,
        input P_RX_SDP1,
        input P_RX_SDN1,
        output P_TX_SDP1,
        output P_TX_SDN1,
        input P_RX_SDP2,
        input P_RX_SDN2,
        output P_TX_SDP2,
        output P_TX_SDN2,
        input P_RX_SDP3,
        input P_RX_SDN3,
        output P_TX_SDP3,
        output P_TX_SDN3,
        input P_RX0_CLK_FR_CORE /* pragma PAP_IS_CLOCK_PIN */,
        input P_RX1_CLK_FR_CORE /* pragma PAP_IS_CLOCK_PIN */,
        input P_RX2_CLK_FR_CORE /* pragma PAP_IS_CLOCK_PIN */,
        input P_RX3_CLK_FR_CORE /* pragma PAP_IS_CLOCK_PIN */,
        input P_TX0_CLK_FR_CORE /* pragma PAP_IS_CLOCK_PIN */,
        input P_TX1_CLK_FR_CORE /* pragma PAP_IS_CLOCK_PIN */,
        input P_TX2_CLK_FR_CORE /* pragma PAP_IS_CLOCK_PIN */,
        input P_TX3_CLK_FR_CORE /* pragma PAP_IS_CLOCK_PIN */,
        input P_HSST_RST,
        input P_PCS_RX_RST_0,
        input P_PCS_RX_RST_1,
        input P_PCS_RX_RST_2,
        input P_PCS_RX_RST_3,
        input P_PCS_TX_RST_0,
        input P_PCS_TX_RST_1,
        input P_PCS_TX_RST_2,
        input P_PCS_TX_RST_3,
        input P_CFG_CLK /* pragma PAP_IS_CLOCK_PIN */,
        input P_CFG_RST,
        input P_CFG_ENABLE,
        input P_CFG_WRITE,
        input P_CFG_ADDR[15:0],
        input P_CFG_WDATA[7:0],
        input P_TDATA_0[44:0],
        input P_TDATA_1[44:0],
        input P_TDATA_2[44:0],
        input P_TDATA_3[44:0],
        input P_PCS_WORD_ALIGN_EN[3:0],
        input P_RX_POLARITY_INVERT[3:0],
        input P_CEB_ADETECT_EN[3:0],
        input P_PCS_MCB_EXT_EN[3:0],
        input P_PCS_NEAREND_LOOP[3:0],
        input P_PCS_FAREND_LOOP[3:0],
        output P_CFG_READY,
        output P_CFG_RDATA[7:0],
        output P_CFG_INT,
        output P_PCS_RX_MCB_STATUS[3:0],
        output P_PCS_LSM_SYNCED[3:0],
        output P_RDATA_0[46:0],
        output P_RDATA_1[46:0],
        output P_RDATA_2[46:0],
        output P_RDATA_3[46:0],
        output P_RCLK2FABRIC[3:0],
        output P_TCLK2FABRIC[3:0],
        input P_RESCAL_RST_I,
        input P_RESCAL_I_CODE_I[5:0],
        output P_RESCAL_I_CODE_O[5:0],
        output P_REFCK2CORE_0,
        input P_PLL_REF_CLK_0,
        input P_PLL_RST_0,
        input P_PLLPOWERDOWN_0,
        output P_PLL_READY_0,
        input P_LANE_SYNC_0,
        input P_LANE_SYNC_EN_0,
        input P_RATE_CHANGE_TCLK_ON_0,
        output P_REFCK2CORE_1,
        input P_PLL_REF_CLK_1,
        input P_PLL_RST_1,
        input P_PLLPOWERDOWN_1,
        output P_PLL_READY_1,
        input P_LANE_SYNC_1,
        input P_LANE_SYNC_EN_1,
        input P_RATE_CHANGE_TCLK_ON_1,
        input P_LANE_PD_0,
        input P_LANE_RST_0,
        input P_RX_LANE_PD_0,
        input P_RX_PMA_RST_0,
        output P_RX_SIGDET_STATUS_0,
        output P_RX_SATA_COMINIT_0,
        output P_RX_SATA_COMWAKE_0,
        output P_RX_LS_DATA_0,
        output P_RX_READY_0,
        output P_TEST_STATUS_0[19:0],
        input P_TX_DEEMP_0[1:0],
        input P_TX_LS_DATA_0,
        input P_TX_BEACON_EN_0,
        input P_TX_SWING_0,
        input P_TX_RXDET_REQ_0,
        input P_TX_RATE_0[2:0],
        input P_TX_BUSWIDTH_0[2:0],
        input P_TX_MARGIN_0[2:0],
        output P_TX_RXDET_STATUS_0,
        input P_TX_PMA_RST_0,
        input P_TX_LANE_PD_0,
        input P_RX_RATE_0[2:0],
        input P_RX_BUSWIDTH_0[2:0],
        input P_RX_HIGHZ_0,
        output P_CA_ALIGN_RX[3:0],
        output P_CA_ALIGN_TX[3:0],
        input P_CIM_CLK_ALIGNER_RX0[7:0],
        input P_CIM_CLK_ALIGNER_TX0[7:0],
        input P_CIM_DYN_DLY_SEL_RX0,
        input P_CIM_DYN_DLY_SEL_TX0,
        input P_CIM_START_ALIGN_RX0,
        input P_CIM_START_ALIGN_TX0,
        input P_LANE_PD_1,
        input P_LANE_RST_1,
        input P_RX_LANE_PD_1,
        input P_RX_PMA_RST_1,
        output P_RX_SIGDET_STATUS_1,
        output P_RX_SATA_COMINIT_1,
        output P_RX_SATA_COMWAKE_1,
        output P_RX_LS_DATA_1,
        output P_RX_READY_1,
        output P_TEST_STATUS_1[19:0],
        input P_TX_DEEMP_1[1:0],
        input P_TX_LS_DATA_1,
        input P_TX_BEACON_EN_1,
        input P_TX_SWING_1,
        input P_TX_RXDET_REQ_1,
        input P_TX_RATE_1[2:0],
        input P_TX_BUSWIDTH_1[2:0],
        input P_TX_MARGIN_1[2:0],
        output P_TX_RXDET_STATUS_1,
        input P_TX_PMA_RST_1,
        input P_TX_LANE_PD_1,
        input P_RX_RATE_1[2:0],
        input P_RX_BUSWIDTH_1[2:0],
        input P_RX_HIGHZ_1,
        input P_CIM_CLK_ALIGNER_RX1[7:0],
        input P_CIM_CLK_ALIGNER_TX1[7:0],
        input P_CIM_DYN_DLY_SEL_RX1,
        input P_CIM_DYN_DLY_SEL_TX1,
        input P_CIM_START_ALIGN_RX1,
        input P_CIM_START_ALIGN_TX1,
        input P_LANE_PD_2,
        input P_LANE_RST_2,
        input P_RX_LANE_PD_2,
        input P_RX_PMA_RST_2,
        output P_RX_SIGDET_STATUS_2,
        output P_RX_SATA_COMINIT_2,
        output P_RX_SATA_COMWAKE_2,
        output P_RX_LS_DATA_2,
        output P_RX_READY_2,
        output P_TEST_STATUS_2[19:0],
        input P_TX_DEEMP_2[1:0],
        input P_TX_LS_DATA_2,
        input P_TX_BEACON_EN_2,
        input P_TX_SWING_2,
        input P_TX_RXDET_REQ_2,
        input P_TX_RATE_2[2:0],
        input P_TX_BUSWIDTH_2[2:0],
        input P_TX_MARGIN_2[2:0],
        output P_TX_RXDET_STATUS_2,
        input P_TX_PMA_RST_2,
        input P_TX_LANE_PD_2,
        input P_RX_RATE_2[2:0],
        input P_RX_BUSWIDTH_2[2:0],
        input P_RX_HIGHZ_2,
        input P_CIM_CLK_ALIGNER_RX2[7:0],
        input P_CIM_CLK_ALIGNER_TX2[7:0],
        input P_CIM_DYN_DLY_SEL_RX2,
        input P_CIM_DYN_DLY_SEL_TX2,
        input P_CIM_START_ALIGN_RX2,
        input P_CIM_START_ALIGN_TX2,
        input P_LANE_PD_3,
        input P_LANE_RST_3,
        input P_RX_LANE_PD_3,
        input P_RX_PMA_RST_3,
        output P_RX_SIGDET_STATUS_3,
        output P_RX_SATA_COMINIT_3,
        output P_RX_SATA_COMWAKE_3,
        output P_RX_LS_DATA_3,
        output P_RX_READY_3,
        output P_TEST_STATUS_3[19:0],
        input P_TX_DEEMP_3[1:0],
        input P_TX_LS_DATA_3,
        input P_TX_BEACON_EN_3,
        input P_TX_SWING_3,
        input P_TX_RXDET_REQ_3,
        input P_TX_RATE_3[2:0],
        input P_TX_BUSWIDTH_3[2:0],
        input P_TX_MARGIN_3[2:0],
        output P_TX_RXDET_STATUS_3,
        input P_TX_PMA_RST_3,
        input P_TX_LANE_PD_3,
        input P_RX_RATE_3[2:0],
        input P_RX_BUSWIDTH_3[2:0],
        input P_RX_HIGHZ_3,
        input P_CIM_CLK_ALIGNER_RX3[7:0],
        input P_CIM_CLK_ALIGNER_TX3[7:0],
        input P_CIM_DYN_DLY_SEL_RX3,
        input P_CIM_DYN_DLY_SEL_TX3,
        input P_CIM_START_ALIGN_RX3,
        input P_CIM_START_ALIGN_TX3,
        input P_TEST_SI0,
        input P_TEST_SI1,
        input P_TEST_SI2,
        input P_TEST_SI3,
        input P_TEST_SI4,
        input P_TEST_SI5,
        input P_TEST_SI6,
        input P_TEST_SI7,
        input P_TEST_SE_N,
        input P_TEST_MODE_N,
        input P_TEST_CLK,
        input P_TEST_RSTN,
        input P_COMPRESSION_MODE,
        input P_PLL_BYPASS,
        input P_PLL_RESET,
        output P_TEST_SO0,
        output P_TEST_SO1,
        output P_TEST_SO2,
        output P_TEST_SO3,
        output P_TEST_SO4,
        output P_TEST_SO5,
        output P_TEST_SO6,
        output P_TEST_SO7
    );
};


// ADD FOR LOGOS2

design
operator V_APM_E2
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int ASYNC_RST = 0,
        int X_REG = 0,
        int XB_REG = 0,
        int Y_REG = 0,
        int Z_REG = 0,
        int P_REG = 0,
        int CXO_REG = 0,
        int CPO_REG = 0,
        int MULT_REG = 0,
        int PREADD_REG = 0,
        int MODEIN_REG = 0,
        int MODEY_REG = 0,
        int MODEZ_REG = 0,
        int X_SEL = 0,
        int XB_SEL = 0,
        int CIN_SEL = 0,
        int ROUNDMODE_SEL = 0,
        int USE_SIMD = 0,
        int USE_ACCLOW = 0,
        int USE_PREADD = 0,
        int USE_POSTADD = 0,
        bit P_INIT0[47:0] = 48'b000000000000000000000000000000000000000000000000,
        bit P_INIT1[47:0] = 48'b000000000000000000000000000000000000000000000000
    );

    port
    (
        output COUT,
        output CPO[47:0],
        output CXO[29:0],
        output CXBO[24:0],
        output P[47:0],
        input CIN,
        input CPI[47:0],
        input CXI[29:0],
        input CXBI[24:0],
        input X[29:0],
        input XB[24:0],
        input Y[17:0],
        input Z[47:0],
        input MODEIN[4:0],
        input MODEY[2:0],
        input MODEZ[3:0],
        input CLK /* pragma PAP_IS_CLOCK_PIN PAP_LIB_IS_INV_PIN */,
        input CEX1 = 1'b1 /* pragma PAP_LIB_IS_INV_PIN */,
        input CEX2 = 1'b1 /* pragma PAP_LIB_IS_INV_PIN */,
        input CEX3 = 1'b1 /* pragma PAP_LIB_IS_INV_PIN */,
        input CEXB = 1'b1 /* pragma PAP_LIB_IS_INV_PIN */,
        input CEY1 = 1'b1 /* pragma PAP_LIB_IS_INV_PIN */,
        input CEY2 = 1'b1 /* pragma PAP_LIB_IS_INV_PIN */,
        input CEZ = 1'b1 /* pragma PAP_LIB_IS_INV_PIN */,
        input CEM = 1'b1 /* pragma PAP_LIB_IS_INV_PIN */,
        input CEP = 1'b1 /* pragma PAP_LIB_IS_INV_PIN */,
        input CEPRE = 1'b1 /* pragma PAP_LIB_IS_INV_PIN */,
        input CEMODEIN = 1'b1 /* pragma PAP_LIB_IS_INV_PIN */,
        input CEMODEY = 1'b1 /* pragma PAP_LIB_IS_INV_PIN */,
        input CEMODEZ = 1'b1 /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTX = 1'b0 /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTXB = 1'b0 /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTY = 1'b0 /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTZ = 1'b0 /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTM = 1'b0 /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTP = 1'b0 /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTPRE = 1'b0 /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTMODEIN = 1'b0 /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTMODEY = 1'b0 /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTMODEZ = 1'b0 /* pragma PAP_LIB_IS_INV_PIN */
    );
};

design
operator V_FIFO36K_E1
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int DATA_WIDTH = 18,
        int DO_REG = 0,
        string ECC_READ_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string ECC_WRITE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit ALMOST_FULL_OFFSET[14:0] = 15'h0000,
        bit ALMOST_EMPTY_OFFSET[14:0] = 15'h0000,
        bit RST_VAL[71:0] = 72'h000000000000000000,
        int USE_EMPTY = 0,
        int USE_FULL = 0,
        string SYNC_FIFO = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        output ALMOST_EMPTY,
        output ALMOST_FULL,
        output EMPTY,
        output FULL,
        output DO[71:0],
        output ECC_SBITERR,
        output ECC_DBITERR,
        input DI[71:0],
        input WCLK /* pragma PAP_IS_CLOCK_PIN PAP_LIB_IS_INV_PIN */,
        input RCLK /* pragma PAP_IS_CLOCK_PIN PAP_LIB_IS_INV_PIN */,
        input WCE /* pragma PAP_LIB_IS_INV_PIN */,
        input RCE /* pragma PAP_LIB_IS_INV_PIN */,
        input ORCE /* pragma PAP_LIB_IS_INV_PIN */,
        input RST /* pragma PAP_LIB_IS_INV_PIN */,
        input INJECT_SBITERR,
        input INJECT_DBITERR
    );
};

design
operator V_DRM36K_E1
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit CSA_MASK[2:0] = 3'b000,
        bit CSB_MASK[2:0] = 3'b000,
        int DATA_WIDTH_A = 18,
        int DATA_WIDTH_B = 18,
        string WRITE_MODE_A = "NORMAL_WRITE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NORMAL_WRITE | TRANSPARENT_WRITE | READ_BEFORE_WRITE" */,
        string WRITE_MODE_B = "NORMAL_WRITE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NORMAL_WRITE | TRANSPARENT_WRITE | READ_BEFORE_WRITE" */,
        int DOA_REG = 0 /* 0 | 1 */,
        int DOB_REG = 0 /* 0 | 1 */,
        int DOA_REG_CLKINV = 0 /* 0 | 1 */,
        int DOB_REG_CLKINV = 0 /* 0 | 1 */,
        bit RSTA_VAL[35:0] = 36'h000000000,
        bit RSTB_VAL[35:0] = 36'h000000000,
        string RST_TYPE = "SYNC" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "SYNC | ASYNC | ASYNC_SYNC_RELEASE" */,
        string RAM_MODE = "TRUE_DUAL_PORT" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE_DUAL_PORT | ROM | SINGLE_PORT | SIMPLE_DUAL_PORT" */,
        string RAM_CASCADE = "NONE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NONE | UPPER | LOWER" */,
        string ECC_READ_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string ECC_WRITE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit INIT_00[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_01[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_02[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_03[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_04[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_05[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_06[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_07[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_08[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_09[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_10[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_11[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_12[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_13[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_14[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_15[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_16[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_17[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_18[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_19[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_20[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_21[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_22[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_23[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_24[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_25[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_26[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_27[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_28[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_29[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_30[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_31[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_32[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_33[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_34[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_35[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_36[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_37[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_38[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_39[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_40[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_41[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_42[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_43[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_44[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_45[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_46[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_47[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_48[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_49[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_4A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_4B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_4C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_4D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_4E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_4F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_50[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_51[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_52[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_53[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_54[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_55[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_56[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_57[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_58[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_59[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_5A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_5B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_5C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_5D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_5E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_5F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_60[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_61[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_62[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_63[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_64[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_65[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_66[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_67[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_68[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_69[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_6A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_6B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_6C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_6D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_6E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_6F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_70[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_71[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_72[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_73[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_74[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_75[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_76[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_77[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_78[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_79[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_7A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_7B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_7C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_7D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_7E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_7F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        string INIT_FILE = "NONE",
        int BLOCK_X = 0,
        int BLOCK_Y = 0,
        int RAM_DATA_WIDTH = 9,
        int RAM_ADDR_WIDTH = 12,
        string INIT_FORMAT = "BIN"
    );

    port
    (
        output COUTA,
        output COUTB,
        output DOA[35:0],
        output DOB[35:0],
        output ECC_SBITERR,
        output ECC_DBITERR,
        output ECC_RDADDR[8:0],
        output ECC_PARITY[7:0],
        input CINA,
        input CINB,
        input DIA[35:0],
        input DIB[35:0],
        input ADDRA[15:0],
        input ADDRA_HOLD,
        input ADDRB[15:0],
        input ADDRB_HOLD,
        input CSA[2:0],
        input CSB[2:0],
        input BWEA[7:0],
        input BWEB[3:0],
        input CLKA /* pragma PAP_IS_CLOCK_PIN PAP_LIB_IS_INV_PIN */,
        input CLKB /* pragma PAP_IS_CLOCK_PIN PAP_LIB_IS_INV_PIN */,
        input CEA /* pragma PAP_LIB_IS_INV_PIN */,
        input CEB /* pragma PAP_LIB_IS_INV_PIN */,
        input WEA /* pragma PAP_LIB_IS_INV_PIN */,
        input WEB /* pragma PAP_LIB_IS_INV_PIN */,
        input ORCEA /* pragma PAP_LIB_IS_INV_PIN */,
        input ORCEB /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTA /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTB /* pragma PAP_LIB_IS_INV_PIN */,
        input INJECT_SBITERR,
        input INJECT_DBITERR
    );
};

design
operator V_DRM18K_E1
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int DATA_WIDTH_A = 18,
        int DATA_WIDTH_B = 18,
        int DOA_REG = 0 /* 0 | 1 */,
        int DOB_REG = 0 /* 0 | 1 */,
        int DOA_REG_CLKINV = 0 /* 0 | 1 */,
        int DOB_REG_CLKINV = 0 /* 0 | 1 */,
        bit RSTA_VAL[17:0] = 18'h00000,
        bit RSTB_VAL[17:0] = 18'h00000,
        string RST_TYPE = "SYNC" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "SYNC | ASYNC | ASYNC_SYNC_RELEASE" */,
        string RAM_MODE = "TRUE_DUAL_PORT" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE_DUAL_PORT | ROM | SINGLE_PORT | SIMPLE_DUAL_PORT" */,
        string WRITE_MODE_A = "NORMAL_WRITE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NORMAL_WRITE | TRANSPARENT_WRITE | READ_BEFORE_WRITE" */,
        string WRITE_MODE_B = "NORMAL_WRITE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NORMAL_WRITE | TRANSPARENT_WRITE | READ_BEFORE_WRITE" */,
        bit INIT_00[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_01[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_02[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_03[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_04[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_05[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_06[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_07[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_08[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_09[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_0F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_10[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_11[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_12[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_13[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_14[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_15[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_16[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_17[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_18[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_19[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_1F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_20[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_21[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_22[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_23[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_24[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_25[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_26[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_27[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_28[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_29[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_2F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_30[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_31[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_32[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_33[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_34[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_35[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_36[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_37[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_38[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_39[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3A[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3B[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3C[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3D[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3E[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        bit INIT_3F[287:0] = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
        string INIT_FILE = "NONE",
        int BLOCK_X = 0,
        int BLOCK_Y = 0,
        int RAM_DATA_WIDTH = 9,
        int RAM_ADDR_WIDTH = 11,
        string INIT_FORMAT = "BIN"
    );

    port
    (
        output DOA[17:0],
        output DOB[17:0],
        input DIA[17:0],
        input DIB[17:0],
        input ADDRA[13:0],
        input ADDRA_HOLD,
        input ADDRB[13:0],
        input ADDRB_HOLD,
        input BWEA[3:0],
        input BWEB[1:0],
        input CLKA /* pragma PAP_IS_CLOCK_PIN PAP_LIB_IS_INV_PIN */,
        input CLKB /* pragma PAP_IS_CLOCK_PIN PAP_LIB_IS_INV_PIN */,
        input CEA /* pragma PAP_LIB_IS_INV_PIN */,
        input CEB /* pragma PAP_LIB_IS_INV_PIN */,
        input WEA /* pragma PAP_LIB_IS_INV_PIN */,
        input WEB /* pragma PAP_LIB_IS_INV_PIN */,
        input ORCEA /* pragma PAP_LIB_IS_INV_PIN */,
        input ORCEB /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTA /* pragma PAP_LIB_IS_INV_PIN */,
        input RSTB /* pragma PAP_LIB_IS_INV_PIN */
    );
};


design
operator V_IOCLKDIV_E2
{
    parameter
    (
        string DIV_FACTOR = "BYPASS"
    );

    port
    (
        output CLKDIVOUT,
        input CLKIN,
        input RST_N,
        input CE
    );
};

design
operator V_CLKBUFMXCE
{
    parameter
    (
        string CE_TYPE = "SYNC" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "SYNC | ASYNC" */,
        string CE_INV = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string TRIGGER_MODE = "POSEDGE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NEGEDGE | POSEDGE" */
    );
    port
    (
        input CLKIN,
        input CE,
        output CLKOUT
    );
};

design
operator V_GPLL
{
    parameter
    (
        real CLKIN_FREQ = 50.0,
        bit LOCK_MODE = 1'b0 /* 0 | 1 */,
        int STATIC_RATIOI = 1 /* 1 ~ 128 */,
        int STATIC_RATIOM = 1 /* 1 ~ 128 */,
        real STATIC_RATIO0 = 1.0 /* 1 ~ 128 */,
        int STATIC_RATIO1 = 1 /* 1 ~ 128 */,
        int STATIC_RATIO2 = 1 /* 1 ~ 128 */,
        int STATIC_RATIO3 = 1 /* 1 ~ 128 */,
        int STATIC_RATIO4 = 1 /* 1 ~ 128 */,
        int STATIC_RATIO5 = 1 /* 1 ~ 128 */,
        int STATIC_RATIO6 = 1 /* 1 ~ 128 */,
        real STATIC_RATIOF = 1.0 /* 1 ~ 128 */,
        int STATIC_DUTY0 = 2,
        int STATIC_DUTY1 = 2,
        int STATIC_DUTY2 = 2,
        int STATIC_DUTY3 = 2,
        int STATIC_DUTY4 = 2,
        int STATIC_DUTY5 = 2,
        int STATIC_DUTY6 = 2,
        int STATIC_DUTYF = 2,
        int STATIC_PHASE = 0 /* 0 ~ 63 */,
        int STATIC_PHASE0 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE1 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE2 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE3 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE4 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE5 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE6 = 0 /* 0 ~ 7 */,
        int STATIC_PHASEF = 0 /* 0 ~ 7 */,
        int STATIC_CPHASE0 = 0 /* 0 ~ 127 */,
        int STATIC_CPHASE1 = 0 /* 0 ~ 127 */,
        int STATIC_CPHASE2 = 0 /* 0 ~ 127 */,
        int STATIC_CPHASE3 = 0 /* 0 ~ 127 */,
        int STATIC_CPHASE4 = 0 /* 0 ~ 127 */,
        int STATIC_CPHASE5 = 0 /* 0 ~ 127 */,
        int STATIC_CPHASE6 = 0 /* 0 ~ 127 */,
        int STATIC_CPHASEF = 0 /* 0 ~ 127 */,
        string CLK_DPS0_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_DPS1_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_DPS2_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_DPS3_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_DPS4_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_DPS5_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_DPS6_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_DPSF_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLK_CAS5_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT0_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT1_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT2_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT3_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT4_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT5_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT6_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUTF_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string SSC_MODE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "DOWN_LOW | DOWN_HIGH | CENTER_LOW | CENTER_HIGH | DISABLE" */,
        real SSC_FREQ = 50.0,
        string INTERNAL_FB = "CLKOUTF" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "DISABLE | CLKOUT0 | CLKOUT1 | CLKOUT2 | CLKOUT3 | CLKOUT4 | CLKOUT5 | CLKOUT6 | CLKOUTF" */,
        string EXTERNAL_FB = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "DISABLE | CLKOUT0 | CLKOUT1 | CLKOUT2 | CLKOUT3 | CLKOUT4 | CLKOUT5 | CLKOUT6 | CLKOUTF" */,
        string BANDWIDTH = "OPTIMIZED" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "OPTIMIZED | LOW | HIGH" */
    );

    port
    (
        output CLKOUT0,
        output CLKOUT0N,
        output CLKOUT1,
        output CLKOUT1N,
        output CLKOUT2,
        output CLKOUT2N,
        output CLKOUT3,
        output CLKOUT3N,
        output CLKOUT4,
        output CLKOUT5,
        output CLKOUT6,
        output CLKOUTF,
        output CLKOUTFN,
        output LOCK,
        output DPS_DONE,
        output APB_RDATA[15:0],
        output APB_READY,
        input CLKIN1,
        input CLKIN2,
        input CLKFB,
        input CLKIN_SEL,
        input DPS_CLK,
        input DPS_EN,
        input DPS_DIR,
        input CLKOUT0_SYN,
        input CLKOUT1_SYN,
        input CLKOUT2_SYN,
        input CLKOUT3_SYN,
        input CLKOUT4_SYN,
        input CLKOUT5_SYN,
        input CLKOUT6_SYN,
        input CLKOUTF_SYN,
        input PLL_PWD,
        input RST,
        input APB_CLK,
        input APB_RST_N,
        input APB_ADDR[4:0],
        input APB_SEL,
        input APB_EN,
        input APB_WRITE,
        input APB_WDATA[15:0]
    );
};

design
operator V_PPLL
{
    parameter
    (
        real CLKIN_FREQ = 50.0,
        int LOCK_MODE = 0,
        int STATIC_RATIOI = 1 /* 1 ~ 128 */,
        int STATIC_RATIOM = 1 /* 1 ~ 128 */,
        int STATIC_RATIO0 = 1 /* 1 ~ 128 */,
        int STATIC_RATIO1 = 1 /* 1 ~ 128 */,
        int STATIC_RATIO2 = 1 /* 1 ~ 128 */,
        int STATIC_RATIO3 = 1 /* 1 ~ 128 */,
        int STATIC_RATIO4 = 1 /* 1 ~ 128 */,
        int STATIC_RATIOPHY = 1 /* 1 ~ 128 */,
        int STATIC_RATIOF = 1 /* 1 ~ 128 */,
        int STATIC_DUTY0 = 2,
        int STATIC_DUTY1 = 2,
        int STATIC_DUTY2 = 2,
        int STATIC_DUTY3 = 2,
        int STATIC_DUTY4 = 2,
        int STATIC_DUTYPHY = 2,
        int STATIC_DUTYF = 2,
        int STATIC_PHASE0 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE1 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE2 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE3 = 0 /* 0 ~ 7 */,
        int STATIC_PHASE4 = 0 /* 0 ~ 7 */,
        int STATIC_PHASEPHY = 0 /* 0 ~ 7 */,
        int STATIC_PHASEF = 0 /* 0 ~ 7 */,
        int STATIC_CPHASE0 = 0 /* 0 ~ 127 */,
        int STATIC_CPHASE1 = 0 /* 0 ~ 127 */,
        int STATIC_CPHASE2 = 0 /* 0 ~ 127 */,
        int STATIC_CPHASE3 = 0 /* 0 ~ 127 */,
        int STATIC_CPHASE4 = 0 /* 0 ~ 127 */,
        int STATIC_CPHASEPHY = 0 /* 0 ~ 127 */,
        int STATIC_CPHASEF = 0 /* 0 ~ 127 */,
        string CLKOUT0_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT1_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT2_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT3_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUT4_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUTPHY_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKOUTF_SYN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string INTERNAL_FB = "CLKOUTF" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "DISABLE | CLKOUT0 | CLKOUT1 | CLKOUT2 | CLKOUT3 | CLKOUT4 | CLKOUTF" */,
        string EXTERNAL_FB = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "DISABLE | CLKOUT0 | CLKOUT1 | CLKOUT2 | CLKOUT3 | CLKOUT4 | CLKOUTF" */,
        string BANDWIDTH = "OPTIMIZED" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "OPTIMIZED | LOW | HIGH" */
    );

    port
    (
        output CLKOUT0,
        output CLKOUT0N,
        output CLKOUT1,
        output CLKOUT1N,
        output CLKOUT2,
        output CLKOUT2N,
        output CLKOUT3,
        output CLKOUT3N,
        output CLKOUT4,
        //output CLKOUT4N,
        output CLKOUTPHY,
        output CLKOUTPHYN,
        output CLKOUTF,
        output CLKOUTFN,
        output LOCK,
        output APB_RDATA[15:0],
        output APB_READY,
        input CLKIN1,
        input CLKIN2,
        input CLKFB,
        input CLKIN_SEL,
        input CLKOUT0_SYN,
        input CLKOUT1_SYN,
        input CLKOUT2_SYN,
        input CLKOUT3_SYN,
        input CLKOUT4_SYN,
        input CLKOUTPHY_SYN,
        input CLKOUTF_SYN,
        input PLL_PWD,
        input RST,
        input APB_CLK,
        input APB_RST_N,
        input APB_ADDR[4:0],
        input APB_SEL,
        input APB_EN,
        input APB_WRITE,
        input APB_WDATA[15:0]
    );
};

design
operator V_LUT6CARRY
{
    parameter
    (
        bit INIT[63:0] = 64'b0000000000000000000000000000000000000000000000000000000000000000,
        string I5_TO_CARRY = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string I5_TO_LUT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        output COUT,
        output Z,
        output Z5,
        input CIN,
        input I0,
        input I1,
        input I2,
        input I3,
        input I4,
        input I5
    );
};

//design
//operator V_LUT6D
//{
//    parameter
//    (
//        bit INIT[63:0] = 64'b0000000000000000000000000000000000000000000000000000000000000000
//    );
//
//    port
//    (
//        output Z,
//        output Z5,
//        input I0,
//        input I1,
//        input I2,
//        input I3,
//        input I4,
//        input I5
//    );
//};

design
operator V_RAM64X1
{
    parameter
    (
        bit INIT[63:0] = 64'h0000000000000000,
        bit CS_MASK[1:0] = 2'b00,
        string WE_POL = "FALSE"
    );

    port
    (
        output RDO,
        input  WDI,
        input  RADDR[5:0],
        input  WADDR[5:0],
        input  CS[1:0],
        input  WCLK,
        input  WE
    );
};

design
operator V_IODELAY_E2
{
    parameter
    (
        //string LDO_CTRL = "26ps", // "26ps", "24ps", "22ps", "20ps"
        string DELAY_STEP_SEL = "PARAMETER", // "PARAMETER", "PORT"
        bit DELAY_STEP_VALUE[7:0] = 8'h00
    );
    port
    (
        output DO,
        input  DI,
        input  DELAY_SEL,
        input  DELAY_STEP[7:0]
    );
};

design
operator V_ZEROHOLDDELAY
{
    parameter
    (
        string ZHOLD_SET = "NODELAY"
    );

    port
    (
        output DO,
        input DI
    );
};

design
operator V_ADC_E2
{
    parameter
    (
        bit CREG_00H[15:0] = 16'b0000000000000000,
        bit CREG_01H[15:0] = 16'b0000000000000000,
        bit CREG_02H[15:0] = 16'b0000000000000000,
        bit CREG_31H[13:0] = 14'b00000000000000,
        bit CREG_03H[15:0] = 16'b0000000000000000,
        bit CREG_04H[15:0] = 16'b0000000000000000,
        bit CREG_0AH[15:0] = 16'b0000000000000000,
        bit CREG_05H[15:0] = 16'b0000000000000000,
        bit CREG_06H[15:0] = 16'b0000000000000000,
        bit CREG_0CH[15:0] = 16'b0000000000000000,
        bit CREG_07H[15:0] = 16'b0000000000000000,
        bit CREG_08H[15:0] = 16'b0000000000000000,
        bit CREG_0EH[15:0] = 16'b0000000000000000,
        bit CREG_20H[11:0] = 12'b000000000000,
        bit CREG_21H[11:0] = 12'b000000000000,
        bit CREG_22H[11:0] = 12'b000000000000,
        bit CREG_23H[11:0] = 12'b000000000000,
        bit CREG_24H[11:0] = 12'b000000000000,
        bit CREG_25H[11:0] = 12'b000000000000,
        bit CREG_26H[11:0] = 12'b000000000000,
        bit CREG_27H[11:0] = 12'b000000000000,
        bit CREG_28H[11:0] = 12'b000000000000,
        bit CREG_29H[11:0] = 12'b000000000000,
        bit CREG_2AH[11:0] = 12'b000000000000,
        bit CREG_2BH[11:0] = 12'b000000000000
    );

    port
    (
        input VA[1:0],
        input VAUX[31:0],
        input DCLK,
        input DADDR[7:0],
        input DEN,
        input SECEN,
        input DWE,
        input DI[15:0],
        output DO[15:0],
        output DRDY,
        input CONVST,
        input RST_N,
        input LOADSC_N,
        output OVER_TEMP,
        output LOGIC_DONE_A,
        output LOGIC_DONE_B,
        output ADC_CLK_OUT,
        output DMODIFIED,
        output ALARM[4:0]
    );
};

design
operator V_CLKBUFGMUX_E1
{
    parameter
    (
        string TRIGGER_MODE = "NEGEDGE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NEGEDGE | POSEDGE" */,
        string INIT_SEL = "CLK0"
    );

    port
    (
        output CLKOUT,
        input CLKIN0,
        input CLKIN1,
        input SEL,
        input EN
    );
};

design
operator V_CLKBUFGMUX_E2
{
    parameter
    (
        string TRIGGER_MODE = "NEGEDGE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "NEGEDGE | POSEDGE" */,
        string INIT_SEL = "CLK0"
    );

    port
    (
        output CLKOUT,
        input CLKIN0,
        input CLKIN1,
        input DETECT_CLK0,
        input DETECT_CLK1,
        input SEL
    );
};

design
operator V_RAM32X2
{
    parameter
    (
        bit INIT0[31:0] = 32'h00000000,
        bit INIT1[31:0] = 32'h00000000,
        string WE_POL = "FALSE"
    );

    port
    (
        output RDO[1:0],
        input  WDI[1:0],
        input  RADDR[4:0],
        input  WADDR[4:0],
        input  WCLK,
        input  WE
    );
};

design
operator V_ISERDES_E2
{
    parameter
    (
        string ISERDES_MODE = "SDR1TO4",
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CASCADE_MODE = "MASTER",
        string BITSLIP_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int NUM_ICE = 0,
        string GRS_TYPE_Q0 = "RESET",
        string GRS_TYPE_Q1 = "RESET",
        string GRS_TYPE_Q2 = "RESET",
        string GRS_TYPE_Q3 = "RESET",
        string LRS_TYPE_Q0 = "ASYNC_RESET",
        string LRS_TYPE_Q1 = "ASYNC_RESET",
        string LRS_TYPE_Q2 = "ASYNC_RESET",
        string LRS_TYPE_Q3 = "ASYNC_RESET"
    );

    port
    (
        input RST,
        input ICE0,
        input ICE1,
        input DESCLK,
        input ICLK,
        input OCLK,
        input ICLKDIV,
        input DI,
        input BITSLIP,
        input ISHIFTIN0,
        input ISHIFTIN1,
        input IFIFO_WADDR[2:0],
        input IFIFO_RADDR[2:0],
        output DO[7:0],
        output ISHIFTOUT0,
        output ISHIFTOUT1
    );
};

design
operator V_OSERDES_E2
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string OSERDES_MODE = "SDR4TO1",
        string TSERDES_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string UPD0_SHIFT_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string UPD1_SHIFT_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit INIT_SET[1:0] = 2'b00,
        string GRS_TYPE_DQ = "RESET",
        string LRS_TYPE_DQ0 = "ASYNC_RESET",
        string LRS_TYPE_DQ1 = "ASYNC_RESET",
        string LRS_TYPE_DQ2 = "ASYNC_RESET",
        string LRS_TYPE_DQ3 = "ASYNC_RESET",
        string GRS_TYPE_TQ = "RESET",
        string LRS_TYPE_TQ0 = "ASYNC_RESET",
        string LRS_TYPE_TQ1 = "ASYNC_RESET",
        string LRS_TYPE_TQ2 = "ASYNC_RESET",
        string LRS_TYPE_TQ3 = "ASYNC_RESET",
        string TRI_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string TBYTE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string MIPI_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string OCASCADE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        input RST,
        input OCE,
        input TCE,
        input OCLKDIV,
        input SERCLK,
        input OCLK,
        input MIPI_CTRL,
        input UPD0_SHIFT,
        input UPD1_SHIFT,
        input OSHIFTIN0,
        input OSHIFTIN1,
        input DI[7:0],
        input TI[1:0],
        input TBYTE_IN,
        output OSHIFTOUT0,
        output OSHIFTOUT1,
        output TQ,
        output DO
    );
};

design
operator V_DLL_E2
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit CAL_INIT[7:0] = 8'b00011111,
        int DELAY_STEP_OFFSET = 0,
        bit DELAY_SEL = 1'b0,
        string FAST_LOCK = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit FDIV[1:0] = 2'b01,
        bit INT_CLK = 1'b0,
        bit UPD_DLY[1:0] = 2'b00
    );

    port
    (
        output DELAY_STEP[7:0],
        output DELAY_STEP1[7:0],
        output LOCK,
        input CLKIN,
        input SYS_CLK,
        input PWD,
        input RST,
        input UPDATE_N
    );
};

design
operator V_DDC_E2
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string CLKA_GATE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string WCLK_DELAY_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DDC_MODE = "QUAD_RATE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "HALF_RATE | QUAD_RATE" */,
        string R_EXTEND = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit DELAY_SEL = 1'b0,
        string IFIFO_GENERIC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        bit RADDR_INIT[2:0] = 3'b000,
        bit DATA_RATE[1:0] = 2'b00
    );

    port
    (
        output WCLK,
        output WCLK_DELAY,
        output DQSI_DELAY,
        output DQSIB_DELAY,
        output DGTS,
        output IFIFO_WADDR[2:0],
        output IFIFO_RADDR[2:0],
        output READ_VALID,
        output DQS_DRIFT[1:0],
        output DRIFT_DETECT_ERR,
        output DQS_DRIFT_STATUS,
        output DQS_SAMPLE,
        input RST,
        input RST_TRAINING_N,
        input CLKA /* pragma PAP_IS_CLOCK_PIN */,
        input CLKB /* pragma PAP_IS_CLOCK_PIN */,
        input DQSI,
        input DQSIB,
        input DELAY_STEP0[7:0],
        input DELAY_STEP1[7:0],
        input DELAY_STEP2[7:0],
        input DELAY_STEP3[7:0],
        input DELAY_STEP4[7:0],
        input DQS_GATE_CTRL[3:0],
        input GATE_SEL,
        input CLK_GATE_CTRL[1:0],
        input CLKA_GATE
    );
};

design
operator V_CLKPD
{
    port
    (
        output FLAG_PD,
        output LOCK,
        input RST,
        input CLK_SAMPLE,
        input CLK_CTRL,
        input CLK_PHY,
        input DONE
    );
};

design
operator V_IPAL_E2
{
    parameter
    (
        string DATA_WIDTH = "X8" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "X8 | X16 | X32" */,
        bit IDCODE[31:0] = 32'hAAAA5555,
        string SIM_DEVICE = "PG2L100H"
    );

    port
    (
        output DO[31:0],
        output RBCRC_ERR,
        output RBCRC_VALID,
        output ECC_VALID,
        output ECC_INDEX[11:0],
        output SERROR,
        output DERROR,
        output SEU_FRAME_ADDR[7:0],
        output SEU_COLUMN_ADDR[7:0],
        output SEU_REGION_ADDR[4:0],
        output SEU_FRAME_NADDR[7:0],
        output SEU_COLUMN_NADDR[7:0],
        output SEU_REGION_NADDR[4:0],
        output PRCFG_OVER,
        output PRCFG_ERR,
        output DRCFG_OVER,
        output DRCFG_ERR,
        input  RST_N,
        input  CLK,
        input  CS_N,
        input  RW_SEL,
        input  DI[31:0]
    );
};

design
operator V_JTAGIF
{
    parameter
    (
        bit USERCODE[31:0] = 32'hFFFFFFFF,
        bit IDCODE[31:0] = 32'h5555AAAA
    );

    port
    (
        output TDO,
        input TCK,
        input TMS,
        input TDI
    );
};

design
operator V_PCIEGEN2
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PIN_MUX_INT_FORCE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PIN_MUX_INT_DISABLE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string DIAG_CTRL_BUS_B2 = "NORMAL",
        string DYN_DEBUG_SEL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int DEBUG_INFO_SEL = 0,
        int BAR_RESIZABLE = 21,
        int NUM_OF_RBARS = 3,
        int BAR_INDEX_0 = 0,
        int BAR_INDEX_1 = 2,
        int BAR_INDEX_2 = 4,
        string TPH_DISABLE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string MSIX_CAP_DISABLE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string MSI_CAP_DISABLE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string MSI_PVM_DISABLE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int BAR_MASK_WRITABLE = 32,
        int APP_DEV_NUM = 0,
        int APP_BUS_NUM = 0,
        string RAM_MUX_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string ATOMIC_DISABLE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        input MEM_CLK,
        input PCLK,
        input PCLK_DIV2,
        input BUTTON_RST,
        input POWER_UP_RST,
        input PERST,
        output CORE_RST_N,
        output TRAINING_RST_N,
        input APP_INIT_RST,
        output PHY_RST_N,
        input DEVICE_TYPE[2:0],
        input RX_LANE_FLIP_EN,
        input TX_LANE_FLIP_EN,
        input APP_LTSSM_EN,
        output SMLH_LINK_UP,
        output RDLH_LINK_UP,
        input APP_REQ_RETRY_EN,
        output SMLH_LTSSM_STATE[4:0],
        output AXIS_MASTER_TVALID,
        input AXIS_MASTER_TREADY,
        output AXIS_MASTER_TDATA[127:0],
        output AXIS_MASTER_TKEEP[3:0],
        output AXIS_MASTER_TLAST,
        output AXIS_MASTER_TUSER[7:0],
        input TRGT1_RADM_PKT_HALT[2:0],
        output RADM_GRANT_TLP_TYPE[5:0],
        output AXIS_SLAVE0_TREADY,
        input AXIS_SLAVE0_TVALID,
        input AXIS_SLAVE0_TDATA[127:0],
        input AXIS_SLAVE0_TLAST,
        input AXIS_SLAVE0_TUSER,
        output AXIS_SLAVE1_TREADY,
        input AXIS_SLAVE1_TVALID,
        input AXIS_SLAVE1_TDATA[127:0],
        input AXIS_SLAVE1_TLAST,
        input AXIS_SLAVE1_TUSER,
        output AXIS_SLAVE2_TREADY,
        input AXIS_SLAVE2_TVALID,
        input AXIS_SLAVE2_TDATA[127:0],
        input AXIS_SLAVE2_TLAST,
        input AXIS_SLAVE2_TUSER,
        output PM_XTLH_BLOCK_TLP,
        input DBI_ADDR[31:0],
        input DBI_DIN[31:0],
        input DBI_CS,
        input DBI_CS2,
        input DBI_WR[3:0],
        input APP_DBI_RO_WR_DISABLE,
        output LBC_DBI_ACK,
        output LBC_DBI_DOUT[31:0],
        output SEDO,
        output SEDO_EN,
        input SEDI,
        input SEDI_ACK,
        output CFG_INT_DISABLE,
        input SYS_INT,
        output INTA_GRT_MUX,
        output INTB_GRT_MUX,
        output INTC_GRT_MUX,
        output INTD_GRT_MUX,
        input VEN_MSI_REQ,
        input VEN_MSI_TC[2:0],
        input VEN_MSI_VECTOR[4:0],
        output VEN_MSI_GRANT,
        input CFG_MSI_PENDING[31:0],
        output CFG_MSI_EN,
        input MSIX_ADDR[63:0],
        input MSIX_DATA[31:0],
        output CFG_MSIX_EN,
        output CFG_MSIX_FUNC_MASK,
        output RADM_PM_TURNOFF,
        output RADM_MSG_UNLOCK,
        input OUTBAND_PWRUP_CMD,
        output PM_STATUS,
        output PM_DSTATE[2:0],
        output AUX_PM_EN,
        output PM_PME_EN,
        output PM_LINKST_IN_L0S,
        output PM_LINKST_IN_L1,
        output PM_LINKST_IN_L2,
        output PM_LINKST_L2_EXIT,
        input APP_REQ_ENTR_L1,
        input APP_READY_ENTR_L23,
        input APP_REQ_EXIT_L1,
        input APP_XFER_PENDING,
        output WAKE,
        output RADM_PM_PME,
        output RADM_PM_TO_ACK,
        input APPS_PM_XMT_TURNOFF,
        input APP_UNLOCK_MSG,
        input APPS_PM_XMT_PME,
        input APP_CLK_PM_EN,
        output PM_MASTER_STATE[4:0],
        output PM_SLAVE_STATE[4:0],
        input SYS_AUX_PWR_DET,
        input APP_HDR_VALID,
        input APP_HDR_LOG[127:0],
        input APP_ERR_BUS[12:0],
        input APP_ERR_ADVISORY,
        output CFG_SEND_COR_ERR_MUX,
        output CFG_SEND_NF_ERR_MUX,
        output CFG_SEND_F_ERR_MUX,
        output CFG_SYS_ERR_RC,
        output CFG_AER_RC_ERR_MUX,
        output RADM_CPL_TIMEOUT,
        output RADM_TIMEOUT_CPL_TC[2:0],
        output RADM_TIMEOUT_CPL_TAG[7:0],
        output RADM_TIMEOUT_CPL_ATTR[1:0],
        output RADM_TIMEOUT_CPL_LEN[10:0],
        output CFG_MAX_RD_REQ_SIZE[2:0],
        output CFG_BUS_MASTER_EN,
        output CFG_MAX_PAYLOAD_SIZE[2:0],
        output CFG_RCB,
        output CFG_MEM_SPACE_EN,
        output CFG_PM_NO_SOFT_RST,
        output CFG_CRS_SW_VIS_EN,
        output CFG_NO_SNOOP_EN,
        output CFG_RELAX_ORDER_EN,
        output CFG_TPH_REQ_EN[1:0],
        output CFG_PF_TPH_ST_MODE[2:0],
        output CFG_PBUS_NUM[7:0],
        output CFG_PBUS_DEV_NUM[4:0],
        output RBAR_CTRL_UPDATE,
        output CFG_ATOMIC_REQ_EN,
        output CFG_ATOMIC_EGRESS_BLOCK,
        output CFG_EXT_TAG_EN,
        output RADM_IDLE,
        output RADM_Q_NOT_EMPTY,
        output RADM_QOVERFLOW,
        input DIAG_CTRL_BUS[1:0],
        input DYN_DEBUG_INFO_SEL[3:0],
        output CFG_LINK_AUTO_BW_MUX,
        output CFG_BW_MGT_MUX,
        output CFG_PME_MUX,
        output DEBUG_INFO_MUX[132:0],
        input APP_RAS_DES_SD_HOLD_LTSSM,
        input APP_RAS_DES_TBA_CTRL[1:0],
        output CFG_IDO_REQ_EN,
        output CFG_IDO_CPL_EN,
        output XADM_PH_CDTS[7:0],
        output XADM_PD_CDTS[11:0],
        output XADM_NPH_CDTS[7:0],
        output XADM_NPD_CDTS[11:0],
        output XADM_CPLH_CDTS[7:0],
        output XADM_CPLD_CDTS[11:0],
        output MAC_PHY_POWERDOWN[1:0],
        input PHY_MAC_RXELECIDLE[3:0],
        input PHY_MAC_PHYSTATUS[3:0],
        input PHY_MAC_RXDATA[127:0],
        input PHY_MAC_RXDATAK[15:0],
        input PHY_MAC_RXVALID[3:0],
        input PHY_MAC_RXSTATUS[11:0],
        output MAC_PHY_TXDATA[127:0],
        output MAC_PHY_TXDATAK[15:0],
        output MAC_PHY_TXDETECTRX_LOOPBACK[3:0],
        output MAC_PHY_TXELECIDLE_L[3:0],
        output MAC_PHY_TXELECIDLE_H[3:0],
        output MAC_PHY_TXCOMPLIANCE[3:0],
        output MAC_PHY_RXPOLARITY[3:0],
        output MAC_PHY_RATE,
        output MAC_PHY_TXDEEMPH[1:0],
        output MAC_PHY_TXMARGIN[2:0],
        output MAC_PHY_TXSWING,
        output CFG_HW_AUTO_SP_DIS,
        input P_DATAQ_DATAOUT[65:0],
        output P_DATAQ_ADDRA[9:0],
        output P_DATAQ_ADDRB[9:0],
        output P_DATAQ_DATAIN[65:0],
        output P_DATAQ_ENA,
        output P_DATAQ_ENB,
        output P_DATAQ_WEA,
        output XDLH_RETRYRAM_ADDR[10:0],
        output XDLH_RETRYRAM_DATA[67:0],
        output XDLH_RETRYRAM_WE,
        output XDLH_RETRYRAM_EN,
        input RETRYRAM_XDLH_DATA[67:0],
        output P_HDRQ_ADDRA[8:0],
        output P_HDRQ_ADDRB[8:0],
        output P_HDRQ_DATAIN[137:0],
        output P_HDRQ_ENA,
        output P_HDRQ_ENB,
        output P_HDRQ_WEA,
        input P_HDRQ_DATAOUT[137:0],
        input RAM_TEST_EN,
        input RAM_TEST_ADDRH,
        input RETRY_TEST_DATA_EN,
        input RAM_TEST_MODE_N,
        input TEST_SE_N,
        input TEST_RST_N,
        input TEST_MODE_N
    );
};

design
operator V_HSSTLP_LANE
{
    parameter
    (
        int MUX_BIAS = 2,
        int PD_CLK = 0,
        int REG_SYNC = 0,
        int REG_SYNC_OW = 0,
        int PLL_LOCK_OW = 0,
        int PLL_LOCK_OW_EN = 0,
        int PCS_SLAVE = 0,
        string PCS_BYPASS_WORD_ALIGN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_BYPASS_DENC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_BYPASS_BONDING = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_BYPASS_CTC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_BYPASS_GEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_BYPASS_BRIDGE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_BYPASS_BRIDGE_FIFO = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_DATA_MODE = "X8",
        string PCS_RX_POLARITY_INV = "DELAY",
        string PCS_ALIGN_MODE = "1GB",
        string PCS_SAMP_16B = "X20",
        string PCS_FARLP_PWR_REDUCTION = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PCS_COMMA_REG0 = 0,
        int PCS_COMMA_MASK = 0,
        string PCS_CEB_MODE = "10GB",
        string PCS_CTC_MODE = "1SKIP",
        int PCS_A_REG = 0,
        string PCS_GE_AUTO_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PCS_SKIP_REG0 = 0,
        int PCS_SKIP_REG1 = 0,
        int PCS_SKIP_REG2 = 0,
        int PCS_SKIP_REG3 = 0,
        string PCS_DEC_DUAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_SPLIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_FIFOFLAG_CTC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_COMMA_DET_MODE = "COMMA_PATTERN",
        string PCS_ERRDETECT_SILENCE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_PMA_RCLK_POLINV = "PMA_RCLK",
        string PCS_PCS_RCLK_SEL = "PMA_RCLK",
        string PCS_CB_RCLK_SEL = "PMA_RCLK",
        string PCS_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        string PCS_RCLK_POLINV = "RCLK",
        string PCS_BRIDGE_RCLK_SEL = "PMA_RCLK",
        string PCS_PCS_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CB_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_AFTER_CTC_RCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_AFTER_CTC_RCLK_EN_GB = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_PCS_RX_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_PCIE_SLAVE = "MASTER",
        string PCS_RX_64B66B_67B = "NORMAL",
        string PCS_RX_BRIDGE_CLK_POLINV = "RX_BRIDGE_CLK",
        string PCS_PCS_CB_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_TX_BRIDGE_GEAR_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_TX_BYPASS_BRIDGE_UINT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_TX_BYPASS_BRIDGE_FIFO = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_TX_BYPASS_GEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_TX_BYPASS_ENC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_TX_BYPASS_BIT_SLIP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_TX_GEAR_SPLIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_TX_DRIVE_REG_MODE = "NO_CHANGE",
        int PCS_TX_BIT_SLIP_CYCLES = 0,
        string PCS_INT_TX_MASK_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_TX_MASK_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_TX_MASK_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_TX_CLR_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_TX_CLR_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_TX_CLR_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        string PCS_TX_PCS_CLK_EN_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_TX_BRIDGE_TCLK_SEL = "TCLK",
        string PCS_TX_TCLK_POLINV = "TCLK",
        string PCS_PCS_TCLK_SEL = "PMA_TCLK",
        string PCS_TX_PCS_TX_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_TX_SLAVE = "MASTER",
        string PCS_TX_GEAR_CLK_EN_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_DATA_WIDTH_MODE = "X20",
        string PCS_TX_64B66B_67B = "NORMAL",
        string PCS_GEAR_TCLK_SEL = "PMA_TCLK",
        string PCS_TX_TCLK2FABRIC_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_TX_OUTZZ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_ENC_DUAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_TX_BITSLIP_DATA_MODE = "X10",
        string PCS_TX_BRIDGE_CLK_POLINV = "TX_BRIDGE_CLK",
        int PCS_COMMA_REG1 = 0,
        int PCS_RAPID_IMAX = 0,
        int PCS_RAPID_VMIN_1 = 0,
        int PCS_RAPID_VMIN_2 = 0,
        string PCS_RX_PRBS_MODE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PCS_RX_ERRCNT_CLR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_PRBS_ERR_LPBK = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_TX_PRBS_MODE = "DISABLE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "ENABLE | DISABLE" */,
        string PCS_TX_INSERT_ER = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_ENABLE_PRBS_GEN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PCS_DEFAULT_RADDR = 0,
        int PCS_MASTER_CHECK_OFFSET = 0,
        int PCS_DELAY_SET = 0,
        string PCS_SEACH_OFFSET = "20BIT",
        int PCS_CEB_RAPIDLS_MMAX = 0,
        int PCS_CTC_AFULL = 20,
        int PCS_CTC_AEMPTY = 12,
        int PCS_CTC_CONTI_SKP_SET = 0,
        string PCS_FAR_LOOP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_NEAR_LOOP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_PMA_TX2RX_PLOOP_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_PMA_TX2RX_SLOOP_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_PMA_RX2TX_PLOOP_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_MASK_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_MASK_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_MASK_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_MASK_3 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_MASK_4 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_MASK_5 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_MASK_6 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_MASK_7 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_CLR_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_CLR_1 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_CLR_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_CLR_3 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_CLR_4 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_CLR_5 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_CLR_6 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_INT_RX_CLR_7 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CA_RSTN_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CA_DYN_DLY_EN_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CA_DYN_DLY_SEL_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PCS_CA_RX = 0,
        string PCS_CA_RSTN_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CA_DYN_DLY_EN_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PCS_CA_DYN_DLY_SEL_TX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PCS_CA_TX = 0,
        string PCS_RXPRBS_PWR_REDUCTION = "NORMAL",
        string PCS_WDALIGN_PWR_REDUCTION = "NORMAL",
        string PCS_RXDEC_PWR_REDUCTION = "NORMAL",
        string PCS_RXCB_PWR_REDUCTION = "NORMAL",
        string PCS_RXCTC_PWR_REDUCTION = "NORMAL",
        string PCS_RXGEAR_PWR_REDUCTION = "NORMAL",
        string PCS_RXBRG_PWR_REDUCTION = "NORMAL",
        string PCS_RXTEST_PWR_REDUCTION = "NORMAL",
        string PCS_TXBRG_PWR_REDUCTION = "NORMAL",
        string PCS_TXGEAR_PWR_REDUCTION = "NORMAL",
        string PCS_TXENC_PWR_REDUCTION = "NORMAL",
        string PCS_TXBSLP_PWR_REDUCTION = "NORMAL",
        string PCS_TXPRBS_PWR_REDUCTION = "NORMAL",
        string PMA_REG_RX_PD = "ON",
        string PMA_REG_RX_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_RESERVED_2 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_RESERVED_3 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_DATAPATH_PD = "ON",
        string PMA_REG_RX_DATAPATH_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_SIGDET_PD = "ON",
        string PMA_REG_RX_SIGDET_PD_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_DCC_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_DCC_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_CDR_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_CDR_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_SIGDET_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_SIGDET_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RXPCLK_SLIP = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RXPCLK_SLIP_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_PCLKSWITCH_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_PCLKSWITCH_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_PCLKSWITCH = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_PCLKSWITCH_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_HIGHZ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_HIGHZ_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_SIGDET_CLK_WINDOW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_SIGDET_CLK_WINDOW_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_PD_BIAS_RX = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_PD_BIAS_RX_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_RESET_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_RESET_N_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_RESERVED_29_28 = 0,
        string PMA_REG_RX_BUSWIDTH = "20BIT",
        string PMA_REG_RX_BUSWIDTH_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_RATE = "DIV1",
        string PMA_REG_RX_RESERVED_36 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_RATE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_RES_TRIM = 46,
        string PMA_REG_RX_RESERVED_44 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_RESERVED_45 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_SIGDET_STATUS_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_RESERVED_48_47 = 0,
        int PMA_REG_RX_ICTRL_SIGDET = 5,
        int PMA_REG_CDR_READY_THD = 2734,
        string PMA_REG_RX_RESERVED_65 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_PCLK_EDGE_SEL = "POS_EDGE",
        int PMA_REG_RX_PIBUF_IC = 1,
        string PMA_REG_RX_RESERVED_69 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_DCC_IC_RX = 1,
        int PMA_REG_CDR_READY_CHECK_CTRL = 0,
        string PMA_REG_RX_ICTRL_TRX = "100PCT",
        int PMA_REG_RX_RESERVED_77_76 = 0,
        int PMA_REG_RX_RESERVED_79_78 = 1,
        int PMA_REG_RX_RESERVED_81_80 = 1,
        string PMA_REG_RX_ICTRL_PIBUF = "100PCT",
        string PMA_REG_RX_ICTRL_PI = "100PCT",
        string PMA_REG_RX_ICTRL_DCC = "100PCT",
        int PMA_REG_RX_RESERVED_89_88 = 1,
        string PMA_REG_TX_RATE = "DIV1",
        string PMA_REG_RX_RESERVED_92 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RATE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_TX2RX_PLPBK_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_TX2RX_PLPBK_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_TX2RX_PLPBK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TXCLK_SEL = "PLL",
        string PMA_REG_RX_DATA_POLARITY = "NORMAL",
        string PMA_REG_RX_ERR_INSERT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_UDP_CHK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_PRBS_SEL = "PRBS7",
        string PMA_REG_PRBS_CHK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_PRBS_CHK_WIDTH_SEL = "20BIT",
        string PMA_REG_BIST_CHK_PAT_SEL = "PRBS",
        string PMA_REG_LOAD_ERR_CNT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CHK_COUNTER_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_CDR_PROP_GAIN = 7,
        int PMA_REG_CDR_PROP_TURBO_GAIN = 5,
        int PMA_REG_CDR_INT_GAIN = 7,
        int PMA_REG_CDR_INT_TURBO_GAIN = 5,
        int PMA_REG_CDR_INT_SAT_MAX = 768,
        int PMA_REG_CDR_INT_SAT_MIN = 255,
        string PMA_REG_CDR_INT_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_INT_RST_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_PROP_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_PROP_RST_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_LOCK_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_LOCK_RST_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_CDR_RX_PI_FORCE_SEL = 0,
        int PMA_REG_CDR_RX_PI_FORCE_D = 0,
        string PMA_REG_CDR_LOCK_TIMER = "1_2U",
        int PMA_REG_CDR_TURBO_MODE_TIMER = 1,
        string PMA_REG_CDR_LOCK_VAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_LOCK_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_INT_SAT_DET_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_SAT_AUTO_DIS = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_GAIN_AUTO = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_TURBO_GAIN_AUTO = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_RESERVED_171_167 = 0,
        int PMA_REG_RX_RESERVED_175_172 = 0,
        string PMA_REG_CDR_SAT_DET_STATUS_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_SAT_DET_STATUS_RESET_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_PI_CTRL_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_PI_CTRL_RST_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_SAT_DET_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_SAT_DET_RST_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_SAT_DET_STICKY_RST = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_SAT_DET_STICKY_RST_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_SIGDET_STATUS_DIS = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_CDR_SAT_DET_TIMER = 2,
        string PMA_REG_CDR_SAT_DET_STATUS_VAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_SAT_DET_STATUS_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CDR_TURBO_MODE_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_RESERVED_190 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_RESERVED_193_191 = 0,
        string PMA_REG_CDR_STATUS_FIFO_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_PMA_TEST_SEL = 0,
        int PMA_REG_OOB_COMWAKE_GAP_MIN = 3,
        int PMA_REG_OOB_COMWAKE_GAP_MAX = 11,
        int PMA_REG_OOB_COMINIT_GAP_MIN = 15,
        int PMA_REG_OOB_COMINIT_GAP_MAX = 35,
        int PMA_REG_RX_RESERVED_227_226 = 1,
        int PMA_REG_COMWAKE_STATUS_CLEAR = 0,
        int PMA_REG_COMINIT_STATUS_CLEAR = 0,
        string PMA_REG_RX_SYNC_RST_N_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_SYNC_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_RESERVED_233_232 = 0,
        int PMA_REG_RX_RESERVED_235_234 = 0,
        string PMA_REG_RX_SATA_COMINIT_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_SATA_COMINIT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_SATA_COMWAKE_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_SATA_COMWAKE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_RESERVED_241_240 = 0,
        string PMA_REG_RX_DCC_DISABLE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_RESERVED_243 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_SLIP_SEL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_SLIP_SEL = 0,
        string PMA_REG_RX_SLIP_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_SIGDET_STATUS_SEL = 5,
        string PMA_REG_RX_SIGDET_FSM_RST_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_RESERVED_254 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_SIGDET_STATUS = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_SIGDET_VTH = "27MV",
        int PMA_REG_RX_SIGDET_GRM = 0,
        string PMA_REG_RX_SIGDET_PULSE_EXT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_SIGDET_CH2_SEL = 0,
        int PMA_REG_RX_SIGDET_CH2_CHK_WINDOW = 3,
        string PMA_REG_RX_SIGDET_CHK_WINDOW_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING = 4,
        string PMA_REG_SLIP_FIFO_INV_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_SLIP_FIFO_INV = "POS_EDGE",
        int PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL = 0,
        int PMA_REG_RX_SIGDET_4OOB_DET_SEL = 7,
        int PMA_REG_RX_RESERVED_285_283 = 0,
        string PMA_REG_RX_RESERVED_286 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_SIGDET_IC_I = 10,
        string PMA_REG_RX_OOB_DETECTOR_RESET_N_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_OOB_DETECTOR_RESET_N = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_OOB_DETECTOR_PD_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_OOB_DETECTOR_PD = "ON",
        string PMA_REG_RX_LS_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_EQ1_R_SET_TOP = 0,
        int PMA_REG_RX_EQ1_R_SET_FB = 0,
        int PMA_REG_RX_EQ1_C_SET_FB = 0,
        string PMA_REG_RX_EQ1_OFF = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_EQ2_R_SET_TOP = 0,
        int PMA_REG_RX_EQ2_R_SET_FB = 0,
        int PMA_REG_RX_EQ2_C_SET_FB = 0,
        string PMA_REG_RX_EQ2_OFF = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_EQ_DAC = 0,
        int PMA_REG_RX_ICTRL_EQ = 2,
        string PMA_REG_EQ_DC_CALIB_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_EQ_DC_CALIB_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_RESERVED_337_330 = 0,
        int PMA_REG_RX_RESERVED_345_338 = 0,
        int PMA_REG_RX_RESERVED_353_346 = 0,
        int PMA_REG_RX_RESERVED_361_354 = 0,
        int PMA_CTLE_CTRL_REG_I = 0,
        string PMA_CTLE_REG_FORCE_SEL_I = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CTLE_REG_HOLD_I = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CTLE_REG_INIT_DAC_I = 0,
        string PMA_CTLE_REG_POLARITY_I = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_CTLE_REG_SHIFTER_GAIN_I = 0,
        int PMA_CTLE_REG_THRESHOLD_I = 0,
        string PMA_REG_RX_RES_TRIM_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_RESERVED_393_389 = 0,
        string PMA_CFG_RX_LANE_POWERUP = "OFF",
        string PMA_CFG_RX_PMA_RSTN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_INT_PMA_RX_MASK_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_INT_PMA_RX_CLR_0 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_CFG_CTLE_ADP_RSTN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_PD = "ON",
        string PMA_REG_TX_PD_OW = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_MAIN_PRE_Z = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_MAIN_PRE_Z_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_BEACON_TIMER_SEL = 0,
        string PMA_REG_TX_RXDET_REQ_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RXDET_REQ = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_BEACON_EN_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_BEACON_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_EI_EN_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_EI_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_BIT_CONV = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_RES_CAL = 50,
        string PMA_REG_TX_RESERVED_19 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_RESERVED_25_20 = 32,
        int PMA_REG_TX_RESERVED_33_26 = 0,
        int PMA_REG_TX_RESERVED_41_34 = 0,
        int PMA_REG_TX_RESERVED_49_42 = 0,
        int PMA_REG_TX_RESERVED_57_50 = 0,
        string PMA_REG_TX_SYNC_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_SYNC = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_PD_POST = "OFF",
        string PMA_REG_TX_PD_POST_OW = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RESET_N_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RESET_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RESERVED_64 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RESERVED_65 = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_BUSWIDTH_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_BUSWIDTH = "20BIT",
        string PMA_REG_PLL_READY_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_PLL_READY = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RESERVED_72 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RESERVED_73 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RESERVED_74 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_EI_PCLK_DELAY_SEL = 0,
        string PMA_REG_TX_RESERVED_77 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_RESERVED_83_78 = 0,
        int PMA_REG_TX_RESERVED_89_84 = 0,
        int PMA_REG_TX_RESERVED_95_90 = 0,
        int PMA_REG_TX_RESERVED_101_96 = 0,
        int PMA_REG_TX_RESERVED_107_102 = 0,
        int PMA_REG_TX_RESERVED_113_108 = 0,
        int PMA_REG_TX_AMP_DAC0 = 25,
        int PMA_REG_TX_AMP_DAC1 = 19,
        int PMA_REG_TX_AMP_DAC2 = 14,
        int PMA_REG_TX_AMP_DAC3 = 9,
        int PMA_REG_TX_RESERVED_143_138 = 5,
        int PMA_REG_TX_MARGIN = 0,
        string PMA_REG_TX_MARGIN_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_RESERVED_149_148 = 0,
        string PMA_REG_TX_RESERVED_150 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_SWING = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_SWING_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RESERVED_153 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RXDET_THRESHOLD = "84MV",
        int PMA_REG_TX_RESERVED_157_156 = 0,
        string PMA_REG_TX_BEACON_OSC_CTRL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_RESERVED_160_159 = 0,
        int PMA_REG_TX_RESERVED_162_161 = 0,
        string PMA_REG_TX_TX2RX_SLPBACK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_PCLK_EDGE_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RXDET_STATUS_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RXDET_STATUS = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_PRBS_GEN_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_PRBS_GEN_WIDTH_SEL = "20BIT",
        string PMA_REG_TX_PRBS_SEL = "PRBS7",
        int PMA_REG_TX_UDP_DATA_7_TO_0 = 5,
        int PMA_REG_TX_UDP_DATA_15_TO_8 = 235,
        int PMA_REG_TX_UDP_DATA_19_TO_16 = 3,
        string PMA_REG_TX_RESERVED_192 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_FIFO_WP_CTRL = 4,
        string PMA_REG_TX_FIFO_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_DATA_MUX_SEL = 0,
        string PMA_REG_TX_ERR_INSERT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_RESERVED_203_200 = 0,
        string PMA_REG_TX_RESERVED_204 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_SATA_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_RESERVED_207_206 = 0,
        string PMA_REG_RATE_CHANGE_TXPCLK_ON_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RATE_CHANGE_TXPCLK_ON = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_CFG_POST1 = 0,
        int PMA_REG_TX_CFG_POST2 = 0,
        int PMA_REG_TX_DEEMP = 0,
        string PMA_REG_TX_DEEMP_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_RESERVED_224_223 = 0,
        string PMA_REG_TX_RESERVED_225 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_RESERVED_229_226 = 0,
        int PMA_REG_TX_OOB_DELAY_SEL = 0,
        string PMA_REG_TX_POLARITY = "NORMAL",
        string PMA_REG_ANA_TX_JTAG_DATA_O_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RESERVED_236 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_LS_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_JTAG_MODE_EN_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_JTAG_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_JTAG_MODE_EN_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_JTAG_MODE_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_RX_JTAG_OE = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_ACJTAG_VHYSTSEL = 0,
        string PMA_REG_TX_RES_CAL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_RX_TERM_MODE_CTRL = 4,
        int PMA_REG_TX_RESERVED_251_250 = 0,
        string PMA_REG_PLPBK_TXPCLK_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RESERVED_253 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RESERVED_254 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RESERVED_255 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RESERVED_256 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_RESERVED_257 = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_PH_SEL = 1,
        int PMA_REG_TX_CFG_PRE = 0,
        int PMA_REG_TX_CFG_MAIN = 0,
        int PMA_REG_CFG_POST = 0,
        string PMA_REG_PD_MAIN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_PD_PRE = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_LS_DATA = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_DCC_BUF_SZ_SEL = 0,
        int PMA_REG_TX_DCC_CAL_CUR_TUNE = 0,
        string PMA_REG_TX_DCC_CAL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_DCC_CUR_SS = 0,
        string PMA_REG_TX_DCC_FA_CTRL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_DCC_RI_CTRL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_ATB_SEL_2_TO_0 = 0,
        int PMA_REG_ATB_SEL_9_TO_3 = 0,
        int PMA_REG_TX_CFG_7_TO_0 = 0,
        int PMA_REG_TX_CFG_15_TO_8 = 0,
        int PMA_REG_TX_CFG_23_TO_16 = 0,
        int PMA_REG_TX_CFG_31_TO_24 = 0,
        string PMA_REG_TX_OOB_EI_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_OOB_EI_EN_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_BEACON_EN_DELAYED = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_BEACON_EN_DELAYED_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_TX_JTAG_DATA = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_REG_TX_RXDET_TIMER_SEL = 87,
        int PMA_REG_TX_CFG1_7_0 = 0,
        int PMA_REG_TX_CFG1_15_8 = 0,
        int PMA_REG_TX_CFG1_23_16 = 0,
        int PMA_REG_TX_CFG1_31_24 = 0,
        string PMA_REG_CFG_LANE_POWERUP = "OFF",
        string PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CFG_TX_LANE_POWERUP_PISO = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_REG_CFG_TX_LANE_POWERUP_DRIVER = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        output P_TX_SDN,
        output P_TX_SDP,
        output P_PCS_RX_MCB_STATUS,
        output P_PCS_LSM_SYNCED,
        output P_CFG_READY,
        output P_CFG_RDATA[7:0],
        output P_CFG_INT,
        output P_RDATA[46:0],
        output P_RCLK2FABRIC,
        output P_TCLK2FABRIC,
        output P_RX_SIGDET_STATUS,
        output P_RX_SATA_COMINIT,
        output P_RX_SATA_COMWAKE,
        output P_RX_LS_DATA,
        output P_RX_READY,
        output P_TEST_STATUS[19:0],
        output P_TX_RXDET_STATUS,
        output P_CA_ALIGN_RX,
        output P_CA_ALIGN_TX,
        output PMA_RCLK,
        output LANE_COUT_BUS_FORWARD[18:0],
        output APATTERN_STATUS_COUT,
        output TXPCLK_PLL,
        input P_RX_SDN,
        input P_RX_SDP,
        input P_RX_CLK_FR_CORE,
        input P_RCLK2_FR_CORE,
        input P_TX_CLK_FR_CORE,
        input P_TCLK2_FR_CORE,
        input P_PCS_TX_RST,
        input P_PCS_RX_RST,
        input P_PCS_CB_RST,
        input P_RXGEAR_SLIP,
        input P_CFG_CLK,
        input P_CFG_RST,
        input P_CFG_PSEL,
        input P_CFG_ENABLE,
        input P_CFG_WRITE,
        input P_CFG_ADDR[11:0],
        input P_CFG_WDATA[7:0],
        input P_TDATA[45:0],
        input P_PCS_WORD_ALIGN_EN,
        input P_RX_POLARITY_INVERT,
        input P_CEB_ADETECT_EN,
        input P_PCS_MCB_EXT_EN,
        input P_PCS_NEAREND_LOOP,
        input P_PCS_FAREND_LOOP,
        input P_PMA_NEAREND_PLOOP,
        input P_PMA_NEAREND_SLOOP,
        input P_PMA_FAREND_PLOOP,
        input P_LANE_PD,
        input P_LANE_RST,
        input P_RX_LANE_PD,
        input P_RX_PMA_RST,
        input P_CTLE_ADP_RST,
        input P_TX_DEEMP[1:0],
        input P_TX_LS_DATA,
        input P_TX_BEACON_EN,
        input P_TX_SWING,
        input P_TX_RXDET_REQ,
        input P_TX_RATE[2:0],
        input P_TX_BUSWIDTH[2:0],
        input P_TX_MARGIN[2:0],
        input P_TX_PMA_RST,
        input P_TX_LANE_PD_CLKPATH,
        input P_TX_LANE_PD_PISO,
        input P_TX_LANE_PD_DRIVER,
        input P_RX_RATE[2:0],
        input P_RX_BUSWIDTH[2:0],
        input P_RX_HIGHZ,
        input P_CIM_CLK_ALIGNER_RX[7:0],
        input P_CIM_CLK_ALIGNER_TX[7:0],
        input P_CIM_DYN_DLY_SEL_RX,
        input P_CIM_DYN_DLY_SEL_TX,
        input P_CIM_START_ALIGN_RX,
        input P_CIM_START_ALIGN_TX,
        input MCB_RCLK,
        input SYNC,
        input RATE_CHANGE,
        input PLL_LOCK_SEL,
        input LANE_CIN_BUS_FORWARD[18:0],
        input APATTERN_STATUS_CIN,
        input CLK_TXP,
        input CLK_TXN,
        input CLK_RX0,
        input CLK_RX90,
        input CLK_RX180,
        input CLK_RX270,
        input PLL_PD_I,
        input PLL_RESET_I,
        input PLL_REFCLK_I,
        input PLL_RES_TRIM_I[5:0],
        output P_TEST_SO0,
        output P_TEST_SO1,
        output P_TEST_SO2,
        output P_TEST_SO3,
        output P_TEST_SO4,
        output P_FOR_PMA_TEST_SO[1:0],
        input P_TEST_SE_N = 1'b1,
        input P_TEST_MODE_N = 1'b1,
        input P_TEST_RSTN,
        input P_TEST_SI0,
        input P_TEST_SI1,
        input P_TEST_SI2,
        input P_TEST_SI3,
        input P_TEST_SI4,
        input P_FOR_PMA_TEST_MODE_N = 1'b1,
        input P_FOR_PMA_TEST_SE_N[1:0] = 2'b11,
        input P_FOR_PMA_TEST_CLK[1:0],
        input P_FOR_PMA_TEST_RSTN[1:0],
        input P_FOR_PMA_TEST_SI[1:0]
    );
};

design
operator V_HSSTLP_PLL
{
    parameter
    (
        int TX_SYNCK_PD = 0,
        string PMA_PLL_REG_REFCLK_TERM_IMP_CTRL = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_BG_TRIM = 2,
        int PMA_PLL_REG_IBUP_A1 = 262143,
        int PMA_PLL_REG_IBUP_A2 = 0,
        int PMA_PLL_REG_IBUP_PD = 0,
        string PMA_PLL_REG_V2I_BIAS_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_V2I_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_V2I_TB_SEL = 0,
        string PMA_PLL_REG_V2I_RCALTEST_PD = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_RES_CAL_TEST = 0,
        int PMA_RES_CAL_DIV = 0,
        string PMA_RES_CAL_CLK_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_PLL_PFDDELAY_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_PFDDELAYSEL = 1,
        int PMA_PLL_REG_PLL_VCTRL_SET = 0,
        string PMA_PLL_REG_READY_OR_LOCK = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_PLL_CP = 31,
        int PMA_PLL_REG_PLL_REFDIV = 16,
        string PMA_PLL_REG_PLL_LOCKDET_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_PLL_READY = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_PLL_READY_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_PLL_FBDIV = 36,
        int PMA_PLL_REG_LPF_RES = 1,
        string PMA_PLL_REG_JTAG_OE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_JTAG_VHYSTSEL = 0,
        string PMA_PLL_REG_PLL_LOCKDET_EN_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_PLL_LOCKDET_FBCT = 7,
        int PMA_PLL_REG_PLL_LOCKDET_ITER = 3,
        string PMA_PLL_REG_PLL_LOCKDET_MODE = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_PLL_LOCKDET_LOCKCT = 4,
        int PMA_PLL_REG_PLL_LOCKDET_REFCT = 7,
        string PMA_PLL_REG_PLL_LOCKDET_RESET_N = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_PLL_LOCKED = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_PLL_LOCKED_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_PLL_UNLOCKED = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_PLL_UNLOCKDET_ITER = 2,
        string PMA_PLL_REG_PLL_UNLOCKED_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_I_CTRL_MAX = 63,
        string PMA_PLL_REG_REFCLK_TEST_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_RESCAL_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_I_CTRL_MIN = 0,
        string PMA_PLL_REG_RESCAL_DONE_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_RESCAL_DONE_VAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_RESCAL_I_CODE = 46,
        string PMA_PLL_REG_RESCAL_I_CODE_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_RESCAL_I_CODE_PMA = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_RESCAL_I_CODE_VAL = 46,
        string PMA_PLL_REG_RESCAL_INT_R_SMALL_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_RESCAL_ITER_VALID_SEL = 0,
        string PMA_PLL_REG_RESCAL_RESET_N_OW = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_RESCAL_RST_N_VAL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_RESCAL_WAIT_SEL = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REFCLK2LANE_PD_L = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REFCLK2LANE_PD_R = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_LOCKDET_REPEAT = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_NOFBCLK_STICKY_CLEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_NOREFCLK_STICKY_CLEAR = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int PMA_PLL_REG_TEST_SEL = 0,
        string PMA_PLL_REG_TEST_V_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_TEST_SIG_HALF_EN = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PMA_PLL_REG_REFCLK_PAD_SEL = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        string PARM_PLL_POWERUP = "OFF"
    );

    port
    (
        output P_CFG_READY_PLL,
        output P_CFG_RDATA_PLL[7:0],
        output P_CFG_INT_PLL,
        output P_RESCAL_I_CODE_O[5:0],
        output P_REFCK2CORE,
        output P_PLL_READY,
        output PLL_CLK0,
        output PLL_CLK90,
        output PLL_CLK180,
        output PLL_CLK270,
        output SYNC_PLL,
        output RATE_CHANGE_PLL,
        output PLL_PD_O,
        output PLL_RST_O,
        output PMA_PLL_READY_O,
        output PLL_REFCLK_LANE_L,
        input P_CFG_RST_PLL,
        input P_CFG_CLK_PLL,
        input P_CFG_PSEL_PLL,
        input P_CFG_ENABLE_PLL,
        input P_CFG_WRITE_PLL,
        input P_CFG_ADDR_PLL[11:0],
        input P_CFG_WDATA_PLL[7:0],
        input P_RESCAL_RST_I,
        input P_RESCAL_I_CODE_I[5:0],
        input P_PLL_LOCKDET_RST_I,
        input P_PLL_REF_CLK,
        input P_PLL_RST,
        input P_PLLPOWERDOWN,
        input P_LANE_SYNC,
        input P_RATE_CHANGE_TCLK_ON,
        input REFCLK_CML_N,
        input REFCLK_CML_P,
        input TXPCLK_PLL_SELECTED,
        output P_TEST_SO,
        output P_FOR_PMA_TEST_SO,
        input P_TEST_SE_N = 1'b1,
        input P_TEST_MODE_N = 1'b1,
        input P_TEST_RSTN,
        input P_TEST_SI,
        input P_FOR_PMA_TEST_MODE_N = 1'b1,
        input P_FOR_PMA_TEST_SE_N = 1'b1,
        input P_FOR_PMA_TEST_CLK,
        input P_FOR_PMA_TEST_RSTN,
        input P_FOR_PMA_TEST_SI
    );
};

design
operator V_OSC_E4
{
    port
    (
        output CLKOUT,
        input EN_N
    );
};

design
operator V_FIFO18K_E1
{
    parameter
    (
        string GRS_EN = "TRUE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */,
        int DATA_WIDTH = 18,
        int DO_REG = 0,
        bit ALMOST_FULL_OFFSET[13:0] = 14'h0000,
        bit ALMOST_EMPTY_OFFSET[13:0] = 14'h0000,
        bit RST_VAL[35:0] = 36'h000000000,
        int USE_EMPTY = 0,
        int USE_FULL = 0,
        string SYNC_FIFO = "FALSE" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "TRUE | FALSE" */
    );

    port
    (
        output ALMOST_EMPTY,
        output ALMOST_FULL,
        output EMPTY,
        output FULL,
        output DO[35:0],
        input DI[35:0],
        input WCLK /* pragma PAP_IS_CLOCK_PIN PAP_LIB_IS_INV_PIN */,
        input RCLK /* pragma PAP_IS_CLOCK_PIN PAP_LIB_IS_INV_PIN */,
        input WCE /* pragma PAP_LIB_IS_INV_PIN */,
        input RCE /* pragma PAP_LIB_IS_INV_PIN */,
        input ORCE /* pragma PAP_LIB_IS_INV_PIN */,
        input RST /* pragma PAP_LIB_IS_INV_PIN */
    );
};

design
operator V_IOCLKDIV_E3
{
    parameter
    (
        string DIV_FACTOR = "8",
        string PHASE_SHIFT = "0"
    );

    port
    (
        input RST,
        input CLKIN,
        output CLKDIVOUT
    );
};
