*******************************************************************

  Operator    [gopIOBUFIOLDEL]

  Abstract  []

  Revision History:

********************************************************************************/
gate
operator gopIOBUFIOLDEL
{
    parameter
    (
        string MIPI_MODE       = "FALSE",
        string DELAY_MODE      = "NODELAY",   //"NODELAY", "INDELAY", "OUTDELAY",
        string DELAY_SEL       = "DEFAULT",
        bit    IODLY_CTRL_EN   = 1'b0,
        bit    IODLY_STEP[3:0] = 4'b0000,
        string FROM_DQSL       = "FALSE"
    );
    port
    (
        input   MIPI_IN,
        input   IN,
        input   TS,
        output  OUT,
        output  MIPI_OUT,

        input   IODLY_CTRL[2:0],
        output  IODLY_OV,

        // from to IOB
        output  T,
        input   I,
        output  O,
        output  INCK,

        output  DO_OUT,
        output  TO_OUT,
        input   MI,
        output  MO
    );
};

implementation impl of gopIOBUFIOLDEL
{
    bit CP_DELAY_SETTING[1:0] = 2'b00;
    if (DELAY_MODE == "INDELAY") 
    {
        CP_DELAY_SETTING = 2'b10;
    }
    else if (DELAY_MODE == "OUTDELAY") 
    {
        CP_DELAY_SETTING = 2'b01;
    }
    
    device devIOBUFIOLDEL gate_iobufioldel
        parameter map
        (
            //DELAY_MODE      => DELAY_MODE,
            //DELAY_SEL       => DELAY_SEL,
            //IODLY_CTRL_EN   => IODLY_CTRL_EN,
            CP_IODLY_STEP      => IODLY_STEP,
            CP_DOMODE          => FROM_DQSL == "FALSE" ? "DD" : "OUT_EXT",
            CP_MIPI_EN         => MIPI_MODE == "TRUE" ? "ENABLE" : "DISABLE",
            CP_DELAY_SETTING   => CP_DELAY_SETTING
        )
        port map 
        (
           TX_DATA[7]   =>  (FROM_DQSL == "FALSE") ? IN : 1'bx, 
           OUT_EXT      =>  (FROM_DQSL == "TRUE") ? IN : 1'bx,
           
           TS_CTRL[0]   =>  TS,                
           RX_DATA_DD   =>  OUT,
           MIPI_OUT     =>  MIPI_OUT,
           MIPI_IN      =>  MIPI_IN,
  
           IODLY_CTRL   =>  IODLY_CTRL,
           IODLY_OV     =>  IODLY_OV,
                     
           TO           =>  T,
           DI           =>  I,
           DO           =>  O,
           INCK         =>  INCK,

           DO_OUT       =>  DO_OUT,
           TO_OUT       =>  TO_OUT,
            
           MIPI_SW_DYN_O =>  MO,
           MIPI_SW_DYN_I =>  MI
        );
};
