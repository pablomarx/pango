*******************************************************************

  Device    [IOL]

  Author    [rjliu]

  Abstract  []

  Revision History:

********************************************************************************/
symbol logsym of IOL // pragma PAP_ARC_COLOR="64:64:128"
{
    // The bounding box
    generate ( 80 # 200 );
    //
    // Poloygon declaration
    //
    shape
    [ 0, 0 ]  ->  [ , 200 ]  < 
                               
                               IODLY_OV                               @[ ,138], // link to S_Y6CD
                               RX_DATA[0]                             @[ ,140], // link to S_Y3
                               RX_DATA[1]                             @[ ,142], // link to A_Q3
                               RX_DATA[2]                             @[ ,144], // link to A_Y3
                               RX_DATA[3]                             @[ ,146], // link to S_Q3
                               RX_DATA[4]                             @[ ,148], // link to S_Y2
                               RX_DATA[5]                             @[ ,150], // link to S_Q2
                               RX_DATA[6]                             @[ ,152], // link to A_Y2
                               RX_DATA[7]                             @[ ,154], // link to A_Q2
                               RX_DATA_DD                             @[ ,156], // link to A_Y6CD
                               
                               
                               MIPI_SW_DYN_I                          @[ ,10], // link to S_C0
                               
                               IODLY_CTRL[2]                          @[ ,30], // link to S_D1
                               IODLY_CTRL[1]                          @[ ,32], // link to A_D4
                               IODLY_CTRL[0]                          @[ ,34], // link to A_C2
                               
                               TS_CTRL[3]                             @[ ,54], // link to S_C4
                               TS_CTRL[2]                             @[ ,56], // link to A_C4
                               TS_CTRL[1]                             @[ ,58], // link to S_DD
                               TS_CTRL[0]                             @[ ,60], // link to A_DD
                               
                               TX_DATA[7]                             @[ ,80], // link to A_D1
                               TX_DATA[6]                             @[ ,82], // link to S_C2
                               TX_DATA[5]                             @[ ,84], // link to S_D2
                               TX_DATA[4]                             @[ ,86], // link to A_D2
                               TX_DATA[3]                             @[ ,88], // link to A_C3
                               TX_DATA[2]                             @[ ,90], // link to S_C3
                               TX_DATA[1]                             @[ ,92], // link to A_D3
                               TX_DATA[0]                             @[ ,94], // link to S_D3
                               
                               LRS                                    @[ ,114], // link to S_RS
                               CLK_SYS                                @[ ,116], // link to S_CLK
                               CE                                     @[ ,118]  // link to S_CE
                               
                             >

              ->  [ 80, ]   
                                                               

              ->  [ , 0]     <
                               
                               TO_OUT                                 @[ ,10],
                               TO_IN                                  @[ ,12],
                               
                               DO_OUT                                 @[ ,20],
                               DO_IN                                  @[ ,22],
                               
                               TERM_OUT                               @[ ,30],
                               TERM_IN                                @[ ,32],
                               
                               CLK_IO                                 @[ ,50],
                               
                               IFIFO_WADDR[0]                         @[ ,70],
                               IFIFO_WADDR[1]                         @[ ,72],
                               IFIFO_WADDR[2]                         @[ ,74],
                               IFIFO_RADDR[0]                         @[ ,76],
                               IFIFO_RADDR[1]                         @[ ,78],
                               IFIFO_RADDR[2]                         @[ ,80],
                               CLK_R                                  @[ ,82],
                               WCLK                                   @[ ,84],
                               WCLK_DEL                               @[ ,86],
                               DQSI_DEL                               @[ ,88],
                               
                               OUT_EXT                                @[ ,108],
                               TERM                                   @[ ,110],
                               INCK                                   @[ ,112],
                               
                               MIPI_SW_DYN_O                          @[ ,130], // link to MIPI_SW_DYN
                               DO                                     @[ ,150], // link to DO
                               DI                                     @[ ,160], // link to DIN
                               TO                                     @[ ,170]  // link to TS
                               
                            > 
              ->  [ 0, ]   ;

}; // symbol logsym of IOL


symbol logsym_s of IOL // pragma PAP_ARC_COLOR="64:64:128"
{
    // The bounding box
    generate ( 80 # 200 );
    //
    // Poloygon declaration
    //
    shape
    [ 0, 0 ]  ->  [ , 200 ]  < 
                               
                               IODLY_OV                               @[ ,44], // link to S_Y6CD
                               RX_DATA[0]                             @[ ,46], // link to S_Y3
                               RX_DATA[1]                             @[ ,48], // link to A_Q3
                               RX_DATA[2]                             @[ ,50], // link to A_Y3
                               RX_DATA[3]                             @[ ,52], // link to S_Q3
                               RX_DATA[4]                             @[ ,54], // link to S_Y2
                               RX_DATA[5]                             @[ ,56], // link to S_Q2
                               RX_DATA[6]                             @[ ,58], // link to A_Y2
                               RX_DATA[7]                             @[ ,60], // link to A_Q2
                               RX_DATA_DD                             @[ ,62], // link to A_Y6CD
                               
                               
                               MIPI_SW_DYN_I                          @[ ,82], // link to S_C0
                               
                               IODLY_CTRL[2]                          @[ ,102], // link to S_D1
                               IODLY_CTRL[1]                          @[ ,104], // link to A_D4
                               IODLY_CTRL[0]                          @[ ,106], // link to A_C2
                               
                               TS_CTRL[3]                             @[ ,126], // link to S_C4
                               TS_CTRL[2]                             @[ ,128], // link to A_C4
                               TS_CTRL[1]                             @[ ,130], // link to S_DD
                               TS_CTRL[0]                             @[ ,132], // link to A_DD
                               
                               TX_DATA[7]                             @[ ,152], // link to A_D1
                               TX_DATA[6]                             @[ ,154], // link to S_C2
                               TX_DATA[5]                             @[ ,156], // link to S_D2
                               TX_DATA[4]                             @[ ,158], // link to A_D2
                               TX_DATA[3]                             @[ ,160], // link to A_C3
                               TX_DATA[2]                             @[ ,162], // link to S_C3
                               TX_DATA[1]                             @[ ,164], // link to A_D3
                               TX_DATA[0]                             @[ ,166], // link to S_D3
                               
                               LRS                                    @[ ,186], // link to S_RS
                               CLK_SYS                                @[ ,188], // link to S_CLK
                               CE                                     @[ ,190]  // link to S_CE
                               
                             >

              ->  [ 80, ]   
                                                               

              ->  [ , 0]     <
                               
                               TO_IN                                  @[ ,190],
                               TO_OUT                                 @[ ,188],
                               
                               DO_IN                                  @[ ,180],
                               DO_OUT                                 @[ ,178],
                               
                               TERM_IN                                @[ ,170],
                               TERM_OUT                               @[ ,168],
                               
                               CLK_IO                                 @[ ,150],
                               
                               IFIFO_WADDR[0]                         @[ ,112],
                               IFIFO_WADDR[1]                         @[ ,114],
                               IFIFO_WADDR[2]                         @[ ,116],
                               IFIFO_RADDR[0]                         @[ ,118],
                               IFIFO_RADDR[1]                         @[ ,120],
                               IFIFO_RADDR[2]                         @[ ,122],
                               CLK_R                                  @[ ,124],
                               WCLK                                   @[ ,126],
                               WCLK_DEL                               @[ ,128],
                               DQSI_DEL                               @[ ,130],
                               
                               OUT_EXT                                @[ ,92],
                               TERM                                   @[ ,90],
                               INCK                                   @[ ,88],
                               
                               TO                                     @[ ,70], // link to TS
                               DI                                     @[ ,60], // link to DIN
                               DO                                     @[ ,50], // link to DO
                               MIPI_SW_DYN_O                          @[ ,30]  // link to MIPI_SW_DYN
                               
                            > 

              ->  [ 0, ]  ;

}; // symbol logsym_s of IOL
      
/*******************************************************************************

  Device    [IOL]

  Author    [rjliu]

  Abstract  [The schematic for IOL]

  Revision History:

********************************************************************************/
schematic schm of IOL
{
    // The bounding box
    generate ( 320 # 320 );

    //
    // Layout all symbols. 
    // 
    // Currently, the size of instance is made the same as its symbol
    // definition. This is becasue that the port location in symbol definition has been nicely
    // aligned. If no size is specified, the relative location of ports is preserved.
    //
    
     //colum 1
    
    unsigned int OFF_X = 100;
    unsigned int OFF_Y = 100 + 5;
    unsigned int U_TSFF_X = OFF_X;
    unsigned int U_TSFF_Y = OFF_Y + 40;
    unsigned int ODDR_X = OFF_X;
    unsigned int ODDR_Y = 100 + 100; 
    
    
     //colum 2
    unsigned int DELAY_X = U_TSFF_X + 120;
    unsigned int DELAY_Y = 280;
    unsigned int IDDR_X = DELAY_X;
    unsigned int IDDR_Y = DELAY_Y - 120;
    unsigned int IFF_X = DELAY_X;
    unsigned int IFF_Y = DELAY_Y - 230;
    
    unsigned int LRS_POL_MUX_X = 20;
    unsigned int LRS_POL_MUX_Y = 40;
    unsigned int CE_POL_MUX_X = LRS_POL_MUX_X;
    unsigned int CE_POL_MUX_Y = LRS_POL_MUX_Y + 20;
    
    unsigned int RCLK_EN_MUX_I_X = LRS_POL_MUX_X;
    unsigned int RCLK_EN_MUX_I_Y = LRS_POL_MUX_Y + 73;
    unsigned int RCLK_EN_MUX_O_X = LRS_POL_MUX_X;
    unsigned int RCLK_EN_MUX_O_Y = LRS_POL_MUX_Y + 60;
    
    unsigned int RCLK_POL_MUX_I_Y = RCLK_EN_MUX_I_Y;
    
    unsigned int OFF_CE_MUX_X = 60;
    unsigned int OFF_CE_MUX_Y = 80 + 10;  
    unsigned int IFF_CE_MUX_X = OFF_CE_MUX_X;
    unsigned int IFF_CE_MUX_Y = 70;   
    unsigned int ODDR_CLK_MUX_X = OFF_CE_MUX_X;
    unsigned int ODDR_CLK_MUX_Y = 200;      
    unsigned int IDDR_CLK_MUX_X = OFF_CE_MUX_X;
    unsigned int IDDR_CLK_MUX_Y = 188; 
    
    
    unsigned int WCLK_DEL_RESERCE_X = 20;
    unsigned int WCLK_DEL_RESERCE_Y = 203;    
    
    unsigned int TERM_OUT_MUX_X = 140;
    unsigned int TERM_OUT_MUX_Y = 75;      
    
    unsigned int TERM_PDIFF_MUX_X = TERM_OUT_MUX_X+20;
    unsigned int TERM_PDIFF_MUX_Y = 25;
    
    unsigned int MIPI_EN_MUX_X = OFF_X;
    unsigned int MIPI_EN_MUX_Y = 10;      

    unsigned int IN_DELSEL_MUX_X = 185;
    unsigned int IN_DELSEL_MUX_Y = 135;
    
    unsigned int IN_OUT_DELSEL_MUX_X = IN_DELSEL_MUX_X;
    unsigned int IN_OUT_DELSEL_MUX_Y = 77 + 100;

    unsigned int OFF_LRS_MUX_X = IFF_CE_MUX_X + 10;
    unsigned int OFF_LRS_MUX_Y = 45; 
 
    unsigned int SERCLK_MUX_Y = ODDR_Y + 20;
    unsigned int SERCLK_MUX_X = IFF_CE_MUX_X;
    
    //colum 3
    unsigned int IFF_LRS_MUX_X = 160;
    unsigned int IFF_LRS_MUX_Y = 42;     

    unsigned int OUT_DELSEL_MUX_X = 270;
    unsigned int OUT_DELSEL_MUX_Y = 265;
       
    unsigned int DO_PDIFF_MUX_X = 280;
    unsigned int DO_PDIFF_MUX_Y = 255;    
    
    unsigned int DO_IN_REVERSE_X = 250;
    unsigned int DO_IN_REVERSE_Y = 252;   

      //colum 3
    unsigned int OUTPUT_DATA_MUX_X = 140;
    unsigned int OUTPUT_DATA_MUX_Y = 121;
    unsigned int TO_OUT_MUX_X = OUTPUT_DATA_MUX_X;
    unsigned int TO_OUT_MUX_Y = OUTPUT_DATA_MUX_Y + 40;
    
    unsigned int TO_PDIFF_MUX_X = OUTPUT_DATA_MUX_X + 20;
    unsigned int TO_PDIFF_MUX_Y = DELAY_Y;
    
    
   device POLMUX ( symbol logsym ) LRS_POL_MUX
        @[LRS_POL_MUX_X, LRS_POL_MUX_Y-1]; 

   device POLMUX ( symbol logsym ) CE_POL_MUX
        @[CE_POL_MUX_X, CE_POL_MUX_Y];

   device MUX21_EN ( symbol logsym ) RCLK_EN_MUX_I
        @[RCLK_EN_MUX_I_X, RCLK_EN_MUX_I_Y];   
   "0" @[(<pin X1 of <instance RCLK_EN_MUX_I>>)#| - 3, <pin X1 of <instance RCLK_EN_MUX_I>>#-];
 
   device MUX21_EN ( symbol logsym ) RCLK_EN_MUX_O
        @[RCLK_EN_MUX_O_X, RCLK_EN_MUX_O_Y];
   "0" @[(<pin X1 of <instance RCLK_EN_MUX_O>>)#| - 3, <pin X1 of <instance RCLK_EN_MUX_O>>#-];
 
   device POLMUX ( symbol logsym ) RCLK_POL_MUX_I
        @[40,RCLK_POL_MUX_I_Y];         
        
   device POLMUX ( symbol logsym ) RCLK_POL_MUX_O
        @[40, RCLK_EN_MUX_O_Y];        
  
   device MUX31 ( symbol logsym ) IDDR_CLK_MUX
       @[IDDR_CLK_MUX_X,IDDR_CLK_MUX_Y];     

   device MUX41 ( symbol logsym ) ODDR_CLK_MUX
       @[ODDR_CLK_MUX_X,ODDR_CLK_MUX_Y]; 
    
   device MUX21 ( symbol logsym ) SERCLK_MUX
       @[SERCLK_MUX_X, SERCLK_MUX_Y];
       
   device MUX21_EN ( symbol logsym ) OFF_CE_MUX
       @[OFF_CE_MUX_X,OFF_CE_MUX_Y];     
   "1" @ [(<instance OFF_CE_MUX>#|)-3, <pin X1 of <instance OFF_CE_MUX>>#-];         

   unsigned int pin_offset;           
   
   device MUX21_EN ( symbol logsym ) OFF_LRS_MUX
       @[OFF_LRS_MUX_X,OFF_LRS_MUX_Y];         
   "0" @ [(<instance OFF_LRS_MUX>#|)-3, <pin X1 of <instance OFF_LRS_MUX>>#-];
      
   device IOL_FF ( symbol logsym ) U_TSFF
       @[U_TSFF_X, U_TSFF_Y];   

   device OUTMUX ( symbol logsym ) TO_OUT_MUX
       @[TO_OUT_MUX_X,TO_OUT_MUX_Y];
   "0" @ [(<instance TO_OUT_MUX>#|)-3, <pin X3 of <instance TO_OUT_MUX>>#-];
   
   device ODDR ( symbol logsym ) ODDR
       @[ODDR_X,ODDR_Y]; 
             
   device REVERSE_MUX ( symbol logsym )  DO_IN_REVERSE             
       @[DO_IN_REVERSE_X,DO_IN_REVERSE_Y];        
      
   device OUTMUX ( symbol logsym ) TERM_OUT_MUX
       @[TERM_OUT_MUX_X,TERM_OUT_MUX_Y];      
   "0" @[(<instance TERM_OUT_MUX>#|)-3, <pin X3 of <instance TERM_OUT_MUX>>#-];
   
   device MUX21_EN ( symbol logsym ) DO_PDIFF_MUX
       @[DO_PDIFF_MUX_X, DO_PDIFF_MUX_Y];

   device MUX21_EN ( symbol logsym ) TO_PDIFF_MUX
       @[TO_PDIFF_MUX_X, TO_PDIFF_MUX_Y];
       
   device MUX21_EN ( symbol logsym ) TERM_PDIFF_MUX
       @[TERM_PDIFF_MUX_X, TERM_PDIFF_MUX_Y];     
       
   device MUX21_EN ( symbol logsym ) MIPI_EN_MUX   
       @[MIPI_EN_MUX_X, MIPI_EN_MUX_Y];     
   "0" @ [(<instance MIPI_EN_MUX>#|)-3, <pin X1 of <instance MIPI_EN_MUX>>#-];               
   
   device IOL_FF ( symbol logsym ) OFF
       @[OFF_X, OFF_Y];
             
   device OUTMUX ( symbol logsym ) OUTPUT_DATA_MUX
       @[OUTPUT_DATA_MUX_X, OUTPUT_DATA_MUX_Y];                                                          
                      
   device MUX21 ( symbol logsym ) IN_OUT_DELSEL_MUX
       @[IN_OUT_DELSEL_MUX_X, IN_OUT_DELSEL_MUX_Y];
       
   device DLY ( symbol logsym ) DELAY
       @[DELAY_X, DELAY_Y];         

   device MUX21 ( symbol logsym ) OUT_DELSEL_MUX
       @[OUT_DELSEL_MUX_X, OUT_DELSEL_MUX_Y]; 
    
   device MUX21 ( symbol logsym ) IN_DELSEL_MUX
       @[IN_DELSEL_MUX_X, IN_DELSEL_MUX_Y];  

   device MUX21_EN ( symbol logsym ) IFF_CE_MUX
       @[IFF_CE_MUX_X, IFF_CE_MUX_Y];       
   "1" @ [(<instance IFF_CE_MUX>#|)-3, <pin X1 of <instance IFF_CE_MUX>>#-];     

   device MUX21_EN ( symbol logsym ) IFF_LRS_MUX
       @[IFF_LRS_MUX_X, IFF_LRS_MUX_Y];       
   "0" @ [(<instance IFF_LRS_MUX>#|)-3, <pin X1 of <instance IFF_LRS_MUX>>#-];  
         
   device IOL_FF ( symbol logsym ) IFF
       @[IFF_X, IFF_Y];
    
   device MUX21_N ( symbol logsym ) IFF_RXDATA_SEL_MUX
       @[IFF_X+45, IFF_Y+12];
       
   device IDDR ( symbol logsym ) IDDR
       @[IDDR_X, IDDR_Y];

   device MIPI_OUT ( symbol logsym ) MIPI_OUT
       @[IFF_LRS_MUX_X, OFF_Y];
    //
    // All device has been drawn. Now map the graphical object to the corresponding object
    // in the logic structure netlist
    //
    map (
            <instance LRS_POL_MUX>          => <instance LRS_POL_MUX         of device IOL (structure netlist)> ,
            <instance CE_POL_MUX>           => <instance CE_POL_MUX          of device IOL (structure netlist)> ,
            <instance RCLK_EN_MUX_I>        => <instance RCLK_EN_MUX_I       of device IOL (structure netlist)> ,
            <instance RCLK_EN_MUX_O>        => <instance RCLK_EN_MUX_O       of device IOL (structure netlist)> ,
            <instance RCLK_POL_MUX_I>       => <instance RCLK_POL_MUX_I      of device IOL (structure netlist)> ,
            <instance RCLK_POL_MUX_O>       => <instance RCLK_POL_MUX_O      of device IOL (structure netlist)> ,
            <instance IDDR_CLK_MUX>         => <instance IDDR_CLK_MUX        of device IOL (structure netlist)> ,
            <instance ODDR_CLK_MUX>         => <instance ODDR_CLK_MUX        of device IOL (structure netlist)> ,
            <instance OFF_CE_MUX>           => <instance OFF_CE_MUX          of device IOL (structure netlist)> ,
            <instance OFF_LRS_MUX>          => <instance OFF_LRS_MUX         of device IOL (structure netlist)> ,
            <instance U_TSFF>               => <instance U_TSFF              of device IOL (structure netlist)> ,  
            <instance ODDR>                 => <instance ODDR                of device IOL (structure netlist)> ,
            <instance TO_OUT_MUX>           => <instance TO_OUT_MUX          of device IOL (structure netlist)> ,
            <instance TERM_OUT_MUX>         => <instance TERM_OUT_MUX        of device IOL (structure netlist)> ,
            <instance DO_PDIFF_MUX>         => <instance DO_PDIFF_MUX        of device IOL (structure netlist)> ,
            <instance TO_PDIFF_MUX>         => <instance TO_PDIFF_MUX        of device IOL (structure netlist)> ,
            <instance TERM_PDIFF_MUX>       => <instance TERM_PDIFF_MUX      of device IOL (structure netlist)> ,
            <instance OFF>                  => <instance OFF                 of device IOL (structure netlist)> ,
            <instance OUTPUT_DATA_MUX>      => <instance OUTPUT_DATA_MUX     of device IOL (structure netlist)> ,
            <instance IN_OUT_DELSEL_MUX>    => <instance IN_OUT_DELSEL_MUX   of device IOL (structure netlist)> ,
            <instance DELAY>                => <instance DELAY               of device IOL (structure netlist)> ,
            <instance OUT_DELSEL_MUX>       => <instance OUT_DELSEL_MUX      of device IOL (structure netlist)> ,
            <instance IN_DELSEL_MUX>        => <instance IN_DELSEL_MUX       of device IOL (structure netlist)> ,
            <instance IFF_CE_MUX>           => <instance IFF_CE_MUX          of device IOL (structure netlist)> ,
            <instance IFF_LRS_MUX>          => <instance IFF_LRS_MUX         of device IOL (structure netlist)> , 
            <instance IFF>                  => <instance IFF                 of device IOL (structure netlist)> ,
            <instance IDDR>                 => <instance IDDR                of device IOL (structure netlist)> ,
            <instance DO_IN_REVERSE >       => <instance DO_IN_REVERSE       of device IOL (structure netlist)> ,
            <instance MIPI_EN_MUX >         => <instance MIPI_EN_MUX         of device IOL (structure netlist)> ,
            <instance SERCLK_MUX >          => <instance SERCLK_MUX          of device IOL (structure netlist)> ,
            <instance IFF_RXDATA_SEL_MUX >  => <instance IFF_RXDATA_SEL_MUX  of device IOL (structure netlist)> ,
            <instance MIPI_OUT >            => <instance MIPI_OUT  of device IOL (structure netlist)>
        
        );


    //
    // Layout all ports. 
    // 
    // Since ports drive or are driven by pins of symbol instance, derive the port
    // location from those pins
    //
   
    // the top port
    port TO_OUT          @[(<pin Y  of <instance TO_OUT_MUX>>#|)+2, 310]; // pragma PAP_UI_ORIENTATION="NORTH"     
    port TO_IN           @[(<pin X0 of <instance TO_PDIFF_MUX>>#|)-2, 310]; // pragma PAP_UI_ORIENTATION="NORTH"     
    port TO              @[(<pin Y  of <instance TO_PDIFF_MUX>>#|)+2, 310];      // pragma PAP_UI_ORIENTATION="NORTH"       
    
    port IODLY_CTRL[0]   @[<pin IODLY_CTRL[0] of <instance DELAY>>#|, 310]; // pragma PAP_UI_ORIENTATION="NORTH"
    port IODLY_CTRL[1]   @[<pin IODLY_CTRL[1] of <instance DELAY>>#|, 310]; // pragma PAP_UI_ORIENTATION="NORTH"
    port IODLY_CTRL[2]   @[<pin IODLY_CTRL[2] of <instance DELAY>>#|, 310]; // pragma PAP_UI_ORIENTATION="NORTH"
    
    pin_offset = <pin X of <instance LRS_POL_MUX>>#-;
    port LRS    @[10,pin_offset];

    pin_offset = <pin X of <instance CE_POL_MUX>>#-;
    port CE     @[10,pin_offset];

    pin_offset = <pin X0 of <instance RCLK_EN_MUX_O>>#-;
    port CLK_SYS          @[10,pin_offset];
                         
    port DQSI_DEL         @[10, <pin X1 of <instance IDDR_CLK_MUX>>#-];
    port CLK_IO           @[10, <pin X0 of <instance IDDR_CLK_MUX>>#-];      
                     
    port WCLK_DEL         @[10, <pin X2 of <instance ODDR_CLK_MUX>>#-];
    port WCLK             @[10, <pin X1 of <instance ODDR_CLK_MUX>>#-];  
    
    PORT TERM_IN          @[10, <pin X0 of <instance TERM_PDIFF_MUX>>#-];
    PORT TERM             @[300, <pin Y of <instance TERM_PDIFF_MUX>>#-];
    
    port DI               @[10, <pin X0 of <instance IN_OUT_DELSEL_MUX>>#-];
    port CLK_R            @[10, <pin X1 of <instance SERCLK_MUX>>#-];
    
    // output
    PORT RX_DATA_DD       @[300, <pin Y of <instance IN_DELSEL_MUX>>#-];
    
    PORT TERM_OUT         @[300, <pin Y of <instance TERM_OUT_MUX>>#-];
    PORT OUT_EXT          @[10, (<pin X0 of <instance OUTPUT_DATA_MUX>>#-)+2];

    port DO_OUT          @[300, <pin Y of <instance OUT_DELSEL_MUX>>#-];      
    port DO              @[300, <pin Y of <instance DO_PDIFF_MUX>>#-];    
    port DO_IN           @[300, 250];// pragma PAP_UI_ORIENTATION="EAST" 
          
    port IODLY_OV        @[300, <pin IODLY_OV of <instance DELAY>>#-];    
    
    port MIPI_SW_DYN_I   @[10,  <pin X0 of <instance MIPI_EN_MUX>>#-];
    port MIPI_SW_DYN_O   @[300, <pin Y of <instance MIPI_EN_MUX>>#-];     

    port INCK            @[10, <pin X0 of <instance IN_DELSEL_MUX>>#-]; // pragma PAP_UI_ORIENTATION="WEST" 
    
    port TS_CTRL[0]    @[10,  <pin TS_CTRL[0] of <instance ODDR>>#-];
    port TS_CTRL[1]    @[10,  <pin TS_CTRL[1] of <instance ODDR>>#-];
    port TS_CTRL[2]    @[10,  <pin TS_CTRL[2] of <instance ODDR>>#-];
    port TS_CTRL[3]    @[10,  <pin TS_CTRL[3] of <instance ODDR>>#-];   
    
    port TX_DATA[0]    @[10,  <pin TX_DATA[0] of <instance ODDR>>#-];
    port TX_DATA[1]    @[10,  <pin TX_DATA[1] of <instance ODDR>>#-];
    port TX_DATA[2]    @[10,  <pin TX_DATA[2] of <instance ODDR>>#-];
    port TX_DATA[3]    @[10,  <pin TX_DATA[3] of <instance ODDR>>#-];
    port TX_DATA[4]    @[10,  <pin TX_DATA[4] of <instance ODDR>>#-];
    port TX_DATA[5]    @[10,  <pin TX_DATA[5] of <instance ODDR>>#-];    
    port TX_DATA[6]    @[10,  <pin TX_DATA[6] of <instance ODDR>>#-];
    port TX_DATA[7]    @[10,  <pin TX_DATA[7] of <instance ODDR>>#-];    

    port RX_DATA[0]    @[300,  <pin Y of <instance IFF_RXDATA_SEL_MUX>>#-];      
    port RX_DATA[1]    @[300,  <pin RX_DATA[1] of <instance IDDR>>#-];     
    port RX_DATA[2]    @[300,  <pin RX_DATA[2] of <instance IDDR>>#-];      
    port RX_DATA[3]    @[300,  <pin RX_DATA[3] of <instance IDDR>>#-];       
    port RX_DATA[4]    @[300,  <pin RX_DATA[4] of <instance IDDR>>#-];       
    port RX_DATA[5]    @[300,  <pin RX_DATA[5] of <instance IDDR>>#-];        
    port RX_DATA[6]    @[300,  <pin RX_DATA[6] of <instance IDDR>>#-];       
    port RX_DATA[7]    @[300,  <pin RX_DATA[7] of <instance IDDR>>#-];        

    port IFIFO_WADDR[0]    @[300,  <pin IFIFO_WADDR[0] of <instance IDDR>>#-];        // pragma PAP_UI_ORIENTATION="EAST"    
    port IFIFO_WADDR[1]    @[300,  <pin IFIFO_WADDR[1] of <instance IDDR>>#-];        // pragma PAP_UI_ORIENTATION="EAST"    
    port IFIFO_WADDR[2]    @[300,  <pin IFIFO_WADDR[2] of <instance IDDR>>#-];        // pragma PAP_UI_ORIENTATION="EAST"    
    
    port IFIFO_RADDR[0]    @[300,  <pin IFIFO_RADDR[0] of <instance IDDR>>#-];        // pragma PAP_UI_ORIENTATION="EAST"      
    port IFIFO_RADDR[1]    @[300,  <pin IFIFO_RADDR[1] of <instance IDDR>>#-];        // pragma PAP_UI_ORIENTATION="EAST"    
    port IFIFO_RADDR[2]    @[300,  <pin IFIFO_RADDR[2] of <instance IDDR>>#-];        // pragma PAP_UI_ORIENTATION="EAST"    

    // DEBUG
    // breakpoint();    

    //
    // Layout all lines (wires in the logic netlist)
    //
    // The name of line is preceeded with "ln"
    //
    
    line lnLRS
           <port LRS> ->
           <pin X of <instance LRS_POL_MUX>>;          
           
    line lnTERM_IN
           <port TERM_IN> ->
           <pin X0 of <instance TERM_PDIFF_MUX>>;          
           
    line lnTERM        
           <pin Y of <instance TERM_PDIFF_MUX>> ->
           <port TERM>;     
           
    line lnIODLY_OV        
           <pin IODLY_OV of <instance DELAY>> ->
           <port IODLY_OV>;  
    
    line lnIODLY_CTRL0
           <port IODLY_CTRL[0]> ->
           <pin IODLY_CTRL[0] of <instance DELAY>>;
    
    line lnIODLY_CTRL1
           <port IODLY_CTRL[1]> ->
           <pin IODLY_CTRL[1] of <instance DELAY>>;
    
    line lnIODLY_CTRL2        
           <port IODLY_CTRL[2]> ->
           <pin IODLY_CTRL[2] of <instance DELAY>>;
       
    line lnCE
           <port CE> ->
           <pin X of <instance CE_POL_MUX>>;                                 
           
    line lnCLK_SYS
           <port CLK_SYS> ->
           [(<instance RCLK_EN_MUX_O>#|)-4, ] ->  
           <pin X0 of <instance RCLK_EN_MUX_O>>,   
               
           [(<instance RCLK_EN_MUX_O>#|)-4, <port CLK_SYS>#-] ->
           [ , <pin X0 of <instance RCLK_EN_MUX_I>>#-] ->
           <pin X0 of <instance RCLK_EN_MUX_I>>;
    
    line lnCLK_R
            <port CLK_R> ->
            <pin X1 of <instance SERCLK_MUX>>;
    
    line lnSERCLK
            <pin Y of <instance SERCLK_MUX>> ->
            <pin SERCLK of <instance ODDR>>;
            
    line lnDQSI_DEL
           <port DQSI_DEL> -> <pin X1 of <instance IDDR_CLK_MUX>>;
           
    line lnDI
           <port DI> ->   
           [(<instance IN_OUT_DELSEL_MUX>#|)-4, ] ->                 
           <pin X0 of <instance IN_OUT_DELSEL_MUX>>,
   
           [(<instance IN_OUT_DELSEL_MUX>#|)-4, <port DI>#-] ->
           [ , <pin X0 of <instance IN_DELSEL_MUX>>#-] ->
           <pin X0 of <instance IN_DELSEL_MUX>>,
           
           [(<instance IN_OUT_DELSEL_MUX>#|)-4, <port INCK>#-] ->
           <port INCK>;
   
    line lnRX_DATA_DD
           <pin Y of <instance IN_DELSEL_MUX>> ->
           [(<instance IFF>#|)-2, ] ->         
           <port RX_DATA_DD>,   
   
           [(<instance IFF>#|)-2,<pin Y of <instance IN_DELSEL_MUX>>#-] ->
           [ ,<pin D of <instance IFF>>#-] ->
           <pin D of <instance IFF>>,
   
           [(<instance IFF>#|)-2, <pin Y of <instance IN_DELSEL_MUX>>#-] ->
           [ ,<pin DIN of <instance IDDR>>#-] ->
           <pin DIN of <instance IDDR>>;
           
    line lnWCLK
           <port WCLK> -> <pin X1 of <instance ODDR_CLK_MUX>>;
    
    line lnWCLK_DEL
           <port WCLK_DEL> -> <pin X2 of <instance ODDR_CLK_MUX>>;
           
    line lnDO_IN
           <port DO_IN> ->
           [<pin IN of <instance DO_IN_REVERSE>>#|-2,] ->        
           [,<pin IN of <instance DO_IN_REVERSE>>#-] ->
           <pin IN of <instance DO_IN_REVERSE>>; 
           
    line lnDO_IN_REVERSE
           <pin OUT of <instance DO_IN_REVERSE>>->
           <pin X0 of <instance DO_PDIFF_MUX>>;        
                
    line lnDO
            <pin Y of <instance DO_PDIFF_MUX>> -> <port DO>; 
            
    line lnDO_OUT
            <pin Y of <instance OUT_DELSEL_MUX>>  ->
            [(<pin Y of <instance OUT_DELSEL_MUX>>#|)+2,]  ->
            <port DO_OUT>,  
            
            [(<pin Y of <instance OUT_DELSEL_MUX>>#|)+2,<pin Y of <instance OUT_DELSEL_MUX>>#- ]  ->
            [,(<pin X1 of <instance DO_PDIFF_MUX>>#-)+3] ->  
            [(<pin X1 of <instance DO_PDIFF_MUX>>#|)-2,] ->                
            [,<pin X1 of <instance DO_PDIFF_MUX>>#-] ->
            <pin X1 of <instance DO_PDIFF_MUX>>;     
   
    line lnDOUT
            <pin DOUT of <instance DELAY>>  ->
            [(<pin DOUT of <instance DELAY>>#|)+4,]  ->
            [,<pin X1 of <instance OUT_DELSEL_MUX>>#-]  ->
            <pin X1 of <instance OUT_DELSEL_MUX>>,   
            
            [(<pin DOUT of <instance DELAY>>#|)+4,<pin X1 of <instance OUT_DELSEL_MUX>>#-]  ->
            [,(<pin X1 of <instance IN_DELSEL_MUX>>#-)+4] ->
            [(<pin X1 of <instance IN_DELSEL_MUX>>#|)-2,] ->
            [,<pin X1 of <instance IN_DELSEL_MUX>>#-] ->
            <pin X1 of <instance IN_DELSEL_MUX>>;   
                     
    line lnLRS_IN
           <pin Y of <instance IFF_LRS_MUX>> ->
           [(<instance IFF>#|)-7, ]->         
           [(<instance IFF>#|)-7,<pin LRS of <instance IFF>>#-] ->
           <pin LRS of <instance IFF>>,
   
           [(<instance IFF>#|)-7,<pin LRS of <instance IFF>>#-] ->
           [ ,<pin LRS of <instance IDDR>>#-] ->
           <pin LRS of <instance IDDR>>;
           
    line lnLRS_OUT
          <pin Y of <instance OFF_LRS_MUX>> ->
          [(<instance OFF>#|)-6, ]->         
          [(<instance OFF>#|)-6,<pin LRS of <instance OFF>>#-]  ->
          <pin LRS of <instance OFF>>,
          
         [(<instance OFF>#|)-6,<pin LRS of <instance OFF>>#-]  ->
         [ , <pin LRS of <instance U_TSFF>>#-] ->
         <pin LRS of <instance U_TSFF>>,        
 
         [(<instance OFF>#|)-6,<pin LRS of <instance U_TSFF>>#-] ->
         [ , <pin LRS of <instance ODDR>>#-] ->
         <pin LRS of <instance ODDR>>;
   
    line lnCE_IN
           <pin Y of <instance IFF_CE_MUX>>  ->
           [(<pin Y of <instance IFF_CE_MUX>>#|)+20, ] ->         
           [ ,(<pin CE of <instance IFF>>#-)] ->
           <pin CE of <instance IFF>>;
           
           
    line lnCE_OUT
           <pin Y of <instance OFF_CE_MUX>>  ->
           [(<instance OFF>#|)-2, ] ->         
           [ ,(<pin CE of <instance OFF>>#-)] ->
           <pin CE of <instance OFF>>,
           
           [(<instance OFF>#|)-2, (<pin CE of <instance OFF>>#-)] ->         
           [ ,(<pin CE of <instance U_TSFF>>#-)] ->
           <pin CE of <instance U_TSFF>>;
           
           
    line lnTS_FF_TO
           <pin Q of <instance U_TSFF>>  ->
           [(<pin Q of <instance U_TSFF>>#|)+2, ] -> 
           <pin X1 of <instance TO_OUT_MUX>>,
   
           [(<pin Q of <instance U_TSFF>>#|)+2, <pin Q of <instance U_TSFF>>#-] ->                             
           [ ,<pin X1 of <instance TERM_OUT_MUX>>#-] ->
           <pin X1 of <instance TERM_OUT_MUX>>;
          
    line lnTX_DO
           <pin TX_DO of <instance ODDR>>  ->
           [ ,(<pin X2 of <instance OUTPUT_DATA_MUX>>#-)] ->
           <pin X2 of <instance OUTPUT_DATA_MUX>>,
           
           [<pin TX_DO of <instance ODDR>>#|, (<pin X2 of <instance OUTPUT_DATA_MUX>>#-)] ->
           [, <pin X1 of <instance MIPI_OUT>>#-] ->
           <pin X1 of <instance MIPI_OUT>>; 
           
    line lnOUTPUT_DATA_SEL
         <pin Y of <instance MIPI_OUT>>  ->
         [(<pin X1 of <instance IN_OUT_DELSEL_MUX>>#|)-6, ] ->   
         [ ,<pin X1 of <instance IN_OUT_DELSEL_MUX>>#-] ->
         <pin X1 of <instance IN_OUT_DELSEL_MUX>>,
         
         [(<pin X1 of <instance IN_OUT_DELSEL_MUX>>#|)-6, (<pin X1 of <instance IN_OUT_DELSEL_MUX>>#-)] ->
         [ ,(<pin X0 of <instance OUT_DELSEL_MUX>>#-)] ->
         <pin X0 of <instance OUT_DELSEL_MUX>>;
                   
    line lnOUTPUT_DATA_SEL_TMP
         <pin Y of <instance OUTPUT_DATA_MUX>> ->
         [(<pin Y of <instance OUTPUT_DATA_MUX>>#|)+2, ] ->
         [ , <pin X2 of <instance MIPI_OUT>>#-] ->
         <pin X2 of <instance MIPI_OUT>>;
         
    line lnTO_OUT
         <pin Y of <instance TO_OUT_MUX>>  ->
         [(<pin Y of <instance TO_OUT_MUX>>#|)+2, ] ->
         [,<pin X1 of <instance TO_PDIFF_MUX>>#-] ->
         <pin X1 of <instance TO_PDIFF_MUX>>,
         
        [(<pin Y of <instance TO_OUT_MUX>>#|)+2,<pin X1 of <instance TO_PDIFF_MUX>>#-] ->
        <port TO_OUT>;   
        
    line lnTERM_OUT
       <pin Y of <instance TERM_OUT_MUX>>  ->
       [(<pin Y of <instance TERM_OUT_MUX>>#|)+2, ] ->         
       [ ,(<pin X1 of <instance TERM_PDIFF_MUX>>#-)] ->
       <pin X1 of <instance TERM_PDIFF_MUX>>,
       
       [(<pin Y of <instance TERM_OUT_MUX>>#|)+2, <pin Y of <instance TERM_OUT_MUX>>#-] -> 
       <port TERM_OUT>; 
          
    line lnTO_IN
        <port TO_IN>  ->
        [,<pin X0 of <instance TO_PDIFF_MUX>>#-] -> 
        <pin X0 of <instance TO_PDIFF_MUX>>;
    
    line lnTO
        <pin Y of <instance TO_PDIFF_MUX>>  ->  
        [(<pin Y of <instance TO_PDIFF_MUX>>#|)+2,] ->
        <port TO>;
                        
    line lnLRS_SEL
           <pin Y of <instance LRS_POL_MUX>> ->
           [(<pin Y of <instance LRS_POL_MUX>>#|)+10, ] ->
           <pin X0 of <instance IFF_LRS_MUX>>,
           
           [(<pin Y of <instance LRS_POL_MUX>>#|)+10,<pin Y of <instance LRS_POL_MUX>>#-]->
           [ ,<pin X0 of <instance OFF_LRS_MUX>>#-]->
           <pin X0 of <instance OFF_LRS_MUX>>;
           
    line lnCE_SEL
           <pin Y of <instance CE_POL_MUX>> ->
           [(<pin Y of <instance CE_POL_MUX>>#|)+8, ]->  
           [ ,<pin X0 of <instance IFF_CE_MUX>>#-]->
           <pin X0 of <instance IFF_CE_MUX>>,
   
           [(<pin Y of <instance CE_POL_MUX>>#|)+8,<pin X0 of <instance IFF_CE_MUX>>#-]->
           [ ,<pin X0 of <instance OFF_CE_MUX>>#-]->
           <pin X0 of <instance OFF_CE_MUX>>;        
   
    line lnCLK_SYS_I
           <pin Y of <instance RCLK_EN_MUX_I>> ->
           <pin X of <instance RCLK_POL_MUX_I>>;
   
   
    line lnCLK_SYS_O
           <pin Y of <instance RCLK_EN_MUX_O>> ->
           <pin X of <instance RCLK_POL_MUX_O>>;
    
    line lnCLK_SYS_FOR_OUTPUT
          <pin Y of <instance RCLK_POL_MUX_O>> ->
          [(<pin Y of <instance RCLK_POL_MUX_O>>#|)+4, ] ->
          [ ,<pin CLK of <instance OFF>>#-] ->
          <pin CLK of <instance OFF>>,
          
          [(<pin Y of <instance RCLK_POL_MUX_O>>#|)+4,<pin CLK of <instance OFF>>#-] ->
          [ ,<pin CLK of <instance U_TSFF>>#-] ->
          <pin CLK of <instance U_TSFF>>,
          
          [(<pin Y of <instance RCLK_POL_MUX_O>>#|)+4,<pin CLK of <instance U_TSFF>>#-] ->
          [, (<pin X0 of <instance ODDR_CLK_MUX>>#-)] ->
          <pin X0 of <instance ODDR_CLK_MUX>>,
          
          [(<pin Y of <instance RCLK_POL_MUX_O>>#|)+4, <pin X0 of <instance ODDR_CLK_MUX>>#-] ->
          [,<pin CLK_SYS of <instance ODDR>>#-]  ->
          <pin CLK_SYS of <instance ODDR>>;

    line lnCLK_IO
           <port CLK_IO> ->
           [(<instance IDDR_CLK_MUX>#|)-10, ]->  
           <pin X0 of <instance IDDR_CLK_MUX>>,
           
           [(<instance IDDR_CLK_MUX>#|)-10,<port CLK_IO>#-] ->
           [ , <pin DESCLK of <instance IDDR>>#-] ->
           <pin DESCLK of <instance IDDR>>,
           
           [(<instance IDDR_CLK_MUX>#|)-10, <pin DESCLK of <instance IDDR>>#-] ->
           [ ,<pin X3 of <instance ODDR_CLK_MUX>>#-]->
           <pin X3 of <instance ODDR_CLK_MUX>>,
           
           [(<instance IDDR_CLK_MUX>#|)-10, <pin X3 of <instance ODDR_CLK_MUX>>#-] ->
           [ , <pin X0 of <instance SERCLK_MUX>>#-] ->
           <pin X0 of <instance SERCLK_MUX>>;
           
    line lnDIN
           <pin Y of <instance IN_OUT_DELSEL_MUX>> ->
           [(<pin Y of <instance IN_OUT_DELSEL_MUX>>#|)+2,] ->
           [,<pin DIN of <instance DELAY>>#-] ->       
           <pin DIN of <instance DELAY>>;  
           
    line lnOCLK
           <pin Y of <instance ODDR_CLK_MUX>> ->
           <pin OCLK of <instance ODDR>>; 
           
    line lnICLK
          <pin Y of <instance IDDR_CLK_MUX>> ->
          <pin ICLK of <instance IDDR>>;
          
          
    line lnCLK_SYS_FOR_INPUT
         <pin Y of <instance RCLK_POL_MUX_I>> ->
         [(<pin Y of <instance RCLK_POL_MUX_I>>#|)+2,] ->
         [ ,<pin CLK_SYS of <instance IDDR>>#-] ->
         <pin CLK_SYS of <instance IDDR>>, 
         
         [(<pin Y of <instance RCLK_POL_MUX_I>>#|)+2,<pin Y of <instance RCLK_POL_MUX_I>>#-] ->                 
         [,<pin X2 of <instance IDDR_CLK_MUX>>#-]  ->
         <pin X2 of <instance IDDR_CLK_MUX>>,
 
         [(<pin Y of <instance RCLK_POL_MUX_I>>#|)+2,<pin Y of <instance RCLK_POL_MUX_I>>#-] ->
         [ ,<pin CLK of <instance IFF>>#-] ->
         <pin CLK of <instance IFF>>;    
         
         
    line lnTS_TERM
        <pin TS_TERM of <instance ODDR>> ->
        [,<pin X2 of <instance TERM_OUT_MUX>>#-]  ->
        <pin X2 of <instance TERM_OUT_MUX>> ;
        
    line lnTS_TO
        <pin TS_TO of <instance ODDR>> ->
        [,<pin X2 of <instance TO_OUT_MUX>>#-]  ->
        <pin X2 of <instance TO_OUT_MUX>> ;
        
    line lnTX_FFDO
        <pin Q of <instance OFF>> ->
        <pin X1 of <instance OUTPUT_DATA_MUX>> ;
        
    line lnOUT_EXT
        <port OUT_EXT> ->
        [(<pin Q of <instance OFF>>#|)+4, ] ->
        [,<pin X3 of <instance OUTPUT_DATA_MUX>>#-]  ->
        <pin X3 of <instance OUTPUT_DATA_MUX>> ;  
        
    line lnTX_DATA_0            
        <port TX_DATA[0]> ->
        <pin TX_DATA[0] of <instance ODDR>> ;           
    line lnTX_DATA_1            
        <port TX_DATA[1]> ->
        <pin TX_DATA[1] of <instance ODDR>> ;        
    line lnTX_DATA_2            
       <port TX_DATA[2]> ->
       <pin TX_DATA[2] of <instance ODDR>> ;
    line lnTX_DATA_3
       <port TX_DATA[3]> ->
       <pin TX_DATA[3] of <instance ODDR>> ;
    line lnTX_DATA_4
       <port TX_DATA[4]> ->
       <pin TX_DATA[4] of <instance ODDR>> ;
    line lnTX_DATA_5            
       <port TX_DATA[5]> ->
       <pin TX_DATA[5] of <instance ODDR>>;
 
    line lnTX_DATA_6
       <port TX_DATA[6]> ->
       <pin TX_DATA[6] of <instance ODDR>> ;
       
    line lnTX_DATA_7
       <port TX_DATA[7]> ->
       [(<pin TX_DATA[7] of <instance ODDR>>#|)-4, ] ->
       <pin TX_DATA[7] of <instance ODDR>>,
       
       [(<pin TX_DATA[7] of <instance ODDR>>#|)-4, <pin TX_DATA[7] of <instance ODDR>>#-] ->
       [,<pin X0 of <instance OUTPUT_DATA_MUX>>#-] ->
       [, <pin D of <instance OFF>>#-] ->
       <pin D of <instance OFF>>,
       
       [(<pin TX_DATA[7] of <instance ODDR>>#|)-4,<pin X0 of <instance OUTPUT_DATA_MUX>>#-] ->
       <pin X0 of <instance OUTPUT_DATA_MUX>>;
       
    line lnTS_CTRL_0
        <port TS_CTRL[0]> ->
        [(<pin TS_CTRL[0] of <instance ODDR>>#|)-2, ] ->
        <pin TS_CTRL[0] of <instance ODDR>>,
        
        [(<pin TS_CTRL[0] of <instance ODDR>>#|)-2, <pin TS_CTRL[0] of <instance ODDR>>#-] ->
        [ , <pin X0 of <instance TO_OUT_MUX>>#-] ->
        [ , <pin D of <instance U_TSFF>>#-] ->
        <pin D of <instance U_TSFF>>,
        
        [(<pin TS_CTRL[0] of <instance ODDR>>#|)-2, <pin X0 of <instance TO_OUT_MUX>>#-] ->
        [(<pin X0 of <instance TO_OUT_MUX>>#|)-6, ] ->
        <pin X0 of <instance TO_OUT_MUX>>,
        
        [(<pin X0 of <instance TO_OUT_MUX>>#|)-6,(<pin X0 of <instance TO_OUT_MUX>>)#-] ->
        [ , <pin X0 of <instance TERM_OUT_MUX>>#-] ->
        <pin X0 of <instance TERM_OUT_MUX>>;
        
    line lnTS_CTRL_1           
        <port TS_CTRL[1]> ->
        <pin TS_CTRL[1] of <instance ODDR>> ;
    line lnTS_CTRL_2          
        <port TS_CTRL[2]> ->
        <pin TS_CTRL[2] of <instance ODDR>> ;
    line lnTS_CTRL_3
        <port TS_CTRL[3]> ->
        <pin TS_CTRL[3] of <instance ODDR>> ;               

     line lnIFIFO_WADDR_0            
        <port IFIFO_WADDR[0]> ->
        <pin IFIFO_WADDR[0] of <instance IDDR>> ;           
    line lnIFIFO_WADDR_1            
        <port IFIFO_WADDR[1]> ->
        <pin IFIFO_WADDR[1] of <instance IDDR>> ;        
    line lnIFIFO_WADDR_2            
       <port IFIFO_WADDR[2]> ->
       <pin IFIFO_WADDR[2] of <instance IDDR>> ;   
        
    line lnIFIFO_RADDR_0            
        <port IFIFO_RADDR[0]> ->
        <pin IFIFO_RADDR[0] of <instance IDDR>> ;           
    line lnIFIFO_RADDR_1            
        <port IFIFO_RADDR[1]> ->
        <pin IFIFO_RADDR[1] of <instance IDDR>> ;        
    line lnIFIFO_RADDR_2            
       <port IFIFO_RADDR[2]> ->
       <pin IFIFO_RADDR[2] of <instance IDDR>> ;           
   
    // IFF_RXDATA_SEL_MUX's connect
    line lnRX_DATA_0
        <port RX_DATA[0]> ->
        <pin Y of <instance IFF_RXDATA_SEL_MUX>> ;
    line lnRX_DATA_IFF
        <pin Q of <instance IFF>> ->
        <pin X1 of <instance IFF_RXDATA_SEL_MUX>>;
    line lnRX_DATA_TMP
        <pin RX_DATA[0] of <instance IDDR>> ->
        [(<pin RX_DATA[0] of <instance IDDR>>#|)+2, ] ->
        [ , <pin X0 of <instance IFF_RXDATA_SEL_MUX>>#-] ->
        <pin X0 of <instance IFF_RXDATA_SEL_MUX>>;
    
    line lnRX_DATA_1            
        <port RX_DATA[1]> ->
        <pin RX_DATA[1] of <instance IDDR>> ;
    line lnRX_DATA_2            
       <port RX_DATA[2]> ->
       <pin RX_DATA[2] of <instance IDDR>> ;
    line lnRX_DATA_3            
       <port RX_DATA[3]> ->
       <pin RX_DATA[3] of <instance IDDR>> ;
    line lnRX_DATA_4            
       <port RX_DATA[4]> ->
       <pin RX_DATA[4] of <instance IDDR>> ;
    line lnRX_DATA_5            
        <port RX_DATA[5]> ->
        <pin RX_DATA[5] of <instance IDDR>>;
     line lnRX_DATA_6            
        <port RX_DATA[6]> ->
        <pin RX_DATA[6] of <instance IDDR>> ;
    line lnRX_DATA_7            
        <port RX_DATA[7]> ->
        <pin RX_DATA[7] of <instance IDDR>>;
        
    // Free-hanging lines.  the port connect 1'b0 or 1'b1 
    line lnOFF_LRS_MUX_1
        [(<instance OFF_LRS_MUX>#|)-2, <pin X1 of <instance OFF_LRS_MUX>>#-] -> 
        <pin X1 of <instance OFF_LRS_MUX>>; 

    line lnOFF_CE_MUX_1
        [(<instance OFF_CE_MUX>#|)-2, <pin X1 of <instance OFF_CE_MUX>>#-] -> 
        <pin X1 of <instance OFF_CE_MUX>>;

    line lnIFF_LRS_MUX_1
        [(<instance IFF_LRS_MUX>#|)-2, <pin X1 of <instance IFF_LRS_MUX>>#-] -> 
        <pin X1  of <instance IFF_LRS_MUX>>; 

    line lnIFF_CE_MUX_1
        [(<instance IFF_CE_MUX>#|)-2, <pin X1 of <instance IFF_CE_MUX>>#-] -> 
        <pin X1  of <instance IFF_CE_MUX>>;   

    line lnMIPI_EN_MUX_1
        [(<instance MIPI_EN_MUX>#|)-2, <pin X1 of <instance MIPI_EN_MUX>>#-] -> 
        <pin X1  of <instance MIPI_EN_MUX>>;         

    line lnRCLK_EN_MUX_I_1
        [(<instance RCLK_EN_MUX_I>#|)-2, <pin X1 of <instance RCLK_EN_MUX_I>>#-] ->
        <pin X1 of <instance RCLK_EN_MUX_I>>;
        
    line lnRCLK_EN_MUX_O_1
        [(<instance RCLK_EN_MUX_O>#|)-2, <pin X1 of <instance RCLK_EN_MUX_O>>#-] ->
        <pin X1 of <instance RCLK_EN_MUX_O>>;
    
    line lnTERM_OUT_MUX_3
        [(<instance TERM_OUT_MUX>#|)-2, <pin X3 of <instance TERM_OUT_MUX>>#-] ->
        <pin X3 of <instance TERM_OUT_MUX>>;
        
    line lnTO_OUT_MUX_3
        [(<instance TO_OUT_MUX>#|)-2, <pin X3 of <instance TO_OUT_MUX>>#-] ->
        <pin X3 of <instance TO_OUT_MUX>>;
        
    // for MIPI_EN_MUX
    line lnMIPI_SW_DYN_I
        <port MIPI_SW_DYN_I> ->
        <pin X0  of <instance MIPI_EN_MUX>>;
    
    line lnMIPI_SW_DYN_O
        <pin Y  of <instance MIPI_EN_MUX>> ->
        [<pin TS_TO of <instance ODDR>>#|, ] ->
        <port MIPI_SW_DYN_O>,
        
        [<pin TS_TO of <instance ODDR>>#|, <pin Y  of <instance MIPI_EN_MUX>>#-] ->
        [ , <pin X0 of <instance MIPI_OUT>>#-] ->
        <pin X0 of <instance MIPI_OUT>>;
        
    //
    // Map lines to nets in the logic counterpart

    map (  
            <line lnLRS>                => <wire ntLRS                 of device IOL (structure netlist)> , 
            <line lnTERM_IN>            => <wire ntTERM_IN             of device IOL (structure netlist)> , 
            <line lnTERM>               => <wire ntTERM                of device IOL (structure netlist)> , 
            <line lnIODLY_OV>           => <wire ntIODLY_OV            of device IOL (structure netlist)> , 
            <line lnCE>                 => <wire ntCE                  of device IOL (structure netlist)> , 
            <line lnCLK_SYS>            => <wire ntCLK_SYS             of device IOL (structure netlist)> , 
            <line lnCLK_R>              => <wire ntCLK_R               of device IOL (structure netlist)> , 
            <line lnSERCLK>             => <wire ntSERCLK              of device IOL (structure netlist)> , 
            <line lnDQSI_DEL>           => <wire ntDQSI_DEL            of device IOL (structure netlist)> , 
            <line lnDI>                 => <wire ntDI                  of device IOL (structure netlist)> , 
            <line lnRX_DATA_DD>         => <wire ntRX_DATA_DD          of device IOL (structure netlist)> , 
            <line lnWCLK>               => <wire ntWCLK                of device IOL (structure netlist)> , 
            <line lnWCLK_DEL>           => <wire ntWCLK_DEL            of device IOL (structure netlist)> , 
            <line lnDO_IN>              => <wire ntDO_IN               of device IOL (structure netlist)> , 
            <line lnDO_IN_REVERSE>      => <wire ntDO_IN_REVERSE       of device IOL (structure netlist)> , 
            <line lnDO>                 => <wire ntDO                  of device IOL (structure netlist)> , 
            <line lnDO_OUT>             => <wire ntDO_OUT              of device IOL (structure netlist)> , 
            <line lnDOUT>               => <wire ntDOUT                of device IOL (structure netlist)> , 
            <line lnLRS_IN>             => <wire ntLRS_IN              of device IOL (structure netlist)> , 
            <line lnLRS_OUT>            => <wire ntLRS_OUT             of device IOL (structure netlist)> , 
            <line lnCE_IN>              => <wire ntCE_IN               of device IOL (structure netlist)> , 
            <line lnCE_OUT>             => <wire ntCE_OUT              of device IOL (structure netlist)> , 
            <line lnTS_FF_TO>           => <wire ntTS_FF_TO            of device IOL (structure netlist)> , 
            <line lnTX_DO>              => <wire ntTX_DO               of device IOL (structure netlist)> , 
            <line lnOUTPUT_DATA_SEL>    => <wire ntOUTPUT_DATA_SEL     of device IOL (structure netlist)> , 
            <line lnOUTPUT_DATA_SEL_TMP>    => <wire ntOUTPUT_DATA_SEL_TMP     of device IOL (structure netlist)> , 
            <line lnTO_OUT>             => <wire ntTO_OUT              of device IOL (structure netlist)> , 
            <line lnTERM_OUT>           => <wire ntTERM_OUT            of device IOL (structure netlist)> , 
            <line lnTO_IN>              => <wire ntTO_IN               of device IOL (structure netlist)> , 
            <line lnTO>                 => <wire ntTO                  of device IOL (structure netlist)> , 
            <line lnLRS_SEL>            => <wire ntLRS_SEL             of device IOL (structure netlist)> , 
            <line lnCE_SEL>             => <wire ntCE_SEL              of device IOL (structure netlist)> , 
            <line lnCLK_SYS_I>          => <wire ntCLK_SYS_I           of device IOL (structure netlist)> , 
            <line lnCLK_SYS_O>          => <wire ntCLK_SYS_O           of device IOL (structure netlist)> , 
            <line lnCLK_SYS_FOR_OUTPUT> => <wire ntCLK_SYS_FOR_OUTPUT  of device IOL (structure netlist)> , 
            <line lnCLK_IO>             => <wire ntCLK_IO              of device IOL (structure netlist)> , 
            <line lnDIN>                => <wire ntDIN                 of device IOL (structure netlist)> , 
            <line lnOCLK>               => <wire ntOCLK                of device IOL (structure netlist)> , 
            <line lnICLK>               => <wire ntICLK                of device IOL (structure netlist)> , 
            <line lnCLK_SYS_FOR_INPUT>  => <wire ntCLK_SYS_FOR_INPUT   of device IOL (structure netlist)> , 
            <line lnTS_TERM>            => <wire ntTS_TERM             of device IOL (structure netlist)> , 
            <line lnTS_TO>              => <wire ntTS_TO               of device IOL (structure netlist)> ,  
            <line lnTX_FFDO>            => <wire ntTX_FFDO             of device IOL (structure netlist)> ,
            <line lnOUT_EXT>            => <wire ntOUT_EXT             of device IOL (structure netlist)> ,
            <line lnRX_DATA_IFF>        => <wire ntRX_DATA_IFF         of device IOL (structure netlist)> ,
            <line lnRX_DATA_TMP>        => <wire ntRX_DATA_TMP         of device IOL (structure netlist)> , 
            <line lnMIPI_SW_DYN_I>      => <wire ntMIPI_SW_DYN_I       of device IOL (structure netlist)> ,
            <line lnMIPI_SW_DYN_O>      => <wire ntMIPI_SW_DYN_O       of device IOL (structure netlist)> 
        );

}; // end of schematic schm of IOL        
        
/*******************************************************************************

  Device    [IOL]

  Author    [hejie]

  Abstract  [The floorplan schematic for IOL]

  Revision History:

********************************************************************************/
floorplan
schematic floorplan_view of IOL // pragma PAP_ARC_SHOW_BOUNDING_BOX
{
    generate ( 20*8 # 20*8 );

    device IOL_FF (symbol fpsym_u) U_TSFF
        @[2*8, 4*8];
    device IDDR (symbol fpsym) IDDR
        @[2*8, 12*8];
    device IOL_FF (symbol fpsym_o) OFF
        @[8*8, 4*8];
    device ODDR (symbol fpsym) ODDR
        @[8*8, 12*8];
    device IOL_FF (symbol fpsym_i) IFF
        @[14*8, 4*8];
    device DLY (symbol fpsym) DELAY
        @[14*8, 12*8];


    map (
         <instance U_TSFF >    => <instance U_TSFF    of device IOL (structure fp_struct)> ,
         <instance IDDR>       => <instance IDDR   of device IOL (structure fp_struct)> ,
         <instance OFF>        => <instance OFF    of device IOL (structure fp_struct)> ,
         <instance ODDR>       => <instance ODDR   of device IOL (structure fp_struct)> ,
         <instance IFF>        => <instance IFF   of device IOL (structure fp_struct)> ,
         <instance DELAY>      => <instance DELAY  of device IOL (structure fp_struct)>
        );
};
