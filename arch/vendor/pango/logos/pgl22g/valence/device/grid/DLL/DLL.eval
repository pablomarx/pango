*****************************************************************

  Device    [DLL]

  Author    [yqtan]

  Abstract  [The Grid Device DLL]

  Revision History:

********************************************************************************/
//grid device started
grid
device DLL
{
    // grid_property_def_start
    // grid_property_def_end

    parameter
    (
        config string CP_FAST_LOCK = "TRUE",
        config bit CP_CODE_OFFSET[3:0] = 4'b0000,
        config string CP_DLL_FORCE = "FALSE",
        config bit CP_DLL_CTRL[2:0] = 3'b001
    );
    port
    (
// configuration_body_def_on


    config input SC_CODE_OFFSET[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CODE_OFFSET[3],SC_CODE_OFFSET[2],SC_CODE_OFFSET[1],SC_CODE_OFFSET[0]" */,

    config input SC_DLL_CTRL[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DLL_CTRL[2],SC_DLL_CTRL[1],SC_DLL_CTRL[0]" */,

    config input SC_DLL_FORCE = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DLL_FORCE" */,

    config input SC_FAST_LOCK = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FAST_LOCK" */,

// configuration_body_def_end

        input CLK_IN = 1'b1,
        input UPDATE_N = 1'b1,
        input RST_DLL = 1'b1,
        input DLL_FREEZE = 1'b1,
        output CTRL_CODE[7:0],
        output DIV_OSCCLK_T,
        output DIV_CLKIN_T,
        output LOCK
    );
};
//grid device end


/*******************************************************************************

  Device    [DLL_INST]

  Author    [yqtan]

  Abstract  [The structure netlist of DLL_INST is described in the similar fashion 
             as in HDL. In unit instantiation statement, the formal pin may be 
             connected to net which is declared explicitly. 
             
             In Valence, the connection can also be made from formal pin to other 
             pin or port, in which case Valence compiler shall create the net to 
             fulfil the connection. The built-in naming convention is kicked in 
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/
//grid device structure netlist started

structure netlist of DLL
{
    
};
//grid device structure netlist end



//grid device configure body started

configuration cfg of DLL
{

 // assign config body begin
    SC_CODE_OFFSET   :=  CP_CODE_OFFSET;
    SC_DLL_CTRL      :=  CP_DLL_CTRL;
    SC_DLL_FORCE     :=  (CP_DLL_FORCE == "TRUE")? 1'b1 : 1'b0;
    SC_FAST_LOCK     :=  (CP_FAST_LOCK == "TRUE")? 1'b1 : 1'b0;
// assign config body end

//initial config body0 begin
    if((CP_DLL_FORCE == "TRUE")||(CP_DLL_FORCE == "FALSE"))
    {

    }
    else
    {
        error (" golden_dll error: illegal setting for CP_DLL_FORCE := %s",CP_DLL_FORCE);
    }
    if((CP_FAST_LOCK == "TRUE")||(CP_FAST_LOCK == "FALSE"))
    {

    }
    else
    {
        error (" golden_dll error: illegal setting for CP_FAST_LOCK := %s",CP_FAST_LOCK);
    }

//initial config body0 end

};

//grid device configure body end

timing  dll_tnl of DLL
{
    int DELAY_STEP_OFFSET = (CP_CODE_OFFSET == 4'b1111) ? -4 :
                            (CP_CODE_OFFSET == 4'b1110) ? -3 :
                            (CP_CODE_OFFSET == 4'b1101) ? -2 :
                            (CP_CODE_OFFSET == 4'b1100) ? -1 :
                            (CP_CODE_OFFSET == 4'b1000) ?  1 :
                            (CP_CODE_OFFSET == 4'b1001) ?  2 :
                            (CP_CODE_OFFSET == 4'b1010) ?  3 :
                            (CP_CODE_OFFSET == 4'b1011) ?  4 : 0;
    operator V_DLL V_DLL
        parameter map
        (
            DELAY_STEP_OFFSET => DELAY_STEP_OFFSET,
            GRS_EN            => CP_DLL_CTRL[2] == 1'b1 ? "TRUE" : "FALSE",
            FAST_LOCK         => CP_FAST_LOCK
        )
        port map
        (
            CLKIN        =>   CLK_IN,
            UPDATE_N     =>   UPDATE_N,
            RST          =>   RST_DLL,
            PWD          =>   DLL_FREEZE,
            DELAY_STEP   =>   CTRL_CODE,
            LOCK         =>   LOCK
        );
};
