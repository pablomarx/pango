*****************************************************************

  Device    [CKEBMUXMUX]

  Author    [yqtan]

  Abstract  [The Grid Device CKEBMUX]

  Revision History: 2016/04/29

********************************************************************************/
//grid device started
grid
device CKEBMUX
{
    // grid_property_def_start
    // grid_property_def_end

    parameter
    (
        config bit CP_CKEBMUX_0[3:0] = 4'b0000,
        config bit CP_CKEBMUX_1[3:0] = 4'b0000,
        config bit CP_CKEBMUX_2[3:0] = 4'b0000,
        config bit CP_CKEBMUX_3[3:0] = 4'b0000,
        config bit CP_CKEBMUX_4[3:0] = 4'b0000,
        config bit CP_CKEBMUX_5[3:0] = 4'b0000,
        config bit CP_CKEBMUX_6[3:0] = 4'b0000,
        config bit CP_CKEBMUX_7[3:0] = 4'b0000
    );
    port
    (
// configuration_body_def_on


    config input SC_CKEBMUX_0[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CKEBMUX_0[3],SC_CKEBMUX_0[2],SC_CKEBMUX_0[1],SC_CKEBMUX_0[0]" */,

    config input SC_CKEBMUX_1[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CKEBMUX_1[3],SC_CKEBMUX_1[2],SC_CKEBMUX_1[1],SC_CKEBMUX_1[0]" */,

    config input SC_CKEBMUX_2[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CKEBMUX_2[3],SC_CKEBMUX_2[2],SC_CKEBMUX_2[1],SC_CKEBMUX_2[0]" */,

    config input SC_CKEBMUX_3[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CKEBMUX_3[3],SC_CKEBMUX_3[2],SC_CKEBMUX_3[1],SC_CKEBMUX_3[0]" */,

    config input SC_CKEBMUX_4[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CKEBMUX_4[3],SC_CKEBMUX_4[2],SC_CKEBMUX_4[1],SC_CKEBMUX_4[0]" */,

    config input SC_CKEBMUX_5[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CKEBMUX_5[3],SC_CKEBMUX_5[2],SC_CKEBMUX_5[1],SC_CKEBMUX_5[0]" */,

    config input SC_CKEBMUX_6[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CKEBMUX_6[3],SC_CKEBMUX_6[2],SC_CKEBMUX_6[1],SC_CKEBMUX_6[0]" */,

    config input SC_CKEBMUX_7[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CKEBMUX_7[3],SC_CKEBMUX_7[2],SC_CKEBMUX_7[1],SC_CKEBMUX_7[0]" */,

// configuration_body_def_end

        input CLK_IN[15:0] = 16'b1111_1111_1111_1111,
        output CLK_OUT[7:0]
    );
};
//grid device end


/*******************************************************************************

  Device    [CKEBMUX]

  Author    [yqtan]

  Abstract  [The structure netlist of CKEBMUX is described in the similar fashion 
             as in HDL. In unit instantiation statement, the formal pin may be 
             connected to net which is declared explicitly. 
             
             In Valence, the connection can also be made from formal pin to other 
             pin or port, in which case Valence compiler shall create the net to 
             fulfil the connection. The built-in naming convention is kicked in 
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/
//grid device structure netlist started

structure netlist of CKEBMUX
{
    routing
    {
        ( CLK_IN[0] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[0] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[0] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[0] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[0] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[0] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[0] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[0] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[10] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[10] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[10] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[10] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[10] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[10] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[10] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[10] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[11] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[11] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[11] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[11] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[11] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[11] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[11] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[11] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[12] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[12] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[12] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[12] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[12] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[12] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[12] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[12] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[13] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[13] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[13] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[13] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[13] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[13] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[13] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[13] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[14] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[14] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[14] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[14] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[14] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[14] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[14] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[14] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[15] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[15] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[15] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[15] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[15] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[15] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[15] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[15] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[1] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[1] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[1] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[1] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[1] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[1] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[1] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[1] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[2] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[2] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[2] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[2] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[2] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[2] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[2] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[2] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[3] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[3] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[3] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[3] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[3] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[3] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[3] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[3] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[4] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[4] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[4] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[4] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[4] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[4] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[4] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[4] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[5] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[5] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[5] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[5] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[5] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[5] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[5] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[5] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[6] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[6] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[6] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[6] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[6] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[6] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[6] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[6] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[7] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[7] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[7] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[7] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[7] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[7] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[7] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[7] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[8] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[8] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[8] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[8] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[8] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[8] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[8] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[8] --> CLK_OUT[7] ) = 150;
        ( CLK_IN[9] --> CLK_OUT[0] ) = 150;
        ( CLK_IN[9] --> CLK_OUT[1] ) = 150;
        ( CLK_IN[9] --> CLK_OUT[2] ) = 150;
        ( CLK_IN[9] --> CLK_OUT[3] ) = 150;
        ( CLK_IN[9] --> CLK_OUT[4] ) = 150;
        ( CLK_IN[9] --> CLK_OUT[5] ) = 150;
        ( CLK_IN[9] --> CLK_OUT[6] ) = 150;
        ( CLK_IN[9] --> CLK_OUT[7] ) = 150;

    }
};
//grid device structure netlist end


//grid device configure body started

configuration cfg of CKEBMUX
{
    if ( CLK_IN[0] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b0000;
    }

    if ( CLK_IN[1] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b0001;
    }

    if ( CLK_IN[2] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b0010;
    }

    if ( CLK_IN[3] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b0011;
    }

    if ( CLK_IN[4] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b0100;
    }

    if ( CLK_IN[5] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b0101;
    }

    if ( CLK_IN[6] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b0110;
    }

    if ( CLK_IN[7] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b0111;
    }

    if ( CLK_IN[8] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b1000;
    }

    if ( CLK_IN[9] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b1001;
    }

    if ( CLK_IN[10] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b1010;
    }

    if ( CLK_IN[11] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b1011;
    }

    if ( CLK_IN[12] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b1100;
    }

    if ( CLK_IN[13] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b1101;
    }

    if ( CLK_IN[14] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b1110;
    }

    if ( CLK_IN[15] --> CLK_OUT[0] )
    {
        SC_CKEBMUX_0 := 4'b1111;
    }

    if ( CLK_IN[0] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b0000;
    }

    if ( CLK_IN[1] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b0001;
    }

    if ( CLK_IN[2] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b0010;
    }

    if ( CLK_IN[3] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b0011;
    }

    if ( CLK_IN[4] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b0100;
    }

    if ( CLK_IN[5] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b0101;
    }

    if ( CLK_IN[6] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b0110;
    }

    if ( CLK_IN[7] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b0111;
    }

    if ( CLK_IN[8] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b1000;
    }

    if ( CLK_IN[9] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b1001;
    }

    if ( CLK_IN[10] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b1010;
    }

    if ( CLK_IN[11] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b1011;
    }

    if ( CLK_IN[12] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b1100;
    }

    if ( CLK_IN[13] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b1101;
    }

    if ( CLK_IN[14] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b1110;
    }

    if ( CLK_IN[15] --> CLK_OUT[1] )
    {
        SC_CKEBMUX_1 := 4'b1111;
    }

    if ( CLK_IN[0] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b0000;
    }

    if ( CLK_IN[1] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b0001;
    }

    if ( CLK_IN[2] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b0010;
    }

    if ( CLK_IN[3] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b0011;
    }

    if ( CLK_IN[4] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b0100;
    }

    if ( CLK_IN[5] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b0101;
    }

    if ( CLK_IN[6] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b0110;
    }

    if ( CLK_IN[7] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b0111;
    }

    if ( CLK_IN[8] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b1000;
    }

    if ( CLK_IN[9] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b1001;
    }

    if ( CLK_IN[10] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b1010;
    }

    if ( CLK_IN[11] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b1011;
    }

    if ( CLK_IN[12] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b1100;
    }

    if ( CLK_IN[13] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b1101;
    }

    if ( CLK_IN[14] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b1110;
    }

    if ( CLK_IN[15] --> CLK_OUT[2] )
    {
        SC_CKEBMUX_2 := 4'b1111;
    }

    if ( CLK_IN[0] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b0000;
    }

    if ( CLK_IN[1] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b0001;
    }

    if ( CLK_IN[2] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b0010;
    }

    if ( CLK_IN[3] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b0011;
    }

    if ( CLK_IN[4] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b0100;
    }

    if ( CLK_IN[5] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b0101;
    }

    if ( CLK_IN[6] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b0110;
    }

    if ( CLK_IN[7] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b0111;
    }

    if ( CLK_IN[8] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b1000;
    }

    if ( CLK_IN[9] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b1001;
    }

    if ( CLK_IN[10] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b1010;
    }

    if ( CLK_IN[11] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b1011;
    }

    if ( CLK_IN[12] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b1100;
    }

    if ( CLK_IN[13] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b1101;
    }

    if ( CLK_IN[14] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b1110;
    }

    if ( CLK_IN[15] --> CLK_OUT[3] )
    {
        SC_CKEBMUX_3 := 4'b1111;
    }

    if ( CLK_IN[0] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b0000;
    }

    if ( CLK_IN[1] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b0001;
    }

    if ( CLK_IN[2] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b0010;
    }

    if ( CLK_IN[3] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b0011;
    }

    if ( CLK_IN[4] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b0100;
    }

    if ( CLK_IN[5] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b0101;
    }

    if ( CLK_IN[6] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b0110;
    }

    if ( CLK_IN[7] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b0111;
    }

    if ( CLK_IN[8] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b1000;
    }

    if ( CLK_IN[9] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b1001;
    }

    if ( CLK_IN[10] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b1010;
    }

    if ( CLK_IN[11] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b1011;
    }

    if ( CLK_IN[12] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b1100;
    }

    if ( CLK_IN[13] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b1101;
    }

    if ( CLK_IN[14] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b1110;
    }

    if ( CLK_IN[15] --> CLK_OUT[4] )
    {
        SC_CKEBMUX_4 := 4'b1111;
    }

    if ( CLK_IN[0] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b0000;
    }

    if ( CLK_IN[1] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b0001;
    }

    if ( CLK_IN[2] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b0010;
    }

    if ( CLK_IN[3] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b0011;
    }

    if ( CLK_IN[4] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b0100;
    }

    if ( CLK_IN[5] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b0101;
    }

    if ( CLK_IN[6] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b0110;
    }

    if ( CLK_IN[7] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b0111;
    }

    if ( CLK_IN[8] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b1000;
    }

    if ( CLK_IN[9] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b1001;
    }

    if ( CLK_IN[10] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b1010;
    }

    if ( CLK_IN[11] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b1011;
    }

    if ( CLK_IN[12] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b1100;
    }

    if ( CLK_IN[13] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b1101;
    }

    if ( CLK_IN[14] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b1110;
    }

    if ( CLK_IN[15] --> CLK_OUT[5] )
    {
        SC_CKEBMUX_5 := 4'b1111;
    }

    if ( CLK_IN[0] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b0000;
    }

    if ( CLK_IN[1] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b0001;
    }

    if ( CLK_IN[2] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b0010;
    }

    if ( CLK_IN[3] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b0011;
    }

    if ( CLK_IN[4] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b0100;
    }

    if ( CLK_IN[5] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b0101;
    }

    if ( CLK_IN[6] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b0110;
    }

    if ( CLK_IN[7] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b0111;
    }

    if ( CLK_IN[8] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b1000;
    }

    if ( CLK_IN[9] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b1001;
    }

    if ( CLK_IN[10] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b1010;
    }

    if ( CLK_IN[11] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b1011;
    }

    if ( CLK_IN[12] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b1100;
    }

    if ( CLK_IN[13] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b1101;
    }

    if ( CLK_IN[14] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b1110;
    }

    if ( CLK_IN[15] --> CLK_OUT[6] )
    {
        SC_CKEBMUX_6 := 4'b1111;
    }

    if ( CLK_IN[0] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b0000;
    }

    if ( CLK_IN[1] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b0001;
    }

    if ( CLK_IN[2] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b0010;
    }

    if ( CLK_IN[3] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b0011;
    }

    if ( CLK_IN[4] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b0100;
    }

    if ( CLK_IN[5] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b0101;
    }

    if ( CLK_IN[6] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b0110;
    }

    if ( CLK_IN[7] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b0111;
    }

    if ( CLK_IN[8] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b1000;
    }

    if ( CLK_IN[9] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b1001;
    }

    if ( CLK_IN[10] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b1010;
    }

    if ( CLK_IN[11] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b1011;
    }

    if ( CLK_IN[12] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b1100;
    }

    if ( CLK_IN[13] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b1101;
    }

    if ( CLK_IN[14] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b1110;
    }

    if ( CLK_IN[15] --> CLK_OUT[7] )
    {
        SC_CKEBMUX_7 := 4'b1111;
    }

};

//grid device configure body end

