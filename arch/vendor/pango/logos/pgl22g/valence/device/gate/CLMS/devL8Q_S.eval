*******************************************************************

  Device    [devL8Q_S]

  Author    [guoxi]

  Abstract  [LUT-8 PACKING WITH FF]

  Revision History:

********************************************************************************/
gate
device devL8Q_S : device CLMS
{
    parameter
    (
        config bit     CP_INITB[31:0] = 32'hffff_ffff,        
        config bit     CP_INITA[31:0] = 32'hffff_ffff,
        config bit     CP_INITD[31:0] = 32'hffff_ffff,
        config bit     CP_INITC[31:0] = 32'hffff_ffff,
        config string  CP_MODEB       = "LUT5",         //"LUT5" "ROM" "WMUX" "RAM" "ARITH" "PRIENC" "MUX4" "XOR" "COMP" "RAM"
        config string  CP_MODEA       = "LUT5",         //"LUT5" "ROM" "WMUX" "RAM" "ARITH" "PRIENC" "MUX4" "XOR" "COMP" "RAM"
        config string  CP_MODED       = "LUT5",         //"LUT5" "ROM" "WMUX" "RAM" "ARITH" "PRIENC" "MUX4" "XOR" "COMP" "RAM"
        config string  CP_MODEC       = "LUT5",         //"LUT5" "ROM" "WMUX" "RAM" "ARITH" "PRIENC" "MUX4" "XOR" "COMP" "RAM"
        config string  CP_MASK      := "FALSE", 
        config string  CP_Y3MUX_SEL   := "MF",           //"FX":F3 "CYX":CYD "MF":L8
        config string  CP_Y2MUX_SEL   := "FX",           //"FX":F2 "CYX":CYC "MF":QP1
        config string  CP_Y1MUX_SEL   := "MF",           //"FX":F1 "CYX":CYB "MF":L7
        config string  CP_Y0MUX_SEL   := "FX",           //"FX":F0 "CYX":CYA "MF":QP0
        config string  CP_Q3MUX_SEL   := "YX",           //"YX":Y3 "MX":M3 "SRQ":QP1
        config string  CP_RS_MODE     = "ASYNC",        //"SYNC" "ASYNC" - CLMS Global
        config string  CP_FF3_RS      = "SET",          //"RESET" "SET"
        config string  CP_CEMUX_SEL   = "LOCAL",        //"LOCAL":CE; "CHAIN":CEIN
        config string  CP_RSMUX_SEL   = "LOCAL",        //"LOCAL":RS; "CHAIN":RSIN
        config string  CP_GRS_EN  = "FALSE",
        config string  CP_LRS_EN  = "FALSE",            //"Disable"; "Enable"
        config string  CP_LRS_POL = "FALSE",            //"RS"; "Invert RS" - CLMS Global
        config string  CP_LCE_EN  = "FALSE",            // "Disable"; "Enable"
        config string  CP_LCE_POL = "FALSE",            // "CE";  "Invert CE" - CLMS Global
        config string  CP_CLK_POL = "FALSE"             //"CLK"; "Invert CLK" - CLMS Global
    );
    port
    (        
        // These are the ports of FGD.
        input    D0,
        input    D1,
        input    D2,
        input    D3,
        input    D4,
        input    DD,
        output   Y3,
        output   Q3,
               
        // These are the ports of FGC.
        input    C0,
        input    C1,
        input    C2,
        input    C3,
        input    C4,
        input    CD,
        output   Y2,
        
        // These are the ports of FGB.
        input    B0,
        input    B1,
        input    B2,
        input    B3,
        input    B4,
        input    BD,
        output   Y1,
        
        // These are the ports of FGA.
        input    A0,
        input    A1,
        input    A2,
        input    A3,
        input    A4,
        input    AD,
        output   Y0,

        // These are the ports shared with FYC and FYD.
        output   Y6CD,

        // These are the ports shared with FYA and FYB.
        output   Y6AB,
        
        // These are the ports of RAM.
        // Here are the ports of RAM write adress( WA[3:0] ), and shared with ROM. 
        input    M1,
        input    M3, 
        input    M0,
        input    M2,

        // Here are the ports of CLMS for controlling.
        input    RS,
        input    CE,
        input    CLK,
     
        // These are the ports for Group, such as Carry Chain, ROM, SHIFT.
        input    L7IN,   

        // These are the Ports for Global Controlling, such as Global Reset.
        input    RSCI,
        input    CECI,
        output   RSCO,
        output   CECO

    );

}// end of device devL8Q_S

/*******************************************************************************

  Device    [devL8Q_S]

  Author    [guoxi]

  Abstract  [The structure netlist of devL8Q_S is described in the similar fashion 
             as in HDL. In unit instantiation statement, the formal pin may be 
             connected to net which is declared explicitly. 
             
             In Valence, the connection can also be made from formal pin to other 
             pin or port, in which case Valence compiler shall create the net to 
             fulfil the connection. The built-in naming convention is kicked in 
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/
structure netlist of devL8Q_S
{
    // Wires for input ports
    wire ntD0;
    wire ntD1;
    wire ntD2;
    wire ntD3;
    wire ntD4;
    wire ntDD;
    
    wire ntC0;
    wire ntC1;
    wire ntC2;
    wire ntC3;
    wire ntC4;
    wire ntCD;
    
    wire ntB0;
    wire ntB1;
    wire ntB2;
    wire ntB3;
    wire ntB4;
    wire ntBD;
    
    wire ntA0;
    wire ntA1;
    wire ntA2;
    wire ntA3;
    wire ntA4;
    wire ntAD; 
    
    wire ntM1;
    wire ntM0;
    wire ntM2;
    wire ntM3;
    wire ntL7IN;
    
    wire ntRS;
    wire ntCE;
    wire ntCLK;
    wire ntRSCI;
    wire ntCECI;

    // Wires connecting to output ports
    wire ntY3;
    wire ntY2;
    wire ntY1;
    wire ntY0;
    wire ntQ3;
    
    wire ntY6CD;
    wire ntY6AB;

    wire ntCECO;
    wire ntRSCO;

    // Internal wires
    wire ntL5A;
    wire ntL5B;
    wire ntL5C;
    wire ntL5D;
    wire ntQD3;    
    
    wire ntL7OUT;
    wire ntL8;
    wire ntCLKCO;
    wire ntRS_P;
    wire ntCE_P;

    //
    // Connection to ports
    //
    ntD0      <= D0;
    ntD1      <= D1;
    ntD2      <= D2;
    ntD3      <= D3;
    ntD4      <= D4; 
    ntDD      <= DD;
 
    ntC0      <= C0;
    ntC1      <= C1;
    ntC2      <= C2;
    ntC3      <= C3;
    ntC4      <= C4;
    ntCD      <= CD;
 
    ntB0      <= B0;
    ntB1      <= B1; 
    ntB2      <= B2;
    ntB3      <= B3;
    ntB4      <= B4;
    ntBD      <= BD;
 
    ntA0      <= A0;
    ntA1      <= A1;
    ntA2      <= A2;
    ntA3      <= A3;
    ntA4      <= A4;
    ntAD      <= AD;
 
    ntM1      <= M1;
    ntM3      <= M3;
    ntM0      <= M0;
    ntM2      <= M2;

    ntRS      <= RS;
    ntCE      <= CE;
    ntCLK     <= CLK;
    ntL7IN    <= L7IN;

    ntRSCI    <= RSCI;
    ntCECI    <= CECI; 

    Y3        <= ntY3;
    Q3        <= ntQ3;
    Y2        <= ntY2;
    Y1        <= ntY1;
    Y0        <= ntY0;
    Y6CD      <= ntY6CD;
    Y6AB      <= ntY6AB;    
    RSCO      <= ntRSCO;
    CECO      <= ntCECO;
    
    //
    // Instances. FGD section
    //

    device FYSC FYD
        parameter map
        (
            CP_INIT   => CP_INITD,
            CP_MODE   => CP_MODED,
            CP_MASK   => CP_MASK 
        )
        port map
        (
            A0   => ntD0,
            A1   => ntD1,
            A2   => ntD2,
            A3   => ntD3,
            A4   => ntD4,
            AD   => ntDD,
            L5   => ntL5D
        );

    device YMUX  Y3MUX
        parameter map
        (
            CP_OUT_SEL => CP_Y3MUX_SEL
        )
        port map
        (
            Y    => ntY3,
            MF   => ntL8
        );
    
    device QMUX  Q3MUX
        parameter map
        (
            CP_OUT_SEL => CP_Q3MUX_SEL
        )
        port map
        (
            Q    => ntQD3,
            YX   => ntY3
        );
    
    device FF FF3
        parameter map
        (
            CP_GRS_EN  => CP_GRS_EN,
            CP_RS_MODE => CP_RS_MODE,
            CP_FF_RS   => CP_FF3_RS
        )
        port map
        (
            Q   => ntQ3,
            D   => ntQD3,
            CE  => ntCECO,
            CLK => ntCLKCO,
            RS  => ntRSCO
        );

    //
    // Instances. FYC section
    //

    device FYS FYC
        parameter map
        (
            CP_INIT   => CP_INITC,
            CP_MODE   => CP_MODEC,
            CP_MASK   => CP_MASK 
        )
        port map
        (
            A0   => ntC0,
            A1   => ntC1,
            A2   => ntC2,
            A3   => ntC3,
            A4   => ntC4,
            AD   => ntCD,
            L5   => ntL5C
        );

    device YMUX  Y2MUX
        parameter map
        (
            CP_OUT_SEL => CP_Y2MUX_SEL
        )
        port map
        (
            Y    => ntY2,
            FX   => ntL5C
        );

    //
    // Instances. Common to FYC and FYD sections
    //
    
    device MUX2 L6CDMUX
        port map
        (
            DI0  => ntL5C,
            DI1  => ntL5D,
            DOUT => ntY6CD,
            SEL  => ntM1
        );

    //
    // Instances. FGB section
    //

    device FYSC FYB
        parameter map
        (
            CP_INIT   => CP_INITB,
            CP_MODE   => CP_MODEB,
            CP_MASK   => CP_MASK 
        )
        port map
        (
            A0   => ntB0,
            A1   => ntB1,
            A2   => ntB2,
            A3   => ntB3,
            A4   => ntB4,
            AD   => ntBD,
            L5   => ntL5B
         );
         
    device YMUX  Y1MUX
        parameter map
        (
            CP_OUT_SEL => CP_Y1MUX_SEL
        )
        port map
        (
            Y    => ntY1,
            FX   => ntL5B
        );

    //
    // Instances. FYA section
    //

    device FYS FYA
        parameter map
        (
            CP_INIT   => CP_INITA,
            CP_MODE   => CP_MODEA,
            CP_MASK   => CP_MASK               
         )
         port map
         (
            A0   => ntA0,
            A1   => ntA1,
            A2   => ntA2,
            A3   => ntA3,
            A4   => ntA4,
            AD   => ntAD,
            L5   => ntL5A
         );
    
    device YMUX  Y0MUX
        parameter map
        (
            CP_OUT_SEL => CP_Y0MUX_SEL
        )
        port map
        (
            Y    => ntY0,
            FX   => ntL5A
        );

    //
    // Instances. Common to FYA and FYB sections
    //
    
    device MUX2 L6ABMUX
        port map
        (
            DI0  => ntL5A,
            DI1  => ntL5B,
            DOUT => ntY6AB,
            SEL  => ntM0
        );
        
    device MUX2 L7MUX
        port map
        (
            DI0  => ntY6AB,
            DI1  => ntY6CD,
            DOUT => ntL7OUT,
            SEL  => ntM2
        );   
    
    device MUX2 L8MUX
        port map
        (
            DI0  => ntL7OUT,
            DI1  => ntL7IN,
            DOUT => ntL8,
            SEL  => ntM3
        );

    device MUX2_P  CEMUX
        parameter map
        (
            SEL => CP_CEMUX_SEL
        )
        port map
        (
            DOUT  => ntCECO,
            DI1   => ntCECI,
            DI0   => ntCE_P
        );
    
    device MUX2_P  RSMUX
        parameter map
        (
            SEL => CP_RSMUX_SEL
        )
        port map
        (
            DOUT  => ntRSCO,
            DI1   => ntRSCI,
            DI0   => ntRS_P
        );

    device CLK_POLMUX  CLKPOLMUX
        parameter map
        (
            CP_CLK_POL => CP_CLK_POL
        )
        port map
        (
            Y  => ntCLKCO,
            IN => ntCLK
        );
        
    device LCE_POLMUX  LCEPOLMUX
        parameter map
        (
            CP_LCE_EN  => CP_LCE_EN,
            CP_LCE_POL => CP_LCE_POL
        )
        port map
        (
            Y  => ntCE_P,
            IN => ntCE
        );
        
    device LRS_POLMUX  LRSPOLMUX
        parameter map
        (
            CP_LRS_EN  => CP_LRS_EN,
            CP_LRS_POL => CP_LRS_POL
        )
        port map
        (
            Y  => ntRS_P,
            IN => ntRS
        ); 

}; // end of structure netlist of devL8Q_S

