*****************************************************************

  Device    [devALCQ_S]

  Author    [guoxi]

  Abstract  [THE DEVICE CAN BE USED FOR ADDITION+FF(CARRY CHAIN) WITH PART 
             A OF CLMS.]

  Revision History:

********************************************************************************/
gate
device devALCQ_S : device devA_S
{
    parameter
    (
        config bit      CP_INITA[31:0] = 32'hffff_ffff,
        config string   CP_MODEA       = "LUT5",     //"LUT5" "ROM" "WMUX" "RAM" "ARITH" "PRIENC" "MUX4" "XOR" "COMP" "RAM"
        config string   CP_MASK      := "FALSE",    //1'b0: Disable; 1'b1: Enable         

        config string   CP_Y0MUX_SEL   = "FX",       //"FX":F0 "CYX":CYA "MF":QP0
        config string   CP_Q0MUX_SEL   = "YX",       //"YX":Y0 "MX":M0 "SRQ":SRCI
        config string   CP_RS_MODE     = "ASYNC",    //"SYNC" "ASYNC" - CLMS Global
        config string   CP_FF0_RS      = "SET",      //"RESET" "SET"
        config string   CP_RSMUX_SEL   = "LOCAL",    //"LOCAL":RS; "CHAIN":RSIN
        config string   CP_CEMUX_SEL   = "LOCAL",    //"LOCAL":CE; "CHAIN":CEIN
        config string   CP_GRS_EN  = "FALSE",        //1'b0: "FALSE"; 1'b1: "TRUE"  
        config string   CP_LRS_POL = "FALSE",        //1'b0: "RS"; 1'b1: "Invert RS" - CLMS Global
        config string   CP_LRS_EN  = "TRUE",        //1'b0: "Disable"; 1'b1: "Enable"
        config string   CP_LCE_POL = "FALSE",        //1'b0: "CE"; 1'b1: "Invert CE" - CLMS Global
        config string   CP_LCE_EN  = "TRUE",        //1'b0: "Disable"; 1'b1: "Enable"
        config string   CP_CLK_POL = "FALSE"         //1'b0: "CLK"; 1'b1: "Invert CLK" - CLMS Global
    );
    
    port
    (
        input    A0,
        input    A1,
        input    A2,
        input    A3,
        input    A4,
        input    AD,
        input    CIN,
        input    RSCI,
        input    CECI,
        input    RS,
        input    CE,
        input    CLK,
        
        output   Y0,
        output   Q0,
        output   RSCO,
        output   CECO,
             
        logic  output   FGA_COUT
    );
}; // end of device devALCQ_S


/*******************************************************************************

  Device    [devALCQ_S]

  Author    [guoxi]

  Abstract  []

  Revision History:

********************************************************************************/
structure netlist of devALCQ_S
{
    // Wires for input ports
    wire ntA0;
    wire ntA1;
    wire ntA2;
    wire ntA3;
    wire ntA4;
    wire ntAD;
    wire ntCIN;
    
    wire ntRS;
    wire ntCE;
    wire ntCLK;  
    wire ntRSCI;
    wire ntCECI;

    // Wires connecting to output ports
    wire ntY0;
    wire ntQ0;
    wire ntRSCO;
    wire ntCECO;

    // Internal wires
    wire ntL5A;
    wire ntCYA;
    wire ntQD0;
    wire ntCLKCO;
    wire ntRS_P;
    wire ntCE_P;
   
    //
    // Connection to ports
    //
 
    ntA0      <= A0;
    ntA1      <= A1;
    ntA2      <= A2;
    ntA3      <= A3;
    ntA4      <= A4;
    ntAD      <= AD;
    ntCIN     <= CIN;
    ntRS      <= RS;
    ntCE      <= CE;
    ntCLK     <= CLK;
    ntRSCI    <= RSCI;
    ntCECI    <= CECI;

    Y0       <= ntY0;
    Q0       <= ntQ0;
    RSCO     <= ntRSCO;
    CECO     <= ntCECO;
    FGA_COUT <= ntCYA;
    
    //
    // Instances. FGA section
    //

    device FYS FYA
        parameter map
        (
            CP_INIT   => CP_INITA,
            CP_MODE   => CP_MODEA,
            CP_MASK   => CP_MASK               
        )
        port map 
        (
            A0   => ntA0,
            A1   => ntA1,
            A2   => ntA2,
            A3   => ntA3,
            A4   => ntA4,
            AD   => ntAD,
            CIN  => ntCIN,
            COUT => ntCYA,
            L5   => ntL5A
        );

    device YMUX  Y0MUX
        parameter map
        (
            CP_OUT_SEL => CP_Y0MUX_SEL
        )
        port map
        (
            Y    => ntY0,
            FX   => ntL5A,
            CYX  => ntCYA
        );
    
    device QMUX  Q0MUX
        parameter map
        (
            CP_OUT_SEL => CP_Q0MUX_SEL
        )
        port map
        (
            Q    => ntQD0,
            YX   => ntY0
        );

    device FF FF0
        parameter map
        (
            CP_GRS_EN  => CP_GRS_EN,
            CP_RS_MODE => CP_RS_MODE,
            CP_FF_RS   => CP_FF0_RS
        )
        port map
        (
            Q   => ntQ0,
            D   => ntQD0,
            CE  => ntCECO,
            CLK => ntCLKCO,
            RS  => ntRSCO
        );
    
    device MUX2_P  RSMUX
        parameter map
        (
            SEL => CP_RSMUX_SEL
        )
        port map
        (
            DOUT  => ntRSCO,
            DI1   => ntRSCI,
            DI0   => ntRS_P
        );
    
    device MUX2_P  CEMUX
        parameter map
        (
            SEL => CP_CEMUX_SEL
        )
        port map
        (
            DOUT  => ntCECO,
            DI1   => ntCECI,
            DI0   => ntCE_P
        );


    device LRS_POLMUX  LRSPOLMUX
        parameter map
        (
            CP_LRS_EN  => CP_LRS_EN,
            CP_LRS_POL => CP_LRS_POL
        )
        port map
        (
            Y  => ntRS_P,
            IN => ntRS
        );

    device LCE_POLMUX  LCEPOLMUX
        parameter map
        (
            CP_LCE_EN  => CP_LCE_EN,
            CP_LCE_POL => CP_LCE_POL
        )
        port map
        (
            Y  => ntCE_P,
            IN => ntCE
        );

    device CLK_POLMUX  CLKPOLMUX
        parameter map
        (
            CP_CLK_POL => CP_CLK_POL
        )
        port map
        (
            Y  => ntCLKCO,
            IN => ntCLK
        );
}; // end of structure netlist of devALCQ_S



