*****************************************************************

  Device    [devIBUFIOLQDEL]

  Author    [yqtan]

  Abstract  [device base on IOL, used as inout path through to IOB
             with OFF IFF TFF]

  Revision History:

********************************************************************************/

gate
device devIBUFIOLQDEL : device IOL
{
    parameter
    (
        config string CP_INCLK_POL     = "FALSE",    //"FALSE": Normal; "TRUE": Inverted
        config string CP_CE_POL        = "FALSE",    //"FALSE": Normal; "TRUE": Inverted
        config string CP_LRS_POL       = "FALSE",    //"FALSE": Normal; "TRUE": Inverted
        config string CP_INCE_EN       = "ENABLE",   //"ENABLE"; "DISABLE"
        config string CP_INLRS_EN      = "ENABLE",   //"ENABLE"; "DISABLE"
        config string CP_FF_SYNC       = "ASYNC",    //"ASYNC"; "SYNC" 
        config string CP_IFF_SET       = "SET",      //"SET" => set; "RESET" => reset
        config string CP_IFF_LATCH     = "FF"   ,    //"LATCH" => latch; "FF" => flip flop
        config bit CP_DELAY_SETTING[1:0]   := 2'b10,   //2'd0 => neither input nor output use delay unit; 2'd1 => delay unit for output; 
                                                        //2'd2 => delay unit for input; 2'd3 => illegal setting
        config string CP_GRS_DIS       = "FALSE",      //"TRUE", "FALSE"
        config string CP_INCLK_EN     := "ENABLE",    //"DISABLE", "ENABLE"
        config bit CP_IODLY_STEP[3:0]  = 4'b0000,     //d'0~d'15
        config string CP_IODLY_DYN    := "TRUE",
        config string CP_IODLY_DEGL    = "FALSE",
        config string CP_MIPI_EN       = "DISABLE" //"DISABLE", "ENABLE"
    );
    port
    (

        input   IODLY_CTRL[2:0],
        input   CLK_SYS,
        input   CE,
        input   LRS,
        input   DI,
        input   MIPI_SW_DYN_I,
        output   MIPI_SW_DYN_O,
        output  IODLY_OV,
        output  RX_DATA[0:0],
        output  RX_DATA_DD,
        output  TO,
        output  INCK
    
    );

}// end of device devIBUFIOLQDEL

/*******************************************************************************

  Device    [devIBUFIOLQDEL]

  Author    []

  Abstract  [The structure netlist of devIBUFIOLQDEL is described in the similar fashion
             as in HDL. In unit instantiation statement, the formal pin may be
             connected to net which is declared explicitly.

             In Valence, the connection can also be made from formal pin to other
             pin or port, in which case Valence compiler shall create the net to
             fulfil the connection. The built-in naming convention is kicked in
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/
structure netlist of devIBUFIOLQDEL
{
    // Wires connecting to output ports
    wire ntDIN;
    wire ntDOUT;
    wire ntIODLY_OV;
    wire ntRX_DATA_DD;
    wire ntRX_DATA_IFF;
    
    wire ntCE_SEL;
    wire ntLRS_SEL;
    wire ntCLK_SYS_FOR_INPUT;
    wire ntCE_IN;
    wire ntLRS_IN;
    wire ntCLK_SYS_I;

    wire ntCLK_SYS, ntCE, ntLRS;
    wire ntDI;
    wire ntMIPI_SW_DYN_I;
    wire ntMIPI_SW_DYN_O;
    
    ntMIPI_SW_DYN_I      <= MIPI_SW_DYN_I;
    MIPI_SW_DYN_O        <= ntMIPI_SW_DYN_O;
    
    ntCLK_SYS    <= CLK_SYS;
    ntCE         <= CE;
    ntLRS        <= LRS;
    ntDI         <= DI; 
    IODLY_OV     <= ntIODLY_OV;
    RX_DATA_DD   <= ntRX_DATA_DD;
    INCK         <= ntDI;

    device MUX21_EN MIPI_EN_MUX
        parameter map
        (
            CP_SEL => CP_MIPI_EN
        )
        port map
        (
            X0 => ntMIPI_SW_DYN_I,
            X1 => 1'b0,
            Y  => ntMIPI_SW_DYN_O
        );
        
    device MUX21  IN_OUT_DELSEL_MUX
        parameter map
        (
            CP_SEL => CP_DELAY_SETTING[0]
        )
        port map
        (
            X0   => ntDI,
            Y    => ntDIN
        );
     
    device POLMUX RCLK_POL_MUX_I
        parameter map
        (
            CP_POLARITY_INV => CP_INCLK_POL
        )
        port map
        (
            X  => ntCLK_SYS_I,
            Y  => ntCLK_SYS_FOR_INPUT
        );
        
    device POLMUX CE_POL_MUX
        parameter map
        (
            CP_POLARITY_INV => CP_CE_POL
        )
        port map
        (
            X => ntCE,
            Y => ntCE_SEL
        );
    
    device POLMUX LRS_POL_MUX
        parameter map
        (
            CP_POLARITY_INV => CP_LRS_POL
        )
        port map
        (
            X  => ntLRS,
            Y  => ntLRS_SEL
        );
    
    device MUX21_EN RCLK_EN_MUX_I 
       parameter map
       (
          CP_SEL  => CP_INCLK_EN
       )
       port map
       (
          X0 => CLK_SYS,
          X1 => 1'b0,
           Y  => ntCLK_SYS_I
      );
    
    device DLY DELAY
        parameter map
        (
            CP_IODLY_STEP => CP_IODLY_STEP,
            CP_IODLY_DYN  => CP_IODLY_DYN,
            CP_IODLY_DEGL => CP_IODLY_DEGL
        )
        port map
        (
            DIN        => ntDIN,
            DOUT       => ntDOUT,
            IODLY_CTRL => IODLY_CTRL,
            IODLY_OV   => ntIODLY_OV
        );
        
    device MUX21  IN_DELSEL_MUX
        parameter map
        (
            CP_SEL =>  CP_DELAY_SETTING[1]
        )
        port map
        (
            X1   => ntDOUT,
            Y    => ntRX_DATA_DD                    
        );
        
    device MUX21_EN  IFF_CE_MUX
        parameter map
        (
            CP_SEL => CP_INCE_EN
        )
        port map
        (
            X0   => ntCE_SEL,
            X1   => 1'b1,
            Y    => ntCE_IN
        );
      
    
    device MUX21_EN  IFF_LRS_MUX
        parameter map
        (
            CP_SEL => CP_INLRS_EN
        )
        port map
        (
            X0   => ntLRS_SEL,
            X1   => 1'b1,
            Y    => ntLRS_IN
        );
    
    device    IOL_FF IFF
        parameter map
        (
            CP_GRS_DIS => CP_GRS_DIS,
            CP_SET   => CP_IFF_SET,
            CP_SYNC  => CP_FF_SYNC,
            CP_LATCH => CP_IFF_LATCH
        )
        port map
        (
            D    => ntRX_DATA_DD,
            CLK  => ntCLK_SYS_FOR_INPUT,
            CE   => ntCE_IN,
            LRS  => ntLRS_IN,
            Q    => ntRX_DATA_IFF
        );

    device MUX21_N IFF_RXDATA_SEL_MUX
        parameter map
        (
            CP_SEL => "DISABLE"
        )
        port map
        (
            X1     =>  ntRX_DATA_IFF,
            Y      =>  RX_DATA[0]
        );
}; // end of structure netlist of devIBUFIOLQDEL

