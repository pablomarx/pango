use pgl_defs, pgl_floorplan_funcs, pgl25g_defs;

floorplan
structure fp_struct place_logic_resource of device PGL25G
{
    unsigned int tx, ty;
    
    foreach tx ( L_CLMA_TILES_X )
    {
        foreach ty ( L_CLM_TILES_Y )
        {
               place_clma_tile_fp( tx, ty );
        }
    }

    foreach tx ( L_CLMS_TILES_X )
    {
        foreach ty ( L_CLM_TILES_Y )
        {

            if(!((tx==PLL_TILE_X)&&((ty>=PLL0_TILE_Y&&ty<=PLL0_TILE_Y+NUM_GRID_PLL_Y)||(ty>=PLL2_TILE_Y&&ty<=PLL2_TILE_Y+NUM_GRID_PLL_Y)||(ty>=USCM0_TILE_Y&&ty<USCM0_TILE_Y+NUM_GRID_USCM_Y))))
            {
               if(!(tx==59&&ty<4))
               {
                   place_clms_tile_fp( tx, ty );
               }
            }
        }
    }
        
    // place IOL and DQSL
    foreach tx ( {IOL_TILE_X_L,IOL_TILE_X_R} )
    {
        foreach ty ( L_IOL_TILES_Y_LR )
        {
            place_iol_tile_fp( tx, ty);
        }  
        foreach ty ( L_DQSL_TILES_Y )
        {
            int flag_ccs = (ty==7&&tx==IOL_TILE_X_R) ? 1 : 0 ;
            place_dqsl_tile_fp( tx, ty, flag_ccs);
        }
        //foreach ty ( L_CRAMSL2_TILES_Y )
        //{
            //place_cramsl2_tile( tx, ty);
        //} 
        //foreach ty ( {RLYBUFS5_TILE_Y} )
        //{
            //place_rlybufs5_tile( tx, ty);
        //} 
    }

    place_ccs_tile_fp(CCS_TILE_X,CCS_TILE_Y);
    
    foreach tx ( L_DRM_TILES_X )
    {
        foreach ty ( L_DRM_TILES_Y )
        {
            place_drm_tile_fp( tx, ty );
        }
    } 

    foreach tx ( L_APM_TILES_X )
    {
        foreach ty ( L_APM_TILES_Y )
        {
            place_apm_tile_fp( tx, ty);
        }
    } 
    
        unsigned int L_PLL_TILES_X[] = {PLL_TILE_X};
    unsigned int L_PLL_B_TILES_Y[] = {PLL0_TILE_Y,PLL2_TILE_Y};
    unsigned int L_PLL_T_TILES_Y[] = {PLL1_TILE_Y,PLL3_TILE_Y};

    foreach tx ( L_PLL_TILES_X )
    {
        foreach ty ( L_PLL_B_TILES_Y )
        {
            place_pll_tile_fp( tx, ty );
        }  
        foreach ty ( L_PLL_T_TILES_Y )
        {
            place_pll_tile_fp( tx, ty );
        } 
    }    
    

    unsigned int L_USCM_TILES_X[] = {USCM_TILE_LOC_X};
    unsigned int L_USCM_TILES_Y[] = {USCM0_TILE_LOC_Y, USCM1_TILE_LOC_Y};
    //int tx_srb = USCM_TILE_X;

    foreach tx ( L_USCM_TILES_X )
    {
        foreach ty ( L_USCM_TILES_Y )
        {
            //int ty_srb = (ty < NUM_TILES_REGION) ? USCM0_TILE_Y : USCM1_TILE_Y;
            place_uscm_tile_fp( tx, ty);
        }      
    }
    
    // place up down IOL and CLM
    foreach ty ( {IOL_TILE_Y_U} )
    {
        foreach tx ( L_IOL_TILES_X_U )
        {
            place_iol_tile_fp( tx, ty );
        }  
    }

    foreach ty ( {IOL_TILE_Y_D} )
    {
        foreach tx ( L_IOL_TILES_X_D )
        {
            place_iol_tile_fp( tx, ty );
        }  
    }
    
    foreach tx ( {IOL_TILE_X_L,IOL_TILE_X_R} )
    {
        foreach ty ( L_IOCKGATEDLL_TILES_Y )
        {
            place_iockgatedll_tile_fp( tx, ty);
        } 
    }

    foreach ty ( L_IOCKDLL_TILES_LOC_Y )
    {
         int ty_iockdll = (ty < PLL0_TILE_Y) ? IOL_TILE_Y_D : IOL_TILE_Y_U ;
        foreach tx( L_IOCKDLL_TILES_LOC_X )
        {
            
            int tx_iockdll = (tx < PLL_TILE_X) ? IOCKDLL_TILE_X_L : IOCKDLL_TILE_X_R ;
            place_iockdll_tile_fp( tx, ty );
        }
    }

    // iob
    place_iob_tile_u_fp( IOB0_TILE_X, IOB0_TILE_Y);
    place_iob_tile_d_fp( IOB2_TILE_X, IOB2_TILE_Y);
    place_iob_tile_r_fp( IOB1_TILE_X, IOB1_TILE_Y);
    place_iob_tile_l_fp( IOB3_TILE_X, IOB3_TILE_Y);

/*
    //foreach ty ({ L_IOB_TILES_Y} )
    //{
        //place_iob_tile_fp( 32, ty);
    //}
    
    
    //foreach ty ({ L_IOB_TILES_Y} )
    //{
        //place_iob_wo_tile_fp( 0, ty);
    //}
    

    /////////////////////////////////////////////////////////////////////place_analog_tile( ANALOG_TILE_X, ANALOG_TILE_Y);
*/
} // end of structure floorplan place_logic_resource of device PGL25G
