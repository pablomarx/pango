
use pgl_defs, pgl_schm_funcs, pgl35es_defs;

schematic schm_view draw_logic_resource of device PGL35ES
{
    // Tile index variable
    unsigned int tx, ty;
    
    
    // draw srb tile
    foreach tx ( L_SRB_TILES_X )
    {
        foreach ty ( L_SRB_TILES_Y )
        {
            if((tx==(SOC_TILE_X-2))&&(ty>=31)&&(ty<62))
            {
                draw_srb_soc_tile ( tx, ty );
            }
            else if(!((tx>CCS_TILE_X) && (tx<=(CCS_TILE_X+NUM_GRID_CCS_X/NUM_GRID_X)) && (ty>=CCS_TILE_Y)))
            {
                draw_srb_tile ( tx, ty );
            }
        } 
    }
    
    
    // draw clm tile
    foreach tx ( L_CLMA_TILES_X )
    {
        foreach ty ( L_CLM_TILES_Y )
        {
            if(!((tx>=CCS_TILE_X) && (tx<=CCS_TILE_X+NUM_GRID_CCS_X/NUM_GRID_X) && (ty>=CCS_TILE_Y)))
            {
                if((tx==PLL_TILE_X) && (((ty>=PLL_TILE0_Y) && (ty<=PLL_TILE0_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1))||((ty>=PLL_TILE1_Y) && (ty<=PLL_TILE1_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1))||((ty>=PLL_TILE2_Y) && (ty<=PLL_TILE2_Y + NUM_GRID_PLL_Y/NUM_GRID_Y-1))||((ty>=PLL_TILE3_Y)&&(ty<=PLL_TILE3_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1))||((ty>=PLL_TILE4_Y)&&(ty<=PLL_TILE4_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1))||((ty>=PLL_TILE5_Y)&&(ty<=PLL_TILE5_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1))))
                {      
                }  
                else if((tx == USCM_TILE_X) && (((ty >= USCM_TILE0_Y) && (ty <= USCM_TILE0_Y + NUM_GRID_USCM_Y/NUM_GRID_Y - 1)) || ((ty >= USCM_TILE1_Y) && (ty <= USCM_TILE1_Y + NUM_GRID_USCM_Y/NUM_GRID_Y - 1))))
                {
                }
                else if(!((tx==RLYBUFS_TILE_X)&&(ty==RLYBUFS_TILE_Y)))
                {
                    draw_clm_tile( tx, ty, 1 );
                }
            }   
        }
    }
    
    foreach tx ( L_CLMS_TILES_X )
    {
        foreach ty ( L_CLM_TILES_Y )
        {
            if(!((tx>=CCS_TILE_X) && (tx<=CCS_TILE_X+NUM_GRID_CCS_X/NUM_GRID_X) && (ty>=CCS_TILE_Y)))
            {
                if((tx==PLL_TILE_X) && (((ty>=PLL_TILE0_Y) && (ty<=PLL_TILE0_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1)) || ((ty>=PLL_TILE1_Y) &&(ty<=PLL_TILE1_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1))||((ty>=PLL_TILE2_Y)&&(ty<=PLL_TILE2_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1))||((ty>=PLL_TILE3_Y)&&(ty<=PLL_TILE3_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1)) ||((ty>=PLL_TILE4_Y)&&(ty<=PLL_TILE4_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1))||((ty>=PLL_TILE5_Y) && (ty<=PLL_TILE5_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1))))
                {      
                }
                else if((tx == USCM_TILE_X) && (((ty >= USCM_TILE0_Y) && (ty <= USCM_TILE0_Y + NUM_GRID_USCM_Y/NUM_GRID_Y - 1)) || ((ty >= USCM_TILE1_Y) && (ty <= USCM_TILE1_Y + NUM_GRID_USCM_Y/NUM_GRID_Y - 1))))
                {
                }
                else if(!((tx==RLYBUFS_TILE_X)&&(ty==RLYBUFS_TILE_Y)))
                {
                    draw_clm_tile( tx, ty, 0 );
                }
            }
        }
    }
    
    
    draw_ccs_tile_pgl35es(CCS_TILE_X, CCS_TILE_Y);
    
    
//    foreach tx ( L_HMEMC_TILES_X )
//    {
//        foreach ty ( L_HMEMC_TILES_Y ) 
//        {
//            draw_hmemc_tile( tx, ty, 0 );
//        }
//    }
    
    
    foreach tx ( L_DRM_TILES_X )
    {
        foreach ty ( L_DRM_TILES_Y )
        {
            if(!((tx>=CCS_TILE_X) && (tx<=CCS_TILE_X+NUM_GRID_CCS_X/NUM_GRID_X) && (ty>=CCS_TILE_Y)))
            {
                draw_drm_tile( tx, ty );
            }
        }
    }
    
    
    foreach tx ( L_APM_TILES_X )
    {
        foreach ty ( L_APM_TILES_Y )
        {
            draw_apm_tile( tx, ty );
        }
    }
    
    
    unsigned int L_PLL_TILES_X[] = {PLL_TILE_X};
    unsigned int L_PLL_B_TILES_Y[] = {PLL_TILE0_Y,PLL_TILE2_Y,PLL_TILE4_Y};
    unsigned int L_PLL_T_TILES_Y[] = {PLL_TILE1_Y,PLL_TILE3_Y,PLL_TILE5_Y};

    foreach tx ( L_PLL_TILES_X )
    {
        foreach ty ( L_PLL_B_TILES_Y )
        {
            draw_pll_tile( tx, ty, 0 );
        }
        foreach ty ( L_PLL_T_TILES_Y )
        {
            draw_pll_tile( tx, ty, 1 );
        }
    }
    
    
    unsigned int L_USCM_TILES_X[] = {USCM_LOC_X};
    unsigned int L_USCM_TILES_Y[] = {USCM0_LOC_Y, USCM1_LOC_Y};
    
    foreach tx ( L_USCM_TILES_X )
    {
        foreach ty ( L_USCM_TILES_Y )
        {
            draw_uscm_tile( tx, ty );
        }
    }
    
    
    foreach tx ( L_IOL_TILES_X )
    {
        foreach ty ( L_IOL_TILES_Y )
        {
            draw_iol_tile( tx, ty );
        }  
        foreach ty ( L_DQSL_TILES_Y )
        {
            draw_dqsl_tile( tx, ty, 0 );
        }
    }
    
   
    foreach tx({L_IOB_TILES_X})
    {
        foreach ty ({ L_IOB_TILES_Y} )
        {
            draw_iob_tile( tx, ty);
        }
    } 
    
    // blsr_tile has no pnr device
    //foreach tx ( L_BLSR_TILES_X )
    //{
    //    foreach ty ( L_BLSR_TILES_Y )
    //    {
    //        draw_blsr_tile( tx, ty );
    //    }  
    //} 
    

    
    foreach ty ( L_WLSR_TILES_Y )
    {
        foreach tx ( L_WLSR_TILES_X )
        {
            draw_wlsr_tile( tx, ty );
        }  
        foreach tx ( L_WLSR1_TILES_X )
        {
            draw_wlsr1_tile( tx, ty );
        }
        foreach tx ( L_WLSR2_TILES_X )
        {
            draw_wlsr2_tile( tx, ty );
        }
        foreach tx ( L_WLSRA_TILES_X )
        {
            draw_wlsra_tile( tx, ty );
        }
        foreach tx ( L_WLSRD_TILES_X )
        {
            draw_wlsrd_tile( tx, ty );
        }
        foreach tx ( L_IOCKGATEDLL_TILES_X )
        {
            draw_iockgatedll_tile( tx, ty-1 );
        }
        foreach tx ( L_RCKB_TILES_X )
        {
            if(ty == 46)
            {
                draw_rckb_soc_tile( tx, ty-1 );
            }
            else
            {
                draw_rckb_tile( tx, ty-1 );
            }
        }
    }
    
    tx = SOC_TILE_X;
    ty = SOC_TILE_Y;
    draw_soc_tile( tx, ty );
};
