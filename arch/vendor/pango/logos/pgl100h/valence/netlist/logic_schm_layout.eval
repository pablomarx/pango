
use pgl_defs, pgl_schm_funcs, pgl100h_defs;

schematic schm_view draw_logic_resource of device PGL100H
{
    // Tile index variable
    unsigned int tx, ty;
    int rx ,ty_tmp ;
    
    // draw srb tile
    foreach tx ( L_SRB_TILES_X )
    {
        foreach ty ( L_SRB_TILES_Y )
        {

            if(!(tx==BLSR_TILE_X_L || tx==BLSR_TILE_X_R))
            {
                if(!(((tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X) && (ty>=HSST_TILE_D_L_Y && ty<HSST_TILE_D_R_Y)) || ((tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X) && (ty>=HSST_TILE_U_L_Y && ty<HSST_TILE_U_R_Y))))
                {
                    if(!((tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X) && (ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y)))
                    {

                        draw_srb_tile ( tx, ty);

                    }

                }
            } 
        }    
    }
    
    
    // draw clm tile
    foreach tx ( L_CLMA_TILES_X )
    {
        foreach ty ( L_CLM_TILES_Y )
        {
            if(!(tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && (ty<=HSST_TILE_D_R_Y || ty>=HSST_TILE_U_L_Y - 1)))
            {
                if(!(tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X && ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y))
                {
                    draw_clma_tile( tx, ty );
                }
            }
        }
    }

    foreach tx ( L_CLMS_TILES_X )
    {
        foreach ty ( L_CLM_TILES_Y )
        {
            if(!(tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && (ty<=HSST_TILE_D_R_Y || ty>=HSST_TILE_U_L_Y - 1)))
            {
                if(!(tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X && ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y))
                {
                    if(!(tx==PLL_TILE_X))
                    {
                        draw_clms_tile( tx, ty );
                    }
                }
            }
        }
    }
    
    

    foreach ty ( L_CLM_TILES_PLL_Y )
    {
        draw_clms_tile ( PLL_TILE_X, ty);                            
    }
    foreach tx ( L_DRM_TILES_X )
    {
        foreach ty ( L_DRM_TILES_Y )
        {
            if(!(tx==BLSR_TILE_X_L || tx==BLSR_TILE_X_R))
            {
                if(!((tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && ty>=HSST_TILE_U_L_Y - 1) || (tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X && ty<=HSST_TILE_D_R_Y - 1)))
                {
                    if(!((tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X) && (ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y)))
                    {
                        draw_drm_tile( tx, ty);

                    }
                }
            }
        }
    } 

    
    
    foreach tx ( L_APM_TILES_X )
    {
        foreach ty ( L_APM_TILES_Y )
        {
            if(!(tx==BLSR_TILE_X_L || tx==BLSR_TILE_X_R))
            {
                if(!((tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && ty>=HSST_TILE_U_L_Y - 1) || (tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X && ty<=HSST_TILE_D_R_Y - 1)))
                {
                    if(!((tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X) && (ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y)))
                    {

                        draw_apm_tile ( tx, ty);

                    }
                }
            }
        }
    } 
    
    foreach ty ( L_WLSR_TILES_Y )
    {
        foreach tx ( L_WLSR_TILES_X )
        {
            draw_wlsr_tile( tx, ty);
        }  
        foreach tx ( L_WLSR1_TILES_X )
        {
            draw_wlsr1_tile( tx, ty);
        } 
        foreach tx ( L_WLSR1B_TILES_X )
        {
            draw_wlsr1_100h_tile( tx, ty);
        }
        foreach tx ( L_APM_TILES_X )
        {
            draw_wlsra_tile( tx,ty);
        }
        foreach tx ( L_DRM_TILES_X )
        {
            draw_wlsrd_tile( tx, ty);
        }
        foreach tx ( {PLL_TILE_X} )
        {
            draw_wlsr2_tile( tx, ty);
        }
    } 
    
    foreach tx ( {IOL_TILE_X_L,IOL_TILE_X_R} )
    {
        int ty_iol[] = (tx==IOL_TILE_X_L) ? L_IOL_TILES_Y_L : L_IOL_TILES_Y_R ;

        foreach ty ( ty_iol )
        {
            draw_iol_tile( tx, ty);
        }  
        foreach ty ( L_DQSL_TILES_Y )
        {
            int flag_ccs = (ty==7&&tx==IOL_TILE_X_R) ? 1 : 0 ;

            draw_dqsl_tile( tx, ty);//, flag_ccs);
        }
        foreach ty ( L_IOCKGATEDLL_TILES_Y )
        {
            draw_iockgatedll_100h_tile( tx, ty);
        } 
    }
    
    draw_analog_tile( ANALOG_TILE_X, ANALOG_TILE_Y);
    
    
    draw_ccs_tile(CCS_TILE_X,CCS_TILE_Y);
    
    
    unsigned int flag_t;
    foreach rx(L_REGIONS)
    {
        foreach ty_tmp ( {PLL0_TILE_Y,PLL1_TILE_Y} )
        {
            ty = ty_tmp + rx * NUM_TILES_REGION;
    
            flag_t = (ty_tmp==PLL1_TILE_Y) ? 1 : 0 ;

            if(ty>=NUM_TILE_HALF_Y&&ty<=NUM_TILE_HALF_Y + 4 * NUM_TILES_REGION)
            { 
                draw_pll_tile( PLL_TILE_X, ty, flag_t);
            }
        }  
    }
    
    
    unsigned int L_USCM_TILES_X[] = {USCM_TILE_LOC_X};
    unsigned int L_USCM_TILES_Y[] = {USCM0_TILE_LOC_Y, USCM1_TILE_LOC_Y};
    int tx_srb = USCM_TILE_X;

    foreach tx ( L_USCM_TILES_X )
    {
        foreach ty ( L_USCM_TILES_Y )
        {
            int ty_srb = (ty < NUM_TILES_REGION * 3) ? USCM0_TILE_Y : USCM1_TILE_Y;
            draw_uscm_tile( tx, ty);// tx_srb, ty_srb);
        }      
    } 
    
    foreach ty ( {IOL_TILE_Y_U} )
    {
        foreach tx ( L_IOL_TILES_X_UD )
        {
            draw_iol_tile_ud( tx, ty);//, 1);
        }  
    }

    foreach ty ( {IOL_TILE_Y_D} )
    {
        foreach tx ( L_IOL_TILES_X_UD )
        {
            draw_iol_tile_ud( tx, ty);//, 0);
        }  
    }


    foreach ty ( L_IOCKDLL_TILES_LOC_Y )
    {

         int ty_iockdll = (ty < PLL0_TILE_Y) ? IOL_TILE_Y_D : IOL_TILE_Y_U ;

        foreach tx( L_BLSR_TILES_X )
        {
            
            int tx_iockdll = (tx < PLL_TILE_X && ty < USCM0_TILE_Y) ? IOCKDLL_TILE_X_L : 
                             (tx < PLL_TILE_X && ty > USCM0_TILE_Y) ? IOCKDLL_TILE_X_L : 
                             (tx > PLL_TILE_X && ty < USCM0_TILE_Y) ? IOCKDLL_TILE_X_R :  IOCKDLL_TILE_X_R ;

            draw_iockdll_tile( tx, ty);
        }

    }
    
    
    foreach ty(L_CLKMUX_TILES_Y)
    {
        draw_clkmux_tile(PLL_TILE_X , ty);
    }
    
    foreach ty({HSST_TILE_D_L_Y,HSST_TILE_U_L_Y})
    {
        draw_hsst_tile(HSST_TILE_D_L_X, ty);
    } 
    
    draw_pcie_tile(PCIE_TILE_L_X,PCIE_TILE_L_Y,PCIE_TILE_R_X);
      
    draw_iob0_tile( IOB0_TILE_X, IOB_TILE_Y_U);
    draw_iob1_tile( IOB_TILE_X_R, IOB1_TILE_Y);
    draw_iob2_tile( IOB2_TILE_X, IOB_TILE_Y_D);
    draw_iob3_tile( IOB_TILE_X_L, IOB3_TILE_Y);
    draw_iob4_tile( IOB_TILE_X_L, IOB4_TILE_Y);
    draw_iob5_tile( IOB_TILE_X_R, IOB5_TILE_Y);
    foreach ty(L_PIOMUX_TILES_Y)
    { 
        draw_piomux_tile( PLL_TILE_X,ty );
    }   
}