tarted
grid
device BKCL
{
    // grid_property_def_start
    // grid_property_def_end

    parameter
    (
        config string CP_DIFFOD_ON = "FALSE",
        config string CP_DIFF_DRV_STRENGTH = "0",
        config string CP_DIFFOUT_CM = "1.25",
        config string CP_TMDS_CTRL = "FALSE",
        config string CP_VRE = "HIGHZ",
        config string CP_VREFPD_N = "FALSE",
        config string CP_INR_ON = "FALSE",
        config bit CP_HSPD_CTRL[1:0] = 2'b00,
        config string CP_PU2_B = "FALSE",
        config string CP_PU3_B = "FALSE",
        config string CP_PD2 = "FALSE",
        config string CP_PD3 = "FALSE",
        config string CP_IPT = "30uA",
        config bit CP_CAL_EN = 1'b0
    );
    port
    (
// configuration_body_def_on


    config input SC_DIFFOD_ON = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DIFFOD_ON" */,

    config input SC_TMDS_CTRL = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_TMDS_CTRL" */,

    config input SC_OD_CTRL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_OD_CTRL[1],SC_OD_CTRL[0]" */,

    config input SC_VRE[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_VRE[1],SC_VRE[0]" */,

    config input SC_VREFPD_N = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_VREFPD_N" */,

    config input SC_INR_ON = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_INR_ON" */,

    config input SC_DRV[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DRV[3],SC_DRV[2],SC_DRV[1],SC_DRV[0]" */,

    config input SC_HSPD_CTRL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_HSPD_CTRL[1],SC_HSPD_CTRL[0]" */,

    config input SC_PD2 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PD2" */,

    config input SC_PD3 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PD3" */,

    config input SC_PU2_B = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PU2_B" */,

    config input SC_PU3_B = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PU3_B" */,

    config input SC_IPT[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_IPT[3],SC_IPT[2],SC_IPT[1],SC_IPT[0]" */,

    config input SC_CAL_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CAL_EN" */,

// configuration_body_def_end

        input CAL_ACT_N = 1'b1
    );
};
//grid device end

//grid device structure netlist started
structure netlist of BKCL
{
};
//grid device structure netlist end
//grid device configure body started

configuration cfg of BKCL
{

 // assign config body begin
    SC_HSPD_CTRL  :=  CP_HSPD_CTRL;
    SC_DIFFOD_ON  :=  (CP_DIFFOD_ON == "TRUE") ? 1'b1 : 1'b0;
    SC_VREFPD_N   :=  (CP_VREFPD_N == "TRUE") ? 1'b0 : 1'b1;
    SC_INR_ON     :=  (CP_INR_ON == "TRUE") ? 1'b1 : 1'b0;
    SC_PD2        :=  (CP_PD2 == "TRUE") ? 1'b1 : 1'b0;
    SC_PD3        :=  (CP_PD3 == "TRUE") ? 1'b1 : 1'b0;
    SC_PU2_B      :=  (CP_PU2_B == "TRUE") ? 1'b1 : 1'b0;
    SC_PU3_B      :=  (CP_PU3_B == "TRUE") ? 1'b1 : 1'b0;
    SC_CAL_EN     :=  CP_CAL_EN;
// assign config body end

//initial config body0 begin
    if(CP_DIFF_DRV_STRENGTH == "0")
    {
        SC_DRV  :=  4'b0000;
    }
    else if(CP_DIFF_DRV_STRENGTH == "1")
    {
        SC_DRV  :=  4'b0001;
    }
    else if(CP_DIFF_DRV_STRENGTH == "1.5")
    {
        SC_DRV  :=  4'b0010;
    }
    else if(CP_DIFF_DRV_STRENGTH == "2")
    {
        SC_DRV  :=  4'b0100;
    }
    else if(CP_DIFF_DRV_STRENGTH == "2.5")
    {
        SC_DRV  :=  4'b0011;
    }
    else if(CP_DIFF_DRV_STRENGTH == "3")
    {
        SC_DRV  :=  4'b0101;
    }
    else if(CP_DIFF_DRV_STRENGTH == "3.5")
    {
        SC_DRV  :=  4'b0110;
    }
    else if(CP_DIFF_DRV_STRENGTH == "4.5")
    {
        SC_DRV  :=  4'b0111;
    }
    else if(CP_DIFF_DRV_STRENGTH == "6.5")
    {
        SC_DRV  :=  4'b1000;
    }
    else if(CP_DIFF_DRV_STRENGTH == "7.5")
    {
        SC_DRV  :=  4'b1001;
    }
    else if(CP_DIFF_DRV_STRENGTH == "8")
    {
        SC_DRV  :=  4'b1010;
    }
    else if(CP_DIFF_DRV_STRENGTH == "8.5")
    {
        SC_DRV  :=  4'b1100;
    }
    else if(CP_DIFF_DRV_STRENGTH == "9")
    {
        SC_DRV  :=  4'b1011;
    }
    else if(CP_DIFF_DRV_STRENGTH == "9.5")
    {
        SC_DRV  :=  4'b1101;
    }
    else if(CP_DIFF_DRV_STRENGTH == "10")
    {
        SC_DRV  :=  4'b1110;
    }
    else if(CP_DIFF_DRV_STRENGTH == "11")
    {
        SC_DRV  :=  4'b1111;
    }
    else
    {
        error("golden-error: illegal setting for CP_DIFF_DRV_STRENGTH := %s", CP_DIFF_DRV_STRENGTH);
    }
    if(CP_DIFFOUT_CM == "0.2")
    {
        SC_OD_CTRL  :=  2'b11;
    }
    else if(CP_DIFFOUT_CM == "0.9")
    {
        SC_OD_CTRL  :=  2'b10;
    }
    else if(CP_DIFFOUT_CM == "1.2")
    {
        SC_OD_CTRL  :=  2'b01;
    }
    else if(CP_DIFFOUT_CM == "1.25")
    {
        SC_OD_CTRL  :=  2'b00;
    }
    else
    {
        error("golden-error: illegal setting for CP_DIFFOUT_CM := %s", CP_DIFFOUT_CM);
    }
    if(CP_TMDS_CTRL == "TRUE")
    {
        SC_TMDS_CTRL  :=  1'b1;
    }
    else if (CP_TMDS_CTRL == "FALSE")
    {
        SC_TMDS_CTRL  :=  1'b0;
    }
    else
    {
        error("golden_bkcl error: illegal setting for CP_TMDS_CTRL := %s", CP_TMDS_CTRL);
    }
    if(CP_VRE == "HIGHZ")
    {
        SC_VRE  :=  2'b00;
    }
    else if(CP_VRE == "0.45")
    {
        SC_VRE  :=  2'b01;
    }
    else if(CP_VRE == "0.5")
    {
        SC_VRE  :=  2'b10;
    }
    else if(CP_VRE == "0.55")
    {
        SC_VRE  :=  2'b11;
    }
    else
    {
        error("golden_bkcl error: illegal setting for CP_VRE := %s", CP_VRE);
    }
    if((CP_DIFFOD_ON == "TRUE") || (CP_DIFFOD_ON == "FALSE"))
    {

    }
    else
    {
        error (" golden_bkcl error: illegal setting for CP_DIFFOD_ON := %s",CP_DIFFOD_ON);
    }
    if((CP_VREFPD_N == "TRUE") || (CP_VREFPD_N == "FALSE"))
    {

    }
    else
    {
        error (" golden_bkcl error: illegal setting for CP_VREFPD_N := %s",CP_VREFPD_N);
    }
    if((CP_INR_ON == "TRUE") || (CP_INR_ON == "FALSE"))
    {

    }
    else
    {
        error (" golden_bkcl error: illegal setting for CP_INR_ON := %s",CP_INR_ON);
    }
    if((CP_PD2 == "TRUE") || (CP_PD2 == "FALSE"))
    {

    }
    else
    {
        error (" golden_bkcl error: illegal setting for CP_PD2 := %s",CP_PD2);
    }
    if((CP_PD3 == "TRUE") || (CP_PD3 == "FALSE"))
    {

    }
    else
    {
        error (" golden_bkcl error: illegal setting for CP_PD3 := %s",CP_PD3);
    }
    if((CP_PU2_B == "TRUE") || (CP_PU2_B == "FALSE"))
    {

    }
    else
    {
        error (" golden_bkcl error: illegal setting for CP_PU2_B := %s",CP_PU2_B);
    }
    if((CP_PU3_B == "TRUE") || (CP_PU3_B == "FALSE"))
    {

    }
    else
    {
        error (" golden_bkcl error: illegal setting for CP_PU3_B := %s",CP_PU3_B);
    }
    if(CP_IPT == "30uA")
    {
        SC_IPT  :=  4'b0000;
    }
    else if(CP_IPT == "31.25uA")
    {
        SC_IPT  :=  4'b0001;
    }
    else if(CP_IPT == "32.5uA")
    {
        SC_IPT  :=  4'b0010;
    }
    else if(CP_IPT == "33.75uA")
    {
        SC_IPT  :=  4'b0011;
    }
    else if(CP_IPT == "35uA")
    {
        SC_IPT  :=  4'b0100;
    }
    else if(CP_IPT == "36.25uA")
    {
        SC_IPT  :=  4'b0101;
    }
    else if(CP_IPT == "37.5uA")
    {
        SC_IPT  :=  4'b0110;
    }
    else if(CP_IPT == "38.75uA")
    {
        SC_IPT  :=  4'b0111;
    }
    else if(CP_IPT == "20uA")
    {
        SC_IPT  :=  4'b1000;
    }
    else if(CP_IPT == "21.25uA")
    {
        SC_IPT  :=  4'b1001;
    }
    else if(CP_IPT == "22.5uA")
    {
        SC_IPT  :=  4'b1010;
    }
    else if(CP_IPT == "23.75uA")
    {
        SC_IPT  :=  4'b1011;
    }
    else if(CP_IPT == "25uA")
    {
        SC_IPT  :=  4'b1100;
    }
    else if(CP_IPT == "26.25uA")
    {
        SC_IPT  :=  4'b1101;
    }
    else if(CP_IPT == "27.5uA")
    {
        SC_IPT  :=  4'b1110;
    }
    else if(CP_IPT == "28.75uA")
    {
        SC_IPT  :=  4'b1111;
    }

//initial config body0 end

};

//grid device configure body end

