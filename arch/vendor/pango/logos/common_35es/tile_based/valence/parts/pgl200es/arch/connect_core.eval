*****************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl200es_defs;
use pgl200es_funcs_logic;
structure arch_nl connect_SRB_input_v of PGL200ES
{
    unsigned int l_srb_tile_y0[239:0] = {[0:14,16:45,47:76,78:107,109:138,140:169,171:200,202:231,233:247]};
    unsigned int l_srb_tile_y0_u[239:0] = {[247:233,231:202,200:171,169:140,138:109,107:78,76:47,45:16,14:0]};
    unsigned int l_srb_tile_y1[104:0] = {[0:14,16:45,47:76,78:107]};
    unsigned int l_srb_tile_y1_u[104:0] = {[107:78,76:47,45:16,14:0]};
    unsigned int l_srb_tile_y2[89:0] = {[155:169,171:200,202:231,233:247]};
    unsigned int l_srb_tile_y2_u[89:0] = {[247:233,231:202,200:171,169:155]};
    unsigned int l_srb_tile_y3[224:0] = {[0:14,16:45,47:76,78:107,109:138,140:169,171:200,202:231]};
    unsigned int l_srb_tile_y3_u[224:0] = {[231:202,200:171,169:140,138:109,107:78,76:47,45:16,14:0]};
    unsigned int l_srb_tile_y4[119:0] = {[124:138,140:169,171:200,202:231,233:247]};
    unsigned int l_srb_tile_y4_u[119:0] = {[247:233,231:202,200:171,169:140,138:124]};

    unsigned int tx,index; 

    foreach tx(L_SRB_TILES_X)
    {
        if((tx>NUM_TILE_HSST_X&&tx<=CCS_TILE_X)||(tx>BLSR_TILE_X&&tx<=IOL1_TILE_X))  
        {
            foreach index ({[239:0]})
            {
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,0,1);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,0,2);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,0,4);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,0,8);
            }
            foreach index ({[239:0]})
            {
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,0,1);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,0,2);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,0,4);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,0,8);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,0,3);
            }
        }

        if(tx<=NUM_TILE_HSST_X)
        {
            foreach index ({[104:0]})
            {
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,1,1);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,1,2);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,1,4);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,1,8);
            }
            foreach index ({[104:0]})
            {
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,1,1);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,1,2);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,1,4);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,1,8);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,1,3);
            }
            foreach index ({[89:0]})
            {
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,2,1);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,2,2);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,2,4);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,2,8);
            }
            foreach index ({[89:0]})
            {
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,2,1);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,2,2);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,2,4);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,2,8);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,2,3);
            }
        }
        if(tx>CCS_TILE_X&&tx<BLSR_TILE_X)  
        {
            foreach index ({[224:0]})
            {
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,3,1);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,3,2);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,3,4);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,3,8);
            }
            foreach index ({[224:0]})
            {
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,3,1);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,3,2);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,3,4);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,3,8);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,3,3);
            }
        }
        if(tx>IOL1_TILE_X)  
        {
            foreach index ({[119:0]})
            {
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,4,1);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,4,2);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,4,4);
               connect_SRB_input_v(tx, index,l_srb_tile_y0_u,l_srb_tile_y1_u,l_srb_tile_y2_u,l_srb_tile_y3_u,l_srb_tile_y4_u,1,4,8);
            }
            foreach index ({[119:0]})
            {
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,4,1);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,4,2);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,4,4);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,4,8);
               connect_SRB_input_v(tx, index,l_srb_tile_y0,l_srb_tile_y1,l_srb_tile_y2,l_srb_tile_y3,l_srb_tile_y4,0,4,3);
            }
        }
    }

};//end of structure arch_nl connect_SRB_input_v of PGL200ES
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl200es_defs;
use pgl200es_funcs_logic;
structure arch_nl connect_SRB_input_h of PGL200ES
{
    unsigned int l_srb_tile_y[239:0] = {[247:233,231:202,200:171,169:140,138:109,107:78,76:47,45:16,14:0]};
    unsigned int l_srb_tile_x0[157:0] = {[1:69,71:159]};
    unsigned int l_srb_tile_x0_u[157:0] = {[159:71,69:1]};
    unsigned int l_srb_tile_x1[59:0] = {[1:60]};
    unsigned int l_srb_tile_x1_u[59:0] = {[60:1]};
    unsigned int l_srb_tile_x2[88:0] = {[71:159]};
    unsigned int l_srb_tile_x2_u[88:0] = {[159:71]};
    unsigned int l_srb_tile_x3[147:0] = {[11:69,71:159]};
    unsigned int l_srb_tile_x3_u[147:0] = {[159:71,69:11]};
    unsigned int l_srb_tile_x4[67:0] = {[11:69,71:79]};
    unsigned int l_srb_tile_x4_u[67:0] = {[79:71,69:11]};
    unsigned int l_srb_tile_x5[77:0] = {[1:69,71:79]};
    unsigned int l_srb_tile_x5_u[77:0] = {[79:71,69:1]};


    unsigned int index,index_y; 

    foreach index_y({[239:0]})
    {

        int flag_blank_d=(l_srb_tile_y[index_y]==0) ? 1 : 0 ;
        int flag_blank_u=(l_srb_tile_y[index_y]==NUM_TILES_REGION*8-1) ? 1 : 0 ; 

        if(l_srb_tile_y[index_y]>=NUM_TILES_REGION*5&&l_srb_tile_y[index_y]<NUM_TILES_REGION*7+MID_TILE_REGION)  
        {
            foreach index ({[157:0]})
            {
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,0,1,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,0,2,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,0,4,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,0,8,flag_blank_d,flag_blank_u);
            }
            foreach index ({[157:0]})
            {
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,0,1,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,0,2,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,0,4,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,0,8,flag_blank_d,flag_blank_u);
            }
        }

        if(l_srb_tile_y[index_y]>NUM_TILES_REGION*7+MID_TILE_REGION)
        {
            foreach index ({[59:0]})
            {
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,1,1,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,1,2,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,1,4,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,1,8,flag_blank_d,flag_blank_u);
            }
            foreach index ({[59:0]})
            {
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,1,1,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,1,2,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,1,4,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,1,8,flag_blank_d,flag_blank_u);
            }
            foreach index ({[88:0]})
            {
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,2,1,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,2,2,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,2,4,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,2,8,flag_blank_d,flag_blank_u);
            }
            foreach index ({[88:0]})
            {
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,2,1,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,2,2,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,2,4,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,2,8,flag_blank_d,flag_blank_u);
            }
        }
        if(l_srb_tile_y[index_y]>=NUM_TILES_REGION*4&&l_srb_tile_y[index_y]<NUM_TILES_REGION*5)  
        {
            foreach index ({[147:0]})
            {
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,3,1,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,3,2,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,3,4,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,3,8,flag_blank_d,flag_blank_u);
            }
            foreach index ({[147:0]})
            {
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,3,1,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,3,2,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,3,4,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,3,8,flag_blank_d,flag_blank_u);
            }
        }
        if(l_srb_tile_y[index_y]<NUM_TILES_REGION*4&&l_srb_tile_y[index_y]>NUM_TILES_REGION*3+MID_TILE_REGION)  
        {
            foreach index ({[67:0]})
            {
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,4,1,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,4,2,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,4,4,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,4,8,flag_blank_d,flag_blank_u);
            }
            foreach index ({[67:0]})
            {
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,4,1,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,4,2,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,4,4,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,4,8,flag_blank_d,flag_blank_u);
            }
        }
        if(l_srb_tile_y[index_y]<NUM_TILES_REGION*3+MID_TILE_REGION)  
        {
            foreach index ({[77:0]})
            {
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,5,1,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,5,2,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,5,4,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0_u,l_srb_tile_x1_u,l_srb_tile_x2_u,l_srb_tile_x3_u,l_srb_tile_x4_u,l_srb_tile_x5_u,1,5,8,flag_blank_d,flag_blank_u);
            }
            foreach index ({[77:0]})
            {
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,5,1,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,5,2,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,5,4,flag_blank_d,flag_blank_u);
               connect_SRB_input_h(index_y, index,CCS_TILE_X,CCS_TILE_Y,HSST_TILE_X,HSST_TILE_Y,IOL1_TILE_X,l_srb_tile_y,l_srb_tile_x0,l_srb_tile_x1,l_srb_tile_x2,l_srb_tile_x3,l_srb_tile_x4,l_srb_tile_x5,0,5,8,flag_blank_d,flag_blank_u);
            }
        }
    }

};//end of structure arch_nl connect_SRB_input_h of PGL200ES
/***************************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl200es_defs,pgl200es_funcs_logic;

structure arch_nl connect_CLM_TILES of PGL200ES
{

    unsigned int l_clm_tile_y0[239:0] = {[0:14,16:45,47:76,78:107,109:138,140:169,171:200,202:231,233:247]};
    unsigned int l_clm_tile_y0_u[239:0] = {[247:233,231:202,200:171,169:140,138:109,107:78,76:47,45:16,14:0]};
    unsigned int l_clm_tile_y1[104:0] = {[0:14,16:45,47:76,78:107]};
    unsigned int l_clm_tile_y1_u[104:0] = {[107:78,76:47,45:16,14:0]};
    unsigned int l_clm_tile_y2[89:0] = {[155:169,171:200,202:231,233:247]};
    unsigned int l_clm_tile_y2_u[89:0] = {[247:233,231:202,200:171,169:155]};
    unsigned int l_clm_tile_y3[224:0] = {[0:14,16:45,47:76,78:107,109:138,140:169,171:200,202:231]};
    unsigned int l_clm_tile_y3_u[224:0] = {[231:202,200:171,169:140,138:109,107:78,76:47,45:16,14:0]};
    unsigned int l_clm_tile_y4[118:0] = {[125:138,140:169,171:200,202:231,233:247]};
    unsigned int l_clm_tile_y4_u[118:0] = {[247:233,231:202,200:171,169:140,138:125]};
    unsigned int l_clma_tile_y5[171:0] = {[0:10,20:30,31:41,51:61,62:72,82:92,93:103,113:121,126:134,144:154,155:165,175:185,186:196,206:216,217:227,237:247]}; 
    unsigned int l_clma_tile_y5_u[171:0] = {[247:237,227:217,216:206,196:186,185:175,165:155,154:144,134:126,121:113,103:93,92:82,72:62,61:51,41:31,30:20,10:0]}; 

    unsigned int tx,index; 

    foreach tx ( L_CLMS_TILES_X )
    {
        if((tx>NUM_TILE_HSST_X&&tx<=CCS_TILE_X)||(tx>BLSR_TILE_X&&tx<=IOL1_TILE_X))
        {
            foreach index ({[239:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0_u, l_clm_tile_y1_u, l_clm_tile_y2_u, l_clm_tile_y3_u, l_clm_tile_y4_u, l_clma_tile_y5_u,1,1,0);
            }
            foreach index ({[239:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0, l_clm_tile_y1, l_clm_tile_y2, l_clm_tile_y3, l_clm_tile_y4, l_clma_tile_y5,1,0,0);
            }
        }
        if(tx<=NUM_TILE_HSST_X)
        {
            foreach index ({[104:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0_u, l_clm_tile_y1_u, l_clm_tile_y2_u, l_clm_tile_y3_u, l_clm_tile_y4_u, l_clma_tile_y5_u,1,1,1);
            }
            foreach index ({[104:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0, l_clm_tile_y1, l_clm_tile_y2, l_clm_tile_y3, l_clm_tile_y4, l_clma_tile_y5,1,0,1);
            }
            foreach index ({[89:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0_u, l_clm_tile_y1_u, l_clm_tile_y2_u, l_clm_tile_y3_u, l_clm_tile_y4_u, l_clma_tile_y5_u,1,1,2);
            }
            foreach index ({[89:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0, l_clm_tile_y1, l_clm_tile_y2, l_clm_tile_y3, l_clm_tile_y4, l_clma_tile_y5,1,0,2);
            }
        }
        if(tx>CCS_TILE_X&&tx<BLSR_TILE_X)
        {
            foreach index ({[224:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0_u, l_clm_tile_y1_u, l_clm_tile_y2_u, l_clm_tile_y3_u, l_clm_tile_y4_u, l_clma_tile_y5_u,1,1,3);
            }
            foreach index ({[224:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0, l_clm_tile_y1, l_clm_tile_y2, l_clm_tile_y3, l_clm_tile_y4, l_clma_tile_y5,1,0,3);
            }
        }
        if(tx>IOL1_TILE_X)
        {
            foreach index ({[118:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0_u, l_clm_tile_y1_u, l_clm_tile_y2_u, l_clm_tile_y3_u, l_clm_tile_y4_u, l_clma_tile_y5_u,1,1,4);
            }
            foreach index ({[118:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0, l_clm_tile_y1, l_clm_tile_y2, l_clm_tile_y3, l_clm_tile_y4, l_clma_tile_y5,1,0,4);
            }
        }
    }

// for clma

    foreach tx ( L_CLMA_TILES_X )
    {
        if((tx>NUM_TILE_HSST_X+1&&tx<=CCS_TILE_X)||(tx>BLSR_TILE_X&&tx<=IOL1_TILE_X))
        {
            if(!(tx==PLL_TILE_X))
            {
                foreach index ({[239:0]})
                {
                   connect_CLM_input(tx, index,l_clm_tile_y0_u, l_clm_tile_y1_u, l_clm_tile_y2_u, l_clm_tile_y3_u, l_clm_tile_y4_u, l_clma_tile_y5_u,0,1,0);
                }
                foreach index ({[239:0]})
                {
                   connect_CLM_input(tx, index,l_clm_tile_y0, l_clm_tile_y1, l_clm_tile_y2, l_clm_tile_y3, l_clm_tile_y4, l_clma_tile_y5,0,0,0);
                }
            }
        }
        if(tx<=NUM_TILE_HSST_X+1)
        {
            foreach index ({[104:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0_u, l_clm_tile_y1_u, l_clm_tile_y2_u, l_clm_tile_y3_u, l_clm_tile_y4_u, l_clma_tile_y5_u,0,1,1);
            }
            foreach index ({[104:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0, l_clm_tile_y1, l_clm_tile_y2, l_clm_tile_y3, l_clm_tile_y4, l_clma_tile_y5,0,0,1);
            }
            foreach index ({[89:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0_u, l_clm_tile_y1_u, l_clm_tile_y2_u, l_clm_tile_y3_u, l_clm_tile_y4_u, l_clma_tile_y5_u,0,1,2);
            }
            foreach index ({[89:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0, l_clm_tile_y1, l_clm_tile_y2, l_clm_tile_y3, l_clm_tile_y4, l_clma_tile_y5,0,0,2);
            }
        }
        if(tx>CCS_TILE_X&&tx<BLSR_TILE_X)
        {
            foreach index ({[224:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0_u, l_clm_tile_y1_u, l_clm_tile_y2_u, l_clm_tile_y3_u, l_clm_tile_y4_u, l_clma_tile_y5_u,0,1,3);
            }
            foreach index ({[224:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0, l_clm_tile_y1, l_clm_tile_y2, l_clm_tile_y3, l_clm_tile_y4, l_clma_tile_y5,0,0,3);
            }
        }
        if(tx>IOL1_TILE_X)
        {
            foreach index ({[118:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0_u, l_clm_tile_y1_u, l_clm_tile_y2_u, l_clm_tile_y3_u, l_clm_tile_y4_u, l_clma_tile_y5_u,0,1,4);
            }
            foreach index ({[118:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0, l_clm_tile_y1, l_clm_tile_y2, l_clm_tile_y3, l_clm_tile_y4, l_clma_tile_y5,0,0,4);
            }
        }
        if(tx==PLL_TILE_X)
        {
            foreach index ({[171:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0_u, l_clm_tile_y1_u, l_clm_tile_y2_u, l_clm_tile_y3_u, l_clm_tile_y4_u, l_clma_tile_y5_u,0,1,5);
            }
            foreach index ({[171:0]})
            {
               connect_CLM_input(tx, index,l_clm_tile_y0, l_clm_tile_y1, l_clm_tile_y2, l_clm_tile_y3, l_clm_tile_y4, l_clma_tile_y5,0,0,5);
            }
        }
    }

};
/***************************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl200es_defs,pgl200es_funcs_logic;

structure arch_nl connect_iob_tile of PGL200ES
{

    unsigned int tx,ty,flag_half;

    foreach tx(L_IOB_TILES_X)
    {
        if(tx==IOB0_TILE_X)
        {
           foreach ty ( {L_IOB0_TILES_Y,93} )
           {

              string iob = (ty==93) ? "IOB_TILE_HALF" : "IOB_TILE" ;

              flag_half =  (ty==93) ? 1 : 0 ;

              connect_iob_tile( tx, ty,8,iob,1,flag_half);
           }
        }
        else if(tx==IOB1_TILE_X)
        {
           foreach ty ( L_IOB1_TILES_Y )
           {
              connect_iob_tile( tx, ty,8,"IOB_TILE",0,0);
           }
        }
        else
        {
           foreach ty ( L_IOB2_TILES_Y )
           {
              connect_iob_tile( tx, ty,8,"IOB_TILE",0,0);
           }
        }
    }

};
/***************************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl200es_defs,pgl200es_funcs_logic;

structure arch_nl connect_bias of PGL200ES
{

    connect_bias_iob(CCS_TILE_X,CCS_TILE_Y,IOB0_TILE_X,IOB1_TILE_X,IOB2_TILE_X);

    connect_bias_pll(CCS_TILE_X,CCS_TILE_Y,PLL_TILE_X,PLL_TILE_0D_Y,PLL_TILE_0T_Y);

};
/***************************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl200es_defs,pgl200es_funcs_logic;

structure arch_nl connect_hsst of PGL200ES
{

    connect_hsst_input(HSST_TILE_X,HSST_TILE_Y,IOL0_TILE_X,IOCKGATEDLL2_TILE_Y,"HSST_TILE","IOCKGATEDLL2_TILE");

};
/***************************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl200es_defs,pgl200es_funcs_logic;

structure arch_nl connect_cramsl2_ip of PGL200ES
{

    int tx,ty ;

    foreach tx ( L_IOL1_TILES_X )
    {
        foreach ty ( L_CRAMSL21_TILES_Y_L )
        {
            if(ty >= 2 * NUM_TILES_REGION)
            {    
                connect_cramsl2_ip_input(tx,ty,CGRA_TILE_X,CGRA_TILE_Y,"CRAMSL2_TILE","CGRA_TILE");
            }
        } 
    }

    foreach ty({4 * NUM_TILES_REGION})
    {
        foreach tx({L_CLMS_TILES_X,L_CLMA_TILES_X})
        {
            if(tx>123)
            {
                connect_cramsl2_ip_input(tx,ty,CGRA_TILE_X,CGRA_TILE_Y,"CRAMSL2_TILE","CGRA_TILE");
            }
        }
    }

};











