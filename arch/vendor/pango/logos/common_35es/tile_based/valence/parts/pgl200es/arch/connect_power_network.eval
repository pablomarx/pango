*****************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl200es_defs;

structure arch_nl connect_power_network of PGL200ES
{
    // Tile index variable

    &wire ntRef_ntVDD11 = <wire ntVDD11 of architecture>;
    &wire ntRef_ntVSS = <wire ntVSS of architecture>;
    &wire ntRef_ntVDDM = wire VDDM;
    &wire ntRef_ntVDD33 = <wire ntVDD33 of architecture>;
    &wire ntRef_ntVDD33A = <wire ntVDD33A of architecture>;
    &wire ntRef_ntVDD33A_PLL = <wire ntVDD33A_PLL of architecture>;
    &wire ntRef_ntVSSA = <wire ntVSSA of architecture>;
    &wire ntRef_ntVSSA_PLL0 = <wire ntVSSA_PLL0 of architecture>;
    &wire ntRef_ntVSSA_PLL1 = <wire ntVSSA_PLL1 of architecture>;
    &wire ntRef_ntVSSA_PLL2 = <wire ntVSSA_PLL2 of architecture>;
    &wire ntRef_ntVSSA_PLL3 = <wire ntVSSA_PLL3 of architecture>;
    &wire ntRef_ntVSSA_PLL4 = <wire ntVSSA_PLL4 of architecture>;
    &wire ntRef_ntVSSA_PLL5 = <wire ntVSSA_PLL5 of architecture>;
    &wire ntRef_ntVSSA_PLL6 = <wire ntVSSA_PLL6 of architecture>;
    &wire ntRef_ntVSSA_PLL7 = <wire ntVSSA_PLL7 of architecture>;
    &wire ntRef_ntVSSA_PLL8 = <wire ntVSSA_PLL8 of architecture>;
    &wire ntRef_ntVSSA_PLL9 = <wire ntVSSA_PLL9 of architecture>;
    &wire ntRef_ntVSSA_PLL10 = <wire ntVSSA_PLL10 of architecture>;
    &wire ntRef_ntVSSA_PLL11 = <wire ntVSSA_PLL11 of architecture>;
    &wire ntRef_ntVSSA_PLL12 = <wire ntVSSA_PLL12 of architecture>;
    &wire ntRef_ntVSSA_PLL13 = <wire ntVSSA_PLL13 of architecture>;
    &wire ntRef_ntVSSA_PLL14 = <wire ntVSSA_PLL14 of architecture>;
    &wire ntRef_ntVSSA_PLL15 = <wire ntVSSA_PLL15 of architecture>;

    &wire ntRef_ntVDDA_PLL   = <wire ntVDDA_PLL   of architecture>;
    &wire ntRef_ntVDDA25_PLL = <wire ntVDDA25_PLL of architecture>;
    &wire ntRef_ntVDD_GXB    = <wire ntVDD_GXB    of architecture>;
    &wire ntRef_ntVSS_GXB    = <wire ntVSS_GXB    of architecture>;

    &wire ntRef_ntVDDIOL0 = <wire ntVDDIOL0 of architecture>;
    &wire ntRef_ntVDDIOL1 = <wire ntVDDIOL1 of architecture>;
    &wire ntRef_ntVDDIOL2 = <wire ntVDDIOL2 of architecture>;
    &wire ntRef_ntVDDIOL3 = <wire ntVDDIOL3 of architecture>;
    &wire ntRef_ntVDDIOL4 = <wire ntVDDIOL4 of architecture>;
    &wire ntRef_ntVDDIOL5 = <wire ntVDDIOL5 of architecture>;
    &wire ntRef_ntVDDIOL6 = <wire ntVDDIOL6 of architecture>;
    &wire ntRef_ntVDDIOR0 = <wire ntVDDIOR0 of architecture>;
    &wire ntRef_ntVDDIOR1 = <wire ntVDDIOR1 of architecture>;
    &wire ntRef_ntVDDIOR2 = <wire ntVDDIOR2 of architecture>;
    &wire ntRef_ntVDDIOR3 = <wire ntVDDIOR3 of architecture>;
    &wire ntRef_ntVDDIOR4 = <wire ntVDDIOR4 of architecture>;
    &wire ntRef_ntVDDIOR5 = <wire ntVDDIOR5 of architecture>;
    &wire ntRef_ntVSSIOL0 = <wire ntVSSIOL0 of architecture>;
    &wire ntRef_ntVSSIOL1 = <wire ntVSSIOL1 of architecture>;
    &wire ntRef_ntVSSIOL2 = <wire ntVSSIOL2 of architecture>;
    &wire ntRef_ntVSSIOL3 = <wire ntVSSIOL3 of architecture>;
    &wire ntRef_ntVSSIOL4 = <wire ntVSSIOL4 of architecture>;
    &wire ntRef_ntVSSIOL5 = <wire ntVSSIOL5 of architecture>;
    &wire ntRef_ntVSSIOL6 = <wire ntVSSIOL6 of architecture>;
    &wire ntRef_ntVSSIOR0 = <wire ntVSSIOR0 of architecture>;
    &wire ntRef_ntVSSIOR1 = <wire ntVSSIOR1 of architecture>;
    &wire ntRef_ntVSSIOR2 = <wire ntVSSIOR2 of architecture>;
    &wire ntRef_ntVSSIOR3 = <wire ntVSSIOR3 of architecture>;
    &wire ntRef_ntVSSIOR4 = <wire ntVSSIOR4 of architecture>;
    &wire ntRef_ntVSSIOR5 = <wire ntVSSIOR5 of architecture>;


    unsigned int tx, ty,rx;
    unsigned int sx,sy;
    unsigned int tmp_ty;

    
    foreach tx ( L_SRB_TILES_X )
    {
        foreach ty ( L_SRB_TILES_Y )
        {
            if(!(tx>CCS_TILE_X && tx<=(CCS_TILE_X+NUM_GRID_CCS_X/NUM_GRID_X) && ty>=CCS_TILE_Y))
            {
                if(!(tx<=NUM_TILE_HSST_X&&ty>=HSST_TILE_Y&&ty<(HSST_TILE_Y+NUM_TILE_HSST_Y)))
                {
                    if(!(tx>IOL1_TILE_X&&ty<=(NUM_TILES_REGION*4-1)))
                    {
                        sx = tx * NUM_GRID_X ;
                        sy = ty * NUM_GRID_Y ;

                        connect
                        (
                            <pin VDD11 of <device SRB_TILE @ [sx,sy]>> => ntRef_ntVDD11,
                            <pin VSS of <device SRB_TILE @ [sx,sy]>>   => ntRef_ntVSS,
                            <pin VDDM of <device SRB_TILE @ [sx,sy]>>  => ntRef_ntVDDM
                        );
                    }
                }
            }
        } 
    }

    foreach tx ( L_CLMA_TILES_X )
    {
        sx = tx * NUM_GRID_X + 2;

        foreach ty ( L_CLM_TILES_Y )
        {
          if(!((ty>NUM_TILES_REGION*7 + MID_TILE_REGION)&&(tx>CCS_TILE_X&&tx<CCS_TILE_X+NUM_TILE_CCS_X)))
          {
             if(!(ty>=HSST_TILE_Y&&ty<HSST_TILE_Y+NUM_TILE_HSST_Y&&tx<=HSST_TILE_X+NUM_TILE_HSST_X+1))
             {
                 if(!(ty<=NUM_TILES_REGION*4&&tx>=IOL1_TILE_X))
                 {
                     if(!(tx==PLL_TILE_X))
                     {
                        sx = tx * NUM_GRID_X + 2;
                        sy = ty * NUM_GRID_Y ;

                        connect
                        (
                            <pin VDD11 of <device CLMA_TILE @ [sx,sy]>> => ntRef_ntVDD11,
                            <pin VSS of <device CLMA_TILE @ [sx,sy]>>   => ntRef_ntVSS,
                            <pin VDDM of <device CLMA_TILE @ [sx,sy]>>  => ntRef_ntVDDM
                        );                                                     
                     }
                 }
             }
          }    
        }
    }

    int ty_tmp ;

    foreach rx ( {[7:0]} )
    {
        foreach ty_tmp ( {[30:20,10:0]} )
        {
            ty = ty_tmp + rx * NUM_TILES_REGION ;

            if(!(ty>=USCM_TILE0_Y&&ty<USCM_TILE0_Y+NUM_TILE_USCM_Y))
            {
                sx = PLL_TILE_X * NUM_GRID_X + 2;
                sy = ty * NUM_GRID_Y ;

                connect
                (
                    <pin VDD11 of <device CLMA_TILE @ [sx,sy]>> => ntRef_ntVDD11,
                    <pin VSS of <device CLMA_TILE @ [sx,sy]>>   => ntRef_ntVSS,
                    <pin VDDM of <device CLMA_TILE @ [sx,sy]>>  => ntRef_ntVDDM
                );                                            
            }    
        }
    }

//for clms

    foreach tx ( L_CLMS_TILES_X )
    {
        int sx = tx * NUM_GRID_X + 2;

        foreach ty ( L_CLM_TILES_Y )
        {
          if(!((ty>NUM_TILES_REGION*7 + MID_TILE_REGION)&&(tx>CCS_TILE_X&&tx<CCS_TILE_X+NUM_TILE_CCS_X)))
          {
             if(!(ty>=HSST_TILE_Y&&ty<HSST_TILE_Y+NUM_TILE_HSST_Y&&tx<=HSST_TILE_X+NUM_TILE_HSST_X+1))
             {
                 if(!(ty<=NUM_TILES_REGION*4&&tx>=IOL1_TILE_X))
                 {
                     if(!(tx==PLL_TILE_X))
                     {
                        sx = tx * NUM_GRID_X + 2;
                        sy = ty * NUM_GRID_Y ;

                        connect
                        (
                            <pin VDD11 of <device CLMS_TILE @ [sx,sy]>> => ntRef_ntVDD11,
                            <pin VSS of <device CLMS_TILE @ [sx,sy]>>   => ntRef_ntVSS,
                            <pin VDDM of <device CLMS_TILE @ [sx,sy]>>  => ntRef_ntVDDM
                        );                            
                     }
                 }
             }
          }    
        }
    }

//for ccs

    int sx_ccs = CCS_TILE_X * NUM_GRID_X + 2;
    int sy_ccs = CCS_TILE_Y * NUM_GRID_Y;

    connect
      (
        <pin VDD11 of <device CCS_TILE @ [sx_ccs,sy_ccs]>>    => ntRef_ntVDD11,
        <pin VSS of <device CCS_TILE @ [sx_ccs,sy_ccs]>>      => ntRef_ntVSS,
        <pin VDDM of <device CCS_TILE @ [sx_ccs,sy_ccs]>>     => ntRef_ntVDDM,
        <pin VDD33 of <device CCS_TILE @ [sx_ccs,sy_ccs]>>    => ntRef_ntVDD33,
        <pin VDD33A of <device CCS_TILE @ [sx_ccs,sy_ccs]>>   => ntRef_ntVDD33A,
        <pin VSSA of <device CCS_TILE @ [sx_ccs,sy_ccs]>>     => ntRef_ntVSSA
      );

// for drm

    foreach tx ( L_DRM_TILES_X )
    {
        foreach ty ( L_DRM_TILES_Y )
        {

          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          if(!(tx>=CCS_TILE_X && tx<=(CCS_TILE_X+NUM_GRID_CCS_X/NUM_GRID_X) && ty>=CCS_TILE_Y))
          {
            if(!(tx<=((NUM_GRID_HSST_X-2)/NUM_GRID_X)&&ty>=HSST_TILE_Y&&ty<(HSST_TILE_Y+NUM_GRID_HSST_Y/NUM_GRID_Y)))
            {
                if(!(tx>=IOL1_TILE_X&&ty<=(NUM_TILES_REGION*4-1)))
                {
                    connect
                    (
                        <pin VDD11 of <device DRM_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
                        <pin VSS of <device DRM_TILE @ [sx,sy]>>    => ntRef_ntVSS,
                        <pin VDDM of <device DRM_TILE @ [sx,sy]>>   => ntRef_ntVDDM
                    ); 
                }
            }
          }
        }
    }

// for PLL

    unsigned int L_PLL_TILES_X[] = {PLL_TILE_X};
    unsigned int L_PLL_B_TILES_Y[] = {PLL_TILE_0D_Y,PLL_TILE_1D_Y,PLL_TILE_2D_Y,PLL_TILE_3D_Y,PLL_TILE_4D_Y,PLL_TILE_5D_Y,PLL_TILE_6D_Y,PLL_TILE_7D_Y};
    unsigned int L_PLL_T_TILES_Y[] = {PLL_TILE_0T_Y,PLL_TILE_1T_Y,PLL_TILE_2T_Y,PLL_TILE_3T_Y,PLL_TILE_4T_Y,PLL_TILE_5T_Y,PLL_TILE_6T_Y,PLL_TILE_7T_Y};

    int index = 0 ;

    foreach tx ( L_PLL_TILES_X )
    {
        foreach ty ( {L_PLL_B_TILES_Y,L_PLL_T_TILES_Y} )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          connect
            (
              <pin VDD11 of <device PLL_TILE @ [sx,sy]>>   => ntRef_ntVDD11,
              <pin VSS of <device PLL_TILE @ [sx,sy]>>     => ntRef_ntVSS,
              <pin VDDM of <device PLL_TILE @ [sx,sy]>>    => ntRef_ntVDDM,
              <pin VDD33A of <device PLL_TILE @ [sx,sy]>>  => ntRef_ntVDD33A_PLL,
              <pin VSSA of <device PLL_TILE @ [sx,sy]>>    => (ty==PLL_TILE_0D_Y) ? ntRef_ntVSSA_PLL0 :
                                                              (ty==PLL_TILE_0T_Y) ? ntRef_ntVSSA_PLL1 :
                                                              (ty==PLL_TILE_1D_Y) ? ntRef_ntVSSA_PLL2 :
                                                              (ty==PLL_TILE_1T_Y) ? ntRef_ntVSSA_PLL3 :
                                                              (ty==PLL_TILE_2D_Y) ? ntRef_ntVSSA_PLL4 :
                                                              (ty==PLL_TILE_2T_Y) ? ntRef_ntVSSA_PLL5 :
                                                              (ty==PLL_TILE_3D_Y) ? ntRef_ntVSSA_PLL6 :
                                                              (ty==PLL_TILE_3T_Y) ? ntRef_ntVSSA_PLL7 :
                                                              (ty==PLL_TILE_4D_Y) ? ntRef_ntVSSA_PLL8 :
                                                              (ty==PLL_TILE_4T_Y) ? ntRef_ntVSSA_PLL9 :
                                                              (ty==PLL_TILE_5D_Y) ? ntRef_ntVSSA_PLL10 :
                                                              (ty==PLL_TILE_5T_Y) ? ntRef_ntVSSA_PLL11 :
                                                              (ty==PLL_TILE_6D_Y) ? ntRef_ntVSSA_PLL12 :
                                                              (ty==PLL_TILE_6T_Y) ? ntRef_ntVSSA_PLL13 :
                                                              (ty==PLL_TILE_7D_Y) ? ntRef_ntVSSA_PLL14 :
                                                              ntRef_ntVSSA_PLL15 
            );

            index = index + 1 ;

        }  
    }

// for USCM

    unsigned int L_USCM_TILES_X[] = {USCM_LOC_X};
    unsigned int L_USCM_TILES_Y[] = {USCM0_LOC_Y, USCM1_LOC_Y};
    
    foreach tx ( L_USCM_TILES_X )
    {
        foreach ty ( L_USCM_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          connect
            (
              <pin VDD11 of <device USCM_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device USCM_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device USCM_TILE @ [sx,sy]>>   => ntRef_ntVDDM
            );
        }      
    } 

// for IOL

    foreach tx ( L_IOL0_TILES_X )
    {
        foreach ty ( L_IOL0_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;
          connect
          (
              <pin VDD11 of <device IOL_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device IOL_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device IOL_TILE @ [sx,sy]>>   => ntRef_ntVDDM
          );
        }  
        foreach ty ( L_DQSL0_TILES_Y )
        {
            sx = tx * NUM_GRID_X + 2;
            sy = ty * NUM_GRID_Y;

            connect
            (
              <pin VDD11 of <device DQSL_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device DQSL_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device DQSL_TILE @ [sx,sy]>>   => ntRef_ntVDDM
            );            
        }
        foreach ty ( L_RLYBUFS50_TILES_Y )
        {
            sx = tx * NUM_GRID_X + 2;
            sy = ty * NUM_GRID_Y;

            connect
            (
              <pin VDDM of <device RLYBUFS5_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
              <pin VDD11 of <device RLYBUFS5_TILE @ [sx,sy]>>   => ntRef_ntVDD11,
              <pin VSS of <device RLYBUFS5_TILE @ [sx,sy]>>    => ntRef_ntVSS
            );            
        } 
        foreach ty ( L_CRAMSL20_TILES_Y_L )
        {
            sx = tx * NUM_GRID_X + 2;
            sy = ty * NUM_GRID_Y;

            connect
            (
              <pin VDDM of <device CRAMSL2_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
              <pin VDD11 of <device CRAMSL2_TILE @ [sx,sy]>>   => ntRef_ntVDD11,
              <pin VSS of <device CRAMSL2_TILE @ [sx,sy]>>    => ntRef_ntVSS
            );
        } 
        foreach ty ( L_IOCKGATEDLL0_TILES_Y )
        {
            sx = tx * NUM_GRID_X + 2;
            sy = ty * NUM_GRID_Y;

            string iock = (ty==3*NUM_TILES_REGION+MID_TILE_REGION-1) ? "IOCKGATEDLL2_TILE" : "IOCKGATEDLL_TILE" ;

            connect
            (
              <pin VDD11 of <device *iock @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device *iock @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDD33 of <device *iock @ [sx,sy]>>  => ntRef_ntVDD33,
              <pin VDDM of <device *iock @ [sx,sy]>>   => ntRef_ntVDDM
            );
        }

    } 
    foreach tx ( L_IOL1_TILES_X )
    {
        foreach ty ( L_IOL1_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          connect
          (
              <pin VDD11 of <device IOL_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device IOL_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device IOL_TILE @ [sx,sy]>>   => ntRef_ntVDDM
          );            
        }  
        foreach ty ( L_DQSL1_TILES_Y )
        {
            sx = tx * NUM_GRID_X + 2;
            sy = ty * NUM_GRID_Y;

            connect
            (
              <pin VDD11 of <device DQSL_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device DQSL_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device DQSL_TILE @ [sx,sy]>>   => ntRef_ntVDDM
            );            
        }
        foreach ty ( L_RLYBUFS51_TILES_Y )
        {
            sx = tx * NUM_GRID_X + 2;
            sy = ty * NUM_GRID_Y;

            connect
            (
              <pin VDDM of <device RLYBUFS5_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
              <pin VDD11 of <device RLYBUFS5_TILE @ [sx,sy]>>   => ntRef_ntVDD11,
              <pin VSS of <device RLYBUFS5_TILE @ [sx,sy]>>    => ntRef_ntVSS
            );            
        } 
        foreach ty ( L_CRAMSL21_TILES_Y_L )
        {
            sx = tx * NUM_GRID_X + 2;
            sy = ty * NUM_GRID_Y;

            connect
            (
              <pin VDDM of <device CRAMSL2_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
              <pin VDD11 of <device CRAMSL2_TILE @ [sx,sy]>>   => ntRef_ntVDD11,
              <pin VSS of <device CRAMSL2_TILE @ [sx,sy]>>    => ntRef_ntVSS
            );            
        } 
        foreach ty ( L_IOCKGATEDLL1_TILES_Y )
        {
            sx = tx * NUM_GRID_X + 2;
            sy = ty * NUM_GRID_Y;

            connect
            (
              <pin VDD11 of <device IOCKGATEDLL_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device IOCKGATEDLL_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDD33 of <device IOCKGATEDLL_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
              <pin VDDM of <device IOCKGATEDLL_TILE @ [sx,sy]>>   => ntRef_ntVDDM
            );            
        }
        foreach ty ( L_WLSRA_TILES_Y )
        {
            sx = tx * NUM_GRID_X;
            sy = ty * NUM_GRID_Y;

            connect
            (
              <pin VDD11 of <device WLSRA_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device WLSRA_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDD33 of <device WLSRA_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
              <pin VDDM of <device WLSRA_TILE @ [sx,sy]>>   => ntRef_ntVDDM
            );            
        }

    }

    tx = HSST_TILE_X+NUM_TILE_HSST_X+1 ;
    ty = NUM_TILES_REGION*4+MID_TILE_REGION ;

    sx = tx * NUM_GRID_X + 2;
    sy = ty * NUM_GRID_Y;    

    connect
    (
        <pin VDD11 of <device WLSRA_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
        <pin VSS of <device WLSRA_TILE @ [sx,sy]>>    => ntRef_ntVSS,
        <pin VDD33 of <device WLSRA_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
        <pin VDDM of <device WLSRA_TILE @ [sx,sy]>>   => ntRef_ntVDDM
    );    


    foreach tx ( L_IOL2_TILES_X )
    {
        foreach ty ( L_IOL2_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          connect
          (
              <pin VDD11 of <device IOL_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device IOL_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device IOL_TILE @ [sx,sy]>>   => ntRef_ntVDDM
          );            
        }  
        foreach ty ( L_DQSL2_TILES_Y )
        {
            sx = tx * NUM_GRID_X + 2;
            sy = ty * NUM_GRID_Y;

            connect
            (
              <pin VDD11 of <device DQSL_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device DQSL_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device DQSL_TILE @ [sx,sy]>>   => ntRef_ntVDDM
            );            
        }
        foreach ty ( L_RLYBUFS52_TILES_Y )
        {
            sx = tx * NUM_GRID_X + 2;
            sy = ty * NUM_GRID_Y;

            connect
            (
              <pin VDDM of <device RLYBUFS5_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
              <pin VDD11 of <device RLYBUFS5_TILE @ [sx,sy]>>   => ntRef_ntVDD11,
              <pin VSS of <device RLYBUFS5_TILE @ [sx,sy]>>    => ntRef_ntVSS
            );            
        } 
        foreach ty ( L_CRAMSL22_TILES_Y_L )
        {
            sx = tx * NUM_GRID_X + 2;
            sy = ty * NUM_GRID_Y;

            connect
            (
              <pin VDDM of <device CRAMSL2_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
              <pin VDD11 of <device CRAMSL2_TILE @ [sx,sy]>>   => ntRef_ntVDD11,
              <pin VSS of <device CRAMSL2_TILE @ [sx,sy]>>    => ntRef_ntVSS
            );            
        } 
        foreach ty ( L_IOCKGATEDLL2_TILES_Y )
        {
            sx = tx * NUM_GRID_X + 2;
            sy = ty * NUM_GRID_Y;

            connect
            (
              <pin VDD11 of <device IOCKGATEDLL_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device IOCKGATEDLL_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDD33 of <device IOCKGATEDLL_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
              <pin VDDM of <device IOCKGATEDLL_TILE @ [sx,sy]>>   => ntRef_ntVDDM
            );            
        }

    }
// for CRAMSL2

    int ty_cramsl2 ;

    foreach ty({4 * NUM_TILES_REGION,4 * NUM_TILES_REGION-1,4 * NUM_TILES_REGION-2})
    {
        foreach tx({L_CLMS_TILES_X,L_CLMA_TILES_X})
        {
            if(tx>=IOB1_TILE_X)
            {
                sx = tx * NUM_GRID_X +2 ;
                sy = ty * NUM_GRID_Y ;
                
                string cramsl2 = (ty==4 * NUM_TILES_REGION) ? "CRAMSL2_TILE" : "CRAMSL2NOIBM_TILE" ;

                connect
                (
                  <pin VDDM of <device *cramsl2 @ [sx,sy]>>   => ntRef_ntVDDM,
                  <pin VSS of <device *cramsl2 @ [sx,sy]>>    => ntRef_ntVSS
                );
                if(ty==4 * NUM_TILES_REGION)
                {
                    connect(<pin VDD11 of <device *cramsl2 @ [sx,sy]>>   => ntRef_ntVDD11);
                }
            }
        }
    }

// for IOB
    foreach tx(L_IOB_TILES_X)
    {
        if(tx==IOB0_TILE_X)
        {
           foreach ty ( L_IOB0_TILES_Y )
           {
              sx = tx * NUM_GRID_X;
              sy = ty * NUM_GRID_Y;              

              connect
              (
                <pin VDD11 of <device IOB_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
                <pin VSS of <device IOB_TILE @ [sx,sy]>>    => ntRef_ntVSS,
                <pin VDDM of <device IOB_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
                <pin VDD33 of <device IOB_TILE @ [sx,sy]>>  => ntRef_ntVDD33
              );
           }

          sy = 3 * NUM_TILES_REGION * NUM_GRID_Y;              

          connect
          (
            <pin VDD11 of <device IOB_TILE_HALF @ [sx,sy]>>  => ntRef_ntVDD11,
            <pin VSS of <device IOB_TILE_HALF @ [sx,sy]>>    => ntRef_ntVSS,
            <pin VDDM of <device IOB_TILE_HALF @ [sx,sy]>>   => ntRef_ntVDDM,
            <pin VDD33 of <device IOB_TILE_HALF @ [sx,sy]>>  => ntRef_ntVDD33
          );
        }
        else if(tx==IOB1_TILE_X)
        {
           foreach ty ( L_IOB1_TILES_Y )
           {
              sx = tx * NUM_GRID_X;
              sy = ty * NUM_GRID_Y;              

              connect
              (
                <pin VDD11 of <device IOB_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
                <pin VSS of <device IOB_TILE @ [sx,sy]>>    => ntRef_ntVSS,
                <pin VDDM of <device IOB_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
                <pin VDD33 of <device IOB_TILE @ [sx,sy]>>  => ntRef_ntVDD33
              );              
           }
        }
        else
        {
           foreach ty ( L_IOB2_TILES_Y )
           {
              sx = tx * NUM_GRID_X;
              sy = ty * NUM_GRID_Y;              

              connect
              (
                <pin VDD11 of <device IOB_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
                <pin VSS of <device IOB_TILE @ [sx,sy]>>    => ntRef_ntVSS,
                <pin VDDM of <device IOB_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
                <pin VDD33 of <device IOB_TILE @ [sx,sy]>>  => ntRef_ntVDD33
              );             
           }
        }
    }

// for BLSR

    string blsr ;

     foreach tx ( L_BLSR_TILES_X )
    {
        foreach ty ( L_BLSR_TILES_Y )
        {
            sx = tx * NUM_GRID_X;
            sy = ty * NUM_GRID_BLSR_Y;

            string blsr = (ty <= 3) ? "BLSR_PGL200ES_RD_TILE" : "BLSR_PGL200ES_TILE";

            connect
            (
                <pin VDD11 of <device *blsr @ [sx,sy]>>  => ntRef_ntVDD11,
                <pin VSS of   <device *blsr @ [sx,sy]>>    => ntRef_ntVSS,
                <pin VDDM of  <device *blsr @ [sx,sy]>>   => ntRef_ntVDDM
            );
        }  
    } 

// for HSST

     foreach tx ( {HSST_TILE_X}  )
    {
        foreach ty ( {HSST_TILE_Y} )
        {
          sx = tx * NUM_GRID_X;
          sy = ty * NUM_GRID_Y;
          connect
            (
              <pin VDD11 of <device HSST_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device HSST_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device HSST_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
              <pin PAD_VDDA10     of <device HSST_TILE @ [sx,sy]>>   => ntRef_ntVDD_GXB     ,
              <pin PAD_VDDA10_PLL of <device HSST_TILE @ [sx,sy]>>   => ntRef_ntVDDA_PLL ,
              <pin PAD_VDDA25_PLL of <device HSST_TILE @ [sx,sy]>>   => ntRef_ntVDDA25_PLL ,
              <pin PAD_VSSA       of <device HSST_TILE @ [sx,sy]>>   => ntRef_ntVSS_GXB       
            );
        }  
    } 

// for WLSR

    foreach ty ( L_WLSR_TILES_Y )
    {
        if(ty>=MID_TILE_REGION+NUM_TILES_REGION*4)
        {
            foreach tx ( L_WLSR_TILES_X_U )
            {
                if(!(((ty==NUM_TILES_REGION*4+MID_TILE_REGION)&&(tx<=HSST_TILE_X+NUM_TILE_HSST_X + 1))||((ty<NUM_TILES_REGION*4)&&(tx>IOB1_TILE_X))))
                {
                   sx = tx * NUM_GRID_X;
                   sy = ty * NUM_GRID_Y;                    

                   connect
                   (
                       <pin VDD11 of <device WLSR_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
                       <pin VSS of <device WLSR_TILE @ [sx,sy]>>    => ntRef_ntVSS,
                       <pin VDD33 of <device WLSR_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
                       <pin VDDM of <device WLSR_TILE @ [sx,sy]>>   => ntRef_ntVDDM           
                   );
                }
            }
            foreach tx ( L_WLSR1S_TILES_X_U )
            {
               sx = tx * NUM_GRID_X;
               sy = ty * NUM_GRID_Y;                    

               connect
               (
                   <pin VDD11 of <device WLSR1_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
                   <pin VSS of <device WLSR1_TILE @ [sx,sy]>>    => ntRef_ntVSS,
                   <pin VDD33 of <device WLSR1_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
                   <pin VDDM of <device WLSR1_TILE @ [sx,sy]>>   => ntRef_ntVDDM           
               );                
            }
            foreach tx ( L_WLSR1B_TILES_X_U )
            {
               sx = tx * NUM_GRID_X;
               sy = ty * NUM_GRID_Y;                    

               connect
               (
                   <pin VDD11 of <device WLSR1B_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
                   <pin VSS of <device WLSR1B_TILE @ [sx,sy]>>    => ntRef_ntVSS,
                   <pin VDD33 of <device WLSR1B_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
                   <pin VDDM of <device WLSR1B_TILE @ [sx,sy]>>   => ntRef_ntVDDM           
               );                
            }
        }
        else
        {
            foreach tx ( L_WLSR_TILES_X_D )
            {
                if(!(((ty==NUM_TILES_REGION*4+MID_TILE_REGION)&&(tx<=HSST_TILE_X+NUM_TILE_HSST_X))||((ty<NUM_TILES_REGION*4)&&(tx>IOB1_TILE_X))))
                {
                   sx = tx * NUM_GRID_X;
                   sy = ty * NUM_GRID_Y;                    

                   connect
                   (
                       <pin VDD11 of <device WLSR_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
                       <pin VSS of <device WLSR_TILE @ [sx,sy]>>    => ntRef_ntVSS,
                       <pin VDD33 of <device WLSR_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
                       <pin VDDM of <device WLSR_TILE @ [sx,sy]>>   => ntRef_ntVDDM           
                   );                    
                }
            }
            foreach tx ( L_WLSR1S_TILES_X_D )
            {
               sx = tx * NUM_GRID_X;
               sy = ty * NUM_GRID_Y;                    

               connect
               (
                   <pin VDD11 of <device WLSR1_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
                   <pin VSS of <device WLSR1_TILE @ [sx,sy]>>    => ntRef_ntVSS,
                   <pin VDD33 of <device WLSR1_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
                   <pin VDDM of <device WLSR1_TILE @ [sx,sy]>>   => ntRef_ntVDDM           
               );                
            }
            foreach tx ( L_WLSR1B_TILES_X_D )
            {
               sx = tx * NUM_GRID_X;
               sy = ty * NUM_GRID_Y;                    

               connect
               (
                   <pin VDD11 of <device WLSR1B_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
                   <pin VSS of <device WLSR1B_TILE @ [sx,sy]>>    => ntRef_ntVSS,
                   <pin VDD33 of <device WLSR1B_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
                   <pin VDDM of <device WLSR1B_TILE @ [sx,sy]>>   => ntRef_ntVDDM           
               );                
            }
        } 
        foreach tx ( L_WLSR2_TILES_X )
        {
          if(!(((ty==NUM_TILES_REGION*4+MID_TILE_REGION)&&(tx<=HSST_TILE_X+NUM_TILE_HSST_X))||((ty<NUM_TILES_REGION*4)&&(tx>IOB1_TILE_X))))
          {
               sx = tx * NUM_GRID_X;
               sy = ty * NUM_GRID_Y;                    

               connect
               (
                   <pin VDD11 of <device WLSR2_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
                   <pin VSS of <device WLSR2_TILE @ [sx,sy]>>    => ntRef_ntVSS,
                   <pin VDD33 of <device WLSR2_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
                   <pin VDDM of <device WLSR2_TILE @ [sx,sy]>>   => ntRef_ntVDDM           
               );            
          }
        } 
        foreach tx ( L_WLSRD_TILES_X )
        {
          if(!(((ty==NUM_TILES_REGION*4+MID_TILE_REGION)&&(tx<=HSST_TILE_X+NUM_TILE_HSST_X))||((ty<NUM_TILES_REGION*4)&&(tx>=IOL1_TILE_X))))
          {
               sx = tx * NUM_GRID_X;
               sy = ty * NUM_GRID_Y;                    

               connect
               (
                   <pin VDD11 of <device WLSRD_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
                   <pin VSS of <device WLSRD_TILE @ [sx,sy]>>    => ntRef_ntVSS,
                   <pin VDD33 of <device WLSRD_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
                   <pin VDDM of <device WLSRD_TILE @ [sx,sy]>>   => ntRef_ntVDDM           
               );            
          }
        }
    }

// for ESD

    foreach ty ( {ESD_PGL200ES_TILE_Y} )
    {
        foreach tx ( {ESD_PGL200ES_TILE_X} )
        {
          sx = tx * NUM_GRID_X;
          sy = ty * NUM_GRID_Y;

          connect
            (
              <pin VDD11 of <device ESD_PGL200ES_TILE @ [sx,sy]>>       => ntRef_ntVDD11,
              <pin VDD33 of <device ESD_PGL200ES_TILE @ [sx,sy]>>       => ntRef_ntVDD33,
              <pin VSS of <device ESD_PGL200ES_TILE @ [sx,sy]>>         => ntRef_ntVSS,
              <pin VDD33A_PLL of <device ESD_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVDD33A_PLL,
              <pin VSSA_PLL0 of <device ESD_PGL200ES_TILE @ [sx,sy]>>   => ntRef_ntVSSA_PLL0,
              <pin VSSA_PLL1 of <device ESD_PGL200ES_TILE @ [sx,sy]>>   => ntRef_ntVSSA_PLL1,
              <pin VSSA_PLL2 of <device ESD_PGL200ES_TILE @ [sx,sy]>>   => ntRef_ntVSSA_PLL2,
              <pin VSSA_PLL3 of <device ESD_PGL200ES_TILE @ [sx,sy]>>   => ntRef_ntVSSA_PLL3,
              <pin VSSA_PLL4  of <device ESD_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVSSA_PLL4,
              <pin VSSA_PLL5  of <device ESD_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVSSA_PLL5,
              <pin VSSA_PLL6  of <device ESD_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVSSA_PLL6,
              <pin VSSA_PLL7  of <device ESD_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVSSA_PLL7,
              <pin VSSA_PLL8  of <device ESD_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVSSA_PLL8,
              <pin VSSA_PLL9  of <device ESD_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVSSA_PLL9,
              <pin VSSA_PLL10  of <device ESD_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVSSA_PLL10,
              <pin VSSA_PLL11  of <device ESD_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVSSA_PLL11,
              <pin VSSA_PLL12  of <device ESD_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVSSA_PLL12,
              <pin VSSA_PLL13  of <device ESD_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVSSA_PLL13,
              <pin VSSA_PLL14  of <device ESD_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVSSA_PLL14,
              <pin VSSA_PLL15  of <device ESD_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVSSA_PLL15,
              <pin VDDIOL0 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVDDIOL0,
              <pin VDDIOL1 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVDDIOL1,
              <pin VDDIOL2 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVDDIOL2,
              <pin VDDIOL3 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVDDIOL3,
              <pin VDDIOL4 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVDDIOL4,
              <pin VDDIOL5 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVDDIOL5,
              <pin VDDIOL6 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVDDIOL6,
              <pin VDDIOR0 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVDDIOR0,
              <pin VDDIOR1 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVDDIOR1,
              <pin VDDIOR2 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVDDIOR2,
              <pin VDDIOR3 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVDDIOR3,
              <pin VDDIOR4 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVDDIOR4,
              <pin VDDIOR5 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVDDIOR5,
              <pin VSSIOL0 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVSSIOL0,
              <pin VSSIOL1 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVSSIOL1,
              <pin VSSIOL2 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVSSIOL2,
              <pin VSSIOL3 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVSSIOL3,
              <pin VSSIOL4 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVSSIOL4,
              <pin VSSIOL5 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVSSIOL5,
              <pin VSSIOL6 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVSSIOL6,
              <pin VSSIOR0 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVSSIOR0,
              <pin VSSIOR1 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVSSIOR1,
              <pin VSSIOR2 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVSSIOR2,
              <pin VSSIOR3 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVSSIOR3,
              <pin VSSIOR4 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVSSIOR4,
              <pin VSSIOR5 of <device ESD_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVSSIOR5
            );
        }  
    }
    
    //add @20180719///////////////////////////////////////////////////////////////////////
    foreach ty ( {BUF_PGL35IP_TILE_Y} )
    {
        foreach tx ( {BUF_PGL35IP_TILE_X} )
        {
          sx = tx * NUM_GRID_X;
          sy = ty * NUM_GRID_Y;

          connect
          (
              <pin VDD11 of <device BUF_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS   of <device BUF_PGL200ES_TILE @ [sx,sy]>>  => ntRef_ntVSS
          );
        }  
    }
    //add @20180719///////////////////////////////////////////////////////////////////////

    tx = IDCODE_TILE_X;
    ty = IDCODE_TILE_Y;

    sx = tx * NUM_GRID_X + 2;
    sy = ty * NUM_GRID_Y;

    connect
      (
        <pin VDD11 of <device IDCODE_PGL200ES_TILE @ [sx,sy]>>   => ntRef_ntVDD11,
        <pin VSS of <device IDCODE_PGL200ES_TILE @ [sx,sy]>>     => ntRef_ntVSS
      );

    ty = RLYBUFS_TILE_Y;

    foreach tx(L_RLYBUFS_TILES_X)
    {
        sx = tx * NUM_GRID_X + 2;
        sy = ty * NUM_GRID_Y;

        connect
        (
            <pin VDD11 of <device RLYBUFS_TILE @ [sx,sy]>>   => ntRef_ntVDD11,
            <pin VSS of <device RLYBUFS_TILE @ [sx,sy]>>     => ntRef_ntVSS
        );
    }

// for CGRA

       sx = CGRA_TILE_X * NUM_GRID_X;
       sy = CGRA_TILE_Y * NUM_GRID_Y;                    

       connect
       (
           <pin VDD11 of <device CGRA_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
           <pin VSS of <device CGRA_TILE @ [sx,sy]>>    => ntRef_ntVSS
       );
};//end of structure arch_nl connect_power_input of PGL200ES


