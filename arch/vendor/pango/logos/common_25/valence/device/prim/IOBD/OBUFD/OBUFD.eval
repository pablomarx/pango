*****************************************************************

  Device    [OBUFD]

  Author    [yqtan]

  Abstract  [The Prim Device For OBUFD]

  Revision History:

********************************************************************************/
prim
device OBUFD
{
    parameter
    (
        config string CP_IO_STANDARD  = "SLVS",   //IO standard: lvcmos18 lvcmos15 lvcmos12
        config string CP_OPENDRAIN    = "OFF",
        config string CP_IOB_MODE     = "OBUFHP"      //"OBUFHP" "OBUFHP_T" "OBUFHP_DS" "IOBUFHP" "IOBUFHP_DS"
    );
    port
    (
       input   DO, 
       input   TS,
       input   MIPI_SW_DYN,
       output  OUT,
       output  DIFFO_OUT  
    );

}// end of device OBUFD

/**Device***********************************************************************

  Device    [OBUFD]

  Abstract  [This specified how to propagate the input signal to the outputs based on
             configuration]

  Revision History:

********************************************************************************/
propagation pop of OBUFD
{
    if((CP_IO_STANDARD == "SLVS") && (CP_IOB_MODE == "OBUFHR_DS" || CP_IOB_MODE == "IOBUFHR_DS"))
    {
        propagate ( MIPI_SW_DYN |-> OUT);
        propagate ( DO |-> OUT);
        propagate ( TS |-> OUT);

        propagate ( MIPI_SW_DYN |-> DIFFO_OUT);
        propagate ( DO |-> DIFFO_OUT);
        propagate ( TS |-> DIFFO_OUT);
    }
    else if (CP_IOB_MODE == "OBUFHR")
    {
        propagate ( DO --> OUT);
    }
    else if (CP_IOB_MODE == "OBUFHR_T" || CP_IOB_MODE == "IOBUFHR")
    {
        propagate ( DO |-> OUT);
        propagate ( TS |-> OUT);
    }
    else if (CP_IOB_MODE == "OBUFHR_DS" || CP_IOB_MODE == "IOBUFHR_DS")
    {
        propagate ( DO |-> OUT);
        propagate ( TS |-> OUT);
        propagate ( DO |-> DIFFO_OUT);
        propagate ( TS |-> DIFFO_OUT);
    }
}; // end of propagation for OBUFD

/**Device***********************************************************************

  Device    [OBUFD]
  
  Author    []

  Abstract  [This specified the timing model under specific configuration]

  Revision History:

********************************************************************************/
timing  ibfd_tnl of OBUFD
{
    if((CP_IO_STANDARD == "SLVS") && (CP_IOB_MODE == "OBUFHR_DS" || CP_IOB_MODE == "IOBUFHR_DS"))
    {
        operator V_OUTBUFT_MIPI obftmipi
            parameter map
            (
                IOSTANDARD => CP_IO_STANDARD
            )
            port map
            (
                I  => DO,
                T  => TS,
                M  => MIPI_SW_DYN,
                O  => OUT,
                OB => DIFFO_OUT
            );
    }
    else if (CP_IOB_MODE == "OBUFHR")
    {
        operator V_OBUF obuf
            parameter map
            (
                IOSTANDARD => CP_IO_STANDARD
            )
            port map
            (
                I => DO,
                O => OUT
            );
    }
    else if (CP_IOB_MODE == "OBUFHR_T" || CP_IOB_MODE == "IOBUFHR")
    {
        operator V_OBUFT obuft
            parameter map
            (
                IOSTANDARD => CP_IO_STANDARD
            )
            port map
            (
                I => DO,
                T => TS,
                O => OUT
            );
    }
    else if (CP_IOB_MODE == "OBUFHR_DS" || CP_IOB_MODE == "IOBUFHR_DS")
    {
        operator V_OBUFTDS obufds
            parameter map
            (
                IOSTANDARD => CP_IO_STANDARD
            )
            port map
            (
                I  => DO,
                T  => TS,
                O  => OUT,
                OB => DIFFO_OUT
            );
    }
//    else
//    {
//        OUT       <= 1'bz;
//        DIFFO_OUT <= 1'bz;
//    }
};
