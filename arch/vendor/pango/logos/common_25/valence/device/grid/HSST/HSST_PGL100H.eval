tarted
grid
device HSST
{
    // grid_property_def_start
    // grid_property_def_end

    parameter
    (
        config string CP_PCS_CH0_BYPASS_WORD_ALIGN = "FALSE",
        config string CP_PCS_CH0_BYPASS_DENC = "FALSE",
        config string CP_PCS_CH0_BYPASS_BONDING = "FALSE",
        config string CP_PCS_CH0_BYPASS_CTC = "FALSE",
        config string CP_PCS_CH0_BYPASS_GEAR = "FALSE",
        config string CP_PCS_CH0_BYPASS_BRIDGE = "FALSE",
        config string CP_PCS_CH0_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_PCS_CH0_DATA_MODE = "X8",
        config string CP_PCS_CH0_RX_POLARITY_INV = "DELAY",
        config string CP_PCS_CH0_ALIGN_MODE = "1GB",
        config string CP_PCS_CH0_SAMP_16B = "X16",
        config string CP_PCS_CH0_FARLP_PWR_REDUCTION = "FALSE",
        config int CP_PCS_CH0_COMMA_REG0 = 0,
        config int CP_PCS_CH0_COMMA_MASK = 0,
        config string CP_PCS_CH0_CEB_MODE = "10GB",
        config string CP_PCS_CH0_CTC_MODE = "1SKIP",
        config int CP_PCS_CH0_A_REG = 0,
        config string CP_PCS_CH0_GE_AUTO_EN = "FALSE",
        config int CP_PCS_CH0_SKIP_REG0 = 0,
        config int CP_PCS_CH0_SKIP_REG1 = 0,
        config int CP_PCS_CH0_SKIP_REG2 = 0,
        config int CP_PCS_CH0_SKIP_REG3 = 0,
        config string CP_PCS_CH0_DEC_DUAL = "FALSE",
        config string CP_PCS_CH0_SPLIT = "FALSE",
        config string CP_PCS_CH0_FIFOFLAG_CTC = "FALSE",
        config string CP_PCS_CH0_COMMA_DET_MODE = "COMMA_PATTERN",
        config string CP_PCS_CH0_ERRDETECT_SILENCE = "FALSE",
        config string CP_PCS_CH0_PMA_RCLK_POLINV = "PMA_RCLK",
        config string CP_PCS_CH0_PCS_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH0_CB_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH0_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH0_AFTER_CTC_RCLK_SEL_1 = "PMA_RCLK",
        config string CP_PCS_CH0_RCLK_POLINV = "RCLK",
        config string CP_PCS_CH0_BRIDGE_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH0_PCS_RCLK_EN = "FALSE",
        config string CP_PCS_CH0_CB_RCLK_EN = "FALSE",
        config string CP_PCS_CH0_AFTER_CTC_RCLK_EN = "FALSE",
        config string CP_PCS_CH0_AFTER_CTC_RCLK_EN_GB = "FALSE",
        config string CP_PCS_CH0_AFTER_CTC_RCLK_EN_GB_1 = "FALSE",
        config string CP_PCS_CH0_PCS_RX_RSTN = "FALSE",
        config string CP_PCS_CH0_SLAVE = "MASTER",
        config string CP_PCS_CH0_PCIE_SLAVE = "MASTER",
        config string CP_PCS_CH0_RX_64B66B_67B = "NORMAL",
        config string CP_PCS_CH0_RX_BRIDGE_CLK_POLINV = "RX_BRIDGE_CLK",
        config string CP_PCS_CH0_PCS_CB_RSTN = "FALSE",
        config string CP_PCS_CH0_TX_BRIDGE_GEAR_SEL = "FALSE",
        config string CP_PCS_CH0_TX_BYPASS_BRIDGE_UINT = "FALSE",
        config string CP_PCS_CH0_TX_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_PCS_CH0_TX_BYPASS_GEAR = "FALSE",
        config string CP_PCS_CH0_TX_BYPASS_ENC = "FALSE",
        config string CP_PCS_CH0_TX_BYPASS_BIT_SLIP = "FALSE",
        config string CP_PCS_CH0_TX_GEAR_SPLIT = "FALSE",
        config string CP_PCS_CH0_TX_DRIVE_REG_MODE = "NO_CHANGE",
        config int CP_PCS_CH0_TX_BIT_SLIP_CYCLES = 0,
        config string CP_PCS_CH0_INT_TX_MASK_0 = "FALSE",
        config string CP_PCS_CH0_INT_TX_MASK_1 = "FALSE",
        config string CP_PCS_CH0_INT_TX_MASK_2 = "FALSE",
        config string CP_PCS_CH0_INT_TX_CLR_0 = "FALSE",
        config string CP_PCS_CH0_INT_TX_CLR_1 = "FALSE",
        config string CP_PCS_CH0_INT_TX_CLR_2 = "FALSE",
        config string CP_PCS_CH0_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        config string CP_PCS_CH0_TX_PCS_CLK_EN_SEL = "FALSE",
        config string CP_PCS_CH0_TX_BRIDGE_TCLK_SEL = "TCLK",
        config string CP_PCS_CH0_TX_TCLK_POLINV = "TCLK",
        config string CP_PCS_CH0_TX_PCS_TCLK_SEL = "PMA_TCLK",
        config string CP_PCS_CH0_TX_PCS_TX_RSTN = "FALSE",
        config string CP_PCS_CH0_TX_SLAVE = "MASTER",
        config string CP_PCS_CH0_TX_GEAR_TCLK_EN_SEL = "FALSE",
        config string CP_PCS_CH0_DATA_WIDTH_MODE = "X20",
        config string CP_PCS_CH0_TX_64B66B_67B = "NORMAL",
        config string CP_PCS_CH0_TX_GEAR_TCLK_SEL = "PMA_TCLK",
        config string CP_PCS_CH0_TX_TCLK2FABRIC_SEL = "FALSE",
        config string CP_PCS_CH0_TX_OUTZZ = "FALSE",
        config string CP_PCS_CH0_ENC_DUAL = "FALSE",
        config string CP_PCS_CH0_TX_BITSLIP_DATA_MODE = "X10",
        config string CP_PCS_CH0_TX_BRIDGE_CLK_POLINV = "TX_BRIDGE_CLK",
        config int CP_PCS_CH0_COMMA_REG1 = 0,
        config int CP_PCS_CH0_RAPID_IMAX = 0,
        config int CP_PCS_CH0_RAPID_VMIN_1 = 0,
        config int CP_PCS_CH0_RAPID_VMIN_2 = 0,
        config string CP_PCS_CH0_RX_PRBS_MODE = "DISABLE",
        config string CP_PCS_CH0_RX_ERRCNT_CLR = "FALSE",
        config string CP_PCS_CH0_RX_PRBS_ERR_LPBK = "FALSE",
        config string CP_PCS_CH0_TX_PRBS_MODE = "DISABLE",
        config string CP_PCS_CH0_TX_INSERT_ER = "FALSE",
        config string CP_PCS_CH0_ENABLE_PRBS_GEN = "FALSE",
        config int CP_PCS_CH0_ERR_CNT = 0,
        config int CP_PCS_CH0_DEFAULT_RADDR = 0,
        config int CP_PCS_CH0_MASTER_CHECK_OFFSET = 0,
        config int CP_PCS_CH0_DELAY_SET = 0,
        config string CP_PCS_CH0_SEACH_OFFSET = "20BIT",
        config int CP_PCS_CH0_CEB_RAPIDLS_MMAX = 0,
        config int CP_PCS_CH0_CTC_AFULL = 0,
        config int CP_PCS_CH0_CTC_AEMPTY = 0,
        config int CP_PCS_CH0_CTC_CONTI_SKP_SET = 0,
        config string CP_PCS_CH0_FAR_LOOP = "FALSE",
        config string CP_PCS_CH0_NEAR_LOOP = "FALSE",
        config string CP_PCS_CH0_REG_TX2RX_PLOOP_EN = "FALSE",
        config string CP_PCS_CH0_REG_TX2RX_SLOOP_EN = "FALSE",
        config string CP_PCS_CH0_REG_RX2TX_PLOOP_EN = "FALSE",
        config string CP_PCS_CH0_INT_RX_MASK_0 = "FALSE",
        config string CP_PCS_CH0_INT_RX_MASK_1 = "FALSE",
        config string CP_PCS_CH0_INT_RX_MASK_2 = "FALSE",
        config string CP_PCS_CH0_INT_RX_MASK_3 = "FALSE",
        config string CP_PCS_CH0_INT_RX_MASK_4 = "FALSE",
        config string CP_PCS_CH0_INT_RX_MASK_5 = "FALSE",
        config string CP_PCS_CH0_INT_RX_MASK_6 = "FALSE",
        config string CP_PCS_CH0_INT_RX_MASK_7 = "FALSE",
        config string CP_PCS_CH0_INT_RX_CLR_0 = "FALSE",
        config string CP_PCS_CH0_INT_RX_CLR_1 = "FALSE",
        config string CP_PCS_CH0_INT_RX_CLR_2 = "FALSE",
        config string CP_PCS_CH0_INT_RX_CLR_3 = "FALSE",
        config string CP_PCS_CH0_INT_RX_CLR_4 = "FALSE",
        config string CP_PCS_CH0_INT_RX_CLR_5 = "FALSE",
        config string CP_PCS_CH0_INT_RX_CLR_6 = "FALSE",
        config string CP_PCS_CH0_INT_RX_CLR_7 = "FALSE",
        config string CP_PCS_CH0_CA_RSTN_RX = "FALSE",
        config string CP_PCS_CH0_CA_DYN_DLY_EN_RX = "FALSE",
        config string CP_PCS_CH0_CA_DYN_DLY_SEL_RX = "FALSE",
        config int CP_PCS_CH0_CA_RX = 0,
        config string CP_PCS_CH0_CA_RSTN_TX = "FALSE",
        config string CP_PCS_CH0_CA_DYN_DLY_EN_TX = "FALSE",
        config string CP_PCS_CH0_CA_DYN_DLY_SEL_TX = "FALSE",
        config int CP_PCS_CH0_CA_TX = 0,
        config string CP_PCS_CH0_RXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH0_WDALIGN_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH0_RXDEC_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH0_RXCB_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH0_RXCTC_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH0_RXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH0_RXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH0_RXTEST_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH0_TXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH0_TXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH0_TXENC_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH0_TXBSLP_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH0_TXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH0_TXBRG_FULL_CHK_EN = "FALSE",
        config string CP_PCS_CH0_TXBRG_EMPTY_CHK_EN = "FALSE",
        config string CP_PCS_CH0_RXBRG_FULL_CHK_EN = "FALSE",
        config string CP_PCS_CH0_RXBRG_EMPTY_CHK_EN = "FALSE",
        config string CP_PCS_CH0_CTC_FULL_CHK_EN = "TRUE",
        config string CP_PCS_CH0_CTC_EMPTY_CHK_EN = "TRUE",
        config string CP_PCS_CH0_CEB_FULL_CHK_EN = "FALSE",
        config string CP_PCS_CH0_CEB_EMPTY_CHK_EN = "FALSE",
        config string CP_PCS_CH0_FLP_FULL_CHK_EN = "TRUE",
        config string CP_PCS_CH0_FLP_EMPTY_CHK_EN = "TRUE",
        config string CP_PCS_CH1_BYPASS_WORD_ALIGN = "FALSE",
        config string CP_PCS_CH1_BYPASS_DENC = "FALSE",
        config string CP_PCS_CH1_BYPASS_BONDING = "FALSE",
        config string CP_PCS_CH1_BYPASS_CTC = "FALSE",
        config string CP_PCS_CH1_BYPASS_GEAR = "FALSE",
        config string CP_PCS_CH1_BYPASS_BRIDGE = "FALSE",
        config string CP_PCS_CH1_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_PCS_CH1_DATA_MODE = "X8",
        config string CP_PCS_CH1_RX_POLARITY_INV = "DELAY",
        config string CP_PCS_CH1_ALIGN_MODE = "1GB",
        config string CP_PCS_CH1_SAMP_16B = "X16",
        config string CP_PCS_CH1_FARLP_PWR_REDUCTION = "FALSE",
        config int CP_PCS_CH1_COMMA_REG0 = 0,
        config int CP_PCS_CH1_COMMA_MASK = 0,
        config string CP_PCS_CH1_CEB_MODE = "10GB",
        config string CP_PCS_CH1_CTC_MODE = "1SKIP",
        config int CP_PCS_CH1_A_REG = 0,
        config string CP_PCS_CH1_GE_AUTO_EN = "FALSE",
        config int CP_PCS_CH1_SKIP_REG0 = 0,
        config int CP_PCS_CH1_SKIP_REG1 = 0,
        config int CP_PCS_CH1_SKIP_REG2 = 0,
        config int CP_PCS_CH1_SKIP_REG3 = 0,
        config string CP_PCS_CH1_DEC_DUAL = "FALSE",
        config string CP_PCS_CH1_SPLIT = "FALSE",
        config string CP_PCS_CH1_FIFOFLAG_CTC = "FALSE",
        config string CP_PCS_CH1_COMMA_DET_MODE = "COMMA_PATTERN",
        config string CP_PCS_CH1_ERRDETECT_SILENCE = "FALSE",
        config string CP_PCS_CH1_PMA_RCLK_POLINV = "PMA_RCLK",
        config string CP_PCS_CH1_PCS_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH1_CB_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH1_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH1_AFTER_CTC_RCLK_SEL_1 = "PMA_RCLK",
        config string CP_PCS_CH1_RCLK_POLINV = "RCLK",
        config string CP_PCS_CH1_BRIDGE_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH1_PCS_RCLK_EN = "FALSE",
        config string CP_PCS_CH1_CB_RCLK_EN = "FALSE",
        config string CP_PCS_CH1_AFTER_CTC_RCLK_EN = "FALSE",
        config string CP_PCS_CH1_AFTER_CTC_RCLK_EN_GB = "FALSE",
        config string CP_PCS_CH1_AFTER_CTC_RCLK_EN_GB_1 = "FALSE",
        config string CP_PCS_CH1_PCS_RX_RSTN = "FALSE",
        config string CP_PCS_CH1_SLAVE = "MASTER",
        config string CP_PCS_CH1_PCIE_SLAVE = "MASTER",
        config string CP_PCS_CH1_RX_64B66B_67B = "NORMAL",
        config string CP_PCS_CH1_RX_BRIDGE_CLK_POLINV = "RX_BRIDGE_CLK",
        config string CP_PCS_CH1_PCS_CB_RSTN = "FALSE",
        config string CP_PCS_CH1_TX_BRIDGE_GEAR_SEL = "FALSE",
        config string CP_PCS_CH1_TX_BYPASS_BRIDGE_UINT = "FALSE",
        config string CP_PCS_CH1_TX_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_PCS_CH1_TX_BYPASS_GEAR = "FALSE",
        config string CP_PCS_CH1_TX_BYPASS_ENC = "FALSE",
        config string CP_PCS_CH1_TX_BYPASS_BIT_SLIP = "FALSE",
        config string CP_PCS_CH1_TX_GEAR_SPLIT = "FALSE",
        config string CP_PCS_CH1_TX_DRIVE_REG_MODE = "NO_CHANGE",
        config int CP_PCS_CH1_TX_BIT_SLIP_CYCLES = 0,
        config string CP_PCS_CH1_INT_TX_MASK_0 = "FALSE",
        config string CP_PCS_CH1_INT_TX_MASK_1 = "FALSE",
        config string CP_PCS_CH1_INT_TX_MASK_2 = "FALSE",
        config string CP_PCS_CH1_INT_TX_CLR_0 = "FALSE",
        config string CP_PCS_CH1_INT_TX_CLR_1 = "FALSE",
        config string CP_PCS_CH1_INT_TX_CLR_2 = "FALSE",
        config string CP_PCS_CH1_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        config string CP_PCS_CH1_TX_PCS_CLK_EN_SEL = "FALSE",
        config string CP_PCS_CH1_TX_BRIDGE_TCLK_SEL = "TCLK",
        config string CP_PCS_CH1_TX_TCLK_POLINV = "TCLK",
        config string CP_PCS_CH1_TX_PCS_TCLK_SEL = "PMA_TCLK",
        config string CP_PCS_CH1_TX_PCS_TX_RSTN = "FALSE",
        config string CP_PCS_CH1_TX_SLAVE = "MASTER",
        config string CP_PCS_CH1_TX_GEAR_TCLK_EN_SEL = "FALSE",
        config string CP_PCS_CH1_DATA_WIDTH_MODE = "X20",
        config string CP_PCS_CH1_TX_64B66B_67B = "NORMAL",
        config string CP_PCS_CH1_TX_GEAR_TCLK_SEL = "PMA_TCLK",
        config string CP_PCS_CH1_TX_TCLK2FABRIC_SEL = "FALSE",
        config string CP_PCS_CH1_TX_OUTZZ = "FALSE",
        config string CP_PCS_CH1_ENC_DUAL = "FALSE",
        config string CP_PCS_CH1_TX_BITSLIP_DATA_MODE = "X10",
        config string CP_PCS_CH1_TX_BRIDGE_CLK_POLINV = "TX_BRIDGE_CLK",
        config int CP_PCS_CH1_COMMA_REG1 = 0,
        config int CP_PCS_CH1_RAPID_IMAX = 0,
        config int CP_PCS_CH1_RAPID_VMIN_1 = 0,
        config int CP_PCS_CH1_RAPID_VMIN_2 = 0,
        config string CP_PCS_CH1_RX_PRBS_MODE = "DISABLE",
        config string CP_PCS_CH1_RX_ERRCNT_CLR = "FALSE",
        config string CP_PCS_CH1_RX_PRBS_ERR_LPBK = "FALSE",
        config string CP_PCS_CH1_TX_PRBS_MODE = "DISABLE",
        config string CP_PCS_CH1_TX_INSERT_ER = "FALSE",
        config string CP_PCS_CH1_ENABLE_PRBS_GEN = "FALSE",
        config int CP_PCS_CH1_ERR_CNT = 0,
        config int CP_PCS_CH1_DEFAULT_RADDR = 0,
        config int CP_PCS_CH1_MASTER_CHECK_OFFSET = 0,
        config int CP_PCS_CH1_DELAY_SET = 0,
        config string CP_PCS_CH1_SEACH_OFFSET = "20BIT",
        config int CP_PCS_CH1_CEB_RAPIDLS_MMAX = 0,
        config int CP_PCS_CH1_CTC_AFULL = 0,
        config int CP_PCS_CH1_CTC_AEMPTY = 0,
        config int CP_PCS_CH1_CTC_CONTI_SKP_SET = 0,
        config string CP_PCS_CH1_FAR_LOOP = "FALSE",
        config string CP_PCS_CH1_NEAR_LOOP = "FALSE",
        config string CP_PCS_CH1_REG_TX2RX_PLOOP_EN = "FALSE",
        config string CP_PCS_CH1_REG_TX2RX_SLOOP_EN = "FALSE",
        config string CP_PCS_CH1_REG_RX2TX_PLOOP_EN = "FALSE",
        config string CP_PCS_CH1_INT_RX_MASK_0 = "FALSE",
        config string CP_PCS_CH1_INT_RX_MASK_1 = "FALSE",
        config string CP_PCS_CH1_INT_RX_MASK_2 = "FALSE",
        config string CP_PCS_CH1_INT_RX_MASK_3 = "FALSE",
        config string CP_PCS_CH1_INT_RX_MASK_4 = "FALSE",
        config string CP_PCS_CH1_INT_RX_MASK_5 = "FALSE",
        config string CP_PCS_CH1_INT_RX_MASK_6 = "FALSE",
        config string CP_PCS_CH1_INT_RX_MASK_7 = "FALSE",
        config string CP_PCS_CH1_INT_RX_CLR_0 = "FALSE",
        config string CP_PCS_CH1_INT_RX_CLR_1 = "FALSE",
        config string CP_PCS_CH1_INT_RX_CLR_2 = "FALSE",
        config string CP_PCS_CH1_INT_RX_CLR_3 = "FALSE",
        config string CP_PCS_CH1_INT_RX_CLR_4 = "FALSE",
        config string CP_PCS_CH1_INT_RX_CLR_5 = "FALSE",
        config string CP_PCS_CH1_INT_RX_CLR_6 = "FALSE",
        config string CP_PCS_CH1_INT_RX_CLR_7 = "FALSE",
        config string CP_PCS_CH1_CA_RSTN_RX = "FALSE",
        config string CP_PCS_CH1_CA_DYN_DLY_EN_RX = "FALSE",
        config string CP_PCS_CH1_CA_DYN_DLY_SEL_RX = "FALSE",
        config int CP_PCS_CH1_CA_RX = 0,
        config string CP_PCS_CH1_CA_RSTN_TX = "FALSE",
        config string CP_PCS_CH1_CA_DYN_DLY_EN_TX = "FALSE",
        config string CP_PCS_CH1_CA_DYN_DLY_SEL_TX = "FALSE",
        config int CP_PCS_CH1_CA_TX = 0,
        config string CP_PCS_CH1_RXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH1_WDALIGN_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH1_RXDEC_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH1_RXCB_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH1_RXCTC_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH1_RXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH1_RXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH1_RXTEST_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH1_TXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH1_TXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH1_TXENC_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH1_TXBSLP_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH1_TXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH1_TXBRG_FULL_CHK_EN = "FALSE",
        config string CP_PCS_CH1_TXBRG_EMPTY_CHK_EN = "FALSE",
        config string CP_PCS_CH1_RXBRG_FULL_CHK_EN = "FALSE",
        config string CP_PCS_CH1_RXBRG_EMPTY_CHK_EN = "FALSE",
        config string CP_PCS_CH1_CTC_FULL_CHK_EN = "TRUE",
        config string CP_PCS_CH1_CTC_EMPTY_CHK_EN = "TRUE",
        config string CP_PCS_CH1_CEB_FULL_CHK_EN = "FALSE",
        config string CP_PCS_CH1_CEB_EMPTY_CHK_EN = "FALSE",
        config string CP_PCS_CH1_FLP_FULL_CHK_EN = "TRUE",
        config string CP_PCS_CH1_FLP_EMPTY_CHK_EN = "TRUE",
        config string CP_PCS_CH2_BYPASS_WORD_ALIGN = "FALSE",
        config string CP_PCS_CH2_BYPASS_DENC = "FALSE",
        config string CP_PCS_CH2_BYPASS_BONDING = "FALSE",
        config string CP_PCS_CH2_BYPASS_CTC = "FALSE",
        config string CP_PCS_CH2_BYPASS_GEAR = "FALSE",
        config string CP_PCS_CH2_BYPASS_BRIDGE = "FALSE",
        config string CP_PCS_CH2_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_PCS_CH2_DATA_MODE = "X8",
        config string CP_PCS_CH2_RX_POLARITY_INV = "DELAY",
        config string CP_PCS_CH2_ALIGN_MODE = "1GB",
        config string CP_PCS_CH2_SAMP_16B = "X16",
        config string CP_PCS_CH2_FARLP_PWR_REDUCTION = "FALSE",
        config int CP_PCS_CH2_COMMA_REG0 = 0,
        config int CP_PCS_CH2_COMMA_MASK = 0,
        config string CP_PCS_CH2_CEB_MODE = "10GB",
        config string CP_PCS_CH2_CTC_MODE = "1SKIP",
        config int CP_PCS_CH2_A_REG = 0,
        config string CP_PCS_CH2_GE_AUTO_EN = "FALSE",
        config int CP_PCS_CH2_SKIP_REG0 = 0,
        config int CP_PCS_CH2_SKIP_REG1 = 0,
        config int CP_PCS_CH2_SKIP_REG2 = 0,
        config int CP_PCS_CH2_SKIP_REG3 = 0,
        config string CP_PCS_CH2_DEC_DUAL = "FALSE",
        config string CP_PCS_CH2_SPLIT = "FALSE",
        config string CP_PCS_CH2_FIFOFLAG_CTC = "FALSE",
        config string CP_PCS_CH2_COMMA_DET_MODE = "COMMA_PATTERN",
        config string CP_PCS_CH2_ERRDETECT_SILENCE = "FALSE",
        config string CP_PCS_CH2_PMA_RCLK_POLINV = "PMA_RCLK",
        config string CP_PCS_CH2_PCS_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH2_CB_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH2_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH2_AFTER_CTC_RCLK_SEL_1 = "PMA_RCLK",
        config string CP_PCS_CH2_RCLK_POLINV = "RCLK",
        config string CP_PCS_CH2_BRIDGE_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH2_PCS_RCLK_EN = "FALSE",
        config string CP_PCS_CH2_CB_RCLK_EN = "FALSE",
        config string CP_PCS_CH2_AFTER_CTC_RCLK_EN = "FALSE",
        config string CP_PCS_CH2_AFTER_CTC_RCLK_EN_GB = "FALSE",
        config string CP_PCS_CH2_AFTER_CTC_RCLK_EN_GB_1 = "FALSE",
        config string CP_PCS_CH2_PCS_RX_RSTN = "FALSE",
        config string CP_PCS_CH2_SLAVE = "MASTER",
        config string CP_PCS_CH2_PCIE_SLAVE = "MASTER",
        config string CP_PCS_CH2_RX_64B66B_67B = "NORMAL",
        config string CP_PCS_CH2_RX_BRIDGE_CLK_POLINV = "RX_BRIDGE_CLK",
        config string CP_PCS_CH2_PCS_CB_RSTN = "FALSE",
        config string CP_PCS_CH2_TX_BRIDGE_GEAR_SEL = "FALSE",
        config string CP_PCS_CH2_TX_BYPASS_BRIDGE_UINT = "FALSE",
        config string CP_PCS_CH2_TX_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_PCS_CH2_TX_BYPASS_GEAR = "FALSE",
        config string CP_PCS_CH2_TX_BYPASS_ENC = "FALSE",
        config string CP_PCS_CH2_TX_BYPASS_BIT_SLIP = "FALSE",
        config string CP_PCS_CH2_TX_GEAR_SPLIT = "FALSE",
        config string CP_PCS_CH2_TX_DRIVE_REG_MODE = "NO_CHANGE",
        config int CP_PCS_CH2_TX_BIT_SLIP_CYCLES = 0,
        config string CP_PCS_CH2_INT_TX_MASK_0 = "FALSE",
        config string CP_PCS_CH2_INT_TX_MASK_1 = "FALSE",
        config string CP_PCS_CH2_INT_TX_MASK_2 = "FALSE",
        config string CP_PCS_CH2_INT_TX_CLR_0 = "FALSE",
        config string CP_PCS_CH2_INT_TX_CLR_1 = "FALSE",
        config string CP_PCS_CH2_INT_TX_CLR_2 = "FALSE",
        config string CP_PCS_CH2_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        config string CP_PCS_CH2_TX_PCS_CLK_EN_SEL = "FALSE",
        config string CP_PCS_CH2_TX_BRIDGE_TCLK_SEL = "TCLK",
        config string CP_PCS_CH2_TX_TCLK_POLINV = "TCLK",
        config string CP_PCS_CH2_TX_PCS_TCLK_SEL = "PMA_TCLK",
        config string CP_PCS_CH2_TX_PCS_TX_RSTN = "FALSE",
        config string CP_PCS_CH2_TX_SLAVE = "MASTER",
        config string CP_PCS_CH2_TX_GEAR_TCLK_EN_SEL = "FALSE",
        config string CP_PCS_CH2_DATA_WIDTH_MODE = "X20",
        config string CP_PCS_CH2_TX_64B66B_67B = "NORMAL",
        config string CP_PCS_CH2_TX_GEAR_TCLK_SEL = "PMA_TCLK",
        config string CP_PCS_CH2_TX_TCLK2FABRIC_SEL = "FALSE",
        config string CP_PCS_CH2_TX_OUTZZ = "FALSE",
        config string CP_PCS_CH2_ENC_DUAL = "FALSE",
        config string CP_PCS_CH2_TX_BITSLIP_DATA_MODE = "X10",
        config string CP_PCS_CH2_TX_BRIDGE_CLK_POLINV = "TX_BRIDGE_CLK",
        config int CP_PCS_CH2_COMMA_REG1 = 0,
        config int CP_PCS_CH2_RAPID_IMAX = 0,
        config int CP_PCS_CH2_RAPID_VMIN_1 = 0,
        config int CP_PCS_CH2_RAPID_VMIN_2 = 0,
        config string CP_PCS_CH2_RX_PRBS_MODE = "DISABLE",
        config string CP_PCS_CH2_RX_ERRCNT_CLR = "FALSE",
        config string CP_PCS_CH2_RX_PRBS_ERR_LPBK = "FALSE",
        config string CP_PCS_CH2_TX_PRBS_MODE = "DISABLE",
        config string CP_PCS_CH2_TX_INSERT_ER = "FALSE",
        config string CP_PCS_CH2_ENABLE_PRBS_GEN = "FALSE",
        config int CP_PCS_CH2_ERR_CNT = 0,
        config int CP_PCS_CH2_DEFAULT_RADDR = 0,
        config int CP_PCS_CH2_MASTER_CHECK_OFFSET = 0,
        config int CP_PCS_CH2_DELAY_SET = 0,
        config string CP_PCS_CH2_SEACH_OFFSET = "20BIT",
        config int CP_PCS_CH2_CEB_RAPIDLS_MMAX = 0,
        config int CP_PCS_CH2_CTC_AFULL = 0,
        config int CP_PCS_CH2_CTC_AEMPTY = 0,
        config int CP_PCS_CH2_CTC_CONTI_SKP_SET = 0,
        config string CP_PCS_CH2_FAR_LOOP = "FALSE",
        config string CP_PCS_CH2_NEAR_LOOP = "FALSE",
        config string CP_PCS_CH2_REG_TX2RX_PLOOP_EN = "FALSE",
        config string CP_PCS_CH2_REG_TX2RX_SLOOP_EN = "FALSE",
        config string CP_PCS_CH2_REG_RX2TX_PLOOP_EN = "FALSE",
        config string CP_PCS_CH2_INT_RX_MASK_0 = "FALSE",
        config string CP_PCS_CH2_INT_RX_MASK_1 = "FALSE",
        config string CP_PCS_CH2_INT_RX_MASK_2 = "FALSE",
        config string CP_PCS_CH2_INT_RX_MASK_3 = "FALSE",
        config string CP_PCS_CH2_INT_RX_MASK_4 = "FALSE",
        config string CP_PCS_CH2_INT_RX_MASK_5 = "FALSE",
        config string CP_PCS_CH2_INT_RX_MASK_6 = "FALSE",
        config string CP_PCS_CH2_INT_RX_MASK_7 = "FALSE",
        config string CP_PCS_CH2_INT_RX_CLR_0 = "FALSE",
        config string CP_PCS_CH2_INT_RX_CLR_1 = "FALSE",
        config string CP_PCS_CH2_INT_RX_CLR_2 = "FALSE",
        config string CP_PCS_CH2_INT_RX_CLR_3 = "FALSE",
        config string CP_PCS_CH2_INT_RX_CLR_4 = "FALSE",
        config string CP_PCS_CH2_INT_RX_CLR_5 = "FALSE",
        config string CP_PCS_CH2_INT_RX_CLR_6 = "FALSE",
        config string CP_PCS_CH2_INT_RX_CLR_7 = "FALSE",
        config string CP_PCS_CH2_CA_RSTN_RX = "FALSE",
        config string CP_PCS_CH2_CA_DYN_DLY_EN_RX = "FALSE",
        config string CP_PCS_CH2_CA_DYN_DLY_SEL_RX = "FALSE",
        config int CP_PCS_CH2_CA_RX = 0,
        config string CP_PCS_CH2_CA_RSTN_TX = "FALSE",
        config string CP_PCS_CH2_CA_DYN_DLY_EN_TX = "FALSE",
        config string CP_PCS_CH2_CA_DYN_DLY_SEL_TX = "FALSE",
        config int CP_PCS_CH2_CA_TX = 0,
        config string CP_PCS_CH2_RXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH2_WDALIGN_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH2_RXDEC_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH2_RXCB_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH2_RXCTC_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH2_RXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH2_RXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH2_RXTEST_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH2_TXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH2_TXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH2_TXENC_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH2_TXBSLP_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH2_TXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH2_TXBRG_FULL_CHK_EN = "FALSE",
        config string CP_PCS_CH2_TXBRG_EMPTY_CHK_EN = "FALSE",
        config string CP_PCS_CH2_RXBRG_FULL_CHK_EN = "FALSE",
        config string CP_PCS_CH2_RXBRG_EMPTY_CHK_EN = "FALSE",
        config string CP_PCS_CH2_CTC_FULL_CHK_EN = "TRUE",
        config string CP_PCS_CH2_CTC_EMPTY_CHK_EN = "TRUE",
        config string CP_PCS_CH2_CEB_FULL_CHK_EN = "FALSE",
        config string CP_PCS_CH2_CEB_EMPTY_CHK_EN = "FALSE",
        config string CP_PCS_CH2_FLP_FULL_CHK_EN = "TRUE",
        config string CP_PCS_CH2_FLP_EMPTY_CHK_EN = "TRUE",
        config string CP_PCS_CH3_BYPASS_WORD_ALIGN = "FALSE",
        config string CP_PCS_CH3_BYPASS_DENC = "FALSE",
        config string CP_PCS_CH3_BYPASS_BONDING = "FALSE",
        config string CP_PCS_CH3_BYPASS_CTC = "FALSE",
        config string CP_PCS_CH3_BYPASS_GEAR = "FALSE",
        config string CP_PCS_CH3_BYPASS_BRIDGE = "FALSE",
        config string CP_PCS_CH3_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_PCS_CH3_DATA_MODE = "X8",
        config string CP_PCS_CH3_RX_POLARITY_INV = "DELAY",
        config string CP_PCS_CH3_ALIGN_MODE = "1GB",
        config string CP_PCS_CH3_SAMP_16B = "X16",
        config string CP_PCS_CH3_FARLP_PWR_REDUCTION = "FALSE",
        config int CP_PCS_CH3_COMMA_REG0 = 0,
        config int CP_PCS_CH3_COMMA_MASK = 0,
        config string CP_PCS_CH3_CEB_MODE = "10GB",
        config string CP_PCS_CH3_CTC_MODE = "1SKIP",
        config int CP_PCS_CH3_A_REG = 0,
        config string CP_PCS_CH3_GE_AUTO_EN = "FALSE",
        config int CP_PCS_CH3_SKIP_REG0 = 0,
        config int CP_PCS_CH3_SKIP_REG1 = 0,
        config int CP_PCS_CH3_SKIP_REG2 = 0,
        config int CP_PCS_CH3_SKIP_REG3 = 0,
        config string CP_PCS_CH3_DEC_DUAL = "FALSE",
        config string CP_PCS_CH3_SPLIT = "FALSE",
        config string CP_PCS_CH3_FIFOFLAG_CTC = "FALSE",
        config string CP_PCS_CH3_COMMA_DET_MODE = "COMMA_PATTERN",
        config string CP_PCS_CH3_ERRDETECT_SILENCE = "FALSE",
        config string CP_PCS_CH3_PMA_RCLK_POLINV = "PMA_RCLK",
        config string CP_PCS_CH3_PCS_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH3_CB_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH3_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH3_AFTER_CTC_RCLK_SEL_1 = "PMA_RCLK",
        config string CP_PCS_CH3_RCLK_POLINV = "RCLK",
        config string CP_PCS_CH3_BRIDGE_RCLK_SEL = "PMA_RCLK",
        config string CP_PCS_CH3_PCS_RCLK_EN = "FALSE",
        config string CP_PCS_CH3_CB_RCLK_EN = "FALSE",
        config string CP_PCS_CH3_AFTER_CTC_RCLK_EN = "FALSE",
        config string CP_PCS_CH3_AFTER_CTC_RCLK_EN_GB = "FALSE",
        config string CP_PCS_CH3_AFTER_CTC_RCLK_EN_GB_1 = "FALSE",
        config string CP_PCS_CH3_PCS_RX_RSTN = "FALSE",
        config string CP_PCS_CH3_SLAVE = "MASTER",
        config string CP_PCS_CH3_PCIE_SLAVE = "MASTER",
        config string CP_PCS_CH3_RX_64B66B_67B = "NORMAL",
        config string CP_PCS_CH3_RX_BRIDGE_CLK_POLINV = "RX_BRIDGE_CLK",
        config string CP_PCS_CH3_PCS_CB_RSTN = "FALSE",
        config string CP_PCS_CH3_TX_BRIDGE_GEAR_SEL = "FALSE",
        config string CP_PCS_CH3_TX_BYPASS_BRIDGE_UINT = "FALSE",
        config string CP_PCS_CH3_TX_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_PCS_CH3_TX_BYPASS_GEAR = "FALSE",
        config string CP_PCS_CH3_TX_BYPASS_ENC = "FALSE",
        config string CP_PCS_CH3_TX_BYPASS_BIT_SLIP = "FALSE",
        config string CP_PCS_CH3_TX_GEAR_SPLIT = "FALSE",
        config string CP_PCS_CH3_TX_DRIVE_REG_MODE = "NO_CHANGE",
        config int CP_PCS_CH3_TX_BIT_SLIP_CYCLES = 0,
        config string CP_PCS_CH3_INT_TX_MASK_0 = "FALSE",
        config string CP_PCS_CH3_INT_TX_MASK_1 = "FALSE",
        config string CP_PCS_CH3_INT_TX_MASK_2 = "FALSE",
        config string CP_PCS_CH3_INT_TX_CLR_0 = "FALSE",
        config string CP_PCS_CH3_INT_TX_CLR_1 = "FALSE",
        config string CP_PCS_CH3_INT_TX_CLR_2 = "FALSE",
        config string CP_PCS_CH3_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        config string CP_PCS_CH3_TX_PCS_CLK_EN_SEL = "FALSE",
        config string CP_PCS_CH3_TX_BRIDGE_TCLK_SEL = "TCLK",
        config string CP_PCS_CH3_TX_TCLK_POLINV = "TCLK",
        config string CP_PCS_CH3_TX_PCS_TCLK_SEL = "PMA_TCLK",
        config string CP_PCS_CH3_TX_PCS_TX_RSTN = "FALSE",
        config string CP_PCS_CH3_TX_SLAVE = "MASTER",
        config string CP_PCS_CH3_TX_GEAR_TCLK_EN_SEL = "FALSE",
        config string CP_PCS_CH3_DATA_WIDTH_MODE = "X20",
        config string CP_PCS_CH3_TX_64B66B_67B = "NORMAL",
        config string CP_PCS_CH3_TX_GEAR_TCLK_SEL = "PMA_TCLK",
        config string CP_PCS_CH3_TX_TCLK2FABRIC_SEL = "FALSE",
        config string CP_PCS_CH3_TX_OUTZZ = "FALSE",
        config string CP_PCS_CH3_ENC_DUAL = "FALSE",
        config string CP_PCS_CH3_TX_BITSLIP_DATA_MODE = "X10",
        config string CP_PCS_CH3_TX_BRIDGE_CLK_POLINV = "TX_BRIDGE_CLK",
        config int CP_PCS_CH3_COMMA_REG1 = 0,
        config int CP_PCS_CH3_RAPID_IMAX = 0,
        config int CP_PCS_CH3_RAPID_VMIN_1 = 0,
        config int CP_PCS_CH3_RAPID_VMIN_2 = 0,
        config string CP_PCS_CH3_RX_PRBS_MODE = "DISABLE",
        config string CP_PCS_CH3_RX_ERRCNT_CLR = "FALSE",
        config string CP_PCS_CH3_RX_PRBS_ERR_LPBK = "FALSE",
        config string CP_PCS_CH3_TX_PRBS_MODE = "DISABLE",
        config string CP_PCS_CH3_TX_INSERT_ER = "FALSE",
        config string CP_PCS_CH3_ENABLE_PRBS_GEN = "FALSE",
        config int CP_PCS_CH3_ERR_CNT = 0,
        config int CP_PCS_CH3_DEFAULT_RADDR = 0,
        config int CP_PCS_CH3_MASTER_CHECK_OFFSET = 0,
        config int CP_PCS_CH3_DELAY_SET = 0,
        config string CP_PCS_CH3_SEACH_OFFSET = "20BIT",
        config int CP_PCS_CH3_CEB_RAPIDLS_MMAX = 0,
        config int CP_PCS_CH3_CTC_AFULL = 0,
        config int CP_PCS_CH3_CTC_AEMPTY = 0,
        config int CP_PCS_CH3_CTC_CONTI_SKP_SET = 0,
        config string CP_PCS_CH3_FAR_LOOP = "FALSE",
        config string CP_PCS_CH3_NEAR_LOOP = "FALSE",
        config string CP_PCS_CH3_REG_TX2RX_PLOOP_EN = "FALSE",
        config string CP_PCS_CH3_REG_TX2RX_SLOOP_EN = "FALSE",
        config string CP_PCS_CH3_REG_RX2TX_PLOOP_EN = "FALSE",
        config string CP_PCS_CH3_INT_RX_MASK_0 = "FALSE",
        config string CP_PCS_CH3_INT_RX_MASK_1 = "FALSE",
        config string CP_PCS_CH3_INT_RX_MASK_2 = "FALSE",
        config string CP_PCS_CH3_INT_RX_MASK_3 = "FALSE",
        config string CP_PCS_CH3_INT_RX_MASK_4 = "FALSE",
        config string CP_PCS_CH3_INT_RX_MASK_5 = "FALSE",
        config string CP_PCS_CH3_INT_RX_MASK_6 = "FALSE",
        config string CP_PCS_CH3_INT_RX_MASK_7 = "FALSE",
        config string CP_PCS_CH3_INT_RX_CLR_0 = "FALSE",
        config string CP_PCS_CH3_INT_RX_CLR_1 = "FALSE",
        config string CP_PCS_CH3_INT_RX_CLR_2 = "FALSE",
        config string CP_PCS_CH3_INT_RX_CLR_3 = "FALSE",
        config string CP_PCS_CH3_INT_RX_CLR_4 = "FALSE",
        config string CP_PCS_CH3_INT_RX_CLR_5 = "FALSE",
        config string CP_PCS_CH3_INT_RX_CLR_6 = "FALSE",
        config string CP_PCS_CH3_INT_RX_CLR_7 = "FALSE",
        config string CP_PCS_CH3_CA_RSTN_RX = "FALSE",
        config string CP_PCS_CH3_CA_DYN_DLY_EN_RX = "FALSE",
        config string CP_PCS_CH3_CA_DYN_DLY_SEL_RX = "FALSE",
        config int CP_PCS_CH3_CA_RX = 0,
        config string CP_PCS_CH3_CA_RSTN_TX = "FALSE",
        config string CP_PCS_CH3_CA_DYN_DLY_EN_TX = "FALSE",
        config string CP_PCS_CH3_CA_DYN_DLY_SEL_TX = "FALSE",
        config int CP_PCS_CH3_CA_TX = 0,
        config string CP_PCS_CH3_RXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH3_WDALIGN_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH3_RXDEC_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH3_RXCB_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH3_RXCTC_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH3_RXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH3_RXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH3_RXTEST_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH3_TXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH3_TXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH3_TXENC_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH3_TXBSLP_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH3_TXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_PCS_CH3_TXBRG_FULL_CHK_EN = "FALSE",
        config string CP_PCS_CH3_TXBRG_EMPTY_CHK_EN = "FALSE",
        config string CP_PCS_CH3_RXBRG_FULL_CHK_EN = "FALSE",
        config string CP_PCS_CH3_RXBRG_EMPTY_CHK_EN = "FALSE",
        config string CP_PCS_CH3_CTC_FULL_CHK_EN = "TRUE",
        config string CP_PCS_CH3_CTC_EMPTY_CHK_EN = "TRUE",
        config string CP_PCS_CH3_CEB_FULL_CHK_EN = "FALSE",
        config string CP_PCS_CH3_CEB_EMPTY_CHK_EN = "FALSE",
        config string CP_PCS_CH3_FLP_FULL_CHK_EN = "TRUE",
        config string CP_PCS_CH3_FLP_EMPTY_CHK_EN = "TRUE",
        config string CP_PMA_CH0_REG_RX_PD = "ON",
        config string CP_PMA_CH0_REG_RX_PD_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_CLKPATH_PD = "ON",
        config string CP_PMA_CH0_REG_RX_CLKPATH_PD_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_DATAPATH_PD = "ON",
        config string CP_PMA_CH0_REG_RX_DATAPATH_PD_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_SIGDET_PD = "ON",
        config string CP_PMA_CH0_REG_RX_SIGDET_PD_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_DCC_RST_N = "TRUE",
        config string CP_PMA_CH0_REG_RX_DCC_RST_N_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_CDR_RST_N = "TRUE",
        config string CP_PMA_CH0_REG_RX_CDR_RST_N_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_SIGDET_RST_N = "TRUE",
        config string CP_PMA_CH0_REG_RX_SIGDET_RST_N_EN = "FALSE",
        config string CP_PMA_CH0_REG_RXPCLK_SLIP = "FALSE",
        config string CP_PMA_CH0_REG_RXPCLK_SLIP_OW = "DISABLE",
        config string CP_PMA_CH0_REG_RX_PCLKSWITCH_RST_N = "TRUE",
        config string CP_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_PCLKSWITCH = "FALSE",
        config string CP_PMA_CH0_REG_RX_PCLKSWITCH_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_HIGHZ = "FALSE",
        config string CP_PMA_CH0_REG_RX_HIGHZ_EN = "FALSE",
        config int CP_PMA_CH0_REG_RX_EQ_C_SET = 8,
        config int CP_PMA_CH0_REG_RX_EQ_R_SET = 8,
        config string CP_PMA_CH0_REG_RX_BUSWIDTH = "20BIT",
        config string CP_PMA_CH0_REG_RX_BUSWIDTH_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_RATE = "DIV1",
        config string CP_PMA_CH0_REG_RX_RATE_EN = "FALSE",
        config int CP_PMA_CH0_REG_RX_RES_TRIM = 51,
        config string CP_PMA_CH0_REG_RX_RES_TRIM_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_EQ_OFF = "FALSE",
        config int CP_PMA_CH0_REG_RX_PREAMP_IC = 1367,
        config string CP_PMA_CH0_REG_RX_PCLK_EDGE_SEL = "POS_EDGE",
        config int CP_PMA_CH0_REG_RX_PIBUF_IC = 2,
        config int CP_PMA_CH0_REG_RX_DCC_IC_RX = 3,
        config int CP_PMA_CH0_REG_RX_DCC_IC_TX = 3,
        config string CP_PMA_CH0_REG_RX_ICTRL_TRX = "100PCT",
        config int CP_PMA_CH0_REG_RX_ICTRL_SIGDET = 5,
        config string CP_PMA_CH0_REG_RX_ICTRL_PREAMP = "100PCT",
        config string CP_PMA_CH0_REG_RX_ICTRL_SLICER = "100PCT",
        config string CP_PMA_CH0_REG_RX_ICTRL_PIBUF = "100PCT",
        config string CP_PMA_CH0_REG_RX_ICTRL_PI = "100PCT",
        config string CP_PMA_CH0_REG_RX_ICTRL_DCC = "100PCT",
        config string CP_PMA_CH0_REG_RX_ICTRL_PREDRV = "100PCT",
        config string CP_PMA_CH0_REG_TX_RATE = "DIV1",
        config string CP_PMA_CH0_REG_TX_RATE_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N = "TRUE",
        config string CP_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_TX2RX_PLPBK_EN = "FALSE",
        config string CP_PMA_CH0_REG_TXCLK_SEL = "PLL",
        config string CP_PMA_CH0_REG_RX_DATA_POLARITY = "NORMAL",
        config string CP_PMA_CH0_REG_RX_ERR_INSERT = "FALSE",
        config string CP_PMA_CH0_REG_UDP_CHK_EN = "FALSE",
        config string CP_PMA_CH0_REG_PRBS_SEL = "PRBS7",
        config string CP_PMA_CH0_REG_PRBS_CHK_EN = "FALSE",
        config string CP_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL = "20BIT",
        config string CP_PMA_CH0_REG_BIST_CHK_PAT_SEL = "PRBS",
        config string CP_PMA_CH0_REG_LOAD_ERR_CNT = "DISABLE",
        config string CP_PMA_CH0_REG_CHK_COUNTER_EN = "FALSE",
        config int CP_PMA_CH0_REG_CDR_PROP_GAIN = 5,
        config int CP_PMA_CH0_REG_CDR_PROP_TURBO_GAIN = 6,
        config int CP_PMA_CH0_REG_CDR_INT_GAIN = 5,
        config int CP_PMA_CH0_REG_CDR_INT_TURBO_GAIN = 6,
        config int CP_PMA_CH0_REG_CDR_INT_SAT_MAX = 992,
        config int CP_PMA_CH0_REG_CDR_INT_SAT_MIN = 32,
        config string CP_PMA_CH0_REG_CDR_INT_RST = "FALSE",
        config string CP_PMA_CH0_REG_CDR_INT_RST_OW = "DISABLE",
        config string CP_PMA_CH0_REG_CDR_PROP_RST = "FALSE",
        config string CP_PMA_CH0_REG_CDR_PROP_RST_OW = "DISABLE",
        config string CP_PMA_CH0_REG_CDR_LOCK_RST = "FALSE",
        config string CP_PMA_CH0_REG_CDR_LOCK_RST_OW = "DISABLE",
        config int CP_PMA_CH0_REG_CDR_RX_PI_FORCE_SEL = 0,
        config int CP_PMA_CH0_REG_CDR_RX_PI_FORCE_D = 0,
        config string CP_PMA_CH0_REG_CDR_LOCK_TIMER = "1_2U",
        config int CP_PMA_CH0_REG_CDR_TURBO_MODE_TIMER = 1,
        config string CP_PMA_CH0_REG_CDR_LOCK_VAL = "FALSE",
        config string CP_PMA_CH0_REG_CDR_LOCK_OW = "DISABLE",
        config string CP_PMA_CH0_REG_CDR_INT_SAT_DET_EN = "TRUE",
        config string CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_EN = "FALSE",
        config string CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_RESET_EN = "FALSE",
        config string CP_PMA_CH0_REG_CDR_PI_CTRL_RST = "FALSE",
        config string CP_PMA_CH0_REG_CDR_PI_CTRL_RST_OW = "DISABLE",
        config string CP_PMA_CH0_REG_CDR_SAT_DET_RST = "FALSE",
        config string CP_PMA_CH0_REG_CDR_SAT_DET_RST_OW = "DISABLE",
        config string CP_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST = "FALSE",
        config string CP_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_OW = "DISABLE",
        config string CP_PMA_CH0_REG_CDR_SIGDET_STATUS_DIS = "FALSE",
        config int CP_PMA_CH0_REG_CDR_SAT_DET_TIMER = 2,
        config string CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_VAL = "FALSE",
        config string CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_OW = "DISABLE",
        config string CP_PMA_CH0_REG_CDR_TURBO_MODE_EN = "TRUE",
        config int CP_PMA_CH0_REG_CDR_STATUS_RADDR_INIT = 0,
        config string CP_PMA_CH0_REG_CDR_STATUS_FIFO_EN = "TRUE",
        config int CP_PMA_CH0_REG_PMA_TEST_SEL = 0,
        config int CP_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN = 3,
        config int CP_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX = 11,
        config int CP_PMA_CH0_REG_OOB_COMINIT_GAP_MIN = 15,
        config int CP_PMA_CH0_REG_OOB_COMINIT_GAP_MAX = 35,
        config int CP_PMA_CH0_REG_RX_PIBUF_IC_TX = 1,
        config int CP_PMA_CH0_REG_COMWAKE_STATUS_CLEAR = 0,
        config int CP_PMA_CH0_REG_COMINIT_STATUS_CLEAR = 0,
        config string CP_PMA_CH0_REG_RX_SYNC_RST_N_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_SYNC_RST_N = "TRUE",
        config string CP_PMA_CH0_REG_RX_SATA_COMINIT_OW = "DISABLE",
        config string CP_PMA_CH0_REG_RX_SATA_COMINIT = "FALSE",
        config string CP_PMA_CH0_REG_RX_SATA_COMWAKE_OW = "DISABLE",
        config string CP_PMA_CH0_REG_RX_SATA_COMWAKE = "FALSE",
        config string CP_PMA_CH0_REG_RX_DCC_DISABLE = "ENABLE",
        config string CP_PMA_CH0_REG_TX_DCC_DISABLE = "ENABLE",
        config string CP_PMA_CH0_REG_RX_SLIP_SEL_EN = "FALSE",
        config int CP_PMA_CH0_REG_RX_SLIP_SEL = 0,
        config string CP_PMA_CH0_REG_RX_SLIP_EN = "FALSE",
        config int CP_PMA_CH0_REG_RX_SIGDET_STATUS_SEL = 5,
        config string CP_PMA_CH0_REG_RX_SIGDET_FSM_RST_N = "TRUE",
        config string CP_PMA_CH0_REG_RX_SIGDET_STATUS_OW = "DISABLE",
        config string CP_PMA_CH0_REG_RX_SIGDET_STATUS = "FALSE",
        config string CP_PMA_CH0_REG_RX_SIGDET_VTH = "50MV",
        config int CP_PMA_CH0_REG_RX_SIGDET_GRM = 0,
        config string CP_PMA_CH0_REG_RX_SIGDET_PULSE_EXT = "DISABLE",
        config int CP_PMA_CH0_REG_RX_SIGDET_CH2_SEL = 0,
        config int CP_PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW = 3,
        config string CP_PMA_CH0_REG_RX_SIGDET_CHK_WINDOW_EN = "TRUE",
        config int CP_PMA_CH0_REG_RX_SIGDET_NOSIG_COUNT_SETTING = 4,
        config int CP_PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL = 0,
        config string CP_PMA_CH0_REG_SLIP_FIFO_INV_EN = "FALSE",
        config string CP_PMA_CH0_REG_SLIP_FIFO_INV = "POS_EDGE",
        config int CP_PMA_CH0_REG_RX_SIGDET_4OOB_DET_SEL = 7,
        config int CP_PMA_CH0_REG_RX_SIGDET_IC_I = 10,
        config string CP_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_OW = "DISABLE",
        config string CP_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N = "FALSE",
        config string CP_PMA_CH0_REG_RX_OOB_DETECTOR_PD_OW = "DISABLE",
        config string CP_PMA_CH0_REG_RX_OOB_DETECTOR_PD = "ON",
        config string CP_PMA_CH0_REG_RX_TERM_CM_CTRL = "5DIV7",
        config string CP_PMA_CH0_REG_TX_PD = "ON",
        config string CP_PMA_CH0_REG_TX_PD_OW = "DISABLE",
        config string CP_PMA_CH0_REG_TX_CLKPATH_PD = "ON",
        config string CP_PMA_CH0_REG_TX_CLKPATH_PD_OW = "DISABLE",
        config int CP_PMA_CH0_REG_TX_BEACON_TIMER_SEL = 0,
        config string CP_PMA_CH0_REG_TX_RXDET_REQ_OW = "DISABLE",
        config string CP_PMA_CH0_REG_TX_RXDET_REQ = "FALSE",
        config string CP_PMA_CH0_REG_TX_BEACON_EN_OW = "DISABLE",
        config string CP_PMA_CH0_REG_TX_BEACON_EN = "FALSE",
        config string CP_PMA_CH0_REG_TX_EI_EN_OW = "DISABLE",
        config string CP_PMA_CH0_REG_TX_EI_EN = "FALSE",
        config string CP_PMA_CH0_REG_TX_RES_CAL_EN = "FALSE",
        config int CP_PMA_CH0_REG_TX_RES_CAL = 51,
        config string CP_PMA_CH0_REG_TX_BIAS_CAL_EN = "FALSE",
        config int CP_PMA_CH0_REG_TX_BIAS_CTRL = 48,
        config string CP_PMA_CH0_REG_TX_RXDET_TIMER_SEL = "12CYCLE",
        config string CP_PMA_CH0_REG_TX_SYNC_OW = "DISABLE",
        config string CP_PMA_CH0_REG_TX_SYNC = "DISABLE",
        config string CP_PMA_CH0_REG_TX_PD_POST = "OFF",
        config string CP_PMA_CH0_REG_TX_PD_POST_OW = "DISABLE",
        config string CP_PMA_CH0_REG_TX_RESET_N_OW = "DISABLE",
        config string CP_PMA_CH0_REG_TX_RESET_N = "TRUE",
        config string CP_PMA_CH0_REG_TX_DCC_RESET_N_OW = "DISABLE",
        config string CP_PMA_CH0_REG_TX_DCC_RESET_N = "TRUE",
        config string CP_PMA_CH0_REG_TX_BUSWIDTH_OW = "DISABLE",
        config string CP_PMA_CH0_REG_TX_BUSWIDTH = "20BIT",
        config string CP_PMA_CH0_REG_PLL_READY_OW = "DISABLE",
        config string CP_PMA_CH0_REG_PLL_READY = "TRUE",
        config string CP_PMA_CH0_REG_TX_PCLK_SW_OW = "DISABLE",
        config string CP_PMA_CH0_REG_TX_PCLK_SW = "TRUE",
        config int CP_PMA_CH0_REG_EI_PCLK_DELAY_SEL = 0,
        config int CP_PMA_CH0_REG_TX_DRV01_DAC0 = 0,
        config int CP_PMA_CH0_REG_TX_DRV01_DAC1 = 10,
        config int CP_PMA_CH0_REG_TX_DRV01_DAC2 = 16,
        config int CP_PMA_CH0_REG_TX_DRV00_DAC0 = 63,
        config int CP_PMA_CH0_REG_TX_DRV00_DAC1 = 53,
        config int CP_PMA_CH0_REG_TX_DRV00_DAC2 = 48,
        config int CP_PMA_CH0_REG_TX_AMP0 = 8,
        config int CP_PMA_CH0_REG_TX_AMP1 = 16,
        config int CP_PMA_CH0_REG_TX_AMP2 = 32,
        config int CP_PMA_CH0_REG_TX_AMP3 = 48,
        config int CP_PMA_CH0_REG_TX_AMP4 = 56,
        config int CP_PMA_CH0_REG_TX_MARGIN = 0,
        config string CP_PMA_CH0_REG_TX_MARGIN_OW = "DISABLE",
        config int CP_PMA_CH0_REG_TX_DEEMP = 0,
        config string CP_PMA_CH0_REG_TX_DEEMP_OW = "DISABLE",
        config string CP_PMA_CH0_REG_TX_SWING = "FALSE",
        config string CP_PMA_CH0_REG_TX_SWING_OW = "DISABLE",
        config string CP_PMA_CH0_REG_TX_RXDET_THRESHOLD = "100MV",
        config int CP_PMA_CH0_REG_TX_BEACON_OSC_CTRL = 4,
        config int CP_PMA_CH0_REG_TX_PREDRV_DAC = 1,
        config int CP_PMA_CH0_REG_TX_PREDRV_CM_CTRL = 1,
        config string CP_PMA_CH0_REG_TX_TX2RX_SLPBACK_EN = "FALSE",
        config string CP_PMA_CH0_REG_TX_PCLK_EDGE_SEL = "POS_EDGE",
        config string CP_PMA_CH0_REG_TX_RXDET_STATUS_OW = "DISABLE",
        config string CP_PMA_CH0_REG_TX_RXDET_STATUS = "TRUE",
        config string CP_PMA_CH0_REG_TX_PRBS_GEN_EN = "FALSE",
        config string CP_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL = "20BIT",
        config string CP_PMA_CH0_REG_TX_PRBS_SEL = "PRBS7",
        config int CP_PMA_CH0_REG_TX_UDP_DATA = 256773,
        config string CP_PMA_CH0_REG_TX_FIFO_RST_N = "FALSE",
        config int CP_PMA_CH0_REG_TX_FIFO_WP_CTRL = 2,
        config string CP_PMA_CH0_REG_TX_FIFO_EN = "FALSE",
        config int CP_PMA_CH0_REG_TX_DATA_MUX_SEL = 0,
        config string CP_PMA_CH0_REG_TX_ERR_INSERT = "FALSE",
        config string CP_PMA_CH0_REG_TX_SATA_EN = "FALSE",
        config string CP_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_OW = "DISABLE",
        config string CP_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON = "ENABLE",
        config int CP_PMA_CH0_REG_TX_PULLUP_DAC0 = 8,
        config int CP_PMA_CH0_REG_TX_PULLUP_DAC1 = 8,
        config int CP_PMA_CH0_REG_TX_PULLUP_DAC2 = 8,
        config int CP_PMA_CH0_REG_TX_PULLUP_DAC3 = 8,
        config int CP_PMA_CH0_REG_TX_OOB_DELAY_SEL = 0,
        config string CP_PMA_CH0_REG_TX_POLARITY = "NORMAL",
        config int CP_PMA_CH0_REG_TX_SLPBK_AMP = 1,
        config string CP_PMA_CH0_REG_TX_LS_MODE_EN = "FALSE",
        config string CP_PMA_CH0_REG_TX_JTAG_MODE_EN_OW = "DISABLE",
        config string CP_PMA_CH0_REG_TX_JTAG_MODE_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_JTAG_MODE_EN_OW = "DISABLE",
        config string CP_PMA_CH0_REG_RX_JTAG_MODE_EN = "FALSE",
        config string CP_PMA_CH0_REG_RX_JTAG_OE = "DISABLE",
        config int CP_PMA_CH0_REG_RX_ACJTAG_VHYSTSE = 0,
        config string CP_PMA_CH0_REG_TX_FBCLK_FAR_EN = "FALSE",
        config int CP_PMA_CH0_REG_RX_TERM_MODE_CTRL = 6,
        config string CP_PMA_CH0_REG_PLPBK_TXPCLK_EN = "TRUE",
        config int CP_PMA_CH0_REG_TX_609_600 = 0,
        config int CP_PMA_CH0_REG_RX_CDR_617_610 = 0,
        config int CP_PMA_CH0_REG_RX_CDR_623_618 = 0,
        config int CP_PMA_CH0_REG_RX_631_624 = 0,
        config int CP_PMA_CH0_REG_RX_639_632 = 0,
        config int CP_PMA_CH0_REG_RX_647_640 = 0,
        config int CP_PMA_CH0_REG_RX_655_648 = 0,
        config int CP_PMA_CH0_REG_RX_659_656 = 0,
        config string CP_PMA_CH0_CFG_LANE_POWERUP = "ON",
        config string CP_PMA_CH0_CFG_PMA_POR_N = "TRUE",
        config string CP_PMA_CH0_CFG_RX_LANE_POWERUP = "ON",
        config string CP_PMA_CH0_CFG_RX_PMA_RSTN = "FALSE",
        config string CP_PMA_CH0_CFG_TX_LANE_POWERUP = "ON",
        config string CP_PMA_CH0_CFG_TX_PMA_RSTN = "TRUE",
        config string CP_PMA_CH0_CFG_CTLE_ADP_RSTN = "TRUE",
        config int CP_PMA_CH0_REG_RESERVED_48_45 = 0,
        config int CP_PMA_CH0_REG_RESERVED_69 = 0,
        config int CP_PMA_CH0_REG_RESERVED_77_76 = 0,
        config int CP_PMA_CH0_REG_RESERVED_171_164 = 0,
        config int CP_PMA_CH0_REG_RESERVED_175_172 = 0,
        config int CP_PMA_CH0_REG_RESERVED_190 = 0,
        config int CP_PMA_CH0_REG_RESERVED_233_232 = 0,
        config int CP_PMA_CH0_REG_RESERVED_235_234 = 0,
        config int CP_PMA_CH0_REG_RESERVED_241_240 = 0,
        config int CP_PMA_CH0_REG_RESERVED_285_283 = 0,
        config int CP_PMA_CH0_REG_RESERVED_286 = 0,
        config int CP_PMA_CH0_REG_RESERVED_295 = 0,
        config int CP_PMA_CH0_REG_RESERVED_298 = 0,
        config int CP_PMA_CH0_REG_RESERVED_332_325 = 0,
        config int CP_PMA_CH0_REG_RESERVED_340_333 = 0,
        config int CP_PMA_CH0_REG_RESERVED_348_341 = 0,
        config int CP_PMA_CH0_REG_RESERVED_354_349 = 0,
        config int CP_PMA_CH0_REG_RESERVED_373 = 0,
        config int CP_PMA_CH0_REG_RESERVED_376 = 0,
        config int CP_PMA_CH0_REG_RESERVED_452 = 0,
        config int CP_PMA_CH0_REG_RESERVED_502_499 = 0,
        config int CP_PMA_CH0_REG_RESERVED_506_505 = 0,
        config int CP_PMA_CH0_REG_RESERVED_550_549 = 0,
        config int CP_PMA_CH0_REG_RESERVED_556_552 = 0,
        config string CP_PMA_CH1_REG_RX_PD = "ON",
        config string CP_PMA_CH1_REG_RX_PD_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_CLKPATH_PD = "ON",
        config string CP_PMA_CH1_REG_RX_CLKPATH_PD_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_DATAPATH_PD = "ON",
        config string CP_PMA_CH1_REG_RX_DATAPATH_PD_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_SIGDET_PD = "ON",
        config string CP_PMA_CH1_REG_RX_SIGDET_PD_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_DCC_RST_N = "TRUE",
        config string CP_PMA_CH1_REG_RX_DCC_RST_N_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_CDR_RST_N = "TRUE",
        config string CP_PMA_CH1_REG_RX_CDR_RST_N_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_SIGDET_RST_N = "TRUE",
        config string CP_PMA_CH1_REG_RX_SIGDET_RST_N_EN = "FALSE",
        config string CP_PMA_CH1_REG_RXPCLK_SLIP = "FALSE",
        config string CP_PMA_CH1_REG_RXPCLK_SLIP_OW = "DISABLE",
        config string CP_PMA_CH1_REG_RX_PCLKSWITCH_RST_N = "TRUE",
        config string CP_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_PCLKSWITCH = "FALSE",
        config string CP_PMA_CH1_REG_RX_PCLKSWITCH_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_HIGHZ = "FALSE",
        config string CP_PMA_CH1_REG_RX_HIGHZ_EN = "FALSE",
        config int CP_PMA_CH1_REG_RX_EQ_C_SET = 8,
        config int CP_PMA_CH1_REG_RX_EQ_R_SET = 8,
        config string CP_PMA_CH1_REG_RX_BUSWIDTH = "20BIT",
        config string CP_PMA_CH1_REG_RX_BUSWIDTH_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_RATE = "DIV1",
        config string CP_PMA_CH1_REG_RX_RATE_EN = "FALSE",
        config int CP_PMA_CH1_REG_RX_RES_TRIM = 51,
        config string CP_PMA_CH1_REG_RX_RES_TRIM_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_EQ_OFF = "FALSE",
        config int CP_PMA_CH1_REG_RX_PREAMP_IC = 1367,
        config string CP_PMA_CH1_REG_RX_PCLK_EDGE_SEL = "POS_EDGE",
        config int CP_PMA_CH1_REG_RX_PIBUF_IC = 2,
        config int CP_PMA_CH1_REG_RX_DCC_IC_RX = 3,
        config int CP_PMA_CH1_REG_RX_DCC_IC_TX = 3,
        config string CP_PMA_CH1_REG_RX_ICTRL_TRX = "100PCT",
        config int CP_PMA_CH1_REG_RX_ICTRL_SIGDET = 5,
        config string CP_PMA_CH1_REG_RX_ICTRL_PREAMP = "100PCT",
        config string CP_PMA_CH1_REG_RX_ICTRL_SLICER = "100PCT",
        config string CP_PMA_CH1_REG_RX_ICTRL_PIBUF = "100PCT",
        config string CP_PMA_CH1_REG_RX_ICTRL_PI = "100PCT",
        config string CP_PMA_CH1_REG_RX_ICTRL_DCC = "100PCT",
        config string CP_PMA_CH1_REG_RX_ICTRL_PREDRV = "100PCT",
        config string CP_PMA_CH1_REG_TX_RATE = "DIV1",
        config string CP_PMA_CH1_REG_TX_RATE_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N = "TRUE",
        config string CP_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_TX2RX_PLPBK_EN = "FALSE",
        config string CP_PMA_CH1_REG_TXCLK_SEL = "PLL",
        config string CP_PMA_CH1_REG_RX_DATA_POLARITY = "NORMAL",
        config string CP_PMA_CH1_REG_RX_ERR_INSERT = "FALSE",
        config string CP_PMA_CH1_REG_UDP_CHK_EN = "FALSE",
        config string CP_PMA_CH1_REG_PRBS_SEL = "PRBS7",
        config string CP_PMA_CH1_REG_PRBS_CHK_EN = "FALSE",
        config string CP_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL = "20BIT",
        config string CP_PMA_CH1_REG_BIST_CHK_PAT_SEL = "PRBS",
        config string CP_PMA_CH1_REG_LOAD_ERR_CNT = "DISABLE",
        config string CP_PMA_CH1_REG_CHK_COUNTER_EN = "FALSE",
        config int CP_PMA_CH1_REG_CDR_PROP_GAIN = 5,
        config int CP_PMA_CH1_REG_CDR_PROP_TURBO_GAIN = 6,
        config int CP_PMA_CH1_REG_CDR_INT_GAIN = 5,
        config int CP_PMA_CH1_REG_CDR_INT_TURBO_GAIN = 6,
        config int CP_PMA_CH1_REG_CDR_INT_SAT_MAX = 992,
        config int CP_PMA_CH1_REG_CDR_INT_SAT_MIN = 32,
        config string CP_PMA_CH1_REG_CDR_INT_RST = "FALSE",
        config string CP_PMA_CH1_REG_CDR_INT_RST_OW = "DISABLE",
        config string CP_PMA_CH1_REG_CDR_PROP_RST = "FALSE",
        config string CP_PMA_CH1_REG_CDR_PROP_RST_OW = "DISABLE",
        config string CP_PMA_CH1_REG_CDR_LOCK_RST = "FALSE",
        config string CP_PMA_CH1_REG_CDR_LOCK_RST_OW = "DISABLE",
        config int CP_PMA_CH1_REG_CDR_RX_PI_FORCE_SEL = 0,
        config int CP_PMA_CH1_REG_CDR_RX_PI_FORCE_D = 0,
        config string CP_PMA_CH1_REG_CDR_LOCK_TIMER = "1_2U",
        config int CP_PMA_CH1_REG_CDR_TURBO_MODE_TIMER = 1,
        config string CP_PMA_CH1_REG_CDR_LOCK_VAL = "FALSE",
        config string CP_PMA_CH1_REG_CDR_LOCK_OW = "DISABLE",
        config string CP_PMA_CH1_REG_CDR_INT_SAT_DET_EN = "TRUE",
        config string CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_EN = "FALSE",
        config string CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_RESET_EN = "FALSE",
        config string CP_PMA_CH1_REG_CDR_PI_CTRL_RST = "FALSE",
        config string CP_PMA_CH1_REG_CDR_PI_CTRL_RST_OW = "DISABLE",
        config string CP_PMA_CH1_REG_CDR_SAT_DET_RST = "FALSE",
        config string CP_PMA_CH1_REG_CDR_SAT_DET_RST_OW = "DISABLE",
        config string CP_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST = "FALSE",
        config string CP_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_OW = "DISABLE",
        config string CP_PMA_CH1_REG_CDR_SIGDET_STATUS_DIS = "FALSE",
        config int CP_PMA_CH1_REG_CDR_SAT_DET_TIMER = 2,
        config string CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_VAL = "FALSE",
        config string CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_OW = "DISABLE",
        config string CP_PMA_CH1_REG_CDR_TURBO_MODE_EN = "TRUE",
        config int CP_PMA_CH1_REG_CDR_STATUS_RADDR_INIT = 0,
        config string CP_PMA_CH1_REG_CDR_STATUS_FIFO_EN = "TRUE",
        config int CP_PMA_CH1_REG_PMA_TEST_SEL = 0,
        config int CP_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN = 3,
        config int CP_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX = 11,
        config int CP_PMA_CH1_REG_OOB_COMINIT_GAP_MIN = 15,
        config int CP_PMA_CH1_REG_OOB_COMINIT_GAP_MAX = 35,
        config int CP_PMA_CH1_REG_RX_PIBUF_IC_TX = 1,
        config int CP_PMA_CH1_REG_COMWAKE_STATUS_CLEAR = 0,
        config int CP_PMA_CH1_REG_COMINIT_STATUS_CLEAR = 0,
        config string CP_PMA_CH1_REG_RX_SYNC_RST_N_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_SYNC_RST_N = "TRUE",
        config string CP_PMA_CH1_REG_RX_SATA_COMINIT_OW = "DISABLE",
        config string CP_PMA_CH1_REG_RX_SATA_COMINIT = "FALSE",
        config string CP_PMA_CH1_REG_RX_SATA_COMWAKE_OW = "DISABLE",
        config string CP_PMA_CH1_REG_RX_SATA_COMWAKE = "FALSE",
        config string CP_PMA_CH1_REG_RX_DCC_DISABLE = "ENABLE",
        config string CP_PMA_CH1_REG_TX_DCC_DISABLE = "ENABLE",
        config string CP_PMA_CH1_REG_RX_SLIP_SEL_EN = "FALSE",
        config int CP_PMA_CH1_REG_RX_SLIP_SEL = 0,
        config string CP_PMA_CH1_REG_RX_SLIP_EN = "FALSE",
        config int CP_PMA_CH1_REG_RX_SIGDET_STATUS_SEL = 5,
        config string CP_PMA_CH1_REG_RX_SIGDET_FSM_RST_N = "TRUE",
        config string CP_PMA_CH1_REG_RX_SIGDET_STATUS_OW = "DISABLE",
        config string CP_PMA_CH1_REG_RX_SIGDET_STATUS = "FALSE",
        config string CP_PMA_CH1_REG_RX_SIGDET_VTH = "50MV",
        config int CP_PMA_CH1_REG_RX_SIGDET_GRM = 0,
        config string CP_PMA_CH1_REG_RX_SIGDET_PULSE_EXT = "DISABLE",
        config int CP_PMA_CH1_REG_RX_SIGDET_CH2_SEL = 0,
        config int CP_PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW = 3,
        config string CP_PMA_CH1_REG_RX_SIGDET_CHK_WINDOW_EN = "TRUE",
        config int CP_PMA_CH1_REG_RX_SIGDET_NOSIG_COUNT_SETTING = 4,
        config int CP_PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL = 0,
        config string CP_PMA_CH1_REG_SLIP_FIFO_INV_EN = "FALSE",
        config string CP_PMA_CH1_REG_SLIP_FIFO_INV = "POS_EDGE",
        config int CP_PMA_CH1_REG_RX_SIGDET_4OOB_DET_SEL = 7,
        config int CP_PMA_CH1_REG_RX_SIGDET_IC_I = 10,
        config string CP_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_OW = "DISABLE",
        config string CP_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N = "FALSE",
        config string CP_PMA_CH1_REG_RX_OOB_DETECTOR_PD_OW = "DISABLE",
        config string CP_PMA_CH1_REG_RX_OOB_DETECTOR_PD = "ON",
        config string CP_PMA_CH1_REG_RX_TERM_CM_CTRL = "5DIV7",
        config string CP_PMA_CH1_REG_TX_PD = "ON",
        config string CP_PMA_CH1_REG_TX_PD_OW = "DISABLE",
        config string CP_PMA_CH1_REG_TX_CLKPATH_PD = "ON",
        config string CP_PMA_CH1_REG_TX_CLKPATH_PD_OW = "DISABLE",
        config int CP_PMA_CH1_REG_TX_BEACON_TIMER_SEL = 0,
        config string CP_PMA_CH1_REG_TX_RXDET_REQ_OW = "DISABLE",
        config string CP_PMA_CH1_REG_TX_RXDET_REQ = "FALSE",
        config string CP_PMA_CH1_REG_TX_BEACON_EN_OW = "DISABLE",
        config string CP_PMA_CH1_REG_TX_BEACON_EN = "FALSE",
        config string CP_PMA_CH1_REG_TX_EI_EN_OW = "DISABLE",
        config string CP_PMA_CH1_REG_TX_EI_EN = "FALSE",
        config string CP_PMA_CH1_REG_TX_RES_CAL_EN = "FALSE",
        config int CP_PMA_CH1_REG_TX_RES_CAL = 51,
        config string CP_PMA_CH1_REG_TX_BIAS_CAL_EN = "FALSE",
        config int CP_PMA_CH1_REG_TX_BIAS_CTRL = 48,
        config string CP_PMA_CH1_REG_TX_RXDET_TIMER_SEL = "12CYCLE",
        config string CP_PMA_CH1_REG_TX_SYNC_OW = "DISABLE",
        config string CP_PMA_CH1_REG_TX_SYNC = "DISABLE",
        config string CP_PMA_CH1_REG_TX_PD_POST = "OFF",
        config string CP_PMA_CH1_REG_TX_PD_POST_OW = "DISABLE",
        config string CP_PMA_CH1_REG_TX_RESET_N_OW = "DISABLE",
        config string CP_PMA_CH1_REG_TX_RESET_N = "TRUE",
        config string CP_PMA_CH1_REG_TX_DCC_RESET_N_OW = "DISABLE",
        config string CP_PMA_CH1_REG_TX_DCC_RESET_N = "TRUE",
        config string CP_PMA_CH1_REG_TX_BUSWIDTH_OW = "DISABLE",
        config string CP_PMA_CH1_REG_TX_BUSWIDTH = "20BIT",
        config string CP_PMA_CH1_REG_PLL_READY_OW = "DISABLE",
        config string CP_PMA_CH1_REG_PLL_READY = "TRUE",
        config string CP_PMA_CH1_REG_TX_PCLK_SW_OW = "DISABLE",
        config string CP_PMA_CH1_REG_TX_PCLK_SW = "TRUE",
        config int CP_PMA_CH1_REG_EI_PCLK_DELAY_SEL = 0,
        config int CP_PMA_CH1_REG_TX_DRV01_DAC0 = 0,
        config int CP_PMA_CH1_REG_TX_DRV01_DAC1 = 10,
        config int CP_PMA_CH1_REG_TX_DRV01_DAC2 = 16,
        config int CP_PMA_CH1_REG_TX_DRV00_DAC0 = 63,
        config int CP_PMA_CH1_REG_TX_DRV00_DAC1 = 53,
        config int CP_PMA_CH1_REG_TX_DRV00_DAC2 = 48,
        config int CP_PMA_CH1_REG_TX_AMP0 = 8,
        config int CP_PMA_CH1_REG_TX_AMP1 = 16,
        config int CP_PMA_CH1_REG_TX_AMP2 = 32,
        config int CP_PMA_CH1_REG_TX_AMP3 = 48,
        config int CP_PMA_CH1_REG_TX_AMP4 = 56,
        config int CP_PMA_CH1_REG_TX_MARGIN = 0,
        config string CP_PMA_CH1_REG_TX_MARGIN_OW = "DISABLE",
        config int CP_PMA_CH1_REG_TX_DEEMP = 0,
        config string CP_PMA_CH1_REG_TX_DEEMP_OW = "DISABLE",
        config string CP_PMA_CH1_REG_TX_SWING = "FALSE",
        config string CP_PMA_CH1_REG_TX_SWING_OW = "DISABLE",
        config string CP_PMA_CH1_REG_TX_RXDET_THRESHOLD = "100MV",
        config int CP_PMA_CH1_REG_TX_BEACON_OSC_CTRL = 4,
        config int CP_PMA_CH1_REG_TX_PREDRV_DAC = 1,
        config int CP_PMA_CH1_REG_TX_PREDRV_CM_CTRL = 1,
        config string CP_PMA_CH1_REG_TX_TX2RX_SLPBACK_EN = "FALSE",
        config string CP_PMA_CH1_REG_TX_PCLK_EDGE_SEL = "POS_EDGE",
        config string CP_PMA_CH1_REG_TX_RXDET_STATUS_OW = "DISABLE",
        config string CP_PMA_CH1_REG_TX_RXDET_STATUS = "TRUE",
        config string CP_PMA_CH1_REG_TX_PRBS_GEN_EN = "FALSE",
        config string CP_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL = "20BIT",
        config string CP_PMA_CH1_REG_TX_PRBS_SEL = "PRBS7",
        config int CP_PMA_CH1_REG_TX_UDP_DATA = 256773,
        config string CP_PMA_CH1_REG_TX_FIFO_RST_N = "FALSE",
        config int CP_PMA_CH1_REG_TX_FIFO_WP_CTRL = 2,
        config string CP_PMA_CH1_REG_TX_FIFO_EN = "FALSE",
        config int CP_PMA_CH1_REG_TX_DATA_MUX_SEL = 0,
        config string CP_PMA_CH1_REG_TX_ERR_INSERT = "FALSE",
        config string CP_PMA_CH1_REG_TX_SATA_EN = "FALSE",
        config string CP_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_OW = "DISABLE",
        config string CP_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON = "ENABLE",
        config int CP_PMA_CH1_REG_TX_PULLUP_DAC0 = 8,
        config int CP_PMA_CH1_REG_TX_PULLUP_DAC1 = 8,
        config int CP_PMA_CH1_REG_TX_PULLUP_DAC2 = 8,
        config int CP_PMA_CH1_REG_TX_PULLUP_DAC3 = 8,
        config int CP_PMA_CH1_REG_TX_OOB_DELAY_SEL = 0,
        config string CP_PMA_CH1_REG_TX_POLARITY = "NORMAL",
        config int CP_PMA_CH1_REG_TX_SLPBK_AMP = 1,
        config string CP_PMA_CH1_REG_TX_LS_MODE_EN = "FALSE",
        config string CP_PMA_CH1_REG_TX_JTAG_MODE_EN_OW = "DISABLE",
        config string CP_PMA_CH1_REG_TX_JTAG_MODE_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_JTAG_MODE_EN_OW = "DISABLE",
        config string CP_PMA_CH1_REG_RX_JTAG_MODE_EN = "FALSE",
        config string CP_PMA_CH1_REG_RX_JTAG_OE = "DISABLE",
        config int CP_PMA_CH1_REG_RX_ACJTAG_VHYSTSE = 0,
        config string CP_PMA_CH1_REG_TX_FBCLK_FAR_EN = "FALSE",
        config int CP_PMA_CH1_REG_RX_TERM_MODE_CTRL = 6,
        config string CP_PMA_CH1_REG_PLPBK_TXPCLK_EN = "TRUE",
        config int CP_PMA_CH1_REG_TX_609_600 = 0,
        config int CP_PMA_CH1_REG_RX_CDR_617_610 = 0,
        config int CP_PMA_CH1_REG_RX_CDR_623_618 = 0,
        config int CP_PMA_CH1_REG_RX_631_624 = 0,
        config int CP_PMA_CH1_REG_RX_639_632 = 0,
        config int CP_PMA_CH1_REG_RX_647_640 = 0,
        config int CP_PMA_CH1_REG_RX_655_648 = 0,
        config int CP_PMA_CH1_REG_RX_659_656 = 0,
        config string CP_PMA_CH1_CFG_LANE_POWERUP = "ON",
        config string CP_PMA_CH1_CFG_PMA_POR_N = "TRUE",
        config string CP_PMA_CH1_CFG_RX_LANE_POWERUP = "ON",
        config string CP_PMA_CH1_CFG_RX_PMA_RSTN = "TRUE",
        config string CP_PMA_CH1_CFG_TX_LANE_POWERUP = "ON",
        config string CP_PMA_CH1_CFG_TX_PMA_RSTN = "TRUE",
        config string CP_PMA_CH1_CFG_CTLE_ADP_RSTN = "TRUE",
        config int CP_PMA_CH1_REG_RESERVED_48_45 = 0,
        config int CP_PMA_CH1_REG_RESERVED_69 = 0,
        config int CP_PMA_CH1_REG_RESERVED_77_76 = 0,
        config int CP_PMA_CH1_REG_RESERVED_171_164 = 0,
        config int CP_PMA_CH1_REG_RESERVED_175_172 = 0,
        config int CP_PMA_CH1_REG_RESERVED_190 = 0,
        config int CP_PMA_CH1_REG_RESERVED_233_232 = 0,
        config int CP_PMA_CH1_REG_RESERVED_235_234 = 0,
        config int CP_PMA_CH1_REG_RESERVED_241_240 = 0,
        config int CP_PMA_CH1_REG_RESERVED_285_283 = 0,
        config int CP_PMA_CH1_REG_RESERVED_286 = 0,
        config int CP_PMA_CH1_REG_RESERVED_295 = 0,
        config int CP_PMA_CH1_REG_RESERVED_298 = 0,
        config int CP_PMA_CH1_REG_RESERVED_332_325 = 0,
        config int CP_PMA_CH1_REG_RESERVED_340_333 = 0,
        config int CP_PMA_CH1_REG_RESERVED_348_341 = 0,
        config int CP_PMA_CH1_REG_RESERVED_354_349 = 0,
        config int CP_PMA_CH1_REG_RESERVED_373 = 0,
        config int CP_PMA_CH1_REG_RESERVED_376 = 0,
        config int CP_PMA_CH1_REG_RESERVED_452 = 0,
        config int CP_PMA_CH1_REG_RESERVED_502_499 = 0,
        config int CP_PMA_CH1_REG_RESERVED_506_505 = 0,
        config int CP_PMA_CH1_REG_RESERVED_550_549 = 0,
        config int CP_PMA_CH1_REG_RESERVED_556_552 = 0,
        config string CP_PMA_CH2_REG_RX_PD = "ON",
        config string CP_PMA_CH2_REG_RX_PD_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_CLKPATH_PD = "ON",
        config string CP_PMA_CH2_REG_RX_CLKPATH_PD_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_DATAPATH_PD = "ON",
        config string CP_PMA_CH2_REG_RX_DATAPATH_PD_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_SIGDET_PD = "ON",
        config string CP_PMA_CH2_REG_RX_SIGDET_PD_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_DCC_RST_N = "TRUE",
        config string CP_PMA_CH2_REG_RX_DCC_RST_N_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_CDR_RST_N = "TRUE",
        config string CP_PMA_CH2_REG_RX_CDR_RST_N_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_SIGDET_RST_N = "TRUE",
        config string CP_PMA_CH2_REG_RX_SIGDET_RST_N_EN = "FALSE",
        config string CP_PMA_CH2_REG_RXPCLK_SLIP = "FALSE",
        config string CP_PMA_CH2_REG_RXPCLK_SLIP_OW = "DISABLE",
        config string CP_PMA_CH2_REG_RX_PCLKSWITCH_RST_N = "TRUE",
        config string CP_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_PCLKSWITCH = "FALSE",
        config string CP_PMA_CH2_REG_RX_PCLKSWITCH_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_HIGHZ = "FALSE",
        config string CP_PMA_CH2_REG_RX_HIGHZ_EN = "FALSE",
        config int CP_PMA_CH2_REG_RX_EQ_C_SET = 8,
        config int CP_PMA_CH2_REG_RX_EQ_R_SET = 8,
        config string CP_PMA_CH2_REG_RX_BUSWIDTH = "20BIT",
        config string CP_PMA_CH2_REG_RX_BUSWIDTH_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_RATE = "DIV1",
        config string CP_PMA_CH2_REG_RX_RATE_EN = "FALSE",
        config int CP_PMA_CH2_REG_RX_RES_TRIM = 51,
        config string CP_PMA_CH2_REG_RX_RES_TRIM_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_EQ_OFF = "FALSE",
        config int CP_PMA_CH2_REG_RX_PREAMP_IC = 1367,
        config string CP_PMA_CH2_REG_RX_PCLK_EDGE_SEL = "POS_EDGE",
        config int CP_PMA_CH2_REG_RX_PIBUF_IC = 2,
        config int CP_PMA_CH2_REG_RX_DCC_IC_RX = 3,
        config int CP_PMA_CH2_REG_RX_DCC_IC_TX = 3,
        config string CP_PMA_CH2_REG_RX_ICTRL_TRX = "100PCT",
        config int CP_PMA_CH2_REG_RX_ICTRL_SIGDET = 5,
        config string CP_PMA_CH2_REG_RX_ICTRL_PREAMP = "100PCT",
        config string CP_PMA_CH2_REG_RX_ICTRL_SLICER = "100PCT",
        config string CP_PMA_CH2_REG_RX_ICTRL_PIBUF = "100PCT",
        config string CP_PMA_CH2_REG_RX_ICTRL_PI = "100PCT",
        config string CP_PMA_CH2_REG_RX_ICTRL_DCC = "100PCT",
        config string CP_PMA_CH2_REG_RX_ICTRL_PREDRV = "100PCT",
        config string CP_PMA_CH2_REG_TX_RATE = "DIV1",
        config string CP_PMA_CH2_REG_TX_RATE_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N = "TRUE",
        config string CP_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_TX2RX_PLPBK_EN = "FALSE",
        config string CP_PMA_CH2_REG_TXCLK_SEL = "PLL",
        config string CP_PMA_CH2_REG_RX_DATA_POLARITY = "NORMAL",
        config string CP_PMA_CH2_REG_RX_ERR_INSERT = "FALSE",
        config string CP_PMA_CH2_REG_UDP_CHK_EN = "FALSE",
        config string CP_PMA_CH2_REG_PRBS_SEL = "PRBS7",
        config string CP_PMA_CH2_REG_PRBS_CHK_EN = "FALSE",
        config string CP_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL = "20BIT",
        config string CP_PMA_CH2_REG_BIST_CHK_PAT_SEL = "PRBS",
        config string CP_PMA_CH2_REG_LOAD_ERR_CNT = "DISABLE",
        config string CP_PMA_CH2_REG_CHK_COUNTER_EN = "FALSE",
        config int CP_PMA_CH2_REG_CDR_PROP_GAIN = 5,
        config int CP_PMA_CH2_REG_CDR_PROP_TURBO_GAIN = 6,
        config int CP_PMA_CH2_REG_CDR_INT_GAIN = 5,
        config int CP_PMA_CH2_REG_CDR_INT_TURBO_GAIN = 6,
        config int CP_PMA_CH2_REG_CDR_INT_SAT_MAX = 992,
        config int CP_PMA_CH2_REG_CDR_INT_SAT_MIN = 32,
        config string CP_PMA_CH2_REG_CDR_INT_RST = "FALSE",
        config string CP_PMA_CH2_REG_CDR_INT_RST_OW = "DISABLE",
        config string CP_PMA_CH2_REG_CDR_PROP_RST = "FALSE",
        config string CP_PMA_CH2_REG_CDR_PROP_RST_OW = "DISABLE",
        config string CP_PMA_CH2_REG_CDR_LOCK_RST = "FALSE",
        config string CP_PMA_CH2_REG_CDR_LOCK_RST_OW = "DISABLE",
        config int CP_PMA_CH2_REG_CDR_RX_PI_FORCE_SEL = 0,
        config int CP_PMA_CH2_REG_CDR_RX_PI_FORCE_D = 0,
        config string CP_PMA_CH2_REG_CDR_LOCK_TIMER = "1_2U",
        config int CP_PMA_CH2_REG_CDR_TURBO_MODE_TIMER = 1,
        config string CP_PMA_CH2_REG_CDR_LOCK_VAL = "FALSE",
        config string CP_PMA_CH2_REG_CDR_LOCK_OW = "DISABLE",
        config string CP_PMA_CH2_REG_CDR_INT_SAT_DET_EN = "TRUE",
        config string CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_EN = "FALSE",
        config string CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_RESET_EN = "FALSE",
        config string CP_PMA_CH2_REG_CDR_PI_CTRL_RST = "FALSE",
        config string CP_PMA_CH2_REG_CDR_PI_CTRL_RST_OW = "DISABLE",
        config string CP_PMA_CH2_REG_CDR_SAT_DET_RST = "FALSE",
        config string CP_PMA_CH2_REG_CDR_SAT_DET_RST_OW = "DISABLE",
        config string CP_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST = "FALSE",
        config string CP_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_OW = "DISABLE",
        config string CP_PMA_CH2_REG_CDR_SIGDET_STATUS_DIS = "FALSE",
        config int CP_PMA_CH2_REG_CDR_SAT_DET_TIMER = 2,
        config string CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_VAL = "FALSE",
        config string CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_OW = "DISABLE",
        config string CP_PMA_CH2_REG_CDR_TURBO_MODE_EN = "TRUE",
        config int CP_PMA_CH2_REG_CDR_STATUS_RADDR_INIT = 0,
        config string CP_PMA_CH2_REG_CDR_STATUS_FIFO_EN = "TRUE",
        config int CP_PMA_CH2_REG_PMA_TEST_SEL = 0,
        config int CP_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN = 3,
        config int CP_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX = 11,
        config int CP_PMA_CH2_REG_OOB_COMINIT_GAP_MIN = 15,
        config int CP_PMA_CH2_REG_OOB_COMINIT_GAP_MAX = 35,
        config int CP_PMA_CH2_REG_RX_PIBUF_IC_TX = 1,
        config int CP_PMA_CH2_REG_COMWAKE_STATUS_CLEAR = 0,
        config int CP_PMA_CH2_REG_COMINIT_STATUS_CLEAR = 0,
        config string CP_PMA_CH2_REG_RX_SYNC_RST_N_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_SYNC_RST_N = "TRUE",
        config string CP_PMA_CH2_REG_RX_SATA_COMINIT_OW = "DISABLE",
        config string CP_PMA_CH2_REG_RX_SATA_COMINIT = "FALSE",
        config string CP_PMA_CH2_REG_RX_SATA_COMWAKE_OW = "DISABLE",
        config string CP_PMA_CH2_REG_RX_SATA_COMWAKE = "FALSE",
        config string CP_PMA_CH2_REG_RX_DCC_DISABLE = "ENABLE",
        config string CP_PMA_CH2_REG_TX_DCC_DISABLE = "ENABLE",
        config string CP_PMA_CH2_REG_RX_SLIP_SEL_EN = "FALSE",
        config int CP_PMA_CH2_REG_RX_SLIP_SEL = 0,
        config string CP_PMA_CH2_REG_RX_SLIP_EN = "FALSE",
        config int CP_PMA_CH2_REG_RX_SIGDET_STATUS_SEL = 5,
        config string CP_PMA_CH2_REG_RX_SIGDET_FSM_RST_N = "TRUE",
        config string CP_PMA_CH2_REG_RX_SIGDET_STATUS_OW = "DISABLE",
        config string CP_PMA_CH2_REG_RX_SIGDET_STATUS = "FALSE",
        config string CP_PMA_CH2_REG_RX_SIGDET_VTH = "50MV",
        config int CP_PMA_CH2_REG_RX_SIGDET_GRM = 0,
        config string CP_PMA_CH2_REG_RX_SIGDET_PULSE_EXT = "DISABLE",
        config int CP_PMA_CH2_REG_RX_SIGDET_CH2_SEL = 0,
        config int CP_PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW = 3,
        config string CP_PMA_CH2_REG_RX_SIGDET_CHK_WINDOW_EN = "TRUE",
        config int CP_PMA_CH2_REG_RX_SIGDET_NOSIG_COUNT_SETTING = 4,
        config int CP_PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL = 0,
        config string CP_PMA_CH2_REG_SLIP_FIFO_INV_EN = "FALSE",
        config string CP_PMA_CH2_REG_SLIP_FIFO_INV = "POS_EDGE",
        config int CP_PMA_CH2_REG_RX_SIGDET_4OOB_DET_SEL = 7,
        config int CP_PMA_CH2_REG_RX_SIGDET_IC_I = 10,
        config string CP_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_OW = "DISABLE",
        config string CP_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N = "FALSE",
        config string CP_PMA_CH2_REG_RX_OOB_DETECTOR_PD_OW = "DISABLE",
        config string CP_PMA_CH2_REG_RX_OOB_DETECTOR_PD = "ON",
        config string CP_PMA_CH2_REG_RX_TERM_CM_CTRL = "5DIV7",
        config string CP_PMA_CH2_REG_TX_PD = "ON",
        config string CP_PMA_CH2_REG_TX_PD_OW = "DISABLE",
        config string CP_PMA_CH2_REG_TX_CLKPATH_PD = "ON",
        config string CP_PMA_CH2_REG_TX_CLKPATH_PD_OW = "DISABLE",
        config int CP_PMA_CH2_REG_TX_BEACON_TIMER_SEL = 0,
        config string CP_PMA_CH2_REG_TX_RXDET_REQ_OW = "DISABLE",
        config string CP_PMA_CH2_REG_TX_RXDET_REQ = "FALSE",
        config string CP_PMA_CH2_REG_TX_BEACON_EN_OW = "DISABLE",
        config string CP_PMA_CH2_REG_TX_BEACON_EN = "FALSE",
        config string CP_PMA_CH2_REG_TX_EI_EN_OW = "DISABLE",
        config string CP_PMA_CH2_REG_TX_EI_EN = "FALSE",
        config string CP_PMA_CH2_REG_TX_RES_CAL_EN = "FALSE",
        config int CP_PMA_CH2_REG_TX_RES_CAL = 51,
        config string CP_PMA_CH2_REG_TX_BIAS_CAL_EN = "FALSE",
        config int CP_PMA_CH2_REG_TX_BIAS_CTRL = 48,
        config string CP_PMA_CH2_REG_TX_RXDET_TIMER_SEL = "12CYCLE",
        config string CP_PMA_CH2_REG_TX_SYNC_OW = "DISABLE",
        config string CP_PMA_CH2_REG_TX_SYNC = "DISABLE",
        config string CP_PMA_CH2_REG_TX_PD_POST = "OFF",
        config string CP_PMA_CH2_REG_TX_PD_POST_OW = "DISABLE",
        config string CP_PMA_CH2_REG_TX_RESET_N_OW = "DISABLE",
        config string CP_PMA_CH2_REG_TX_RESET_N = "TRUE",
        config string CP_PMA_CH2_REG_TX_DCC_RESET_N_OW = "DISABLE",
        config string CP_PMA_CH2_REG_TX_DCC_RESET_N = "TRUE",
        config string CP_PMA_CH2_REG_TX_BUSWIDTH_OW = "DISABLE",
        config string CP_PMA_CH2_REG_TX_BUSWIDTH = "20BIT",
        config string CP_PMA_CH2_REG_PLL_READY_OW = "DISABLE",
        config string CP_PMA_CH2_REG_PLL_READY = "TRUE",
        config string CP_PMA_CH2_REG_TX_PCLK_SW_OW = "DISABLE",
        config string CP_PMA_CH2_REG_TX_PCLK_SW = "TRUE",
        config int CP_PMA_CH2_REG_EI_PCLK_DELAY_SEL = 0,
        config int CP_PMA_CH2_REG_TX_DRV01_DAC0 = 0,
        config int CP_PMA_CH2_REG_TX_DRV01_DAC1 = 10,
        config int CP_PMA_CH2_REG_TX_DRV01_DAC2 = 16,
        config int CP_PMA_CH2_REG_TX_DRV00_DAC0 = 63,
        config int CP_PMA_CH2_REG_TX_DRV00_DAC1 = 53,
        config int CP_PMA_CH2_REG_TX_DRV00_DAC2 = 48,
        config int CP_PMA_CH2_REG_TX_AMP0 = 8,
        config int CP_PMA_CH2_REG_TX_AMP1 = 16,
        config int CP_PMA_CH2_REG_TX_AMP2 = 32,
        config int CP_PMA_CH2_REG_TX_AMP3 = 48,
        config int CP_PMA_CH2_REG_TX_AMP4 = 56,
        config int CP_PMA_CH2_REG_TX_MARGIN = 0,
        config string CP_PMA_CH2_REG_TX_MARGIN_OW = "DISABLE",
        config int CP_PMA_CH2_REG_TX_DEEMP = 0,
        config string CP_PMA_CH2_REG_TX_DEEMP_OW = "DISABLE",
        config string CP_PMA_CH2_REG_TX_SWING = "FALSE",
        config string CP_PMA_CH2_REG_TX_SWING_OW = "DISABLE",
        config string CP_PMA_CH2_REG_TX_RXDET_THRESHOLD = "100MV",
        config int CP_PMA_CH2_REG_TX_BEACON_OSC_CTRL = 4,
        config int CP_PMA_CH2_REG_TX_PREDRV_DAC = 1,
        config int CP_PMA_CH2_REG_TX_PREDRV_CM_CTRL = 1,
        config string CP_PMA_CH2_REG_TX_TX2RX_SLPBACK_EN = "FALSE",
        config string CP_PMA_CH2_REG_TX_PCLK_EDGE_SEL = "POS_EDGE",
        config string CP_PMA_CH2_REG_TX_RXDET_STATUS_OW = "DISABLE",
        config string CP_PMA_CH2_REG_TX_RXDET_STATUS = "TRUE",
        config string CP_PMA_CH2_REG_TX_PRBS_GEN_EN = "FALSE",
        config string CP_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL = "20BIT",
        config string CP_PMA_CH2_REG_TX_PRBS_SEL = "PRBS7",
        config int CP_PMA_CH2_REG_TX_UDP_DATA = 256773,
        config string CP_PMA_CH2_REG_TX_FIFO_RST_N = "FALSE",
        config int CP_PMA_CH2_REG_TX_FIFO_WP_CTRL = 2,
        config string CP_PMA_CH2_REG_TX_FIFO_EN = "FALSE",
        config int CP_PMA_CH2_REG_TX_DATA_MUX_SEL = 0,
        config string CP_PMA_CH2_REG_TX_ERR_INSERT = "FALSE",
        config string CP_PMA_CH2_REG_TX_SATA_EN = "FALSE",
        config string CP_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_OW = "DISABLE",
        config string CP_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON = "ENABLE",
        config int CP_PMA_CH2_REG_TX_PULLUP_DAC0 = 8,
        config int CP_PMA_CH2_REG_TX_PULLUP_DAC1 = 8,
        config int CP_PMA_CH2_REG_TX_PULLUP_DAC2 = 8,
        config int CP_PMA_CH2_REG_TX_PULLUP_DAC3 = 8,
        config int CP_PMA_CH2_REG_TX_OOB_DELAY_SEL = 0,
        config string CP_PMA_CH2_REG_TX_POLARITY = "NORMAL",
        config int CP_PMA_CH2_REG_TX_SLPBK_AMP = 1,
        config string CP_PMA_CH2_REG_TX_LS_MODE_EN = "FALSE",
        config string CP_PMA_CH2_REG_TX_JTAG_MODE_EN_OW = "DISABLE",
        config string CP_PMA_CH2_REG_TX_JTAG_MODE_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_JTAG_MODE_EN_OW = "DISABLE",
        config string CP_PMA_CH2_REG_RX_JTAG_MODE_EN = "FALSE",
        config string CP_PMA_CH2_REG_RX_JTAG_OE = "DISABLE",
        config int CP_PMA_CH2_REG_RX_ACJTAG_VHYSTSE = 0,
        config string CP_PMA_CH2_REG_TX_FBCLK_FAR_EN = "FALSE",
        config int CP_PMA_CH2_REG_RX_TERM_MODE_CTRL = 6,
        config string CP_PMA_CH2_REG_PLPBK_TXPCLK_EN = "TRUE",
        config int CP_PMA_CH2_REG_TX_609_600 = 0,
        config int CP_PMA_CH2_REG_RX_CDR_617_610 = 0,
        config int CP_PMA_CH2_REG_RX_CDR_623_618 = 0,
        config int CP_PMA_CH2_REG_RX_631_624 = 0,
        config int CP_PMA_CH2_REG_RX_639_632 = 0,
        config int CP_PMA_CH2_REG_RX_647_640 = 0,
        config int CP_PMA_CH2_REG_RX_655_648 = 0,
        config int CP_PMA_CH2_REG_RX_659_656 = 0,
        config string CP_PMA_CH2_CFG_LANE_POWERUP = "ON",
        config string CP_PMA_CH2_CFG_PMA_POR_N = "TRUE",
        config string CP_PMA_CH2_CFG_RX_LANE_POWERUP = "ON",
        config string CP_PMA_CH2_CFG_RX_PMA_RSTN = "TRUE",
        config string CP_PMA_CH2_CFG_TX_LANE_POWERUP = "ON",
        config string CP_PMA_CH2_CFG_TX_PMA_RSTN = "TRUE",
        config string CP_PMA_CH2_CFG_CTLE_ADP_RSTN = "TRUE",
        config int CP_PMA_CH2_REG_RESERVED_48_45 = 0,
        config int CP_PMA_CH2_REG_RESERVED_69 = 0,
        config int CP_PMA_CH2_REG_RESERVED_77_76 = 0,
        config int CP_PMA_CH2_REG_RESERVED_171_164 = 0,
        config int CP_PMA_CH2_REG_RESERVED_175_172 = 0,
        config int CP_PMA_CH2_REG_RESERVED_190 = 0,
        config int CP_PMA_CH2_REG_RESERVED_233_232 = 0,
        config int CP_PMA_CH2_REG_RESERVED_235_234 = 0,
        config int CP_PMA_CH2_REG_RESERVED_241_240 = 0,
        config int CP_PMA_CH2_REG_RESERVED_285_283 = 0,
        config int CP_PMA_CH2_REG_RESERVED_286 = 0,
        config int CP_PMA_CH2_REG_RESERVED_295 = 0,
        config int CP_PMA_CH2_REG_RESERVED_298 = 0,
        config int CP_PMA_CH2_REG_RESERVED_332_325 = 0,
        config int CP_PMA_CH2_REG_RESERVED_340_333 = 0,
        config int CP_PMA_CH2_REG_RESERVED_348_341 = 0,
        config int CP_PMA_CH2_REG_RESERVED_354_349 = 0,
        config int CP_PMA_CH2_REG_RESERVED_373 = 0,
        config int CP_PMA_CH2_REG_RESERVED_376 = 0,
        config int CP_PMA_CH2_REG_RESERVED_452 = 0,
        config int CP_PMA_CH2_REG_RESERVED_502_499 = 0,
        config int CP_PMA_CH2_REG_RESERVED_506_505 = 0,
        config int CP_PMA_CH2_REG_RESERVED_550_549 = 0,
        config int CP_PMA_CH2_REG_RESERVED_556_552 = 0,
        config string CP_PMA_CH3_REG_RX_PD = "ON",
        config string CP_PMA_CH3_REG_RX_PD_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_CLKPATH_PD = "ON",
        config string CP_PMA_CH3_REG_RX_CLKPATH_PD_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_DATAPATH_PD = "ON",
        config string CP_PMA_CH3_REG_RX_DATAPATH_PD_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_SIGDET_PD = "ON",
        config string CP_PMA_CH3_REG_RX_SIGDET_PD_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_DCC_RST_N = "TRUE",
        config string CP_PMA_CH3_REG_RX_DCC_RST_N_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_CDR_RST_N = "TRUE",
        config string CP_PMA_CH3_REG_RX_CDR_RST_N_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_SIGDET_RST_N = "TRUE",
        config string CP_PMA_CH3_REG_RX_SIGDET_RST_N_EN = "FALSE",
        config string CP_PMA_CH3_REG_RXPCLK_SLIP = "FALSE",
        config string CP_PMA_CH3_REG_RXPCLK_SLIP_OW = "DISABLE",
        config string CP_PMA_CH3_REG_RX_PCLKSWITCH_RST_N = "TRUE",
        config string CP_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_PCLKSWITCH = "FALSE",
        config string CP_PMA_CH3_REG_RX_PCLKSWITCH_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_HIGHZ = "FALSE",
        config string CP_PMA_CH3_REG_RX_HIGHZ_EN = "FALSE",
        config int CP_PMA_CH3_REG_RX_EQ_C_SET = 8,
        config int CP_PMA_CH3_REG_RX_EQ_R_SET = 8,
        config string CP_PMA_CH3_REG_RX_BUSWIDTH = "20BIT",
        config string CP_PMA_CH3_REG_RX_BUSWIDTH_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_RATE = "DIV1",
        config string CP_PMA_CH3_REG_RX_RATE_EN = "FALSE",
        config int CP_PMA_CH3_REG_RX_RES_TRIM = 51,
        config string CP_PMA_CH3_REG_RX_RES_TRIM_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_EQ_OFF = "FALSE",
        config int CP_PMA_CH3_REG_RX_PREAMP_IC = 1367,
        config string CP_PMA_CH3_REG_RX_PCLK_EDGE_SEL = "POS_EDGE",
        config int CP_PMA_CH3_REG_RX_PIBUF_IC = 2,
        config int CP_PMA_CH3_REG_RX_DCC_IC_RX = 3,
        config int CP_PMA_CH3_REG_RX_DCC_IC_TX = 3,
        config string CP_PMA_CH3_REG_RX_ICTRL_TRX = "100PCT",
        config int CP_PMA_CH3_REG_RX_ICTRL_SIGDET = 5,
        config string CP_PMA_CH3_REG_RX_ICTRL_PREAMP = "100PCT",
        config string CP_PMA_CH3_REG_RX_ICTRL_SLICER = "100PCT",
        config string CP_PMA_CH3_REG_RX_ICTRL_PIBUF = "100PCT",
        config string CP_PMA_CH3_REG_RX_ICTRL_PI = "100PCT",
        config string CP_PMA_CH3_REG_RX_ICTRL_DCC = "100PCT",
        config string CP_PMA_CH3_REG_RX_ICTRL_PREDRV = "100PCT",
        config string CP_PMA_CH3_REG_TX_RATE = "DIV1",
        config string CP_PMA_CH3_REG_TX_RATE_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N = "TRUE",
        config string CP_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_TX2RX_PLPBK_EN = "FALSE",
        config string CP_PMA_CH3_REG_TXCLK_SEL = "PLL",
        config string CP_PMA_CH3_REG_RX_DATA_POLARITY = "NORMAL",
        config string CP_PMA_CH3_REG_RX_ERR_INSERT = "FALSE",
        config string CP_PMA_CH3_REG_UDP_CHK_EN = "FALSE",
        config string CP_PMA_CH3_REG_PRBS_SEL = "PRBS7",
        config string CP_PMA_CH3_REG_PRBS_CHK_EN = "FALSE",
        config string CP_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL = "20BIT",
        config string CP_PMA_CH3_REG_BIST_CHK_PAT_SEL = "PRBS",
        config string CP_PMA_CH3_REG_LOAD_ERR_CNT = "DISABLE",
        config string CP_PMA_CH3_REG_CHK_COUNTER_EN = "FALSE",
        config int CP_PMA_CH3_REG_CDR_PROP_GAIN = 5,
        config int CP_PMA_CH3_REG_CDR_PROP_TURBO_GAIN = 6,
        config int CP_PMA_CH3_REG_CDR_INT_GAIN = 5,
        config int CP_PMA_CH3_REG_CDR_INT_TURBO_GAIN = 6,
        config int CP_PMA_CH3_REG_CDR_INT_SAT_MAX = 992,
        config int CP_PMA_CH3_REG_CDR_INT_SAT_MIN = 32,
        config string CP_PMA_CH3_REG_CDR_INT_RST = "FALSE",
        config string CP_PMA_CH3_REG_CDR_INT_RST_OW = "DISABLE",
        config string CP_PMA_CH3_REG_CDR_PROP_RST = "FALSE",
        config string CP_PMA_CH3_REG_CDR_PROP_RST_OW = "DISABLE",
        config string CP_PMA_CH3_REG_CDR_LOCK_RST = "FALSE",
        config string CP_PMA_CH3_REG_CDR_LOCK_RST_OW = "DISABLE",
        config int CP_PMA_CH3_REG_CDR_RX_PI_FORCE_SEL = 0,
        config int CP_PMA_CH3_REG_CDR_RX_PI_FORCE_D = 0,
        config string CP_PMA_CH3_REG_CDR_LOCK_TIMER = "1_2U",
        config int CP_PMA_CH3_REG_CDR_TURBO_MODE_TIMER = 1,
        config string CP_PMA_CH3_REG_CDR_LOCK_VAL = "FALSE",
        config string CP_PMA_CH3_REG_CDR_LOCK_OW = "DISABLE",
        config string CP_PMA_CH3_REG_CDR_INT_SAT_DET_EN = "TRUE",
        config string CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_EN = "FALSE",
        config string CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_RESET_EN = "FALSE",
        config string CP_PMA_CH3_REG_CDR_PI_CTRL_RST = "FALSE",
        config string CP_PMA_CH3_REG_CDR_PI_CTRL_RST_OW = "DISABLE",
        config string CP_PMA_CH3_REG_CDR_SAT_DET_RST = "FALSE",
        config string CP_PMA_CH3_REG_CDR_SAT_DET_RST_OW = "DISABLE",
        config string CP_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST = "FALSE",
        config string CP_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_OW = "DISABLE",
        config string CP_PMA_CH3_REG_CDR_SIGDET_STATUS_DIS = "FALSE",
        config int CP_PMA_CH3_REG_CDR_SAT_DET_TIMER = 2,
        config string CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_VAL = "FALSE",
        config string CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_OW = "DISABLE",
        config string CP_PMA_CH3_REG_CDR_TURBO_MODE_EN = "TRUE",
        config int CP_PMA_CH3_REG_CDR_STATUS_RADDR_INIT = 0,
        config string CP_PMA_CH3_REG_CDR_STATUS_FIFO_EN = "TRUE",
        config int CP_PMA_CH3_REG_PMA_TEST_SEL = 0,
        config int CP_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN = 3,
        config int CP_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX = 11,
        config int CP_PMA_CH3_REG_OOB_COMINIT_GAP_MIN = 15,
        config int CP_PMA_CH3_REG_OOB_COMINIT_GAP_MAX = 35,
        config int CP_PMA_CH3_REG_RX_PIBUF_IC_TX = 1,
        config int CP_PMA_CH3_REG_COMWAKE_STATUS_CLEAR = 0,
        config int CP_PMA_CH3_REG_COMINIT_STATUS_CLEAR = 0,
        config string CP_PMA_CH3_REG_RX_SYNC_RST_N_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_SYNC_RST_N = "TRUE",
        config string CP_PMA_CH3_REG_RX_SATA_COMINIT_OW = "DISABLE",
        config string CP_PMA_CH3_REG_RX_SATA_COMINIT = "FALSE",
        config string CP_PMA_CH3_REG_RX_SATA_COMWAKE_OW = "DISABLE",
        config string CP_PMA_CH3_REG_RX_SATA_COMWAKE = "FALSE",
        config string CP_PMA_CH3_REG_RX_DCC_DISABLE = "ENABLE",
        config string CP_PMA_CH3_REG_TX_DCC_DISABLE = "ENABLE",
        config string CP_PMA_CH3_REG_RX_SLIP_SEL_EN = "FALSE",
        config int CP_PMA_CH3_REG_RX_SLIP_SEL = 0,
        config string CP_PMA_CH3_REG_RX_SLIP_EN = "FALSE",
        config int CP_PMA_CH3_REG_RX_SIGDET_STATUS_SEL = 5,
        config string CP_PMA_CH3_REG_RX_SIGDET_FSM_RST_N = "TRUE",
        config string CP_PMA_CH3_REG_RX_SIGDET_STATUS_OW = "DISABLE",
        config string CP_PMA_CH3_REG_RX_SIGDET_STATUS = "FALSE",
        config string CP_PMA_CH3_REG_RX_SIGDET_VTH = "50MV",
        config int CP_PMA_CH3_REG_RX_SIGDET_GRM = 0,
        config string CP_PMA_CH3_REG_RX_SIGDET_PULSE_EXT = "DISABLE",
        config int CP_PMA_CH3_REG_RX_SIGDET_CH2_SEL = 0,
        config int CP_PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW = 3,
        config string CP_PMA_CH3_REG_RX_SIGDET_CHK_WINDOW_EN = "TRUE",
        config int CP_PMA_CH3_REG_RX_SIGDET_NOSIG_COUNT_SETTING = 4,
        config int CP_PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL = 0,
        config string CP_PMA_CH3_REG_SLIP_FIFO_INV_EN = "FALSE",
        config string CP_PMA_CH3_REG_SLIP_FIFO_INV = "POS_EDGE",
        config int CP_PMA_CH3_REG_RX_SIGDET_4OOB_DET_SEL = 7,
        config int CP_PMA_CH3_REG_RX_SIGDET_IC_I = 10,
        config string CP_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_OW = "DISABLE",
        config string CP_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N = "FALSE",
        config string CP_PMA_CH3_REG_RX_OOB_DETECTOR_PD_OW = "DISABLE",
        config string CP_PMA_CH3_REG_RX_OOB_DETECTOR_PD = "ON",
        config string CP_PMA_CH3_REG_RX_TERM_CM_CTRL = "5DIV7",
        config string CP_PMA_CH3_REG_TX_PD = "ON",
        config string CP_PMA_CH3_REG_TX_PD_OW = "DISABLE",
        config string CP_PMA_CH3_REG_TX_CLKPATH_PD = "ON",
        config string CP_PMA_CH3_REG_TX_CLKPATH_PD_OW = "DISABLE",
        config int CP_PMA_CH3_REG_TX_BEACON_TIMER_SEL = 0,
        config string CP_PMA_CH3_REG_TX_RXDET_REQ_OW = "DISABLE",
        config string CP_PMA_CH3_REG_TX_RXDET_REQ = "FALSE",
        config string CP_PMA_CH3_REG_TX_BEACON_EN_OW = "DISABLE",
        config string CP_PMA_CH3_REG_TX_BEACON_EN = "FALSE",
        config string CP_PMA_CH3_REG_TX_EI_EN_OW = "DISABLE",
        config string CP_PMA_CH3_REG_TX_EI_EN = "FALSE",
        config string CP_PMA_CH3_REG_TX_RES_CAL_EN = "FALSE",
        config int CP_PMA_CH3_REG_TX_RES_CAL = 51,
        config string CP_PMA_CH3_REG_TX_BIAS_CAL_EN = "FALSE",
        config int CP_PMA_CH3_REG_TX_BIAS_CTRL = 48,
        config string CP_PMA_CH3_REG_TX_RXDET_TIMER_SEL = "12CYCLE",
        config string CP_PMA_CH3_REG_TX_SYNC_OW = "DISABLE",
        config string CP_PMA_CH3_REG_TX_SYNC = "DISABLE",
        config string CP_PMA_CH3_REG_TX_PD_POST = "OFF",
        config string CP_PMA_CH3_REG_TX_PD_POST_OW = "DISABLE",
        config string CP_PMA_CH3_REG_TX_RESET_N_OW = "DISABLE",
        config string CP_PMA_CH3_REG_TX_RESET_N = "TRUE",
        config string CP_PMA_CH3_REG_TX_DCC_RESET_N_OW = "DISABLE",
        config string CP_PMA_CH3_REG_TX_DCC_RESET_N = "TRUE",
        config string CP_PMA_CH3_REG_TX_BUSWIDTH_OW = "DISABLE",
        config string CP_PMA_CH3_REG_TX_BUSWIDTH = "20BIT",
        config string CP_PMA_CH3_REG_PLL_READY_OW = "DISABLE",
        config string CP_PMA_CH3_REG_PLL_READY = "TRUE",
        config string CP_PMA_CH3_REG_TX_PCLK_SW_OW = "DISABLE",
        config string CP_PMA_CH3_REG_TX_PCLK_SW = "TRUE",
        config int CP_PMA_CH3_REG_EI_PCLK_DELAY_SEL = 0,
        config int CP_PMA_CH3_REG_TX_DRV01_DAC0 = 0,
        config int CP_PMA_CH3_REG_TX_DRV01_DAC1 = 10,
        config int CP_PMA_CH3_REG_TX_DRV01_DAC2 = 16,
        config int CP_PMA_CH3_REG_TX_DRV00_DAC0 = 63,
        config int CP_PMA_CH3_REG_TX_DRV00_DAC1 = 53,
        config int CP_PMA_CH3_REG_TX_DRV00_DAC2 = 48,
        config int CP_PMA_CH3_REG_TX_AMP0 = 8,
        config int CP_PMA_CH3_REG_TX_AMP1 = 16,
        config int CP_PMA_CH3_REG_TX_AMP2 = 32,
        config int CP_PMA_CH3_REG_TX_AMP3 = 48,
        config int CP_PMA_CH3_REG_TX_AMP4 = 56,
        config int CP_PMA_CH3_REG_TX_MARGIN = 0,
        config string CP_PMA_CH3_REG_TX_MARGIN_OW = "DISABLE",
        config int CP_PMA_CH3_REG_TX_DEEMP = 0,
        config string CP_PMA_CH3_REG_TX_DEEMP_OW = "DISABLE",
        config string CP_PMA_CH3_REG_TX_SWING = "FALSE",
        config string CP_PMA_CH3_REG_TX_SWING_OW = "DISABLE",
        config string CP_PMA_CH3_REG_TX_RXDET_THRESHOLD = "100MV",
        config int CP_PMA_CH3_REG_TX_BEACON_OSC_CTRL = 4,
        config int CP_PMA_CH3_REG_TX_PREDRV_DAC = 1,
        config int CP_PMA_CH3_REG_TX_PREDRV_CM_CTRL = 1,
        config string CP_PMA_CH3_REG_TX_TX2RX_SLPBACK_EN = "FALSE",
        config string CP_PMA_CH3_REG_TX_PCLK_EDGE_SEL = "POS_EDGE",
        config string CP_PMA_CH3_REG_TX_RXDET_STATUS_OW = "DISABLE",
        config string CP_PMA_CH3_REG_TX_RXDET_STATUS = "TRUE",
        config string CP_PMA_CH3_REG_TX_PRBS_GEN_EN = "FALSE",
        config string CP_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL = "20BIT",
        config string CP_PMA_CH3_REG_TX_PRBS_SEL = "PRBS7",
        config int CP_PMA_CH3_REG_TX_UDP_DATA = 256773,
        config string CP_PMA_CH3_REG_TX_FIFO_RST_N = "FALSE",
        config int CP_PMA_CH3_REG_TX_FIFO_WP_CTRL = 2,
        config string CP_PMA_CH3_REG_TX_FIFO_EN = "FALSE",
        config int CP_PMA_CH3_REG_TX_DATA_MUX_SEL = 0,
        config string CP_PMA_CH3_REG_TX_ERR_INSERT = "FALSE",
        config string CP_PMA_CH3_REG_TX_SATA_EN = "FALSE",
        config string CP_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_OW = "DISABLE",
        config string CP_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON = "ENABLE",
        config int CP_PMA_CH3_REG_TX_PULLUP_DAC0 = 8,
        config int CP_PMA_CH3_REG_TX_PULLUP_DAC1 = 8,
        config int CP_PMA_CH3_REG_TX_PULLUP_DAC2 = 8,
        config int CP_PMA_CH3_REG_TX_PULLUP_DAC3 = 8,
        config int CP_PMA_CH3_REG_TX_OOB_DELAY_SEL = 0,
        config string CP_PMA_CH3_REG_TX_POLARITY = "NORMAL",
        config int CP_PMA_CH3_REG_TX_SLPBK_AMP = 1,
        config string CP_PMA_CH3_REG_TX_LS_MODE_EN = "FALSE",
        config string CP_PMA_CH3_REG_TX_JTAG_MODE_EN_OW = "DISABLE",
        config string CP_PMA_CH3_REG_TX_JTAG_MODE_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_JTAG_MODE_EN_OW = "DISABLE",
        config string CP_PMA_CH3_REG_RX_JTAG_MODE_EN = "FALSE",
        config string CP_PMA_CH3_REG_RX_JTAG_OE = "DISABLE",
        config int CP_PMA_CH3_REG_RX_ACJTAG_VHYSTSE = 0,
        config string CP_PMA_CH3_REG_TX_FBCLK_FAR_EN = "FALSE",
        config int CP_PMA_CH3_REG_RX_TERM_MODE_CTRL = 6,
        config string CP_PMA_CH3_REG_PLPBK_TXPCLK_EN = "TRUE",
        config int CP_PMA_CH3_REG_TX_609_600 = 0,
        config int CP_PMA_CH3_REG_RX_CDR_617_610 = 0,
        config int CP_PMA_CH3_REG_RX_CDR_623_618 = 0,
        config int CP_PMA_CH3_REG_RX_631_624 = 0,
        config int CP_PMA_CH3_REG_RX_639_632 = 0,
        config int CP_PMA_CH3_REG_RX_647_640 = 0,
        config int CP_PMA_CH3_REG_RX_655_648 = 0,
        config int CP_PMA_CH3_REG_RX_659_656 = 0,
        config string CP_PMA_CH3_CFG_LANE_POWERUP = "ON",
        config string CP_PMA_CH3_CFG_PMA_POR_N = "TRUE",
        config string CP_PMA_CH3_CFG_RX_LANE_POWERUP = "ON",
        config string CP_PMA_CH3_CFG_RX_PMA_RSTN = "TRUE",
        config string CP_PMA_CH3_CFG_TX_LANE_POWERUP = "ON",
        config string CP_PMA_CH3_CFG_TX_PMA_RSTN = "TRUE",
        config string CP_PMA_CH3_CFG_CTLE_ADP_RSTN = "TRUE",
        config int CP_PMA_CH3_REG_RESERVED_48_45 = 0,
        config int CP_PMA_CH3_REG_RESERVED_69 = 0,
        config int CP_PMA_CH3_REG_RESERVED_77_76 = 0,
        config int CP_PMA_CH3_REG_RESERVED_171_164 = 0,
        config int CP_PMA_CH3_REG_RESERVED_175_172 = 0,
        config int CP_PMA_CH3_REG_RESERVED_190 = 0,
        config int CP_PMA_CH3_REG_RESERVED_233_232 = 0,
        config int CP_PMA_CH3_REG_RESERVED_235_234 = 0,
        config int CP_PMA_CH3_REG_RESERVED_241_240 = 0,
        config int CP_PMA_CH3_REG_RESERVED_285_283 = 0,
        config int CP_PMA_CH3_REG_RESERVED_286 = 0,
        config int CP_PMA_CH3_REG_RESERVED_295 = 0,
        config int CP_PMA_CH3_REG_RESERVED_298 = 0,
        config int CP_PMA_CH3_REG_RESERVED_332_325 = 0,
        config int CP_PMA_CH3_REG_RESERVED_340_333 = 0,
        config int CP_PMA_CH3_REG_RESERVED_348_341 = 0,
        config int CP_PMA_CH3_REG_RESERVED_354_349 = 0,
        config int CP_PMA_CH3_REG_RESERVED_373 = 0,
        config int CP_PMA_CH3_REG_RESERVED_376 = 0,
        config int CP_PMA_CH3_REG_RESERVED_452 = 0,
        config int CP_PMA_CH3_REG_RESERVED_502_499 = 0,
        config int CP_PMA_CH3_REG_RESERVED_506_505 = 0,
        config int CP_PMA_CH3_REG_RESERVED_550_549 = 0,
        config int CP_PMA_CH3_REG_RESERVED_556_552 = 0,
        config string CP_PMA_PLL0_REG_PLL_POWERDOWN_OW = "DISABLE",
        config string CP_PMA_PLL0_REG_PLL_POWERDOWN = "ON",
        config string CP_PMA_PLL0_REG_PLL_RESET_N_OW = "DISABLE",
        config string CP_PMA_PLL0_REG_PLL_RESET_N = "TRUE",
        config string CP_PMA_PLL0_REG_PLL_READY_OW = "DISABLE",
        config string CP_PMA_PLL0_REG_PLL_READY = "FALSE",
        config string CP_PMA_PLL0_REG_LANE_SYNC_OW = "DISABLE",
        config string CP_PMA_PLL0_REG_LANE_SYNC = "FALSE",
        config string CP_PMA_PLL0_REG_LOCKDET_REPEAT = "DISABLE",
        config string CP_PMA_PLL0_REG_RESCAL_I_CODE_PMA = "DISABLE",
        config string CP_PMA_PLL0_REG_RESCAL_RESET_N_OW = "DISABLE",
        config string CP_PMA_PLL0_REG_RESCAL_RESET_N = "FALSE",
        config string CP_PMA_PLL0_REG_RESCAL_DONE_OW = "DISABLE",
        config string CP_PMA_PLL0_REG_RESCAL_DONE = "FALSE",
        config string CP_PMA_PLL0_REG_RESCAL_CODE_OW = "DISABLE",
        config int CP_PMA_PLL0_REG_LDO_VREF_SEL = 2,
        config int CP_PMA_PLL0_REG_BIAS_VCOREP_C = 1,
        config int CP_PMA_PLL0_REG_RESCAL_I_CODE = 32,
        config string CP_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_OW = "DISABLE",
        config int CP_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL = 0,
        config string CP_PMA_PLL0_REG_JTAG_OE = "DISABLE",
        config string CP_PMA_PLL0_REG_JTAG_AC_MODE = "DISABLE",
        config int CP_PMA_PLL0_REG_JTAG_VHYSTSEL = 0,
        config string CP_PMA_PLL0_REG_PLL_LOCKDET_EN_OW = "DISABLE",
        config string CP_PMA_PLL0_REG_PLL_LOCKDET_EN = "FALSE",
        config string CP_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_OW = "DISABLE",
        config string CP_PMA_PLL0_REG_PLL_LOCKDET_RESET_N = "FALSE",
        config string CP_PMA_PLL0_REG_PLL_LOCKED_OW = "DISABLE",
        config string CP_PMA_PLL0_REG_PLL_LOCKED = "FALSE",
        config string CP_PMA_PLL0_REG_PLL_LOCKED_STICKY_CLEAR = "FALSE",
        config string CP_PMA_PLL0_REG_PLL_UNLOCKED_STICKY_CLEAR = "FALSE",
        config string CP_PMA_PLL0_REG_NOFBCLK_STICKY_CLEAR = "FALSE",
        config int CP_PMA_PLL0_REG_PLL_LOCKDET_REFCT = 7,
        config int CP_PMA_PLL0_REG_PLL_LOCKDET_FBCT = 7,
        config int CP_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT = 4,
        config int CP_PMA_PLL0_REG_PLL_LOCKDET_ITER = 3,
        config int CP_PMA_PLL0_REG_PLL_UNLOCKDET_ITER = 2,
        config string CP_PMA_PLL0_REG_PD_VCO = "ON",
        config string CP_PMA_PLL0_REG_FBCLK_TEST_EN = "FALSE",
        config string CP_PMA_PLL0_REG_REFCLK_TEST_EN = "FALSE",
        config int CP_PMA_PLL0_REG_TEST_SEL = 0,
        config string CP_PMA_PLL0_REG_TEST_V_EN = "FALSE",
        config string CP_PMA_PLL0_REG_TEST_SIG_HALF_EN = "FALSE",
        config int CP_PMA_PLL0_REG_TEST_FSM = 0,
        config string CP_PMA_PLL0_REG_REFCLK_OUT_PD = "OFF",
        config string CP_PMA_PLL0_REG_BGR_STARTUP_EN = "FALSE",
        config string CP_PMA_PLL0_REG_BGR_STARTUP = "FALSE",
        config string CP_PMA_PLL0_REG_PD_BGR = "ON",
        config string CP_PMA_PLL0_REG_REFCLK_TERM_VCM_EN = "TRUE",
        config string CP_PMA_PLL0_REG_FBDIVA_5_EN = "TRUE",
        config int CP_PMA_PLL0_REG_FBDIVB = 1,
        config string CP_PMA_PLL0_REG_RESET_N_PFDQP_OW = "DISABLE",
        config string CP_PMA_PLL0_REG_RESET_N_PFDQP = "FALSE",
        config int CP_PMA_PLL0_REG_QPCURRENT = 12,
        config string CP_PMA_PLL0_REG_VC_FORCE_EN = "FALSE",
        config int CP_PMA_PLL0_REG_VCRESET_C_RING = 24,
        config int CP_PMA_PLL0_REG_LPF_R_C = 0,
        config int CP_PMA_PLL0_REG_LPF_TR_C = 2,
        config string CP_PMA_PLL0_REG_PD_BIAS = "ON",
        config int CP_PMA_PLL0_REG_ICTRL_PLL = 1,
        config int CP_PMA_PLL0_REG_BIAS_QP = 1,
        config int CP_PMA_PLL0_REG_BIAS_LANE_SYNC = 1,
        config int CP_PMA_PLL0_REG_BIAS_CLKBUFS1 = 1,
        config int CP_PMA_PLL0_REG_TXPCLK_SEL = 0,
        config int CP_PMA_PLL0_REG_BIAS_CLKBUFS3 = 1,
        config string CP_PMA_PLL0_REG_LANE_SYNC_EN = "FALSE",
        config string CP_PMA_PLL0_REG_LANE_SYNC_EN_OW = "DISABLE",
        config int CP_PMA_PLL0_REG_BIAS_D2S = 1,
        config int CP_PMA_PLL0_REG_BIAS_REFD2S_C = 1,
        config int CP_PMA_PLL0_REG_BIAS_VCRST_C = 1,
        config int CP_PMA_PLL0_REG_BIAS_REFBUF_C = 1,
        config int CP_PMA_PLL0_REG_CLKBUFS1_C = 1,
        config int CP_PMA_PLL0_REG_CLKBUFS2_C = 6,
        config int CP_PMA_PLL0_REG_CLKBUFS3_C = 6,
        config int CP_PMA_PLL0_REG_CLKBUFS4_C = 1,
        config int CP_PMA_PLL0_REG_PLL_REFCLK_CML_SEL = 0,
        config string CP_PMA_PLL0_REG_REFCLK_SEL = "FALSE",
        config string CP_PMA_PLL0_REG_RESCAL_R_CODE_SIGN = "TRUE",
        config string CP_PMA_PLL0_REG_PLL_UNLOCKED_OW = "DISABLE",
        config string CP_PMA_PLL0_REG_PLL_UNLOCKED = "FALSE",
        config string CP_PMA_PLL0_REG_PLL_LOCKDET_MODE = "FALSE",
        config string CP_PMA_PLL0_REG_PLL_CLKBUF_PD_LEFT = "ON",
        config string CP_PMA_PLL0_REG_PLL_CLKBUF_PD_RIGHT = "ON",
        config string CP_PMA_PLL0_REG_RESCAL_EN = "FALSE",
        config int CP_PMA_PLL0_REG_RESCAL_I_CODE_VAL = 0,
        config int CP_PMA_PLL0_REG_RESCAL_I_CODE_OW = 0,
        config int CP_PMA_PLL0_REG_RESCAL_ITER_VALID_SEL = 0,
        config int CP_PMA_PLL0_REG_RESCAL_WAIT_SEL = 0,
        config int CP_PMA_PLL0_REG_I_CTRL_MAX = 45,
        config int CP_PMA_PLL0_REG_I_CTRL_MIN = 19,
        config int CP_PMA_PLL0_REG_RESERVED_167_160 = 0,
        config int CP_PMA_PLL0_REG_RESERVED_175_168 = 0,
        config int CP_PMA_PLL0_REG_RESERVED_183_176 = 0,
        config int CP_PMA_PLL0_REG_RESERVED_191_184 = 0,
        config string CP_PARM_CFG_HSST_RSTN = "FALSE",
        config string CP_PARM_PLL0_POWERUP = "OFF",
        config string CP_PARM_PLL0_RSTN = "FALSE",
        config string CP_PMA_PLL1_REG_PLL_POWERDOWN_OW = "DISABLE",
        config string CP_PMA_PLL1_REG_PLL_POWERDOWN = "ON",
        config string CP_PMA_PLL1_REG_PLL_RESET_N_OW = "DISABLE",
        config string CP_PMA_PLL1_REG_PLL_RESET_N = "TRUE",
        config string CP_PMA_PLL1_REG_PLL_READY_OW = "DISABLE",
        config string CP_PMA_PLL1_REG_PLL_READY = "FALSE",
        config string CP_PMA_PLL1_REG_LANE_SYNC_OW = "DISABLE",
        config string CP_PMA_PLL1_REG_LANE_SYNC = "FALSE",
        config string CP_PMA_PLL1_REG_LOCKDET_REPEAT = "DISABLE",
        config string CP_PMA_PLL1_REG_RESCAL_I_CODE_PMA = "DISABLE",
        config string CP_PMA_PLL1_REG_RESCAL_RESET_N_OW = "DISABLE",
        config string CP_PMA_PLL1_REG_RESCAL_RESET_N = "FALSE",
        config string CP_PMA_PLL1_REG_RESCAL_DONE_OW = "DISABLE",
        config string CP_PMA_PLL1_REG_RESCAL_DONE = "FALSE",
        config string CP_PMA_PLL1_REG_RESCAL_CODE_OW = "DISABLE",
        config int CP_PMA_PLL1_REG_LDO_VREF_SEL = 2,
        config int CP_PMA_PLL1_REG_BIAS_VCOREP_C = 1,
        config int CP_PMA_PLL1_REG_RESCAL_I_CODE = 32,
        config string CP_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_OW = "DISABLE",
        config int CP_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL = 0,
        config string CP_PMA_PLL1_REG_JTAG_OE = "DISABLE",
        config string CP_PMA_PLL1_REG_JTAG_AC_MODE = "DISABLE",
        config int CP_PMA_PLL1_REG_JTAG_VHYSTSEL = 0,
        config string CP_PMA_PLL1_REG_PLL_LOCKDET_EN_OW = "DISABLE",
        config string CP_PMA_PLL1_REG_PLL_LOCKDET_EN = "FALSE",
        config string CP_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_OW = "DISABLE",
        config string CP_PMA_PLL1_REG_PLL_LOCKDET_RESET_N = "FALSE",
        config string CP_PMA_PLL1_REG_PLL_LOCKED_OW = "DISABLE",
        config string CP_PMA_PLL1_REG_PLL_LOCKED = "FALSE",
        config string CP_PMA_PLL1_REG_PLL_LOCKED_STICKY_CLEAR = "FALSE",
        config string CP_PMA_PLL1_REG_PLL_UNLOCKED_STICKY_CLEAR = "FALSE",
        config string CP_PMA_PLL1_REG_NOFBCLK_STICKY_CLEAR = "FALSE",
        config int CP_PMA_PLL1_REG_PLL_LOCKDET_REFCT = 7,
        config int CP_PMA_PLL1_REG_PLL_LOCKDET_FBCT = 7,
        config int CP_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT = 4,
        config int CP_PMA_PLL1_REG_PLL_LOCKDET_ITER = 3,
        config int CP_PMA_PLL1_REG_PLL_UNLOCKDET_ITER = 2,
        config string CP_PMA_PLL1_REG_PD_VCO = "ON",
        config string CP_PMA_PLL1_REG_FBCLK_TEST_EN = "FALSE",
        config string CP_PMA_PLL1_REG_REFCLK_TEST_EN = "FALSE",
        config int CP_PMA_PLL1_REG_TEST_SEL = 0,
        config string CP_PMA_PLL1_REG_TEST_V_EN = "FALSE",
        config string CP_PMA_PLL1_REG_TEST_SIG_HALF_EN = "FALSE",
        config int CP_PMA_PLL1_REG_TEST_FSM = 0,
        config string CP_PMA_PLL1_REG_REFCLK_OUT_PD = "OFF",
        config string CP_PMA_PLL1_REG_BGR_STARTUP_EN = "FALSE",
        config string CP_PMA_PLL1_REG_BGR_STARTUP = "FALSE",
        config string CP_PMA_PLL1_REG_PD_BGR = "ON",
        config string CP_PMA_PLL1_REG_REFCLK_TERM_VCM_EN = "TRUE",
        config string CP_PMA_PLL1_REG_FBDIVA_5_EN = "TRUE",
        config int CP_PMA_PLL1_REG_FBDIVB = 1,
        config string CP_PMA_PLL1_REG_RESET_N_PFDQP_OW = "DISABLE",
        config string CP_PMA_PLL1_REG_RESET_N_PFDQP = "FALSE",
        config int CP_PMA_PLL1_REG_QPCURRENT = 12,
        config string CP_PMA_PLL1_REG_VC_FORCE_EN = "FALSE",
        config int CP_PMA_PLL1_REG_VCRESET_C_RING = 24,
        config int CP_PMA_PLL1_REG_LPF_R_C = 0,
        config int CP_PMA_PLL1_REG_LPF_TR_C = 2,
        config string CP_PMA_PLL1_REG_PD_BIAS = "ON",
        config int CP_PMA_PLL1_REG_ICTRL_PLL = 1,
        config int CP_PMA_PLL1_REG_BIAS_QP = 1,
        config int CP_PMA_PLL1_REG_BIAS_LANE_SYNC = 1,
        config int CP_PMA_PLL1_REG_BIAS_CLKBUFS1 = 1,
        config int CP_PMA_PLL1_REG_TXPCLK_SEL = 0,
        config int CP_PMA_PLL1_REG_BIAS_CLKBUFS3 = 1,
        config string CP_PMA_PLL1_REG_LANE_SYNC_EN = "FALSE",
        config string CP_PMA_PLL1_REG_LANE_SYNC_EN_OW = "DISABLE",
        config int CP_PMA_PLL1_REG_BIAS_D2S = 1,
        config int CP_PMA_PLL1_REG_BIAS_REFD2S_C = 1,
        config int CP_PMA_PLL1_REG_BIAS_VCRST_C = 1,
        config int CP_PMA_PLL1_REG_BIAS_REFBUF_C = 1,
        config int CP_PMA_PLL1_REG_CLKBUFS1_C = 1,
        config int CP_PMA_PLL1_REG_CLKBUFS2_C = 6,
        config int CP_PMA_PLL1_REG_CLKBUFS3_C = 6,
        config int CP_PMA_PLL1_REG_CLKBUFS4_C = 1,
        config int CP_PMA_PLL1_REG_PLL_REFCLK_CML_SEL = 0,
        config string CP_PMA_PLL1_REG_REFCLK_SEL = "FALSE",
        config string CP_PMA_PLL1_REG_RESCAL_R_CODE_SIGN = "TRUE",
        config string CP_PMA_PLL1_REG_PLL_UNLOCKED_OW = "DISABLE",
        config string CP_PMA_PLL1_REG_PLL_UNLOCKED = "FALSE",
        config string CP_PMA_PLL1_REG_PLL_LOCKDET_MODE = "FALSE",
        config string CP_PMA_PLL1_REG_PLL_CLKBUF_PD_LEFT = "ON",
        config string CP_PMA_PLL1_REG_PLL_CLKBUF_PD_RIGHT = "ON",
        config string CP_PMA_PLL1_REG_RESCAL_EN = "FALSE",
        config int CP_PMA_PLL1_REG_RESCAL_I_CODE_VAL = 0,
        config int CP_PMA_PLL1_REG_RESCAL_I_CODE_OW = 0,
        config int CP_PMA_PLL1_REG_RESCAL_ITER_VALID_SEL = 0,
        config int CP_PMA_PLL1_REG_RESCAL_WAIT_SEL = 0,
        config int CP_PMA_PLL1_REG_I_CTRL_MAX = 45,
        config int CP_PMA_PLL1_REG_I_CTRL_MIN = 19,
        config int CP_PMA_PLL1_REG_RESERVED_167_160 = 0,
        config int CP_PMA_PLL1_REG_RESERVED_175_168 = 0,
        config int CP_PMA_PLL1_REG_RESERVED_183_176 = 0,
        config int CP_PMA_PLL1_REG_RESERVED_191_184 = 0,
        config string CP_PARM_PLL1_POWERUP = "OFF",
        config string CP_PARM_PLL1_RSTN = "FALSE",
        config string CP_PARM_GRSN_DIS = "FALSE",
        config string CP_PARM_CFG_RSTN = "FALSE"
    );
    port
    (
// configuration_body_def_on


    config input SC_PCS_CH0_BYPASS_WORD_ALIGN_1 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_BYPASS_WORD_ALIGN_1" */,

    config input SC_PCS_CH0_BYPASS_DENC_2 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_BYPASS_DENC_2" */,

    config input SC_PCS_CH0_BYPASS_BONDING_3 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_BYPASS_BONDING_3" */,

    config input SC_PCS_CH0_BYPASS_CTC_4 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_BYPASS_CTC_4" */,

    config input SC_PCS_CH0_BYPASS_GEAR_5 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_BYPASS_GEAR_5" */,

    config input SC_PCS_CH0_BYPASS_BRIDGE_6 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_BYPASS_BRIDGE_6" */,

    config input SC_PCS_CH0_BYPASS_BRIDGE_FIFO_7 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_BYPASS_BRIDGE_FIFO_7" */,

    config input SC_PCS_CH0_DATA_MODE_8 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_DATA_MODE_8" */,

    config input SC_PCS_CH0_RX_POLARITY_INV_10_9[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RX_POLARITY_INV_10_9[1],SC_PCS_CH0_RX_POLARITY_INV_10_9[0]" */,

    config input SC_PCS_CH0_ALIGN_MODE_12_11[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_ALIGN_MODE_12_11[1],SC_PCS_CH0_ALIGN_MODE_12_11[0]" */,

    config input SC_PCS_CH0_SAMP_16B_13 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_SAMP_16B_13" */,

    config input SC_PCS_CH0_FARLP_PWR_REDUCTION_14 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_FARLP_PWR_REDUCTION_14" */,

    config input SC_PCS_CH0_COMMA_REG0_25_16[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_COMMA_REG0_25_16[9],SC_PCS_CH0_COMMA_REG0_25_16[8],SC_PCS_CH0_COMMA_REG0_25_16[7],SC_PCS_CH0_COMMA_REG0_25_16[6],SC_PCS_CH0_COMMA_REG0_25_16[5],SC_PCS_CH0_COMMA_REG0_25_16[4],SC_PCS_CH0_COMMA_REG0_25_16[3],SC_PCS_CH0_COMMA_REG0_25_16[2],SC_PCS_CH0_COMMA_REG0_25_16[1],SC_PCS_CH0_COMMA_REG0_25_16[0]" */,

    config input SC_PCS_CH0_COMMA_MASK_35_26[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_COMMA_MASK_35_26[9],SC_PCS_CH0_COMMA_MASK_35_26[8],SC_PCS_CH0_COMMA_MASK_35_26[7],SC_PCS_CH0_COMMA_MASK_35_26[6],SC_PCS_CH0_COMMA_MASK_35_26[5],SC_PCS_CH0_COMMA_MASK_35_26[4],SC_PCS_CH0_COMMA_MASK_35_26[3],SC_PCS_CH0_COMMA_MASK_35_26[2],SC_PCS_CH0_COMMA_MASK_35_26[1],SC_PCS_CH0_COMMA_MASK_35_26[0]" */,

    config input SC_PCS_CH0_CEB_MODE_37_36[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CEB_MODE_37_36[1],SC_PCS_CH0_CEB_MODE_37_36[0]" */,

    config input SC_PCS_CH0_CTC_MODE_39_38[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CTC_MODE_39_38[1],SC_PCS_CH0_CTC_MODE_39_38[0]" */,

    config input SC_PCS_CH0_A_REG_47_40[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_A_REG_47_40[7],SC_PCS_CH0_A_REG_47_40[6],SC_PCS_CH0_A_REG_47_40[5],SC_PCS_CH0_A_REG_47_40[4],SC_PCS_CH0_A_REG_47_40[3],SC_PCS_CH0_A_REG_47_40[2],SC_PCS_CH0_A_REG_47_40[1],SC_PCS_CH0_A_REG_47_40[0]" */,

    config input SC_PCS_CH0_GE_AUTO_EN_49 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_GE_AUTO_EN_49" */,

    config input SC_PCS_CH0_SKIP_REG0_59_50[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_SKIP_REG0_59_50[9],SC_PCS_CH0_SKIP_REG0_59_50[8],SC_PCS_CH0_SKIP_REG0_59_50[7],SC_PCS_CH0_SKIP_REG0_59_50[6],SC_PCS_CH0_SKIP_REG0_59_50[5],SC_PCS_CH0_SKIP_REG0_59_50[4],SC_PCS_CH0_SKIP_REG0_59_50[3],SC_PCS_CH0_SKIP_REG0_59_50[2],SC_PCS_CH0_SKIP_REG0_59_50[1],SC_PCS_CH0_SKIP_REG0_59_50[0]" */,

    config input SC_PCS_CH0_SKIP_REG1_69_60[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_SKIP_REG1_69_60[9],SC_PCS_CH0_SKIP_REG1_69_60[8],SC_PCS_CH0_SKIP_REG1_69_60[7],SC_PCS_CH0_SKIP_REG1_69_60[6],SC_PCS_CH0_SKIP_REG1_69_60[5],SC_PCS_CH0_SKIP_REG1_69_60[4],SC_PCS_CH0_SKIP_REG1_69_60[3],SC_PCS_CH0_SKIP_REG1_69_60[2],SC_PCS_CH0_SKIP_REG1_69_60[1],SC_PCS_CH0_SKIP_REG1_69_60[0]" */,

    config input SC_PCS_CH0_SKIP_REG2_79_70[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_SKIP_REG2_79_70[9],SC_PCS_CH0_SKIP_REG2_79_70[8],SC_PCS_CH0_SKIP_REG2_79_70[7],SC_PCS_CH0_SKIP_REG2_79_70[6],SC_PCS_CH0_SKIP_REG2_79_70[5],SC_PCS_CH0_SKIP_REG2_79_70[4],SC_PCS_CH0_SKIP_REG2_79_70[3],SC_PCS_CH0_SKIP_REG2_79_70[2],SC_PCS_CH0_SKIP_REG2_79_70[1],SC_PCS_CH0_SKIP_REG2_79_70[0]" */,

    config input SC_PCS_CH0_SKIP_REG3_89_80[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_SKIP_REG3_89_80[9],SC_PCS_CH0_SKIP_REG3_89_80[8],SC_PCS_CH0_SKIP_REG3_89_80[7],SC_PCS_CH0_SKIP_REG3_89_80[6],SC_PCS_CH0_SKIP_REG3_89_80[5],SC_PCS_CH0_SKIP_REG3_89_80[4],SC_PCS_CH0_SKIP_REG3_89_80[3],SC_PCS_CH0_SKIP_REG3_89_80[2],SC_PCS_CH0_SKIP_REG3_89_80[1],SC_PCS_CH0_SKIP_REG3_89_80[0]" */,

    config input SC_PCS_CH0_DEC_DUAL_90 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_DEC_DUAL_90" */,

    config input SC_PCS_CH0_SPLIT_91 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_SPLIT_91" */,

    config input SC_PCS_CH0_FIFOFLAG_CTC_92 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_FIFOFLAG_CTC_92" */,

    config input SC_PCS_CH0_COMMA_DET_MODE_93 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_COMMA_DET_MODE_93" */,

    config input SC_PCS_CH0_ERRDETECT_SILENCE_94 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_ERRDETECT_SILENCE_94" */,

    config input SC_PCS_CH0_PMA_RCLK_POLINV_96 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_PMA_RCLK_POLINV_96" */,

    config input SC_PCS_CH0_PCS_RCLK_SEL_98_97[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_PCS_RCLK_SEL_98_97[1],SC_PCS_CH0_PCS_RCLK_SEL_98_97[0]" */,

    config input SC_PCS_CH0_CB_RCLK_SEL_100_99[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CB_RCLK_SEL_100_99[1],SC_PCS_CH0_CB_RCLK_SEL_100_99[0]" */,

    config input SC_PCS_CH0_AFTER_CTC_RCLK_SEL_102_101[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_AFTER_CTC_RCLK_SEL_102_101[1],SC_PCS_CH0_AFTER_CTC_RCLK_SEL_102_101[0]" */,

    config input SC_PCS_CH0_RCLK_POLINV_103 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RCLK_POLINV_103" */,

    config input SC_PCS_CH0_BRIDGE_RCLK_SEL_105_104[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_BRIDGE_RCLK_SEL_105_104[1],SC_PCS_CH0_BRIDGE_RCLK_SEL_105_104[0]" */,

    config input SC_PCS_CH0_PCS_RCLK_EN_106 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_PCS_RCLK_EN_106" */,

    config input SC_PCS_CH0_CB_RCLK_EN_107 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CB_RCLK_EN_107" */,

    config input SC_PCS_CH0_AFTER_CTC_RCLK_EN_108 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_AFTER_CTC_RCLK_EN_108" */,

    config input SC_PCS_CH0_AFTER_CTC_RCLK_EN_GB_109 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_AFTER_CTC_RCLK_EN_GB_109" */,

    config input SC_PCS_CH0_AFTER_CTC_RCLK_SEL_1_111_110[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_AFTER_CTC_RCLK_SEL_1_111_110[1],SC_PCS_CH0_AFTER_CTC_RCLK_SEL_1_111_110[0]" */,

    config input SC_PCS_CH0_PCS_RX_RSTN_112 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_PCS_RX_RSTN_112" */,

    config input SC_PCS_CH0_SLAVE_113 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_SLAVE_113" */,

    config input SC_PCS_CH0_PCIE_SLAVE_114 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_PCIE_SLAVE_114" */,

    config input SC_PCS_CH0_RX_64B66B_67B_116_115[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RX_64B66B_67B_116_115[1],SC_PCS_CH0_RX_64B66B_67B_116_115[0]" */,

    config input SC_PCS_CH0_RX_BRIDGE_CLK_POLINV_117 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RX_BRIDGE_CLK_POLINV_117" */,

    config input SC_PCS_CH0_AFTER_CTC_RCLK_EN_GB_1_118 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_AFTER_CTC_RCLK_EN_GB_1_118" */,

    config input SC_PCS_CH0_PCS_CB_RSTN_120 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_PCS_CB_RSTN_120" */,

    config input SC_PCS_CH0_TX_BRIDGE_GEAR_SEL_128 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_BRIDGE_GEAR_SEL_128" */,

    config input SC_PCS_CH0_TX_BYPASS_BRIDGE_UINT_129 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_BYPASS_BRIDGE_UINT_129" */,

    config input SC_PCS_CH0_TX_BYPASS_BRIDGE_FIFO_130 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_BYPASS_BRIDGE_FIFO_130" */,

    config input SC_PCS_CH0_TX_BYPASS_GEAR_131 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_BYPASS_GEAR_131" */,

    config input SC_PCS_CH0_TX_BYPASS_ENC_132 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_BYPASS_ENC_132" */,

    config input SC_PCS_CH0_TX_BYPASS_BIT_SLIP_133 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_BYPASS_BIT_SLIP_133" */,

    config input SC_PCS_CH0_TX_GEAR_SPLIT_136 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_GEAR_SPLIT_136" */,

    config input SC_PCS_CH0_TX_DRIVE_REG_MODE_138_137[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_DRIVE_REG_MODE_138_137[1],SC_PCS_CH0_TX_DRIVE_REG_MODE_138_137[0]" */,

    config input SC_PCS_CH0_TX_BIT_SLIP_CYCLES_143_139[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_BIT_SLIP_CYCLES_143_139[4],SC_PCS_CH0_TX_BIT_SLIP_CYCLES_143_139[3],SC_PCS_CH0_TX_BIT_SLIP_CYCLES_143_139[2],SC_PCS_CH0_TX_BIT_SLIP_CYCLES_143_139[1],SC_PCS_CH0_TX_BIT_SLIP_CYCLES_143_139[0]" */,

    config input SC_PCS_CH0_INT_TX_MASK_0_144 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_TX_MASK_0_144" */,

    config input SC_PCS_CH0_INT_TX_MASK_1_145 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_TX_MASK_1_145" */,

    config input SC_PCS_CH0_INT_TX_MASK_2_146 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_TX_MASK_2_146" */,

    config input SC_PCS_CH0_INT_TX_CLR_0_152 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_TX_CLR_0_152" */,

    config input SC_PCS_CH0_INT_TX_CLR_1_153 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_TX_CLR_1_153" */,

    config input SC_PCS_CH0_INT_TX_CLR_2_154 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_TX_CLR_2_154" */,

    config input SC_PCS_CH0_TX_PMA_TCLK_POLINV_160 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_PMA_TCLK_POLINV_160" */,

    config input SC_PCS_CH0_TX_PCS_CLK_EN_SEL_161 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_PCS_CLK_EN_SEL_161" */,

    config input SC_PCS_CH0_TX_BRIDGE_TCLK_SEL_162 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_BRIDGE_TCLK_SEL_162" */,

    config input SC_PCS_CH0_TX_TCLK_POLINV_163 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_TCLK_POLINV_163" */,

    config input SC_PCS_CH0_TX_PCS_TCLK_SEL_164 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_PCS_TCLK_SEL_164" */,

    config input SC_PCS_CH0_TX_PCS_TX_RSTN_165 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_PCS_TX_RSTN_165" */,

    config input SC_PCS_CH0_TX_SLAVE_166 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_SLAVE_166" */,

    config input SC_PCS_CH0_TX_GEAR_TCLK_EN_SEL_167 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_GEAR_TCLK_EN_SEL_167" */,

    config input SC_PCS_CH0_DATA_WIDTH_MODE_169_168[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_DATA_WIDTH_MODE_169_168[1],SC_PCS_CH0_DATA_WIDTH_MODE_169_168[0]" */,

    config input SC_PCS_CH0_TX_64B66B_67B_171_170[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_64B66B_67B_171_170[1],SC_PCS_CH0_TX_64B66B_67B_171_170[0]" */,

    config input SC_PCS_CH0_TX_GEAR_TCLK_SEL_172 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_GEAR_TCLK_SEL_172" */,

    config input SC_PCS_CH0_TX_TCLK2FABRIC_SEL_176 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_TCLK2FABRIC_SEL_176" */,

    config input SC_PCS_CH0_TX_OUTZZ_177 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_OUTZZ_177" */,

    config input SC_PCS_CH0_ENC_DUAL_178 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_ENC_DUAL_178" */,

    config input SC_PCS_CH0_TX_BITSLIP_DATA_MODE_179 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_BITSLIP_DATA_MODE_179" */,

    config input SC_PCS_CH0_TX_BRIDGE_CLK_POLINV_180 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_BRIDGE_CLK_POLINV_180" */,

    config input SC_PCS_CH0_COMMA_REG1_193_184[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_COMMA_REG1_193_184[9],SC_PCS_CH0_COMMA_REG1_193_184[8],SC_PCS_CH0_COMMA_REG1_193_184[7],SC_PCS_CH0_COMMA_REG1_193_184[6],SC_PCS_CH0_COMMA_REG1_193_184[5],SC_PCS_CH0_COMMA_REG1_193_184[4],SC_PCS_CH0_COMMA_REG1_193_184[3],SC_PCS_CH0_COMMA_REG1_193_184[2],SC_PCS_CH0_COMMA_REG1_193_184[1],SC_PCS_CH0_COMMA_REG1_193_184[0]" */,

    config input SC_PCS_CH0_RAPID_IMAX_202_200[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RAPID_IMAX_202_200[2],SC_PCS_CH0_RAPID_IMAX_202_200[1],SC_PCS_CH0_RAPID_IMAX_202_200[0]" */,

    config input SC_PCS_CH0_RAPID_VMIN_1_215_208[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RAPID_VMIN_1_215_208[7],SC_PCS_CH0_RAPID_VMIN_1_215_208[6],SC_PCS_CH0_RAPID_VMIN_1_215_208[5],SC_PCS_CH0_RAPID_VMIN_1_215_208[4],SC_PCS_CH0_RAPID_VMIN_1_215_208[3],SC_PCS_CH0_RAPID_VMIN_1_215_208[2],SC_PCS_CH0_RAPID_VMIN_1_215_208[1],SC_PCS_CH0_RAPID_VMIN_1_215_208[0]" */,

    config input SC_PCS_CH0_RAPID_VMIN_2_223_216[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RAPID_VMIN_2_223_216[7],SC_PCS_CH0_RAPID_VMIN_2_223_216[6],SC_PCS_CH0_RAPID_VMIN_2_223_216[5],SC_PCS_CH0_RAPID_VMIN_2_223_216[4],SC_PCS_CH0_RAPID_VMIN_2_223_216[3],SC_PCS_CH0_RAPID_VMIN_2_223_216[2],SC_PCS_CH0_RAPID_VMIN_2_223_216[1],SC_PCS_CH0_RAPID_VMIN_2_223_216[0]" */,

    config input SC_PCS_CH0_RX_PRBS_MODE_227_224[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RX_PRBS_MODE_227_224[3],SC_PCS_CH0_RX_PRBS_MODE_227_224[2],SC_PCS_CH0_RX_PRBS_MODE_227_224[1],SC_PCS_CH0_RX_PRBS_MODE_227_224[0]" */,

    config input SC_PCS_CH0_RX_ERRCNT_CLR_228 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RX_ERRCNT_CLR_228" */,

    config input SC_PCS_CH0_RX_PRBS_ERR_LPBK_229 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RX_PRBS_ERR_LPBK_229" */,

    config input SC_PCS_CH0_TX_PRBS_MODE_235_232[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_PRBS_MODE_235_232[3],SC_PCS_CH0_TX_PRBS_MODE_235_232[2],SC_PCS_CH0_TX_PRBS_MODE_235_232[1],SC_PCS_CH0_TX_PRBS_MODE_235_232[0]" */,

    config input SC_PCS_CH0_TX_INSERT_ER_236 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TX_INSERT_ER_236" */,

    config input SC_PCS_CH0_ENABLE_PRBS_GEN_237 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_ENABLE_PRBS_GEN_237" */,

    config input SC_PCS_CH0_ERR_CNT_247_240[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_ERR_CNT_247_240[7],SC_PCS_CH0_ERR_CNT_247_240[6],SC_PCS_CH0_ERR_CNT_247_240[5],SC_PCS_CH0_ERR_CNT_247_240[4],SC_PCS_CH0_ERR_CNT_247_240[3],SC_PCS_CH0_ERR_CNT_247_240[2],SC_PCS_CH0_ERR_CNT_247_240[1],SC_PCS_CH0_ERR_CNT_247_240[0]" */,

    config input SC_PCS_CH0_DEFAULT_RADDR_251_248[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_DEFAULT_RADDR_251_248[3],SC_PCS_CH0_DEFAULT_RADDR_251_248[2],SC_PCS_CH0_DEFAULT_RADDR_251_248[1],SC_PCS_CH0_DEFAULT_RADDR_251_248[0]" */,

    config input SC_PCS_CH0_MASTER_CHECK_OFFSET_255_252[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_MASTER_CHECK_OFFSET_255_252[3],SC_PCS_CH0_MASTER_CHECK_OFFSET_255_252[2],SC_PCS_CH0_MASTER_CHECK_OFFSET_255_252[1],SC_PCS_CH0_MASTER_CHECK_OFFSET_255_252[0]" */,

    config input SC_PCS_CH0_DELAY_SET_259_256[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_DELAY_SET_259_256[3],SC_PCS_CH0_DELAY_SET_259_256[2],SC_PCS_CH0_DELAY_SET_259_256[1],SC_PCS_CH0_DELAY_SET_259_256[0]" */,

    config input SC_PCS_CH0_SEACH_OFFSET_262_260[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_SEACH_OFFSET_262_260[2],SC_PCS_CH0_SEACH_OFFSET_262_260[1],SC_PCS_CH0_SEACH_OFFSET_262_260[0]" */,

    config input SC_PCS_CH0_CEB_RAPIDLS_MMAX_266_264[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CEB_RAPIDLS_MMAX_266_264[2],SC_PCS_CH0_CEB_RAPIDLS_MMAX_266_264[1],SC_PCS_CH0_CEB_RAPIDLS_MMAX_266_264[0]" */,

    config input SC_PCS_CH0_CTC_AFULL_276_272[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CTC_AFULL_276_272[4],SC_PCS_CH0_CTC_AFULL_276_272[3],SC_PCS_CH0_CTC_AFULL_276_272[2],SC_PCS_CH0_CTC_AFULL_276_272[1],SC_PCS_CH0_CTC_AFULL_276_272[0]" */,

    config input SC_PCS_CH0_CTC_AEMPTY_284_280[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CTC_AEMPTY_284_280[4],SC_PCS_CH0_CTC_AEMPTY_284_280[3],SC_PCS_CH0_CTC_AEMPTY_284_280[2],SC_PCS_CH0_CTC_AEMPTY_284_280[1],SC_PCS_CH0_CTC_AEMPTY_284_280[0]" */,

    config input SC_PCS_CH0_CTC_CONTI_SKP_SET_285 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CTC_CONTI_SKP_SET_285" */,

    config input SC_PCS_CH0_FAR_LOOP_288 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_FAR_LOOP_288" */,

    config input SC_PCS_CH0_NEAR_LOOP_289 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_NEAR_LOOP_289" */,

    config input SC_PCS_CH0_REG_TX2RX_PLOOP_EN_290 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_REG_TX2RX_PLOOP_EN_290" */,

    config input SC_PCS_CH0_REG_TX2RX_SLOOP_EN_291 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_REG_TX2RX_SLOOP_EN_291" */,

    config input SC_PCS_CH0_REG_RX2TX_PLOOP_EN_292 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_REG_RX2TX_PLOOP_EN_292" */,

    config input SC_PCS_CH0_INT_RX_MASK_0_296 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_MASK_0_296" */,

    config input SC_PCS_CH0_INT_RX_MASK_1_297 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_MASK_1_297" */,

    config input SC_PCS_CH0_INT_RX_MASK_2_298 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_MASK_2_298" */,

    config input SC_PCS_CH0_INT_RX_MASK_3_299 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_MASK_3_299" */,

    config input SC_PCS_CH0_INT_RX_MASK_4_300 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_MASK_4_300" */,

    config input SC_PCS_CH0_INT_RX_MASK_5_301 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_MASK_5_301" */,

    config input SC_PCS_CH0_INT_RX_MASK_6_302 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_MASK_6_302" */,

    config input SC_PCS_CH0_INT_RX_MASK_7_303 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_MASK_7_303" */,

    config input SC_PCS_CH0_INT_RX_CLR_0_304 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_CLR_0_304" */,

    config input SC_PCS_CH0_INT_RX_CLR_1_305 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_CLR_1_305" */,

    config input SC_PCS_CH0_INT_RX_CLR_2_306 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_CLR_2_306" */,

    config input SC_PCS_CH0_INT_RX_CLR_3_307 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_CLR_3_307" */,

    config input SC_PCS_CH0_INT_RX_CLR_4_308 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_CLR_4_308" */,

    config input SC_PCS_CH0_INT_RX_CLR_5_309 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_CLR_5_309" */,

    config input SC_PCS_CH0_INT_RX_CLR_6_310 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_CLR_6_310" */,

    config input SC_PCS_CH0_INT_RX_CLR_7_311 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_INT_RX_CLR_7_311" */,

    config input SC_PCS_CH0_CA_RSTN_RX_312 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CA_RSTN_RX_312" */,

    config input SC_PCS_CH0_CA_DYN_DLY_EN_RX_313 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CA_DYN_DLY_EN_RX_313" */,

    config input SC_PCS_CH0_CA_DYN_DLY_SEL_RX_314 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CA_DYN_DLY_SEL_RX_314" */,

    config input SC_PCS_CH0_CA_RX_322_315[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CA_RX_322_315[7],SC_PCS_CH0_CA_RX_322_315[6],SC_PCS_CH0_CA_RX_322_315[5],SC_PCS_CH0_CA_RX_322_315[4],SC_PCS_CH0_CA_RX_322_315[3],SC_PCS_CH0_CA_RX_322_315[2],SC_PCS_CH0_CA_RX_322_315[1],SC_PCS_CH0_CA_RX_322_315[0]" */,

    config input SC_PCS_CH0_CA_RSTN_TX_323 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CA_RSTN_TX_323" */,

    config input SC_PCS_CH0_CA_DYN_DLY_EN_TX_324 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CA_DYN_DLY_EN_TX_324" */,

    config input SC_PCS_CH0_CA_DYN_DLY_SEL_TX_325 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CA_DYN_DLY_SEL_TX_325" */,

    config input SC_PCS_CH0_CA_TX_333_326[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CA_TX_333_326[7],SC_PCS_CH0_CA_TX_333_326[6],SC_PCS_CH0_CA_TX_333_326[5],SC_PCS_CH0_CA_TX_333_326[4],SC_PCS_CH0_CA_TX_333_326[3],SC_PCS_CH0_CA_TX_333_326[2],SC_PCS_CH0_CA_TX_333_326[1],SC_PCS_CH0_CA_TX_333_326[0]" */,

    config input SC_PCS_CH0_RXPRBS_PWR_REDUCTION_334 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RXPRBS_PWR_REDUCTION_334" */,

    config input SC_PCS_CH0_WDALIGN_PWR_REDUCTION_335 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_WDALIGN_PWR_REDUCTION_335" */,

    config input SC_PCS_CH0_RXDEC_PWR_REDUCTION_336 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RXDEC_PWR_REDUCTION_336" */,

    config input SC_PCS_CH0_RXCB_PWR_REDUCTION_337 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RXCB_PWR_REDUCTION_337" */,

    config input SC_PCS_CH0_RXCTC_PWR_REDUCTION_338 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RXCTC_PWR_REDUCTION_338" */,

    config input SC_PCS_CH0_RXGEAR_PWR_REDUCTION_339 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RXGEAR_PWR_REDUCTION_339" */,

    config input SC_PCS_CH0_RXBRG_PWR_REDUCTION_340 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RXBRG_PWR_REDUCTION_340" */,

    config input SC_PCS_CH0_RXTEST_PWR_REDUCTION_341 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RXTEST_PWR_REDUCTION_341" */,

    config input SC_PCS_CH0_TXBRG_PWR_REDUCTION_342 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TXBRG_PWR_REDUCTION_342" */,

    config input SC_PCS_CH0_TXGEAR_PWR_REDUCTION_343 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TXGEAR_PWR_REDUCTION_343" */,

    config input SC_PCS_CH0_TXENC_PWR_REDUCTION_344 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TXENC_PWR_REDUCTION_344" */,

    config input SC_PCS_CH0_TXBSLP_PWR_REDUCTION_345 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TXBSLP_PWR_REDUCTION_345" */,

    config input SC_PCS_CH0_TXPRBS_PWR_REDUCTION_346 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TXPRBS_PWR_REDUCTION_346" */,

    config input SC_PCS_CH0_TXBRG_FULL_CHK_EN_347 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TXBRG_FULL_CHK_EN_347" */,

    config input SC_PCS_CH0_TXBRG_EMPTY_CHK_EN_348 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_TXBRG_EMPTY_CHK_EN_348" */,

    config input SC_PCS_CH0_RXBRG_FULL_CHK_EN_349 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RXBRG_FULL_CHK_EN_349" */,

    config input SC_PCS_CH0_RXBRG_EMPTY_CHK_EN_350 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_RXBRG_EMPTY_CHK_EN_350" */,

    config input SC_PCS_CH0_CTC_FULL_CHK_EN_351 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CTC_FULL_CHK_EN_351" */,

    config input SC_PCS_CH0_CTC_EMPTY_CHK_EN_352 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CTC_EMPTY_CHK_EN_352" */,

    config input SC_PCS_CH0_CEB_FULL_CHK_EN_353 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CEB_FULL_CHK_EN_353" */,

    config input SC_PCS_CH0_CEB_EMPTY_CHK_EN_354 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_CEB_EMPTY_CHK_EN_354" */,

    config input SC_PCS_CH0_FLP_FULL_CHK_EN_355 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_FLP_FULL_CHK_EN_355" */,

    config input SC_PCS_CH0_FLP_EMPTY_CHK_EN_356 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH0_FLP_EMPTY_CHK_EN_356" */,

    config input SC_PCS_CH1_BYPASS_WORD_ALIGN_1 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_BYPASS_WORD_ALIGN_1" */,

    config input SC_PCS_CH1_BYPASS_DENC_2 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_BYPASS_DENC_2" */,

    config input SC_PCS_CH1_BYPASS_BONDING_3 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_BYPASS_BONDING_3" */,

    config input SC_PCS_CH1_BYPASS_CTC_4 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_BYPASS_CTC_4" */,

    config input SC_PCS_CH1_BYPASS_GEAR_5 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_BYPASS_GEAR_5" */,

    config input SC_PCS_CH1_BYPASS_BRIDGE_6 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_BYPASS_BRIDGE_6" */,

    config input SC_PCS_CH1_BYPASS_BRIDGE_FIFO_7 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_BYPASS_BRIDGE_FIFO_7" */,

    config input SC_PCS_CH1_DATA_MODE_8 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_DATA_MODE_8" */,

    config input SC_PCS_CH1_RX_POLARITY_INV_10_9[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RX_POLARITY_INV_10_9[1],SC_PCS_CH1_RX_POLARITY_INV_10_9[0]" */,

    config input SC_PCS_CH1_ALIGN_MODE_12_11[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_ALIGN_MODE_12_11[1],SC_PCS_CH1_ALIGN_MODE_12_11[0]" */,

    config input SC_PCS_CH1_SAMP_16B_13 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_SAMP_16B_13" */,

    config input SC_PCS_CH1_FARLP_PWR_REDUCTION_14 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_FARLP_PWR_REDUCTION_14" */,

    config input SC_PCS_CH1_COMMA_REG0_25_16[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_COMMA_REG0_25_16[9],SC_PCS_CH1_COMMA_REG0_25_16[8],SC_PCS_CH1_COMMA_REG0_25_16[7],SC_PCS_CH1_COMMA_REG0_25_16[6],SC_PCS_CH1_COMMA_REG0_25_16[5],SC_PCS_CH1_COMMA_REG0_25_16[4],SC_PCS_CH1_COMMA_REG0_25_16[3],SC_PCS_CH1_COMMA_REG0_25_16[2],SC_PCS_CH1_COMMA_REG0_25_16[1],SC_PCS_CH1_COMMA_REG0_25_16[0]" */,

    config input SC_PCS_CH1_COMMA_MASK_35_26[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_COMMA_MASK_35_26[9],SC_PCS_CH1_COMMA_MASK_35_26[8],SC_PCS_CH1_COMMA_MASK_35_26[7],SC_PCS_CH1_COMMA_MASK_35_26[6],SC_PCS_CH1_COMMA_MASK_35_26[5],SC_PCS_CH1_COMMA_MASK_35_26[4],SC_PCS_CH1_COMMA_MASK_35_26[3],SC_PCS_CH1_COMMA_MASK_35_26[2],SC_PCS_CH1_COMMA_MASK_35_26[1],SC_PCS_CH1_COMMA_MASK_35_26[0]" */,

    config input SC_PCS_CH1_CEB_MODE_37_36[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CEB_MODE_37_36[1],SC_PCS_CH1_CEB_MODE_37_36[0]" */,

    config input SC_PCS_CH1_CTC_MODE_39_38[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CTC_MODE_39_38[1],SC_PCS_CH1_CTC_MODE_39_38[0]" */,

    config input SC_PCS_CH1_A_REG_47_40[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_A_REG_47_40[7],SC_PCS_CH1_A_REG_47_40[6],SC_PCS_CH1_A_REG_47_40[5],SC_PCS_CH1_A_REG_47_40[4],SC_PCS_CH1_A_REG_47_40[3],SC_PCS_CH1_A_REG_47_40[2],SC_PCS_CH1_A_REG_47_40[1],SC_PCS_CH1_A_REG_47_40[0]" */,

    config input SC_PCS_CH1_GE_AUTO_EN_49 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_GE_AUTO_EN_49" */,

    config input SC_PCS_CH1_SKIP_REG0_59_50[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_SKIP_REG0_59_50[9],SC_PCS_CH1_SKIP_REG0_59_50[8],SC_PCS_CH1_SKIP_REG0_59_50[7],SC_PCS_CH1_SKIP_REG0_59_50[6],SC_PCS_CH1_SKIP_REG0_59_50[5],SC_PCS_CH1_SKIP_REG0_59_50[4],SC_PCS_CH1_SKIP_REG0_59_50[3],SC_PCS_CH1_SKIP_REG0_59_50[2],SC_PCS_CH1_SKIP_REG0_59_50[1],SC_PCS_CH1_SKIP_REG0_59_50[0]" */,

    config input SC_PCS_CH1_SKIP_REG1_69_60[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_SKIP_REG1_69_60[9],SC_PCS_CH1_SKIP_REG1_69_60[8],SC_PCS_CH1_SKIP_REG1_69_60[7],SC_PCS_CH1_SKIP_REG1_69_60[6],SC_PCS_CH1_SKIP_REG1_69_60[5],SC_PCS_CH1_SKIP_REG1_69_60[4],SC_PCS_CH1_SKIP_REG1_69_60[3],SC_PCS_CH1_SKIP_REG1_69_60[2],SC_PCS_CH1_SKIP_REG1_69_60[1],SC_PCS_CH1_SKIP_REG1_69_60[0]" */,

    config input SC_PCS_CH1_SKIP_REG2_79_70[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_SKIP_REG2_79_70[9],SC_PCS_CH1_SKIP_REG2_79_70[8],SC_PCS_CH1_SKIP_REG2_79_70[7],SC_PCS_CH1_SKIP_REG2_79_70[6],SC_PCS_CH1_SKIP_REG2_79_70[5],SC_PCS_CH1_SKIP_REG2_79_70[4],SC_PCS_CH1_SKIP_REG2_79_70[3],SC_PCS_CH1_SKIP_REG2_79_70[2],SC_PCS_CH1_SKIP_REG2_79_70[1],SC_PCS_CH1_SKIP_REG2_79_70[0]" */,

    config input SC_PCS_CH1_SKIP_REG3_89_80[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_SKIP_REG3_89_80[9],SC_PCS_CH1_SKIP_REG3_89_80[8],SC_PCS_CH1_SKIP_REG3_89_80[7],SC_PCS_CH1_SKIP_REG3_89_80[6],SC_PCS_CH1_SKIP_REG3_89_80[5],SC_PCS_CH1_SKIP_REG3_89_80[4],SC_PCS_CH1_SKIP_REG3_89_80[3],SC_PCS_CH1_SKIP_REG3_89_80[2],SC_PCS_CH1_SKIP_REG3_89_80[1],SC_PCS_CH1_SKIP_REG3_89_80[0]" */,

    config input SC_PCS_CH1_DEC_DUAL_90 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_DEC_DUAL_90" */,

    config input SC_PCS_CH1_SPLIT_91 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_SPLIT_91" */,

    config input SC_PCS_CH1_FIFOFLAG_CTC_92 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_FIFOFLAG_CTC_92" */,

    config input SC_PCS_CH1_COMMA_DET_MODE_93 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_COMMA_DET_MODE_93" */,

    config input SC_PCS_CH1_ERRDETECT_SILENCE_94 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_ERRDETECT_SILENCE_94" */,

    config input SC_PCS_CH1_PMA_RCLK_POLINV_96 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_PMA_RCLK_POLINV_96" */,

    config input SC_PCS_CH1_PCS_RCLK_SEL_98_97[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_PCS_RCLK_SEL_98_97[1],SC_PCS_CH1_PCS_RCLK_SEL_98_97[0]" */,

    config input SC_PCS_CH1_CB_RCLK_SEL_100_99[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CB_RCLK_SEL_100_99[1],SC_PCS_CH1_CB_RCLK_SEL_100_99[0]" */,

    config input SC_PCS_CH1_AFTER_CTC_RCLK_SEL_102_101[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_AFTER_CTC_RCLK_SEL_102_101[1],SC_PCS_CH1_AFTER_CTC_RCLK_SEL_102_101[0]" */,

    config input SC_PCS_CH1_RCLK_POLINV_103 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RCLK_POLINV_103" */,

    config input SC_PCS_CH1_BRIDGE_RCLK_SEL_105_104[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_BRIDGE_RCLK_SEL_105_104[1],SC_PCS_CH1_BRIDGE_RCLK_SEL_105_104[0]" */,

    config input SC_PCS_CH1_PCS_RCLK_EN_106 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_PCS_RCLK_EN_106" */,

    config input SC_PCS_CH1_CB_RCLK_EN_107 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CB_RCLK_EN_107" */,

    config input SC_PCS_CH1_AFTER_CTC_RCLK_EN_108 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_AFTER_CTC_RCLK_EN_108" */,

    config input SC_PCS_CH1_AFTER_CTC_RCLK_EN_GB_109 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_AFTER_CTC_RCLK_EN_GB_109" */,

    config input SC_PCS_CH1_AFTER_CTC_RCLK_SEL_1_111_110[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_AFTER_CTC_RCLK_SEL_1_111_110[1],SC_PCS_CH1_AFTER_CTC_RCLK_SEL_1_111_110[0]" */,

    config input SC_PCS_CH1_PCS_RX_RSTN_112 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_PCS_RX_RSTN_112" */,

    config input SC_PCS_CH1_SLAVE_113 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_SLAVE_113" */,

    config input SC_PCS_CH1_PCIE_SLAVE_114 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_PCIE_SLAVE_114" */,

    config input SC_PCS_CH1_RX_64B66B_67B_116_115[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RX_64B66B_67B_116_115[1],SC_PCS_CH1_RX_64B66B_67B_116_115[0]" */,

    config input SC_PCS_CH1_RX_BRIDGE_CLK_POLINV_117 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RX_BRIDGE_CLK_POLINV_117" */,

    config input SC_PCS_CH1_AFTER_CTC_RCLK_EN_GB_1_118 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_AFTER_CTC_RCLK_EN_GB_1_118" */,

    config input SC_PCS_CH1_PCS_CB_RSTN_120 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_PCS_CB_RSTN_120" */,

    config input SC_PCS_CH1_TX_BRIDGE_GEAR_SEL_128 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_BRIDGE_GEAR_SEL_128" */,

    config input SC_PCS_CH1_TX_BYPASS_BRIDGE_UINT_129 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_BYPASS_BRIDGE_UINT_129" */,

    config input SC_PCS_CH1_TX_BYPASS_BRIDGE_FIFO_130 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_BYPASS_BRIDGE_FIFO_130" */,

    config input SC_PCS_CH1_TX_BYPASS_GEAR_131 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_BYPASS_GEAR_131" */,

    config input SC_PCS_CH1_TX_BYPASS_ENC_132 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_BYPASS_ENC_132" */,

    config input SC_PCS_CH1_TX_BYPASS_BIT_SLIP_133 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_BYPASS_BIT_SLIP_133" */,

    config input SC_PCS_CH1_TX_GEAR_SPLIT_136 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_GEAR_SPLIT_136" */,

    config input SC_PCS_CH1_TX_DRIVE_REG_MODE_138_137[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_DRIVE_REG_MODE_138_137[1],SC_PCS_CH1_TX_DRIVE_REG_MODE_138_137[0]" */,

    config input SC_PCS_CH1_TX_BIT_SLIP_CYCLES_143_139[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_BIT_SLIP_CYCLES_143_139[4],SC_PCS_CH1_TX_BIT_SLIP_CYCLES_143_139[3],SC_PCS_CH1_TX_BIT_SLIP_CYCLES_143_139[2],SC_PCS_CH1_TX_BIT_SLIP_CYCLES_143_139[1],SC_PCS_CH1_TX_BIT_SLIP_CYCLES_143_139[0]" */,

    config input SC_PCS_CH1_INT_TX_MASK_0_144 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_TX_MASK_0_144" */,

    config input SC_PCS_CH1_INT_TX_MASK_1_145 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_TX_MASK_1_145" */,

    config input SC_PCS_CH1_INT_TX_MASK_2_146 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_TX_MASK_2_146" */,

    config input SC_PCS_CH1_INT_TX_CLR_0_152 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_TX_CLR_0_152" */,

    config input SC_PCS_CH1_INT_TX_CLR_1_153 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_TX_CLR_1_153" */,

    config input SC_PCS_CH1_INT_TX_CLR_2_154 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_TX_CLR_2_154" */,

    config input SC_PCS_CH1_TX_PMA_TCLK_POLINV_160 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_PMA_TCLK_POLINV_160" */,

    config input SC_PCS_CH1_TX_PCS_CLK_EN_SEL_161 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_PCS_CLK_EN_SEL_161" */,

    config input SC_PCS_CH1_TX_BRIDGE_TCLK_SEL_162 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_BRIDGE_TCLK_SEL_162" */,

    config input SC_PCS_CH1_TX_TCLK_POLINV_163 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_TCLK_POLINV_163" */,

    config input SC_PCS_CH1_TX_PCS_TCLK_SEL_164 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_PCS_TCLK_SEL_164" */,

    config input SC_PCS_CH1_TX_PCS_TX_RSTN_165 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_PCS_TX_RSTN_165" */,

    config input SC_PCS_CH1_TX_SLAVE_166 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_SLAVE_166" */,

    config input SC_PCS_CH1_TX_GEAR_TCLK_EN_SEL_167 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_GEAR_TCLK_EN_SEL_167" */,

    config input SC_PCS_CH1_DATA_WIDTH_MODE_169_168[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_DATA_WIDTH_MODE_169_168[1],SC_PCS_CH1_DATA_WIDTH_MODE_169_168[0]" */,

    config input SC_PCS_CH1_TX_64B66B_67B_171_170[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_64B66B_67B_171_170[1],SC_PCS_CH1_TX_64B66B_67B_171_170[0]" */,

    config input SC_PCS_CH1_TX_GEAR_TCLK_SEL_172 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_GEAR_TCLK_SEL_172" */,

    config input SC_PCS_CH1_TX_TCLK2FABRIC_SEL_176 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_TCLK2FABRIC_SEL_176" */,

    config input SC_PCS_CH1_TX_OUTZZ_177 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_OUTZZ_177" */,

    config input SC_PCS_CH1_ENC_DUAL_178 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_ENC_DUAL_178" */,

    config input SC_PCS_CH1_TX_BITSLIP_DATA_MODE_179 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_BITSLIP_DATA_MODE_179" */,

    config input SC_PCS_CH1_TX_BRIDGE_CLK_POLINV_180 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_BRIDGE_CLK_POLINV_180" */,

    config input SC_PCS_CH1_COMMA_REG1_193_184[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_COMMA_REG1_193_184[9],SC_PCS_CH1_COMMA_REG1_193_184[8],SC_PCS_CH1_COMMA_REG1_193_184[7],SC_PCS_CH1_COMMA_REG1_193_184[6],SC_PCS_CH1_COMMA_REG1_193_184[5],SC_PCS_CH1_COMMA_REG1_193_184[4],SC_PCS_CH1_COMMA_REG1_193_184[3],SC_PCS_CH1_COMMA_REG1_193_184[2],SC_PCS_CH1_COMMA_REG1_193_184[1],SC_PCS_CH1_COMMA_REG1_193_184[0]" */,

    config input SC_PCS_CH1_RAPID_IMAX_202_200[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RAPID_IMAX_202_200[2],SC_PCS_CH1_RAPID_IMAX_202_200[1],SC_PCS_CH1_RAPID_IMAX_202_200[0]" */,

    config input SC_PCS_CH1_RAPID_VMIN_1_215_208[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RAPID_VMIN_1_215_208[7],SC_PCS_CH1_RAPID_VMIN_1_215_208[6],SC_PCS_CH1_RAPID_VMIN_1_215_208[5],SC_PCS_CH1_RAPID_VMIN_1_215_208[4],SC_PCS_CH1_RAPID_VMIN_1_215_208[3],SC_PCS_CH1_RAPID_VMIN_1_215_208[2],SC_PCS_CH1_RAPID_VMIN_1_215_208[1],SC_PCS_CH1_RAPID_VMIN_1_215_208[0]" */,

    config input SC_PCS_CH1_RAPID_VMIN_2_223_216[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RAPID_VMIN_2_223_216[7],SC_PCS_CH1_RAPID_VMIN_2_223_216[6],SC_PCS_CH1_RAPID_VMIN_2_223_216[5],SC_PCS_CH1_RAPID_VMIN_2_223_216[4],SC_PCS_CH1_RAPID_VMIN_2_223_216[3],SC_PCS_CH1_RAPID_VMIN_2_223_216[2],SC_PCS_CH1_RAPID_VMIN_2_223_216[1],SC_PCS_CH1_RAPID_VMIN_2_223_216[0]" */,

    config input SC_PCS_CH1_RX_PRBS_MODE_227_224[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RX_PRBS_MODE_227_224[3],SC_PCS_CH1_RX_PRBS_MODE_227_224[2],SC_PCS_CH1_RX_PRBS_MODE_227_224[1],SC_PCS_CH1_RX_PRBS_MODE_227_224[0]" */,

    config input SC_PCS_CH1_RX_ERRCNT_CLR_228 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RX_ERRCNT_CLR_228" */,

    config input SC_PCS_CH1_RX_PRBS_ERR_LPBK_229 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RX_PRBS_ERR_LPBK_229" */,

    config input SC_PCS_CH1_TX_PRBS_MODE_235_232[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_PRBS_MODE_235_232[3],SC_PCS_CH1_TX_PRBS_MODE_235_232[2],SC_PCS_CH1_TX_PRBS_MODE_235_232[1],SC_PCS_CH1_TX_PRBS_MODE_235_232[0]" */,

    config input SC_PCS_CH1_TX_INSERT_ER_236 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TX_INSERT_ER_236" */,

    config input SC_PCS_CH1_ENABLE_PRBS_GEN_237 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_ENABLE_PRBS_GEN_237" */,

    config input SC_PCS_CH1_ERR_CNT_247_240[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_ERR_CNT_247_240[7],SC_PCS_CH1_ERR_CNT_247_240[6],SC_PCS_CH1_ERR_CNT_247_240[5],SC_PCS_CH1_ERR_CNT_247_240[4],SC_PCS_CH1_ERR_CNT_247_240[3],SC_PCS_CH1_ERR_CNT_247_240[2],SC_PCS_CH1_ERR_CNT_247_240[1],SC_PCS_CH1_ERR_CNT_247_240[0]" */,

    config input SC_PCS_CH1_DEFAULT_RADDR_251_248[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_DEFAULT_RADDR_251_248[3],SC_PCS_CH1_DEFAULT_RADDR_251_248[2],SC_PCS_CH1_DEFAULT_RADDR_251_248[1],SC_PCS_CH1_DEFAULT_RADDR_251_248[0]" */,

    config input SC_PCS_CH1_MASTER_CHECK_OFFSET_255_252[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_MASTER_CHECK_OFFSET_255_252[3],SC_PCS_CH1_MASTER_CHECK_OFFSET_255_252[2],SC_PCS_CH1_MASTER_CHECK_OFFSET_255_252[1],SC_PCS_CH1_MASTER_CHECK_OFFSET_255_252[0]" */,

    config input SC_PCS_CH1_DELAY_SET_259_256[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_DELAY_SET_259_256[3],SC_PCS_CH1_DELAY_SET_259_256[2],SC_PCS_CH1_DELAY_SET_259_256[1],SC_PCS_CH1_DELAY_SET_259_256[0]" */,

    config input SC_PCS_CH1_SEACH_OFFSET_262_260[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_SEACH_OFFSET_262_260[2],SC_PCS_CH1_SEACH_OFFSET_262_260[1],SC_PCS_CH1_SEACH_OFFSET_262_260[0]" */,

    config input SC_PCS_CH1_CEB_RAPIDLS_MMAX_266_264[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CEB_RAPIDLS_MMAX_266_264[2],SC_PCS_CH1_CEB_RAPIDLS_MMAX_266_264[1],SC_PCS_CH1_CEB_RAPIDLS_MMAX_266_264[0]" */,

    config input SC_PCS_CH1_CTC_AFULL_276_272[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CTC_AFULL_276_272[4],SC_PCS_CH1_CTC_AFULL_276_272[3],SC_PCS_CH1_CTC_AFULL_276_272[2],SC_PCS_CH1_CTC_AFULL_276_272[1],SC_PCS_CH1_CTC_AFULL_276_272[0]" */,

    config input SC_PCS_CH1_CTC_AEMPTY_284_280[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CTC_AEMPTY_284_280[4],SC_PCS_CH1_CTC_AEMPTY_284_280[3],SC_PCS_CH1_CTC_AEMPTY_284_280[2],SC_PCS_CH1_CTC_AEMPTY_284_280[1],SC_PCS_CH1_CTC_AEMPTY_284_280[0]" */,

    config input SC_PCS_CH1_CTC_CONTI_SKP_SET_285 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CTC_CONTI_SKP_SET_285" */,

    config input SC_PCS_CH1_FAR_LOOP_288 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_FAR_LOOP_288" */,

    config input SC_PCS_CH1_NEAR_LOOP_289 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_NEAR_LOOP_289" */,

    config input SC_PCS_CH1_REG_TX2RX_PLOOP_EN_290 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_REG_TX2RX_PLOOP_EN_290" */,

    config input SC_PCS_CH1_REG_TX2RX_SLOOP_EN_291 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_REG_TX2RX_SLOOP_EN_291" */,

    config input SC_PCS_CH1_REG_RX2TX_PLOOP_EN_292 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_REG_RX2TX_PLOOP_EN_292" */,

    config input SC_PCS_CH1_INT_RX_MASK_0_296 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_MASK_0_296" */,

    config input SC_PCS_CH1_INT_RX_MASK_1_297 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_MASK_1_297" */,

    config input SC_PCS_CH1_INT_RX_MASK_2_298 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_MASK_2_298" */,

    config input SC_PCS_CH1_INT_RX_MASK_3_299 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_MASK_3_299" */,

    config input SC_PCS_CH1_INT_RX_MASK_4_300 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_MASK_4_300" */,

    config input SC_PCS_CH1_INT_RX_MASK_5_301 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_MASK_5_301" */,

    config input SC_PCS_CH1_INT_RX_MASK_6_302 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_MASK_6_302" */,

    config input SC_PCS_CH1_INT_RX_MASK_7_303 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_MASK_7_303" */,

    config input SC_PCS_CH1_INT_RX_CLR_0_304 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_CLR_0_304" */,

    config input SC_PCS_CH1_INT_RX_CLR_1_305 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_CLR_1_305" */,

    config input SC_PCS_CH1_INT_RX_CLR_2_306 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_CLR_2_306" */,

    config input SC_PCS_CH1_INT_RX_CLR_3_307 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_CLR_3_307" */,

    config input SC_PCS_CH1_INT_RX_CLR_4_308 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_CLR_4_308" */,

    config input SC_PCS_CH1_INT_RX_CLR_5_309 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_CLR_5_309" */,

    config input SC_PCS_CH1_INT_RX_CLR_6_310 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_CLR_6_310" */,

    config input SC_PCS_CH1_INT_RX_CLR_7_311 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_INT_RX_CLR_7_311" */,

    config input SC_PCS_CH1_CA_RSTN_RX_312 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CA_RSTN_RX_312" */,

    config input SC_PCS_CH1_CA_DYN_DLY_EN_RX_313 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CA_DYN_DLY_EN_RX_313" */,

    config input SC_PCS_CH1_CA_DYN_DLY_SEL_RX_314 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CA_DYN_DLY_SEL_RX_314" */,

    config input SC_PCS_CH1_CA_RX_322_315[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CA_RX_322_315[7],SC_PCS_CH1_CA_RX_322_315[6],SC_PCS_CH1_CA_RX_322_315[5],SC_PCS_CH1_CA_RX_322_315[4],SC_PCS_CH1_CA_RX_322_315[3],SC_PCS_CH1_CA_RX_322_315[2],SC_PCS_CH1_CA_RX_322_315[1],SC_PCS_CH1_CA_RX_322_315[0]" */,

    config input SC_PCS_CH1_CA_RSTN_TX_323 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CA_RSTN_TX_323" */,

    config input SC_PCS_CH1_CA_DYN_DLY_EN_TX_324 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CA_DYN_DLY_EN_TX_324" */,

    config input SC_PCS_CH1_CA_DYN_DLY_SEL_TX_325 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CA_DYN_DLY_SEL_TX_325" */,

    config input SC_PCS_CH1_CA_TX_333_326[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CA_TX_333_326[7],SC_PCS_CH1_CA_TX_333_326[6],SC_PCS_CH1_CA_TX_333_326[5],SC_PCS_CH1_CA_TX_333_326[4],SC_PCS_CH1_CA_TX_333_326[3],SC_PCS_CH1_CA_TX_333_326[2],SC_PCS_CH1_CA_TX_333_326[1],SC_PCS_CH1_CA_TX_333_326[0]" */,

    config input SC_PCS_CH1_RXPRBS_PWR_REDUCTION_334 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RXPRBS_PWR_REDUCTION_334" */,

    config input SC_PCS_CH1_WDALIGN_PWR_REDUCTION_335 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_WDALIGN_PWR_REDUCTION_335" */,

    config input SC_PCS_CH1_RXDEC_PWR_REDUCTION_336 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RXDEC_PWR_REDUCTION_336" */,

    config input SC_PCS_CH1_RXCB_PWR_REDUCTION_337 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RXCB_PWR_REDUCTION_337" */,

    config input SC_PCS_CH1_RXCTC_PWR_REDUCTION_338 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RXCTC_PWR_REDUCTION_338" */,

    config input SC_PCS_CH1_RXGEAR_PWR_REDUCTION_339 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RXGEAR_PWR_REDUCTION_339" */,

    config input SC_PCS_CH1_RXBRG_PWR_REDUCTION_340 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RXBRG_PWR_REDUCTION_340" */,

    config input SC_PCS_CH1_RXTEST_PWR_REDUCTION_341 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RXTEST_PWR_REDUCTION_341" */,

    config input SC_PCS_CH1_TXBRG_PWR_REDUCTION_342 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TXBRG_PWR_REDUCTION_342" */,

    config input SC_PCS_CH1_TXGEAR_PWR_REDUCTION_343 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TXGEAR_PWR_REDUCTION_343" */,

    config input SC_PCS_CH1_TXENC_PWR_REDUCTION_344 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TXENC_PWR_REDUCTION_344" */,

    config input SC_PCS_CH1_TXBSLP_PWR_REDUCTION_345 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TXBSLP_PWR_REDUCTION_345" */,

    config input SC_PCS_CH1_TXPRBS_PWR_REDUCTION_346 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TXPRBS_PWR_REDUCTION_346" */,

    config input SC_PCS_CH1_TXBRG_FULL_CHK_EN_347 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TXBRG_FULL_CHK_EN_347" */,

    config input SC_PCS_CH1_TXBRG_EMPTY_CHK_EN_348 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_TXBRG_EMPTY_CHK_EN_348" */,

    config input SC_PCS_CH1_RXBRG_FULL_CHK_EN_349 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RXBRG_FULL_CHK_EN_349" */,

    config input SC_PCS_CH1_RXBRG_EMPTY_CHK_EN_350 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_RXBRG_EMPTY_CHK_EN_350" */,

    config input SC_PCS_CH1_CTC_FULL_CHK_EN_351 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CTC_FULL_CHK_EN_351" */,

    config input SC_PCS_CH1_CTC_EMPTY_CHK_EN_352 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CTC_EMPTY_CHK_EN_352" */,

    config input SC_PCS_CH1_CEB_FULL_CHK_EN_353 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CEB_FULL_CHK_EN_353" */,

    config input SC_PCS_CH1_CEB_EMPTY_CHK_EN_354 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_CEB_EMPTY_CHK_EN_354" */,

    config input SC_PCS_CH1_FLP_FULL_CHK_EN_355 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_FLP_FULL_CHK_EN_355" */,

    config input SC_PCS_CH1_FLP_EMPTY_CHK_EN_356 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH1_FLP_EMPTY_CHK_EN_356" */,

    config input SC_PCS_CH2_BYPASS_WORD_ALIGN_1 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_BYPASS_WORD_ALIGN_1" */,

    config input SC_PCS_CH2_BYPASS_DENC_2 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_BYPASS_DENC_2" */,

    config input SC_PCS_CH2_BYPASS_BONDING_3 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_BYPASS_BONDING_3" */,

    config input SC_PCS_CH2_BYPASS_CTC_4 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_BYPASS_CTC_4" */,

    config input SC_PCS_CH2_BYPASS_GEAR_5 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_BYPASS_GEAR_5" */,

    config input SC_PCS_CH2_BYPASS_BRIDGE_6 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_BYPASS_BRIDGE_6" */,

    config input SC_PCS_CH2_BYPASS_BRIDGE_FIFO_7 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_BYPASS_BRIDGE_FIFO_7" */,

    config input SC_PCS_CH2_DATA_MODE_8 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_DATA_MODE_8" */,

    config input SC_PCS_CH2_RX_POLARITY_INV_10_9[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RX_POLARITY_INV_10_9[1],SC_PCS_CH2_RX_POLARITY_INV_10_9[0]" */,

    config input SC_PCS_CH2_ALIGN_MODE_12_11[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_ALIGN_MODE_12_11[1],SC_PCS_CH2_ALIGN_MODE_12_11[0]" */,

    config input SC_PCS_CH2_SAMP_16B_13 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_SAMP_16B_13" */,

    config input SC_PCS_CH2_FARLP_PWR_REDUCTION_14 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_FARLP_PWR_REDUCTION_14" */,

    config input SC_PCS_CH2_COMMA_REG0_25_16[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_COMMA_REG0_25_16[9],SC_PCS_CH2_COMMA_REG0_25_16[8],SC_PCS_CH2_COMMA_REG0_25_16[7],SC_PCS_CH2_COMMA_REG0_25_16[6],SC_PCS_CH2_COMMA_REG0_25_16[5],SC_PCS_CH2_COMMA_REG0_25_16[4],SC_PCS_CH2_COMMA_REG0_25_16[3],SC_PCS_CH2_COMMA_REG0_25_16[2],SC_PCS_CH2_COMMA_REG0_25_16[1],SC_PCS_CH2_COMMA_REG0_25_16[0]" */,

    config input SC_PCS_CH2_COMMA_MASK_35_26[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_COMMA_MASK_35_26[9],SC_PCS_CH2_COMMA_MASK_35_26[8],SC_PCS_CH2_COMMA_MASK_35_26[7],SC_PCS_CH2_COMMA_MASK_35_26[6],SC_PCS_CH2_COMMA_MASK_35_26[5],SC_PCS_CH2_COMMA_MASK_35_26[4],SC_PCS_CH2_COMMA_MASK_35_26[3],SC_PCS_CH2_COMMA_MASK_35_26[2],SC_PCS_CH2_COMMA_MASK_35_26[1],SC_PCS_CH2_COMMA_MASK_35_26[0]" */,

    config input SC_PCS_CH2_CEB_MODE_37_36[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CEB_MODE_37_36[1],SC_PCS_CH2_CEB_MODE_37_36[0]" */,

    config input SC_PCS_CH2_CTC_MODE_39_38[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CTC_MODE_39_38[1],SC_PCS_CH2_CTC_MODE_39_38[0]" */,

    config input SC_PCS_CH2_A_REG_47_40[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_A_REG_47_40[7],SC_PCS_CH2_A_REG_47_40[6],SC_PCS_CH2_A_REG_47_40[5],SC_PCS_CH2_A_REG_47_40[4],SC_PCS_CH2_A_REG_47_40[3],SC_PCS_CH2_A_REG_47_40[2],SC_PCS_CH2_A_REG_47_40[1],SC_PCS_CH2_A_REG_47_40[0]" */,

    config input SC_PCS_CH2_GE_AUTO_EN_49 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_GE_AUTO_EN_49" */,

    config input SC_PCS_CH2_SKIP_REG0_59_50[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_SKIP_REG0_59_50[9],SC_PCS_CH2_SKIP_REG0_59_50[8],SC_PCS_CH2_SKIP_REG0_59_50[7],SC_PCS_CH2_SKIP_REG0_59_50[6],SC_PCS_CH2_SKIP_REG0_59_50[5],SC_PCS_CH2_SKIP_REG0_59_50[4],SC_PCS_CH2_SKIP_REG0_59_50[3],SC_PCS_CH2_SKIP_REG0_59_50[2],SC_PCS_CH2_SKIP_REG0_59_50[1],SC_PCS_CH2_SKIP_REG0_59_50[0]" */,

    config input SC_PCS_CH2_SKIP_REG1_69_60[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_SKIP_REG1_69_60[9],SC_PCS_CH2_SKIP_REG1_69_60[8],SC_PCS_CH2_SKIP_REG1_69_60[7],SC_PCS_CH2_SKIP_REG1_69_60[6],SC_PCS_CH2_SKIP_REG1_69_60[5],SC_PCS_CH2_SKIP_REG1_69_60[4],SC_PCS_CH2_SKIP_REG1_69_60[3],SC_PCS_CH2_SKIP_REG1_69_60[2],SC_PCS_CH2_SKIP_REG1_69_60[1],SC_PCS_CH2_SKIP_REG1_69_60[0]" */,

    config input SC_PCS_CH2_SKIP_REG2_79_70[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_SKIP_REG2_79_70[9],SC_PCS_CH2_SKIP_REG2_79_70[8],SC_PCS_CH2_SKIP_REG2_79_70[7],SC_PCS_CH2_SKIP_REG2_79_70[6],SC_PCS_CH2_SKIP_REG2_79_70[5],SC_PCS_CH2_SKIP_REG2_79_70[4],SC_PCS_CH2_SKIP_REG2_79_70[3],SC_PCS_CH2_SKIP_REG2_79_70[2],SC_PCS_CH2_SKIP_REG2_79_70[1],SC_PCS_CH2_SKIP_REG2_79_70[0]" */,

    config input SC_PCS_CH2_SKIP_REG3_89_80[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_SKIP_REG3_89_80[9],SC_PCS_CH2_SKIP_REG3_89_80[8],SC_PCS_CH2_SKIP_REG3_89_80[7],SC_PCS_CH2_SKIP_REG3_89_80[6],SC_PCS_CH2_SKIP_REG3_89_80[5],SC_PCS_CH2_SKIP_REG3_89_80[4],SC_PCS_CH2_SKIP_REG3_89_80[3],SC_PCS_CH2_SKIP_REG3_89_80[2],SC_PCS_CH2_SKIP_REG3_89_80[1],SC_PCS_CH2_SKIP_REG3_89_80[0]" */,

    config input SC_PCS_CH2_DEC_DUAL_90 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_DEC_DUAL_90" */,

    config input SC_PCS_CH2_SPLIT_91 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_SPLIT_91" */,

    config input SC_PCS_CH2_FIFOFLAG_CTC_92 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_FIFOFLAG_CTC_92" */,

    config input SC_PCS_CH2_COMMA_DET_MODE_93 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_COMMA_DET_MODE_93" */,

    config input SC_PCS_CH2_ERRDETECT_SILENCE_94 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_ERRDETECT_SILENCE_94" */,

    config input SC_PCS_CH2_PMA_RCLK_POLINV_96 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_PMA_RCLK_POLINV_96" */,

    config input SC_PCS_CH2_PCS_RCLK_SEL_98_97[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_PCS_RCLK_SEL_98_97[1],SC_PCS_CH2_PCS_RCLK_SEL_98_97[0]" */,

    config input SC_PCS_CH2_CB_RCLK_SEL_100_99[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CB_RCLK_SEL_100_99[1],SC_PCS_CH2_CB_RCLK_SEL_100_99[0]" */,

    config input SC_PCS_CH2_AFTER_CTC_RCLK_SEL_102_101[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_AFTER_CTC_RCLK_SEL_102_101[1],SC_PCS_CH2_AFTER_CTC_RCLK_SEL_102_101[0]" */,

    config input SC_PCS_CH2_RCLK_POLINV_103 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RCLK_POLINV_103" */,

    config input SC_PCS_CH2_BRIDGE_RCLK_SEL_105_104[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_BRIDGE_RCLK_SEL_105_104[1],SC_PCS_CH2_BRIDGE_RCLK_SEL_105_104[0]" */,

    config input SC_PCS_CH2_PCS_RCLK_EN_106 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_PCS_RCLK_EN_106" */,

    config input SC_PCS_CH2_CB_RCLK_EN_107 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CB_RCLK_EN_107" */,

    config input SC_PCS_CH2_AFTER_CTC_RCLK_EN_108 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_AFTER_CTC_RCLK_EN_108" */,

    config input SC_PCS_CH2_AFTER_CTC_RCLK_EN_GB_109 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_AFTER_CTC_RCLK_EN_GB_109" */,

    config input SC_PCS_CH2_AFTER_CTC_RCLK_SEL_1_111_110[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_AFTER_CTC_RCLK_SEL_1_111_110[1],SC_PCS_CH2_AFTER_CTC_RCLK_SEL_1_111_110[0]" */,

    config input SC_PCS_CH2_PCS_RX_RSTN_112 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_PCS_RX_RSTN_112" */,

    config input SC_PCS_CH2_SLAVE_113 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_SLAVE_113" */,

    config input SC_PCS_CH2_PCIE_SLAVE_114 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_PCIE_SLAVE_114" */,

    config input SC_PCS_CH2_RX_64B66B_67B_116_115[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RX_64B66B_67B_116_115[1],SC_PCS_CH2_RX_64B66B_67B_116_115[0]" */,

    config input SC_PCS_CH2_RX_BRIDGE_CLK_POLINV_117 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RX_BRIDGE_CLK_POLINV_117" */,

    config input SC_PCS_CH2_AFTER_CTC_RCLK_EN_GB_1_118 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_AFTER_CTC_RCLK_EN_GB_1_118" */,

    config input SC_PCS_CH2_PCS_CB_RSTN_120 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_PCS_CB_RSTN_120" */,

    config input SC_PCS_CH2_TX_BRIDGE_GEAR_SEL_128 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_BRIDGE_GEAR_SEL_128" */,

    config input SC_PCS_CH2_TX_BYPASS_BRIDGE_UINT_129 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_BYPASS_BRIDGE_UINT_129" */,

    config input SC_PCS_CH2_TX_BYPASS_BRIDGE_FIFO_130 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_BYPASS_BRIDGE_FIFO_130" */,

    config input SC_PCS_CH2_TX_BYPASS_GEAR_131 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_BYPASS_GEAR_131" */,

    config input SC_PCS_CH2_TX_BYPASS_ENC_132 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_BYPASS_ENC_132" */,

    config input SC_PCS_CH2_TX_BYPASS_BIT_SLIP_133 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_BYPASS_BIT_SLIP_133" */,

    config input SC_PCS_CH2_TX_GEAR_SPLIT_136 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_GEAR_SPLIT_136" */,

    config input SC_PCS_CH2_TX_DRIVE_REG_MODE_138_137[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_DRIVE_REG_MODE_138_137[1],SC_PCS_CH2_TX_DRIVE_REG_MODE_138_137[0]" */,

    config input SC_PCS_CH2_TX_BIT_SLIP_CYCLES_143_139[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_BIT_SLIP_CYCLES_143_139[4],SC_PCS_CH2_TX_BIT_SLIP_CYCLES_143_139[3],SC_PCS_CH2_TX_BIT_SLIP_CYCLES_143_139[2],SC_PCS_CH2_TX_BIT_SLIP_CYCLES_143_139[1],SC_PCS_CH2_TX_BIT_SLIP_CYCLES_143_139[0]" */,

    config input SC_PCS_CH2_INT_TX_MASK_0_144 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_TX_MASK_0_144" */,

    config input SC_PCS_CH2_INT_TX_MASK_1_145 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_TX_MASK_1_145" */,

    config input SC_PCS_CH2_INT_TX_MASK_2_146 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_TX_MASK_2_146" */,

    config input SC_PCS_CH2_INT_TX_CLR_0_152 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_TX_CLR_0_152" */,

    config input SC_PCS_CH2_INT_TX_CLR_1_153 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_TX_CLR_1_153" */,

    config input SC_PCS_CH2_INT_TX_CLR_2_154 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_TX_CLR_2_154" */,

    config input SC_PCS_CH2_TX_PMA_TCLK_POLINV_160 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_PMA_TCLK_POLINV_160" */,

    config input SC_PCS_CH2_TX_PCS_CLK_EN_SEL_161 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_PCS_CLK_EN_SEL_161" */,

    config input SC_PCS_CH2_TX_BRIDGE_TCLK_SEL_162 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_BRIDGE_TCLK_SEL_162" */,

    config input SC_PCS_CH2_TX_TCLK_POLINV_163 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_TCLK_POLINV_163" */,

    config input SC_PCS_CH2_TX_PCS_TCLK_SEL_164 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_PCS_TCLK_SEL_164" */,

    config input SC_PCS_CH2_TX_PCS_TX_RSTN_165 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_PCS_TX_RSTN_165" */,

    config input SC_PCS_CH2_TX_SLAVE_166 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_SLAVE_166" */,

    config input SC_PCS_CH2_TX_GEAR_TCLK_EN_SEL_167 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_GEAR_TCLK_EN_SEL_167" */,

    config input SC_PCS_CH2_DATA_WIDTH_MODE_169_168[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_DATA_WIDTH_MODE_169_168[1],SC_PCS_CH2_DATA_WIDTH_MODE_169_168[0]" */,

    config input SC_PCS_CH2_TX_64B66B_67B_171_170[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_64B66B_67B_171_170[1],SC_PCS_CH2_TX_64B66B_67B_171_170[0]" */,

    config input SC_PCS_CH2_TX_GEAR_TCLK_SEL_172 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_GEAR_TCLK_SEL_172" */,

    config input SC_PCS_CH2_TX_TCLK2FABRIC_SEL_176 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_TCLK2FABRIC_SEL_176" */,

    config input SC_PCS_CH2_TX_OUTZZ_177 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_OUTZZ_177" */,

    config input SC_PCS_CH2_ENC_DUAL_178 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_ENC_DUAL_178" */,

    config input SC_PCS_CH2_TX_BITSLIP_DATA_MODE_179 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_BITSLIP_DATA_MODE_179" */,

    config input SC_PCS_CH2_TX_BRIDGE_CLK_POLINV_180 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_BRIDGE_CLK_POLINV_180" */,

    config input SC_PCS_CH2_COMMA_REG1_193_184[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_COMMA_REG1_193_184[9],SC_PCS_CH2_COMMA_REG1_193_184[8],SC_PCS_CH2_COMMA_REG1_193_184[7],SC_PCS_CH2_COMMA_REG1_193_184[6],SC_PCS_CH2_COMMA_REG1_193_184[5],SC_PCS_CH2_COMMA_REG1_193_184[4],SC_PCS_CH2_COMMA_REG1_193_184[3],SC_PCS_CH2_COMMA_REG1_193_184[2],SC_PCS_CH2_COMMA_REG1_193_184[1],SC_PCS_CH2_COMMA_REG1_193_184[0]" */,

    config input SC_PCS_CH2_RAPID_IMAX_202_200[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RAPID_IMAX_202_200[2],SC_PCS_CH2_RAPID_IMAX_202_200[1],SC_PCS_CH2_RAPID_IMAX_202_200[0]" */,

    config input SC_PCS_CH2_RAPID_VMIN_1_215_208[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RAPID_VMIN_1_215_208[7],SC_PCS_CH2_RAPID_VMIN_1_215_208[6],SC_PCS_CH2_RAPID_VMIN_1_215_208[5],SC_PCS_CH2_RAPID_VMIN_1_215_208[4],SC_PCS_CH2_RAPID_VMIN_1_215_208[3],SC_PCS_CH2_RAPID_VMIN_1_215_208[2],SC_PCS_CH2_RAPID_VMIN_1_215_208[1],SC_PCS_CH2_RAPID_VMIN_1_215_208[0]" */,

    config input SC_PCS_CH2_RAPID_VMIN_2_223_216[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RAPID_VMIN_2_223_216[7],SC_PCS_CH2_RAPID_VMIN_2_223_216[6],SC_PCS_CH2_RAPID_VMIN_2_223_216[5],SC_PCS_CH2_RAPID_VMIN_2_223_216[4],SC_PCS_CH2_RAPID_VMIN_2_223_216[3],SC_PCS_CH2_RAPID_VMIN_2_223_216[2],SC_PCS_CH2_RAPID_VMIN_2_223_216[1],SC_PCS_CH2_RAPID_VMIN_2_223_216[0]" */,

    config input SC_PCS_CH2_RX_PRBS_MODE_227_224[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RX_PRBS_MODE_227_224[3],SC_PCS_CH2_RX_PRBS_MODE_227_224[2],SC_PCS_CH2_RX_PRBS_MODE_227_224[1],SC_PCS_CH2_RX_PRBS_MODE_227_224[0]" */,

    config input SC_PCS_CH2_RX_ERRCNT_CLR_228 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RX_ERRCNT_CLR_228" */,

    config input SC_PCS_CH2_RX_PRBS_ERR_LPBK_229 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RX_PRBS_ERR_LPBK_229" */,

    config input SC_PCS_CH2_TX_PRBS_MODE_235_232[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_PRBS_MODE_235_232[3],SC_PCS_CH2_TX_PRBS_MODE_235_232[2],SC_PCS_CH2_TX_PRBS_MODE_235_232[1],SC_PCS_CH2_TX_PRBS_MODE_235_232[0]" */,

    config input SC_PCS_CH2_TX_INSERT_ER_236 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TX_INSERT_ER_236" */,

    config input SC_PCS_CH2_ENABLE_PRBS_GEN_237 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_ENABLE_PRBS_GEN_237" */,

    config input SC_PCS_CH2_ERR_CNT_247_240[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_ERR_CNT_247_240[7],SC_PCS_CH2_ERR_CNT_247_240[6],SC_PCS_CH2_ERR_CNT_247_240[5],SC_PCS_CH2_ERR_CNT_247_240[4],SC_PCS_CH2_ERR_CNT_247_240[3],SC_PCS_CH2_ERR_CNT_247_240[2],SC_PCS_CH2_ERR_CNT_247_240[1],SC_PCS_CH2_ERR_CNT_247_240[0]" */,

    config input SC_PCS_CH2_DEFAULT_RADDR_251_248[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_DEFAULT_RADDR_251_248[3],SC_PCS_CH2_DEFAULT_RADDR_251_248[2],SC_PCS_CH2_DEFAULT_RADDR_251_248[1],SC_PCS_CH2_DEFAULT_RADDR_251_248[0]" */,

    config input SC_PCS_CH2_MASTER_CHECK_OFFSET_255_252[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_MASTER_CHECK_OFFSET_255_252[3],SC_PCS_CH2_MASTER_CHECK_OFFSET_255_252[2],SC_PCS_CH2_MASTER_CHECK_OFFSET_255_252[1],SC_PCS_CH2_MASTER_CHECK_OFFSET_255_252[0]" */,

    config input SC_PCS_CH2_DELAY_SET_259_256[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_DELAY_SET_259_256[3],SC_PCS_CH2_DELAY_SET_259_256[2],SC_PCS_CH2_DELAY_SET_259_256[1],SC_PCS_CH2_DELAY_SET_259_256[0]" */,

    config input SC_PCS_CH2_SEACH_OFFSET_262_260[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_SEACH_OFFSET_262_260[2],SC_PCS_CH2_SEACH_OFFSET_262_260[1],SC_PCS_CH2_SEACH_OFFSET_262_260[0]" */,

    config input SC_PCS_CH2_CEB_RAPIDLS_MMAX_266_264[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CEB_RAPIDLS_MMAX_266_264[2],SC_PCS_CH2_CEB_RAPIDLS_MMAX_266_264[1],SC_PCS_CH2_CEB_RAPIDLS_MMAX_266_264[0]" */,

    config input SC_PCS_CH2_CTC_AFULL_276_272[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CTC_AFULL_276_272[4],SC_PCS_CH2_CTC_AFULL_276_272[3],SC_PCS_CH2_CTC_AFULL_276_272[2],SC_PCS_CH2_CTC_AFULL_276_272[1],SC_PCS_CH2_CTC_AFULL_276_272[0]" */,

    config input SC_PCS_CH2_CTC_AEMPTY_284_280[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CTC_AEMPTY_284_280[4],SC_PCS_CH2_CTC_AEMPTY_284_280[3],SC_PCS_CH2_CTC_AEMPTY_284_280[2],SC_PCS_CH2_CTC_AEMPTY_284_280[1],SC_PCS_CH2_CTC_AEMPTY_284_280[0]" */,

    config input SC_PCS_CH2_CTC_CONTI_SKP_SET_285 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CTC_CONTI_SKP_SET_285" */,

    config input SC_PCS_CH2_FAR_LOOP_288 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_FAR_LOOP_288" */,

    config input SC_PCS_CH2_NEAR_LOOP_289 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_NEAR_LOOP_289" */,

    config input SC_PCS_CH2_REG_TX2RX_PLOOP_EN_290 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_REG_TX2RX_PLOOP_EN_290" */,

    config input SC_PCS_CH2_REG_TX2RX_SLOOP_EN_291 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_REG_TX2RX_SLOOP_EN_291" */,

    config input SC_PCS_CH2_REG_RX2TX_PLOOP_EN_292 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_REG_RX2TX_PLOOP_EN_292" */,

    config input SC_PCS_CH2_INT_RX_MASK_0_296 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_MASK_0_296" */,

    config input SC_PCS_CH2_INT_RX_MASK_1_297 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_MASK_1_297" */,

    config input SC_PCS_CH2_INT_RX_MASK_2_298 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_MASK_2_298" */,

    config input SC_PCS_CH2_INT_RX_MASK_3_299 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_MASK_3_299" */,

    config input SC_PCS_CH2_INT_RX_MASK_4_300 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_MASK_4_300" */,

    config input SC_PCS_CH2_INT_RX_MASK_5_301 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_MASK_5_301" */,

    config input SC_PCS_CH2_INT_RX_MASK_6_302 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_MASK_6_302" */,

    config input SC_PCS_CH2_INT_RX_MASK_7_303 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_MASK_7_303" */,

    config input SC_PCS_CH2_INT_RX_CLR_0_304 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_CLR_0_304" */,

    config input SC_PCS_CH2_INT_RX_CLR_1_305 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_CLR_1_305" */,

    config input SC_PCS_CH2_INT_RX_CLR_2_306 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_CLR_2_306" */,

    config input SC_PCS_CH2_INT_RX_CLR_3_307 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_CLR_3_307" */,

    config input SC_PCS_CH2_INT_RX_CLR_4_308 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_CLR_4_308" */,

    config input SC_PCS_CH2_INT_RX_CLR_5_309 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_CLR_5_309" */,

    config input SC_PCS_CH2_INT_RX_CLR_6_310 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_CLR_6_310" */,

    config input SC_PCS_CH2_INT_RX_CLR_7_311 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_INT_RX_CLR_7_311" */,

    config input SC_PCS_CH2_CA_RSTN_RX_312 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CA_RSTN_RX_312" */,

    config input SC_PCS_CH2_CA_DYN_DLY_EN_RX_313 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CA_DYN_DLY_EN_RX_313" */,

    config input SC_PCS_CH2_CA_DYN_DLY_SEL_RX_314 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CA_DYN_DLY_SEL_RX_314" */,

    config input SC_PCS_CH2_CA_RX_322_315[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CA_RX_322_315[7],SC_PCS_CH2_CA_RX_322_315[6],SC_PCS_CH2_CA_RX_322_315[5],SC_PCS_CH2_CA_RX_322_315[4],SC_PCS_CH2_CA_RX_322_315[3],SC_PCS_CH2_CA_RX_322_315[2],SC_PCS_CH2_CA_RX_322_315[1],SC_PCS_CH2_CA_RX_322_315[0]" */,

    config input SC_PCS_CH2_CA_RSTN_TX_323 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CA_RSTN_TX_323" */,

    config input SC_PCS_CH2_CA_DYN_DLY_EN_TX_324 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CA_DYN_DLY_EN_TX_324" */,

    config input SC_PCS_CH2_CA_DYN_DLY_SEL_TX_325 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CA_DYN_DLY_SEL_TX_325" */,

    config input SC_PCS_CH2_CA_TX_333_326[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CA_TX_333_326[7],SC_PCS_CH2_CA_TX_333_326[6],SC_PCS_CH2_CA_TX_333_326[5],SC_PCS_CH2_CA_TX_333_326[4],SC_PCS_CH2_CA_TX_333_326[3],SC_PCS_CH2_CA_TX_333_326[2],SC_PCS_CH2_CA_TX_333_326[1],SC_PCS_CH2_CA_TX_333_326[0]" */,

    config input SC_PCS_CH2_RXPRBS_PWR_REDUCTION_334 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RXPRBS_PWR_REDUCTION_334" */,

    config input SC_PCS_CH2_WDALIGN_PWR_REDUCTION_335 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_WDALIGN_PWR_REDUCTION_335" */,

    config input SC_PCS_CH2_RXDEC_PWR_REDUCTION_336 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RXDEC_PWR_REDUCTION_336" */,

    config input SC_PCS_CH2_RXCB_PWR_REDUCTION_337 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RXCB_PWR_REDUCTION_337" */,

    config input SC_PCS_CH2_RXCTC_PWR_REDUCTION_338 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RXCTC_PWR_REDUCTION_338" */,

    config input SC_PCS_CH2_RXGEAR_PWR_REDUCTION_339 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RXGEAR_PWR_REDUCTION_339" */,

    config input SC_PCS_CH2_RXBRG_PWR_REDUCTION_340 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RXBRG_PWR_REDUCTION_340" */,

    config input SC_PCS_CH2_RXTEST_PWR_REDUCTION_341 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RXTEST_PWR_REDUCTION_341" */,

    config input SC_PCS_CH2_TXBRG_PWR_REDUCTION_342 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TXBRG_PWR_REDUCTION_342" */,

    config input SC_PCS_CH2_TXGEAR_PWR_REDUCTION_343 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TXGEAR_PWR_REDUCTION_343" */,

    config input SC_PCS_CH2_TXENC_PWR_REDUCTION_344 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TXENC_PWR_REDUCTION_344" */,

    config input SC_PCS_CH2_TXBSLP_PWR_REDUCTION_345 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TXBSLP_PWR_REDUCTION_345" */,

    config input SC_PCS_CH2_TXPRBS_PWR_REDUCTION_346 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TXPRBS_PWR_REDUCTION_346" */,

    config input SC_PCS_CH2_TXBRG_FULL_CHK_EN_347 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TXBRG_FULL_CHK_EN_347" */,

    config input SC_PCS_CH2_TXBRG_EMPTY_CHK_EN_348 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_TXBRG_EMPTY_CHK_EN_348" */,

    config input SC_PCS_CH2_RXBRG_FULL_CHK_EN_349 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RXBRG_FULL_CHK_EN_349" */,

    config input SC_PCS_CH2_RXBRG_EMPTY_CHK_EN_350 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_RXBRG_EMPTY_CHK_EN_350" */,

    config input SC_PCS_CH2_CTC_FULL_CHK_EN_351 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CTC_FULL_CHK_EN_351" */,

    config input SC_PCS_CH2_CTC_EMPTY_CHK_EN_352 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CTC_EMPTY_CHK_EN_352" */,

    config input SC_PCS_CH2_CEB_FULL_CHK_EN_353 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CEB_FULL_CHK_EN_353" */,

    config input SC_PCS_CH2_CEB_EMPTY_CHK_EN_354 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_CEB_EMPTY_CHK_EN_354" */,

    config input SC_PCS_CH2_FLP_FULL_CHK_EN_355 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_FLP_FULL_CHK_EN_355" */,

    config input SC_PCS_CH2_FLP_EMPTY_CHK_EN_356 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH2_FLP_EMPTY_CHK_EN_356" */,

    config input SC_PCS_CH3_BYPASS_WORD_ALIGN_1 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_BYPASS_WORD_ALIGN_1" */,

    config input SC_PCS_CH3_BYPASS_DENC_2 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_BYPASS_DENC_2" */,

    config input SC_PCS_CH3_BYPASS_BONDING_3 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_BYPASS_BONDING_3" */,

    config input SC_PCS_CH3_BYPASS_CTC_4 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_BYPASS_CTC_4" */,

    config input SC_PCS_CH3_BYPASS_GEAR_5 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_BYPASS_GEAR_5" */,

    config input SC_PCS_CH3_BYPASS_BRIDGE_6 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_BYPASS_BRIDGE_6" */,

    config input SC_PCS_CH3_BYPASS_BRIDGE_FIFO_7 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_BYPASS_BRIDGE_FIFO_7" */,

    config input SC_PCS_CH3_DATA_MODE_8 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_DATA_MODE_8" */,

    config input SC_PCS_CH3_RX_POLARITY_INV_10_9[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RX_POLARITY_INV_10_9[1],SC_PCS_CH3_RX_POLARITY_INV_10_9[0]" */,

    config input SC_PCS_CH3_ALIGN_MODE_12_11[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_ALIGN_MODE_12_11[1],SC_PCS_CH3_ALIGN_MODE_12_11[0]" */,

    config input SC_PCS_CH3_SAMP_16B_13 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_SAMP_16B_13" */,

    config input SC_PCS_CH3_FARLP_PWR_REDUCTION_14 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_FARLP_PWR_REDUCTION_14" */,

    config input SC_PCS_CH3_COMMA_REG0_25_16[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_COMMA_REG0_25_16[9],SC_PCS_CH3_COMMA_REG0_25_16[8],SC_PCS_CH3_COMMA_REG0_25_16[7],SC_PCS_CH3_COMMA_REG0_25_16[6],SC_PCS_CH3_COMMA_REG0_25_16[5],SC_PCS_CH3_COMMA_REG0_25_16[4],SC_PCS_CH3_COMMA_REG0_25_16[3],SC_PCS_CH3_COMMA_REG0_25_16[2],SC_PCS_CH3_COMMA_REG0_25_16[1],SC_PCS_CH3_COMMA_REG0_25_16[0]" */,

    config input SC_PCS_CH3_COMMA_MASK_35_26[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_COMMA_MASK_35_26[9],SC_PCS_CH3_COMMA_MASK_35_26[8],SC_PCS_CH3_COMMA_MASK_35_26[7],SC_PCS_CH3_COMMA_MASK_35_26[6],SC_PCS_CH3_COMMA_MASK_35_26[5],SC_PCS_CH3_COMMA_MASK_35_26[4],SC_PCS_CH3_COMMA_MASK_35_26[3],SC_PCS_CH3_COMMA_MASK_35_26[2],SC_PCS_CH3_COMMA_MASK_35_26[1],SC_PCS_CH3_COMMA_MASK_35_26[0]" */,

    config input SC_PCS_CH3_CEB_MODE_37_36[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CEB_MODE_37_36[1],SC_PCS_CH3_CEB_MODE_37_36[0]" */,

    config input SC_PCS_CH3_CTC_MODE_39_38[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CTC_MODE_39_38[1],SC_PCS_CH3_CTC_MODE_39_38[0]" */,

    config input SC_PCS_CH3_A_REG_47_40[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_A_REG_47_40[7],SC_PCS_CH3_A_REG_47_40[6],SC_PCS_CH3_A_REG_47_40[5],SC_PCS_CH3_A_REG_47_40[4],SC_PCS_CH3_A_REG_47_40[3],SC_PCS_CH3_A_REG_47_40[2],SC_PCS_CH3_A_REG_47_40[1],SC_PCS_CH3_A_REG_47_40[0]" */,

    config input SC_PCS_CH3_GE_AUTO_EN_49 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_GE_AUTO_EN_49" */,

    config input SC_PCS_CH3_SKIP_REG0_59_50[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_SKIP_REG0_59_50[9],SC_PCS_CH3_SKIP_REG0_59_50[8],SC_PCS_CH3_SKIP_REG0_59_50[7],SC_PCS_CH3_SKIP_REG0_59_50[6],SC_PCS_CH3_SKIP_REG0_59_50[5],SC_PCS_CH3_SKIP_REG0_59_50[4],SC_PCS_CH3_SKIP_REG0_59_50[3],SC_PCS_CH3_SKIP_REG0_59_50[2],SC_PCS_CH3_SKIP_REG0_59_50[1],SC_PCS_CH3_SKIP_REG0_59_50[0]" */,

    config input SC_PCS_CH3_SKIP_REG1_69_60[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_SKIP_REG1_69_60[9],SC_PCS_CH3_SKIP_REG1_69_60[8],SC_PCS_CH3_SKIP_REG1_69_60[7],SC_PCS_CH3_SKIP_REG1_69_60[6],SC_PCS_CH3_SKIP_REG1_69_60[5],SC_PCS_CH3_SKIP_REG1_69_60[4],SC_PCS_CH3_SKIP_REG1_69_60[3],SC_PCS_CH3_SKIP_REG1_69_60[2],SC_PCS_CH3_SKIP_REG1_69_60[1],SC_PCS_CH3_SKIP_REG1_69_60[0]" */,

    config input SC_PCS_CH3_SKIP_REG2_79_70[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_SKIP_REG2_79_70[9],SC_PCS_CH3_SKIP_REG2_79_70[8],SC_PCS_CH3_SKIP_REG2_79_70[7],SC_PCS_CH3_SKIP_REG2_79_70[6],SC_PCS_CH3_SKIP_REG2_79_70[5],SC_PCS_CH3_SKIP_REG2_79_70[4],SC_PCS_CH3_SKIP_REG2_79_70[3],SC_PCS_CH3_SKIP_REG2_79_70[2],SC_PCS_CH3_SKIP_REG2_79_70[1],SC_PCS_CH3_SKIP_REG2_79_70[0]" */,

    config input SC_PCS_CH3_SKIP_REG3_89_80[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_SKIP_REG3_89_80[9],SC_PCS_CH3_SKIP_REG3_89_80[8],SC_PCS_CH3_SKIP_REG3_89_80[7],SC_PCS_CH3_SKIP_REG3_89_80[6],SC_PCS_CH3_SKIP_REG3_89_80[5],SC_PCS_CH3_SKIP_REG3_89_80[4],SC_PCS_CH3_SKIP_REG3_89_80[3],SC_PCS_CH3_SKIP_REG3_89_80[2],SC_PCS_CH3_SKIP_REG3_89_80[1],SC_PCS_CH3_SKIP_REG3_89_80[0]" */,

    config input SC_PCS_CH3_DEC_DUAL_90 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_DEC_DUAL_90" */,

    config input SC_PCS_CH3_SPLIT_91 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_SPLIT_91" */,

    config input SC_PCS_CH3_FIFOFLAG_CTC_92 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_FIFOFLAG_CTC_92" */,

    config input SC_PCS_CH3_COMMA_DET_MODE_93 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_COMMA_DET_MODE_93" */,

    config input SC_PCS_CH3_ERRDETECT_SILENCE_94 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_ERRDETECT_SILENCE_94" */,

    config input SC_PCS_CH3_PMA_RCLK_POLINV_96 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_PMA_RCLK_POLINV_96" */,

    config input SC_PCS_CH3_PCS_RCLK_SEL_98_97[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_PCS_RCLK_SEL_98_97[1],SC_PCS_CH3_PCS_RCLK_SEL_98_97[0]" */,

    config input SC_PCS_CH3_CB_RCLK_SEL_100_99[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CB_RCLK_SEL_100_99[1],SC_PCS_CH3_CB_RCLK_SEL_100_99[0]" */,

    config input SC_PCS_CH3_AFTER_CTC_RCLK_SEL_102_101[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_AFTER_CTC_RCLK_SEL_102_101[1],SC_PCS_CH3_AFTER_CTC_RCLK_SEL_102_101[0]" */,

    config input SC_PCS_CH3_RCLK_POLINV_103 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RCLK_POLINV_103" */,

    config input SC_PCS_CH3_BRIDGE_RCLK_SEL_105_104[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_BRIDGE_RCLK_SEL_105_104[1],SC_PCS_CH3_BRIDGE_RCLK_SEL_105_104[0]" */,

    config input SC_PCS_CH3_PCS_RCLK_EN_106 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_PCS_RCLK_EN_106" */,

    config input SC_PCS_CH3_CB_RCLK_EN_107 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CB_RCLK_EN_107" */,

    config input SC_PCS_CH3_AFTER_CTC_RCLK_EN_108 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_AFTER_CTC_RCLK_EN_108" */,

    config input SC_PCS_CH3_AFTER_CTC_RCLK_EN_GB_109 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_AFTER_CTC_RCLK_EN_GB_109" */,

    config input SC_PCS_CH3_AFTER_CTC_RCLK_SEL_1_111_110[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_AFTER_CTC_RCLK_SEL_1_111_110[1],SC_PCS_CH3_AFTER_CTC_RCLK_SEL_1_111_110[0]" */,

    config input SC_PCS_CH3_PCS_RX_RSTN_112 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_PCS_RX_RSTN_112" */,

    config input SC_PCS_CH3_SLAVE_113 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_SLAVE_113" */,

    config input SC_PCS_CH3_PCIE_SLAVE_114 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_PCIE_SLAVE_114" */,

    config input SC_PCS_CH3_RX_64B66B_67B_116_115[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RX_64B66B_67B_116_115[1],SC_PCS_CH3_RX_64B66B_67B_116_115[0]" */,

    config input SC_PCS_CH3_RX_BRIDGE_CLK_POLINV_117 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RX_BRIDGE_CLK_POLINV_117" */,

    config input SC_PCS_CH3_AFTER_CTC_RCLK_EN_GB_1_118 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_AFTER_CTC_RCLK_EN_GB_1_118" */,

    config input SC_PCS_CH3_PCS_CB_RSTN_120 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_PCS_CB_RSTN_120" */,

    config input SC_PCS_CH3_TX_BRIDGE_GEAR_SEL_128 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_BRIDGE_GEAR_SEL_128" */,

    config input SC_PCS_CH3_TX_BYPASS_BRIDGE_UINT_129 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_BYPASS_BRIDGE_UINT_129" */,

    config input SC_PCS_CH3_TX_BYPASS_BRIDGE_FIFO_130 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_BYPASS_BRIDGE_FIFO_130" */,

    config input SC_PCS_CH3_TX_BYPASS_GEAR_131 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_BYPASS_GEAR_131" */,

    config input SC_PCS_CH3_TX_BYPASS_ENC_132 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_BYPASS_ENC_132" */,

    config input SC_PCS_CH3_TX_BYPASS_BIT_SLIP_133 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_BYPASS_BIT_SLIP_133" */,

    config input SC_PCS_CH3_TX_GEAR_SPLIT_136 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_GEAR_SPLIT_136" */,

    config input SC_PCS_CH3_TX_DRIVE_REG_MODE_138_137[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_DRIVE_REG_MODE_138_137[1],SC_PCS_CH3_TX_DRIVE_REG_MODE_138_137[0]" */,

    config input SC_PCS_CH3_TX_BIT_SLIP_CYCLES_143_139[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_BIT_SLIP_CYCLES_143_139[4],SC_PCS_CH3_TX_BIT_SLIP_CYCLES_143_139[3],SC_PCS_CH3_TX_BIT_SLIP_CYCLES_143_139[2],SC_PCS_CH3_TX_BIT_SLIP_CYCLES_143_139[1],SC_PCS_CH3_TX_BIT_SLIP_CYCLES_143_139[0]" */,

    config input SC_PCS_CH3_INT_TX_MASK_0_144 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_TX_MASK_0_144" */,

    config input SC_PCS_CH3_INT_TX_MASK_1_145 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_TX_MASK_1_145" */,

    config input SC_PCS_CH3_INT_TX_MASK_2_146 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_TX_MASK_2_146" */,

    config input SC_PCS_CH3_INT_TX_CLR_0_152 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_TX_CLR_0_152" */,

    config input SC_PCS_CH3_INT_TX_CLR_1_153 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_TX_CLR_1_153" */,

    config input SC_PCS_CH3_INT_TX_CLR_2_154 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_TX_CLR_2_154" */,

    config input SC_PCS_CH3_TX_PMA_TCLK_POLINV_160 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_PMA_TCLK_POLINV_160" */,

    config input SC_PCS_CH3_TX_PCS_CLK_EN_SEL_161 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_PCS_CLK_EN_SEL_161" */,

    config input SC_PCS_CH3_TX_BRIDGE_TCLK_SEL_162 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_BRIDGE_TCLK_SEL_162" */,

    config input SC_PCS_CH3_TX_TCLK_POLINV_163 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_TCLK_POLINV_163" */,

    config input SC_PCS_CH3_TX_PCS_TCLK_SEL_164 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_PCS_TCLK_SEL_164" */,

    config input SC_PCS_CH3_TX_PCS_TX_RSTN_165 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_PCS_TX_RSTN_165" */,

    config input SC_PCS_CH3_TX_SLAVE_166 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_SLAVE_166" */,

    config input SC_PCS_CH3_TX_GEAR_TCLK_EN_SEL_167 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_GEAR_TCLK_EN_SEL_167" */,

    config input SC_PCS_CH3_DATA_WIDTH_MODE_169_168[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_DATA_WIDTH_MODE_169_168[1],SC_PCS_CH3_DATA_WIDTH_MODE_169_168[0]" */,

    config input SC_PCS_CH3_TX_64B66B_67B_171_170[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_64B66B_67B_171_170[1],SC_PCS_CH3_TX_64B66B_67B_171_170[0]" */,

    config input SC_PCS_CH3_TX_GEAR_TCLK_SEL_172 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_GEAR_TCLK_SEL_172" */,

    config input SC_PCS_CH3_TX_TCLK2FABRIC_SEL_176 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_TCLK2FABRIC_SEL_176" */,

    config input SC_PCS_CH3_TX_OUTZZ_177 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_OUTZZ_177" */,

    config input SC_PCS_CH3_ENC_DUAL_178 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_ENC_DUAL_178" */,

    config input SC_PCS_CH3_TX_BITSLIP_DATA_MODE_179 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_BITSLIP_DATA_MODE_179" */,

    config input SC_PCS_CH3_TX_BRIDGE_CLK_POLINV_180 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_BRIDGE_CLK_POLINV_180" */,

    config input SC_PCS_CH3_COMMA_REG1_193_184[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_COMMA_REG1_193_184[9],SC_PCS_CH3_COMMA_REG1_193_184[8],SC_PCS_CH3_COMMA_REG1_193_184[7],SC_PCS_CH3_COMMA_REG1_193_184[6],SC_PCS_CH3_COMMA_REG1_193_184[5],SC_PCS_CH3_COMMA_REG1_193_184[4],SC_PCS_CH3_COMMA_REG1_193_184[3],SC_PCS_CH3_COMMA_REG1_193_184[2],SC_PCS_CH3_COMMA_REG1_193_184[1],SC_PCS_CH3_COMMA_REG1_193_184[0]" */,

    config input SC_PCS_CH3_RAPID_IMAX_202_200[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RAPID_IMAX_202_200[2],SC_PCS_CH3_RAPID_IMAX_202_200[1],SC_PCS_CH3_RAPID_IMAX_202_200[0]" */,

    config input SC_PCS_CH3_RAPID_VMIN_1_215_208[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RAPID_VMIN_1_215_208[7],SC_PCS_CH3_RAPID_VMIN_1_215_208[6],SC_PCS_CH3_RAPID_VMIN_1_215_208[5],SC_PCS_CH3_RAPID_VMIN_1_215_208[4],SC_PCS_CH3_RAPID_VMIN_1_215_208[3],SC_PCS_CH3_RAPID_VMIN_1_215_208[2],SC_PCS_CH3_RAPID_VMIN_1_215_208[1],SC_PCS_CH3_RAPID_VMIN_1_215_208[0]" */,

    config input SC_PCS_CH3_RAPID_VMIN_2_223_216[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RAPID_VMIN_2_223_216[7],SC_PCS_CH3_RAPID_VMIN_2_223_216[6],SC_PCS_CH3_RAPID_VMIN_2_223_216[5],SC_PCS_CH3_RAPID_VMIN_2_223_216[4],SC_PCS_CH3_RAPID_VMIN_2_223_216[3],SC_PCS_CH3_RAPID_VMIN_2_223_216[2],SC_PCS_CH3_RAPID_VMIN_2_223_216[1],SC_PCS_CH3_RAPID_VMIN_2_223_216[0]" */,

    config input SC_PCS_CH3_RX_PRBS_MODE_227_224[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RX_PRBS_MODE_227_224[3],SC_PCS_CH3_RX_PRBS_MODE_227_224[2],SC_PCS_CH3_RX_PRBS_MODE_227_224[1],SC_PCS_CH3_RX_PRBS_MODE_227_224[0]" */,

    config input SC_PCS_CH3_RX_ERRCNT_CLR_228 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RX_ERRCNT_CLR_228" */,

    config input SC_PCS_CH3_RX_PRBS_ERR_LPBK_229 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RX_PRBS_ERR_LPBK_229" */,

    config input SC_PCS_CH3_TX_PRBS_MODE_235_232[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_PRBS_MODE_235_232[3],SC_PCS_CH3_TX_PRBS_MODE_235_232[2],SC_PCS_CH3_TX_PRBS_MODE_235_232[1],SC_PCS_CH3_TX_PRBS_MODE_235_232[0]" */,

    config input SC_PCS_CH3_TX_INSERT_ER_236 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TX_INSERT_ER_236" */,

    config input SC_PCS_CH3_ENABLE_PRBS_GEN_237 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_ENABLE_PRBS_GEN_237" */,

    config input SC_PCS_CH3_ERR_CNT_247_240[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_ERR_CNT_247_240[7],SC_PCS_CH3_ERR_CNT_247_240[6],SC_PCS_CH3_ERR_CNT_247_240[5],SC_PCS_CH3_ERR_CNT_247_240[4],SC_PCS_CH3_ERR_CNT_247_240[3],SC_PCS_CH3_ERR_CNT_247_240[2],SC_PCS_CH3_ERR_CNT_247_240[1],SC_PCS_CH3_ERR_CNT_247_240[0]" */,

    config input SC_PCS_CH3_DEFAULT_RADDR_251_248[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_DEFAULT_RADDR_251_248[3],SC_PCS_CH3_DEFAULT_RADDR_251_248[2],SC_PCS_CH3_DEFAULT_RADDR_251_248[1],SC_PCS_CH3_DEFAULT_RADDR_251_248[0]" */,

    config input SC_PCS_CH3_MASTER_CHECK_OFFSET_255_252[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_MASTER_CHECK_OFFSET_255_252[3],SC_PCS_CH3_MASTER_CHECK_OFFSET_255_252[2],SC_PCS_CH3_MASTER_CHECK_OFFSET_255_252[1],SC_PCS_CH3_MASTER_CHECK_OFFSET_255_252[0]" */,

    config input SC_PCS_CH3_DELAY_SET_259_256[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_DELAY_SET_259_256[3],SC_PCS_CH3_DELAY_SET_259_256[2],SC_PCS_CH3_DELAY_SET_259_256[1],SC_PCS_CH3_DELAY_SET_259_256[0]" */,

    config input SC_PCS_CH3_SEACH_OFFSET_262_260[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_SEACH_OFFSET_262_260[2],SC_PCS_CH3_SEACH_OFFSET_262_260[1],SC_PCS_CH3_SEACH_OFFSET_262_260[0]" */,

    config input SC_PCS_CH3_CEB_RAPIDLS_MMAX_266_264[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CEB_RAPIDLS_MMAX_266_264[2],SC_PCS_CH3_CEB_RAPIDLS_MMAX_266_264[1],SC_PCS_CH3_CEB_RAPIDLS_MMAX_266_264[0]" */,

    config input SC_PCS_CH3_CTC_AFULL_276_272[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CTC_AFULL_276_272[4],SC_PCS_CH3_CTC_AFULL_276_272[3],SC_PCS_CH3_CTC_AFULL_276_272[2],SC_PCS_CH3_CTC_AFULL_276_272[1],SC_PCS_CH3_CTC_AFULL_276_272[0]" */,

    config input SC_PCS_CH3_CTC_AEMPTY_284_280[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CTC_AEMPTY_284_280[4],SC_PCS_CH3_CTC_AEMPTY_284_280[3],SC_PCS_CH3_CTC_AEMPTY_284_280[2],SC_PCS_CH3_CTC_AEMPTY_284_280[1],SC_PCS_CH3_CTC_AEMPTY_284_280[0]" */,

    config input SC_PCS_CH3_CTC_CONTI_SKP_SET_285 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CTC_CONTI_SKP_SET_285" */,

    config input SC_PCS_CH3_FAR_LOOP_288 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_FAR_LOOP_288" */,

    config input SC_PCS_CH3_NEAR_LOOP_289 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_NEAR_LOOP_289" */,

    config input SC_PCS_CH3_REG_TX2RX_PLOOP_EN_290 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_REG_TX2RX_PLOOP_EN_290" */,

    config input SC_PCS_CH3_REG_TX2RX_SLOOP_EN_291 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_REG_TX2RX_SLOOP_EN_291" */,

    config input SC_PCS_CH3_REG_RX2TX_PLOOP_EN_292 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_REG_RX2TX_PLOOP_EN_292" */,

    config input SC_PCS_CH3_INT_RX_MASK_0_296 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_MASK_0_296" */,

    config input SC_PCS_CH3_INT_RX_MASK_1_297 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_MASK_1_297" */,

    config input SC_PCS_CH3_INT_RX_MASK_2_298 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_MASK_2_298" */,

    config input SC_PCS_CH3_INT_RX_MASK_3_299 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_MASK_3_299" */,

    config input SC_PCS_CH3_INT_RX_MASK_4_300 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_MASK_4_300" */,

    config input SC_PCS_CH3_INT_RX_MASK_5_301 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_MASK_5_301" */,

    config input SC_PCS_CH3_INT_RX_MASK_6_302 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_MASK_6_302" */,

    config input SC_PCS_CH3_INT_RX_MASK_7_303 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_MASK_7_303" */,

    config input SC_PCS_CH3_INT_RX_CLR_0_304 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_CLR_0_304" */,

    config input SC_PCS_CH3_INT_RX_CLR_1_305 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_CLR_1_305" */,

    config input SC_PCS_CH3_INT_RX_CLR_2_306 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_CLR_2_306" */,

    config input SC_PCS_CH3_INT_RX_CLR_3_307 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_CLR_3_307" */,

    config input SC_PCS_CH3_INT_RX_CLR_4_308 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_CLR_4_308" */,

    config input SC_PCS_CH3_INT_RX_CLR_5_309 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_CLR_5_309" */,

    config input SC_PCS_CH3_INT_RX_CLR_6_310 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_CLR_6_310" */,

    config input SC_PCS_CH3_INT_RX_CLR_7_311 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_INT_RX_CLR_7_311" */,

    config input SC_PCS_CH3_CA_RSTN_RX_312 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CA_RSTN_RX_312" */,

    config input SC_PCS_CH3_CA_DYN_DLY_EN_RX_313 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CA_DYN_DLY_EN_RX_313" */,

    config input SC_PCS_CH3_CA_DYN_DLY_SEL_RX_314 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CA_DYN_DLY_SEL_RX_314" */,

    config input SC_PCS_CH3_CA_RX_322_315[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CA_RX_322_315[7],SC_PCS_CH3_CA_RX_322_315[6],SC_PCS_CH3_CA_RX_322_315[5],SC_PCS_CH3_CA_RX_322_315[4],SC_PCS_CH3_CA_RX_322_315[3],SC_PCS_CH3_CA_RX_322_315[2],SC_PCS_CH3_CA_RX_322_315[1],SC_PCS_CH3_CA_RX_322_315[0]" */,

    config input SC_PCS_CH3_CA_RSTN_TX_323 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CA_RSTN_TX_323" */,

    config input SC_PCS_CH3_CA_DYN_DLY_EN_TX_324 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CA_DYN_DLY_EN_TX_324" */,

    config input SC_PCS_CH3_CA_DYN_DLY_SEL_TX_325 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CA_DYN_DLY_SEL_TX_325" */,

    config input SC_PCS_CH3_CA_TX_333_326[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CA_TX_333_326[7],SC_PCS_CH3_CA_TX_333_326[6],SC_PCS_CH3_CA_TX_333_326[5],SC_PCS_CH3_CA_TX_333_326[4],SC_PCS_CH3_CA_TX_333_326[3],SC_PCS_CH3_CA_TX_333_326[2],SC_PCS_CH3_CA_TX_333_326[1],SC_PCS_CH3_CA_TX_333_326[0]" */,

    config input SC_PCS_CH3_RXPRBS_PWR_REDUCTION_334 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RXPRBS_PWR_REDUCTION_334" */,

    config input SC_PCS_CH3_WDALIGN_PWR_REDUCTION_335 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_WDALIGN_PWR_REDUCTION_335" */,

    config input SC_PCS_CH3_RXDEC_PWR_REDUCTION_336 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RXDEC_PWR_REDUCTION_336" */,

    config input SC_PCS_CH3_RXCB_PWR_REDUCTION_337 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RXCB_PWR_REDUCTION_337" */,

    config input SC_PCS_CH3_RXCTC_PWR_REDUCTION_338 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RXCTC_PWR_REDUCTION_338" */,

    config input SC_PCS_CH3_RXGEAR_PWR_REDUCTION_339 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RXGEAR_PWR_REDUCTION_339" */,

    config input SC_PCS_CH3_RXBRG_PWR_REDUCTION_340 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RXBRG_PWR_REDUCTION_340" */,

    config input SC_PCS_CH3_RXTEST_PWR_REDUCTION_341 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RXTEST_PWR_REDUCTION_341" */,

    config input SC_PCS_CH3_TXBRG_PWR_REDUCTION_342 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TXBRG_PWR_REDUCTION_342" */,

    config input SC_PCS_CH3_TXGEAR_PWR_REDUCTION_343 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TXGEAR_PWR_REDUCTION_343" */,

    config input SC_PCS_CH3_TXENC_PWR_REDUCTION_344 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TXENC_PWR_REDUCTION_344" */,

    config input SC_PCS_CH3_TXBSLP_PWR_REDUCTION_345 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TXBSLP_PWR_REDUCTION_345" */,

    config input SC_PCS_CH3_TXPRBS_PWR_REDUCTION_346 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TXPRBS_PWR_REDUCTION_346" */,

    config input SC_PCS_CH3_TXBRG_FULL_CHK_EN_347 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TXBRG_FULL_CHK_EN_347" */,

    config input SC_PCS_CH3_TXBRG_EMPTY_CHK_EN_348 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_TXBRG_EMPTY_CHK_EN_348" */,

    config input SC_PCS_CH3_RXBRG_FULL_CHK_EN_349 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RXBRG_FULL_CHK_EN_349" */,

    config input SC_PCS_CH3_RXBRG_EMPTY_CHK_EN_350 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_RXBRG_EMPTY_CHK_EN_350" */,

    config input SC_PCS_CH3_CTC_FULL_CHK_EN_351 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CTC_FULL_CHK_EN_351" */,

    config input SC_PCS_CH3_CTC_EMPTY_CHK_EN_352 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CTC_EMPTY_CHK_EN_352" */,

    config input SC_PCS_CH3_CEB_FULL_CHK_EN_353 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CEB_FULL_CHK_EN_353" */,

    config input SC_PCS_CH3_CEB_EMPTY_CHK_EN_354 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_CEB_EMPTY_CHK_EN_354" */,

    config input SC_PCS_CH3_FLP_FULL_CHK_EN_355 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_FLP_FULL_CHK_EN_355" */,

    config input SC_PCS_CH3_FLP_EMPTY_CHK_EN_356 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH3_FLP_EMPTY_CHK_EN_356" */,

    config input SC_PMA_CH0_REG_RX_PD_0 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_PD_0" */,

    config input SC_PMA_CH0_REG_RX_PD_EN_1 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_PD_EN_1" */,

    config input SC_PMA_CH0_REG_RX_CLKPATH_PD_2 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_CLKPATH_PD_2" */,

    config input SC_PMA_CH0_REG_RX_CLKPATH_PD_EN_3 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_CLKPATH_PD_EN_3" */,

    config input SC_PMA_CH0_REG_RX_DATAPATH_PD_4 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_DATAPATH_PD_4" */,

    config input SC_PMA_CH0_REG_RX_DATAPATH_PD_EN_5 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_DATAPATH_PD_EN_5" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_PD_6 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_PD_6" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_PD_EN_7 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_PD_EN_7" */,

    config input SC_PMA_CH0_REG_RX_DCC_RST_N_8 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_DCC_RST_N_8" */,

    config input SC_PMA_CH0_REG_RX_DCC_RST_N_EN_9 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_DCC_RST_N_EN_9" */,

    config input SC_PMA_CH0_REG_RX_CDR_RST_N_10 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_CDR_RST_N_10" */,

    config input SC_PMA_CH0_REG_RX_CDR_RST_N_EN_11 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_CDR_RST_N_EN_11" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_RST_N_12 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_RST_N_12" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_RST_N_EN_13 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_RST_N_EN_13" */,

    config input SC_PMA_CH0_REG_RXPCLK_SLIP_14 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RXPCLK_SLIP_14" */,

    config input SC_PMA_CH0_REG_RXPCLK_SLIP_OW_15 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RXPCLK_SLIP_OW_15" */,

    config input SC_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_16 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_16" */,

    config input SC_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_EN_17 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_EN_17" */,

    config input SC_PMA_CH0_REG_RX_PCLKSWITCH_18 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_PCLKSWITCH_18" */,

    config input SC_PMA_CH0_REG_RX_PCLKSWITCH_EN_19 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_PCLKSWITCH_EN_19" */,

    config input SC_PMA_CH0_REG_RX_HIGHZ_20 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_HIGHZ_20" */,

    config input SC_PMA_CH0_REG_RX_HIGHZ_EN_21 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_HIGHZ_EN_21" */,

    config input SC_PMA_CH0_REG_RX_EQ_C_SET_25_22[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_EQ_C_SET_25_22[3],SC_PMA_CH0_REG_RX_EQ_C_SET_25_22[2],SC_PMA_CH0_REG_RX_EQ_C_SET_25_22[1],SC_PMA_CH0_REG_RX_EQ_C_SET_25_22[0]" */,

    config input SC_PMA_CH0_REG_RX_EQ_R_SET_29_26[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_EQ_R_SET_29_26[3],SC_PMA_CH0_REG_RX_EQ_R_SET_29_26[2],SC_PMA_CH0_REG_RX_EQ_R_SET_29_26[1],SC_PMA_CH0_REG_RX_EQ_R_SET_29_26[0]" */,

    config input SC_PMA_CH0_REG_RX_BUSWIDTH_32_30[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_BUSWIDTH_32_30[2],SC_PMA_CH0_REG_RX_BUSWIDTH_32_30[1],SC_PMA_CH0_REG_RX_BUSWIDTH_32_30[0]" */,

    config input SC_PMA_CH0_REG_RX_BUSWIDTH_EN_33 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_BUSWIDTH_EN_33" */,

    config input SC_PMA_CH0_REG_RX_RATE_36_34[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_RATE_36_34[2],SC_PMA_CH0_REG_RX_RATE_36_34[1],SC_PMA_CH0_REG_RX_RATE_36_34[0]" */,

    config input SC_PMA_CH0_REG_RX_RATE_EN_37 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_RATE_EN_37" */,

    config input SC_PMA_CH0_REG_RX_RES_TRIM_43_38[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_RES_TRIM_43_38[5],SC_PMA_CH0_REG_RX_RES_TRIM_43_38[4],SC_PMA_CH0_REG_RX_RES_TRIM_43_38[3],SC_PMA_CH0_REG_RX_RES_TRIM_43_38[2],SC_PMA_CH0_REG_RX_RES_TRIM_43_38[1],SC_PMA_CH0_REG_RX_RES_TRIM_43_38[0]" */,

    config input SC_PMA_CH0_REG_RX_RES_TRIM_EN_44 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_RES_TRIM_EN_44" */,

    config input SC_PMA_CH0_REG_RX_ICTRL_SIGDET_52_49[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_ICTRL_SIGDET_52_49[3],SC_PMA_CH0_REG_RX_ICTRL_SIGDET_52_49[2],SC_PMA_CH0_REG_RX_ICTRL_SIGDET_52_49[1],SC_PMA_CH0_REG_RX_ICTRL_SIGDET_52_49[0]" */,

    config input SC_PMA_CH0_REG_RX_EQ_OFF_53 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_EQ_OFF_53" */,

    config input SC_PMA_CH0_REG_RX_PREAMP_IC_65_54[11:0] = 12'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_PREAMP_IC_65_54[11],SC_PMA_CH0_REG_RX_PREAMP_IC_65_54[10],SC_PMA_CH0_REG_RX_PREAMP_IC_65_54[9],SC_PMA_CH0_REG_RX_PREAMP_IC_65_54[8],SC_PMA_CH0_REG_RX_PREAMP_IC_65_54[7],SC_PMA_CH0_REG_RX_PREAMP_IC_65_54[6],SC_PMA_CH0_REG_RX_PREAMP_IC_65_54[5],SC_PMA_CH0_REG_RX_PREAMP_IC_65_54[4],SC_PMA_CH0_REG_RX_PREAMP_IC_65_54[3],SC_PMA_CH0_REG_RX_PREAMP_IC_65_54[2],SC_PMA_CH0_REG_RX_PREAMP_IC_65_54[1],SC_PMA_CH0_REG_RX_PREAMP_IC_65_54[0]" */,

    config input SC_PMA_CH0_REG_RX_PCLK_EDGE_SEL_66 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_PCLK_EDGE_SEL_66" */,

    config input SC_PMA_CH0_REG_RX_PIBUF_IC_68_67[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_PIBUF_IC_68_67[1],SC_PMA_CH0_REG_RX_PIBUF_IC_68_67[0]" */,

    config input SC_PMA_CH0_REG_RX_DCC_IC_RX_71_70[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_DCC_IC_RX_71_70[1],SC_PMA_CH0_REG_RX_DCC_IC_RX_71_70[0]" */,

    config input SC_PMA_CH0_REG_RX_DCC_IC_TX_73_72[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_DCC_IC_TX_73_72[1],SC_PMA_CH0_REG_RX_DCC_IC_TX_73_72[0]" */,

    config input SC_PMA_CH0_REG_RX_ICTRL_TRX_75_74[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_ICTRL_TRX_75_74[1],SC_PMA_CH0_REG_RX_ICTRL_TRX_75_74[0]" */,

    config input SC_PMA_CH0_REG_RX_ICTRL_PREAMP_79_78[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_ICTRL_PREAMP_79_78[1],SC_PMA_CH0_REG_RX_ICTRL_PREAMP_79_78[0]" */,

    config input SC_PMA_CH0_REG_RX_ICTRL_SLICER_81_80[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_ICTRL_SLICER_81_80[1],SC_PMA_CH0_REG_RX_ICTRL_SLICER_81_80[0]" */,

    config input SC_PMA_CH0_REG_RX_ICTRL_PIBUF_83_82[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_ICTRL_PIBUF_83_82[1],SC_PMA_CH0_REG_RX_ICTRL_PIBUF_83_82[0]" */,

    config input SC_PMA_CH0_REG_RX_ICTRL_PI_85_84[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_ICTRL_PI_85_84[1],SC_PMA_CH0_REG_RX_ICTRL_PI_85_84[0]" */,

    config input SC_PMA_CH0_REG_RX_ICTRL_DCC_87_86[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_ICTRL_DCC_87_86[1],SC_PMA_CH0_REG_RX_ICTRL_DCC_87_86[0]" */,

    config input SC_PMA_CH0_REG_RX_ICTRL_PREDRV_89_88[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_ICTRL_PREDRV_89_88[1],SC_PMA_CH0_REG_RX_ICTRL_PREDRV_89_88[0]" */,

    config input SC_PMA_CH0_REG_TX_RATE_92_90[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_RATE_92_90[2],SC_PMA_CH0_REG_TX_RATE_92_90[1],SC_PMA_CH0_REG_TX_RATE_92_90[0]" */,

    config input SC_PMA_CH0_REG_TX_RATE_EN_93 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_RATE_EN_93" */,

    config input SC_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_94 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_94" */,

    config input SC_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_EN_95 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_EN_95" */,

    config input SC_PMA_CH0_REG_RX_TX2RX_PLPBK_EN_96 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_TX2RX_PLPBK_EN_96" */,

    config input SC_PMA_CH0_REG_TXCLK_SEL_97 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TXCLK_SEL_97" */,

    config input SC_PMA_CH0_REG_RX_DATA_POLARITY_98 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_DATA_POLARITY_98" */,

    config input SC_PMA_CH0_REG_RX_ERR_INSERT_99 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_ERR_INSERT_99" */,

    config input SC_PMA_CH0_REG_UDP_CHK_EN_100 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_UDP_CHK_EN_100" */,

    config input SC_PMA_CH0_REG_PRBS_SEL_102_101[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_PRBS_SEL_102_101[1],SC_PMA_CH0_REG_PRBS_SEL_102_101[0]" */,

    config input SC_PMA_CH0_REG_PRBS_CHK_EN_103 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_PRBS_CHK_EN_103" */,

    config input SC_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL_105_104[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL_105_104[1],SC_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL_105_104[0]" */,

    config input SC_PMA_CH0_REG_BIST_CHK_PAT_SEL_106 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_BIST_CHK_PAT_SEL_106" */,

    config input SC_PMA_CH0_REG_LOAD_ERR_CNT_107 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_LOAD_ERR_CNT_107" */,

    config input SC_PMA_CH0_REG_CHK_COUNTER_EN_108 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CHK_COUNTER_EN_108" */,

    config input SC_PMA_CH0_REG_CDR_PROP_GAIN_111_109[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_PROP_GAIN_111_109[2],SC_PMA_CH0_REG_CDR_PROP_GAIN_111_109[1],SC_PMA_CH0_REG_CDR_PROP_GAIN_111_109[0]" */,

    config input SC_PMA_CH0_REG_CDR_PROP_TURBO_GAIN_114_112[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_PROP_TURBO_GAIN_114_112[2],SC_PMA_CH0_REG_CDR_PROP_TURBO_GAIN_114_112[1],SC_PMA_CH0_REG_CDR_PROP_TURBO_GAIN_114_112[0]" */,

    config input SC_PMA_CH0_REG_CDR_INT_GAIN_117_115[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_INT_GAIN_117_115[2],SC_PMA_CH0_REG_CDR_INT_GAIN_117_115[1],SC_PMA_CH0_REG_CDR_INT_GAIN_117_115[0]" */,

    config input SC_PMA_CH0_REG_CDR_INT_TURBO_GAIN_120_118[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_INT_TURBO_GAIN_120_118[2],SC_PMA_CH0_REG_CDR_INT_TURBO_GAIN_120_118[1],SC_PMA_CH0_REG_CDR_INT_TURBO_GAIN_120_118[0]" */,

    config input SC_PMA_CH0_REG_CDR_INT_SAT_MAX_130_121[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_INT_SAT_MAX_130_121[9],SC_PMA_CH0_REG_CDR_INT_SAT_MAX_130_121[8],SC_PMA_CH0_REG_CDR_INT_SAT_MAX_130_121[7],SC_PMA_CH0_REG_CDR_INT_SAT_MAX_130_121[6],SC_PMA_CH0_REG_CDR_INT_SAT_MAX_130_121[5],SC_PMA_CH0_REG_CDR_INT_SAT_MAX_130_121[4],SC_PMA_CH0_REG_CDR_INT_SAT_MAX_130_121[3],SC_PMA_CH0_REG_CDR_INT_SAT_MAX_130_121[2],SC_PMA_CH0_REG_CDR_INT_SAT_MAX_130_121[1],SC_PMA_CH0_REG_CDR_INT_SAT_MAX_130_121[0]" */,

    config input SC_PMA_CH0_REG_CDR_INT_SAT_MIN_140_131[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_INT_SAT_MIN_140_131[9],SC_PMA_CH0_REG_CDR_INT_SAT_MIN_140_131[8],SC_PMA_CH0_REG_CDR_INT_SAT_MIN_140_131[7],SC_PMA_CH0_REG_CDR_INT_SAT_MIN_140_131[6],SC_PMA_CH0_REG_CDR_INT_SAT_MIN_140_131[5],SC_PMA_CH0_REG_CDR_INT_SAT_MIN_140_131[4],SC_PMA_CH0_REG_CDR_INT_SAT_MIN_140_131[3],SC_PMA_CH0_REG_CDR_INT_SAT_MIN_140_131[2],SC_PMA_CH0_REG_CDR_INT_SAT_MIN_140_131[1],SC_PMA_CH0_REG_CDR_INT_SAT_MIN_140_131[0]" */,

    config input SC_PMA_CH0_REG_CDR_INT_RST_141 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_INT_RST_141" */,

    config input SC_PMA_CH0_REG_CDR_INT_RST_OW_142 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_INT_RST_OW_142" */,

    config input SC_PMA_CH0_REG_CDR_PROP_RST_143 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_PROP_RST_143" */,

    config input SC_PMA_CH0_REG_CDR_PROP_RST_OW_144 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_PROP_RST_OW_144" */,

    config input SC_PMA_CH0_REG_CDR_LOCK_RST_145 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_LOCK_RST_145" */,

    config input SC_PMA_CH0_REG_CDR_LOCK_RST_OW_146 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_LOCK_RST_OW_146" */,

    config input SC_PMA_CH0_REG_CDR_RX_PI_FORCE_SEL_147 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_RX_PI_FORCE_SEL_147" */,

    config input SC_PMA_CH0_REG_CDR_RX_PI_FORCE_D_155_148[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_RX_PI_FORCE_D_155_148[7],SC_PMA_CH0_REG_CDR_RX_PI_FORCE_D_155_148[6],SC_PMA_CH0_REG_CDR_RX_PI_FORCE_D_155_148[5],SC_PMA_CH0_REG_CDR_RX_PI_FORCE_D_155_148[4],SC_PMA_CH0_REG_CDR_RX_PI_FORCE_D_155_148[3],SC_PMA_CH0_REG_CDR_RX_PI_FORCE_D_155_148[2],SC_PMA_CH0_REG_CDR_RX_PI_FORCE_D_155_148[1],SC_PMA_CH0_REG_CDR_RX_PI_FORCE_D_155_148[0]" */,

    config input SC_PMA_CH0_REG_CDR_LOCK_TIMER_158_156[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_LOCK_TIMER_158_156[2],SC_PMA_CH0_REG_CDR_LOCK_TIMER_158_156[1],SC_PMA_CH0_REG_CDR_LOCK_TIMER_158_156[0]" */,

    config input SC_PMA_CH0_REG_CDR_TURBO_MODE_TIMER_160_159[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_TURBO_MODE_TIMER_160_159[1],SC_PMA_CH0_REG_CDR_TURBO_MODE_TIMER_160_159[0]" */,

    config input SC_PMA_CH0_REG_CDR_LOCK_VAL_161 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_LOCK_VAL_161" */,

    config input SC_PMA_CH0_REG_CDR_LOCK_OW_162 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_LOCK_OW_162" */,

    config input SC_PMA_CH0_REG_CDR_INT_SAT_DET_EN_163 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_INT_SAT_DET_EN_163" */,

    config input SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_EN_176 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_EN_176" */,

    config input SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_RESET_EN_177 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_RESET_EN_177" */,

    config input SC_PMA_CH0_REG_CDR_PI_CTRL_RST_178 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_PI_CTRL_RST_178" */,

    config input SC_PMA_CH0_REG_CDR_PI_CTRL_RST_OW_179 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_PI_CTRL_RST_OW_179" */,

    config input SC_PMA_CH0_REG_CDR_SAT_DET_RST_180 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_SAT_DET_RST_180" */,

    config input SC_PMA_CH0_REG_CDR_SAT_DET_RST_OW_181 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_SAT_DET_RST_OW_181" */,

    config input SC_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_182 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_182" */,

    config input SC_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_OW_183 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_OW_183" */,

    config input SC_PMA_CH0_REG_CDR_SIGDET_STATUS_DIS_184 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_SIGDET_STATUS_DIS_184" */,

    config input SC_PMA_CH0_REG_CDR_SAT_DET_TIMER_186_185[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_SAT_DET_TIMER_186_185[1],SC_PMA_CH0_REG_CDR_SAT_DET_TIMER_186_185[0]" */,

    config input SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_VAL_187 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_VAL_187" */,

    config input SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_OW_188 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_OW_188" */,

    config input SC_PMA_CH0_REG_CDR_TURBO_MODE_EN_189 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_TURBO_MODE_EN_189" */,

    config input SC_PMA_CH0_REG_CDR_STATUS_RADDR_INIT_193_191[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_STATUS_RADDR_INIT_193_191[2],SC_PMA_CH0_REG_CDR_STATUS_RADDR_INIT_193_191[1],SC_PMA_CH0_REG_CDR_STATUS_RADDR_INIT_193_191[0]" */,

    config input SC_PMA_CH0_REG_CDR_STATUS_FIFO_EN_194 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_CDR_STATUS_FIFO_EN_194" */,

    config input SC_PMA_CH0_REG_PMA_TEST_SEL_197_195[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_PMA_TEST_SEL_197_195[2],SC_PMA_CH0_REG_PMA_TEST_SEL_197_195[1],SC_PMA_CH0_REG_PMA_TEST_SEL_197_195[0]" */,

    config input SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN_203_198[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN_203_198[5],SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN_203_198[4],SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN_203_198[3],SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN_203_198[2],SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN_203_198[1],SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN_203_198[0]" */,

    config input SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX_209_204[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX_209_204[5],SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX_209_204[4],SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX_209_204[3],SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX_209_204[2],SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX_209_204[1],SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX_209_204[0]" */,

    config input SC_PMA_CH0_REG_OOB_COMINIT_GAP_MIN_217_210[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_OOB_COMINIT_GAP_MIN_217_210[7],SC_PMA_CH0_REG_OOB_COMINIT_GAP_MIN_217_210[6],SC_PMA_CH0_REG_OOB_COMINIT_GAP_MIN_217_210[5],SC_PMA_CH0_REG_OOB_COMINIT_GAP_MIN_217_210[4],SC_PMA_CH0_REG_OOB_COMINIT_GAP_MIN_217_210[3],SC_PMA_CH0_REG_OOB_COMINIT_GAP_MIN_217_210[2],SC_PMA_CH0_REG_OOB_COMINIT_GAP_MIN_217_210[1],SC_PMA_CH0_REG_OOB_COMINIT_GAP_MIN_217_210[0]" */,

    config input SC_PMA_CH0_REG_OOB_COMINIT_GAP_MAX_225_218[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_OOB_COMINIT_GAP_MAX_225_218[7],SC_PMA_CH0_REG_OOB_COMINIT_GAP_MAX_225_218[6],SC_PMA_CH0_REG_OOB_COMINIT_GAP_MAX_225_218[5],SC_PMA_CH0_REG_OOB_COMINIT_GAP_MAX_225_218[4],SC_PMA_CH0_REG_OOB_COMINIT_GAP_MAX_225_218[3],SC_PMA_CH0_REG_OOB_COMINIT_GAP_MAX_225_218[2],SC_PMA_CH0_REG_OOB_COMINIT_GAP_MAX_225_218[1],SC_PMA_CH0_REG_OOB_COMINIT_GAP_MAX_225_218[0]" */,

    config input SC_PMA_CH0_REG_RX_PIBUF_IC_TX_227_226[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_PIBUF_IC_TX_227_226[1],SC_PMA_CH0_REG_RX_PIBUF_IC_TX_227_226[0]" */,

    config input SC_PMA_CH0_REG_COMWAKE_STATUS_CLEAR_228 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_COMWAKE_STATUS_CLEAR_228" */,

    config input SC_PMA_CH0_REG_COMINIT_STATUS_CLEAR_229 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_COMINIT_STATUS_CLEAR_229" */,

    config input SC_PMA_CH0_REG_RX_SYNC_RST_N_EN_230 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SYNC_RST_N_EN_230" */,

    config input SC_PMA_CH0_REG_RX_SYNC_RST_N_231 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SYNC_RST_N_231" */,

    config input SC_PMA_CH0_REG_RX_SATA_COMINIT_OW_236 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SATA_COMINIT_OW_236" */,

    config input SC_PMA_CH0_REG_RX_SATA_COMINIT_237 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SATA_COMINIT_237" */,

    config input SC_PMA_CH0_REG_RX_SATA_COMWAKE_OW_238 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SATA_COMWAKE_OW_238" */,

    config input SC_PMA_CH0_REG_RX_SATA_COMWAKE_239 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SATA_COMWAKE_239" */,

    config input SC_PMA_CH0_REG_RX_DCC_DISABLE_242 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_DCC_DISABLE_242" */,

    config input SC_PMA_CH0_REG_TX_DCC_DISABLE_243 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_DCC_DISABLE_243" */,

    config input SC_PMA_CH0_REG_RX_SLIP_SEL_EN_244 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SLIP_SEL_EN_244" */,

    config input SC_PMA_CH0_REG_RX_SLIP_SEL_248_245[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SLIP_SEL_248_245[3],SC_PMA_CH0_REG_RX_SLIP_SEL_248_245[2],SC_PMA_CH0_REG_RX_SLIP_SEL_248_245[1],SC_PMA_CH0_REG_RX_SLIP_SEL_248_245[0]" */,

    config input SC_PMA_CH0_REG_RX_SLIP_EN_249 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SLIP_EN_249" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_STATUS_SEL_252_250[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_STATUS_SEL_252_250[2],SC_PMA_CH0_REG_RX_SIGDET_STATUS_SEL_252_250[1],SC_PMA_CH0_REG_RX_SIGDET_STATUS_SEL_252_250[0]" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_FSM_RST_N_253 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_FSM_RST_N_253" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_STATUS_OW_254 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_STATUS_OW_254" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_STATUS_255 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_STATUS_255" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_VTH_259_256[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_VTH_259_256[3],SC_PMA_CH0_REG_RX_SIGDET_VTH_259_256[2],SC_PMA_CH0_REG_RX_SIGDET_VTH_259_256[1],SC_PMA_CH0_REG_RX_SIGDET_VTH_259_256[0]" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_GRM_261_260[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_GRM_261_260[1],SC_PMA_CH0_REG_RX_SIGDET_GRM_261_260[0]" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_PULSE_EXT_262 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_PULSE_EXT_262" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_CH2_SEL_263 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_CH2_SEL_263" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[4],SC_PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[3],SC_PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[2],SC_PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[1],SC_PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[0]" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_CHK_WINDOW_EN_269 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_CHK_WINDOW_EN_269" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[2],SC_PMA_CH0_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[1],SC_PMA_CH0_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[0]" */,

    config input SC_PMA_CH0_REG_SLIP_FIFO_INV_EN_273 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_SLIP_FIFO_INV_EN_273" */,

    config input SC_PMA_CH0_REG_SLIP_FIFO_INV_274 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_SLIP_FIFO_INV_274" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[4],SC_PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[3],SC_PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[2],SC_PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[1],SC_PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[0]" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_4OOB_DET_SEL_282_280[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_4OOB_DET_SEL_282_280[2],SC_PMA_CH0_REG_RX_SIGDET_4OOB_DET_SEL_282_280[1],SC_PMA_CH0_REG_RX_SIGDET_4OOB_DET_SEL_282_280[0]" */,

    config input SC_PMA_CH0_REG_RX_SIGDET_IC_I_290_287[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_SIGDET_IC_I_290_287[3],SC_PMA_CH0_REG_RX_SIGDET_IC_I_290_287[2],SC_PMA_CH0_REG_RX_SIGDET_IC_I_290_287[1],SC_PMA_CH0_REG_RX_SIGDET_IC_I_290_287[0]" */,

    config input SC_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_OW_291 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_OW_291" */,

    config input SC_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_292 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_292" */,

    config input SC_PMA_CH0_REG_RX_OOB_DETECTOR_PD_OW_293 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_OOB_DETECTOR_PD_OW_293" */,

    config input SC_PMA_CH0_REG_RX_OOB_DETECTOR_PD_294 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_OOB_DETECTOR_PD_294" */,

    config input SC_PMA_CH0_REG_RX_TERM_CM_CTRL_297_296[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_TERM_CM_CTRL_297_296[1],SC_PMA_CH0_REG_RX_TERM_CM_CTRL_297_296[0]" */,

    config input SC_PMA_CH0_REG_TX_PD_299 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PD_299" */,

    config input SC_PMA_CH0_REG_TX_PD_OW_300 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PD_OW_300" */,

    config input SC_PMA_CH0_REG_TX_CLKPATH_PD_301 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_CLKPATH_PD_301" */,

    config input SC_PMA_CH0_REG_TX_CLKPATH_PD_OW_302 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_CLKPATH_PD_OW_302" */,

    config input SC_PMA_CH0_REG_TX_BEACON_TIMER_SEL_304_303[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_BEACON_TIMER_SEL_304_303[1],SC_PMA_CH0_REG_TX_BEACON_TIMER_SEL_304_303[0]" */,

    config input SC_PMA_CH0_REG_TX_RXDET_REQ_OW_305 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_RXDET_REQ_OW_305" */,

    config input SC_PMA_CH0_REG_TX_RXDET_REQ_306 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_RXDET_REQ_306" */,

    config input SC_PMA_CH0_REG_TX_BEACON_EN_OW_307 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_BEACON_EN_OW_307" */,

    config input SC_PMA_CH0_REG_TX_BEACON_EN_308 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_BEACON_EN_308" */,

    config input SC_PMA_CH0_REG_TX_EI_EN_OW_309 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_EI_EN_OW_309" */,

    config input SC_PMA_CH0_REG_TX_EI_EN_310 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_EI_EN_310" */,

    config input SC_PMA_CH0_REG_TX_RES_CAL_EN_311 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_RES_CAL_EN_311" */,

    config input SC_PMA_CH0_REG_TX_RES_CAL_317_312[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_RES_CAL_317_312[5],SC_PMA_CH0_REG_TX_RES_CAL_317_312[4],SC_PMA_CH0_REG_TX_RES_CAL_317_312[3],SC_PMA_CH0_REG_TX_RES_CAL_317_312[2],SC_PMA_CH0_REG_TX_RES_CAL_317_312[1],SC_PMA_CH0_REG_TX_RES_CAL_317_312[0]" */,

    config input SC_PMA_CH0_REG_TX_BIAS_CAL_EN_318 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_BIAS_CAL_EN_318" */,

    config input SC_PMA_CH0_REG_TX_BIAS_CTRL_324_319[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_BIAS_CTRL_324_319[5],SC_PMA_CH0_REG_TX_BIAS_CTRL_324_319[4],SC_PMA_CH0_REG_TX_BIAS_CTRL_324_319[3],SC_PMA_CH0_REG_TX_BIAS_CTRL_324_319[2],SC_PMA_CH0_REG_TX_BIAS_CTRL_324_319[1],SC_PMA_CH0_REG_TX_BIAS_CTRL_324_319[0]" */,

    config input SC_PMA_CH0_REG_TX_RXDET_TIMER_SEL_356_355[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_RXDET_TIMER_SEL_356_355[1],SC_PMA_CH0_REG_TX_RXDET_TIMER_SEL_356_355[0]" */,

    config input SC_PMA_CH0_REG_TX_SYNC_OW_357 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_SYNC_OW_357" */,

    config input SC_PMA_CH0_REG_TX_SYNC_358 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_SYNC_358" */,

    config input SC_PMA_CH0_REG_TX_PD_POST_359 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PD_POST_359" */,

    config input SC_PMA_CH0_REG_TX_PD_POST_OW_360 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PD_POST_OW_360" */,

    config input SC_PMA_CH0_REG_TX_RESET_N_OW_361 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_RESET_N_OW_361" */,

    config input SC_PMA_CH0_REG_TX_RESET_N_362 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_RESET_N_362" */,

    config input SC_PMA_CH0_REG_TX_DCC_RESET_N_OW_363 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_DCC_RESET_N_OW_363" */,

    config input SC_PMA_CH0_REG_TX_DCC_RESET_N_364 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_DCC_RESET_N_364" */,

    config input SC_PMA_CH0_REG_TX_BUSWIDTH_OW_365 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_BUSWIDTH_OW_365" */,

    config input SC_PMA_CH0_REG_TX_BUSWIDTH_368_366[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_BUSWIDTH_368_366[2],SC_PMA_CH0_REG_TX_BUSWIDTH_368_366[1],SC_PMA_CH0_REG_TX_BUSWIDTH_368_366[0]" */,

    config input SC_PMA_CH0_REG_PLL_READY_OW_369 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_PLL_READY_OW_369" */,

    config input SC_PMA_CH0_REG_PLL_READY_370 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_PLL_READY_370" */,

    config input SC_PMA_CH0_REG_TX_PCLK_SW_OW_371 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PCLK_SW_OW_371" */,

    config input SC_PMA_CH0_REG_TX_PCLK_SW_372 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PCLK_SW_372" */,

    config input SC_PMA_CH0_REG_EI_PCLK_DELAY_SEL_375_374[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_EI_PCLK_DELAY_SEL_375_374[1],SC_PMA_CH0_REG_EI_PCLK_DELAY_SEL_375_374[0]" */,

    config input SC_PMA_CH0_REG_TX_DRV01_DAC0_382_377[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_DRV01_DAC0_382_377[5],SC_PMA_CH0_REG_TX_DRV01_DAC0_382_377[4],SC_PMA_CH0_REG_TX_DRV01_DAC0_382_377[3],SC_PMA_CH0_REG_TX_DRV01_DAC0_382_377[2],SC_PMA_CH0_REG_TX_DRV01_DAC0_382_377[1],SC_PMA_CH0_REG_TX_DRV01_DAC0_382_377[0]" */,

    config input SC_PMA_CH0_REG_TX_DRV01_DAC1_388_383[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_DRV01_DAC1_388_383[5],SC_PMA_CH0_REG_TX_DRV01_DAC1_388_383[4],SC_PMA_CH0_REG_TX_DRV01_DAC1_388_383[3],SC_PMA_CH0_REG_TX_DRV01_DAC1_388_383[2],SC_PMA_CH0_REG_TX_DRV01_DAC1_388_383[1],SC_PMA_CH0_REG_TX_DRV01_DAC1_388_383[0]" */,

    config input SC_PMA_CH0_REG_TX_DRV01_DAC2_394_389[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_DRV01_DAC2_394_389[5],SC_PMA_CH0_REG_TX_DRV01_DAC2_394_389[4],SC_PMA_CH0_REG_TX_DRV01_DAC2_394_389[3],SC_PMA_CH0_REG_TX_DRV01_DAC2_394_389[2],SC_PMA_CH0_REG_TX_DRV01_DAC2_394_389[1],SC_PMA_CH0_REG_TX_DRV01_DAC2_394_389[0]" */,

    config input SC_PMA_CH0_REG_TX_DRV00_DAC0_400_395[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_DRV00_DAC0_400_395[5],SC_PMA_CH0_REG_TX_DRV00_DAC0_400_395[4],SC_PMA_CH0_REG_TX_DRV00_DAC0_400_395[3],SC_PMA_CH0_REG_TX_DRV00_DAC0_400_395[2],SC_PMA_CH0_REG_TX_DRV00_DAC0_400_395[1],SC_PMA_CH0_REG_TX_DRV00_DAC0_400_395[0]" */,

    config input SC_PMA_CH0_REG_TX_DRV00_DAC1_406_401[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_DRV00_DAC1_406_401[5],SC_PMA_CH0_REG_TX_DRV00_DAC1_406_401[4],SC_PMA_CH0_REG_TX_DRV00_DAC1_406_401[3],SC_PMA_CH0_REG_TX_DRV00_DAC1_406_401[2],SC_PMA_CH0_REG_TX_DRV00_DAC1_406_401[1],SC_PMA_CH0_REG_TX_DRV00_DAC1_406_401[0]" */,

    config input SC_PMA_CH0_REG_TX_DRV00_DAC2_412_407[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_DRV00_DAC2_412_407[5],SC_PMA_CH0_REG_TX_DRV00_DAC2_412_407[4],SC_PMA_CH0_REG_TX_DRV00_DAC2_412_407[3],SC_PMA_CH0_REG_TX_DRV00_DAC2_412_407[2],SC_PMA_CH0_REG_TX_DRV00_DAC2_412_407[1],SC_PMA_CH0_REG_TX_DRV00_DAC2_412_407[0]" */,

    config input SC_PMA_CH0_REG_TX_AMP0_418_413[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_AMP0_418_413[5],SC_PMA_CH0_REG_TX_AMP0_418_413[4],SC_PMA_CH0_REG_TX_AMP0_418_413[3],SC_PMA_CH0_REG_TX_AMP0_418_413[2],SC_PMA_CH0_REG_TX_AMP0_418_413[1],SC_PMA_CH0_REG_TX_AMP0_418_413[0]" */,

    config input SC_PMA_CH0_REG_TX_AMP1_424_419[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_AMP1_424_419[5],SC_PMA_CH0_REG_TX_AMP1_424_419[4],SC_PMA_CH0_REG_TX_AMP1_424_419[3],SC_PMA_CH0_REG_TX_AMP1_424_419[2],SC_PMA_CH0_REG_TX_AMP1_424_419[1],SC_PMA_CH0_REG_TX_AMP1_424_419[0]" */,

    config input SC_PMA_CH0_REG_TX_AMP2_430_425[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_AMP2_430_425[5],SC_PMA_CH0_REG_TX_AMP2_430_425[4],SC_PMA_CH0_REG_TX_AMP2_430_425[3],SC_PMA_CH0_REG_TX_AMP2_430_425[2],SC_PMA_CH0_REG_TX_AMP2_430_425[1],SC_PMA_CH0_REG_TX_AMP2_430_425[0]" */,

    config input SC_PMA_CH0_REG_TX_AMP3_436_431[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_AMP3_436_431[5],SC_PMA_CH0_REG_TX_AMP3_436_431[4],SC_PMA_CH0_REG_TX_AMP3_436_431[3],SC_PMA_CH0_REG_TX_AMP3_436_431[2],SC_PMA_CH0_REG_TX_AMP3_436_431[1],SC_PMA_CH0_REG_TX_AMP3_436_431[0]" */,

    config input SC_PMA_CH0_REG_TX_AMP4_442_437[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_AMP4_442_437[5],SC_PMA_CH0_REG_TX_AMP4_442_437[4],SC_PMA_CH0_REG_TX_AMP4_442_437[3],SC_PMA_CH0_REG_TX_AMP4_442_437[2],SC_PMA_CH0_REG_TX_AMP4_442_437[1],SC_PMA_CH0_REG_TX_AMP4_442_437[0]" */,

    config input SC_PMA_CH0_REG_TX_MARGIN_445_443[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_MARGIN_445_443[2],SC_PMA_CH0_REG_TX_MARGIN_445_443[1],SC_PMA_CH0_REG_TX_MARGIN_445_443[0]" */,

    config input SC_PMA_CH0_REG_TX_MARGIN_OW_446 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_MARGIN_OW_446" */,

    config input SC_PMA_CH0_REG_TX_DEEMP_448_447[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_DEEMP_448_447[1],SC_PMA_CH0_REG_TX_DEEMP_448_447[0]" */,

    config input SC_PMA_CH0_REG_TX_DEEMP_OW_449 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_DEEMP_OW_449" */,

    config input SC_PMA_CH0_REG_TX_SWING_450 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_SWING_450" */,

    config input SC_PMA_CH0_REG_TX_SWING_OW_451 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_SWING_OW_451" */,

    config input SC_PMA_CH0_REG_TX_RXDET_THRESHOLD_454_453[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_RXDET_THRESHOLD_454_453[1],SC_PMA_CH0_REG_TX_RXDET_THRESHOLD_454_453[0]" */,

    config input SC_PMA_CH0_REG_TX_BEACON_OSC_CTRL_457_455[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_BEACON_OSC_CTRL_457_455[2],SC_PMA_CH0_REG_TX_BEACON_OSC_CTRL_457_455[1],SC_PMA_CH0_REG_TX_BEACON_OSC_CTRL_457_455[0]" */,

    config input SC_PMA_CH0_REG_TX_PREDRV_DAC_459_458[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PREDRV_DAC_459_458[1],SC_PMA_CH0_REG_TX_PREDRV_DAC_459_458[0]" */,

    config input SC_PMA_CH0_REG_TX_PREDRV_CM_CTRL_461_460[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PREDRV_CM_CTRL_461_460[1],SC_PMA_CH0_REG_TX_PREDRV_CM_CTRL_461_460[0]" */,

    config input SC_PMA_CH0_REG_TX_TX2RX_SLPBACK_EN_462 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_TX2RX_SLPBACK_EN_462" */,

    config input SC_PMA_CH0_REG_TX_PCLK_EDGE_SEL_463 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PCLK_EDGE_SEL_463" */,

    config input SC_PMA_CH0_REG_TX_RXDET_STATUS_OW_464 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_RXDET_STATUS_OW_464" */,

    config input SC_PMA_CH0_REG_TX_RXDET_STATUS_465 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_RXDET_STATUS_465" */,

    config input SC_PMA_CH0_REG_TX_PRBS_GEN_EN_466 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PRBS_GEN_EN_466" */,

    config input SC_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL_468_467[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL_468_467[1],SC_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL_468_467[0]" */,

    config input SC_PMA_CH0_REG_TX_PRBS_SEL_470_469[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PRBS_SEL_470_469[1],SC_PMA_CH0_REG_TX_PRBS_SEL_470_469[0]" */,

    config input SC_PMA_CH0_REG_TX_UDP_DATA_490_471[19:0] = 20'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_UDP_DATA_490_471[19],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[18],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[17],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[16],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[15],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[14],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[13],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[12],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[11],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[10],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[9],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[8],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[7],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[6],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[5],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[4],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[3],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[2],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[1],SC_PMA_CH0_REG_TX_UDP_DATA_490_471[0]" */,

    config input SC_PMA_CH0_REG_TX_FIFO_RST_N_491 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_FIFO_RST_N_491" */,

    config input SC_PMA_CH0_REG_TX_FIFO_WP_CTRL_494_492[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_FIFO_WP_CTRL_494_492[2],SC_PMA_CH0_REG_TX_FIFO_WP_CTRL_494_492[1],SC_PMA_CH0_REG_TX_FIFO_WP_CTRL_494_492[0]" */,

    config input SC_PMA_CH0_REG_TX_FIFO_EN_495 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_FIFO_EN_495" */,

    config input SC_PMA_CH0_REG_TX_DATA_MUX_SEL_497_496[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_DATA_MUX_SEL_497_496[1],SC_PMA_CH0_REG_TX_DATA_MUX_SEL_497_496[0]" */,

    config input SC_PMA_CH0_REG_TX_ERR_INSERT_498 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_ERR_INSERT_498" */,

    config input SC_PMA_CH0_REG_TX_SATA_EN_504 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_SATA_EN_504" */,

    config input SC_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_OW_507 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_OW_507" */,

    config input SC_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_508 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_508" */,

    config input SC_PMA_CH0_REG_TX_PULLUP_DAC0_513_509[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PULLUP_DAC0_513_509[4],SC_PMA_CH0_REG_TX_PULLUP_DAC0_513_509[3],SC_PMA_CH0_REG_TX_PULLUP_DAC0_513_509[2],SC_PMA_CH0_REG_TX_PULLUP_DAC0_513_509[1],SC_PMA_CH0_REG_TX_PULLUP_DAC0_513_509[0]" */,

    config input SC_PMA_CH0_REG_TX_PULLUP_DAC1_518_514[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PULLUP_DAC1_518_514[4],SC_PMA_CH0_REG_TX_PULLUP_DAC1_518_514[3],SC_PMA_CH0_REG_TX_PULLUP_DAC1_518_514[2],SC_PMA_CH0_REG_TX_PULLUP_DAC1_518_514[1],SC_PMA_CH0_REG_TX_PULLUP_DAC1_518_514[0]" */,

    config input SC_PMA_CH0_REG_TX_PULLUP_DAC2_523_519[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PULLUP_DAC2_523_519[4],SC_PMA_CH0_REG_TX_PULLUP_DAC2_523_519[3],SC_PMA_CH0_REG_TX_PULLUP_DAC2_523_519[2],SC_PMA_CH0_REG_TX_PULLUP_DAC2_523_519[1],SC_PMA_CH0_REG_TX_PULLUP_DAC2_523_519[0]" */,

    config input SC_PMA_CH0_REG_TX_PULLUP_DAC3_528_524[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_PULLUP_DAC3_528_524[4],SC_PMA_CH0_REG_TX_PULLUP_DAC3_528_524[3],SC_PMA_CH0_REG_TX_PULLUP_DAC3_528_524[2],SC_PMA_CH0_REG_TX_PULLUP_DAC3_528_524[1],SC_PMA_CH0_REG_TX_PULLUP_DAC3_528_524[0]" */,

    config input SC_PMA_CH0_REG_TX_OOB_DELAY_SEL_532_529[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_OOB_DELAY_SEL_532_529[3],SC_PMA_CH0_REG_TX_OOB_DELAY_SEL_532_529[2],SC_PMA_CH0_REG_TX_OOB_DELAY_SEL_532_529[1],SC_PMA_CH0_REG_TX_OOB_DELAY_SEL_532_529[0]" */,

    config input SC_PMA_CH0_REG_TX_POLARITY_533 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_POLARITY_533" */,

    config input SC_PMA_CH0_REG_TX_SLPBK_AMP_535_534[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_SLPBK_AMP_535_534[1],SC_PMA_CH0_REG_TX_SLPBK_AMP_535_534[0]" */,

    config input SC_PMA_CH0_REG_TX_LS_MODE_EN_536 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_LS_MODE_EN_536" */,

    config input SC_PMA_CH0_REG_TX_JTAG_MODE_EN_OW_537 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_JTAG_MODE_EN_OW_537" */,

    config input SC_PMA_CH0_REG_TX_JTAG_MODE_EN_538 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_JTAG_MODE_EN_538" */,

    config input SC_PMA_CH0_REG_RX_JTAG_MODE_EN_OW_539 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_JTAG_MODE_EN_OW_539" */,

    config input SC_PMA_CH0_REG_RX_JTAG_MODE_EN_540 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_JTAG_MODE_EN_540" */,

    config input SC_PMA_CH0_REG_RX_JTAG_OE_541 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_JTAG_OE_541" */,

    config input SC_PMA_CH0_REG_RX_ACJTAG_VHYSTSE_544_542[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_ACJTAG_VHYSTSE_544_542[2],SC_PMA_CH0_REG_RX_ACJTAG_VHYSTSE_544_542[1],SC_PMA_CH0_REG_RX_ACJTAG_VHYSTSE_544_542[0]" */,

    config input SC_PMA_CH0_REG_TX_FBCLK_FAR_EN_545 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_FBCLK_FAR_EN_545" */,

    config input SC_PMA_CH0_REG_RX_TERM_MODE_CTRL_548_546[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_TERM_MODE_CTRL_548_546[2],SC_PMA_CH0_REG_RX_TERM_MODE_CTRL_548_546[1],SC_PMA_CH0_REG_RX_TERM_MODE_CTRL_548_546[0]" */,

    config input SC_PMA_CH0_REG_PLPBK_TXPCLK_EN_551 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_PLPBK_TXPCLK_EN_551" */,

    config input SC_PMA_CH0_REG_TX_609_600[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_TX_609_600[9],SC_PMA_CH0_REG_TX_609_600[8],SC_PMA_CH0_REG_TX_609_600[7],SC_PMA_CH0_REG_TX_609_600[6],SC_PMA_CH0_REG_TX_609_600[5],SC_PMA_CH0_REG_TX_609_600[4],SC_PMA_CH0_REG_TX_609_600[3],SC_PMA_CH0_REG_TX_609_600[2],SC_PMA_CH0_REG_TX_609_600[1],SC_PMA_CH0_REG_TX_609_600[0]" */,

    config input SC_PMA_CH0_REG_RX_CDR_617_610[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_CDR_617_610[7],SC_PMA_CH0_REG_RX_CDR_617_610[6],SC_PMA_CH0_REG_RX_CDR_617_610[5],SC_PMA_CH0_REG_RX_CDR_617_610[4],SC_PMA_CH0_REG_RX_CDR_617_610[3],SC_PMA_CH0_REG_RX_CDR_617_610[2],SC_PMA_CH0_REG_RX_CDR_617_610[1],SC_PMA_CH0_REG_RX_CDR_617_610[0]" */,

    config input SC_PMA_CH0_REG_RX_CDR_623_618[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_CDR_623_618[5],SC_PMA_CH0_REG_RX_CDR_623_618[4],SC_PMA_CH0_REG_RX_CDR_623_618[3],SC_PMA_CH0_REG_RX_CDR_623_618[2],SC_PMA_CH0_REG_RX_CDR_623_618[1],SC_PMA_CH0_REG_RX_CDR_623_618[0]" */,

    config input SC_PMA_CH0_REG_RX_631_624[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_631_624[7],SC_PMA_CH0_REG_RX_631_624[6],SC_PMA_CH0_REG_RX_631_624[5],SC_PMA_CH0_REG_RX_631_624[4],SC_PMA_CH0_REG_RX_631_624[3],SC_PMA_CH0_REG_RX_631_624[2],SC_PMA_CH0_REG_RX_631_624[1],SC_PMA_CH0_REG_RX_631_624[0]" */,

    config input SC_PMA_CH0_REG_RX_639_632[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_639_632[7],SC_PMA_CH0_REG_RX_639_632[6],SC_PMA_CH0_REG_RX_639_632[5],SC_PMA_CH0_REG_RX_639_632[4],SC_PMA_CH0_REG_RX_639_632[3],SC_PMA_CH0_REG_RX_639_632[2],SC_PMA_CH0_REG_RX_639_632[1],SC_PMA_CH0_REG_RX_639_632[0]" */,

    config input SC_PMA_CH0_REG_RX_647_640[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_647_640[7],SC_PMA_CH0_REG_RX_647_640[6],SC_PMA_CH0_REG_RX_647_640[5],SC_PMA_CH0_REG_RX_647_640[4],SC_PMA_CH0_REG_RX_647_640[3],SC_PMA_CH0_REG_RX_647_640[2],SC_PMA_CH0_REG_RX_647_640[1],SC_PMA_CH0_REG_RX_647_640[0]" */,

    config input SC_PMA_CH0_REG_RX_655_648[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_655_648[7],SC_PMA_CH0_REG_RX_655_648[6],SC_PMA_CH0_REG_RX_655_648[5],SC_PMA_CH0_REG_RX_655_648[4],SC_PMA_CH0_REG_RX_655_648[3],SC_PMA_CH0_REG_RX_655_648[2],SC_PMA_CH0_REG_RX_655_648[1],SC_PMA_CH0_REG_RX_655_648[0]" */,

    config input SC_PMA_CH0_REG_RX_659_656[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RX_659_656[3],SC_PMA_CH0_REG_RX_659_656[2],SC_PMA_CH0_REG_RX_659_656[1],SC_PMA_CH0_REG_RX_659_656[0]" */,

    config input SC_PMA_CH0_CFG_LANE_POWERUP_660 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_CFG_LANE_POWERUP_660" */,

    config input SC_PMA_CH0_CFG_PMA_POR_N_661 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_CFG_PMA_POR_N_661" */,

    config input SC_PMA_CH0_CFG_RX_LANE_POWERUP_662 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_CFG_RX_LANE_POWERUP_662" */,

    config input SC_PMA_CH0_CFG_RX_PMA_RSTN_663 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_CFG_RX_PMA_RSTN_663" */,

    config input SC_PMA_CH0_CFG_TX_LANE_POWERUP_664 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_CFG_TX_LANE_POWERUP_664" */,

    config input SC_PMA_CH0_CFG_TX_PMA_RSTN_665 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_CFG_TX_PMA_RSTN_665" */,

    config input SC_PMA_CH0_CFG_CTLE_ADP_RSTN_666 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_CFG_CTLE_ADP_RSTN_666" */,

    config input SC_PMA_CH0_REG_RESERVED_48_45[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_48_45[3],SC_PMA_CH0_REG_RESERVED_48_45[2],SC_PMA_CH0_REG_RESERVED_48_45[1],SC_PMA_CH0_REG_RESERVED_48_45[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_69 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_69" */,

    config input SC_PMA_CH0_REG_RESERVED_77_76[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_77_76[1],SC_PMA_CH0_REG_RESERVED_77_76[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_171_164[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_171_164[7],SC_PMA_CH0_REG_RESERVED_171_164[6],SC_PMA_CH0_REG_RESERVED_171_164[5],SC_PMA_CH0_REG_RESERVED_171_164[4],SC_PMA_CH0_REG_RESERVED_171_164[3],SC_PMA_CH0_REG_RESERVED_171_164[2],SC_PMA_CH0_REG_RESERVED_171_164[1],SC_PMA_CH0_REG_RESERVED_171_164[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_175_172[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_175_172[3],SC_PMA_CH0_REG_RESERVED_175_172[2],SC_PMA_CH0_REG_RESERVED_175_172[1],SC_PMA_CH0_REG_RESERVED_175_172[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_190 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_190" */,

    config input SC_PMA_CH0_REG_RESERVED_233_232[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_233_232[1],SC_PMA_CH0_REG_RESERVED_233_232[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_235_234[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_235_234[1],SC_PMA_CH0_REG_RESERVED_235_234[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_241_240[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_241_240[1],SC_PMA_CH0_REG_RESERVED_241_240[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_285_283[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_285_283[2],SC_PMA_CH0_REG_RESERVED_285_283[1],SC_PMA_CH0_REG_RESERVED_285_283[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_286 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_286" */,

    config input SC_PMA_CH0_REG_RESERVED_295 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_295" */,

    config input SC_PMA_CH0_REG_RESERVED_298 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_298" */,

    config input SC_PMA_CH0_REG_RESERVED_332_325[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_332_325[7],SC_PMA_CH0_REG_RESERVED_332_325[6],SC_PMA_CH0_REG_RESERVED_332_325[5],SC_PMA_CH0_REG_RESERVED_332_325[4],SC_PMA_CH0_REG_RESERVED_332_325[3],SC_PMA_CH0_REG_RESERVED_332_325[2],SC_PMA_CH0_REG_RESERVED_332_325[1],SC_PMA_CH0_REG_RESERVED_332_325[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_340_333[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_340_333[7],SC_PMA_CH0_REG_RESERVED_340_333[6],SC_PMA_CH0_REG_RESERVED_340_333[5],SC_PMA_CH0_REG_RESERVED_340_333[4],SC_PMA_CH0_REG_RESERVED_340_333[3],SC_PMA_CH0_REG_RESERVED_340_333[2],SC_PMA_CH0_REG_RESERVED_340_333[1],SC_PMA_CH0_REG_RESERVED_340_333[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_348_341[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_348_341[7],SC_PMA_CH0_REG_RESERVED_348_341[6],SC_PMA_CH0_REG_RESERVED_348_341[5],SC_PMA_CH0_REG_RESERVED_348_341[4],SC_PMA_CH0_REG_RESERVED_348_341[3],SC_PMA_CH0_REG_RESERVED_348_341[2],SC_PMA_CH0_REG_RESERVED_348_341[1],SC_PMA_CH0_REG_RESERVED_348_341[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_354_349[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_354_349[5],SC_PMA_CH0_REG_RESERVED_354_349[4],SC_PMA_CH0_REG_RESERVED_354_349[3],SC_PMA_CH0_REG_RESERVED_354_349[2],SC_PMA_CH0_REG_RESERVED_354_349[1],SC_PMA_CH0_REG_RESERVED_354_349[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_373 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_373" */,

    config input SC_PMA_CH0_REG_RESERVED_376 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_376" */,

    config input SC_PMA_CH0_REG_RESERVED_452 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_452" */,

    config input SC_PMA_CH0_REG_RESERVED_502_499[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_502_499[3],SC_PMA_CH0_REG_RESERVED_502_499[2],SC_PMA_CH0_REG_RESERVED_502_499[1],SC_PMA_CH0_REG_RESERVED_502_499[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_506_505[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_506_505[1],SC_PMA_CH0_REG_RESERVED_506_505[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_550_549[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_550_549[1],SC_PMA_CH0_REG_RESERVED_550_549[0]" */,

    config input SC_PMA_CH0_REG_RESERVED_556_552[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH0_REG_RESERVED_556_552[4],SC_PMA_CH0_REG_RESERVED_556_552[3],SC_PMA_CH0_REG_RESERVED_556_552[2],SC_PMA_CH0_REG_RESERVED_556_552[1],SC_PMA_CH0_REG_RESERVED_556_552[0]" */,

    config input SC_PMA_CH1_REG_RX_PD_0 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_PD_0" */,

    config input SC_PMA_CH1_REG_RX_PD_EN_1 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_PD_EN_1" */,

    config input SC_PMA_CH1_REG_RX_CLKPATH_PD_2 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_CLKPATH_PD_2" */,

    config input SC_PMA_CH1_REG_RX_CLKPATH_PD_EN_3 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_CLKPATH_PD_EN_3" */,

    config input SC_PMA_CH1_REG_RX_DATAPATH_PD_4 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_DATAPATH_PD_4" */,

    config input SC_PMA_CH1_REG_RX_DATAPATH_PD_EN_5 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_DATAPATH_PD_EN_5" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_PD_6 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_PD_6" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_PD_EN_7 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_PD_EN_7" */,

    config input SC_PMA_CH1_REG_RX_DCC_RST_N_8 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_DCC_RST_N_8" */,

    config input SC_PMA_CH1_REG_RX_DCC_RST_N_EN_9 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_DCC_RST_N_EN_9" */,

    config input SC_PMA_CH1_REG_RX_CDR_RST_N_10 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_CDR_RST_N_10" */,

    config input SC_PMA_CH1_REG_RX_CDR_RST_N_EN_11 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_CDR_RST_N_EN_11" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_RST_N_12 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_RST_N_12" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_RST_N_EN_13 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_RST_N_EN_13" */,

    config input SC_PMA_CH1_REG_RXPCLK_SLIP_14 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RXPCLK_SLIP_14" */,

    config input SC_PMA_CH1_REG_RXPCLK_SLIP_OW_15 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RXPCLK_SLIP_OW_15" */,

    config input SC_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_16 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_16" */,

    config input SC_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_EN_17 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_EN_17" */,

    config input SC_PMA_CH1_REG_RX_PCLKSWITCH_18 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_PCLKSWITCH_18" */,

    config input SC_PMA_CH1_REG_RX_PCLKSWITCH_EN_19 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_PCLKSWITCH_EN_19" */,

    config input SC_PMA_CH1_REG_RX_HIGHZ_20 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_HIGHZ_20" */,

    config input SC_PMA_CH1_REG_RX_HIGHZ_EN_21 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_HIGHZ_EN_21" */,

    config input SC_PMA_CH1_REG_RX_EQ_C_SET_25_22[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_EQ_C_SET_25_22[3],SC_PMA_CH1_REG_RX_EQ_C_SET_25_22[2],SC_PMA_CH1_REG_RX_EQ_C_SET_25_22[1],SC_PMA_CH1_REG_RX_EQ_C_SET_25_22[0]" */,

    config input SC_PMA_CH1_REG_RX_EQ_R_SET_29_26[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_EQ_R_SET_29_26[3],SC_PMA_CH1_REG_RX_EQ_R_SET_29_26[2],SC_PMA_CH1_REG_RX_EQ_R_SET_29_26[1],SC_PMA_CH1_REG_RX_EQ_R_SET_29_26[0]" */,

    config input SC_PMA_CH1_REG_RX_BUSWIDTH_32_30[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_BUSWIDTH_32_30[2],SC_PMA_CH1_REG_RX_BUSWIDTH_32_30[1],SC_PMA_CH1_REG_RX_BUSWIDTH_32_30[0]" */,

    config input SC_PMA_CH1_REG_RX_BUSWIDTH_EN_33 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_BUSWIDTH_EN_33" */,

    config input SC_PMA_CH1_REG_RX_RATE_36_34[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_RATE_36_34[2],SC_PMA_CH1_REG_RX_RATE_36_34[1],SC_PMA_CH1_REG_RX_RATE_36_34[0]" */,

    config input SC_PMA_CH1_REG_RX_RATE_EN_37 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_RATE_EN_37" */,

    config input SC_PMA_CH1_REG_RX_RES_TRIM_43_38[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_RES_TRIM_43_38[5],SC_PMA_CH1_REG_RX_RES_TRIM_43_38[4],SC_PMA_CH1_REG_RX_RES_TRIM_43_38[3],SC_PMA_CH1_REG_RX_RES_TRIM_43_38[2],SC_PMA_CH1_REG_RX_RES_TRIM_43_38[1],SC_PMA_CH1_REG_RX_RES_TRIM_43_38[0]" */,

    config input SC_PMA_CH1_REG_RX_RES_TRIM_EN_44 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_RES_TRIM_EN_44" */,

    config input SC_PMA_CH1_REG_RX_ICTRL_SIGDET_52_49[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_ICTRL_SIGDET_52_49[3],SC_PMA_CH1_REG_RX_ICTRL_SIGDET_52_49[2],SC_PMA_CH1_REG_RX_ICTRL_SIGDET_52_49[1],SC_PMA_CH1_REG_RX_ICTRL_SIGDET_52_49[0]" */,

    config input SC_PMA_CH1_REG_RX_EQ_OFF_53 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_EQ_OFF_53" */,

    config input SC_PMA_CH1_REG_RX_PREAMP_IC_65_54[11:0] = 12'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_PREAMP_IC_65_54[11],SC_PMA_CH1_REG_RX_PREAMP_IC_65_54[10],SC_PMA_CH1_REG_RX_PREAMP_IC_65_54[9],SC_PMA_CH1_REG_RX_PREAMP_IC_65_54[8],SC_PMA_CH1_REG_RX_PREAMP_IC_65_54[7],SC_PMA_CH1_REG_RX_PREAMP_IC_65_54[6],SC_PMA_CH1_REG_RX_PREAMP_IC_65_54[5],SC_PMA_CH1_REG_RX_PREAMP_IC_65_54[4],SC_PMA_CH1_REG_RX_PREAMP_IC_65_54[3],SC_PMA_CH1_REG_RX_PREAMP_IC_65_54[2],SC_PMA_CH1_REG_RX_PREAMP_IC_65_54[1],SC_PMA_CH1_REG_RX_PREAMP_IC_65_54[0]" */,

    config input SC_PMA_CH1_REG_RX_PCLK_EDGE_SEL_66 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_PCLK_EDGE_SEL_66" */,

    config input SC_PMA_CH1_REG_RX_PIBUF_IC_68_67[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_PIBUF_IC_68_67[1],SC_PMA_CH1_REG_RX_PIBUF_IC_68_67[0]" */,

    config input SC_PMA_CH1_REG_RX_DCC_IC_RX_71_70[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_DCC_IC_RX_71_70[1],SC_PMA_CH1_REG_RX_DCC_IC_RX_71_70[0]" */,

    config input SC_PMA_CH1_REG_RX_DCC_IC_TX_73_72[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_DCC_IC_TX_73_72[1],SC_PMA_CH1_REG_RX_DCC_IC_TX_73_72[0]" */,

    config input SC_PMA_CH1_REG_RX_ICTRL_TRX_75_74[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_ICTRL_TRX_75_74[1],SC_PMA_CH1_REG_RX_ICTRL_TRX_75_74[0]" */,

    config input SC_PMA_CH1_REG_RX_ICTRL_PREAMP_79_78[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_ICTRL_PREAMP_79_78[1],SC_PMA_CH1_REG_RX_ICTRL_PREAMP_79_78[0]" */,

    config input SC_PMA_CH1_REG_RX_ICTRL_SLICER_81_80[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_ICTRL_SLICER_81_80[1],SC_PMA_CH1_REG_RX_ICTRL_SLICER_81_80[0]" */,

    config input SC_PMA_CH1_REG_RX_ICTRL_PIBUF_83_82[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_ICTRL_PIBUF_83_82[1],SC_PMA_CH1_REG_RX_ICTRL_PIBUF_83_82[0]" */,

    config input SC_PMA_CH1_REG_RX_ICTRL_PI_85_84[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_ICTRL_PI_85_84[1],SC_PMA_CH1_REG_RX_ICTRL_PI_85_84[0]" */,

    config input SC_PMA_CH1_REG_RX_ICTRL_DCC_87_86[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_ICTRL_DCC_87_86[1],SC_PMA_CH1_REG_RX_ICTRL_DCC_87_86[0]" */,

    config input SC_PMA_CH1_REG_RX_ICTRL_PREDRV_89_88[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_ICTRL_PREDRV_89_88[1],SC_PMA_CH1_REG_RX_ICTRL_PREDRV_89_88[0]" */,

    config input SC_PMA_CH1_REG_TX_RATE_92_90[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_RATE_92_90[2],SC_PMA_CH1_REG_TX_RATE_92_90[1],SC_PMA_CH1_REG_TX_RATE_92_90[0]" */,

    config input SC_PMA_CH1_REG_TX_RATE_EN_93 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_RATE_EN_93" */,

    config input SC_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_94 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_94" */,

    config input SC_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_EN_95 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_EN_95" */,

    config input SC_PMA_CH1_REG_RX_TX2RX_PLPBK_EN_96 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_TX2RX_PLPBK_EN_96" */,

    config input SC_PMA_CH1_REG_TXCLK_SEL_97 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TXCLK_SEL_97" */,

    config input SC_PMA_CH1_REG_RX_DATA_POLARITY_98 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_DATA_POLARITY_98" */,

    config input SC_PMA_CH1_REG_RX_ERR_INSERT_99 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_ERR_INSERT_99" */,

    config input SC_PMA_CH1_REG_UDP_CHK_EN_100 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_UDP_CHK_EN_100" */,

    config input SC_PMA_CH1_REG_PRBS_SEL_102_101[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_PRBS_SEL_102_101[1],SC_PMA_CH1_REG_PRBS_SEL_102_101[0]" */,

    config input SC_PMA_CH1_REG_PRBS_CHK_EN_103 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_PRBS_CHK_EN_103" */,

    config input SC_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL_105_104[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL_105_104[1],SC_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL_105_104[0]" */,

    config input SC_PMA_CH1_REG_BIST_CHK_PAT_SEL_106 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_BIST_CHK_PAT_SEL_106" */,

    config input SC_PMA_CH1_REG_LOAD_ERR_CNT_107 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_LOAD_ERR_CNT_107" */,

    config input SC_PMA_CH1_REG_CHK_COUNTER_EN_108 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CHK_COUNTER_EN_108" */,

    config input SC_PMA_CH1_REG_CDR_PROP_GAIN_111_109[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_PROP_GAIN_111_109[2],SC_PMA_CH1_REG_CDR_PROP_GAIN_111_109[1],SC_PMA_CH1_REG_CDR_PROP_GAIN_111_109[0]" */,

    config input SC_PMA_CH1_REG_CDR_PROP_TURBO_GAIN_114_112[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_PROP_TURBO_GAIN_114_112[2],SC_PMA_CH1_REG_CDR_PROP_TURBO_GAIN_114_112[1],SC_PMA_CH1_REG_CDR_PROP_TURBO_GAIN_114_112[0]" */,

    config input SC_PMA_CH1_REG_CDR_INT_GAIN_117_115[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_INT_GAIN_117_115[2],SC_PMA_CH1_REG_CDR_INT_GAIN_117_115[1],SC_PMA_CH1_REG_CDR_INT_GAIN_117_115[0]" */,

    config input SC_PMA_CH1_REG_CDR_INT_TURBO_GAIN_120_118[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_INT_TURBO_GAIN_120_118[2],SC_PMA_CH1_REG_CDR_INT_TURBO_GAIN_120_118[1],SC_PMA_CH1_REG_CDR_INT_TURBO_GAIN_120_118[0]" */,

    config input SC_PMA_CH1_REG_CDR_INT_SAT_MAX_130_121[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_INT_SAT_MAX_130_121[9],SC_PMA_CH1_REG_CDR_INT_SAT_MAX_130_121[8],SC_PMA_CH1_REG_CDR_INT_SAT_MAX_130_121[7],SC_PMA_CH1_REG_CDR_INT_SAT_MAX_130_121[6],SC_PMA_CH1_REG_CDR_INT_SAT_MAX_130_121[5],SC_PMA_CH1_REG_CDR_INT_SAT_MAX_130_121[4],SC_PMA_CH1_REG_CDR_INT_SAT_MAX_130_121[3],SC_PMA_CH1_REG_CDR_INT_SAT_MAX_130_121[2],SC_PMA_CH1_REG_CDR_INT_SAT_MAX_130_121[1],SC_PMA_CH1_REG_CDR_INT_SAT_MAX_130_121[0]" */,

    config input SC_PMA_CH1_REG_CDR_INT_SAT_MIN_140_131[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_INT_SAT_MIN_140_131[9],SC_PMA_CH1_REG_CDR_INT_SAT_MIN_140_131[8],SC_PMA_CH1_REG_CDR_INT_SAT_MIN_140_131[7],SC_PMA_CH1_REG_CDR_INT_SAT_MIN_140_131[6],SC_PMA_CH1_REG_CDR_INT_SAT_MIN_140_131[5],SC_PMA_CH1_REG_CDR_INT_SAT_MIN_140_131[4],SC_PMA_CH1_REG_CDR_INT_SAT_MIN_140_131[3],SC_PMA_CH1_REG_CDR_INT_SAT_MIN_140_131[2],SC_PMA_CH1_REG_CDR_INT_SAT_MIN_140_131[1],SC_PMA_CH1_REG_CDR_INT_SAT_MIN_140_131[0]" */,

    config input SC_PMA_CH1_REG_CDR_INT_RST_141 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_INT_RST_141" */,

    config input SC_PMA_CH1_REG_CDR_INT_RST_OW_142 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_INT_RST_OW_142" */,

    config input SC_PMA_CH1_REG_CDR_PROP_RST_143 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_PROP_RST_143" */,

    config input SC_PMA_CH1_REG_CDR_PROP_RST_OW_144 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_PROP_RST_OW_144" */,

    config input SC_PMA_CH1_REG_CDR_LOCK_RST_145 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_LOCK_RST_145" */,

    config input SC_PMA_CH1_REG_CDR_LOCK_RST_OW_146 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_LOCK_RST_OW_146" */,

    config input SC_PMA_CH1_REG_CDR_RX_PI_FORCE_SEL_147 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_RX_PI_FORCE_SEL_147" */,

    config input SC_PMA_CH1_REG_CDR_RX_PI_FORCE_D_155_148[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_RX_PI_FORCE_D_155_148[7],SC_PMA_CH1_REG_CDR_RX_PI_FORCE_D_155_148[6],SC_PMA_CH1_REG_CDR_RX_PI_FORCE_D_155_148[5],SC_PMA_CH1_REG_CDR_RX_PI_FORCE_D_155_148[4],SC_PMA_CH1_REG_CDR_RX_PI_FORCE_D_155_148[3],SC_PMA_CH1_REG_CDR_RX_PI_FORCE_D_155_148[2],SC_PMA_CH1_REG_CDR_RX_PI_FORCE_D_155_148[1],SC_PMA_CH1_REG_CDR_RX_PI_FORCE_D_155_148[0]" */,

    config input SC_PMA_CH1_REG_CDR_LOCK_TIMER_158_156[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_LOCK_TIMER_158_156[2],SC_PMA_CH1_REG_CDR_LOCK_TIMER_158_156[1],SC_PMA_CH1_REG_CDR_LOCK_TIMER_158_156[0]" */,

    config input SC_PMA_CH1_REG_CDR_TURBO_MODE_TIMER_160_159[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_TURBO_MODE_TIMER_160_159[1],SC_PMA_CH1_REG_CDR_TURBO_MODE_TIMER_160_159[0]" */,

    config input SC_PMA_CH1_REG_CDR_LOCK_VAL_161 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_LOCK_VAL_161" */,

    config input SC_PMA_CH1_REG_CDR_LOCK_OW_162 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_LOCK_OW_162" */,

    config input SC_PMA_CH1_REG_CDR_INT_SAT_DET_EN_163 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_INT_SAT_DET_EN_163" */,

    config input SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_EN_176 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_EN_176" */,

    config input SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_RESET_EN_177 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_RESET_EN_177" */,

    config input SC_PMA_CH1_REG_CDR_PI_CTRL_RST_178 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_PI_CTRL_RST_178" */,

    config input SC_PMA_CH1_REG_CDR_PI_CTRL_RST_OW_179 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_PI_CTRL_RST_OW_179" */,

    config input SC_PMA_CH1_REG_CDR_SAT_DET_RST_180 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_SAT_DET_RST_180" */,

    config input SC_PMA_CH1_REG_CDR_SAT_DET_RST_OW_181 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_SAT_DET_RST_OW_181" */,

    config input SC_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_182 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_182" */,

    config input SC_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_OW_183 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_OW_183" */,

    config input SC_PMA_CH1_REG_CDR_SIGDET_STATUS_DIS_184 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_SIGDET_STATUS_DIS_184" */,

    config input SC_PMA_CH1_REG_CDR_SAT_DET_TIMER_186_185[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_SAT_DET_TIMER_186_185[1],SC_PMA_CH1_REG_CDR_SAT_DET_TIMER_186_185[0]" */,

    config input SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_VAL_187 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_VAL_187" */,

    config input SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_OW_188 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_OW_188" */,

    config input SC_PMA_CH1_REG_CDR_TURBO_MODE_EN_189 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_TURBO_MODE_EN_189" */,

    config input SC_PMA_CH1_REG_CDR_STATUS_RADDR_INIT_193_191[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_STATUS_RADDR_INIT_193_191[2],SC_PMA_CH1_REG_CDR_STATUS_RADDR_INIT_193_191[1],SC_PMA_CH1_REG_CDR_STATUS_RADDR_INIT_193_191[0]" */,

    config input SC_PMA_CH1_REG_CDR_STATUS_FIFO_EN_194 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_CDR_STATUS_FIFO_EN_194" */,

    config input SC_PMA_CH1_REG_PMA_TEST_SEL_197_195[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_PMA_TEST_SEL_197_195[2],SC_PMA_CH1_REG_PMA_TEST_SEL_197_195[1],SC_PMA_CH1_REG_PMA_TEST_SEL_197_195[0]" */,

    config input SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN_203_198[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN_203_198[5],SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN_203_198[4],SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN_203_198[3],SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN_203_198[2],SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN_203_198[1],SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN_203_198[0]" */,

    config input SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX_209_204[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX_209_204[5],SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX_209_204[4],SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX_209_204[3],SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX_209_204[2],SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX_209_204[1],SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX_209_204[0]" */,

    config input SC_PMA_CH1_REG_OOB_COMINIT_GAP_MIN_217_210[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_OOB_COMINIT_GAP_MIN_217_210[7],SC_PMA_CH1_REG_OOB_COMINIT_GAP_MIN_217_210[6],SC_PMA_CH1_REG_OOB_COMINIT_GAP_MIN_217_210[5],SC_PMA_CH1_REG_OOB_COMINIT_GAP_MIN_217_210[4],SC_PMA_CH1_REG_OOB_COMINIT_GAP_MIN_217_210[3],SC_PMA_CH1_REG_OOB_COMINIT_GAP_MIN_217_210[2],SC_PMA_CH1_REG_OOB_COMINIT_GAP_MIN_217_210[1],SC_PMA_CH1_REG_OOB_COMINIT_GAP_MIN_217_210[0]" */,

    config input SC_PMA_CH1_REG_OOB_COMINIT_GAP_MAX_225_218[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_OOB_COMINIT_GAP_MAX_225_218[7],SC_PMA_CH1_REG_OOB_COMINIT_GAP_MAX_225_218[6],SC_PMA_CH1_REG_OOB_COMINIT_GAP_MAX_225_218[5],SC_PMA_CH1_REG_OOB_COMINIT_GAP_MAX_225_218[4],SC_PMA_CH1_REG_OOB_COMINIT_GAP_MAX_225_218[3],SC_PMA_CH1_REG_OOB_COMINIT_GAP_MAX_225_218[2],SC_PMA_CH1_REG_OOB_COMINIT_GAP_MAX_225_218[1],SC_PMA_CH1_REG_OOB_COMINIT_GAP_MAX_225_218[0]" */,

    config input SC_PMA_CH1_REG_RX_PIBUF_IC_TX_227_226[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_PIBUF_IC_TX_227_226[1],SC_PMA_CH1_REG_RX_PIBUF_IC_TX_227_226[0]" */,

    config input SC_PMA_CH1_REG_COMWAKE_STATUS_CLEAR_228 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_COMWAKE_STATUS_CLEAR_228" */,

    config input SC_PMA_CH1_REG_COMINIT_STATUS_CLEAR_229 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_COMINIT_STATUS_CLEAR_229" */,

    config input SC_PMA_CH1_REG_RX_SYNC_RST_N_EN_230 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SYNC_RST_N_EN_230" */,

    config input SC_PMA_CH1_REG_RX_SYNC_RST_N_231 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SYNC_RST_N_231" */,

    config input SC_PMA_CH1_REG_RX_SATA_COMINIT_OW_236 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SATA_COMINIT_OW_236" */,

    config input SC_PMA_CH1_REG_RX_SATA_COMINIT_237 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SATA_COMINIT_237" */,

    config input SC_PMA_CH1_REG_RX_SATA_COMWAKE_OW_238 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SATA_COMWAKE_OW_238" */,

    config input SC_PMA_CH1_REG_RX_SATA_COMWAKE_239 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SATA_COMWAKE_239" */,

    config input SC_PMA_CH1_REG_RX_DCC_DISABLE_242 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_DCC_DISABLE_242" */,

    config input SC_PMA_CH1_REG_TX_DCC_DISABLE_243 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_DCC_DISABLE_243" */,

    config input SC_PMA_CH1_REG_RX_SLIP_SEL_EN_244 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SLIP_SEL_EN_244" */,

    config input SC_PMA_CH1_REG_RX_SLIP_SEL_248_245[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SLIP_SEL_248_245[3],SC_PMA_CH1_REG_RX_SLIP_SEL_248_245[2],SC_PMA_CH1_REG_RX_SLIP_SEL_248_245[1],SC_PMA_CH1_REG_RX_SLIP_SEL_248_245[0]" */,

    config input SC_PMA_CH1_REG_RX_SLIP_EN_249 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SLIP_EN_249" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_STATUS_SEL_252_250[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_STATUS_SEL_252_250[2],SC_PMA_CH1_REG_RX_SIGDET_STATUS_SEL_252_250[1],SC_PMA_CH1_REG_RX_SIGDET_STATUS_SEL_252_250[0]" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_FSM_RST_N_253 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_FSM_RST_N_253" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_STATUS_OW_254 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_STATUS_OW_254" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_STATUS_255 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_STATUS_255" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_VTH_259_256[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_VTH_259_256[3],SC_PMA_CH1_REG_RX_SIGDET_VTH_259_256[2],SC_PMA_CH1_REG_RX_SIGDET_VTH_259_256[1],SC_PMA_CH1_REG_RX_SIGDET_VTH_259_256[0]" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_GRM_261_260[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_GRM_261_260[1],SC_PMA_CH1_REG_RX_SIGDET_GRM_261_260[0]" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_PULSE_EXT_262 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_PULSE_EXT_262" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_CH2_SEL_263 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_CH2_SEL_263" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[4],SC_PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[3],SC_PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[2],SC_PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[1],SC_PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[0]" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_CHK_WINDOW_EN_269 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_CHK_WINDOW_EN_269" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[2],SC_PMA_CH1_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[1],SC_PMA_CH1_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[0]" */,

    config input SC_PMA_CH1_REG_SLIP_FIFO_INV_EN_273 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_SLIP_FIFO_INV_EN_273" */,

    config input SC_PMA_CH1_REG_SLIP_FIFO_INV_274 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_SLIP_FIFO_INV_274" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[4],SC_PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[3],SC_PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[2],SC_PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[1],SC_PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[0]" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_4OOB_DET_SEL_282_280[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_4OOB_DET_SEL_282_280[2],SC_PMA_CH1_REG_RX_SIGDET_4OOB_DET_SEL_282_280[1],SC_PMA_CH1_REG_RX_SIGDET_4OOB_DET_SEL_282_280[0]" */,

    config input SC_PMA_CH1_REG_RX_SIGDET_IC_I_290_287[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_SIGDET_IC_I_290_287[3],SC_PMA_CH1_REG_RX_SIGDET_IC_I_290_287[2],SC_PMA_CH1_REG_RX_SIGDET_IC_I_290_287[1],SC_PMA_CH1_REG_RX_SIGDET_IC_I_290_287[0]" */,

    config input SC_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_OW_291 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_OW_291" */,

    config input SC_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_292 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_292" */,

    config input SC_PMA_CH1_REG_RX_OOB_DETECTOR_PD_OW_293 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_OOB_DETECTOR_PD_OW_293" */,

    config input SC_PMA_CH1_REG_RX_OOB_DETECTOR_PD_294 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_OOB_DETECTOR_PD_294" */,

    config input SC_PMA_CH1_REG_RX_TERM_CM_CTRL_297_296[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_TERM_CM_CTRL_297_296[1],SC_PMA_CH1_REG_RX_TERM_CM_CTRL_297_296[0]" */,

    config input SC_PMA_CH1_REG_TX_PD_299 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PD_299" */,

    config input SC_PMA_CH1_REG_TX_PD_OW_300 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PD_OW_300" */,

    config input SC_PMA_CH1_REG_TX_CLKPATH_PD_301 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_CLKPATH_PD_301" */,

    config input SC_PMA_CH1_REG_TX_CLKPATH_PD_OW_302 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_CLKPATH_PD_OW_302" */,

    config input SC_PMA_CH1_REG_TX_BEACON_TIMER_SEL_304_303[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_BEACON_TIMER_SEL_304_303[1],SC_PMA_CH1_REG_TX_BEACON_TIMER_SEL_304_303[0]" */,

    config input SC_PMA_CH1_REG_TX_RXDET_REQ_OW_305 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_RXDET_REQ_OW_305" */,

    config input SC_PMA_CH1_REG_TX_RXDET_REQ_306 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_RXDET_REQ_306" */,

    config input SC_PMA_CH1_REG_TX_BEACON_EN_OW_307 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_BEACON_EN_OW_307" */,

    config input SC_PMA_CH1_REG_TX_BEACON_EN_308 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_BEACON_EN_308" */,

    config input SC_PMA_CH1_REG_TX_EI_EN_OW_309 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_EI_EN_OW_309" */,

    config input SC_PMA_CH1_REG_TX_EI_EN_310 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_EI_EN_310" */,

    config input SC_PMA_CH1_REG_TX_RES_CAL_EN_311 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_RES_CAL_EN_311" */,

    config input SC_PMA_CH1_REG_TX_RES_CAL_317_312[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_RES_CAL_317_312[5],SC_PMA_CH1_REG_TX_RES_CAL_317_312[4],SC_PMA_CH1_REG_TX_RES_CAL_317_312[3],SC_PMA_CH1_REG_TX_RES_CAL_317_312[2],SC_PMA_CH1_REG_TX_RES_CAL_317_312[1],SC_PMA_CH1_REG_TX_RES_CAL_317_312[0]" */,

    config input SC_PMA_CH1_REG_TX_BIAS_CAL_EN_318 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_BIAS_CAL_EN_318" */,

    config input SC_PMA_CH1_REG_TX_BIAS_CTRL_324_319[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_BIAS_CTRL_324_319[5],SC_PMA_CH1_REG_TX_BIAS_CTRL_324_319[4],SC_PMA_CH1_REG_TX_BIAS_CTRL_324_319[3],SC_PMA_CH1_REG_TX_BIAS_CTRL_324_319[2],SC_PMA_CH1_REG_TX_BIAS_CTRL_324_319[1],SC_PMA_CH1_REG_TX_BIAS_CTRL_324_319[0]" */,

    config input SC_PMA_CH1_REG_TX_RXDET_TIMER_SEL_356_355[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_RXDET_TIMER_SEL_356_355[1],SC_PMA_CH1_REG_TX_RXDET_TIMER_SEL_356_355[0]" */,

    config input SC_PMA_CH1_REG_TX_SYNC_OW_357 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_SYNC_OW_357" */,

    config input SC_PMA_CH1_REG_TX_SYNC_358 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_SYNC_358" */,

    config input SC_PMA_CH1_REG_TX_PD_POST_359 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PD_POST_359" */,

    config input SC_PMA_CH1_REG_TX_PD_POST_OW_360 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PD_POST_OW_360" */,

    config input SC_PMA_CH1_REG_TX_RESET_N_OW_361 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_RESET_N_OW_361" */,

    config input SC_PMA_CH1_REG_TX_RESET_N_362 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_RESET_N_362" */,

    config input SC_PMA_CH1_REG_TX_DCC_RESET_N_OW_363 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_DCC_RESET_N_OW_363" */,

    config input SC_PMA_CH1_REG_TX_DCC_RESET_N_364 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_DCC_RESET_N_364" */,

    config input SC_PMA_CH1_REG_TX_BUSWIDTH_OW_365 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_BUSWIDTH_OW_365" */,

    config input SC_PMA_CH1_REG_TX_BUSWIDTH_368_366[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_BUSWIDTH_368_366[2],SC_PMA_CH1_REG_TX_BUSWIDTH_368_366[1],SC_PMA_CH1_REG_TX_BUSWIDTH_368_366[0]" */,

    config input SC_PMA_CH1_REG_PLL_READY_OW_369 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_PLL_READY_OW_369" */,

    config input SC_PMA_CH1_REG_PLL_READY_370 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_PLL_READY_370" */,

    config input SC_PMA_CH1_REG_TX_PCLK_SW_OW_371 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PCLK_SW_OW_371" */,

    config input SC_PMA_CH1_REG_TX_PCLK_SW_372 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PCLK_SW_372" */,

    config input SC_PMA_CH1_REG_EI_PCLK_DELAY_SEL_375_374[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_EI_PCLK_DELAY_SEL_375_374[1],SC_PMA_CH1_REG_EI_PCLK_DELAY_SEL_375_374[0]" */,

    config input SC_PMA_CH1_REG_TX_DRV01_DAC0_382_377[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_DRV01_DAC0_382_377[5],SC_PMA_CH1_REG_TX_DRV01_DAC0_382_377[4],SC_PMA_CH1_REG_TX_DRV01_DAC0_382_377[3],SC_PMA_CH1_REG_TX_DRV01_DAC0_382_377[2],SC_PMA_CH1_REG_TX_DRV01_DAC0_382_377[1],SC_PMA_CH1_REG_TX_DRV01_DAC0_382_377[0]" */,

    config input SC_PMA_CH1_REG_TX_DRV01_DAC1_388_383[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_DRV01_DAC1_388_383[5],SC_PMA_CH1_REG_TX_DRV01_DAC1_388_383[4],SC_PMA_CH1_REG_TX_DRV01_DAC1_388_383[3],SC_PMA_CH1_REG_TX_DRV01_DAC1_388_383[2],SC_PMA_CH1_REG_TX_DRV01_DAC1_388_383[1],SC_PMA_CH1_REG_TX_DRV01_DAC1_388_383[0]" */,

    config input SC_PMA_CH1_REG_TX_DRV01_DAC2_394_389[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_DRV01_DAC2_394_389[5],SC_PMA_CH1_REG_TX_DRV01_DAC2_394_389[4],SC_PMA_CH1_REG_TX_DRV01_DAC2_394_389[3],SC_PMA_CH1_REG_TX_DRV01_DAC2_394_389[2],SC_PMA_CH1_REG_TX_DRV01_DAC2_394_389[1],SC_PMA_CH1_REG_TX_DRV01_DAC2_394_389[0]" */,

    config input SC_PMA_CH1_REG_TX_DRV00_DAC0_400_395[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_DRV00_DAC0_400_395[5],SC_PMA_CH1_REG_TX_DRV00_DAC0_400_395[4],SC_PMA_CH1_REG_TX_DRV00_DAC0_400_395[3],SC_PMA_CH1_REG_TX_DRV00_DAC0_400_395[2],SC_PMA_CH1_REG_TX_DRV00_DAC0_400_395[1],SC_PMA_CH1_REG_TX_DRV00_DAC0_400_395[0]" */,

    config input SC_PMA_CH1_REG_TX_DRV00_DAC1_406_401[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_DRV00_DAC1_406_401[5],SC_PMA_CH1_REG_TX_DRV00_DAC1_406_401[4],SC_PMA_CH1_REG_TX_DRV00_DAC1_406_401[3],SC_PMA_CH1_REG_TX_DRV00_DAC1_406_401[2],SC_PMA_CH1_REG_TX_DRV00_DAC1_406_401[1],SC_PMA_CH1_REG_TX_DRV00_DAC1_406_401[0]" */,

    config input SC_PMA_CH1_REG_TX_DRV00_DAC2_412_407[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_DRV00_DAC2_412_407[5],SC_PMA_CH1_REG_TX_DRV00_DAC2_412_407[4],SC_PMA_CH1_REG_TX_DRV00_DAC2_412_407[3],SC_PMA_CH1_REG_TX_DRV00_DAC2_412_407[2],SC_PMA_CH1_REG_TX_DRV00_DAC2_412_407[1],SC_PMA_CH1_REG_TX_DRV00_DAC2_412_407[0]" */,

    config input SC_PMA_CH1_REG_TX_AMP0_418_413[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_AMP0_418_413[5],SC_PMA_CH1_REG_TX_AMP0_418_413[4],SC_PMA_CH1_REG_TX_AMP0_418_413[3],SC_PMA_CH1_REG_TX_AMP0_418_413[2],SC_PMA_CH1_REG_TX_AMP0_418_413[1],SC_PMA_CH1_REG_TX_AMP0_418_413[0]" */,

    config input SC_PMA_CH1_REG_TX_AMP1_424_419[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_AMP1_424_419[5],SC_PMA_CH1_REG_TX_AMP1_424_419[4],SC_PMA_CH1_REG_TX_AMP1_424_419[3],SC_PMA_CH1_REG_TX_AMP1_424_419[2],SC_PMA_CH1_REG_TX_AMP1_424_419[1],SC_PMA_CH1_REG_TX_AMP1_424_419[0]" */,

    config input SC_PMA_CH1_REG_TX_AMP2_430_425[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_AMP2_430_425[5],SC_PMA_CH1_REG_TX_AMP2_430_425[4],SC_PMA_CH1_REG_TX_AMP2_430_425[3],SC_PMA_CH1_REG_TX_AMP2_430_425[2],SC_PMA_CH1_REG_TX_AMP2_430_425[1],SC_PMA_CH1_REG_TX_AMP2_430_425[0]" */,

    config input SC_PMA_CH1_REG_TX_AMP3_436_431[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_AMP3_436_431[5],SC_PMA_CH1_REG_TX_AMP3_436_431[4],SC_PMA_CH1_REG_TX_AMP3_436_431[3],SC_PMA_CH1_REG_TX_AMP3_436_431[2],SC_PMA_CH1_REG_TX_AMP3_436_431[1],SC_PMA_CH1_REG_TX_AMP3_436_431[0]" */,

    config input SC_PMA_CH1_REG_TX_AMP4_442_437[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_AMP4_442_437[5],SC_PMA_CH1_REG_TX_AMP4_442_437[4],SC_PMA_CH1_REG_TX_AMP4_442_437[3],SC_PMA_CH1_REG_TX_AMP4_442_437[2],SC_PMA_CH1_REG_TX_AMP4_442_437[1],SC_PMA_CH1_REG_TX_AMP4_442_437[0]" */,

    config input SC_PMA_CH1_REG_TX_MARGIN_445_443[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_MARGIN_445_443[2],SC_PMA_CH1_REG_TX_MARGIN_445_443[1],SC_PMA_CH1_REG_TX_MARGIN_445_443[0]" */,

    config input SC_PMA_CH1_REG_TX_MARGIN_OW_446 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_MARGIN_OW_446" */,

    config input SC_PMA_CH1_REG_TX_DEEMP_448_447[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_DEEMP_448_447[1],SC_PMA_CH1_REG_TX_DEEMP_448_447[0]" */,

    config input SC_PMA_CH1_REG_TX_DEEMP_OW_449 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_DEEMP_OW_449" */,

    config input SC_PMA_CH1_REG_TX_SWING_450 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_SWING_450" */,

    config input SC_PMA_CH1_REG_TX_SWING_OW_451 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_SWING_OW_451" */,

    config input SC_PMA_CH1_REG_TX_RXDET_THRESHOLD_454_453[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_RXDET_THRESHOLD_454_453[1],SC_PMA_CH1_REG_TX_RXDET_THRESHOLD_454_453[0]" */,

    config input SC_PMA_CH1_REG_TX_BEACON_OSC_CTRL_457_455[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_BEACON_OSC_CTRL_457_455[2],SC_PMA_CH1_REG_TX_BEACON_OSC_CTRL_457_455[1],SC_PMA_CH1_REG_TX_BEACON_OSC_CTRL_457_455[0]" */,

    config input SC_PMA_CH1_REG_TX_PREDRV_DAC_459_458[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PREDRV_DAC_459_458[1],SC_PMA_CH1_REG_TX_PREDRV_DAC_459_458[0]" */,

    config input SC_PMA_CH1_REG_TX_PREDRV_CM_CTRL_461_460[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PREDRV_CM_CTRL_461_460[1],SC_PMA_CH1_REG_TX_PREDRV_CM_CTRL_461_460[0]" */,

    config input SC_PMA_CH1_REG_TX_TX2RX_SLPBACK_EN_462 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_TX2RX_SLPBACK_EN_462" */,

    config input SC_PMA_CH1_REG_TX_PCLK_EDGE_SEL_463 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PCLK_EDGE_SEL_463" */,

    config input SC_PMA_CH1_REG_TX_RXDET_STATUS_OW_464 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_RXDET_STATUS_OW_464" */,

    config input SC_PMA_CH1_REG_TX_RXDET_STATUS_465 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_RXDET_STATUS_465" */,

    config input SC_PMA_CH1_REG_TX_PRBS_GEN_EN_466 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PRBS_GEN_EN_466" */,

    config input SC_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL_468_467[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL_468_467[1],SC_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL_468_467[0]" */,

    config input SC_PMA_CH1_REG_TX_PRBS_SEL_470_469[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PRBS_SEL_470_469[1],SC_PMA_CH1_REG_TX_PRBS_SEL_470_469[0]" */,

    config input SC_PMA_CH1_REG_TX_UDP_DATA_490_471[19:0] = 20'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_UDP_DATA_490_471[19],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[18],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[17],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[16],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[15],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[14],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[13],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[12],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[11],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[10],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[9],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[8],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[7],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[6],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[5],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[4],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[3],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[2],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[1],SC_PMA_CH1_REG_TX_UDP_DATA_490_471[0]" */,

    config input SC_PMA_CH1_REG_TX_FIFO_RST_N_491 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_FIFO_RST_N_491" */,

    config input SC_PMA_CH1_REG_TX_FIFO_WP_CTRL_494_492[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_FIFO_WP_CTRL_494_492[2],SC_PMA_CH1_REG_TX_FIFO_WP_CTRL_494_492[1],SC_PMA_CH1_REG_TX_FIFO_WP_CTRL_494_492[0]" */,

    config input SC_PMA_CH1_REG_TX_FIFO_EN_495 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_FIFO_EN_495" */,

    config input SC_PMA_CH1_REG_TX_DATA_MUX_SEL_497_496[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_DATA_MUX_SEL_497_496[1],SC_PMA_CH1_REG_TX_DATA_MUX_SEL_497_496[0]" */,

    config input SC_PMA_CH1_REG_TX_ERR_INSERT_498 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_ERR_INSERT_498" */,

    config input SC_PMA_CH1_REG_TX_SATA_EN_504 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_SATA_EN_504" */,

    config input SC_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_OW_507 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_OW_507" */,

    config input SC_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_508 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_508" */,

    config input SC_PMA_CH1_REG_TX_PULLUP_DAC0_513_509[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PULLUP_DAC0_513_509[4],SC_PMA_CH1_REG_TX_PULLUP_DAC0_513_509[3],SC_PMA_CH1_REG_TX_PULLUP_DAC0_513_509[2],SC_PMA_CH1_REG_TX_PULLUP_DAC0_513_509[1],SC_PMA_CH1_REG_TX_PULLUP_DAC0_513_509[0]" */,

    config input SC_PMA_CH1_REG_TX_PULLUP_DAC1_518_514[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PULLUP_DAC1_518_514[4],SC_PMA_CH1_REG_TX_PULLUP_DAC1_518_514[3],SC_PMA_CH1_REG_TX_PULLUP_DAC1_518_514[2],SC_PMA_CH1_REG_TX_PULLUP_DAC1_518_514[1],SC_PMA_CH1_REG_TX_PULLUP_DAC1_518_514[0]" */,

    config input SC_PMA_CH1_REG_TX_PULLUP_DAC2_523_519[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PULLUP_DAC2_523_519[4],SC_PMA_CH1_REG_TX_PULLUP_DAC2_523_519[3],SC_PMA_CH1_REG_TX_PULLUP_DAC2_523_519[2],SC_PMA_CH1_REG_TX_PULLUP_DAC2_523_519[1],SC_PMA_CH1_REG_TX_PULLUP_DAC2_523_519[0]" */,

    config input SC_PMA_CH1_REG_TX_PULLUP_DAC3_528_524[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_PULLUP_DAC3_528_524[4],SC_PMA_CH1_REG_TX_PULLUP_DAC3_528_524[3],SC_PMA_CH1_REG_TX_PULLUP_DAC3_528_524[2],SC_PMA_CH1_REG_TX_PULLUP_DAC3_528_524[1],SC_PMA_CH1_REG_TX_PULLUP_DAC3_528_524[0]" */,

    config input SC_PMA_CH1_REG_TX_OOB_DELAY_SEL_532_529[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_OOB_DELAY_SEL_532_529[3],SC_PMA_CH1_REG_TX_OOB_DELAY_SEL_532_529[2],SC_PMA_CH1_REG_TX_OOB_DELAY_SEL_532_529[1],SC_PMA_CH1_REG_TX_OOB_DELAY_SEL_532_529[0]" */,

    config input SC_PMA_CH1_REG_TX_POLARITY_533 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_POLARITY_533" */,

    config input SC_PMA_CH1_REG_TX_SLPBK_AMP_535_534[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_SLPBK_AMP_535_534[1],SC_PMA_CH1_REG_TX_SLPBK_AMP_535_534[0]" */,

    config input SC_PMA_CH1_REG_TX_LS_MODE_EN_536 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_LS_MODE_EN_536" */,

    config input SC_PMA_CH1_REG_TX_JTAG_MODE_EN_OW_537 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_JTAG_MODE_EN_OW_537" */,

    config input SC_PMA_CH1_REG_TX_JTAG_MODE_EN_538 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_JTAG_MODE_EN_538" */,

    config input SC_PMA_CH1_REG_RX_JTAG_MODE_EN_OW_539 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_JTAG_MODE_EN_OW_539" */,

    config input SC_PMA_CH1_REG_RX_JTAG_MODE_EN_540 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_JTAG_MODE_EN_540" */,

    config input SC_PMA_CH1_REG_RX_JTAG_OE_541 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_JTAG_OE_541" */,

    config input SC_PMA_CH1_REG_RX_ACJTAG_VHYSTSE_544_542[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_ACJTAG_VHYSTSE_544_542[2],SC_PMA_CH1_REG_RX_ACJTAG_VHYSTSE_544_542[1],SC_PMA_CH1_REG_RX_ACJTAG_VHYSTSE_544_542[0]" */,

    config input SC_PMA_CH1_REG_TX_FBCLK_FAR_EN_545 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_FBCLK_FAR_EN_545" */,

    config input SC_PMA_CH1_REG_RX_TERM_MODE_CTRL_548_546[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_TERM_MODE_CTRL_548_546[2],SC_PMA_CH1_REG_RX_TERM_MODE_CTRL_548_546[1],SC_PMA_CH1_REG_RX_TERM_MODE_CTRL_548_546[0]" */,

    config input SC_PMA_CH1_REG_PLPBK_TXPCLK_EN_551 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_PLPBK_TXPCLK_EN_551" */,

    config input SC_PMA_CH1_REG_TX_609_600[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_TX_609_600[9],SC_PMA_CH1_REG_TX_609_600[8],SC_PMA_CH1_REG_TX_609_600[7],SC_PMA_CH1_REG_TX_609_600[6],SC_PMA_CH1_REG_TX_609_600[5],SC_PMA_CH1_REG_TX_609_600[4],SC_PMA_CH1_REG_TX_609_600[3],SC_PMA_CH1_REG_TX_609_600[2],SC_PMA_CH1_REG_TX_609_600[1],SC_PMA_CH1_REG_TX_609_600[0]" */,

    config input SC_PMA_CH1_REG_RX_CDR_617_610[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_CDR_617_610[7],SC_PMA_CH1_REG_RX_CDR_617_610[6],SC_PMA_CH1_REG_RX_CDR_617_610[5],SC_PMA_CH1_REG_RX_CDR_617_610[4],SC_PMA_CH1_REG_RX_CDR_617_610[3],SC_PMA_CH1_REG_RX_CDR_617_610[2],SC_PMA_CH1_REG_RX_CDR_617_610[1],SC_PMA_CH1_REG_RX_CDR_617_610[0]" */,

    config input SC_PMA_CH1_REG_RX_CDR_623_618[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_CDR_623_618[5],SC_PMA_CH1_REG_RX_CDR_623_618[4],SC_PMA_CH1_REG_RX_CDR_623_618[3],SC_PMA_CH1_REG_RX_CDR_623_618[2],SC_PMA_CH1_REG_RX_CDR_623_618[1],SC_PMA_CH1_REG_RX_CDR_623_618[0]" */,

    config input SC_PMA_CH1_REG_RX_631_624[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_631_624[7],SC_PMA_CH1_REG_RX_631_624[6],SC_PMA_CH1_REG_RX_631_624[5],SC_PMA_CH1_REG_RX_631_624[4],SC_PMA_CH1_REG_RX_631_624[3],SC_PMA_CH1_REG_RX_631_624[2],SC_PMA_CH1_REG_RX_631_624[1],SC_PMA_CH1_REG_RX_631_624[0]" */,

    config input SC_PMA_CH1_REG_RX_639_632[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_639_632[7],SC_PMA_CH1_REG_RX_639_632[6],SC_PMA_CH1_REG_RX_639_632[5],SC_PMA_CH1_REG_RX_639_632[4],SC_PMA_CH1_REG_RX_639_632[3],SC_PMA_CH1_REG_RX_639_632[2],SC_PMA_CH1_REG_RX_639_632[1],SC_PMA_CH1_REG_RX_639_632[0]" */,

    config input SC_PMA_CH1_REG_RX_647_640[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_647_640[7],SC_PMA_CH1_REG_RX_647_640[6],SC_PMA_CH1_REG_RX_647_640[5],SC_PMA_CH1_REG_RX_647_640[4],SC_PMA_CH1_REG_RX_647_640[3],SC_PMA_CH1_REG_RX_647_640[2],SC_PMA_CH1_REG_RX_647_640[1],SC_PMA_CH1_REG_RX_647_640[0]" */,

    config input SC_PMA_CH1_REG_RX_655_648[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_655_648[7],SC_PMA_CH1_REG_RX_655_648[6],SC_PMA_CH1_REG_RX_655_648[5],SC_PMA_CH1_REG_RX_655_648[4],SC_PMA_CH1_REG_RX_655_648[3],SC_PMA_CH1_REG_RX_655_648[2],SC_PMA_CH1_REG_RX_655_648[1],SC_PMA_CH1_REG_RX_655_648[0]" */,

    config input SC_PMA_CH1_REG_RX_659_656[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RX_659_656[3],SC_PMA_CH1_REG_RX_659_656[2],SC_PMA_CH1_REG_RX_659_656[1],SC_PMA_CH1_REG_RX_659_656[0]" */,

    config input SC_PMA_CH1_CFG_LANE_POWERUP_660 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_CFG_LANE_POWERUP_660" */,

    config input SC_PMA_CH1_CFG_PMA_POR_N_661 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_CFG_PMA_POR_N_661" */,

    config input SC_PMA_CH1_CFG_RX_LANE_POWERUP_662 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_CFG_RX_LANE_POWERUP_662" */,

    config input SC_PMA_CH1_CFG_RX_PMA_RSTN_663 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_CFG_RX_PMA_RSTN_663" */,

    config input SC_PMA_CH1_CFG_TX_LANE_POWERUP_664 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_CFG_TX_LANE_POWERUP_664" */,

    config input SC_PMA_CH1_CFG_TX_PMA_RSTN_665 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_CFG_TX_PMA_RSTN_665" */,

    config input SC_PMA_CH1_CFG_CTLE_ADP_RSTN_666 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_CFG_CTLE_ADP_RSTN_666" */,

    config input SC_PMA_CH1_REG_RESERVED_48_45[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_48_45[3],SC_PMA_CH1_REG_RESERVED_48_45[2],SC_PMA_CH1_REG_RESERVED_48_45[1],SC_PMA_CH1_REG_RESERVED_48_45[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_69 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_69" */,

    config input SC_PMA_CH1_REG_RESERVED_77_76[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_77_76[1],SC_PMA_CH1_REG_RESERVED_77_76[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_171_164[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_171_164[7],SC_PMA_CH1_REG_RESERVED_171_164[6],SC_PMA_CH1_REG_RESERVED_171_164[5],SC_PMA_CH1_REG_RESERVED_171_164[4],SC_PMA_CH1_REG_RESERVED_171_164[3],SC_PMA_CH1_REG_RESERVED_171_164[2],SC_PMA_CH1_REG_RESERVED_171_164[1],SC_PMA_CH1_REG_RESERVED_171_164[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_175_172[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_175_172[3],SC_PMA_CH1_REG_RESERVED_175_172[2],SC_PMA_CH1_REG_RESERVED_175_172[1],SC_PMA_CH1_REG_RESERVED_175_172[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_190 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_190" */,

    config input SC_PMA_CH1_REG_RESERVED_233_232[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_233_232[1],SC_PMA_CH1_REG_RESERVED_233_232[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_235_234[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_235_234[1],SC_PMA_CH1_REG_RESERVED_235_234[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_241_240[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_241_240[1],SC_PMA_CH1_REG_RESERVED_241_240[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_285_283[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_285_283[2],SC_PMA_CH1_REG_RESERVED_285_283[1],SC_PMA_CH1_REG_RESERVED_285_283[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_286 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_286" */,

    config input SC_PMA_CH1_REG_RESERVED_295 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_295" */,

    config input SC_PMA_CH1_REG_RESERVED_298 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_298" */,

    config input SC_PMA_CH1_REG_RESERVED_332_325[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_332_325[7],SC_PMA_CH1_REG_RESERVED_332_325[6],SC_PMA_CH1_REG_RESERVED_332_325[5],SC_PMA_CH1_REG_RESERVED_332_325[4],SC_PMA_CH1_REG_RESERVED_332_325[3],SC_PMA_CH1_REG_RESERVED_332_325[2],SC_PMA_CH1_REG_RESERVED_332_325[1],SC_PMA_CH1_REG_RESERVED_332_325[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_340_333[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_340_333[7],SC_PMA_CH1_REG_RESERVED_340_333[6],SC_PMA_CH1_REG_RESERVED_340_333[5],SC_PMA_CH1_REG_RESERVED_340_333[4],SC_PMA_CH1_REG_RESERVED_340_333[3],SC_PMA_CH1_REG_RESERVED_340_333[2],SC_PMA_CH1_REG_RESERVED_340_333[1],SC_PMA_CH1_REG_RESERVED_340_333[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_348_341[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_348_341[7],SC_PMA_CH1_REG_RESERVED_348_341[6],SC_PMA_CH1_REG_RESERVED_348_341[5],SC_PMA_CH1_REG_RESERVED_348_341[4],SC_PMA_CH1_REG_RESERVED_348_341[3],SC_PMA_CH1_REG_RESERVED_348_341[2],SC_PMA_CH1_REG_RESERVED_348_341[1],SC_PMA_CH1_REG_RESERVED_348_341[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_354_349[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_354_349[5],SC_PMA_CH1_REG_RESERVED_354_349[4],SC_PMA_CH1_REG_RESERVED_354_349[3],SC_PMA_CH1_REG_RESERVED_354_349[2],SC_PMA_CH1_REG_RESERVED_354_349[1],SC_PMA_CH1_REG_RESERVED_354_349[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_373 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_373" */,

    config input SC_PMA_CH1_REG_RESERVED_376 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_376" */,

    config input SC_PMA_CH1_REG_RESERVED_452 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_452" */,

    config input SC_PMA_CH1_REG_RESERVED_502_499[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_502_499[3],SC_PMA_CH1_REG_RESERVED_502_499[2],SC_PMA_CH1_REG_RESERVED_502_499[1],SC_PMA_CH1_REG_RESERVED_502_499[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_506_505[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_506_505[1],SC_PMA_CH1_REG_RESERVED_506_505[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_550_549[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_550_549[1],SC_PMA_CH1_REG_RESERVED_550_549[0]" */,

    config input SC_PMA_CH1_REG_RESERVED_556_552[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH1_REG_RESERVED_556_552[4],SC_PMA_CH1_REG_RESERVED_556_552[3],SC_PMA_CH1_REG_RESERVED_556_552[2],SC_PMA_CH1_REG_RESERVED_556_552[1],SC_PMA_CH1_REG_RESERVED_556_552[0]" */,

    config input SC_PMA_CH2_REG_RX_PD_0 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_PD_0" */,

    config input SC_PMA_CH2_REG_RX_PD_EN_1 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_PD_EN_1" */,

    config input SC_PMA_CH2_REG_RX_CLKPATH_PD_2 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_CLKPATH_PD_2" */,

    config input SC_PMA_CH2_REG_RX_CLKPATH_PD_EN_3 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_CLKPATH_PD_EN_3" */,

    config input SC_PMA_CH2_REG_RX_DATAPATH_PD_4 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_DATAPATH_PD_4" */,

    config input SC_PMA_CH2_REG_RX_DATAPATH_PD_EN_5 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_DATAPATH_PD_EN_5" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_PD_6 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_PD_6" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_PD_EN_7 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_PD_EN_7" */,

    config input SC_PMA_CH2_REG_RX_DCC_RST_N_8 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_DCC_RST_N_8" */,

    config input SC_PMA_CH2_REG_RX_DCC_RST_N_EN_9 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_DCC_RST_N_EN_9" */,

    config input SC_PMA_CH2_REG_RX_CDR_RST_N_10 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_CDR_RST_N_10" */,

    config input SC_PMA_CH2_REG_RX_CDR_RST_N_EN_11 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_CDR_RST_N_EN_11" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_RST_N_12 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_RST_N_12" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_RST_N_EN_13 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_RST_N_EN_13" */,

    config input SC_PMA_CH2_REG_RXPCLK_SLIP_14 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RXPCLK_SLIP_14" */,

    config input SC_PMA_CH2_REG_RXPCLK_SLIP_OW_15 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RXPCLK_SLIP_OW_15" */,

    config input SC_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_16 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_16" */,

    config input SC_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_EN_17 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_EN_17" */,

    config input SC_PMA_CH2_REG_RX_PCLKSWITCH_18 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_PCLKSWITCH_18" */,

    config input SC_PMA_CH2_REG_RX_PCLKSWITCH_EN_19 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_PCLKSWITCH_EN_19" */,

    config input SC_PMA_CH2_REG_RX_HIGHZ_20 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_HIGHZ_20" */,

    config input SC_PMA_CH2_REG_RX_HIGHZ_EN_21 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_HIGHZ_EN_21" */,

    config input SC_PMA_CH2_REG_RX_EQ_C_SET_25_22[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_EQ_C_SET_25_22[3],SC_PMA_CH2_REG_RX_EQ_C_SET_25_22[2],SC_PMA_CH2_REG_RX_EQ_C_SET_25_22[1],SC_PMA_CH2_REG_RX_EQ_C_SET_25_22[0]" */,

    config input SC_PMA_CH2_REG_RX_EQ_R_SET_29_26[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_EQ_R_SET_29_26[3],SC_PMA_CH2_REG_RX_EQ_R_SET_29_26[2],SC_PMA_CH2_REG_RX_EQ_R_SET_29_26[1],SC_PMA_CH2_REG_RX_EQ_R_SET_29_26[0]" */,

    config input SC_PMA_CH2_REG_RX_BUSWIDTH_32_30[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_BUSWIDTH_32_30[2],SC_PMA_CH2_REG_RX_BUSWIDTH_32_30[1],SC_PMA_CH2_REG_RX_BUSWIDTH_32_30[0]" */,

    config input SC_PMA_CH2_REG_RX_BUSWIDTH_EN_33 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_BUSWIDTH_EN_33" */,

    config input SC_PMA_CH2_REG_RX_RATE_36_34[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_RATE_36_34[2],SC_PMA_CH2_REG_RX_RATE_36_34[1],SC_PMA_CH2_REG_RX_RATE_36_34[0]" */,

    config input SC_PMA_CH2_REG_RX_RATE_EN_37 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_RATE_EN_37" */,

    config input SC_PMA_CH2_REG_RX_RES_TRIM_43_38[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_RES_TRIM_43_38[5],SC_PMA_CH2_REG_RX_RES_TRIM_43_38[4],SC_PMA_CH2_REG_RX_RES_TRIM_43_38[3],SC_PMA_CH2_REG_RX_RES_TRIM_43_38[2],SC_PMA_CH2_REG_RX_RES_TRIM_43_38[1],SC_PMA_CH2_REG_RX_RES_TRIM_43_38[0]" */,

    config input SC_PMA_CH2_REG_RX_RES_TRIM_EN_44 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_RES_TRIM_EN_44" */,

    config input SC_PMA_CH2_REG_RX_ICTRL_SIGDET_52_49[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_ICTRL_SIGDET_52_49[3],SC_PMA_CH2_REG_RX_ICTRL_SIGDET_52_49[2],SC_PMA_CH2_REG_RX_ICTRL_SIGDET_52_49[1],SC_PMA_CH2_REG_RX_ICTRL_SIGDET_52_49[0]" */,

    config input SC_PMA_CH2_REG_RX_EQ_OFF_53 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_EQ_OFF_53" */,

    config input SC_PMA_CH2_REG_RX_PREAMP_IC_65_54[11:0] = 12'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_PREAMP_IC_65_54[11],SC_PMA_CH2_REG_RX_PREAMP_IC_65_54[10],SC_PMA_CH2_REG_RX_PREAMP_IC_65_54[9],SC_PMA_CH2_REG_RX_PREAMP_IC_65_54[8],SC_PMA_CH2_REG_RX_PREAMP_IC_65_54[7],SC_PMA_CH2_REG_RX_PREAMP_IC_65_54[6],SC_PMA_CH2_REG_RX_PREAMP_IC_65_54[5],SC_PMA_CH2_REG_RX_PREAMP_IC_65_54[4],SC_PMA_CH2_REG_RX_PREAMP_IC_65_54[3],SC_PMA_CH2_REG_RX_PREAMP_IC_65_54[2],SC_PMA_CH2_REG_RX_PREAMP_IC_65_54[1],SC_PMA_CH2_REG_RX_PREAMP_IC_65_54[0]" */,

    config input SC_PMA_CH2_REG_RX_PCLK_EDGE_SEL_66 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_PCLK_EDGE_SEL_66" */,

    config input SC_PMA_CH2_REG_RX_PIBUF_IC_68_67[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_PIBUF_IC_68_67[1],SC_PMA_CH2_REG_RX_PIBUF_IC_68_67[0]" */,

    config input SC_PMA_CH2_REG_RX_DCC_IC_RX_71_70[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_DCC_IC_RX_71_70[1],SC_PMA_CH2_REG_RX_DCC_IC_RX_71_70[0]" */,

    config input SC_PMA_CH2_REG_RX_DCC_IC_TX_73_72[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_DCC_IC_TX_73_72[1],SC_PMA_CH2_REG_RX_DCC_IC_TX_73_72[0]" */,

    config input SC_PMA_CH2_REG_RX_ICTRL_TRX_75_74[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_ICTRL_TRX_75_74[1],SC_PMA_CH2_REG_RX_ICTRL_TRX_75_74[0]" */,

    config input SC_PMA_CH2_REG_RX_ICTRL_PREAMP_79_78[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_ICTRL_PREAMP_79_78[1],SC_PMA_CH2_REG_RX_ICTRL_PREAMP_79_78[0]" */,

    config input SC_PMA_CH2_REG_RX_ICTRL_SLICER_81_80[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_ICTRL_SLICER_81_80[1],SC_PMA_CH2_REG_RX_ICTRL_SLICER_81_80[0]" */,

    config input SC_PMA_CH2_REG_RX_ICTRL_PIBUF_83_82[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_ICTRL_PIBUF_83_82[1],SC_PMA_CH2_REG_RX_ICTRL_PIBUF_83_82[0]" */,

    config input SC_PMA_CH2_REG_RX_ICTRL_PI_85_84[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_ICTRL_PI_85_84[1],SC_PMA_CH2_REG_RX_ICTRL_PI_85_84[0]" */,

    config input SC_PMA_CH2_REG_RX_ICTRL_DCC_87_86[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_ICTRL_DCC_87_86[1],SC_PMA_CH2_REG_RX_ICTRL_DCC_87_86[0]" */,

    config input SC_PMA_CH2_REG_RX_ICTRL_PREDRV_89_88[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_ICTRL_PREDRV_89_88[1],SC_PMA_CH2_REG_RX_ICTRL_PREDRV_89_88[0]" */,

    config input SC_PMA_CH2_REG_TX_RATE_92_90[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_RATE_92_90[2],SC_PMA_CH2_REG_TX_RATE_92_90[1],SC_PMA_CH2_REG_TX_RATE_92_90[0]" */,

    config input SC_PMA_CH2_REG_TX_RATE_EN_93 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_RATE_EN_93" */,

    config input SC_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_94 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_94" */,

    config input SC_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_EN_95 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_EN_95" */,

    config input SC_PMA_CH2_REG_RX_TX2RX_PLPBK_EN_96 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_TX2RX_PLPBK_EN_96" */,

    config input SC_PMA_CH2_REG_TXCLK_SEL_97 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TXCLK_SEL_97" */,

    config input SC_PMA_CH2_REG_RX_DATA_POLARITY_98 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_DATA_POLARITY_98" */,

    config input SC_PMA_CH2_REG_RX_ERR_INSERT_99 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_ERR_INSERT_99" */,

    config input SC_PMA_CH2_REG_UDP_CHK_EN_100 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_UDP_CHK_EN_100" */,

    config input SC_PMA_CH2_REG_PRBS_SEL_102_101[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_PRBS_SEL_102_101[1],SC_PMA_CH2_REG_PRBS_SEL_102_101[0]" */,

    config input SC_PMA_CH2_REG_PRBS_CHK_EN_103 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_PRBS_CHK_EN_103" */,

    config input SC_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL_105_104[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL_105_104[1],SC_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL_105_104[0]" */,

    config input SC_PMA_CH2_REG_BIST_CHK_PAT_SEL_106 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_BIST_CHK_PAT_SEL_106" */,

    config input SC_PMA_CH2_REG_LOAD_ERR_CNT_107 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_LOAD_ERR_CNT_107" */,

    config input SC_PMA_CH2_REG_CHK_COUNTER_EN_108 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CHK_COUNTER_EN_108" */,

    config input SC_PMA_CH2_REG_CDR_PROP_GAIN_111_109[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_PROP_GAIN_111_109[2],SC_PMA_CH2_REG_CDR_PROP_GAIN_111_109[1],SC_PMA_CH2_REG_CDR_PROP_GAIN_111_109[0]" */,

    config input SC_PMA_CH2_REG_CDR_PROP_TURBO_GAIN_114_112[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_PROP_TURBO_GAIN_114_112[2],SC_PMA_CH2_REG_CDR_PROP_TURBO_GAIN_114_112[1],SC_PMA_CH2_REG_CDR_PROP_TURBO_GAIN_114_112[0]" */,

    config input SC_PMA_CH2_REG_CDR_INT_GAIN_117_115[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_INT_GAIN_117_115[2],SC_PMA_CH2_REG_CDR_INT_GAIN_117_115[1],SC_PMA_CH2_REG_CDR_INT_GAIN_117_115[0]" */,

    config input SC_PMA_CH2_REG_CDR_INT_TURBO_GAIN_120_118[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_INT_TURBO_GAIN_120_118[2],SC_PMA_CH2_REG_CDR_INT_TURBO_GAIN_120_118[1],SC_PMA_CH2_REG_CDR_INT_TURBO_GAIN_120_118[0]" */,

    config input SC_PMA_CH2_REG_CDR_INT_SAT_MAX_130_121[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_INT_SAT_MAX_130_121[9],SC_PMA_CH2_REG_CDR_INT_SAT_MAX_130_121[8],SC_PMA_CH2_REG_CDR_INT_SAT_MAX_130_121[7],SC_PMA_CH2_REG_CDR_INT_SAT_MAX_130_121[6],SC_PMA_CH2_REG_CDR_INT_SAT_MAX_130_121[5],SC_PMA_CH2_REG_CDR_INT_SAT_MAX_130_121[4],SC_PMA_CH2_REG_CDR_INT_SAT_MAX_130_121[3],SC_PMA_CH2_REG_CDR_INT_SAT_MAX_130_121[2],SC_PMA_CH2_REG_CDR_INT_SAT_MAX_130_121[1],SC_PMA_CH2_REG_CDR_INT_SAT_MAX_130_121[0]" */,

    config input SC_PMA_CH2_REG_CDR_INT_SAT_MIN_140_131[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_INT_SAT_MIN_140_131[9],SC_PMA_CH2_REG_CDR_INT_SAT_MIN_140_131[8],SC_PMA_CH2_REG_CDR_INT_SAT_MIN_140_131[7],SC_PMA_CH2_REG_CDR_INT_SAT_MIN_140_131[6],SC_PMA_CH2_REG_CDR_INT_SAT_MIN_140_131[5],SC_PMA_CH2_REG_CDR_INT_SAT_MIN_140_131[4],SC_PMA_CH2_REG_CDR_INT_SAT_MIN_140_131[3],SC_PMA_CH2_REG_CDR_INT_SAT_MIN_140_131[2],SC_PMA_CH2_REG_CDR_INT_SAT_MIN_140_131[1],SC_PMA_CH2_REG_CDR_INT_SAT_MIN_140_131[0]" */,

    config input SC_PMA_CH2_REG_CDR_INT_RST_141 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_INT_RST_141" */,

    config input SC_PMA_CH2_REG_CDR_INT_RST_OW_142 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_INT_RST_OW_142" */,

    config input SC_PMA_CH2_REG_CDR_PROP_RST_143 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_PROP_RST_143" */,

    config input SC_PMA_CH2_REG_CDR_PROP_RST_OW_144 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_PROP_RST_OW_144" */,

    config input SC_PMA_CH2_REG_CDR_LOCK_RST_145 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_LOCK_RST_145" */,

    config input SC_PMA_CH2_REG_CDR_LOCK_RST_OW_146 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_LOCK_RST_OW_146" */,

    config input SC_PMA_CH2_REG_CDR_RX_PI_FORCE_SEL_147 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_RX_PI_FORCE_SEL_147" */,

    config input SC_PMA_CH2_REG_CDR_RX_PI_FORCE_D_155_148[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_RX_PI_FORCE_D_155_148[7],SC_PMA_CH2_REG_CDR_RX_PI_FORCE_D_155_148[6],SC_PMA_CH2_REG_CDR_RX_PI_FORCE_D_155_148[5],SC_PMA_CH2_REG_CDR_RX_PI_FORCE_D_155_148[4],SC_PMA_CH2_REG_CDR_RX_PI_FORCE_D_155_148[3],SC_PMA_CH2_REG_CDR_RX_PI_FORCE_D_155_148[2],SC_PMA_CH2_REG_CDR_RX_PI_FORCE_D_155_148[1],SC_PMA_CH2_REG_CDR_RX_PI_FORCE_D_155_148[0]" */,

    config input SC_PMA_CH2_REG_CDR_LOCK_TIMER_158_156[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_LOCK_TIMER_158_156[2],SC_PMA_CH2_REG_CDR_LOCK_TIMER_158_156[1],SC_PMA_CH2_REG_CDR_LOCK_TIMER_158_156[0]" */,

    config input SC_PMA_CH2_REG_CDR_TURBO_MODE_TIMER_160_159[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_TURBO_MODE_TIMER_160_159[1],SC_PMA_CH2_REG_CDR_TURBO_MODE_TIMER_160_159[0]" */,

    config input SC_PMA_CH2_REG_CDR_LOCK_VAL_161 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_LOCK_VAL_161" */,

    config input SC_PMA_CH2_REG_CDR_LOCK_OW_162 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_LOCK_OW_162" */,

    config input SC_PMA_CH2_REG_CDR_INT_SAT_DET_EN_163 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_INT_SAT_DET_EN_163" */,

    config input SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_EN_176 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_EN_176" */,

    config input SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_RESET_EN_177 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_RESET_EN_177" */,

    config input SC_PMA_CH2_REG_CDR_PI_CTRL_RST_178 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_PI_CTRL_RST_178" */,

    config input SC_PMA_CH2_REG_CDR_PI_CTRL_RST_OW_179 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_PI_CTRL_RST_OW_179" */,

    config input SC_PMA_CH2_REG_CDR_SAT_DET_RST_180 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_SAT_DET_RST_180" */,

    config input SC_PMA_CH2_REG_CDR_SAT_DET_RST_OW_181 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_SAT_DET_RST_OW_181" */,

    config input SC_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_182 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_182" */,

    config input SC_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_OW_183 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_OW_183" */,

    config input SC_PMA_CH2_REG_CDR_SIGDET_STATUS_DIS_184 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_SIGDET_STATUS_DIS_184" */,

    config input SC_PMA_CH2_REG_CDR_SAT_DET_TIMER_186_185[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_SAT_DET_TIMER_186_185[1],SC_PMA_CH2_REG_CDR_SAT_DET_TIMER_186_185[0]" */,

    config input SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_VAL_187 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_VAL_187" */,

    config input SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_OW_188 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_OW_188" */,

    config input SC_PMA_CH2_REG_CDR_TURBO_MODE_EN_189 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_TURBO_MODE_EN_189" */,

    config input SC_PMA_CH2_REG_CDR_STATUS_RADDR_INIT_193_191[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_STATUS_RADDR_INIT_193_191[2],SC_PMA_CH2_REG_CDR_STATUS_RADDR_INIT_193_191[1],SC_PMA_CH2_REG_CDR_STATUS_RADDR_INIT_193_191[0]" */,

    config input SC_PMA_CH2_REG_CDR_STATUS_FIFO_EN_194 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_CDR_STATUS_FIFO_EN_194" */,

    config input SC_PMA_CH2_REG_PMA_TEST_SEL_197_195[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_PMA_TEST_SEL_197_195[2],SC_PMA_CH2_REG_PMA_TEST_SEL_197_195[1],SC_PMA_CH2_REG_PMA_TEST_SEL_197_195[0]" */,

    config input SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN_203_198[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN_203_198[5],SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN_203_198[4],SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN_203_198[3],SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN_203_198[2],SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN_203_198[1],SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN_203_198[0]" */,

    config input SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX_209_204[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX_209_204[5],SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX_209_204[4],SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX_209_204[3],SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX_209_204[2],SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX_209_204[1],SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX_209_204[0]" */,

    config input SC_PMA_CH2_REG_OOB_COMINIT_GAP_MIN_217_210[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_OOB_COMINIT_GAP_MIN_217_210[7],SC_PMA_CH2_REG_OOB_COMINIT_GAP_MIN_217_210[6],SC_PMA_CH2_REG_OOB_COMINIT_GAP_MIN_217_210[5],SC_PMA_CH2_REG_OOB_COMINIT_GAP_MIN_217_210[4],SC_PMA_CH2_REG_OOB_COMINIT_GAP_MIN_217_210[3],SC_PMA_CH2_REG_OOB_COMINIT_GAP_MIN_217_210[2],SC_PMA_CH2_REG_OOB_COMINIT_GAP_MIN_217_210[1],SC_PMA_CH2_REG_OOB_COMINIT_GAP_MIN_217_210[0]" */,

    config input SC_PMA_CH2_REG_OOB_COMINIT_GAP_MAX_225_218[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_OOB_COMINIT_GAP_MAX_225_218[7],SC_PMA_CH2_REG_OOB_COMINIT_GAP_MAX_225_218[6],SC_PMA_CH2_REG_OOB_COMINIT_GAP_MAX_225_218[5],SC_PMA_CH2_REG_OOB_COMINIT_GAP_MAX_225_218[4],SC_PMA_CH2_REG_OOB_COMINIT_GAP_MAX_225_218[3],SC_PMA_CH2_REG_OOB_COMINIT_GAP_MAX_225_218[2],SC_PMA_CH2_REG_OOB_COMINIT_GAP_MAX_225_218[1],SC_PMA_CH2_REG_OOB_COMINIT_GAP_MAX_225_218[0]" */,

    config input SC_PMA_CH2_REG_RX_PIBUF_IC_TX_227_226[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_PIBUF_IC_TX_227_226[1],SC_PMA_CH2_REG_RX_PIBUF_IC_TX_227_226[0]" */,

    config input SC_PMA_CH2_REG_COMWAKE_STATUS_CLEAR_228 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_COMWAKE_STATUS_CLEAR_228" */,

    config input SC_PMA_CH2_REG_COMINIT_STATUS_CLEAR_229 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_COMINIT_STATUS_CLEAR_229" */,

    config input SC_PMA_CH2_REG_RX_SYNC_RST_N_EN_230 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SYNC_RST_N_EN_230" */,

    config input SC_PMA_CH2_REG_RX_SYNC_RST_N_231 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SYNC_RST_N_231" */,

    config input SC_PMA_CH2_REG_RX_SATA_COMINIT_OW_236 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SATA_COMINIT_OW_236" */,

    config input SC_PMA_CH2_REG_RX_SATA_COMINIT_237 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SATA_COMINIT_237" */,

    config input SC_PMA_CH2_REG_RX_SATA_COMWAKE_OW_238 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SATA_COMWAKE_OW_238" */,

    config input SC_PMA_CH2_REG_RX_SATA_COMWAKE_239 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SATA_COMWAKE_239" */,

    config input SC_PMA_CH2_REG_RX_DCC_DISABLE_242 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_DCC_DISABLE_242" */,

    config input SC_PMA_CH2_REG_TX_DCC_DISABLE_243 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_DCC_DISABLE_243" */,

    config input SC_PMA_CH2_REG_RX_SLIP_SEL_EN_244 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SLIP_SEL_EN_244" */,

    config input SC_PMA_CH2_REG_RX_SLIP_SEL_248_245[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SLIP_SEL_248_245[3],SC_PMA_CH2_REG_RX_SLIP_SEL_248_245[2],SC_PMA_CH2_REG_RX_SLIP_SEL_248_245[1],SC_PMA_CH2_REG_RX_SLIP_SEL_248_245[0]" */,

    config input SC_PMA_CH2_REG_RX_SLIP_EN_249 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SLIP_EN_249" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_STATUS_SEL_252_250[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_STATUS_SEL_252_250[2],SC_PMA_CH2_REG_RX_SIGDET_STATUS_SEL_252_250[1],SC_PMA_CH2_REG_RX_SIGDET_STATUS_SEL_252_250[0]" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_FSM_RST_N_253 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_FSM_RST_N_253" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_STATUS_OW_254 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_STATUS_OW_254" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_STATUS_255 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_STATUS_255" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_VTH_259_256[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_VTH_259_256[3],SC_PMA_CH2_REG_RX_SIGDET_VTH_259_256[2],SC_PMA_CH2_REG_RX_SIGDET_VTH_259_256[1],SC_PMA_CH2_REG_RX_SIGDET_VTH_259_256[0]" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_GRM_261_260[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_GRM_261_260[1],SC_PMA_CH2_REG_RX_SIGDET_GRM_261_260[0]" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_PULSE_EXT_262 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_PULSE_EXT_262" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_CH2_SEL_263 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_CH2_SEL_263" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[4],SC_PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[3],SC_PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[2],SC_PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[1],SC_PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[0]" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_CHK_WINDOW_EN_269 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_CHK_WINDOW_EN_269" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[2],SC_PMA_CH2_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[1],SC_PMA_CH2_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[0]" */,

    config input SC_PMA_CH2_REG_SLIP_FIFO_INV_EN_273 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_SLIP_FIFO_INV_EN_273" */,

    config input SC_PMA_CH2_REG_SLIP_FIFO_INV_274 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_SLIP_FIFO_INV_274" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[4],SC_PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[3],SC_PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[2],SC_PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[1],SC_PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[0]" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_4OOB_DET_SEL_282_280[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_4OOB_DET_SEL_282_280[2],SC_PMA_CH2_REG_RX_SIGDET_4OOB_DET_SEL_282_280[1],SC_PMA_CH2_REG_RX_SIGDET_4OOB_DET_SEL_282_280[0]" */,

    config input SC_PMA_CH2_REG_RX_SIGDET_IC_I_290_287[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_SIGDET_IC_I_290_287[3],SC_PMA_CH2_REG_RX_SIGDET_IC_I_290_287[2],SC_PMA_CH2_REG_RX_SIGDET_IC_I_290_287[1],SC_PMA_CH2_REG_RX_SIGDET_IC_I_290_287[0]" */,

    config input SC_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_OW_291 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_OW_291" */,

    config input SC_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_292 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_292" */,

    config input SC_PMA_CH2_REG_RX_OOB_DETECTOR_PD_OW_293 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_OOB_DETECTOR_PD_OW_293" */,

    config input SC_PMA_CH2_REG_RX_OOB_DETECTOR_PD_294 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_OOB_DETECTOR_PD_294" */,

    config input SC_PMA_CH2_REG_RX_TERM_CM_CTRL_297_296[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_TERM_CM_CTRL_297_296[1],SC_PMA_CH2_REG_RX_TERM_CM_CTRL_297_296[0]" */,

    config input SC_PMA_CH2_REG_TX_PD_299 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PD_299" */,

    config input SC_PMA_CH2_REG_TX_PD_OW_300 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PD_OW_300" */,

    config input SC_PMA_CH2_REG_TX_CLKPATH_PD_301 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_CLKPATH_PD_301" */,

    config input SC_PMA_CH2_REG_TX_CLKPATH_PD_OW_302 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_CLKPATH_PD_OW_302" */,

    config input SC_PMA_CH2_REG_TX_BEACON_TIMER_SEL_304_303[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_BEACON_TIMER_SEL_304_303[1],SC_PMA_CH2_REG_TX_BEACON_TIMER_SEL_304_303[0]" */,

    config input SC_PMA_CH2_REG_TX_RXDET_REQ_OW_305 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_RXDET_REQ_OW_305" */,

    config input SC_PMA_CH2_REG_TX_RXDET_REQ_306 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_RXDET_REQ_306" */,

    config input SC_PMA_CH2_REG_TX_BEACON_EN_OW_307 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_BEACON_EN_OW_307" */,

    config input SC_PMA_CH2_REG_TX_BEACON_EN_308 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_BEACON_EN_308" */,

    config input SC_PMA_CH2_REG_TX_EI_EN_OW_309 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_EI_EN_OW_309" */,

    config input SC_PMA_CH2_REG_TX_EI_EN_310 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_EI_EN_310" */,

    config input SC_PMA_CH2_REG_TX_RES_CAL_EN_311 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_RES_CAL_EN_311" */,

    config input SC_PMA_CH2_REG_TX_RES_CAL_317_312[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_RES_CAL_317_312[5],SC_PMA_CH2_REG_TX_RES_CAL_317_312[4],SC_PMA_CH2_REG_TX_RES_CAL_317_312[3],SC_PMA_CH2_REG_TX_RES_CAL_317_312[2],SC_PMA_CH2_REG_TX_RES_CAL_317_312[1],SC_PMA_CH2_REG_TX_RES_CAL_317_312[0]" */,

    config input SC_PMA_CH2_REG_TX_BIAS_CAL_EN_318 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_BIAS_CAL_EN_318" */,

    config input SC_PMA_CH2_REG_TX_BIAS_CTRL_324_319[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_BIAS_CTRL_324_319[5],SC_PMA_CH2_REG_TX_BIAS_CTRL_324_319[4],SC_PMA_CH2_REG_TX_BIAS_CTRL_324_319[3],SC_PMA_CH2_REG_TX_BIAS_CTRL_324_319[2],SC_PMA_CH2_REG_TX_BIAS_CTRL_324_319[1],SC_PMA_CH2_REG_TX_BIAS_CTRL_324_319[0]" */,

    config input SC_PMA_CH2_REG_TX_RXDET_TIMER_SEL_356_355[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_RXDET_TIMER_SEL_356_355[1],SC_PMA_CH2_REG_TX_RXDET_TIMER_SEL_356_355[0]" */,

    config input SC_PMA_CH2_REG_TX_SYNC_OW_357 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_SYNC_OW_357" */,

    config input SC_PMA_CH2_REG_TX_SYNC_358 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_SYNC_358" */,

    config input SC_PMA_CH2_REG_TX_PD_POST_359 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PD_POST_359" */,

    config input SC_PMA_CH2_REG_TX_PD_POST_OW_360 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PD_POST_OW_360" */,

    config input SC_PMA_CH2_REG_TX_RESET_N_OW_361 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_RESET_N_OW_361" */,

    config input SC_PMA_CH2_REG_TX_RESET_N_362 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_RESET_N_362" */,

    config input SC_PMA_CH2_REG_TX_DCC_RESET_N_OW_363 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_DCC_RESET_N_OW_363" */,

    config input SC_PMA_CH2_REG_TX_DCC_RESET_N_364 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_DCC_RESET_N_364" */,

    config input SC_PMA_CH2_REG_TX_BUSWIDTH_OW_365 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_BUSWIDTH_OW_365" */,

    config input SC_PMA_CH2_REG_TX_BUSWIDTH_368_366[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_BUSWIDTH_368_366[2],SC_PMA_CH2_REG_TX_BUSWIDTH_368_366[1],SC_PMA_CH2_REG_TX_BUSWIDTH_368_366[0]" */,

    config input SC_PMA_CH2_REG_PLL_READY_OW_369 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_PLL_READY_OW_369" */,

    config input SC_PMA_CH2_REG_PLL_READY_370 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_PLL_READY_370" */,

    config input SC_PMA_CH2_REG_TX_PCLK_SW_OW_371 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PCLK_SW_OW_371" */,

    config input SC_PMA_CH2_REG_TX_PCLK_SW_372 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PCLK_SW_372" */,

    config input SC_PMA_CH2_REG_EI_PCLK_DELAY_SEL_375_374[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_EI_PCLK_DELAY_SEL_375_374[1],SC_PMA_CH2_REG_EI_PCLK_DELAY_SEL_375_374[0]" */,

    config input SC_PMA_CH2_REG_TX_DRV01_DAC0_382_377[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_DRV01_DAC0_382_377[5],SC_PMA_CH2_REG_TX_DRV01_DAC0_382_377[4],SC_PMA_CH2_REG_TX_DRV01_DAC0_382_377[3],SC_PMA_CH2_REG_TX_DRV01_DAC0_382_377[2],SC_PMA_CH2_REG_TX_DRV01_DAC0_382_377[1],SC_PMA_CH2_REG_TX_DRV01_DAC0_382_377[0]" */,

    config input SC_PMA_CH2_REG_TX_DRV01_DAC1_388_383[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_DRV01_DAC1_388_383[5],SC_PMA_CH2_REG_TX_DRV01_DAC1_388_383[4],SC_PMA_CH2_REG_TX_DRV01_DAC1_388_383[3],SC_PMA_CH2_REG_TX_DRV01_DAC1_388_383[2],SC_PMA_CH2_REG_TX_DRV01_DAC1_388_383[1],SC_PMA_CH2_REG_TX_DRV01_DAC1_388_383[0]" */,

    config input SC_PMA_CH2_REG_TX_DRV01_DAC2_394_389[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_DRV01_DAC2_394_389[5],SC_PMA_CH2_REG_TX_DRV01_DAC2_394_389[4],SC_PMA_CH2_REG_TX_DRV01_DAC2_394_389[3],SC_PMA_CH2_REG_TX_DRV01_DAC2_394_389[2],SC_PMA_CH2_REG_TX_DRV01_DAC2_394_389[1],SC_PMA_CH2_REG_TX_DRV01_DAC2_394_389[0]" */,

    config input SC_PMA_CH2_REG_TX_DRV00_DAC0_400_395[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_DRV00_DAC0_400_395[5],SC_PMA_CH2_REG_TX_DRV00_DAC0_400_395[4],SC_PMA_CH2_REG_TX_DRV00_DAC0_400_395[3],SC_PMA_CH2_REG_TX_DRV00_DAC0_400_395[2],SC_PMA_CH2_REG_TX_DRV00_DAC0_400_395[1],SC_PMA_CH2_REG_TX_DRV00_DAC0_400_395[0]" */,

    config input SC_PMA_CH2_REG_TX_DRV00_DAC1_406_401[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_DRV00_DAC1_406_401[5],SC_PMA_CH2_REG_TX_DRV00_DAC1_406_401[4],SC_PMA_CH2_REG_TX_DRV00_DAC1_406_401[3],SC_PMA_CH2_REG_TX_DRV00_DAC1_406_401[2],SC_PMA_CH2_REG_TX_DRV00_DAC1_406_401[1],SC_PMA_CH2_REG_TX_DRV00_DAC1_406_401[0]" */,

    config input SC_PMA_CH2_REG_TX_DRV00_DAC2_412_407[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_DRV00_DAC2_412_407[5],SC_PMA_CH2_REG_TX_DRV00_DAC2_412_407[4],SC_PMA_CH2_REG_TX_DRV00_DAC2_412_407[3],SC_PMA_CH2_REG_TX_DRV00_DAC2_412_407[2],SC_PMA_CH2_REG_TX_DRV00_DAC2_412_407[1],SC_PMA_CH2_REG_TX_DRV00_DAC2_412_407[0]" */,

    config input SC_PMA_CH2_REG_TX_AMP0_418_413[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_AMP0_418_413[5],SC_PMA_CH2_REG_TX_AMP0_418_413[4],SC_PMA_CH2_REG_TX_AMP0_418_413[3],SC_PMA_CH2_REG_TX_AMP0_418_413[2],SC_PMA_CH2_REG_TX_AMP0_418_413[1],SC_PMA_CH2_REG_TX_AMP0_418_413[0]" */,

    config input SC_PMA_CH2_REG_TX_AMP1_424_419[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_AMP1_424_419[5],SC_PMA_CH2_REG_TX_AMP1_424_419[4],SC_PMA_CH2_REG_TX_AMP1_424_419[3],SC_PMA_CH2_REG_TX_AMP1_424_419[2],SC_PMA_CH2_REG_TX_AMP1_424_419[1],SC_PMA_CH2_REG_TX_AMP1_424_419[0]" */,

    config input SC_PMA_CH2_REG_TX_AMP2_430_425[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_AMP2_430_425[5],SC_PMA_CH2_REG_TX_AMP2_430_425[4],SC_PMA_CH2_REG_TX_AMP2_430_425[3],SC_PMA_CH2_REG_TX_AMP2_430_425[2],SC_PMA_CH2_REG_TX_AMP2_430_425[1],SC_PMA_CH2_REG_TX_AMP2_430_425[0]" */,

    config input SC_PMA_CH2_REG_TX_AMP3_436_431[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_AMP3_436_431[5],SC_PMA_CH2_REG_TX_AMP3_436_431[4],SC_PMA_CH2_REG_TX_AMP3_436_431[3],SC_PMA_CH2_REG_TX_AMP3_436_431[2],SC_PMA_CH2_REG_TX_AMP3_436_431[1],SC_PMA_CH2_REG_TX_AMP3_436_431[0]" */,

    config input SC_PMA_CH2_REG_TX_AMP4_442_437[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_AMP4_442_437[5],SC_PMA_CH2_REG_TX_AMP4_442_437[4],SC_PMA_CH2_REG_TX_AMP4_442_437[3],SC_PMA_CH2_REG_TX_AMP4_442_437[2],SC_PMA_CH2_REG_TX_AMP4_442_437[1],SC_PMA_CH2_REG_TX_AMP4_442_437[0]" */,

    config input SC_PMA_CH2_REG_TX_MARGIN_445_443[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_MARGIN_445_443[2],SC_PMA_CH2_REG_TX_MARGIN_445_443[1],SC_PMA_CH2_REG_TX_MARGIN_445_443[0]" */,

    config input SC_PMA_CH2_REG_TX_MARGIN_OW_446 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_MARGIN_OW_446" */,

    config input SC_PMA_CH2_REG_TX_DEEMP_448_447[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_DEEMP_448_447[1],SC_PMA_CH2_REG_TX_DEEMP_448_447[0]" */,

    config input SC_PMA_CH2_REG_TX_DEEMP_OW_449 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_DEEMP_OW_449" */,

    config input SC_PMA_CH2_REG_TX_SWING_450 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_SWING_450" */,

    config input SC_PMA_CH2_REG_TX_SWING_OW_451 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_SWING_OW_451" */,

    config input SC_PMA_CH2_REG_TX_RXDET_THRESHOLD_454_453[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_RXDET_THRESHOLD_454_453[1],SC_PMA_CH2_REG_TX_RXDET_THRESHOLD_454_453[0]" */,

    config input SC_PMA_CH2_REG_TX_BEACON_OSC_CTRL_457_455[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_BEACON_OSC_CTRL_457_455[2],SC_PMA_CH2_REG_TX_BEACON_OSC_CTRL_457_455[1],SC_PMA_CH2_REG_TX_BEACON_OSC_CTRL_457_455[0]" */,

    config input SC_PMA_CH2_REG_TX_PREDRV_DAC_459_458[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PREDRV_DAC_459_458[1],SC_PMA_CH2_REG_TX_PREDRV_DAC_459_458[0]" */,

    config input SC_PMA_CH2_REG_TX_PREDRV_CM_CTRL_461_460[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PREDRV_CM_CTRL_461_460[1],SC_PMA_CH2_REG_TX_PREDRV_CM_CTRL_461_460[0]" */,

    config input SC_PMA_CH2_REG_TX_TX2RX_SLPBACK_EN_462 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_TX2RX_SLPBACK_EN_462" */,

    config input SC_PMA_CH2_REG_TX_PCLK_EDGE_SEL_463 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PCLK_EDGE_SEL_463" */,

    config input SC_PMA_CH2_REG_TX_RXDET_STATUS_OW_464 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_RXDET_STATUS_OW_464" */,

    config input SC_PMA_CH2_REG_TX_RXDET_STATUS_465 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_RXDET_STATUS_465" */,

    config input SC_PMA_CH2_REG_TX_PRBS_GEN_EN_466 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PRBS_GEN_EN_466" */,

    config input SC_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL_468_467[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL_468_467[1],SC_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL_468_467[0]" */,

    config input SC_PMA_CH2_REG_TX_PRBS_SEL_470_469[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PRBS_SEL_470_469[1],SC_PMA_CH2_REG_TX_PRBS_SEL_470_469[0]" */,

    config input SC_PMA_CH2_REG_TX_UDP_DATA_490_471[19:0] = 20'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_UDP_DATA_490_471[19],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[18],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[17],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[16],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[15],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[14],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[13],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[12],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[11],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[10],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[9],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[8],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[7],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[6],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[5],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[4],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[3],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[2],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[1],SC_PMA_CH2_REG_TX_UDP_DATA_490_471[0]" */,

    config input SC_PMA_CH2_REG_TX_FIFO_RST_N_491 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_FIFO_RST_N_491" */,

    config input SC_PMA_CH2_REG_TX_FIFO_WP_CTRL_494_492[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_FIFO_WP_CTRL_494_492[2],SC_PMA_CH2_REG_TX_FIFO_WP_CTRL_494_492[1],SC_PMA_CH2_REG_TX_FIFO_WP_CTRL_494_492[0]" */,

    config input SC_PMA_CH2_REG_TX_FIFO_EN_495 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_FIFO_EN_495" */,

    config input SC_PMA_CH2_REG_TX_DATA_MUX_SEL_497_496[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_DATA_MUX_SEL_497_496[1],SC_PMA_CH2_REG_TX_DATA_MUX_SEL_497_496[0]" */,

    config input SC_PMA_CH2_REG_TX_ERR_INSERT_498 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_ERR_INSERT_498" */,

    config input SC_PMA_CH2_REG_TX_SATA_EN_504 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_SATA_EN_504" */,

    config input SC_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_OW_507 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_OW_507" */,

    config input SC_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_508 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_508" */,

    config input SC_PMA_CH2_REG_TX_PULLUP_DAC0_513_509[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PULLUP_DAC0_513_509[4],SC_PMA_CH2_REG_TX_PULLUP_DAC0_513_509[3],SC_PMA_CH2_REG_TX_PULLUP_DAC0_513_509[2],SC_PMA_CH2_REG_TX_PULLUP_DAC0_513_509[1],SC_PMA_CH2_REG_TX_PULLUP_DAC0_513_509[0]" */,

    config input SC_PMA_CH2_REG_TX_PULLUP_DAC1_518_514[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PULLUP_DAC1_518_514[4],SC_PMA_CH2_REG_TX_PULLUP_DAC1_518_514[3],SC_PMA_CH2_REG_TX_PULLUP_DAC1_518_514[2],SC_PMA_CH2_REG_TX_PULLUP_DAC1_518_514[1],SC_PMA_CH2_REG_TX_PULLUP_DAC1_518_514[0]" */,

    config input SC_PMA_CH2_REG_TX_PULLUP_DAC2_523_519[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PULLUP_DAC2_523_519[4],SC_PMA_CH2_REG_TX_PULLUP_DAC2_523_519[3],SC_PMA_CH2_REG_TX_PULLUP_DAC2_523_519[2],SC_PMA_CH2_REG_TX_PULLUP_DAC2_523_519[1],SC_PMA_CH2_REG_TX_PULLUP_DAC2_523_519[0]" */,

    config input SC_PMA_CH2_REG_TX_PULLUP_DAC3_528_524[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_PULLUP_DAC3_528_524[4],SC_PMA_CH2_REG_TX_PULLUP_DAC3_528_524[3],SC_PMA_CH2_REG_TX_PULLUP_DAC3_528_524[2],SC_PMA_CH2_REG_TX_PULLUP_DAC3_528_524[1],SC_PMA_CH2_REG_TX_PULLUP_DAC3_528_524[0]" */,

    config input SC_PMA_CH2_REG_TX_OOB_DELAY_SEL_532_529[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_OOB_DELAY_SEL_532_529[3],SC_PMA_CH2_REG_TX_OOB_DELAY_SEL_532_529[2],SC_PMA_CH2_REG_TX_OOB_DELAY_SEL_532_529[1],SC_PMA_CH2_REG_TX_OOB_DELAY_SEL_532_529[0]" */,

    config input SC_PMA_CH2_REG_TX_POLARITY_533 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_POLARITY_533" */,

    config input SC_PMA_CH2_REG_TX_SLPBK_AMP_535_534[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_SLPBK_AMP_535_534[1],SC_PMA_CH2_REG_TX_SLPBK_AMP_535_534[0]" */,

    config input SC_PMA_CH2_REG_TX_LS_MODE_EN_536 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_LS_MODE_EN_536" */,

    config input SC_PMA_CH2_REG_TX_JTAG_MODE_EN_OW_537 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_JTAG_MODE_EN_OW_537" */,

    config input SC_PMA_CH2_REG_TX_JTAG_MODE_EN_538 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_JTAG_MODE_EN_538" */,

    config input SC_PMA_CH2_REG_RX_JTAG_MODE_EN_OW_539 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_JTAG_MODE_EN_OW_539" */,

    config input SC_PMA_CH2_REG_RX_JTAG_MODE_EN_540 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_JTAG_MODE_EN_540" */,

    config input SC_PMA_CH2_REG_RX_JTAG_OE_541 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_JTAG_OE_541" */,

    config input SC_PMA_CH2_REG_RX_ACJTAG_VHYSTSE_544_542[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_ACJTAG_VHYSTSE_544_542[2],SC_PMA_CH2_REG_RX_ACJTAG_VHYSTSE_544_542[1],SC_PMA_CH2_REG_RX_ACJTAG_VHYSTSE_544_542[0]" */,

    config input SC_PMA_CH2_REG_TX_FBCLK_FAR_EN_545 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_FBCLK_FAR_EN_545" */,

    config input SC_PMA_CH2_REG_RX_TERM_MODE_CTRL_548_546[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_TERM_MODE_CTRL_548_546[2],SC_PMA_CH2_REG_RX_TERM_MODE_CTRL_548_546[1],SC_PMA_CH2_REG_RX_TERM_MODE_CTRL_548_546[0]" */,

    config input SC_PMA_CH2_REG_PLPBK_TXPCLK_EN_551 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_PLPBK_TXPCLK_EN_551" */,

    config input SC_PMA_CH2_REG_TX_609_600[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_TX_609_600[9],SC_PMA_CH2_REG_TX_609_600[8],SC_PMA_CH2_REG_TX_609_600[7],SC_PMA_CH2_REG_TX_609_600[6],SC_PMA_CH2_REG_TX_609_600[5],SC_PMA_CH2_REG_TX_609_600[4],SC_PMA_CH2_REG_TX_609_600[3],SC_PMA_CH2_REG_TX_609_600[2],SC_PMA_CH2_REG_TX_609_600[1],SC_PMA_CH2_REG_TX_609_600[0]" */,

    config input SC_PMA_CH2_REG_RX_CDR_617_610[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_CDR_617_610[7],SC_PMA_CH2_REG_RX_CDR_617_610[6],SC_PMA_CH2_REG_RX_CDR_617_610[5],SC_PMA_CH2_REG_RX_CDR_617_610[4],SC_PMA_CH2_REG_RX_CDR_617_610[3],SC_PMA_CH2_REG_RX_CDR_617_610[2],SC_PMA_CH2_REG_RX_CDR_617_610[1],SC_PMA_CH2_REG_RX_CDR_617_610[0]" */,

    config input SC_PMA_CH2_REG_RX_CDR_623_618[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_CDR_623_618[5],SC_PMA_CH2_REG_RX_CDR_623_618[4],SC_PMA_CH2_REG_RX_CDR_623_618[3],SC_PMA_CH2_REG_RX_CDR_623_618[2],SC_PMA_CH2_REG_RX_CDR_623_618[1],SC_PMA_CH2_REG_RX_CDR_623_618[0]" */,

    config input SC_PMA_CH2_REG_RX_631_624[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_631_624[7],SC_PMA_CH2_REG_RX_631_624[6],SC_PMA_CH2_REG_RX_631_624[5],SC_PMA_CH2_REG_RX_631_624[4],SC_PMA_CH2_REG_RX_631_624[3],SC_PMA_CH2_REG_RX_631_624[2],SC_PMA_CH2_REG_RX_631_624[1],SC_PMA_CH2_REG_RX_631_624[0]" */,

    config input SC_PMA_CH2_REG_RX_639_632[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_639_632[7],SC_PMA_CH2_REG_RX_639_632[6],SC_PMA_CH2_REG_RX_639_632[5],SC_PMA_CH2_REG_RX_639_632[4],SC_PMA_CH2_REG_RX_639_632[3],SC_PMA_CH2_REG_RX_639_632[2],SC_PMA_CH2_REG_RX_639_632[1],SC_PMA_CH2_REG_RX_639_632[0]" */,

    config input SC_PMA_CH2_REG_RX_647_640[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_647_640[7],SC_PMA_CH2_REG_RX_647_640[6],SC_PMA_CH2_REG_RX_647_640[5],SC_PMA_CH2_REG_RX_647_640[4],SC_PMA_CH2_REG_RX_647_640[3],SC_PMA_CH2_REG_RX_647_640[2],SC_PMA_CH2_REG_RX_647_640[1],SC_PMA_CH2_REG_RX_647_640[0]" */,

    config input SC_PMA_CH2_REG_RX_655_648[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_655_648[7],SC_PMA_CH2_REG_RX_655_648[6],SC_PMA_CH2_REG_RX_655_648[5],SC_PMA_CH2_REG_RX_655_648[4],SC_PMA_CH2_REG_RX_655_648[3],SC_PMA_CH2_REG_RX_655_648[2],SC_PMA_CH2_REG_RX_655_648[1],SC_PMA_CH2_REG_RX_655_648[0]" */,

    config input SC_PMA_CH2_REG_RX_659_656[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RX_659_656[3],SC_PMA_CH2_REG_RX_659_656[2],SC_PMA_CH2_REG_RX_659_656[1],SC_PMA_CH2_REG_RX_659_656[0]" */,

    config input SC_PMA_CH2_CFG_LANE_POWERUP_660 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_CFG_LANE_POWERUP_660" */,

    config input SC_PMA_CH2_CFG_PMA_POR_N_661 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_CFG_PMA_POR_N_661" */,

    config input SC_PMA_CH2_CFG_RX_LANE_POWERUP_662 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_CFG_RX_LANE_POWERUP_662" */,

    config input SC_PMA_CH2_CFG_RX_PMA_RSTN_663 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_CFG_RX_PMA_RSTN_663" */,

    config input SC_PMA_CH2_CFG_TX_LANE_POWERUP_664 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_CFG_TX_LANE_POWERUP_664" */,

    config input SC_PMA_CH2_CFG_TX_PMA_RSTN_665 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_CFG_TX_PMA_RSTN_665" */,

    config input SC_PMA_CH2_CFG_CTLE_ADP_RSTN_666 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_CFG_CTLE_ADP_RSTN_666" */,

    config input SC_PMA_CH2_REG_RESERVED_48_45[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_48_45[3],SC_PMA_CH2_REG_RESERVED_48_45[2],SC_PMA_CH2_REG_RESERVED_48_45[1],SC_PMA_CH2_REG_RESERVED_48_45[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_69 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_69" */,

    config input SC_PMA_CH2_REG_RESERVED_77_76[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_77_76[1],SC_PMA_CH2_REG_RESERVED_77_76[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_171_164[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_171_164[7],SC_PMA_CH2_REG_RESERVED_171_164[6],SC_PMA_CH2_REG_RESERVED_171_164[5],SC_PMA_CH2_REG_RESERVED_171_164[4],SC_PMA_CH2_REG_RESERVED_171_164[3],SC_PMA_CH2_REG_RESERVED_171_164[2],SC_PMA_CH2_REG_RESERVED_171_164[1],SC_PMA_CH2_REG_RESERVED_171_164[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_175_172[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_175_172[3],SC_PMA_CH2_REG_RESERVED_175_172[2],SC_PMA_CH2_REG_RESERVED_175_172[1],SC_PMA_CH2_REG_RESERVED_175_172[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_190 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_190" */,

    config input SC_PMA_CH2_REG_RESERVED_233_232[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_233_232[1],SC_PMA_CH2_REG_RESERVED_233_232[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_235_234[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_235_234[1],SC_PMA_CH2_REG_RESERVED_235_234[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_241_240[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_241_240[1],SC_PMA_CH2_REG_RESERVED_241_240[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_285_283[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_285_283[2],SC_PMA_CH2_REG_RESERVED_285_283[1],SC_PMA_CH2_REG_RESERVED_285_283[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_286 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_286" */,

    config input SC_PMA_CH2_REG_RESERVED_295 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_295" */,

    config input SC_PMA_CH2_REG_RESERVED_298 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_298" */,

    config input SC_PMA_CH2_REG_RESERVED_332_325[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_332_325[7],SC_PMA_CH2_REG_RESERVED_332_325[6],SC_PMA_CH2_REG_RESERVED_332_325[5],SC_PMA_CH2_REG_RESERVED_332_325[4],SC_PMA_CH2_REG_RESERVED_332_325[3],SC_PMA_CH2_REG_RESERVED_332_325[2],SC_PMA_CH2_REG_RESERVED_332_325[1],SC_PMA_CH2_REG_RESERVED_332_325[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_340_333[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_340_333[7],SC_PMA_CH2_REG_RESERVED_340_333[6],SC_PMA_CH2_REG_RESERVED_340_333[5],SC_PMA_CH2_REG_RESERVED_340_333[4],SC_PMA_CH2_REG_RESERVED_340_333[3],SC_PMA_CH2_REG_RESERVED_340_333[2],SC_PMA_CH2_REG_RESERVED_340_333[1],SC_PMA_CH2_REG_RESERVED_340_333[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_348_341[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_348_341[7],SC_PMA_CH2_REG_RESERVED_348_341[6],SC_PMA_CH2_REG_RESERVED_348_341[5],SC_PMA_CH2_REG_RESERVED_348_341[4],SC_PMA_CH2_REG_RESERVED_348_341[3],SC_PMA_CH2_REG_RESERVED_348_341[2],SC_PMA_CH2_REG_RESERVED_348_341[1],SC_PMA_CH2_REG_RESERVED_348_341[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_354_349[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_354_349[5],SC_PMA_CH2_REG_RESERVED_354_349[4],SC_PMA_CH2_REG_RESERVED_354_349[3],SC_PMA_CH2_REG_RESERVED_354_349[2],SC_PMA_CH2_REG_RESERVED_354_349[1],SC_PMA_CH2_REG_RESERVED_354_349[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_373 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_373" */,

    config input SC_PMA_CH2_REG_RESERVED_376 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_376" */,

    config input SC_PMA_CH2_REG_RESERVED_452 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_452" */,

    config input SC_PMA_CH2_REG_RESERVED_502_499[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_502_499[3],SC_PMA_CH2_REG_RESERVED_502_499[2],SC_PMA_CH2_REG_RESERVED_502_499[1],SC_PMA_CH2_REG_RESERVED_502_499[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_506_505[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_506_505[1],SC_PMA_CH2_REG_RESERVED_506_505[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_550_549[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_550_549[1],SC_PMA_CH2_REG_RESERVED_550_549[0]" */,

    config input SC_PMA_CH2_REG_RESERVED_556_552[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH2_REG_RESERVED_556_552[4],SC_PMA_CH2_REG_RESERVED_556_552[3],SC_PMA_CH2_REG_RESERVED_556_552[2],SC_PMA_CH2_REG_RESERVED_556_552[1],SC_PMA_CH2_REG_RESERVED_556_552[0]" */,

    config input SC_PMA_CH3_REG_RX_PD_0 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_PD_0" */,

    config input SC_PMA_CH3_REG_RX_PD_EN_1 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_PD_EN_1" */,

    config input SC_PMA_CH3_REG_RX_CLKPATH_PD_2 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_CLKPATH_PD_2" */,

    config input SC_PMA_CH3_REG_RX_CLKPATH_PD_EN_3 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_CLKPATH_PD_EN_3" */,

    config input SC_PMA_CH3_REG_RX_DATAPATH_PD_4 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_DATAPATH_PD_4" */,

    config input SC_PMA_CH3_REG_RX_DATAPATH_PD_EN_5 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_DATAPATH_PD_EN_5" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_PD_6 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_PD_6" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_PD_EN_7 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_PD_EN_7" */,

    config input SC_PMA_CH3_REG_RX_DCC_RST_N_8 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_DCC_RST_N_8" */,

    config input SC_PMA_CH3_REG_RX_DCC_RST_N_EN_9 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_DCC_RST_N_EN_9" */,

    config input SC_PMA_CH3_REG_RX_CDR_RST_N_10 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_CDR_RST_N_10" */,

    config input SC_PMA_CH3_REG_RX_CDR_RST_N_EN_11 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_CDR_RST_N_EN_11" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_RST_N_12 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_RST_N_12" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_RST_N_EN_13 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_RST_N_EN_13" */,

    config input SC_PMA_CH3_REG_RXPCLK_SLIP_14 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RXPCLK_SLIP_14" */,

    config input SC_PMA_CH3_REG_RXPCLK_SLIP_OW_15 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RXPCLK_SLIP_OW_15" */,

    config input SC_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_16 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_16" */,

    config input SC_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_EN_17 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_EN_17" */,

    config input SC_PMA_CH3_REG_RX_PCLKSWITCH_18 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_PCLKSWITCH_18" */,

    config input SC_PMA_CH3_REG_RX_PCLKSWITCH_EN_19 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_PCLKSWITCH_EN_19" */,

    config input SC_PMA_CH3_REG_RX_HIGHZ_20 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_HIGHZ_20" */,

    config input SC_PMA_CH3_REG_RX_HIGHZ_EN_21 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_HIGHZ_EN_21" */,

    config input SC_PMA_CH3_REG_RX_EQ_C_SET_25_22[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_EQ_C_SET_25_22[3],SC_PMA_CH3_REG_RX_EQ_C_SET_25_22[2],SC_PMA_CH3_REG_RX_EQ_C_SET_25_22[1],SC_PMA_CH3_REG_RX_EQ_C_SET_25_22[0]" */,

    config input SC_PMA_CH3_REG_RX_EQ_R_SET_29_26[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_EQ_R_SET_29_26[3],SC_PMA_CH3_REG_RX_EQ_R_SET_29_26[2],SC_PMA_CH3_REG_RX_EQ_R_SET_29_26[1],SC_PMA_CH3_REG_RX_EQ_R_SET_29_26[0]" */,

    config input SC_PMA_CH3_REG_RX_BUSWIDTH_32_30[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_BUSWIDTH_32_30[2],SC_PMA_CH3_REG_RX_BUSWIDTH_32_30[1],SC_PMA_CH3_REG_RX_BUSWIDTH_32_30[0]" */,

    config input SC_PMA_CH3_REG_RX_BUSWIDTH_EN_33 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_BUSWIDTH_EN_33" */,

    config input SC_PMA_CH3_REG_RX_RATE_36_34[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_RATE_36_34[2],SC_PMA_CH3_REG_RX_RATE_36_34[1],SC_PMA_CH3_REG_RX_RATE_36_34[0]" */,

    config input SC_PMA_CH3_REG_RX_RATE_EN_37 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_RATE_EN_37" */,

    config input SC_PMA_CH3_REG_RX_RES_TRIM_43_38[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_RES_TRIM_43_38[5],SC_PMA_CH3_REG_RX_RES_TRIM_43_38[4],SC_PMA_CH3_REG_RX_RES_TRIM_43_38[3],SC_PMA_CH3_REG_RX_RES_TRIM_43_38[2],SC_PMA_CH3_REG_RX_RES_TRIM_43_38[1],SC_PMA_CH3_REG_RX_RES_TRIM_43_38[0]" */,

    config input SC_PMA_CH3_REG_RX_RES_TRIM_EN_44 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_RES_TRIM_EN_44" */,

    config input SC_PMA_CH3_REG_RX_ICTRL_SIGDET_52_49[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_ICTRL_SIGDET_52_49[3],SC_PMA_CH3_REG_RX_ICTRL_SIGDET_52_49[2],SC_PMA_CH3_REG_RX_ICTRL_SIGDET_52_49[1],SC_PMA_CH3_REG_RX_ICTRL_SIGDET_52_49[0]" */,

    config input SC_PMA_CH3_REG_RX_EQ_OFF_53 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_EQ_OFF_53" */,

    config input SC_PMA_CH3_REG_RX_PREAMP_IC_65_54[11:0] = 12'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_PREAMP_IC_65_54[11],SC_PMA_CH3_REG_RX_PREAMP_IC_65_54[10],SC_PMA_CH3_REG_RX_PREAMP_IC_65_54[9],SC_PMA_CH3_REG_RX_PREAMP_IC_65_54[8],SC_PMA_CH3_REG_RX_PREAMP_IC_65_54[7],SC_PMA_CH3_REG_RX_PREAMP_IC_65_54[6],SC_PMA_CH3_REG_RX_PREAMP_IC_65_54[5],SC_PMA_CH3_REG_RX_PREAMP_IC_65_54[4],SC_PMA_CH3_REG_RX_PREAMP_IC_65_54[3],SC_PMA_CH3_REG_RX_PREAMP_IC_65_54[2],SC_PMA_CH3_REG_RX_PREAMP_IC_65_54[1],SC_PMA_CH3_REG_RX_PREAMP_IC_65_54[0]" */,

    config input SC_PMA_CH3_REG_RX_PCLK_EDGE_SEL_66 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_PCLK_EDGE_SEL_66" */,

    config input SC_PMA_CH3_REG_RX_PIBUF_IC_68_67[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_PIBUF_IC_68_67[1],SC_PMA_CH3_REG_RX_PIBUF_IC_68_67[0]" */,

    config input SC_PMA_CH3_REG_RX_DCC_IC_RX_71_70[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_DCC_IC_RX_71_70[1],SC_PMA_CH3_REG_RX_DCC_IC_RX_71_70[0]" */,

    config input SC_PMA_CH3_REG_RX_DCC_IC_TX_73_72[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_DCC_IC_TX_73_72[1],SC_PMA_CH3_REG_RX_DCC_IC_TX_73_72[0]" */,

    config input SC_PMA_CH3_REG_RX_ICTRL_TRX_75_74[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_ICTRL_TRX_75_74[1],SC_PMA_CH3_REG_RX_ICTRL_TRX_75_74[0]" */,

    config input SC_PMA_CH3_REG_RX_ICTRL_PREAMP_79_78[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_ICTRL_PREAMP_79_78[1],SC_PMA_CH3_REG_RX_ICTRL_PREAMP_79_78[0]" */,

    config input SC_PMA_CH3_REG_RX_ICTRL_SLICER_81_80[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_ICTRL_SLICER_81_80[1],SC_PMA_CH3_REG_RX_ICTRL_SLICER_81_80[0]" */,

    config input SC_PMA_CH3_REG_RX_ICTRL_PIBUF_83_82[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_ICTRL_PIBUF_83_82[1],SC_PMA_CH3_REG_RX_ICTRL_PIBUF_83_82[0]" */,

    config input SC_PMA_CH3_REG_RX_ICTRL_PI_85_84[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_ICTRL_PI_85_84[1],SC_PMA_CH3_REG_RX_ICTRL_PI_85_84[0]" */,

    config input SC_PMA_CH3_REG_RX_ICTRL_DCC_87_86[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_ICTRL_DCC_87_86[1],SC_PMA_CH3_REG_RX_ICTRL_DCC_87_86[0]" */,

    config input SC_PMA_CH3_REG_RX_ICTRL_PREDRV_89_88[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_ICTRL_PREDRV_89_88[1],SC_PMA_CH3_REG_RX_ICTRL_PREDRV_89_88[0]" */,

    config input SC_PMA_CH3_REG_TX_RATE_92_90[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_RATE_92_90[2],SC_PMA_CH3_REG_TX_RATE_92_90[1],SC_PMA_CH3_REG_TX_RATE_92_90[0]" */,

    config input SC_PMA_CH3_REG_TX_RATE_EN_93 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_RATE_EN_93" */,

    config input SC_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_94 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_94" */,

    config input SC_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_EN_95 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_EN_95" */,

    config input SC_PMA_CH3_REG_RX_TX2RX_PLPBK_EN_96 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_TX2RX_PLPBK_EN_96" */,

    config input SC_PMA_CH3_REG_TXCLK_SEL_97 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TXCLK_SEL_97" */,

    config input SC_PMA_CH3_REG_RX_DATA_POLARITY_98 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_DATA_POLARITY_98" */,

    config input SC_PMA_CH3_REG_RX_ERR_INSERT_99 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_ERR_INSERT_99" */,

    config input SC_PMA_CH3_REG_UDP_CHK_EN_100 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_UDP_CHK_EN_100" */,

    config input SC_PMA_CH3_REG_PRBS_SEL_102_101[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_PRBS_SEL_102_101[1],SC_PMA_CH3_REG_PRBS_SEL_102_101[0]" */,

    config input SC_PMA_CH3_REG_PRBS_CHK_EN_103 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_PRBS_CHK_EN_103" */,

    config input SC_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL_105_104[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL_105_104[1],SC_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL_105_104[0]" */,

    config input SC_PMA_CH3_REG_BIST_CHK_PAT_SEL_106 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_BIST_CHK_PAT_SEL_106" */,

    config input SC_PMA_CH3_REG_LOAD_ERR_CNT_107 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_LOAD_ERR_CNT_107" */,

    config input SC_PMA_CH3_REG_CHK_COUNTER_EN_108 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CHK_COUNTER_EN_108" */,

    config input SC_PMA_CH3_REG_CDR_PROP_GAIN_111_109[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_PROP_GAIN_111_109[2],SC_PMA_CH3_REG_CDR_PROP_GAIN_111_109[1],SC_PMA_CH3_REG_CDR_PROP_GAIN_111_109[0]" */,

    config input SC_PMA_CH3_REG_CDR_PROP_TURBO_GAIN_114_112[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_PROP_TURBO_GAIN_114_112[2],SC_PMA_CH3_REG_CDR_PROP_TURBO_GAIN_114_112[1],SC_PMA_CH3_REG_CDR_PROP_TURBO_GAIN_114_112[0]" */,

    config input SC_PMA_CH3_REG_CDR_INT_GAIN_117_115[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_INT_GAIN_117_115[2],SC_PMA_CH3_REG_CDR_INT_GAIN_117_115[1],SC_PMA_CH3_REG_CDR_INT_GAIN_117_115[0]" */,

    config input SC_PMA_CH3_REG_CDR_INT_TURBO_GAIN_120_118[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_INT_TURBO_GAIN_120_118[2],SC_PMA_CH3_REG_CDR_INT_TURBO_GAIN_120_118[1],SC_PMA_CH3_REG_CDR_INT_TURBO_GAIN_120_118[0]" */,

    config input SC_PMA_CH3_REG_CDR_INT_SAT_MAX_130_121[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_INT_SAT_MAX_130_121[9],SC_PMA_CH3_REG_CDR_INT_SAT_MAX_130_121[8],SC_PMA_CH3_REG_CDR_INT_SAT_MAX_130_121[7],SC_PMA_CH3_REG_CDR_INT_SAT_MAX_130_121[6],SC_PMA_CH3_REG_CDR_INT_SAT_MAX_130_121[5],SC_PMA_CH3_REG_CDR_INT_SAT_MAX_130_121[4],SC_PMA_CH3_REG_CDR_INT_SAT_MAX_130_121[3],SC_PMA_CH3_REG_CDR_INT_SAT_MAX_130_121[2],SC_PMA_CH3_REG_CDR_INT_SAT_MAX_130_121[1],SC_PMA_CH3_REG_CDR_INT_SAT_MAX_130_121[0]" */,

    config input SC_PMA_CH3_REG_CDR_INT_SAT_MIN_140_131[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_INT_SAT_MIN_140_131[9],SC_PMA_CH3_REG_CDR_INT_SAT_MIN_140_131[8],SC_PMA_CH3_REG_CDR_INT_SAT_MIN_140_131[7],SC_PMA_CH3_REG_CDR_INT_SAT_MIN_140_131[6],SC_PMA_CH3_REG_CDR_INT_SAT_MIN_140_131[5],SC_PMA_CH3_REG_CDR_INT_SAT_MIN_140_131[4],SC_PMA_CH3_REG_CDR_INT_SAT_MIN_140_131[3],SC_PMA_CH3_REG_CDR_INT_SAT_MIN_140_131[2],SC_PMA_CH3_REG_CDR_INT_SAT_MIN_140_131[1],SC_PMA_CH3_REG_CDR_INT_SAT_MIN_140_131[0]" */,

    config input SC_PMA_CH3_REG_CDR_INT_RST_141 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_INT_RST_141" */,

    config input SC_PMA_CH3_REG_CDR_INT_RST_OW_142 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_INT_RST_OW_142" */,

    config input SC_PMA_CH3_REG_CDR_PROP_RST_143 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_PROP_RST_143" */,

    config input SC_PMA_CH3_REG_CDR_PROP_RST_OW_144 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_PROP_RST_OW_144" */,

    config input SC_PMA_CH3_REG_CDR_LOCK_RST_145 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_LOCK_RST_145" */,

    config input SC_PMA_CH3_REG_CDR_LOCK_RST_OW_146 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_LOCK_RST_OW_146" */,

    config input SC_PMA_CH3_REG_CDR_RX_PI_FORCE_SEL_147 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_RX_PI_FORCE_SEL_147" */,

    config input SC_PMA_CH3_REG_CDR_RX_PI_FORCE_D_155_148[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_RX_PI_FORCE_D_155_148[7],SC_PMA_CH3_REG_CDR_RX_PI_FORCE_D_155_148[6],SC_PMA_CH3_REG_CDR_RX_PI_FORCE_D_155_148[5],SC_PMA_CH3_REG_CDR_RX_PI_FORCE_D_155_148[4],SC_PMA_CH3_REG_CDR_RX_PI_FORCE_D_155_148[3],SC_PMA_CH3_REG_CDR_RX_PI_FORCE_D_155_148[2],SC_PMA_CH3_REG_CDR_RX_PI_FORCE_D_155_148[1],SC_PMA_CH3_REG_CDR_RX_PI_FORCE_D_155_148[0]" */,

    config input SC_PMA_CH3_REG_CDR_LOCK_TIMER_158_156[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_LOCK_TIMER_158_156[2],SC_PMA_CH3_REG_CDR_LOCK_TIMER_158_156[1],SC_PMA_CH3_REG_CDR_LOCK_TIMER_158_156[0]" */,

    config input SC_PMA_CH3_REG_CDR_TURBO_MODE_TIMER_160_159[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_TURBO_MODE_TIMER_160_159[1],SC_PMA_CH3_REG_CDR_TURBO_MODE_TIMER_160_159[0]" */,

    config input SC_PMA_CH3_REG_CDR_LOCK_VAL_161 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_LOCK_VAL_161" */,

    config input SC_PMA_CH3_REG_CDR_LOCK_OW_162 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_LOCK_OW_162" */,

    config input SC_PMA_CH3_REG_CDR_INT_SAT_DET_EN_163 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_INT_SAT_DET_EN_163" */,

    config input SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_EN_176 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_EN_176" */,

    config input SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_RESET_EN_177 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_RESET_EN_177" */,

    config input SC_PMA_CH3_REG_CDR_PI_CTRL_RST_178 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_PI_CTRL_RST_178" */,

    config input SC_PMA_CH3_REG_CDR_PI_CTRL_RST_OW_179 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_PI_CTRL_RST_OW_179" */,

    config input SC_PMA_CH3_REG_CDR_SAT_DET_RST_180 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_SAT_DET_RST_180" */,

    config input SC_PMA_CH3_REG_CDR_SAT_DET_RST_OW_181 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_SAT_DET_RST_OW_181" */,

    config input SC_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_182 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_182" */,

    config input SC_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_OW_183 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_OW_183" */,

    config input SC_PMA_CH3_REG_CDR_SIGDET_STATUS_DIS_184 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_SIGDET_STATUS_DIS_184" */,

    config input SC_PMA_CH3_REG_CDR_SAT_DET_TIMER_186_185[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_SAT_DET_TIMER_186_185[1],SC_PMA_CH3_REG_CDR_SAT_DET_TIMER_186_185[0]" */,

    config input SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_VAL_187 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_VAL_187" */,

    config input SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_OW_188 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_OW_188" */,

    config input SC_PMA_CH3_REG_CDR_TURBO_MODE_EN_189 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_TURBO_MODE_EN_189" */,

    config input SC_PMA_CH3_REG_CDR_STATUS_RADDR_INIT_193_191[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_STATUS_RADDR_INIT_193_191[2],SC_PMA_CH3_REG_CDR_STATUS_RADDR_INIT_193_191[1],SC_PMA_CH3_REG_CDR_STATUS_RADDR_INIT_193_191[0]" */,

    config input SC_PMA_CH3_REG_CDR_STATUS_FIFO_EN_194 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_CDR_STATUS_FIFO_EN_194" */,

    config input SC_PMA_CH3_REG_PMA_TEST_SEL_197_195[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_PMA_TEST_SEL_197_195[2],SC_PMA_CH3_REG_PMA_TEST_SEL_197_195[1],SC_PMA_CH3_REG_PMA_TEST_SEL_197_195[0]" */,

    config input SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN_203_198[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN_203_198[5],SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN_203_198[4],SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN_203_198[3],SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN_203_198[2],SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN_203_198[1],SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN_203_198[0]" */,

    config input SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX_209_204[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX_209_204[5],SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX_209_204[4],SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX_209_204[3],SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX_209_204[2],SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX_209_204[1],SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX_209_204[0]" */,

    config input SC_PMA_CH3_REG_OOB_COMINIT_GAP_MIN_217_210[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_OOB_COMINIT_GAP_MIN_217_210[7],SC_PMA_CH3_REG_OOB_COMINIT_GAP_MIN_217_210[6],SC_PMA_CH3_REG_OOB_COMINIT_GAP_MIN_217_210[5],SC_PMA_CH3_REG_OOB_COMINIT_GAP_MIN_217_210[4],SC_PMA_CH3_REG_OOB_COMINIT_GAP_MIN_217_210[3],SC_PMA_CH3_REG_OOB_COMINIT_GAP_MIN_217_210[2],SC_PMA_CH3_REG_OOB_COMINIT_GAP_MIN_217_210[1],SC_PMA_CH3_REG_OOB_COMINIT_GAP_MIN_217_210[0]" */,

    config input SC_PMA_CH3_REG_OOB_COMINIT_GAP_MAX_225_218[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_OOB_COMINIT_GAP_MAX_225_218[7],SC_PMA_CH3_REG_OOB_COMINIT_GAP_MAX_225_218[6],SC_PMA_CH3_REG_OOB_COMINIT_GAP_MAX_225_218[5],SC_PMA_CH3_REG_OOB_COMINIT_GAP_MAX_225_218[4],SC_PMA_CH3_REG_OOB_COMINIT_GAP_MAX_225_218[3],SC_PMA_CH3_REG_OOB_COMINIT_GAP_MAX_225_218[2],SC_PMA_CH3_REG_OOB_COMINIT_GAP_MAX_225_218[1],SC_PMA_CH3_REG_OOB_COMINIT_GAP_MAX_225_218[0]" */,

    config input SC_PMA_CH3_REG_RX_PIBUF_IC_TX_227_226[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_PIBUF_IC_TX_227_226[1],SC_PMA_CH3_REG_RX_PIBUF_IC_TX_227_226[0]" */,

    config input SC_PMA_CH3_REG_COMWAKE_STATUS_CLEAR_228 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_COMWAKE_STATUS_CLEAR_228" */,

    config input SC_PMA_CH3_REG_COMINIT_STATUS_CLEAR_229 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_COMINIT_STATUS_CLEAR_229" */,

    config input SC_PMA_CH3_REG_RX_SYNC_RST_N_EN_230 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SYNC_RST_N_EN_230" */,

    config input SC_PMA_CH3_REG_RX_SYNC_RST_N_231 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SYNC_RST_N_231" */,

    config input SC_PMA_CH3_REG_RX_SATA_COMINIT_OW_236 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SATA_COMINIT_OW_236" */,

    config input SC_PMA_CH3_REG_RX_SATA_COMINIT_237 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SATA_COMINIT_237" */,

    config input SC_PMA_CH3_REG_RX_SATA_COMWAKE_OW_238 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SATA_COMWAKE_OW_238" */,

    config input SC_PMA_CH3_REG_RX_SATA_COMWAKE_239 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SATA_COMWAKE_239" */,

    config input SC_PMA_CH3_REG_RX_DCC_DISABLE_242 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_DCC_DISABLE_242" */,

    config input SC_PMA_CH3_REG_TX_DCC_DISABLE_243 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_DCC_DISABLE_243" */,

    config input SC_PMA_CH3_REG_RX_SLIP_SEL_EN_244 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SLIP_SEL_EN_244" */,

    config input SC_PMA_CH3_REG_RX_SLIP_SEL_248_245[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SLIP_SEL_248_245[3],SC_PMA_CH3_REG_RX_SLIP_SEL_248_245[2],SC_PMA_CH3_REG_RX_SLIP_SEL_248_245[1],SC_PMA_CH3_REG_RX_SLIP_SEL_248_245[0]" */,

    config input SC_PMA_CH3_REG_RX_SLIP_EN_249 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SLIP_EN_249" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_STATUS_SEL_252_250[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_STATUS_SEL_252_250[2],SC_PMA_CH3_REG_RX_SIGDET_STATUS_SEL_252_250[1],SC_PMA_CH3_REG_RX_SIGDET_STATUS_SEL_252_250[0]" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_FSM_RST_N_253 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_FSM_RST_N_253" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_STATUS_OW_254 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_STATUS_OW_254" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_STATUS_255 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_STATUS_255" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_VTH_259_256[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_VTH_259_256[3],SC_PMA_CH3_REG_RX_SIGDET_VTH_259_256[2],SC_PMA_CH3_REG_RX_SIGDET_VTH_259_256[1],SC_PMA_CH3_REG_RX_SIGDET_VTH_259_256[0]" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_GRM_261_260[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_GRM_261_260[1],SC_PMA_CH3_REG_RX_SIGDET_GRM_261_260[0]" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_PULSE_EXT_262 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_PULSE_EXT_262" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_CH2_SEL_263 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_CH2_SEL_263" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[4],SC_PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[3],SC_PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[2],SC_PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[1],SC_PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264[0]" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_CHK_WINDOW_EN_269 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_CHK_WINDOW_EN_269" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[2],SC_PMA_CH3_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[1],SC_PMA_CH3_REG_RX_SIGDET_NOSIG_CNT_SET_272_270[0]" */,

    config input SC_PMA_CH3_REG_SLIP_FIFO_INV_EN_273 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_SLIP_FIFO_INV_EN_273" */,

    config input SC_PMA_CH3_REG_SLIP_FIFO_INV_274 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_SLIP_FIFO_INV_274" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[4],SC_PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[3],SC_PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[2],SC_PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[1],SC_PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275[0]" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_4OOB_DET_SEL_282_280[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_4OOB_DET_SEL_282_280[2],SC_PMA_CH3_REG_RX_SIGDET_4OOB_DET_SEL_282_280[1],SC_PMA_CH3_REG_RX_SIGDET_4OOB_DET_SEL_282_280[0]" */,

    config input SC_PMA_CH3_REG_RX_SIGDET_IC_I_290_287[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_SIGDET_IC_I_290_287[3],SC_PMA_CH3_REG_RX_SIGDET_IC_I_290_287[2],SC_PMA_CH3_REG_RX_SIGDET_IC_I_290_287[1],SC_PMA_CH3_REG_RX_SIGDET_IC_I_290_287[0]" */,

    config input SC_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_OW_291 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_OW_291" */,

    config input SC_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_292 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_292" */,

    config input SC_PMA_CH3_REG_RX_OOB_DETECTOR_PD_OW_293 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_OOB_DETECTOR_PD_OW_293" */,

    config input SC_PMA_CH3_REG_RX_OOB_DETECTOR_PD_294 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_OOB_DETECTOR_PD_294" */,

    config input SC_PMA_CH3_REG_RX_TERM_CM_CTRL_297_296[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_TERM_CM_CTRL_297_296[1],SC_PMA_CH3_REG_RX_TERM_CM_CTRL_297_296[0]" */,

    config input SC_PMA_CH3_REG_TX_PD_299 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PD_299" */,

    config input SC_PMA_CH3_REG_TX_PD_OW_300 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PD_OW_300" */,

    config input SC_PMA_CH3_REG_TX_CLKPATH_PD_301 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_CLKPATH_PD_301" */,

    config input SC_PMA_CH3_REG_TX_CLKPATH_PD_OW_302 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_CLKPATH_PD_OW_302" */,

    config input SC_PMA_CH3_REG_TX_BEACON_TIMER_SEL_304_303[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_BEACON_TIMER_SEL_304_303[1],SC_PMA_CH3_REG_TX_BEACON_TIMER_SEL_304_303[0]" */,

    config input SC_PMA_CH3_REG_TX_RXDET_REQ_OW_305 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_RXDET_REQ_OW_305" */,

    config input SC_PMA_CH3_REG_TX_RXDET_REQ_306 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_RXDET_REQ_306" */,

    config input SC_PMA_CH3_REG_TX_BEACON_EN_OW_307 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_BEACON_EN_OW_307" */,

    config input SC_PMA_CH3_REG_TX_BEACON_EN_308 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_BEACON_EN_308" */,

    config input SC_PMA_CH3_REG_TX_EI_EN_OW_309 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_EI_EN_OW_309" */,

    config input SC_PMA_CH3_REG_TX_EI_EN_310 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_EI_EN_310" */,

    config input SC_PMA_CH3_REG_TX_RES_CAL_EN_311 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_RES_CAL_EN_311" */,

    config input SC_PMA_CH3_REG_TX_RES_CAL_317_312[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_RES_CAL_317_312[5],SC_PMA_CH3_REG_TX_RES_CAL_317_312[4],SC_PMA_CH3_REG_TX_RES_CAL_317_312[3],SC_PMA_CH3_REG_TX_RES_CAL_317_312[2],SC_PMA_CH3_REG_TX_RES_CAL_317_312[1],SC_PMA_CH3_REG_TX_RES_CAL_317_312[0]" */,

    config input SC_PMA_CH3_REG_TX_BIAS_CAL_EN_318 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_BIAS_CAL_EN_318" */,

    config input SC_PMA_CH3_REG_TX_BIAS_CTRL_324_319[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_BIAS_CTRL_324_319[5],SC_PMA_CH3_REG_TX_BIAS_CTRL_324_319[4],SC_PMA_CH3_REG_TX_BIAS_CTRL_324_319[3],SC_PMA_CH3_REG_TX_BIAS_CTRL_324_319[2],SC_PMA_CH3_REG_TX_BIAS_CTRL_324_319[1],SC_PMA_CH3_REG_TX_BIAS_CTRL_324_319[0]" */,

    config input SC_PMA_CH3_REG_TX_RXDET_TIMER_SEL_356_355[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_RXDET_TIMER_SEL_356_355[1],SC_PMA_CH3_REG_TX_RXDET_TIMER_SEL_356_355[0]" */,

    config input SC_PMA_CH3_REG_TX_SYNC_OW_357 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_SYNC_OW_357" */,

    config input SC_PMA_CH3_REG_TX_SYNC_358 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_SYNC_358" */,

    config input SC_PMA_CH3_REG_TX_PD_POST_359 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PD_POST_359" */,

    config input SC_PMA_CH3_REG_TX_PD_POST_OW_360 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PD_POST_OW_360" */,

    config input SC_PMA_CH3_REG_TX_RESET_N_OW_361 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_RESET_N_OW_361" */,

    config input SC_PMA_CH3_REG_TX_RESET_N_362 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_RESET_N_362" */,

    config input SC_PMA_CH3_REG_TX_DCC_RESET_N_OW_363 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_DCC_RESET_N_OW_363" */,

    config input SC_PMA_CH3_REG_TX_DCC_RESET_N_364 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_DCC_RESET_N_364" */,

    config input SC_PMA_CH3_REG_TX_BUSWIDTH_OW_365 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_BUSWIDTH_OW_365" */,

    config input SC_PMA_CH3_REG_TX_BUSWIDTH_368_366[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_BUSWIDTH_368_366[2],SC_PMA_CH3_REG_TX_BUSWIDTH_368_366[1],SC_PMA_CH3_REG_TX_BUSWIDTH_368_366[0]" */,

    config input SC_PMA_CH3_REG_PLL_READY_OW_369 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_PLL_READY_OW_369" */,

    config input SC_PMA_CH3_REG_PLL_READY_370 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_PLL_READY_370" */,

    config input SC_PMA_CH3_REG_TX_PCLK_SW_OW_371 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PCLK_SW_OW_371" */,

    config input SC_PMA_CH3_REG_TX_PCLK_SW_372 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PCLK_SW_372" */,

    config input SC_PMA_CH3_REG_EI_PCLK_DELAY_SEL_375_374[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_EI_PCLK_DELAY_SEL_375_374[1],SC_PMA_CH3_REG_EI_PCLK_DELAY_SEL_375_374[0]" */,

    config input SC_PMA_CH3_REG_TX_DRV01_DAC0_382_377[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_DRV01_DAC0_382_377[5],SC_PMA_CH3_REG_TX_DRV01_DAC0_382_377[4],SC_PMA_CH3_REG_TX_DRV01_DAC0_382_377[3],SC_PMA_CH3_REG_TX_DRV01_DAC0_382_377[2],SC_PMA_CH3_REG_TX_DRV01_DAC0_382_377[1],SC_PMA_CH3_REG_TX_DRV01_DAC0_382_377[0]" */,

    config input SC_PMA_CH3_REG_TX_DRV01_DAC1_388_383[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_DRV01_DAC1_388_383[5],SC_PMA_CH3_REG_TX_DRV01_DAC1_388_383[4],SC_PMA_CH3_REG_TX_DRV01_DAC1_388_383[3],SC_PMA_CH3_REG_TX_DRV01_DAC1_388_383[2],SC_PMA_CH3_REG_TX_DRV01_DAC1_388_383[1],SC_PMA_CH3_REG_TX_DRV01_DAC1_388_383[0]" */,

    config input SC_PMA_CH3_REG_TX_DRV01_DAC2_394_389[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_DRV01_DAC2_394_389[5],SC_PMA_CH3_REG_TX_DRV01_DAC2_394_389[4],SC_PMA_CH3_REG_TX_DRV01_DAC2_394_389[3],SC_PMA_CH3_REG_TX_DRV01_DAC2_394_389[2],SC_PMA_CH3_REG_TX_DRV01_DAC2_394_389[1],SC_PMA_CH3_REG_TX_DRV01_DAC2_394_389[0]" */,

    config input SC_PMA_CH3_REG_TX_DRV00_DAC0_400_395[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_DRV00_DAC0_400_395[5],SC_PMA_CH3_REG_TX_DRV00_DAC0_400_395[4],SC_PMA_CH3_REG_TX_DRV00_DAC0_400_395[3],SC_PMA_CH3_REG_TX_DRV00_DAC0_400_395[2],SC_PMA_CH3_REG_TX_DRV00_DAC0_400_395[1],SC_PMA_CH3_REG_TX_DRV00_DAC0_400_395[0]" */,

    config input SC_PMA_CH3_REG_TX_DRV00_DAC1_406_401[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_DRV00_DAC1_406_401[5],SC_PMA_CH3_REG_TX_DRV00_DAC1_406_401[4],SC_PMA_CH3_REG_TX_DRV00_DAC1_406_401[3],SC_PMA_CH3_REG_TX_DRV00_DAC1_406_401[2],SC_PMA_CH3_REG_TX_DRV00_DAC1_406_401[1],SC_PMA_CH3_REG_TX_DRV00_DAC1_406_401[0]" */,

    config input SC_PMA_CH3_REG_TX_DRV00_DAC2_412_407[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_DRV00_DAC2_412_407[5],SC_PMA_CH3_REG_TX_DRV00_DAC2_412_407[4],SC_PMA_CH3_REG_TX_DRV00_DAC2_412_407[3],SC_PMA_CH3_REG_TX_DRV00_DAC2_412_407[2],SC_PMA_CH3_REG_TX_DRV00_DAC2_412_407[1],SC_PMA_CH3_REG_TX_DRV00_DAC2_412_407[0]" */,

    config input SC_PMA_CH3_REG_TX_AMP0_418_413[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_AMP0_418_413[5],SC_PMA_CH3_REG_TX_AMP0_418_413[4],SC_PMA_CH3_REG_TX_AMP0_418_413[3],SC_PMA_CH3_REG_TX_AMP0_418_413[2],SC_PMA_CH3_REG_TX_AMP0_418_413[1],SC_PMA_CH3_REG_TX_AMP0_418_413[0]" */,

    config input SC_PMA_CH3_REG_TX_AMP1_424_419[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_AMP1_424_419[5],SC_PMA_CH3_REG_TX_AMP1_424_419[4],SC_PMA_CH3_REG_TX_AMP1_424_419[3],SC_PMA_CH3_REG_TX_AMP1_424_419[2],SC_PMA_CH3_REG_TX_AMP1_424_419[1],SC_PMA_CH3_REG_TX_AMP1_424_419[0]" */,

    config input SC_PMA_CH3_REG_TX_AMP2_430_425[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_AMP2_430_425[5],SC_PMA_CH3_REG_TX_AMP2_430_425[4],SC_PMA_CH3_REG_TX_AMP2_430_425[3],SC_PMA_CH3_REG_TX_AMP2_430_425[2],SC_PMA_CH3_REG_TX_AMP2_430_425[1],SC_PMA_CH3_REG_TX_AMP2_430_425[0]" */,

    config input SC_PMA_CH3_REG_TX_AMP3_436_431[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_AMP3_436_431[5],SC_PMA_CH3_REG_TX_AMP3_436_431[4],SC_PMA_CH3_REG_TX_AMP3_436_431[3],SC_PMA_CH3_REG_TX_AMP3_436_431[2],SC_PMA_CH3_REG_TX_AMP3_436_431[1],SC_PMA_CH3_REG_TX_AMP3_436_431[0]" */,

    config input SC_PMA_CH3_REG_TX_AMP4_442_437[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_AMP4_442_437[5],SC_PMA_CH3_REG_TX_AMP4_442_437[4],SC_PMA_CH3_REG_TX_AMP4_442_437[3],SC_PMA_CH3_REG_TX_AMP4_442_437[2],SC_PMA_CH3_REG_TX_AMP4_442_437[1],SC_PMA_CH3_REG_TX_AMP4_442_437[0]" */,

    config input SC_PMA_CH3_REG_TX_MARGIN_445_443[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_MARGIN_445_443[2],SC_PMA_CH3_REG_TX_MARGIN_445_443[1],SC_PMA_CH3_REG_TX_MARGIN_445_443[0]" */,

    config input SC_PMA_CH3_REG_TX_MARGIN_OW_446 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_MARGIN_OW_446" */,

    config input SC_PMA_CH3_REG_TX_DEEMP_448_447[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_DEEMP_448_447[1],SC_PMA_CH3_REG_TX_DEEMP_448_447[0]" */,

    config input SC_PMA_CH3_REG_TX_DEEMP_OW_449 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_DEEMP_OW_449" */,

    config input SC_PMA_CH3_REG_TX_SWING_450 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_SWING_450" */,

    config input SC_PMA_CH3_REG_TX_SWING_OW_451 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_SWING_OW_451" */,

    config input SC_PMA_CH3_REG_TX_RXDET_THRESHOLD_454_453[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_RXDET_THRESHOLD_454_453[1],SC_PMA_CH3_REG_TX_RXDET_THRESHOLD_454_453[0]" */,

    config input SC_PMA_CH3_REG_TX_BEACON_OSC_CTRL_457_455[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_BEACON_OSC_CTRL_457_455[2],SC_PMA_CH3_REG_TX_BEACON_OSC_CTRL_457_455[1],SC_PMA_CH3_REG_TX_BEACON_OSC_CTRL_457_455[0]" */,

    config input SC_PMA_CH3_REG_TX_PREDRV_DAC_459_458[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PREDRV_DAC_459_458[1],SC_PMA_CH3_REG_TX_PREDRV_DAC_459_458[0]" */,

    config input SC_PMA_CH3_REG_TX_PREDRV_CM_CTRL_461_460[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PREDRV_CM_CTRL_461_460[1],SC_PMA_CH3_REG_TX_PREDRV_CM_CTRL_461_460[0]" */,

    config input SC_PMA_CH3_REG_TX_TX2RX_SLPBACK_EN_462 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_TX2RX_SLPBACK_EN_462" */,

    config input SC_PMA_CH3_REG_TX_PCLK_EDGE_SEL_463 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PCLK_EDGE_SEL_463" */,

    config input SC_PMA_CH3_REG_TX_RXDET_STATUS_OW_464 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_RXDET_STATUS_OW_464" */,

    config input SC_PMA_CH3_REG_TX_RXDET_STATUS_465 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_RXDET_STATUS_465" */,

    config input SC_PMA_CH3_REG_TX_PRBS_GEN_EN_466 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PRBS_GEN_EN_466" */,

    config input SC_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL_468_467[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL_468_467[1],SC_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL_468_467[0]" */,

    config input SC_PMA_CH3_REG_TX_PRBS_SEL_470_469[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PRBS_SEL_470_469[1],SC_PMA_CH3_REG_TX_PRBS_SEL_470_469[0]" */,

    config input SC_PMA_CH3_REG_TX_UDP_DATA_490_471[19:0] = 20'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_UDP_DATA_490_471[19],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[18],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[17],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[16],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[15],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[14],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[13],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[12],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[11],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[10],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[9],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[8],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[7],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[6],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[5],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[4],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[3],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[2],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[1],SC_PMA_CH3_REG_TX_UDP_DATA_490_471[0]" */,

    config input SC_PMA_CH3_REG_TX_FIFO_RST_N_491 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_FIFO_RST_N_491" */,

    config input SC_PMA_CH3_REG_TX_FIFO_WP_CTRL_494_492[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_FIFO_WP_CTRL_494_492[2],SC_PMA_CH3_REG_TX_FIFO_WP_CTRL_494_492[1],SC_PMA_CH3_REG_TX_FIFO_WP_CTRL_494_492[0]" */,

    config input SC_PMA_CH3_REG_TX_FIFO_EN_495 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_FIFO_EN_495" */,

    config input SC_PMA_CH3_REG_TX_DATA_MUX_SEL_497_496[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_DATA_MUX_SEL_497_496[1],SC_PMA_CH3_REG_TX_DATA_MUX_SEL_497_496[0]" */,

    config input SC_PMA_CH3_REG_TX_ERR_INSERT_498 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_ERR_INSERT_498" */,

    config input SC_PMA_CH3_REG_TX_SATA_EN_504 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_SATA_EN_504" */,

    config input SC_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_OW_507 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_OW_507" */,

    config input SC_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_508 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_508" */,

    config input SC_PMA_CH3_REG_TX_PULLUP_DAC0_513_509[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PULLUP_DAC0_513_509[4],SC_PMA_CH3_REG_TX_PULLUP_DAC0_513_509[3],SC_PMA_CH3_REG_TX_PULLUP_DAC0_513_509[2],SC_PMA_CH3_REG_TX_PULLUP_DAC0_513_509[1],SC_PMA_CH3_REG_TX_PULLUP_DAC0_513_509[0]" */,

    config input SC_PMA_CH3_REG_TX_PULLUP_DAC1_518_514[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PULLUP_DAC1_518_514[4],SC_PMA_CH3_REG_TX_PULLUP_DAC1_518_514[3],SC_PMA_CH3_REG_TX_PULLUP_DAC1_518_514[2],SC_PMA_CH3_REG_TX_PULLUP_DAC1_518_514[1],SC_PMA_CH3_REG_TX_PULLUP_DAC1_518_514[0]" */,

    config input SC_PMA_CH3_REG_TX_PULLUP_DAC2_523_519[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PULLUP_DAC2_523_519[4],SC_PMA_CH3_REG_TX_PULLUP_DAC2_523_519[3],SC_PMA_CH3_REG_TX_PULLUP_DAC2_523_519[2],SC_PMA_CH3_REG_TX_PULLUP_DAC2_523_519[1],SC_PMA_CH3_REG_TX_PULLUP_DAC2_523_519[0]" */,

    config input SC_PMA_CH3_REG_TX_PULLUP_DAC3_528_524[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_PULLUP_DAC3_528_524[4],SC_PMA_CH3_REG_TX_PULLUP_DAC3_528_524[3],SC_PMA_CH3_REG_TX_PULLUP_DAC3_528_524[2],SC_PMA_CH3_REG_TX_PULLUP_DAC3_528_524[1],SC_PMA_CH3_REG_TX_PULLUP_DAC3_528_524[0]" */,

    config input SC_PMA_CH3_REG_TX_OOB_DELAY_SEL_532_529[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_OOB_DELAY_SEL_532_529[3],SC_PMA_CH3_REG_TX_OOB_DELAY_SEL_532_529[2],SC_PMA_CH3_REG_TX_OOB_DELAY_SEL_532_529[1],SC_PMA_CH3_REG_TX_OOB_DELAY_SEL_532_529[0]" */,

    config input SC_PMA_CH3_REG_TX_POLARITY_533 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_POLARITY_533" */,

    config input SC_PMA_CH3_REG_TX_SLPBK_AMP_535_534[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_SLPBK_AMP_535_534[1],SC_PMA_CH3_REG_TX_SLPBK_AMP_535_534[0]" */,

    config input SC_PMA_CH3_REG_TX_LS_MODE_EN_536 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_LS_MODE_EN_536" */,

    config input SC_PMA_CH3_REG_TX_JTAG_MODE_EN_OW_537 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_JTAG_MODE_EN_OW_537" */,

    config input SC_PMA_CH3_REG_TX_JTAG_MODE_EN_538 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_JTAG_MODE_EN_538" */,

    config input SC_PMA_CH3_REG_RX_JTAG_MODE_EN_OW_539 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_JTAG_MODE_EN_OW_539" */,

    config input SC_PMA_CH3_REG_RX_JTAG_MODE_EN_540 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_JTAG_MODE_EN_540" */,

    config input SC_PMA_CH3_REG_RX_JTAG_OE_541 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_JTAG_OE_541" */,

    config input SC_PMA_CH3_REG_RX_ACJTAG_VHYSTSE_544_542[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_ACJTAG_VHYSTSE_544_542[2],SC_PMA_CH3_REG_RX_ACJTAG_VHYSTSE_544_542[1],SC_PMA_CH3_REG_RX_ACJTAG_VHYSTSE_544_542[0]" */,

    config input SC_PMA_CH3_REG_TX_FBCLK_FAR_EN_545 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_FBCLK_FAR_EN_545" */,

    config input SC_PMA_CH3_REG_RX_TERM_MODE_CTRL_548_546[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_TERM_MODE_CTRL_548_546[2],SC_PMA_CH3_REG_RX_TERM_MODE_CTRL_548_546[1],SC_PMA_CH3_REG_RX_TERM_MODE_CTRL_548_546[0]" */,

    config input SC_PMA_CH3_REG_PLPBK_TXPCLK_EN_551 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_PLPBK_TXPCLK_EN_551" */,

    config input SC_PMA_CH3_REG_TX_609_600[9:0] = 10'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_TX_609_600[9],SC_PMA_CH3_REG_TX_609_600[8],SC_PMA_CH3_REG_TX_609_600[7],SC_PMA_CH3_REG_TX_609_600[6],SC_PMA_CH3_REG_TX_609_600[5],SC_PMA_CH3_REG_TX_609_600[4],SC_PMA_CH3_REG_TX_609_600[3],SC_PMA_CH3_REG_TX_609_600[2],SC_PMA_CH3_REG_TX_609_600[1],SC_PMA_CH3_REG_TX_609_600[0]" */,

    config input SC_PMA_CH3_REG_RX_CDR_617_610[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_CDR_617_610[7],SC_PMA_CH3_REG_RX_CDR_617_610[6],SC_PMA_CH3_REG_RX_CDR_617_610[5],SC_PMA_CH3_REG_RX_CDR_617_610[4],SC_PMA_CH3_REG_RX_CDR_617_610[3],SC_PMA_CH3_REG_RX_CDR_617_610[2],SC_PMA_CH3_REG_RX_CDR_617_610[1],SC_PMA_CH3_REG_RX_CDR_617_610[0]" */,

    config input SC_PMA_CH3_REG_RX_CDR_623_618[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_CDR_623_618[5],SC_PMA_CH3_REG_RX_CDR_623_618[4],SC_PMA_CH3_REG_RX_CDR_623_618[3],SC_PMA_CH3_REG_RX_CDR_623_618[2],SC_PMA_CH3_REG_RX_CDR_623_618[1],SC_PMA_CH3_REG_RX_CDR_623_618[0]" */,

    config input SC_PMA_CH3_REG_RX_631_624[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_631_624[7],SC_PMA_CH3_REG_RX_631_624[6],SC_PMA_CH3_REG_RX_631_624[5],SC_PMA_CH3_REG_RX_631_624[4],SC_PMA_CH3_REG_RX_631_624[3],SC_PMA_CH3_REG_RX_631_624[2],SC_PMA_CH3_REG_RX_631_624[1],SC_PMA_CH3_REG_RX_631_624[0]" */,

    config input SC_PMA_CH3_REG_RX_639_632[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_639_632[7],SC_PMA_CH3_REG_RX_639_632[6],SC_PMA_CH3_REG_RX_639_632[5],SC_PMA_CH3_REG_RX_639_632[4],SC_PMA_CH3_REG_RX_639_632[3],SC_PMA_CH3_REG_RX_639_632[2],SC_PMA_CH3_REG_RX_639_632[1],SC_PMA_CH3_REG_RX_639_632[0]" */,

    config input SC_PMA_CH3_REG_RX_647_640[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_647_640[7],SC_PMA_CH3_REG_RX_647_640[6],SC_PMA_CH3_REG_RX_647_640[5],SC_PMA_CH3_REG_RX_647_640[4],SC_PMA_CH3_REG_RX_647_640[3],SC_PMA_CH3_REG_RX_647_640[2],SC_PMA_CH3_REG_RX_647_640[1],SC_PMA_CH3_REG_RX_647_640[0]" */,

    config input SC_PMA_CH3_REG_RX_655_648[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_655_648[7],SC_PMA_CH3_REG_RX_655_648[6],SC_PMA_CH3_REG_RX_655_648[5],SC_PMA_CH3_REG_RX_655_648[4],SC_PMA_CH3_REG_RX_655_648[3],SC_PMA_CH3_REG_RX_655_648[2],SC_PMA_CH3_REG_RX_655_648[1],SC_PMA_CH3_REG_RX_655_648[0]" */,

    config input SC_PMA_CH3_REG_RX_659_656[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RX_659_656[3],SC_PMA_CH3_REG_RX_659_656[2],SC_PMA_CH3_REG_RX_659_656[1],SC_PMA_CH3_REG_RX_659_656[0]" */,

    config input SC_PMA_CH3_CFG_LANE_POWERUP_660 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_CFG_LANE_POWERUP_660" */,

    config input SC_PMA_CH3_CFG_PMA_POR_N_661 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_CFG_PMA_POR_N_661" */,

    config input SC_PMA_CH3_CFG_RX_LANE_POWERUP_662 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_CFG_RX_LANE_POWERUP_662" */,

    config input SC_PMA_CH3_CFG_RX_PMA_RSTN_663 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_CFG_RX_PMA_RSTN_663" */,

    config input SC_PMA_CH3_CFG_TX_LANE_POWERUP_664 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_CFG_TX_LANE_POWERUP_664" */,

    config input SC_PMA_CH3_CFG_TX_PMA_RSTN_665 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_CFG_TX_PMA_RSTN_665" */,

    config input SC_PMA_CH3_CFG_CTLE_ADP_RSTN_666 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_CFG_CTLE_ADP_RSTN_666" */,

    config input SC_PMA_CH3_REG_RESERVED_48_45[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_48_45[3],SC_PMA_CH3_REG_RESERVED_48_45[2],SC_PMA_CH3_REG_RESERVED_48_45[1],SC_PMA_CH3_REG_RESERVED_48_45[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_69 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_69" */,

    config input SC_PMA_CH3_REG_RESERVED_77_76[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_77_76[1],SC_PMA_CH3_REG_RESERVED_77_76[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_171_164[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_171_164[7],SC_PMA_CH3_REG_RESERVED_171_164[6],SC_PMA_CH3_REG_RESERVED_171_164[5],SC_PMA_CH3_REG_RESERVED_171_164[4],SC_PMA_CH3_REG_RESERVED_171_164[3],SC_PMA_CH3_REG_RESERVED_171_164[2],SC_PMA_CH3_REG_RESERVED_171_164[1],SC_PMA_CH3_REG_RESERVED_171_164[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_175_172[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_175_172[3],SC_PMA_CH3_REG_RESERVED_175_172[2],SC_PMA_CH3_REG_RESERVED_175_172[1],SC_PMA_CH3_REG_RESERVED_175_172[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_190 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_190" */,

    config input SC_PMA_CH3_REG_RESERVED_233_232[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_233_232[1],SC_PMA_CH3_REG_RESERVED_233_232[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_235_234[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_235_234[1],SC_PMA_CH3_REG_RESERVED_235_234[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_241_240[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_241_240[1],SC_PMA_CH3_REG_RESERVED_241_240[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_285_283[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_285_283[2],SC_PMA_CH3_REG_RESERVED_285_283[1],SC_PMA_CH3_REG_RESERVED_285_283[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_286 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_286" */,

    config input SC_PMA_CH3_REG_RESERVED_295 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_295" */,

    config input SC_PMA_CH3_REG_RESERVED_298 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_298" */,

    config input SC_PMA_CH3_REG_RESERVED_332_325[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_332_325[7],SC_PMA_CH3_REG_RESERVED_332_325[6],SC_PMA_CH3_REG_RESERVED_332_325[5],SC_PMA_CH3_REG_RESERVED_332_325[4],SC_PMA_CH3_REG_RESERVED_332_325[3],SC_PMA_CH3_REG_RESERVED_332_325[2],SC_PMA_CH3_REG_RESERVED_332_325[1],SC_PMA_CH3_REG_RESERVED_332_325[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_340_333[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_340_333[7],SC_PMA_CH3_REG_RESERVED_340_333[6],SC_PMA_CH3_REG_RESERVED_340_333[5],SC_PMA_CH3_REG_RESERVED_340_333[4],SC_PMA_CH3_REG_RESERVED_340_333[3],SC_PMA_CH3_REG_RESERVED_340_333[2],SC_PMA_CH3_REG_RESERVED_340_333[1],SC_PMA_CH3_REG_RESERVED_340_333[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_348_341[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_348_341[7],SC_PMA_CH3_REG_RESERVED_348_341[6],SC_PMA_CH3_REG_RESERVED_348_341[5],SC_PMA_CH3_REG_RESERVED_348_341[4],SC_PMA_CH3_REG_RESERVED_348_341[3],SC_PMA_CH3_REG_RESERVED_348_341[2],SC_PMA_CH3_REG_RESERVED_348_341[1],SC_PMA_CH3_REG_RESERVED_348_341[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_354_349[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_354_349[5],SC_PMA_CH3_REG_RESERVED_354_349[4],SC_PMA_CH3_REG_RESERVED_354_349[3],SC_PMA_CH3_REG_RESERVED_354_349[2],SC_PMA_CH3_REG_RESERVED_354_349[1],SC_PMA_CH3_REG_RESERVED_354_349[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_373 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_373" */,

    config input SC_PMA_CH3_REG_RESERVED_376 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_376" */,

    config input SC_PMA_CH3_REG_RESERVED_452 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_452" */,

    config input SC_PMA_CH3_REG_RESERVED_502_499[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_502_499[3],SC_PMA_CH3_REG_RESERVED_502_499[2],SC_PMA_CH3_REG_RESERVED_502_499[1],SC_PMA_CH3_REG_RESERVED_502_499[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_506_505[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_506_505[1],SC_PMA_CH3_REG_RESERVED_506_505[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_550_549[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_550_549[1],SC_PMA_CH3_REG_RESERVED_550_549[0]" */,

    config input SC_PMA_CH3_REG_RESERVED_556_552[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH3_REG_RESERVED_556_552[4],SC_PMA_CH3_REG_RESERVED_556_552[3],SC_PMA_CH3_REG_RESERVED_556_552[2],SC_PMA_CH3_REG_RESERVED_556_552[1],SC_PMA_CH3_REG_RESERVED_556_552[0]" */,

    config input SC_PMA_PLL0_REG_PLL_POWERDOWN_OW_0 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_POWERDOWN_OW_0" */,

    config input SC_PMA_PLL0_REG_PLL_POWERDOWN_1 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_POWERDOWN_1" */,

    config input SC_PMA_PLL0_REG_PLL_RESET_N_OW_2 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_RESET_N_OW_2" */,

    config input SC_PMA_PLL0_REG_PLL_RESET_N_3 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_RESET_N_3" */,

    config input SC_PMA_PLL0_REG_PLL_READY_OW_4 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_READY_OW_4" */,

    config input SC_PMA_PLL0_REG_PLL_READY_5 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_READY_5" */,

    config input SC_PMA_PLL0_REG_LANE_SYNC_OW_6 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_LANE_SYNC_OW_6" */,

    config input SC_PMA_PLL0_REG_LANE_SYNC_7 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_LANE_SYNC_7" */,

    config input SC_PMA_PLL0_REG_LOCKDET_REPEAT_8 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_LOCKDET_REPEAT_8" */,

    config input SC_PMA_PLL0_REG_RESCAL_I_CODE_PMA_9 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_I_CODE_PMA_9" */,

    config input SC_PMA_PLL0_REG_RESCAL_RESET_N_OW_10 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_RESET_N_OW_10" */,

    config input SC_PMA_PLL0_REG_RESCAL_RESET_N_11 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_RESET_N_11" */,

    config input SC_PMA_PLL0_REG_RESCAL_DONE_OW_12 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_DONE_OW_12" */,

    config input SC_PMA_PLL0_REG_RESCAL_DONE_13 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_DONE_13" */,

    config input SC_PMA_PLL0_REG_RESCAL_CODE_OW_14 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_CODE_OW_14" */,

    config input SC_PMA_PLL0_REG_LDO_VREF_SEL_16_15[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_LDO_VREF_SEL_16_15[1],SC_PMA_PLL0_REG_LDO_VREF_SEL_16_15[0]" */,

    config input SC_PMA_PLL0_REG_BIAS_VCOREP_C_18_17[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_BIAS_VCOREP_C_18_17[1],SC_PMA_PLL0_REG_BIAS_VCOREP_C_18_17[0]" */,

    config input SC_PMA_PLL0_REG_RESCAL_I_CODE_24_19[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_I_CODE_24_19[5],SC_PMA_PLL0_REG_RESCAL_I_CODE_24_19[4],SC_PMA_PLL0_REG_RESCAL_I_CODE_24_19[3],SC_PMA_PLL0_REG_RESCAL_I_CODE_24_19[2],SC_PMA_PLL0_REG_RESCAL_I_CODE_24_19[1],SC_PMA_PLL0_REG_RESCAL_I_CODE_24_19[0]" */,

    config input SC_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_OW_25 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_OW_25" */,

    config input SC_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_26 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_26" */,

    config input SC_PMA_PLL0_REG_JTAG_OE_27 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_JTAG_OE_27" */,

    config input SC_PMA_PLL0_REG_JTAG_AC_MODE_28 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_JTAG_AC_MODE_28" */,

    config input SC_PMA_PLL0_REG_JTAG_VHYSTSEL_31_29[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_JTAG_VHYSTSEL_31_29[2],SC_PMA_PLL0_REG_JTAG_VHYSTSEL_31_29[1],SC_PMA_PLL0_REG_JTAG_VHYSTSEL_31_29[0]" */,

    config input SC_PMA_PLL0_REG_PLL_LOCKDET_EN_OW_32 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_LOCKDET_EN_OW_32" */,

    config input SC_PMA_PLL0_REG_PLL_LOCKDET_EN_33 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_LOCKDET_EN_33" */,

    config input SC_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_OW_34 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_OW_34" */,

    config input SC_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_35 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_35" */,

    config input SC_PMA_PLL0_REG_PLL_LOCKED_OW_36 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_LOCKED_OW_36" */,

    config input SC_PMA_PLL0_REG_PLL_LOCKED_37 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_LOCKED_37" */,

    config input SC_PMA_PLL0_REG_PLL_LOCKED_STICKY_CLEAR_38 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_LOCKED_STICKY_CLEAR_38" */,

    config input SC_PMA_PLL0_REG_PLL_UNLOCKED_STICKY_CLEAR_39 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_UNLOCKED_STICKY_CLEAR_39" */,

    config input SC_PMA_PLL0_REG_NOFBCLK_STICKY_CLEAR_40 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_NOFBCLK_STICKY_CLEAR_40" */,

    config input SC_PMA_PLL0_REG_PLL_LOCKDET_REFCT_43_41[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_LOCKDET_REFCT_43_41[2],SC_PMA_PLL0_REG_PLL_LOCKDET_REFCT_43_41[1],SC_PMA_PLL0_REG_PLL_LOCKDET_REFCT_43_41[0]" */,

    config input SC_PMA_PLL0_REG_PLL_LOCKDET_FBCT_46_44[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_LOCKDET_FBCT_46_44[2],SC_PMA_PLL0_REG_PLL_LOCKDET_FBCT_46_44[1],SC_PMA_PLL0_REG_PLL_LOCKDET_FBCT_46_44[0]" */,

    config input SC_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT_49_47[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT_49_47[2],SC_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT_49_47[1],SC_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT_49_47[0]" */,

    config input SC_PMA_PLL0_REG_PLL_LOCKDET_ITER_52_50[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_LOCKDET_ITER_52_50[2],SC_PMA_PLL0_REG_PLL_LOCKDET_ITER_52_50[1],SC_PMA_PLL0_REG_PLL_LOCKDET_ITER_52_50[0]" */,

    config input SC_PMA_PLL0_REG_PLL_UNLOCKDET_ITER_54_53[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_UNLOCKDET_ITER_54_53[1],SC_PMA_PLL0_REG_PLL_UNLOCKDET_ITER_54_53[0]" */,

    config input SC_PMA_PLL0_REG_PD_VCO_55 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PD_VCO_55" */,

    config input SC_PMA_PLL0_REG_FBCLK_TEST_EN_56 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_FBCLK_TEST_EN_56" */,

    config input SC_PMA_PLL0_REG_REFCLK_TEST_EN_57 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_REFCLK_TEST_EN_57" */,

    config input SC_PMA_PLL0_REG_TEST_SEL_62_58[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_TEST_SEL_62_58[4],SC_PMA_PLL0_REG_TEST_SEL_62_58[3],SC_PMA_PLL0_REG_TEST_SEL_62_58[2],SC_PMA_PLL0_REG_TEST_SEL_62_58[1],SC_PMA_PLL0_REG_TEST_SEL_62_58[0]" */,

    config input SC_PMA_PLL0_REG_TEST_V_EN_63 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_TEST_V_EN_63" */,

    config input SC_PMA_PLL0_REG_TEST_SIG_HALF_EN_64 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_TEST_SIG_HALF_EN_64" */,

    config input SC_PMA_PLL0_REG_TEST_FSM_66_65[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_TEST_FSM_66_65[1],SC_PMA_PLL0_REG_TEST_FSM_66_65[0]" */,

    config input SC_PMA_PLL0_REG_REFCLK_OUT_PD_67 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_REFCLK_OUT_PD_67" */,

    config input SC_PMA_PLL0_REG_BGR_STARTUP_EN_68 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_BGR_STARTUP_EN_68" */,

    config input SC_PMA_PLL0_REG_BGR_STARTUP_69 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_BGR_STARTUP_69" */,

    config input SC_PMA_PLL0_REG_PD_BGR_70 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PD_BGR_70" */,

    config input SC_PMA_PLL0_REG_REFCLK_TERM_VCM_EN_71 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_REFCLK_TERM_VCM_EN_71" */,

    config input SC_PMA_PLL0_REG_FBDIVA_5_EN_72 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_FBDIVA_5_EN_72" */,

    config input SC_PMA_PLL0_REG_FBDIVB_74_73[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_FBDIVB_74_73[1],SC_PMA_PLL0_REG_FBDIVB_74_73[0]" */,

    config input SC_PMA_PLL0_REG_RESET_N_PFDQP_OW_75 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESET_N_PFDQP_OW_75" */,

    config input SC_PMA_PLL0_REG_RESET_N_PFDQP_76 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESET_N_PFDQP_76" */,

    config input SC_PMA_PLL0_REG_QPCURRENT_80_77[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_QPCURRENT_80_77[3],SC_PMA_PLL0_REG_QPCURRENT_80_77[2],SC_PMA_PLL0_REG_QPCURRENT_80_77[1],SC_PMA_PLL0_REG_QPCURRENT_80_77[0]" */,

    config input SC_PMA_PLL0_REG_VC_FORCE_EN_81 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_VC_FORCE_EN_81" */,

    config input SC_PMA_PLL0_REG_VCRESET_C_RING_86_82[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_VCRESET_C_RING_86_82[4],SC_PMA_PLL0_REG_VCRESET_C_RING_86_82[3],SC_PMA_PLL0_REG_VCRESET_C_RING_86_82[2],SC_PMA_PLL0_REG_VCRESET_C_RING_86_82[1],SC_PMA_PLL0_REG_VCRESET_C_RING_86_82[0]" */,

    config input SC_PMA_PLL0_REG_LPF_R_C_90_87[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_LPF_R_C_90_87[3],SC_PMA_PLL0_REG_LPF_R_C_90_87[2],SC_PMA_PLL0_REG_LPF_R_C_90_87[1],SC_PMA_PLL0_REG_LPF_R_C_90_87[0]" */,

    config input SC_PMA_PLL0_REG_LPF_TR_C_94_91[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_LPF_TR_C_94_91[3],SC_PMA_PLL0_REG_LPF_TR_C_94_91[2],SC_PMA_PLL0_REG_LPF_TR_C_94_91[1],SC_PMA_PLL0_REG_LPF_TR_C_94_91[0]" */,

    config input SC_PMA_PLL0_REG_PD_BIAS_95 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PD_BIAS_95" */,

    config input SC_PMA_PLL0_REG_ICTRL_PLL_97_96[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_ICTRL_PLL_97_96[1],SC_PMA_PLL0_REG_ICTRL_PLL_97_96[0]" */,

    config input SC_PMA_PLL0_REG_BIAS_QP_99_98[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_BIAS_QP_99_98[1],SC_PMA_PLL0_REG_BIAS_QP_99_98[0]" */,

    config input SC_PMA_PLL0_REG_BIAS_LANE_SYNC_101_100[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_BIAS_LANE_SYNC_101_100[1],SC_PMA_PLL0_REG_BIAS_LANE_SYNC_101_100[0]" */,

    config input SC_PMA_PLL0_REG_BIAS_CLKBUFS1_103_102[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_BIAS_CLKBUFS1_103_102[1],SC_PMA_PLL0_REG_BIAS_CLKBUFS1_103_102[0]" */,

    config input SC_PMA_PLL0_REG_BIAS_CLKBUFS2_105_104[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_BIAS_CLKBUFS2_105_104[1],SC_PMA_PLL0_REG_BIAS_CLKBUFS2_105_104[0]" */,

    config input SC_PMA_PLL0_REG_BIAS_CLKBUFS3_107_106[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_BIAS_CLKBUFS3_107_106[1],SC_PMA_PLL0_REG_BIAS_CLKBUFS3_107_106[0]" */,

    config input SC_PMA_PLL0_REG_BIAS_CLKBUFS4_109_108[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_BIAS_CLKBUFS4_109_108[1],SC_PMA_PLL0_REG_BIAS_CLKBUFS4_109_108[0]" */,

    config input SC_PMA_PLL0_REG_BIAS_D2S_111_110[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_BIAS_D2S_111_110[1],SC_PMA_PLL0_REG_BIAS_D2S_111_110[0]" */,

    config input SC_PMA_PLL0_REG_BIAS_REFD2S_C_113_112[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_BIAS_REFD2S_C_113_112[1],SC_PMA_PLL0_REG_BIAS_REFD2S_C_113_112[0]" */,

    config input SC_PMA_PLL0_REG_BIAS_VCRST_C_115_114[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_BIAS_VCRST_C_115_114[1],SC_PMA_PLL0_REG_BIAS_VCRST_C_115_114[0]" */,

    config input SC_PMA_PLL0_REG_BIAS_REFBUF_C_117_116[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_BIAS_REFBUF_C_117_116[1],SC_PMA_PLL0_REG_BIAS_REFBUF_C_117_116[0]" */,

    config input SC_PMA_PLL0_REG_CLKBUFS1_C_119_118[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_CLKBUFS1_C_119_118[1],SC_PMA_PLL0_REG_CLKBUFS1_C_119_118[0]" */,

    config input SC_PMA_PLL0_REG_CLKBUFS2_C_122_120[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_CLKBUFS2_C_122_120[2],SC_PMA_PLL0_REG_CLKBUFS2_C_122_120[1],SC_PMA_PLL0_REG_CLKBUFS2_C_122_120[0]" */,

    config input SC_PMA_PLL0_REG_CLKBUFS3_C_125_123[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_CLKBUFS3_C_125_123[2],SC_PMA_PLL0_REG_CLKBUFS3_C_125_123[1],SC_PMA_PLL0_REG_CLKBUFS3_C_125_123[0]" */,

    config input SC_PMA_PLL0_REG_CLKBUFS4_C_127_126[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_CLKBUFS4_C_127_126[1],SC_PMA_PLL0_REG_CLKBUFS4_C_127_126[0]" */,

    config input SC_PMA_PLL0_REG_PLL_REFCLK_CML_SEL_129_128[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_REFCLK_CML_SEL_129_128[1],SC_PMA_PLL0_REG_PLL_REFCLK_CML_SEL_129_128[0]" */,

    config input SC_PMA_PLL0_REG_REFCLK_SEL_130 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_REFCLK_SEL_130" */,

    config input SC_PMA_PLL0_REG_RESCAL_R_CODE_SIGN_131 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_R_CODE_SIGN_131" */,

    config input SC_PMA_PLL0_REG_PLL_UNLOCKED_OW_132 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_UNLOCKED_OW_132" */,

    config input SC_PMA_PLL0_REG_PLL_UNLOCKED_133 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_UNLOCKED_133" */,

    config input SC_PMA_PLL0_REG_PLL_LOCKDET_MODE_134 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_LOCKDET_MODE_134" */,

    config input SC_PMA_PLL0_REG_PLL_CLKBUF_PD_LEFT_135 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_CLKBUF_PD_LEFT_135" */,

    config input SC_PMA_PLL0_REG_PLL_CLKBUF_PD_RIGHT_136 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_PLL_CLKBUF_PD_RIGHT_136" */,

    config input SC_PMA_PLL0_REG_RESCAL_EN_137 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_EN_137" */,

    config input SC_PMA_PLL0_REG_RESCAL_I_CODE_VAL_143_138[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_I_CODE_VAL_143_138[5],SC_PMA_PLL0_REG_RESCAL_I_CODE_VAL_143_138[4],SC_PMA_PLL0_REG_RESCAL_I_CODE_VAL_143_138[3],SC_PMA_PLL0_REG_RESCAL_I_CODE_VAL_143_138[2],SC_PMA_PLL0_REG_RESCAL_I_CODE_VAL_143_138[1],SC_PMA_PLL0_REG_RESCAL_I_CODE_VAL_143_138[0]" */,

    config input SC_PMA_PLL0_REG_RESCAL_I_CODE_OW_144 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_I_CODE_OW_144" */,

    config input SC_PMA_PLL0_REG_RESCAL_ITER_VALID_SEL_146_145[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_ITER_VALID_SEL_146_145[1],SC_PMA_PLL0_REG_RESCAL_ITER_VALID_SEL_146_145[0]" */,

    config input SC_PMA_PLL0_REG_RESCAL_WAIT_SEL_147 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESCAL_WAIT_SEL_147" */,

    config input SC_PMA_PLL0_REG_I_CTRL_MAX_153_148[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_I_CTRL_MAX_153_148[5],SC_PMA_PLL0_REG_I_CTRL_MAX_153_148[4],SC_PMA_PLL0_REG_I_CTRL_MAX_153_148[3],SC_PMA_PLL0_REG_I_CTRL_MAX_153_148[2],SC_PMA_PLL0_REG_I_CTRL_MAX_153_148[1],SC_PMA_PLL0_REG_I_CTRL_MAX_153_148[0]" */,

    config input SC_PMA_PLL0_REG_I_CTRL_MIN_159_154[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_I_CTRL_MIN_159_154[5],SC_PMA_PLL0_REG_I_CTRL_MIN_159_154[4],SC_PMA_PLL0_REG_I_CTRL_MIN_159_154[3],SC_PMA_PLL0_REG_I_CTRL_MIN_159_154[2],SC_PMA_PLL0_REG_I_CTRL_MIN_159_154[1],SC_PMA_PLL0_REG_I_CTRL_MIN_159_154[0]" */,

    config input SC_PMA_PLL0_REG_RESERVED_191_160[31:0] = 32'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL0_REG_RESERVED_191_160[31],SC_PMA_PLL0_REG_RESERVED_191_160[30],SC_PMA_PLL0_REG_RESERVED_191_160[29],SC_PMA_PLL0_REG_RESERVED_191_160[28],SC_PMA_PLL0_REG_RESERVED_191_160[27],SC_PMA_PLL0_REG_RESERVED_191_160[26],SC_PMA_PLL0_REG_RESERVED_191_160[25],SC_PMA_PLL0_REG_RESERVED_191_160[24],SC_PMA_PLL0_REG_RESERVED_191_160[23],SC_PMA_PLL0_REG_RESERVED_191_160[22],SC_PMA_PLL0_REG_RESERVED_191_160[21],SC_PMA_PLL0_REG_RESERVED_191_160[20],SC_PMA_PLL0_REG_RESERVED_191_160[19],SC_PMA_PLL0_REG_RESERVED_191_160[18],SC_PMA_PLL0_REG_RESERVED_191_160[17],SC_PMA_PLL0_REG_RESERVED_191_160[16],SC_PMA_PLL0_REG_RESERVED_191_160[15],SC_PMA_PLL0_REG_RESERVED_191_160[14],SC_PMA_PLL0_REG_RESERVED_191_160[13],SC_PMA_PLL0_REG_RESERVED_191_160[12],SC_PMA_PLL0_REG_RESERVED_191_160[11],SC_PMA_PLL0_REG_RESERVED_191_160[10],SC_PMA_PLL0_REG_RESERVED_191_160[9],SC_PMA_PLL0_REG_RESERVED_191_160[8],SC_PMA_PLL0_REG_RESERVED_191_160[7],SC_PMA_PLL0_REG_RESERVED_191_160[6],SC_PMA_PLL0_REG_RESERVED_191_160[5],SC_PMA_PLL0_REG_RESERVED_191_160[4],SC_PMA_PLL0_REG_RESERVED_191_160[3],SC_PMA_PLL0_REG_RESERVED_191_160[2],SC_PMA_PLL0_REG_RESERVED_191_160[1],SC_PMA_PLL0_REG_RESERVED_191_160[0]" */,

    config input SC_CFG_HSST_RSTN_192 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CFG_HSST_RSTN_192" */,

    config input SC_PLL0_POWERUP_193 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PLL0_POWERUP_193" */,

    config input SC_PLL0_RSTN_194 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PLL0_RSTN_194" */,

    config input SC_PMA_PLL1_REG_PLL_POWERDOWN_OW_0 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_POWERDOWN_OW_0" */,

    config input SC_PMA_PLL1_REG_PLL_POWERDOWN_1 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_POWERDOWN_1" */,

    config input SC_PMA_PLL1_REG_PLL_RESET_N_OW_2 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_RESET_N_OW_2" */,

    config input SC_PMA_PLL1_REG_PLL_RESET_N_3 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_RESET_N_3" */,

    config input SC_PMA_PLL1_REG_PLL_READY_OW_4 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_READY_OW_4" */,

    config input SC_PMA_PLL1_REG_PLL_READY_5 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_READY_5" */,

    config input SC_PMA_PLL1_REG_LANE_SYNC_OW_6 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_LANE_SYNC_OW_6" */,

    config input SC_PMA_PLL1_REG_LANE_SYNC_7 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_LANE_SYNC_7" */,

    config input SC_PMA_PLL1_REG_LOCKDET_REPEAT_8 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_LOCKDET_REPEAT_8" */,

    config input SC_PMA_PLL1_REG_RESCAL_I_CODE_PMA_9 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_I_CODE_PMA_9" */,

    config input SC_PMA_PLL1_REG_RESCAL_RESET_N_OW_10 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_RESET_N_OW_10" */,

    config input SC_PMA_PLL1_REG_RESCAL_RESET_N_11 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_RESET_N_11" */,

    config input SC_PMA_PLL1_REG_RESCAL_DONE_OW_12 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_DONE_OW_12" */,

    config input SC_PMA_PLL1_REG_RESCAL_DONE_13 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_DONE_13" */,

    config input SC_PMA_PLL1_REG_RESCAL_CODE_OW_14 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_CODE_OW_14" */,

    config input SC_PMA_PLL1_REG_LDO_VREF_SEL_16_15[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_LDO_VREF_SEL_16_15[1],SC_PMA_PLL1_REG_LDO_VREF_SEL_16_15[0]" */,

    config input SC_PMA_PLL1_REG_BIAS_VCOREP_C_18_17[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_BIAS_VCOREP_C_18_17[1],SC_PMA_PLL1_REG_BIAS_VCOREP_C_18_17[0]" */,

    config input SC_PMA_PLL1_REG_RESCAL_I_CODE_24_19[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_I_CODE_24_19[5],SC_PMA_PLL1_REG_RESCAL_I_CODE_24_19[4],SC_PMA_PLL1_REG_RESCAL_I_CODE_24_19[3],SC_PMA_PLL1_REG_RESCAL_I_CODE_24_19[2],SC_PMA_PLL1_REG_RESCAL_I_CODE_24_19[1],SC_PMA_PLL1_REG_RESCAL_I_CODE_24_19[0]" */,

    config input SC_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_OW_25 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_OW_25" */,

    config input SC_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_26 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_26" */,

    config input SC_PMA_PLL1_REG_JTAG_OE_27 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_JTAG_OE_27" */,

    config input SC_PMA_PLL1_REG_JTAG_AC_MODE_28 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_JTAG_AC_MODE_28" */,

    config input SC_PMA_PLL1_REG_JTAG_VHYSTSEL_31_29[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_JTAG_VHYSTSEL_31_29[2],SC_PMA_PLL1_REG_JTAG_VHYSTSEL_31_29[1],SC_PMA_PLL1_REG_JTAG_VHYSTSEL_31_29[0]" */,

    config input SC_PMA_PLL1_REG_PLL_LOCKDET_EN_OW_32 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_LOCKDET_EN_OW_32" */,

    config input SC_PMA_PLL1_REG_PLL_LOCKDET_EN_33 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_LOCKDET_EN_33" */,

    config input SC_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_OW_34 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_OW_34" */,

    config input SC_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_35 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_35" */,

    config input SC_PMA_PLL1_REG_PLL_LOCKED_OW_36 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_LOCKED_OW_36" */,

    config input SC_PMA_PLL1_REG_PLL_LOCKED_37 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_LOCKED_37" */,

    config input SC_PMA_PLL1_REG_PLL_LOCKED_STICKY_CLEAR_38 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_LOCKED_STICKY_CLEAR_38" */,

    config input SC_PMA_PLL1_REG_PLL_UNLOCKED_STICKY_CLEAR_39 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_UNLOCKED_STICKY_CLEAR_39" */,

    config input SC_PMA_PLL1_REG_NOFBCLK_STICKY_CLEAR_40 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_NOFBCLK_STICKY_CLEAR_40" */,

    config input SC_PMA_PLL1_REG_PLL_LOCKDET_REFCT_43_41[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_LOCKDET_REFCT_43_41[2],SC_PMA_PLL1_REG_PLL_LOCKDET_REFCT_43_41[1],SC_PMA_PLL1_REG_PLL_LOCKDET_REFCT_43_41[0]" */,

    config input SC_PMA_PLL1_REG_PLL_LOCKDET_FBCT_46_44[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_LOCKDET_FBCT_46_44[2],SC_PMA_PLL1_REG_PLL_LOCKDET_FBCT_46_44[1],SC_PMA_PLL1_REG_PLL_LOCKDET_FBCT_46_44[0]" */,

    config input SC_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT_49_47[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT_49_47[2],SC_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT_49_47[1],SC_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT_49_47[0]" */,

    config input SC_PMA_PLL1_REG_PLL_LOCKDET_ITER_52_50[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_LOCKDET_ITER_52_50[2],SC_PMA_PLL1_REG_PLL_LOCKDET_ITER_52_50[1],SC_PMA_PLL1_REG_PLL_LOCKDET_ITER_52_50[0]" */,

    config input SC_PMA_PLL1_REG_PLL_UNLOCKDET_ITER_54_53[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_UNLOCKDET_ITER_54_53[1],SC_PMA_PLL1_REG_PLL_UNLOCKDET_ITER_54_53[0]" */,

    config input SC_PMA_PLL1_REG_PD_VCO_55 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PD_VCO_55" */,

    config input SC_PMA_PLL1_REG_FBCLK_TEST_EN_56 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_FBCLK_TEST_EN_56" */,

    config input SC_PMA_PLL1_REG_REFCLK_TEST_EN_57 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_REFCLK_TEST_EN_57" */,

    config input SC_PMA_PLL1_REG_TEST_SEL_62_58[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_TEST_SEL_62_58[4],SC_PMA_PLL1_REG_TEST_SEL_62_58[3],SC_PMA_PLL1_REG_TEST_SEL_62_58[2],SC_PMA_PLL1_REG_TEST_SEL_62_58[1],SC_PMA_PLL1_REG_TEST_SEL_62_58[0]" */,

    config input SC_PMA_PLL1_REG_TEST_V_EN_63 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_TEST_V_EN_63" */,

    config input SC_PMA_PLL1_REG_TEST_SIG_HALF_EN_64 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_TEST_SIG_HALF_EN_64" */,

    config input SC_PMA_PLL1_REG_TEST_FSM_66_65[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_TEST_FSM_66_65[1],SC_PMA_PLL1_REG_TEST_FSM_66_65[0]" */,

    config input SC_PMA_PLL1_REG_REFCLK_OUT_PD_67 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_REFCLK_OUT_PD_67" */,

    config input SC_PMA_PLL1_REG_BGR_STARTUP_EN_68 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_BGR_STARTUP_EN_68" */,

    config input SC_PMA_PLL1_REG_BGR_STARTUP_69 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_BGR_STARTUP_69" */,

    config input SC_PMA_PLL1_REG_PD_BGR_70 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PD_BGR_70" */,

    config input SC_PMA_PLL1_REG_REFCLK_TERM_VCM_EN_71 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_REFCLK_TERM_VCM_EN_71" */,

    config input SC_PMA_PLL1_REG_FBDIVA_5_EN_72 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_FBDIVA_5_EN_72" */,

    config input SC_PMA_PLL1_REG_FBDIVB_74_73[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_FBDIVB_74_73[1],SC_PMA_PLL1_REG_FBDIVB_74_73[0]" */,

    config input SC_PMA_PLL1_REG_RESET_N_PFDQP_OW_75 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESET_N_PFDQP_OW_75" */,

    config input SC_PMA_PLL1_REG_RESET_N_PFDQP_76 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESET_N_PFDQP_76" */,

    config input SC_PMA_PLL1_REG_QPCURRENT_80_77[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_QPCURRENT_80_77[3],SC_PMA_PLL1_REG_QPCURRENT_80_77[2],SC_PMA_PLL1_REG_QPCURRENT_80_77[1],SC_PMA_PLL1_REG_QPCURRENT_80_77[0]" */,

    config input SC_PMA_PLL1_REG_VC_FORCE_EN_81 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_VC_FORCE_EN_81" */,

    config input SC_PMA_PLL1_REG_VCRESET_C_RING_86_82[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_VCRESET_C_RING_86_82[4],SC_PMA_PLL1_REG_VCRESET_C_RING_86_82[3],SC_PMA_PLL1_REG_VCRESET_C_RING_86_82[2],SC_PMA_PLL1_REG_VCRESET_C_RING_86_82[1],SC_PMA_PLL1_REG_VCRESET_C_RING_86_82[0]" */,

    config input SC_PMA_PLL1_REG_LPF_R_C_90_87[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_LPF_R_C_90_87[3],SC_PMA_PLL1_REG_LPF_R_C_90_87[2],SC_PMA_PLL1_REG_LPF_R_C_90_87[1],SC_PMA_PLL1_REG_LPF_R_C_90_87[0]" */,

    config input SC_PMA_PLL1_REG_LPF_TR_C_94_91[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_LPF_TR_C_94_91[3],SC_PMA_PLL1_REG_LPF_TR_C_94_91[2],SC_PMA_PLL1_REG_LPF_TR_C_94_91[1],SC_PMA_PLL1_REG_LPF_TR_C_94_91[0]" */,

    config input SC_PMA_PLL1_REG_PD_BIAS_95 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PD_BIAS_95" */,

    config input SC_PMA_PLL1_REG_ICTRL_PLL_97_96[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_ICTRL_PLL_97_96[1],SC_PMA_PLL1_REG_ICTRL_PLL_97_96[0]" */,

    config input SC_PMA_PLL1_REG_BIAS_QP_99_98[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_BIAS_QP_99_98[1],SC_PMA_PLL1_REG_BIAS_QP_99_98[0]" */,

    config input SC_PMA_PLL1_REG_BIAS_LANE_SYNC_101_100[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_BIAS_LANE_SYNC_101_100[1],SC_PMA_PLL1_REG_BIAS_LANE_SYNC_101_100[0]" */,

    config input SC_PMA_PLL1_REG_BIAS_CLKBUFS1_103_102[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_BIAS_CLKBUFS1_103_102[1],SC_PMA_PLL1_REG_BIAS_CLKBUFS1_103_102[0]" */,

    config input SC_PMA_PLL1_REG_BIAS_CLKBUFS2_105_104[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_BIAS_CLKBUFS2_105_104[1],SC_PMA_PLL1_REG_BIAS_CLKBUFS2_105_104[0]" */,

    config input SC_PMA_PLL1_REG_BIAS_CLKBUFS3_107_106[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_BIAS_CLKBUFS3_107_106[1],SC_PMA_PLL1_REG_BIAS_CLKBUFS3_107_106[0]" */,

    config input SC_PMA_PLL1_REG_BIAS_CLKBUFS4_109_108[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_BIAS_CLKBUFS4_109_108[1],SC_PMA_PLL1_REG_BIAS_CLKBUFS4_109_108[0]" */,

    config input SC_PMA_PLL1_REG_BIAS_D2S_111_110[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_BIAS_D2S_111_110[1],SC_PMA_PLL1_REG_BIAS_D2S_111_110[0]" */,

    config input SC_PMA_PLL1_REG_BIAS_REFD2S_C_113_112[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_BIAS_REFD2S_C_113_112[1],SC_PMA_PLL1_REG_BIAS_REFD2S_C_113_112[0]" */,

    config input SC_PMA_PLL1_REG_BIAS_VCRST_C_115_114[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_BIAS_VCRST_C_115_114[1],SC_PMA_PLL1_REG_BIAS_VCRST_C_115_114[0]" */,

    config input SC_PMA_PLL1_REG_BIAS_REFBUF_C_117_116[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_BIAS_REFBUF_C_117_116[1],SC_PMA_PLL1_REG_BIAS_REFBUF_C_117_116[0]" */,

    config input SC_PMA_PLL1_REG_CLKBUFS1_C_119_118[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_CLKBUFS1_C_119_118[1],SC_PMA_PLL1_REG_CLKBUFS1_C_119_118[0]" */,

    config input SC_PMA_PLL1_REG_CLKBUFS2_C_122_120[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_CLKBUFS2_C_122_120[2],SC_PMA_PLL1_REG_CLKBUFS2_C_122_120[1],SC_PMA_PLL1_REG_CLKBUFS2_C_122_120[0]" */,

    config input SC_PMA_PLL1_REG_CLKBUFS3_C_125_123[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_CLKBUFS3_C_125_123[2],SC_PMA_PLL1_REG_CLKBUFS3_C_125_123[1],SC_PMA_PLL1_REG_CLKBUFS3_C_125_123[0]" */,

    config input SC_PMA_PLL1_REG_CLKBUFS4_C_127_126[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_CLKBUFS4_C_127_126[1],SC_PMA_PLL1_REG_CLKBUFS4_C_127_126[0]" */,

    config input SC_PMA_PLL1_REG_PLL_REFCLK_CML_SEL_129_128[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_REFCLK_CML_SEL_129_128[1],SC_PMA_PLL1_REG_PLL_REFCLK_CML_SEL_129_128[0]" */,

    config input SC_PMA_PLL1_REG_REFCLK_SEL_130 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_REFCLK_SEL_130" */,

    config input SC_PMA_PLL1_REG_RESCAL_R_CODE_SIGN_131 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_R_CODE_SIGN_131" */,

    config input SC_PMA_PLL1_REG_PLL_UNLOCKED_OW_132 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_UNLOCKED_OW_132" */,

    config input SC_PMA_PLL1_REG_PLL_UNLOCKED_133 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_UNLOCKED_133" */,

    config input SC_PMA_PLL1_REG_PLL_LOCKDET_MODE_134 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_LOCKDET_MODE_134" */,

    config input SC_PMA_PLL1_REG_PLL_CLKBUF_PD_LEFT_135 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_CLKBUF_PD_LEFT_135" */,

    config input SC_PMA_PLL1_REG_PLL_CLKBUF_PD_RIGHT_136 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_PLL_CLKBUF_PD_RIGHT_136" */,

    config input SC_PMA_PLL1_REG_RESCAL_EN_137 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_EN_137" */,

    config input SC_PMA_PLL1_REG_RESCAL_I_CODE_VAL_143_138[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_I_CODE_VAL_143_138[5],SC_PMA_PLL1_REG_RESCAL_I_CODE_VAL_143_138[4],SC_PMA_PLL1_REG_RESCAL_I_CODE_VAL_143_138[3],SC_PMA_PLL1_REG_RESCAL_I_CODE_VAL_143_138[2],SC_PMA_PLL1_REG_RESCAL_I_CODE_VAL_143_138[1],SC_PMA_PLL1_REG_RESCAL_I_CODE_VAL_143_138[0]" */,

    config input SC_PMA_PLL1_REG_RESCAL_I_CODE_OW_144 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_I_CODE_OW_144" */,

    config input SC_PMA_PLL1_REG_RESCAL_ITER_VALID_SEL_146_145[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_ITER_VALID_SEL_146_145[1],SC_PMA_PLL1_REG_RESCAL_ITER_VALID_SEL_146_145[0]" */,

    config input SC_PMA_PLL1_REG_RESCAL_WAIT_SEL_147 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESCAL_WAIT_SEL_147" */,

    config input SC_PMA_PLL1_REG_I_CTRL_MAX_153_148[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_I_CTRL_MAX_153_148[5],SC_PMA_PLL1_REG_I_CTRL_MAX_153_148[4],SC_PMA_PLL1_REG_I_CTRL_MAX_153_148[3],SC_PMA_PLL1_REG_I_CTRL_MAX_153_148[2],SC_PMA_PLL1_REG_I_CTRL_MAX_153_148[1],SC_PMA_PLL1_REG_I_CTRL_MAX_153_148[0]" */,

    config input SC_PMA_PLL1_REG_I_CTRL_MIN_159_154[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_I_CTRL_MIN_159_154[5],SC_PMA_PLL1_REG_I_CTRL_MIN_159_154[4],SC_PMA_PLL1_REG_I_CTRL_MIN_159_154[3],SC_PMA_PLL1_REG_I_CTRL_MIN_159_154[2],SC_PMA_PLL1_REG_I_CTRL_MIN_159_154[1],SC_PMA_PLL1_REG_I_CTRL_MIN_159_154[0]" */,

    config input SC_PMA_PLL1_REG_RESERVED_191_160[31:0] = 32'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_PLL1_REG_RESERVED_191_160[31],SC_PMA_PLL1_REG_RESERVED_191_160[30],SC_PMA_PLL1_REG_RESERVED_191_160[29],SC_PMA_PLL1_REG_RESERVED_191_160[28],SC_PMA_PLL1_REG_RESERVED_191_160[27],SC_PMA_PLL1_REG_RESERVED_191_160[26],SC_PMA_PLL1_REG_RESERVED_191_160[25],SC_PMA_PLL1_REG_RESERVED_191_160[24],SC_PMA_PLL1_REG_RESERVED_191_160[23],SC_PMA_PLL1_REG_RESERVED_191_160[22],SC_PMA_PLL1_REG_RESERVED_191_160[21],SC_PMA_PLL1_REG_RESERVED_191_160[20],SC_PMA_PLL1_REG_RESERVED_191_160[19],SC_PMA_PLL1_REG_RESERVED_191_160[18],SC_PMA_PLL1_REG_RESERVED_191_160[17],SC_PMA_PLL1_REG_RESERVED_191_160[16],SC_PMA_PLL1_REG_RESERVED_191_160[15],SC_PMA_PLL1_REG_RESERVED_191_160[14],SC_PMA_PLL1_REG_RESERVED_191_160[13],SC_PMA_PLL1_REG_RESERVED_191_160[12],SC_PMA_PLL1_REG_RESERVED_191_160[11],SC_PMA_PLL1_REG_RESERVED_191_160[10],SC_PMA_PLL1_REG_RESERVED_191_160[9],SC_PMA_PLL1_REG_RESERVED_191_160[8],SC_PMA_PLL1_REG_RESERVED_191_160[7],SC_PMA_PLL1_REG_RESERVED_191_160[6],SC_PMA_PLL1_REG_RESERVED_191_160[5],SC_PMA_PLL1_REG_RESERVED_191_160[4],SC_PMA_PLL1_REG_RESERVED_191_160[3],SC_PMA_PLL1_REG_RESERVED_191_160[2],SC_PMA_PLL1_REG_RESERVED_191_160[1],SC_PMA_PLL1_REG_RESERVED_191_160[0]" */,

    config input SC_PLL1_POWERUP_193 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PLL1_POWERUP_193" */,

    config input SC_PLL1_RSTN_194 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PLL1_RSTN_194" */,

    config input SC_GRSN_DIS = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_GRSN_DIS" */,

    config input SC_CFG_RSTN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CFG_RSTN" */,

// configuration_body_def_end

        input CFG_ADDR[15:0] = 16'b1111_1111_1111_1111,
        input CFG_WDATA[7:0] = 8'b1111_1111,
        input TDATA_0[45:0] = 46'b1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_11,
        input TDATA_1[45:0] = 46'b1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_11,
        input TDATA_2[45:0] = 46'b1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_11,
        input TDATA_3[45:0] = 46'b1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_11,
        input PCS_WORD_ALIGN_EN[3:0] = 4'b1111,
        input RX_POLARITY_INVERT[3:0] = 4'b1111,
        input CEB_ADETECT_EN[3:0] = 4'b1111,
        input PCS_MCB_EXT_EN[3:0] = 4'b1111,
        input PCS_NEAREND_LOOP[3:0] = 4'b1111,
        input PCS_FAREND_LOOP[3:0] = 4'b1111,
        input PMA_NEAREND_PLOOP[3:0] = 4'b1111,
        input PMA_NEAREND_SLOOP[3:0] = 4'b1111,
        input PMA_FAREND_PLOOP[3:0] = 4'b1111,
        input RESCAL_I_CODE_I[5:0] = 6'b1111_11,
        input TX_DEEMP_0[1:0] = 2'b11,
        input TX_RATE_0[2:0] = 3'b111,
        input TX_BUSWIDTH_0[2:0] = 3'b111,
        input TX_MARGIN_0[2:0] = 3'b111,
        input RX_RATE_0[2:0] = 3'b111,
        input RX_BUSWIDTH_0[2:0] = 3'b111,
        input CIM_CLK_ALIGNER_RX0[7:0] = 8'b1111_1111,
        input CIM_CLK_ALIGNER_TX0[7:0] = 8'b1111_1111,
        input TX_DEEMP_1[1:0] = 2'b11,
        input TX_RATE_1[2:0] = 3'b111,
        input TX_BUSWIDTH_1[2:0] = 3'b111,
        input TX_MARGIN_1[2:0] = 3'b111,
        input RX_RATE_1[2:0] = 3'b111,
        input RX_BUSWIDTH_1[2:0] = 3'b111,
        input CIM_CLK_ALIGNER_RX1[7:0] = 8'b1111_1111,
        input CIM_CLK_ALIGNER_TX1[7:0] = 8'b1111_1111,
        input TX_DEEMP_2[1:0] = 2'b11,
        input TX_RATE_2[2:0] = 3'b111,
        input TX_BUSWIDTH_2[2:0] = 3'b111,
        input TX_MARGIN_2[2:0] = 3'b111,
        input RX_RATE_2[2:0] = 3'b111,
        input RX_BUSWIDTH_2[2:0] = 3'b111,
        input CIM_CLK_ALIGNER_RX2[7:0] = 8'b1111_1111,
        input CIM_CLK_ALIGNER_TX2[7:0] = 8'b1111_1111,
        input TX_DEEMP_3[1:0] = 2'b11,
        input TX_RATE_3[2:0] = 3'b111,
        input TX_BUSWIDTH_3[2:0] = 3'b111,
        input TX_MARGIN_3[2:0] = 3'b111,
        input RX_RATE_3[2:0] = 3'b111,
        input RX_BUSWIDTH_3[2:0] = 3'b111,
        input CIM_CLK_ALIGNER_RX3[7:0] = 8'b1111_1111,
        input CIM_CLK_ALIGNER_TX3[7:0] = 8'b1111_1111,
        input FOR_PMA_TEST_SE_N[2:0] = 3'b111,
        input FOR_PMA_TEST_CLK[2:0] = 3'b111,
        input FOR_PMA_TEST_RSTN[2:0] = 3'b111,
        input FOR_PMA_TEST_SI_CH0[1:0] = 2'b11,
        input FOR_PMA_TEST_SI_CH1[1:0] = 2'b11,
        input FOR_PMA_TEST_SI_CH2[1:0] = 2'b11,
        input FOR_PMA_TEST_SI_CH3[1:0] = 2'b11,
        input PAD_REFCLKP_0 = 1'b1,
        input PAD_REFCLKN_0 = 1'b1,
        input PAD_REFCLKP_1 = 1'b1,
        input PAD_REFCLKN_1 = 1'b1,
        input PAD_RX_SDP0 = 1'b1,
        input PAD_RX_SDN0 = 1'b1,
        input PAD_RX_SDP1 = 1'b1,
        input PAD_RX_SDN1 = 1'b1,
        input PAD_RX_SDP2 = 1'b1,
        input PAD_RX_SDN2 = 1'b1,
        input PAD_RX_SDP3 = 1'b1,
        input PAD_RX_SDN3 = 1'b1,
        input RX0_CLK_FR_CORE = 1'b1,
        input RX1_CLK_FR_CORE = 1'b1,
        input RX2_CLK_FR_CORE = 1'b1,
        input RX3_CLK_FR_CORE = 1'b1,
        input RX0_CLK2_FR_CORE = 1'b1,
        input RX1_CLK2_FR_CORE = 1'b1,
        input RX2_CLK2_FR_CORE = 1'b1,
        input RX3_CLK2_FR_CORE = 1'b1,
        input TX0_CLK_FR_CORE = 1'b1,
        input TX1_CLK_FR_CORE = 1'b1,
        input TX2_CLK_FR_CORE = 1'b1,
        input TX3_CLK_FR_CORE = 1'b1,
        input TX0_CLK2_FR_CORE = 1'b1,
        input TX1_CLK2_FR_CORE = 1'b1,
        input TX2_CLK2_FR_CORE = 1'b1,
        input TX3_CLK2_FR_CORE = 1'b1,
        input HSST_RST = 1'b1,
        input PCS_RX_RST_0 = 1'b1,
        input PCS_RX_RST_1 = 1'b1,
        input PCS_RX_RST_2 = 1'b1,
        input PCS_RX_RST_3 = 1'b1,
        input PCS_TX_RST_0 = 1'b1,
        input PCS_TX_RST_1 = 1'b1,
        input PCS_TX_RST_2 = 1'b1,
        input PCS_TX_RST_3 = 1'b1,
        input PCS_CB_RST_0 = 1'b1,
        input PCS_CB_RST_1 = 1'b1,
        input PCS_CB_RST_2 = 1'b1,
        input PCS_CB_RST_3 = 1'b1,
        input RXGEAR_SLIP_0 = 1'b1,
        input RXGEAR_SLIP_1 = 1'b1,
        input RXGEAR_SLIP_2 = 1'b1,
        input RXGEAR_SLIP_3 = 1'b1,
        input CFG_CLK = 1'b1,
        input CFG_RST = 1'b1,
        input CFG_PSEL = 1'b1,
        input CFG_ENABLE = 1'b1,
        input CFG_WRITE = 1'b1,
        input RESCAL_RST_I = 1'b1,
        input PLL_REF_CLK_0 = 1'b1,
        input PLL_RST_0 = 1'b1,
        input PLLPOWERDOWN_0 = 1'b1,
        input LANE_SYNC_0 = 1'b1,
        input LANE_SYNC_EN_0 = 1'b1,
        input RATE_CHANGE_TCLK_ON_0 = 1'b1,
        input PLL_REF_CLK_1 = 1'b1,
        input PLL_RST_1 = 1'b1,
        input PLLPOWERDOWN_1 = 1'b1,
        input LANE_SYNC_1 = 1'b1,
        input LANE_SYNC_EN_1 = 1'b1,
        input RATE_CHANGE_TCLK_ON_1 = 1'b1,
        input LANE_PD_0 = 1'b1,
        input LANE_RST_0 = 1'b1,
        input RX_LANE_PD_0 = 1'b1,
        input RX_PMA_RST_0 = 1'b1,
        input CTLE_ADP_RST_0 = 1'b1,
        input TX_LS_DATA_0 = 1'b1,
        input TX_BEACON_EN_0 = 1'b1,
        input TX_SWING_0 = 1'b1,
        input TX_RXDET_REQ_0 = 1'b1,
        input TX_PMA_RST_0 = 1'b1,
        input TX_LANE_PD_0 = 1'b1,
        input RX_HIGHZ_0 = 1'b1,
        input CIM_DYN_DLY_SEL_RX0 = 1'b1,
        input CIM_DYN_DLY_SEL_TX0 = 1'b1,
        input CIM_START_ALIGN_RX0 = 1'b1,
        input CIM_START_ALIGN_TX0 = 1'b1,
        input LANE_PD_1 = 1'b1,
        input LANE_RST_1 = 1'b1,
        input RX_LANE_PD_1 = 1'b1,
        input RX_PMA_RST_1 = 1'b1,
        input CTLE_ADP_RST_1 = 1'b1,
        input TX_LS_DATA_1 = 1'b1,
        input TX_BEACON_EN_1 = 1'b1,
        input TX_SWING_1 = 1'b1,
        input TX_RXDET_REQ_1 = 1'b1,
        input TX_PMA_RST_1 = 1'b1,
        input TX_LANE_PD_1 = 1'b1,
        input RX_HIGHZ_1 = 1'b1,
        input CIM_DYN_DLY_SEL_RX1 = 1'b1,
        input CIM_DYN_DLY_SEL_TX1 = 1'b1,
        input CIM_START_ALIGN_RX1 = 1'b1,
        input CIM_START_ALIGN_TX1 = 1'b1,
        input LANE_PD_2 = 1'b1,
        input LANE_RST_2 = 1'b1,
        input RX_LANE_PD_2 = 1'b1,
        input RX_PMA_RST_2 = 1'b1,
        input CTLE_ADP_RST_2 = 1'b1,
        input TX_LS_DATA_2 = 1'b1,
        input TX_BEACON_EN_2 = 1'b1,
        input TX_SWING_2 = 1'b1,
        input TX_RXDET_REQ_2 = 1'b1,
        input TX_PMA_RST_2 = 1'b1,
        input TX_LANE_PD_2 = 1'b1,
        input RX_HIGHZ_2 = 1'b1,
        input CIM_DYN_DLY_SEL_RX2 = 1'b1,
        input CIM_DYN_DLY_SEL_TX2 = 1'b1,
        input CIM_START_ALIGN_RX2 = 1'b1,
        input CIM_START_ALIGN_TX2 = 1'b1,
        input LANE_PD_3 = 1'b1,
        input LANE_RST_3 = 1'b1,
        input RX_LANE_PD_3 = 1'b1,
        input RX_PMA_RST_3 = 1'b1,
        input CTLE_ADP_RST_3 = 1'b1,
        input TX_LS_DATA_3 = 1'b1,
        input TX_BEACON_EN_3 = 1'b1,
        input TX_SWING_3 = 1'b1,
        input TX_RXDET_REQ_3 = 1'b1,
        input TX_PMA_RST_3 = 1'b1,
        input TX_LANE_PD_3 = 1'b1,
        input RX_HIGHZ_3 = 1'b1,
        input CIM_DYN_DLY_SEL_RX3 = 1'b1,
        input CIM_DYN_DLY_SEL_TX3 = 1'b1,
        input CIM_START_ALIGN_RX3 = 1'b1,
        input CIM_START_ALIGN_TX3 = 1'b1,
        input TEST_SI0 = 1'b1,
        input TEST_SI1 = 1'b1,
        input TEST_SI2 = 1'b1,
        input TEST_SI3 = 1'b1,
        input TEST_SI4 = 1'b1,
        input TEST_SI5 = 1'b1,
        input TEST_SI6 = 1'b1,
        input TEST_SI7 = 1'b1,
        input TEST_SI8 = 1'b1,
        input TEST_SI9 = 1'b1,
        input TEST_SI10 = 1'b1,
        input TEST_SI11 = 1'b1,
        input TEST_SI12 = 1'b1,
        input TEST_SI13 = 1'b1,
        input TEST_SI14 = 1'b1,
        input TEST_SI15 = 1'b1,
        input TEST_SI16 = 1'b1,
        input TEST_SE_N = 1'b1,
        input TEST_MODE_N = 1'b1,
        input TEST_RSTN = 1'b1,
        input FOR_PMA_TEST_MODE_N = 1'b1,
        input FOR_PMA_TEST_SI_PLL0 = 1'b1,
        input FOR_PMA_TEST_SI_PLL1 = 1'b1,
        output CFG_RDATA[7:0],
        output PCS_RX_MCB_STATUS[3:0],
        output PCS_LSM_SYNCED[3:0],
        output RDATA_0[46:0],
        output RDATA_1[46:0],
        output RDATA_2[46:0],
        output RDATA_3[46:0],
        output RCLK2FABRIC[3:0],
        output TCLK2FABRIC[3:0],
        output RESCAL_I_CODE_O[5:0],
        output TEST_STATUS_0[19:0],
        output CA_ALIGN_RX[3:0],
        output CA_ALIGN_TX[3:0],
        output TEST_STATUS_1[19:0],
        output TEST_STATUS_2[19:0],
        output TEST_STATUS_3[19:0],
        output FOR_PMA_TEST_SO_CH0[1:0],
        output FOR_PMA_TEST_SO_CH1[1:0],
        output FOR_PMA_TEST_SO_CH2[1:0],
        output FOR_PMA_TEST_SO_CH3[1:0],
        output PAD_PLL_TEST_0,
        output PAD_PLL_TEST_1,
        output PAD_TX_SDP0,
        output PAD_TX_SDN0,
        output PAD_TX_SDP1,
        output PAD_TX_SDN1,
        output PAD_TX_SDP2,
        output PAD_TX_SDN2,
        output PAD_TX_SDP3,
        output PAD_TX_SDN3,
        output CFG_READY,
        output CFG_INT,
        output REFCK2CORE_0,
        output PLL_READY_0,
        output REFCK2CORE_1,
        output PLL_READY_1,
        output RX_SIGDET_STATUS_0,
        output RX_SATA_COMINIT_0,
        output RX_SATA_COMWAKE_0,
        output RX_LS_DATA_0,
        output RX_READY_0,
        output TX_RXDET_STATUS_0,
        output RX_SIGDET_STATUS_1,
        output RX_SATA_COMINIT_1,
        output RX_SATA_COMWAKE_1,
        output RX_LS_DATA_1,
        output RX_READY_1,
        output TX_RXDET_STATUS_1,
        output RX_SIGDET_STATUS_2,
        output RX_SATA_COMINIT_2,
        output RX_SATA_COMWAKE_2,
        output RX_LS_DATA_2,
        output RX_READY_2,
        output TX_RXDET_STATUS_2,
        output RX_SIGDET_STATUS_3,
        output RX_SATA_COMINIT_3,
        output RX_SATA_COMWAKE_3,
        output RX_LS_DATA_3,
        output RX_READY_3,
        output TX_RXDET_STATUS_3,
        output TEST_SO0,
        output TEST_SO1,
        output TEST_SO2,
        output TEST_SO3,
        output TEST_SO4,
        output TEST_SO5,
        output TEST_SO6,
        output TEST_SO7,
        output TEST_SO8,
        output TEST_SO9,
        output TEST_SO10,
        output TEST_SO11,
        output TEST_SO12,
        output TEST_SO13,
        output TEST_SO14,
        output TEST_SO15,
        output TEST_SO16,
        output FOR_PMA_TEST_SO_PLL0,
        output FOR_PMA_TEST_SO_PLL1
    );
};
//grid device end

//grid device structure netlist started
structure netlist of HSST
{
};
//grid device structure netlist end
//grid device configure body started

configuration cfg of HSST
{

//initial config body0 begin
    if (CP_PCS_CH0_BYPASS_WORD_ALIGN == "FALSE")
    {
        SC_PCS_CH0_BYPASS_WORD_ALIGN_1  :=  1'b0;
    }
    else if (CP_PCS_CH0_BYPASS_WORD_ALIGN == "TRUE")
    {
        SC_PCS_CH0_BYPASS_WORD_ALIGN_1  :=  1'b1;
    }
    else
    {
        SC_PCS_CH0_BYPASS_WORD_ALIGN_1  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_BYPASS_WORD_ALIGN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_BYPASS_WORD_ALIGN);
    }

//initial config body0 end


//initial config body1 begin
    if (CP_PCS_CH0_BYPASS_DENC == "FALSE")
    {
        SC_PCS_CH0_BYPASS_DENC_2   := 1'b0;
    }
    else if (CP_PCS_CH0_BYPASS_DENC == "TRUE")
    {
        SC_PCS_CH0_BYPASS_DENC_2   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_BYPASS_DENC_2  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_BYPASS_DENC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_BYPASS_DENC);
    }

//initial config body1 end


//initial config body2 begin
    if (CP_PCS_CH0_BYPASS_BONDING == "FALSE")
    {
        SC_PCS_CH0_BYPASS_BONDING_3   := 1'b0;
    }
    else if (CP_PCS_CH0_BYPASS_BONDING == "TRUE")
    {
        SC_PCS_CH0_BYPASS_BONDING_3   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_BYPASS_BONDING_3  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_BYPASS_BONDING is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_BYPASS_BONDING);
    }

//initial config body2 end


//initial config body3 begin
    if (CP_PCS_CH0_BYPASS_CTC == "FALSE")
    {
        SC_PCS_CH0_BYPASS_CTC_4   := 1'b0;
    }
    else if (CP_PCS_CH0_BYPASS_CTC == "TRUE")
    {
        SC_PCS_CH0_BYPASS_CTC_4   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_BYPASS_CTC_4  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_BYPASS_CTC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_BYPASS_CTC);
    }

//initial config body3 end


//initial config body4 begin
    if (CP_PCS_CH0_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH0_BYPASS_GEAR_5   := 1'b0;
    }
    else if (CP_PCS_CH0_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH0_BYPASS_GEAR_5   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_BYPASS_GEAR_5  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_BYPASS_GEAR);
    }

//initial config body4 end


//initial config body5 begin
    if (CP_PCS_CH0_BYPASS_BRIDGE == "FALSE")
    {
        SC_PCS_CH0_BYPASS_BRIDGE_6   := 1'b0;
    }
    else if (CP_PCS_CH0_BYPASS_BRIDGE == "TRUE")
    {
        SC_PCS_CH0_BYPASS_BRIDGE_6   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_BYPASS_BRIDGE_6  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_BYPASS_BRIDGE is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_BYPASS_BRIDGE);
    }

//initial config body5 end


//initial config body6 begin
    if (CP_PCS_CH0_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH0_BYPASS_BRIDGE_FIFO_7   := 1'b0;
    }
    else if (CP_PCS_CH0_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH0_BYPASS_BRIDGE_FIFO_7   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_BYPASS_BRIDGE_FIFO_7  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_BYPASS_BRIDGE_FIFO);
    }

//initial config body6 end


//initial config body7 begin
    if (CP_PCS_CH0_DATA_MODE == "X8")
    {
        SC_PCS_CH0_DATA_MODE_8   := 1'b0;
    }
    else if (CP_PCS_CH0_DATA_MODE == "X10")
    {
        SC_PCS_CH0_DATA_MODE_8   := 1'b0;
    }
    else if (CP_PCS_CH0_DATA_MODE == "X16")
    {
        SC_PCS_CH0_DATA_MODE_8   := 1'b1;
    }
    else if (CP_PCS_CH0_DATA_MODE == "X20")
    {
        SC_PCS_CH0_DATA_MODE_8   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_DATA_MODE_8  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_DATA_MODE is set to %s. Legal values is X8,X10,X16,X20",CP_PCS_CH0_DATA_MODE);
    }

//initial config body7 end


//initial config body8 begin
    if (CP_PCS_CH0_RX_POLARITY_INV == "DELAY")
    {
        SC_PCS_CH0_RX_POLARITY_INV_10_9   := 2'b00;
    }
    else if (CP_PCS_CH0_RX_POLARITY_INV == "BIT_POLARITY_INVERION")
    {
        SC_PCS_CH0_RX_POLARITY_INV_10_9   := 2'b01;
    }
    else if (CP_PCS_CH0_RX_POLARITY_INV == "BIT_REVERSAL")
    {
        SC_PCS_CH0_RX_POLARITY_INV_10_9   := 2'b10;
    }
    else if (CP_PCS_CH0_RX_POLARITY_INV == "BOTH")
    {
        SC_PCS_CH0_RX_POLARITY_INV_10_9   := 2'b11;
    }
    else
    {
        SC_PCS_CH0_RX_POLARITY_INV_10_9  :=  2'b00;
        error("Setting Error : The CP_PCS_CH0_RX_POLARITY_INV is set to %s. Legal values is DELAY,BIT_POLARITY_INVERION,BIT_REVERSAL,BOTH",CP_PCS_CH0_RX_POLARITY_INV);
    }

//initial config body8 end


//initial config body9 begin
    if (CP_PCS_CH0_ALIGN_MODE == "1GB")
    {
        SC_PCS_CH0_ALIGN_MODE_12_11   := 2'b00;
    }
    else if (CP_PCS_CH0_ALIGN_MODE == "10GB")
    {
        SC_PCS_CH0_ALIGN_MODE_12_11   := 2'b01;
    }
    else if (CP_PCS_CH0_ALIGN_MODE == "RAPIDIO")
    {
        SC_PCS_CH0_ALIGN_MODE_12_11   := 2'b10;
    }
    else if (CP_PCS_CH0_ALIGN_MODE == "OUTSIDE")
    {
        SC_PCS_CH0_ALIGN_MODE_12_11   := 2'b11;
    }
    else
    {
        SC_PCS_CH0_ALIGN_MODE_12_11  :=  2'b00;
        error("Setting Error : The CP_PCS_CH0_ALIGN_MODE is set to %s. Legal values is 1GB,10GB,RAPIDIO,OUTSIDE",CP_PCS_CH0_ALIGN_MODE);
    }

//initial config body9 end


//initial config body10 begin
    if (CP_PCS_CH0_SAMP_16B == "X16")
    {
        SC_PCS_CH0_SAMP_16B_13   := 1'b1;
    }
    else if (CP_PCS_CH0_SAMP_16B == "X20")
    {
        SC_PCS_CH0_SAMP_16B_13   := 1'b0;
    }
    else
    {
        SC_PCS_CH0_SAMP_16B_13  :=  1'b1;
        error("Setting Error : The CP_PCS_CH0_SAMP_16B is set to %s. Legal values is X16,X20",CP_PCS_CH0_SAMP_16B);
    }

//initial config body10 end


//initial config body11 begin
    if (CP_PCS_CH0_FARLP_PWR_REDUCTION == "FALSE")
    {
        SC_PCS_CH0_FARLP_PWR_REDUCTION_14   := 1'b0;
    }
    else if (CP_PCS_CH0_FARLP_PWR_REDUCTION == "TRUE")
    {
        SC_PCS_CH0_FARLP_PWR_REDUCTION_14   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_FARLP_PWR_REDUCTION_14  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_FARLP_PWR_REDUCTION is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_FARLP_PWR_REDUCTION);
    }

//initial config body11 end


//initial config body12 begin
    if (CP_PCS_CH0_COMMA_REG0 >= 0 &&  CP_PCS_CH0_COMMA_REG0<= 1023)
    {
        SC_PCS_CH0_COMMA_REG0_25_16  :=  CP_PCS_CH0_COMMA_REG0;
    }
    else
    {
        SC_PCS_CH0_COMMA_REG0_25_16  :=  0;
        error("Setting Error : The CP_PCS_CH0_COMMA_REG0 is set to %d. Legal values is 0 to 1023",CP_PCS_CH0_COMMA_REG0);
    }

//initial config body12 end


//initial config body13 begin
    if (CP_PCS_CH0_COMMA_MASK >= 0 &&  CP_PCS_CH0_COMMA_MASK<= 1023)
    {
        SC_PCS_CH0_COMMA_MASK_35_26  :=  CP_PCS_CH0_COMMA_MASK;
    }
    else
    {
        SC_PCS_CH0_COMMA_MASK_35_26  :=  0;
        error("Setting Error : The CP_PCS_CH0_COMMA_MASK is set to %d. Legal values is 0 to 1023",CP_PCS_CH0_COMMA_MASK);
    }

//initial config body13 end


//initial config body14 begin
    if (CP_PCS_CH0_CEB_MODE == "10GB")
    {
        SC_PCS_CH0_CEB_MODE_37_36   := 2'b00;
    }
    else if (CP_PCS_CH0_CEB_MODE == "RAPIDIO")
    {
        SC_PCS_CH0_CEB_MODE_37_36   := 2'b01;
    }
    else if (CP_PCS_CH0_CEB_MODE == "OUTSIDE")
    {
        SC_PCS_CH0_CEB_MODE_37_36   := 2'b10;
    }
    else
    {
        SC_PCS_CH0_CEB_MODE_37_36  :=  2'b00;
        error("Setting Error : The CP_PCS_CH0_CEB_MODE is set to %s. Legal values is 10GB,RAPIDIO,OUTSIDE",CP_PCS_CH0_CEB_MODE);
    }

//initial config body14 end


//initial config body15 begin
    if (CP_PCS_CH0_CTC_MODE == "1SKIP")
    {
        SC_PCS_CH0_CTC_MODE_39_38   := 2'b00;
    }
    else if (CP_PCS_CH0_CTC_MODE == "2SKIP")
    {
        SC_PCS_CH0_CTC_MODE_39_38   := 2'b01;
    }
    else if (CP_PCS_CH0_CTC_MODE == "PCIE_2BYTE")
    {
        SC_PCS_CH0_CTC_MODE_39_38   := 2'b10;
    }
    else if (CP_PCS_CH0_CTC_MODE == "4SKIP")
    {
        SC_PCS_CH0_CTC_MODE_39_38   := 2'b11;
    }
    else
    {
        SC_PCS_CH0_CTC_MODE_39_38  :=  2'b00;
        error("Setting Error : The CP_PCS_CH0_CTC_MODE is set to %s. Legal values is 1SKIP,2SKIP,PCIE_2BYTE,4SKIP",CP_PCS_CH0_CTC_MODE);
    }

//initial config body15 end


//initial config body16 begin
    if (CP_PCS_CH0_A_REG >= 0 &&  CP_PCS_CH0_A_REG<= 255)
    {
        SC_PCS_CH0_A_REG_47_40  :=  CP_PCS_CH0_A_REG;
    }
    else
    {
        SC_PCS_CH0_A_REG_47_40  :=  0;
        error("Setting Error : The CP_PCS_CH0_A_REG is set to %d. Legal values is 0 to 255",CP_PCS_CH0_A_REG);
    }

//initial config body16 end


//initial config body17 begin
    if (CP_PCS_CH0_GE_AUTO_EN == "FALSE")
    {
        SC_PCS_CH0_GE_AUTO_EN_49   := 1'b0;
    }
    else if (CP_PCS_CH0_GE_AUTO_EN == "TRUE")
    {
        SC_PCS_CH0_GE_AUTO_EN_49   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_GE_AUTO_EN_49  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_GE_AUTO_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_GE_AUTO_EN);
    }

//initial config body17 end


//initial config body18 begin
    if (CP_PCS_CH0_SKIP_REG0 >= 0 &&  CP_PCS_CH0_SKIP_REG0<= 1023)
    {
        SC_PCS_CH0_SKIP_REG0_59_50  :=  CP_PCS_CH0_SKIP_REG0;
    }
    else
    {
        SC_PCS_CH0_SKIP_REG0_59_50  :=  0;
        error("Setting Error : The CP_PCS_CH0_SKIP_REG0 is set to %d. Legal values is 0 to 1023",CP_PCS_CH0_SKIP_REG0);
    }

//initial config body18 end


//initial config body19 begin
    if (CP_PCS_CH0_SKIP_REG1 >= 0 &&  CP_PCS_CH0_SKIP_REG1<= 1023)
    {
        SC_PCS_CH0_SKIP_REG1_69_60  :=  CP_PCS_CH0_SKIP_REG1;
    }
    else
    {
        SC_PCS_CH0_SKIP_REG1_69_60  :=  0;
        error("Setting Error : The CP_PCS_CH0_SKIP_REG1 is set to %d. Legal values is 0 to 1023",CP_PCS_CH0_SKIP_REG1);
    }

//initial config body19 end


//initial config body20 begin
    if (CP_PCS_CH0_SKIP_REG2 >= 0 &&  CP_PCS_CH0_SKIP_REG2<= 1023)
    {
        SC_PCS_CH0_SKIP_REG2_79_70  :=  CP_PCS_CH0_SKIP_REG2;
    }
    else
    {
        SC_PCS_CH0_SKIP_REG2_79_70  :=  0;
        error("Setting Error : The CP_PCS_CH0_SKIP_REG2 is set to %d. Legal values is 0 to 1023",CP_PCS_CH0_SKIP_REG2);
    }

//initial config body20 end


//initial config body21 begin
    if (CP_PCS_CH0_SKIP_REG3 >= 0 &&  CP_PCS_CH0_SKIP_REG3<= 1023)
    {
        SC_PCS_CH0_SKIP_REG3_89_80  :=  CP_PCS_CH0_SKIP_REG3;
    }
    else
    {
        SC_PCS_CH0_SKIP_REG3_89_80  :=  0;
        error("Setting Error : The CP_PCS_CH0_SKIP_REG3 is set to %d. Legal values is 0 to 1023",CP_PCS_CH0_SKIP_REG3);
    }

//initial config body21 end


//initial config body22 begin
    if (CP_PCS_CH0_DEC_DUAL == "FALSE")
    {
        SC_PCS_CH0_DEC_DUAL_90   := 1'b0;
    }
    else if (CP_PCS_CH0_DEC_DUAL == "TRUE")
    {
        SC_PCS_CH0_DEC_DUAL_90   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_DEC_DUAL_90  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_DEC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_DEC_DUAL);
    }

//initial config body22 end


//initial config body23 begin
    if (CP_PCS_CH0_SPLIT == "FALSE")
    {
        SC_PCS_CH0_SPLIT_91   := 1'b0;
    }
    else if (CP_PCS_CH0_SPLIT == "TRUE")
    {
        SC_PCS_CH0_SPLIT_91   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_SPLIT_91  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_SPLIT);
    }

//initial config body23 end


//initial config body24 begin
    if (CP_PCS_CH0_FIFOFLAG_CTC == "FALSE")
    {
        SC_PCS_CH0_FIFOFLAG_CTC_92   := 1'b0;
    }
    else if (CP_PCS_CH0_FIFOFLAG_CTC == "TRUE")
    {
        SC_PCS_CH0_FIFOFLAG_CTC_92   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_FIFOFLAG_CTC_92  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_FIFOFLAG_CTC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_FIFOFLAG_CTC);
    }

//initial config body24 end


//initial config body25 begin
    if (CP_PCS_CH0_COMMA_DET_MODE == "COMMA_PATTERN")
    {
        SC_PCS_CH0_COMMA_DET_MODE_93   := 1'b0;
    }
    else if (CP_PCS_CH0_COMMA_DET_MODE == "RX_CLK_SLIP")
    {
        SC_PCS_CH0_COMMA_DET_MODE_93   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_COMMA_DET_MODE_93  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_COMMA_DET_MODE is set to %s. Legal values is COMMA_PATTERN,RX_CLK_SLIP",CP_PCS_CH0_COMMA_DET_MODE);
    }

//initial config body25 end


//initial config body26 begin
    if (CP_PCS_CH0_ERRDETECT_SILENCE == "FALSE")
    {
        SC_PCS_CH0_ERRDETECT_SILENCE_94   := 1'b0;
    }
    else if (CP_PCS_CH0_ERRDETECT_SILENCE == "TRUE")
    {
        SC_PCS_CH0_ERRDETECT_SILENCE_94   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_ERRDETECT_SILENCE_94  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_ERRDETECT_SILENCE is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_ERRDETECT_SILENCE);
    }

//initial config body26 end


//initial config body27 begin
    if (CP_PCS_CH0_PMA_RCLK_POLINV == "PMA_RCLK")
    {
        SC_PCS_CH0_PMA_RCLK_POLINV_96   := 1'b0;
    }
    else if (CP_PCS_CH0_PMA_RCLK_POLINV == "REVERSE_OF_PMA_RCLK")
    {
        SC_PCS_CH0_PMA_RCLK_POLINV_96   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_PMA_RCLK_POLINV_96  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_PMA_RCLK_POLINV is set to %s. Legal values is PMA_RCLK,REVERSE_OF_PMA_RCLK",CP_PCS_CH0_PMA_RCLK_POLINV);
    }

//initial config body27 end


//initial config body28 begin
    if (CP_PCS_CH0_PCS_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH0_PCS_RCLK_SEL_98_97   := 2'b00;
    }
    else if (CP_PCS_CH0_PCS_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH0_PCS_RCLK_SEL_98_97   := 2'b01;
    }
    else if (CP_PCS_CH0_PCS_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH0_PCS_RCLK_SEL_98_97   := 2'b11;
    }
    else
    {
        SC_PCS_CH0_PCS_RCLK_SEL_98_97  :=  2'b00;
        error("Setting Error : The CP_PCS_CH0_PCS_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK",CP_PCS_CH0_PCS_RCLK_SEL);
    }

//initial config body28 end


//initial config body29 begin
    if (CP_PCS_CH0_CB_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH0_CB_RCLK_SEL_100_99   := 2'b00;
    }
    else if (CP_PCS_CH0_CB_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH0_CB_RCLK_SEL_100_99   := 2'b01;
    }
    else if (CP_PCS_CH0_CB_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH0_CB_RCLK_SEL_100_99   := 2'b10;
    }
    else if (CP_PCS_CH0_CB_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH0_CB_RCLK_SEL_100_99   := 2'b11;
    }
    else
    {
        SC_PCS_CH0_CB_RCLK_SEL_100_99  :=  2'b00;
        error("Setting Error : The CP_PCS_CH0_CB_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK",CP_PCS_CH0_CB_RCLK_SEL);
    }

//initial config body29 end


//initial config body30 begin
    if (CP_PCS_CH0_AFTER_CTC_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_SEL_102_101   := 2'b00;
    }
    else if (CP_PCS_CH0_AFTER_CTC_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_SEL_102_101   := 2'b01;
    }
    else if (CP_PCS_CH0_AFTER_CTC_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_SEL_102_101   := 2'b10;
    }
    else if (CP_PCS_CH0_AFTER_CTC_RCLK_SEL == "RCLK2")
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_SEL_102_101   := 2'b11;
    }
    else
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_SEL_102_101  :=  2'b00;
        error("Setting Error : The CP_PCS_CH0_AFTER_CTC_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK2",CP_PCS_CH0_AFTER_CTC_RCLK_SEL);
    }

//initial config body30 end


//initial config body31 begin
    if (CP_PCS_CH0_RCLK_POLINV == "RCLK")
    {
        SC_PCS_CH0_RCLK_POLINV_103   := 1'b0;
    }
    else if (CP_PCS_CH0_RCLK_POLINV == "REVERSE_OF_RCLK")
    {
        SC_PCS_CH0_RCLK_POLINV_103   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_RCLK_POLINV_103  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_RCLK_POLINV is set to %s. Legal values is RCLK,REVERSE_OF_RCLK",CP_PCS_CH0_RCLK_POLINV);
    }

//initial config body31 end


//initial config body32 begin
    if (CP_PCS_CH0_BRIDGE_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH0_BRIDGE_RCLK_SEL_105_104   := 2'b00;
    }
    else if (CP_PCS_CH0_BRIDGE_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH0_BRIDGE_RCLK_SEL_105_104   := 2'b01;
    }
    else if (CP_PCS_CH0_BRIDGE_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH0_BRIDGE_RCLK_SEL_105_104   := 2'b10;
    }
    else if (CP_PCS_CH0_BRIDGE_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH0_BRIDGE_RCLK_SEL_105_104   := 2'b11;
    }
    else
    {
        SC_PCS_CH0_BRIDGE_RCLK_SEL_105_104  :=  2'b00;
        error("Setting Error : The CP_PCS_CH0_BRIDGE_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK",CP_PCS_CH0_BRIDGE_RCLK_SEL);
    }

//initial config body32 end


//initial config body33 begin
    if (CP_PCS_CH0_PCS_RCLK_EN == "FALSE")
    {
        SC_PCS_CH0_PCS_RCLK_EN_106   := 1'b0;
    }
    else if (CP_PCS_CH0_PCS_RCLK_EN == "TRUE")
    {
        SC_PCS_CH0_PCS_RCLK_EN_106   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_PCS_RCLK_EN_106  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_PCS_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_PCS_RCLK_EN);
    }

//initial config body33 end


//initial config body34 begin
    if (CP_PCS_CH0_CB_RCLK_EN == "FALSE")
    {
        SC_PCS_CH0_CB_RCLK_EN_107   := 1'b0;
    }
    else if (CP_PCS_CH0_CB_RCLK_EN == "TRUE")
    {
        SC_PCS_CH0_CB_RCLK_EN_107   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_CB_RCLK_EN_107  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_CB_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_CB_RCLK_EN);
    }

//initial config body34 end


//initial config body35 begin
    if (CP_PCS_CH0_AFTER_CTC_RCLK_EN == "FALSE")
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_EN_108   := 1'b0;
    }
    else if (CP_PCS_CH0_AFTER_CTC_RCLK_EN == "TRUE")
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_EN_108   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_EN_108  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_AFTER_CTC_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_AFTER_CTC_RCLK_EN);
    }

//initial config body35 end


//initial config body36 begin
    if (CP_PCS_CH0_AFTER_CTC_RCLK_EN_GB == "FALSE")
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_EN_GB_109   := 1'b0;
    }
    else if (CP_PCS_CH0_AFTER_CTC_RCLK_EN_GB == "TRUE")
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_EN_GB_109   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_EN_GB_109  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_AFTER_CTC_RCLK_EN_GB is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_AFTER_CTC_RCLK_EN_GB);
    }

//initial config body36 end


//initial config body37 begin
    if (CP_PCS_CH0_AFTER_CTC_RCLK_SEL_1 == "PMA_RCLK")
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b00;
    }
    else if (CP_PCS_CH0_AFTER_CTC_RCLK_SEL_1 == "PMA_TCLK")
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b01;
    }
    else if (CP_PCS_CH0_AFTER_CTC_RCLK_SEL_1 == "MCB_RCLK")
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b10;
    }
    else if (CP_PCS_CH0_AFTER_CTC_RCLK_SEL_1 == "RCLK2")
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b11;
    }
    else
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_SEL_1_111_110  :=  2'b00;
        error("Setting Error : The CP_PCS_CH0_AFTER_CTC_RCLK_SEL_1 is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK2",CP_PCS_CH0_AFTER_CTC_RCLK_SEL_1);
    }

//initial config body37 end


//initial config body38 begin
    if (CP_PCS_CH0_PCS_RX_RSTN == "FALSE")
    {
        SC_PCS_CH0_PCS_RX_RSTN_112   := 1'b0;
    }
    else if (CP_PCS_CH0_PCS_RX_RSTN == "TRUE")
    {
        SC_PCS_CH0_PCS_RX_RSTN_112   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_PCS_RX_RSTN_112  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_PCS_RX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_PCS_RX_RSTN);
    }

//initial config body38 end


//initial config body39 begin
    if (CP_PCS_CH0_SLAVE == "MASTER")
    {
        SC_PCS_CH0_SLAVE_113   := 1'b0;
    }
    else if (CP_PCS_CH0_SLAVE == "SLAVE")
    {
        SC_PCS_CH0_SLAVE_113   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_SLAVE_113  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_PCS_CH0_SLAVE);
    }

//initial config body39 end


//initial config body40 begin
    if (CP_PCS_CH0_PCIE_SLAVE == "MASTER")
    {
        SC_PCS_CH0_PCIE_SLAVE_114   := 1'b0;
    }
    else if (CP_PCS_CH0_PCIE_SLAVE == "SLAVE")
    {
        SC_PCS_CH0_PCIE_SLAVE_114   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_PCIE_SLAVE_114  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_PCIE_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_PCS_CH0_PCIE_SLAVE);
    }

//initial config body40 end


//initial config body41 begin
    if (CP_PCS_CH0_RX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH0_RX_64B66B_67B_116_115  :=  2'b00;
    }
    else if (CP_PCS_CH0_RX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH0_RX_64B66B_67B_116_115  :=  2'b01;
    }
    else if (CP_PCS_CH0_RX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH0_RX_64B66B_67B_116_115  :=  2'b11;
    }
    else
    {
        SC_PCS_CH0_RX_64B66B_67B_116_115  :=  2'b00;
        error("Setting Error : The CP_PCS_CH0_RX_64B66B_67B is set to %d. Legal values is NORMAL,64B_66B,64B_67B",CP_PCS_CH0_RX_64B66B_67B);
    }

//initial config body41 end


//initial config body42 begin
    if (CP_PCS_CH0_RX_BRIDGE_CLK_POLINV == "RX_BRIDGE_CLK")
    {
        SC_PCS_CH0_RX_BRIDGE_CLK_POLINV_117   := 1'b0;
    }
    else if (CP_PCS_CH0_RX_BRIDGE_CLK_POLINV == "REVERSE_OF_RX_BRIDGE_CLK")
    {
        SC_PCS_CH0_RX_BRIDGE_CLK_POLINV_117   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_RX_BRIDGE_CLK_POLINV_117  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_RX_BRIDGE_CLK_POLINV is set to %s. Legal values is RX_BRIDGE_CLK,REVERSE_OF_RX_BRIDGE_CLK",CP_PCS_CH0_RX_BRIDGE_CLK_POLINV);
    }

//initial config body42 end


//initial config body43 begin
    if (CP_PCS_CH0_AFTER_CTC_RCLK_EN_GB_1 == "FALSE")
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_EN_GB_1_118   := 1'b0;
    }
    else if (CP_PCS_CH0_AFTER_CTC_RCLK_EN_GB_1 == "TRUE")
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_EN_GB_1_118   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_AFTER_CTC_RCLK_EN_GB_1_118  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_AFTER_CTC_RCLK_EN_GB_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_AFTER_CTC_RCLK_EN_GB_1);
    }

//initial config body43 end


//initial config body44 begin
    if (CP_PCS_CH0_PCS_CB_RSTN == "FALSE")
    {
        SC_PCS_CH0_PCS_CB_RSTN_120   := 1'b0;
    }
    else if (CP_PCS_CH0_PCS_CB_RSTN == "TRUE")
    {
        SC_PCS_CH0_PCS_CB_RSTN_120   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_PCS_CB_RSTN_120  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_PCS_CB_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_PCS_CB_RSTN);
    }

//initial config body44 end


//initial config body45 begin
    if (CP_PCS_CH0_TX_BRIDGE_GEAR_SEL == "FALSE")
    {
        SC_PCS_CH0_TX_BRIDGE_GEAR_SEL_128   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_BRIDGE_GEAR_SEL == "TRUE")
    {
        SC_PCS_CH0_TX_BRIDGE_GEAR_SEL_128   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_BRIDGE_GEAR_SEL_128  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_BRIDGE_GEAR_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TX_BRIDGE_GEAR_SEL);
    }

//initial config body45 end


//initial config body46 begin
    if (CP_PCS_CH0_TX_BYPASS_BRIDGE_UINT == "FALSE")
    {
        SC_PCS_CH0_TX_BYPASS_BRIDGE_UINT_129   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_BYPASS_BRIDGE_UINT == "TRUE")
    {
        SC_PCS_CH0_TX_BYPASS_BRIDGE_UINT_129   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_BYPASS_BRIDGE_UINT_129  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_BYPASS_BRIDGE_UINT is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TX_BYPASS_BRIDGE_UINT);
    }

//initial config body46 end


//initial config body47 begin
    if (CP_PCS_CH0_TX_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH0_TX_BYPASS_BRIDGE_FIFO_130   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH0_TX_BYPASS_BRIDGE_FIFO_130   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_BYPASS_BRIDGE_FIFO_130  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TX_BYPASS_BRIDGE_FIFO);
    }

//initial config body47 end


//initial config body48 begin
    if (CP_PCS_CH0_TX_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH0_TX_BYPASS_GEAR_131   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH0_TX_BYPASS_GEAR_131   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_BYPASS_GEAR_131  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TX_BYPASS_GEAR);
    }

//initial config body48 end


//initial config body49 begin
    if (CP_PCS_CH0_TX_BYPASS_ENC == "FALSE")
    {
        SC_PCS_CH0_TX_BYPASS_ENC_132   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_BYPASS_ENC == "TRUE")
    {
        SC_PCS_CH0_TX_BYPASS_ENC_132   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_BYPASS_ENC_132  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_BYPASS_ENC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TX_BYPASS_ENC);
    }

//initial config body49 end


//initial config body50 begin
    if (CP_PCS_CH0_TX_BYPASS_BIT_SLIP == "FALSE")
    {
        SC_PCS_CH0_TX_BYPASS_BIT_SLIP_133   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_BYPASS_BIT_SLIP == "TRUE")
    {
        SC_PCS_CH0_TX_BYPASS_BIT_SLIP_133   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_BYPASS_BIT_SLIP_133  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_BYPASS_BIT_SLIP is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TX_BYPASS_BIT_SLIP);
    }

//initial config body50 end


//initial config body51 begin
    if (CP_PCS_CH0_TX_GEAR_SPLIT == "FALSE")
    {
        SC_PCS_CH0_TX_GEAR_SPLIT_136   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_GEAR_SPLIT == "TRUE")
    {
        SC_PCS_CH0_TX_GEAR_SPLIT_136   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_GEAR_SPLIT_136  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_GEAR_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TX_GEAR_SPLIT);
    }

//initial config body51 end


//initial config body52 begin
    if (CP_PCS_CH0_TX_DRIVE_REG_MODE == "NO_CHANGE")
    {
        SC_PCS_CH0_TX_DRIVE_REG_MODE_138_137   := 2'b00;
    }
    else if (CP_PCS_CH0_TX_DRIVE_REG_MODE == "EN_POLARIY_REV")
    {
        SC_PCS_CH0_TX_DRIVE_REG_MODE_138_137   := 2'b01;
    }
    else if (CP_PCS_CH0_TX_DRIVE_REG_MODE == "EN_BIT_REV")
    {
        SC_PCS_CH0_TX_DRIVE_REG_MODE_138_137   := 2'b10;
    }
    else if (CP_PCS_CH0_TX_DRIVE_REG_MODE == "EN_BOTH")
    {
        SC_PCS_CH0_TX_DRIVE_REG_MODE_138_137   := 2'b11;
    }
    else
    {
        SC_PCS_CH0_TX_DRIVE_REG_MODE_138_137  :=  2'b00;
        error("Setting Error : The CP_PCS_CH0_TX_DRIVE_REG_MODE is set to %s. Legal values is NO_CHANGE,EN_POLARIY_REV,EN_BIT_REV,EN_BOTH",CP_PCS_CH0_TX_DRIVE_REG_MODE);
    }

//initial config body52 end


//initial config body53 begin
    if (CP_PCS_CH0_TX_BIT_SLIP_CYCLES >= 0 &&  CP_PCS_CH0_TX_BIT_SLIP_CYCLES<= 31)
    {
        SC_PCS_CH0_TX_BIT_SLIP_CYCLES_143_139  :=  CP_PCS_CH0_TX_BIT_SLIP_CYCLES;
    }
    else
    {
        SC_PCS_CH0_TX_BIT_SLIP_CYCLES_143_139  :=  0;
        error("Setting Error : The CP_PCS_CH0_TX_BIT_SLIP_CYCLES is set to %d. Legal values is 0 to 31",CP_PCS_CH0_TX_BIT_SLIP_CYCLES);
    }

//initial config body53 end


//initial config body54 begin
    if (CP_PCS_CH0_INT_TX_MASK_0 == "FALSE")
    {
        SC_PCS_CH0_INT_TX_MASK_0_144   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_TX_MASK_0 == "TRUE")
    {
        SC_PCS_CH0_INT_TX_MASK_0_144   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_TX_MASK_0_144  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_TX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_TX_MASK_0);
    }

//initial config body54 end


//initial config body55 begin
    if (CP_PCS_CH0_INT_TX_MASK_1 == "FALSE")
    {
        SC_PCS_CH0_INT_TX_MASK_1_145   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_TX_MASK_1 == "TRUE")
    {
        SC_PCS_CH0_INT_TX_MASK_1_145   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_TX_MASK_1_145  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_TX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_TX_MASK_1);
    }

//initial config body55 end


//initial config body56 begin
    if (CP_PCS_CH0_INT_TX_MASK_2 == "FALSE")
    {
        SC_PCS_CH0_INT_TX_MASK_2_146   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_TX_MASK_2 == "TRUE")
    {
        SC_PCS_CH0_INT_TX_MASK_2_146   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_TX_MASK_2_146  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_TX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_TX_MASK_2);
    }

//initial config body56 end


//initial config body57 begin
    if (CP_PCS_CH0_INT_TX_CLR_0 == "FALSE")
    {
        SC_PCS_CH0_INT_TX_CLR_0_152   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_TX_CLR_0 == "TRUE")
    {
        SC_PCS_CH0_INT_TX_CLR_0_152   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_TX_CLR_0_152  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_TX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_TX_CLR_0);
    }

//initial config body57 end


//initial config body58 begin
    if (CP_PCS_CH0_INT_TX_CLR_1 == "FALSE")
    {
        SC_PCS_CH0_INT_TX_CLR_1_153   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_TX_CLR_1 == "TRUE")
    {
        SC_PCS_CH0_INT_TX_CLR_1_153   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_TX_CLR_1_153  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_TX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_TX_CLR_1);
    }

//initial config body58 end


//initial config body59 begin
    if (CP_PCS_CH0_INT_TX_CLR_2 == "FALSE")
    {
        SC_PCS_CH0_INT_TX_CLR_2_154   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_TX_CLR_2 == "TRUE")
    {
        SC_PCS_CH0_INT_TX_CLR_2_154   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_TX_CLR_2_154  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_TX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_TX_CLR_2);
    }

//initial config body59 end


//initial config body60 begin
    if (CP_PCS_CH0_TX_PMA_TCLK_POLINV == "PMA_TCLK")
    {
        SC_PCS_CH0_TX_PMA_TCLK_POLINV_160   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_PMA_TCLK_POLINV == "REVERSE_OF_PMA_TCLK")
    {
        SC_PCS_CH0_TX_PMA_TCLK_POLINV_160  :=  1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_PMA_TCLK_POLINV_160  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_PMA_TCLK_POLINV is set to %s. Legal values is PMA_TCLK,REVERSE_OF_PMA_TCLK",CP_PCS_CH0_TX_PMA_TCLK_POLINV);
    }

//initial config body60 end


//initial config body61 begin
    if (CP_PCS_CH0_TX_PCS_CLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH0_TX_PCS_CLK_EN_SEL_161   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_PCS_CLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH0_TX_PCS_CLK_EN_SEL_161   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_PCS_CLK_EN_SEL_161  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_PCS_CLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TX_PCS_CLK_EN_SEL);
    }

//initial config body61 end


//initial config body62 begin
    if (CP_PCS_CH0_TX_BRIDGE_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH0_TX_BRIDGE_TCLK_SEL_162   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_BRIDGE_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH0_TX_BRIDGE_TCLK_SEL_162   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_BRIDGE_TCLK_SEL_162  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_BRIDGE_TCLK_SEL is set to %s. Legal values is TCLK,TCLK2",CP_PCS_CH0_TX_BRIDGE_TCLK_SEL);
    }

//initial config body62 end


//initial config body63 begin
    if (CP_PCS_CH0_TX_TCLK_POLINV == "TCLK")
    {
        SC_PCS_CH0_TX_TCLK_POLINV_163   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_TCLK_POLINV == "REVERSE_OF_TCLK")
    {
        SC_PCS_CH0_TX_TCLK_POLINV_163   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_TCLK_POLINV_163  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_TCLK_POLINV is set to %s. Legal values is TCLK,REVERSE_OF_TCLK",CP_PCS_CH0_TX_TCLK_POLINV);
    }

//initial config body63 end


//initial config body64 begin
    if (CP_PCS_CH0_TX_PCS_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH0_TX_PCS_TCLK_SEL_164   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_PCS_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH0_TX_PCS_TCLK_SEL_164   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_PCS_TCLK_SEL_164  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_PCS_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK",CP_PCS_CH0_TX_PCS_TCLK_SEL);
    }

//initial config body64 end


//initial config body65 begin
    if (CP_PCS_CH0_TX_PCS_TX_RSTN == "FALSE")
    {
        SC_PCS_CH0_TX_PCS_TX_RSTN_165   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_PCS_TX_RSTN == "TRUE")
    {
        SC_PCS_CH0_TX_PCS_TX_RSTN_165   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_PCS_TX_RSTN_165  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_PCS_TX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TX_PCS_TX_RSTN);
    }

//initial config body65 end


//initial config body66 begin
    if (CP_PCS_CH0_TX_SLAVE == "SLAVE")
    {
        SC_PCS_CH0_TX_SLAVE_166   := 1'b1;
    }
    else if (CP_PCS_CH0_TX_SLAVE == "MASTER")
    {
        SC_PCS_CH0_TX_SLAVE_166   := 1'b0;
    }
    else
    {
        SC_PCS_CH0_TX_SLAVE_166  :=  1'b1;
        error("Setting Error : The CP_PCS_CH0_TX_SLAVE is set to %s. Legal values is SLAVE,MASTER",CP_PCS_CH0_TX_SLAVE);
    }

//initial config body66 end


//initial config body67 begin
    if (CP_PCS_CH0_TX_GEAR_TCLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH0_TX_GEAR_TCLK_EN_SEL_167   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_GEAR_TCLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH0_TX_GEAR_TCLK_EN_SEL_167   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_GEAR_TCLK_EN_SEL_167  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_GEAR_TCLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TX_GEAR_TCLK_EN_SEL);
    }

//initial config body67 end


//initial config body68 begin
    if (CP_PCS_CH0_DATA_WIDTH_MODE == "X20")
    {
        SC_PCS_CH0_DATA_WIDTH_MODE_169_168   := 2'b00;
    }
    else if (CP_PCS_CH0_DATA_WIDTH_MODE == "X10")
    {
        SC_PCS_CH0_DATA_WIDTH_MODE_169_168   := 2'b01;
    }
    else if (CP_PCS_CH0_DATA_WIDTH_MODE == "X16")
    {
        SC_PCS_CH0_DATA_WIDTH_MODE_169_168   := 2'b10;
    }
    else if (CP_PCS_CH0_DATA_WIDTH_MODE == "X8")
    {
        SC_PCS_CH0_DATA_WIDTH_MODE_169_168   := 2'b11;
    }
    else
    {
        SC_PCS_CH0_DATA_WIDTH_MODE_169_168  :=  2'b00;
        error("Setting Error : The CP_PCS_CH0_DATA_WIDTH_MODE is set to %s. Legal values is X8,X10,X16,X20",CP_PCS_CH0_DATA_WIDTH_MODE);
    }

//initial config body68 end


//initial config body69 begin
    if (CP_PCS_CH0_TX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH0_TX_64B66B_67B_171_170  :=  2'b00;
    }
    else if (CP_PCS_CH0_TX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH0_TX_64B66B_67B_171_170  :=  2'b01;
    }
    else if (CP_PCS_CH0_TX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH0_TX_64B66B_67B_171_170  :=  2'b11;
    }
    else
    {
        SC_PCS_CH0_TX_64B66B_67B_171_170  :=  2'b00;
        error("Setting Error : The CP_PCS_CH0_TX_64B66B_67B is set to %d. Legal values is NORMAL,64B_66B,64B_67B",CP_PCS_CH0_TX_64B66B_67B);
    }

//initial config body69 end


//initial config body70 begin
    if (CP_PCS_CH0_TX_GEAR_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH0_TX_GEAR_TCLK_SEL_172   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_GEAR_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH0_TX_GEAR_TCLK_SEL_172   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_GEAR_TCLK_SEL_172  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_GEAR_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK2",CP_PCS_CH0_TX_GEAR_TCLK_SEL);
    }

//initial config body70 end


//initial config body71 begin
    if (CP_PCS_CH0_TX_TCLK2FABRIC_SEL == "FALSE")
    {
        SC_PCS_CH0_TX_TCLK2FABRIC_SEL_176   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_TCLK2FABRIC_SEL == "TRUE")
    {
        SC_PCS_CH0_TX_TCLK2FABRIC_SEL_176   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_TCLK2FABRIC_SEL_176  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_TCLK2FABRIC_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TX_TCLK2FABRIC_SEL);
    }

//initial config body71 end


//initial config body72 begin
    if (CP_PCS_CH0_TX_OUTZZ == "FALSE")
    {
        SC_PCS_CH0_TX_OUTZZ_177   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_OUTZZ == "TRUE")
    {
        SC_PCS_CH0_TX_OUTZZ_177   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_OUTZZ_177  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_OUTZZ is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TX_OUTZZ);
    }

//initial config body72 end


//initial config body73 begin
    if (CP_PCS_CH0_ENC_DUAL == "FALSE")
    {
        SC_PCS_CH0_ENC_DUAL_178   := 1'b0;
    }
    else if (CP_PCS_CH0_ENC_DUAL == "TRUE")
    {
        SC_PCS_CH0_ENC_DUAL_178   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_ENC_DUAL_178  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_ENC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_ENC_DUAL);
    }

//initial config body73 end


//initial config body74 begin
    if (CP_PCS_CH0_TX_BITSLIP_DATA_MODE == "X10")
    {
        SC_PCS_CH0_TX_BITSLIP_DATA_MODE_179   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_BITSLIP_DATA_MODE == "X20")
    {
        SC_PCS_CH0_TX_BITSLIP_DATA_MODE_179   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_BITSLIP_DATA_MODE_179  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_BITSLIP_DATA_MODE is set to %s. Legal values is X10,X20",CP_PCS_CH0_TX_BITSLIP_DATA_MODE);
    }

//initial config body74 end


//initial config body75 begin
    if (CP_PCS_CH0_TX_BRIDGE_CLK_POLINV == "TX_BRIDGE_CLK")
    {
        SC_PCS_CH0_TX_BRIDGE_CLK_POLINV_180   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_BRIDGE_CLK_POLINV == "REVERSE_OF_TX_BRIDGE_CLK")
    {
        SC_PCS_CH0_TX_BRIDGE_CLK_POLINV_180   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_BRIDGE_CLK_POLINV_180  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_BRIDGE_CLK_POLINV is set to %s. Legal values is TX_BRIDGE_CLK,REVERSE_OF_TX_BRIDGE_CLK",CP_PCS_CH0_TX_BRIDGE_CLK_POLINV);
    }

//initial config body75 end


//initial config body76 begin
    if (CP_PCS_CH0_COMMA_REG1 >= 0 &&  CP_PCS_CH0_COMMA_REG1<= 1023)
    {
        SC_PCS_CH0_COMMA_REG1_193_184  :=  CP_PCS_CH0_COMMA_REG1;
    }
    else
    {
        SC_PCS_CH0_COMMA_REG1_193_184  :=  0;
        error("Setting Error : The CP_PCS_CH0_COMMA_REG1 is set to %d. Legal values is 0 to 1023",CP_PCS_CH0_COMMA_REG1);
    }

//initial config body76 end


//initial config body77 begin
    if (CP_PCS_CH0_RAPID_IMAX >= 0 &&  CP_PCS_CH0_RAPID_IMAX<= 7)
    {
        SC_PCS_CH0_RAPID_IMAX_202_200  :=  CP_PCS_CH0_RAPID_IMAX;
    }
    else
    {
        SC_PCS_CH0_RAPID_IMAX_202_200  :=  0;
        error("Setting Error : The CP_PCS_CH0_RAPID_IMAX is set to %d. Legal values is 0 to 7",CP_PCS_CH0_RAPID_IMAX);
    }

//initial config body77 end


//initial config body78 begin
    if (CP_PCS_CH0_RAPID_VMIN_1 >= 0 &&  CP_PCS_CH0_RAPID_VMIN_1<= 255)
    {
        SC_PCS_CH0_RAPID_VMIN_1_215_208  :=  CP_PCS_CH0_RAPID_VMIN_1;
    }
    else
    {
        SC_PCS_CH0_RAPID_VMIN_1_215_208  :=  0;
        error("Setting Error : The CP_PCS_CH0_RAPID_VMIN_1 is set to %d. Legal values is 0 to 255",CP_PCS_CH0_RAPID_VMIN_1);
    }

//initial config body78 end


//initial config body79 begin
    if (CP_PCS_CH0_RAPID_VMIN_2 >= 0 &&  CP_PCS_CH0_RAPID_VMIN_2<= 255)
    {
        SC_PCS_CH0_RAPID_VMIN_2_223_216  :=  CP_PCS_CH0_RAPID_VMIN_2;
    }
    else
    {
        SC_PCS_CH0_RAPID_VMIN_2_223_216  :=  0;
        error("Setting Error : The CP_PCS_CH0_RAPID_VMIN_2 is set to %d. Legal values is 0 to 255",CP_PCS_CH0_RAPID_VMIN_2);
    }

//initial config body79 end


//initial config body80 begin
    if (CP_PCS_CH0_RX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH0_RX_PRBS_MODE_227_224   := 4'd0;
    }
    else if (CP_PCS_CH0_RX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH0_RX_PRBS_MODE_227_224   := 4'd1;
    }
    else if (CP_PCS_CH0_RX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH0_RX_PRBS_MODE_227_224   := 4'd2;
    }
    else if (CP_PCS_CH0_RX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH0_RX_PRBS_MODE_227_224   := 4'd3;
    }
    else if (CP_PCS_CH0_RX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH0_RX_PRBS_MODE_227_224   := 4'd4;
    }
    else if (CP_PCS_CH0_RX_PRBS_MODE == "LONG_1")
    {
        SC_PCS_CH0_RX_PRBS_MODE_227_224   := 4'd5;
    }
    else if (CP_PCS_CH0_RX_PRBS_MODE == "LONG_0")
    {
        SC_PCS_CH0_RX_PRBS_MODE_227_224   := 4'd6;
    }
    else if (CP_PCS_CH0_RX_PRBS_MODE == "20UI")
    {
        SC_PCS_CH0_RX_PRBS_MODE_227_224   := 4'd7;
    }
    else if (CP_PCS_CH0_RX_PRBS_MODE == "D10_2")
    {
        SC_PCS_CH0_RX_PRBS_MODE_227_224   := 4'd8;
    }
    else if (CP_PCS_CH0_RX_PRBS_MODE == "PCIE")
    {
        SC_PCS_CH0_RX_PRBS_MODE_227_224   := 4'd9;
    }
    else
    {
        SC_PCS_CH0_RX_PRBS_MODE_227_224  :=  4'd0;
        error("Setting Error : The CP_PCS_CH0_RX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31,LONG_1,LONG_0,20UI,D10_2,PCIE",CP_PCS_CH0_RX_PRBS_MODE);
    }

//initial config body80 end


//initial config body81 begin
    if (CP_PCS_CH0_RX_ERRCNT_CLR == "FALSE")
    {
        SC_PCS_CH0_RX_ERRCNT_CLR_228   := 1'b0;
    }
    else if (CP_PCS_CH0_RX_ERRCNT_CLR == "TRUE")
    {
        SC_PCS_CH0_RX_ERRCNT_CLR_228   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_RX_ERRCNT_CLR_228  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_RX_ERRCNT_CLR is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_RX_ERRCNT_CLR);
    }

//initial config body81 end


//initial config body82 begin
    if (CP_PCS_CH0_RX_PRBS_ERR_LPBK == "FALSE")
    {
        SC_PCS_CH0_RX_PRBS_ERR_LPBK_229   := 1'b0;
    }
    else if (CP_PCS_CH0_RX_PRBS_ERR_LPBK == "TRUE")
    {
        SC_PCS_CH0_RX_PRBS_ERR_LPBK_229   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_RX_PRBS_ERR_LPBK_229  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_RX_PRBS_ERR_LPBK is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_RX_PRBS_ERR_LPBK);
    }

//initial config body82 end


//initial config body83 begin
    if (CP_PCS_CH0_TX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH0_TX_PRBS_MODE_235_232   := 4'd0;
    }
    else if (CP_PCS_CH0_TX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH0_TX_PRBS_MODE_235_232   := 4'd1;
    }
    else if (CP_PCS_CH0_TX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH0_TX_PRBS_MODE_235_232   := 4'd2;
    }
    else if (CP_PCS_CH0_TX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH0_TX_PRBS_MODE_235_232   := 4'd3;
    }
    else if (CP_PCS_CH0_TX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH0_TX_PRBS_MODE_235_232   := 4'd4;
    }
    else if (CP_PCS_CH0_TX_PRBS_MODE == "LONG_1")
    {
        SC_PCS_CH0_TX_PRBS_MODE_235_232   := 4'd5;
    }
    else if (CP_PCS_CH0_TX_PRBS_MODE == "LONG_0")
    {
        SC_PCS_CH0_TX_PRBS_MODE_235_232   := 4'd6;
    }
    else if (CP_PCS_CH0_TX_PRBS_MODE == "20UI")
    {
        SC_PCS_CH0_TX_PRBS_MODE_235_232   := 4'd7;
    }
    else if (CP_PCS_CH0_TX_PRBS_MODE == "D10_2")
    {
        SC_PCS_CH0_TX_PRBS_MODE_235_232   := 4'd8;
    }
    else if (CP_PCS_CH0_TX_PRBS_MODE == "PCIE")
    {
        SC_PCS_CH0_TX_PRBS_MODE_235_232   := 4'd9;
    }
    else
    {
        SC_PCS_CH0_TX_PRBS_MODE_235_232  :=  4'd0;
        error("Setting Error : The CP_PCS_CH0_TX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31,LONG_1,LONG_0,20UI,D10_2,PCIE",CP_PCS_CH0_TX_PRBS_MODE);
    }

//initial config body83 end


//initial config body84 begin
    if (CP_PCS_CH0_TX_INSERT_ER == "FALSE")
    {
        SC_PCS_CH0_TX_INSERT_ER_236   := 1'b0;
    }
    else if (CP_PCS_CH0_TX_INSERT_ER == "TRUE")
    {
        SC_PCS_CH0_TX_INSERT_ER_236   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TX_INSERT_ER_236  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TX_INSERT_ER is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TX_INSERT_ER);
    }

//initial config body84 end


//initial config body85 begin
    if (CP_PCS_CH0_ENABLE_PRBS_GEN == "FALSE")
    {
        SC_PCS_CH0_ENABLE_PRBS_GEN_237   := 1'b0;
    }
    else if (CP_PCS_CH0_ENABLE_PRBS_GEN == "TRUE")
    {
        SC_PCS_CH0_ENABLE_PRBS_GEN_237   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_ENABLE_PRBS_GEN_237  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_ENABLE_PRBS_GEN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_ENABLE_PRBS_GEN);
    }

//initial config body85 end


//initial config body86 begin
    if (CP_PCS_CH0_ERR_CNT >= 0 &&  CP_PCS_CH0_ERR_CNT<= 255)
    {
        SC_PCS_CH0_ERR_CNT_247_240  :=  CP_PCS_CH0_ERR_CNT;
    }
    else
    {
        SC_PCS_CH0_ERR_CNT_247_240  :=  0;
        error("Setting Error : The CP_PCS_CH0_ERR_CNT is set to %d. Legal values is 0 to 255",CP_PCS_CH0_ERR_CNT);
    }

//initial config body86 end


//initial config body87 begin
    if (CP_PCS_CH0_DEFAULT_RADDR >= 0 && CP_PCS_CH0_DEFAULT_RADDR <= 15)
    {
        SC_PCS_CH0_DEFAULT_RADDR_251_248  :=  CP_PCS_CH0_DEFAULT_RADDR;
    }
    else
    {
        SC_PCS_CH0_DEFAULT_RADDR_251_248  :=  0;
        error("Setting Error : The CP_PCS_CH0_DEFAULT_RADDR is set to %d. Legal values is 0 to 15",CP_PCS_CH0_DEFAULT_RADDR);
    }

//initial config body87 end


//initial config body88 begin
    if (CP_PCS_CH0_MASTER_CHECK_OFFSET >= 0 &&  CP_PCS_CH0_MASTER_CHECK_OFFSET<= 15)
    {
        SC_PCS_CH0_MASTER_CHECK_OFFSET_255_252  :=  CP_PCS_CH0_MASTER_CHECK_OFFSET;
    }
    else
    {
        SC_PCS_CH0_MASTER_CHECK_OFFSET_255_252  :=  0;
        error("Setting Error : The CP_PCS_CH0_MASTER_CHECK_OFFSET is set to %d. Legal values is 0 to 15",CP_PCS_CH0_MASTER_CHECK_OFFSET);
    }

//initial config body88 end


//initial config body89 begin
    if (CP_PCS_CH0_DELAY_SET >= 0 &&  CP_PCS_CH0_DELAY_SET<= 15)
    {
        SC_PCS_CH0_DELAY_SET_259_256  :=  CP_PCS_CH0_DELAY_SET;
    }
    else
    {
        SC_PCS_CH0_DELAY_SET_259_256  :=  0;
        error("Setting Error : The CP_PCS_CH0_DELAY_SET is set to %d. Legal values is 0 to 15",CP_PCS_CH0_DELAY_SET);
    }

//initial config body89 end


//initial config body90 begin
    if (CP_PCS_CH0_SEACH_OFFSET == "20BIT")
    {
        SC_PCS_CH0_SEACH_OFFSET_262_260   := 3'd0;
    }
    else if (CP_PCS_CH0_SEACH_OFFSET == "30BIT")
    {
        SC_PCS_CH0_SEACH_OFFSET_262_260   := 3'd1;
    }
    else if (CP_PCS_CH0_SEACH_OFFSET == "40BIT")
    {
        SC_PCS_CH0_SEACH_OFFSET_262_260   := 3'd2;
    }
    else if (CP_PCS_CH0_SEACH_OFFSET == "50BIT")
    {
        SC_PCS_CH0_SEACH_OFFSET_262_260   := 3'd3;
    }
    else if (CP_PCS_CH0_SEACH_OFFSET == "60BIT")
    {
        SC_PCS_CH0_SEACH_OFFSET_262_260   := 3'd4;
    }
    else if (CP_PCS_CH0_SEACH_OFFSET == "70BIT")
    {
        SC_PCS_CH0_SEACH_OFFSET_262_260   := 3'd5;
    }
    else if (CP_PCS_CH0_SEACH_OFFSET == "80BIT")
    {
        SC_PCS_CH0_SEACH_OFFSET_262_260   := 3'd6;
    }
    else
    {
        SC_PCS_CH0_SEACH_OFFSET_262_260  :=  3'd0;
        error("Setting Error : The CP_PCS_CH0_SEACH_OFFSET is set to %s. Legal values is 20BIT,30BIT,40BIT,50BIT,60BIT,70BIT,80BIT",CP_PCS_CH0_SEACH_OFFSET);
    }

//initial config body90 end


//initial config body91 begin
    if (CP_PCS_CH0_CEB_RAPIDLS_MMAX >= 0 &&  CP_PCS_CH0_CEB_RAPIDLS_MMAX<= 7)
    {
        SC_PCS_CH0_CEB_RAPIDLS_MMAX_266_264  :=  CP_PCS_CH0_CEB_RAPIDLS_MMAX;
    }
    else
    {
        SC_PCS_CH0_CEB_RAPIDLS_MMAX_266_264  :=  0;
        error("Setting Error : The CP_PCS_CH0_CEB_RAPIDLS_MMAX is set to %d. Legal values is 0 to 7",CP_PCS_CH0_CEB_RAPIDLS_MMAX);
    }

//initial config body91 end


//initial config body92 begin
    if (CP_PCS_CH0_CTC_AFULL >= 0 &&  CP_PCS_CH0_CTC_AFULL<= 31)
    {
        SC_PCS_CH0_CTC_AFULL_276_272  :=  CP_PCS_CH0_CTC_AFULL;
    }
    else
    {
        SC_PCS_CH0_CTC_AFULL_276_272  :=  0;
        error("Setting Error : The CP_PCS_CH0_CTC_AFULL is set to %d. Legal values is 0 to 31",CP_PCS_CH0_CTC_AFULL);
    }

//initial config body92 end


//initial config body93 begin
    if (CP_PCS_CH0_CTC_AEMPTY >= 0 &&  CP_PCS_CH0_CTC_AEMPTY<= 31)
    {
        SC_PCS_CH0_CTC_AEMPTY_284_280  :=  CP_PCS_CH0_CTC_AEMPTY;
    }
    else
    {
        SC_PCS_CH0_CTC_AEMPTY_284_280  :=  0;
        error("Setting Error : The CP_PCS_CH0_CTC_AEMPTY is set to %d. Legal values is 0 to 31",CP_PCS_CH0_CTC_AEMPTY);
    }

//initial config body93 end


//initial config body94 begin
    if (CP_PCS_CH0_CTC_CONTI_SKP_SET >= 0 &&  CP_PCS_CH0_CTC_CONTI_SKP_SET<= 1)
    {
        SC_PCS_CH0_CTC_CONTI_SKP_SET_285  :=  CP_PCS_CH0_CTC_CONTI_SKP_SET;
    }
    else
    {
        SC_PCS_CH0_CTC_CONTI_SKP_SET_285  :=  0;
        error("Setting Error : The CP_PCS_CH0_CTC_CONTI_SKP_SET is set to %d. Legal values is 0 to 1",CP_PCS_CH0_CTC_CONTI_SKP_SET);
    }

//initial config body94 end


//initial config body95 begin
    if (CP_PCS_CH0_FAR_LOOP == "FALSE")
    {
        SC_PCS_CH0_FAR_LOOP_288   := 1'b0;
    }
    else if (CP_PCS_CH0_FAR_LOOP == "TRUE")
    {
        SC_PCS_CH0_FAR_LOOP_288   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_FAR_LOOP_288  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_FAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_FAR_LOOP);
    }

//initial config body95 end


//initial config body96 begin
    if (CP_PCS_CH0_NEAR_LOOP == "FALSE")
    {
        SC_PCS_CH0_NEAR_LOOP_289   := 1'b0;
    }
    else if (CP_PCS_CH0_NEAR_LOOP == "TRUE")
    {
        SC_PCS_CH0_NEAR_LOOP_289   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_NEAR_LOOP_289  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_NEAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_NEAR_LOOP);
    }

//initial config body96 end


//initial config body97 begin
    if (CP_PCS_CH0_REG_TX2RX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH0_REG_TX2RX_PLOOP_EN_290   := 1'b0;
    }
    else if (CP_PCS_CH0_REG_TX2RX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH0_REG_TX2RX_PLOOP_EN_290   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_REG_TX2RX_PLOOP_EN_290  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_REG_TX2RX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_REG_TX2RX_PLOOP_EN);
    }

//initial config body97 end


//initial config body98 begin
    if (CP_PCS_CH0_REG_TX2RX_SLOOP_EN == "FALSE")
    {
        SC_PCS_CH0_REG_TX2RX_SLOOP_EN_291   := 1'b0;
    }
    else if (CP_PCS_CH0_REG_TX2RX_SLOOP_EN == "TRUE")
    {
        SC_PCS_CH0_REG_TX2RX_SLOOP_EN_291   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_REG_TX2RX_SLOOP_EN_291  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_REG_TX2RX_SLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_REG_TX2RX_SLOOP_EN);
    }

//initial config body98 end


//initial config body99 begin
    if (CP_PCS_CH0_REG_RX2TX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH0_REG_RX2TX_PLOOP_EN_292   := 1'b0;
    }
    else if (CP_PCS_CH0_REG_RX2TX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH0_REG_RX2TX_PLOOP_EN_292   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_REG_RX2TX_PLOOP_EN_292  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_REG_RX2TX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_REG_RX2TX_PLOOP_EN);
    }

//initial config body99 end


//initial config body100 begin
    if (CP_PCS_CH0_INT_RX_MASK_0 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_MASK_0_296   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_MASK_0 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_MASK_0_296   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_MASK_0_296  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_MASK_0);
    }

//initial config body100 end


//initial config body101 begin
    if (CP_PCS_CH0_INT_RX_MASK_1 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_MASK_1_297   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_MASK_1 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_MASK_1_297   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_MASK_1_297  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_MASK_1);
    }

//initial config body101 end


//initial config body102 begin
    if (CP_PCS_CH0_INT_RX_MASK_2 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_MASK_2_298   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_MASK_2 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_MASK_2_298   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_MASK_2_298  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_MASK_2);
    }

//initial config body102 end


//initial config body103 begin
    if (CP_PCS_CH0_INT_RX_MASK_3 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_MASK_3_299   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_MASK_3 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_MASK_3_299   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_MASK_3_299  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_MASK_3 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_MASK_3);
    }

//initial config body103 end


//initial config body104 begin
    if (CP_PCS_CH0_INT_RX_MASK_4 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_MASK_4_300   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_MASK_4 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_MASK_4_300   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_MASK_4_300  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_MASK_4 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_MASK_4);
    }

//initial config body104 end


//initial config body105 begin
    if (CP_PCS_CH0_INT_RX_MASK_5 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_MASK_5_301   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_MASK_5 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_MASK_5_301   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_MASK_5_301  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_MASK_5 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_MASK_5);
    }

//initial config body105 end


//initial config body106 begin
    if (CP_PCS_CH0_INT_RX_MASK_6 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_MASK_6_302   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_MASK_6 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_MASK_6_302   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_MASK_6_302  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_MASK_6 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_MASK_6);
    }

//initial config body106 end


//initial config body107 begin
    if (CP_PCS_CH0_INT_RX_MASK_7 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_MASK_7_303   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_MASK_7 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_MASK_7_303   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_MASK_7_303  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_MASK_7 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_MASK_7);
    }

//initial config body107 end


//initial config body108 begin
    if (CP_PCS_CH0_INT_RX_CLR_0 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_CLR_0_304   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_CLR_0 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_CLR_0_304   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_CLR_0_304  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_CLR_0);
    }

//initial config body108 end


//initial config body109 begin
    if (CP_PCS_CH0_INT_RX_CLR_1 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_CLR_1_305   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_CLR_1 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_CLR_1_305   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_CLR_1_305  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_CLR_1);
    }

//initial config body109 end


//initial config body110 begin
    if (CP_PCS_CH0_INT_RX_CLR_2 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_CLR_2_306   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_CLR_2 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_CLR_2_306   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_CLR_2_306  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_CLR_2);
    }

//initial config body110 end


//initial config body111 begin
    if (CP_PCS_CH0_INT_RX_CLR_3 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_CLR_3_307   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_CLR_3 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_CLR_3_307   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_CLR_3_307  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_CLR_3 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_CLR_3);
    }

//initial config body111 end


//initial config body112 begin
    if (CP_PCS_CH0_INT_RX_CLR_4 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_CLR_4_308   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_CLR_4 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_CLR_4_308   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_CLR_4_308  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_CLR_4 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_CLR_4);
    }

//initial config body112 end


//initial config body113 begin
    if (CP_PCS_CH0_INT_RX_CLR_5 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_CLR_5_309   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_CLR_5 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_CLR_5_309   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_CLR_5_309  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_CLR_5 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_CLR_5);
    }

//initial config body113 end


//initial config body114 begin
    if (CP_PCS_CH0_INT_RX_CLR_6 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_CLR_6_310   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_CLR_6 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_CLR_6_310   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_CLR_6_310  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_CLR_6 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_CLR_6);
    }

//initial config body114 end


//initial config body115 begin
    if (CP_PCS_CH0_INT_RX_CLR_7 == "FALSE")
    {
        SC_PCS_CH0_INT_RX_CLR_7_311   := 1'b0;
    }
    else if (CP_PCS_CH0_INT_RX_CLR_7 == "TRUE")
    {
        SC_PCS_CH0_INT_RX_CLR_7_311   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_INT_RX_CLR_7_311  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_INT_RX_CLR_7 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_INT_RX_CLR_7);
    }

//initial config body115 end


//initial config body116 begin
    if (CP_PCS_CH0_CA_RSTN_RX == "FALSE")
    {
        SC_PCS_CH0_CA_RSTN_RX_312   := 1'b0;
    }
    else if (CP_PCS_CH0_CA_RSTN_RX == "TRUE")
    {
        SC_PCS_CH0_CA_RSTN_RX_312   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_CA_RSTN_RX_312  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_CA_RSTN_RX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_CA_RSTN_RX);
    }

//initial config body116 end


//initial config body117 begin
    if (CP_PCS_CH0_CA_DYN_DLY_EN_RX == "FALSE")
    {
        SC_PCS_CH0_CA_DYN_DLY_EN_RX_313   := 1'b0;
    }
    else if (CP_PCS_CH0_CA_DYN_DLY_EN_RX == "TRUE")
    {
        SC_PCS_CH0_CA_DYN_DLY_EN_RX_313   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_CA_DYN_DLY_EN_RX_313  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_CA_DYN_DLY_EN_RX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_CA_DYN_DLY_EN_RX);
    }

//initial config body117 end


//initial config body118 begin
    if (CP_PCS_CH0_CA_DYN_DLY_SEL_RX == "FALSE")
    {
        SC_PCS_CH0_CA_DYN_DLY_SEL_RX_314   := 1'b0;
    }
    else if (CP_PCS_CH0_CA_DYN_DLY_SEL_RX == "TRUE")
    {
        SC_PCS_CH0_CA_DYN_DLY_SEL_RX_314   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_CA_DYN_DLY_SEL_RX_314  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_CA_DYN_DLY_SEL_RX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_CA_DYN_DLY_SEL_RX);
    }

//initial config body118 end


//initial config body119 begin
    if (CP_PCS_CH0_CA_RX >= 0 &&  CP_PCS_CH0_CA_RX <= 255)
    {
        SC_PCS_CH0_CA_RX_322_315  :=  CP_PCS_CH0_CA_RX;
    }
    else
    {
        SC_PCS_CH0_CA_RX_322_315  :=  0;
        error("Setting Error : The CP_PCS_CH0_CA_RX is set to %d. Legal values is 0 to 255",CP_PCS_CH0_CA_RX);
    }

//initial config body119 end


//initial config body120 begin
    if (CP_PCS_CH0_CA_RSTN_TX == "FALSE")
    {
        SC_PCS_CH0_CA_RSTN_TX_323   := 1'b0;
    }
    else if (CP_PCS_CH0_CA_RSTN_TX == "TRUE")
    {
        SC_PCS_CH0_CA_RSTN_TX_323   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_CA_RSTN_TX_323  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_CA_RSTN_TX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_CA_RSTN_TX);
    }

//initial config body120 end


//initial config body121 begin
    if (CP_PCS_CH0_CA_DYN_DLY_EN_TX == "FALSE")
    {
        SC_PCS_CH0_CA_DYN_DLY_EN_TX_324   := 1'b0;
    }
    else if (CP_PCS_CH0_CA_DYN_DLY_EN_TX == "TRUE")
    {
        SC_PCS_CH0_CA_DYN_DLY_EN_TX_324   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_CA_DYN_DLY_EN_TX_324  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_CA_DYN_DLY_EN_TX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_CA_DYN_DLY_EN_TX);
    }

//initial config body121 end


//initial config body122 begin
    if (CP_PCS_CH0_CA_DYN_DLY_SEL_TX == "FALSE")
    {
        SC_PCS_CH0_CA_DYN_DLY_SEL_TX_325   := 1'b0;
    }
    else if (CP_PCS_CH0_CA_DYN_DLY_SEL_TX == "TRUE")
    {
        SC_PCS_CH0_CA_DYN_DLY_SEL_TX_325   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_CA_DYN_DLY_SEL_TX_325  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_CA_DYN_DLY_SEL_TX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_CA_DYN_DLY_SEL_TX);
    }

//initial config body122 end


//initial config body123 begin
    if (CP_PCS_CH0_CA_TX >= 0 &&  CP_PCS_CH0_CA_TX <= 255)
    {
        SC_PCS_CH0_CA_TX_333_326  :=  CP_PCS_CH0_CA_TX;
    }
    else
    {
        SC_PCS_CH0_CA_TX_333_326  :=  0;
        error("Setting Error : The CP_PCS_CH0_CA_TX is set to %d. Legal values is 0 to 255",CP_PCS_CH0_CA_TX);
    }

//initial config body123 end


//initial config body124 begin
    if (CP_PCS_CH0_RXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH0_RXPRBS_PWR_REDUCTION_334   := 1'b0;
    }
    else if (CP_PCS_CH0_RXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH0_RXPRBS_PWR_REDUCTION_334   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_RXPRBS_PWR_REDUCTION_334  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_RXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH0_RXPRBS_PWR_REDUCTION);
    }

//initial config body124 end


//initial config body125 begin
    if (CP_PCS_CH0_WDALIGN_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH0_WDALIGN_PWR_REDUCTION_335   := 1'b0;
    }
    else if (CP_PCS_CH0_WDALIGN_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH0_WDALIGN_PWR_REDUCTION_335   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_WDALIGN_PWR_REDUCTION_335  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_WDALIGN_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH0_WDALIGN_PWR_REDUCTION);
    }

//initial config body125 end


//initial config body126 begin
    if (CP_PCS_CH0_RXDEC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH0_RXDEC_PWR_REDUCTION_336   := 1'b0;
    }
    else if (CP_PCS_CH0_RXDEC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH0_RXDEC_PWR_REDUCTION_336   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_RXDEC_PWR_REDUCTION_336  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_RXDEC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH0_RXDEC_PWR_REDUCTION);
    }

//initial config body126 end


//initial config body127 begin
    if (CP_PCS_CH0_RXCB_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH0_RXCB_PWR_REDUCTION_337   := 1'b0;
    }
    else if (CP_PCS_CH0_RXCB_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH0_RXCB_PWR_REDUCTION_337   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_RXCB_PWR_REDUCTION_337  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_RXCB_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH0_RXCB_PWR_REDUCTION);
    }

//initial config body127 end


//initial config body128 begin
    if (CP_PCS_CH0_RXCTC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH0_RXCTC_PWR_REDUCTION_338   := 1'b0;
    }
    else if (CP_PCS_CH0_RXCTC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH0_RXCTC_PWR_REDUCTION_338   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_RXCTC_PWR_REDUCTION_338  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_RXCTC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH0_RXCTC_PWR_REDUCTION);
    }

//initial config body128 end


//initial config body129 begin
    if (CP_PCS_CH0_RXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH0_RXGEAR_PWR_REDUCTION_339   := 1'b0;
    }
    else if (CP_PCS_CH0_RXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH0_RXGEAR_PWR_REDUCTION_339   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_RXGEAR_PWR_REDUCTION_339  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_RXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH0_RXGEAR_PWR_REDUCTION);
    }

//initial config body129 end


//initial config body130 begin
    if (CP_PCS_CH0_RXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH0_RXBRG_PWR_REDUCTION_340   := 1'b0;
    }
    else if (CP_PCS_CH0_RXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH0_RXBRG_PWR_REDUCTION_340   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_RXBRG_PWR_REDUCTION_340  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_RXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH0_RXBRG_PWR_REDUCTION);
    }

//initial config body130 end


//initial config body131 begin
    if (CP_PCS_CH0_RXTEST_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH0_RXTEST_PWR_REDUCTION_341   := 1'b0;
    }
    else if (CP_PCS_CH0_RXTEST_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH0_RXTEST_PWR_REDUCTION_341   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_RXTEST_PWR_REDUCTION_341  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_RXTEST_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH0_RXTEST_PWR_REDUCTION);
    }

//initial config body131 end


//initial config body132 begin
    if (CP_PCS_CH0_TXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH0_TXBRG_PWR_REDUCTION_342   := 1'b0;
    }
    else if (CP_PCS_CH0_TXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH0_TXBRG_PWR_REDUCTION_342   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TXBRG_PWR_REDUCTION_342  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH0_TXBRG_PWR_REDUCTION);
    }

//initial config body132 end


//initial config body133 begin
    if (CP_PCS_CH0_TXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH0_TXGEAR_PWR_REDUCTION_343   := 1'b0;
    }
    else if (CP_PCS_CH0_TXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH0_TXGEAR_PWR_REDUCTION_343   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TXGEAR_PWR_REDUCTION_343  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH0_TXGEAR_PWR_REDUCTION);
    }

//initial config body133 end


//initial config body134 begin
    if (CP_PCS_CH0_TXENC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH0_TXENC_PWR_REDUCTION_344   := 1'b0;
    }
    else if (CP_PCS_CH0_TXENC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH0_TXENC_PWR_REDUCTION_344   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TXENC_PWR_REDUCTION_344  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TXENC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH0_TXENC_PWR_REDUCTION);
    }

//initial config body134 end


//initial config body135 begin
    if (CP_PCS_CH0_TXBSLP_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH0_TXBSLP_PWR_REDUCTION_345   := 1'b0;
    }
    else if (CP_PCS_CH0_TXBSLP_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH0_TXBSLP_PWR_REDUCTION_345   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TXBSLP_PWR_REDUCTION_345  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TXBSLP_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH0_TXBSLP_PWR_REDUCTION);
    }

//initial config body135 end


//initial config body136 begin
    if (CP_PCS_CH0_TXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH0_TXPRBS_PWR_REDUCTION_346   := 1'b0;
    }
    else if (CP_PCS_CH0_TXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH0_TXPRBS_PWR_REDUCTION_346   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TXPRBS_PWR_REDUCTION_346  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH0_TXPRBS_PWR_REDUCTION);
    }

//initial config body136 end


//initial config body137 begin
    if (CP_PCS_CH0_TXBRG_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH0_TXBRG_FULL_CHK_EN_347   := 1'b0;
    }
    else if (CP_PCS_CH0_TXBRG_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH0_TXBRG_FULL_CHK_EN_347   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TXBRG_FULL_CHK_EN_347  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TXBRG_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TXBRG_FULL_CHK_EN);
    }

//initial config body137 end


//initial config body138 begin
    if (CP_PCS_CH0_TXBRG_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH0_TXBRG_EMPTY_CHK_EN_348   := 1'b0;
    }
    else if (CP_PCS_CH0_TXBRG_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH0_TXBRG_EMPTY_CHK_EN_348   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_TXBRG_EMPTY_CHK_EN_348  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_TXBRG_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_TXBRG_EMPTY_CHK_EN);
    }

//initial config body138 end


//initial config body139 begin
    if (CP_PCS_CH0_RXBRG_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH0_RXBRG_FULL_CHK_EN_349   := 1'b0;
    }
    else if (CP_PCS_CH0_RXBRG_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH0_RXBRG_FULL_CHK_EN_349   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_RXBRG_FULL_CHK_EN_349  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_RXBRG_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_RXBRG_FULL_CHK_EN);
    }

//initial config body139 end


//initial config body140 begin
    if (CP_PCS_CH0_RXBRG_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH0_RXBRG_EMPTY_CHK_EN_350   := 1'b0;
    }
    else if (CP_PCS_CH0_RXBRG_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH0_RXBRG_EMPTY_CHK_EN_350   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_RXBRG_EMPTY_CHK_EN_350  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_RXBRG_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_RXBRG_EMPTY_CHK_EN);
    }

//initial config body140 end


//initial config body141 begin
    if (CP_PCS_CH0_CTC_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH0_CTC_FULL_CHK_EN_351   := 1'b0;
    }
    else if (CP_PCS_CH0_CTC_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH0_CTC_FULL_CHK_EN_351   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_CTC_FULL_CHK_EN_351  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_CTC_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_CTC_FULL_CHK_EN);
    }

//initial config body141 end


//initial config body142 begin
    if (CP_PCS_CH0_CTC_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH0_CTC_EMPTY_CHK_EN_352   := 1'b0;
    }
    else if (CP_PCS_CH0_CTC_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH0_CTC_EMPTY_CHK_EN_352   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_CTC_EMPTY_CHK_EN_352  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_CTC_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_CTC_EMPTY_CHK_EN);
    }

//initial config body142 end


//initial config body143 begin
    if (CP_PCS_CH0_CEB_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH0_CEB_FULL_CHK_EN_353   := 1'b0;
    }
    else if (CP_PCS_CH0_CEB_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH0_CEB_FULL_CHK_EN_353   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_CEB_FULL_CHK_EN_353  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_CEB_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_CEB_FULL_CHK_EN);
    }

//initial config body143 end


//initial config body144 begin
    if (CP_PCS_CH0_CEB_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH0_CEB_EMPTY_CHK_EN_354   := 1'b0;
    }
    else if (CP_PCS_CH0_CEB_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH0_CEB_EMPTY_CHK_EN_354   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_CEB_EMPTY_CHK_EN_354  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_CEB_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_CEB_EMPTY_CHK_EN);
    }

//initial config body144 end


//initial config body145 begin
    if (CP_PCS_CH0_FLP_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH0_FLP_FULL_CHK_EN_355   := 1'b0;
    }
    else if (CP_PCS_CH0_FLP_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH0_FLP_FULL_CHK_EN_355   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_FLP_FULL_CHK_EN_355  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_FLP_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_FLP_FULL_CHK_EN);
    }

//initial config body145 end


//initial config body146 begin
    if (CP_PCS_CH0_FLP_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH0_FLP_EMPTY_CHK_EN_356   := 1'b0;
    }
    else if (CP_PCS_CH0_FLP_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH0_FLP_EMPTY_CHK_EN_356   := 1'b1;
    }
    else
    {
        SC_PCS_CH0_FLP_EMPTY_CHK_EN_356  :=  1'b0;
        error("Setting Error : The CP_PCS_CH0_FLP_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH0_FLP_EMPTY_CHK_EN);
    }

//initial config body146 end


//initial config body147 begin
    if (CP_PCS_CH1_BYPASS_WORD_ALIGN == "FALSE")
    {
        SC_PCS_CH1_BYPASS_WORD_ALIGN_1   := 1'b0;
    }
    else if (CP_PCS_CH1_BYPASS_WORD_ALIGN == "TRUE")
    {
        SC_PCS_CH1_BYPASS_WORD_ALIGN_1   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_BYPASS_WORD_ALIGN_1  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_BYPASS_WORD_ALIGN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_BYPASS_WORD_ALIGN);
    }

//initial config body147 end


//initial config body148 begin
    if (CP_PCS_CH1_BYPASS_DENC == "FALSE")
    {
        SC_PCS_CH1_BYPASS_DENC_2   := 1'b0;
    }
    else if (CP_PCS_CH1_BYPASS_DENC == "TRUE")
    {
        SC_PCS_CH1_BYPASS_DENC_2   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_BYPASS_DENC_2  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_BYPASS_DENC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_BYPASS_DENC);
    }

//initial config body148 end


//initial config body149 begin
    if (CP_PCS_CH1_BYPASS_BONDING == "FALSE")
    {
        SC_PCS_CH1_BYPASS_BONDING_3   := 1'b0;
    }
    else if (CP_PCS_CH1_BYPASS_BONDING == "TRUE")
    {
        SC_PCS_CH1_BYPASS_BONDING_3   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_BYPASS_BONDING_3  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_BYPASS_BONDING is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_BYPASS_BONDING);
    }

//initial config body149 end


//initial config body150 begin
    if (CP_PCS_CH1_BYPASS_CTC == "FALSE")
    {
        SC_PCS_CH1_BYPASS_CTC_4   := 1'b0;
    }
    else if (CP_PCS_CH1_BYPASS_CTC == "TRUE")
    {
        SC_PCS_CH1_BYPASS_CTC_4   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_BYPASS_CTC_4  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_BYPASS_CTC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_BYPASS_CTC);
    }

//initial config body150 end


//initial config body151 begin
    if (CP_PCS_CH1_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH1_BYPASS_GEAR_5   := 1'b0;
    }
    else if (CP_PCS_CH1_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH1_BYPASS_GEAR_5   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_BYPASS_GEAR_5  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_BYPASS_GEAR);
    }

//initial config body151 end


//initial config body152 begin
    if (CP_PCS_CH1_BYPASS_BRIDGE == "FALSE")
    {
        SC_PCS_CH1_BYPASS_BRIDGE_6   := 1'b0;
    }
    else if (CP_PCS_CH1_BYPASS_BRIDGE == "TRUE")
    {
        SC_PCS_CH1_BYPASS_BRIDGE_6   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_BYPASS_BRIDGE_6  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_BYPASS_BRIDGE is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_BYPASS_BRIDGE);
    }

//initial config body152 end


//initial config body153 begin
    if (CP_PCS_CH1_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH1_BYPASS_BRIDGE_FIFO_7   := 1'b0;
    }
    else if (CP_PCS_CH1_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH1_BYPASS_BRIDGE_FIFO_7   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_BYPASS_BRIDGE_FIFO_7  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_BYPASS_BRIDGE_FIFO);
    }

//initial config body153 end


//initial config body154 begin
    if (CP_PCS_CH1_DATA_MODE == "X8")
    {
        SC_PCS_CH1_DATA_MODE_8   := 1'b0;
    }
    else if (CP_PCS_CH1_DATA_MODE == "X10")
    {
        SC_PCS_CH1_DATA_MODE_8   := 1'b0;
    }
    else if (CP_PCS_CH1_DATA_MODE == "X16")
    {
        SC_PCS_CH1_DATA_MODE_8   := 1'b1;
    }
    else if (CP_PCS_CH1_DATA_MODE == "X20")
    {
        SC_PCS_CH1_DATA_MODE_8   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_DATA_MODE_8  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_DATA_MODE is set to %s. Legal values is X8,X10,X16,X20",CP_PCS_CH1_DATA_MODE);
    }

//initial config body154 end


//initial config body155 begin
    if (CP_PCS_CH1_RX_POLARITY_INV == "DELAY")
    {
        SC_PCS_CH1_RX_POLARITY_INV_10_9   := 2'b00;
    }
    else if (CP_PCS_CH1_RX_POLARITY_INV == "BIT_POLARITY_INVERION")
    {
        SC_PCS_CH1_RX_POLARITY_INV_10_9   := 2'b01;
    }
    else if (CP_PCS_CH1_RX_POLARITY_INV == "BIT_REVERSAL")
    {
        SC_PCS_CH1_RX_POLARITY_INV_10_9   := 2'b10;
    }
    else if (CP_PCS_CH1_RX_POLARITY_INV == "BOTH")
    {
        SC_PCS_CH1_RX_POLARITY_INV_10_9   := 2'b11;
    }
    else
    {
        SC_PCS_CH1_RX_POLARITY_INV_10_9  :=  2'b00;
        error("Setting Error : The CP_PCS_CH1_RX_POLARITY_INV is set to %s. Legal values is DELAY,BIT_POLARITY_INVERION,BIT_REVERSAL,BOTH",CP_PCS_CH1_RX_POLARITY_INV);
    }

//initial config body155 end


//initial config body156 begin
    if (CP_PCS_CH1_ALIGN_MODE == "1GB")
    {
        SC_PCS_CH1_ALIGN_MODE_12_11   := 2'b00;
    }
    else if (CP_PCS_CH1_ALIGN_MODE == "10GB")
    {
        SC_PCS_CH1_ALIGN_MODE_12_11   := 2'b01;
    }
    else if (CP_PCS_CH1_ALIGN_MODE == "RAPIDIO")
    {
        SC_PCS_CH1_ALIGN_MODE_12_11   := 2'b10;
    }
    else if (CP_PCS_CH1_ALIGN_MODE == "OUTSIDE")
    {
        SC_PCS_CH1_ALIGN_MODE_12_11   := 2'b11;
    }
    else
    {
        SC_PCS_CH1_ALIGN_MODE_12_11  :=  2'b00;
        error("Setting Error : The CP_PCS_CH1_ALIGN_MODE is set to %s. Legal values is 1GB,10GB,RAPIDIO,OUTSIDE",CP_PCS_CH1_ALIGN_MODE);
    }

//initial config body156 end


//initial config body157 begin
    if (CP_PCS_CH1_SAMP_16B == "X16")
    {
        SC_PCS_CH1_SAMP_16B_13   := 1'b1;
    }
    else if (CP_PCS_CH1_SAMP_16B == "X20")
    {
        SC_PCS_CH1_SAMP_16B_13   := 1'b0;
    }
    else
    {
        SC_PCS_CH1_SAMP_16B_13  :=  1'b1;
        error("Setting Error : The CP_PCS_CH1_SAMP_16B is set to %s. Legal values is X16,X20",CP_PCS_CH1_SAMP_16B);
    }

//initial config body157 end


//initial config body158 begin
    if (CP_PCS_CH1_FARLP_PWR_REDUCTION == "FALSE")
    {
        SC_PCS_CH1_FARLP_PWR_REDUCTION_14   := 1'b0;
    }
    else if (CP_PCS_CH1_FARLP_PWR_REDUCTION == "TRUE")
    {
        SC_PCS_CH1_FARLP_PWR_REDUCTION_14   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_FARLP_PWR_REDUCTION_14  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_FARLP_PWR_REDUCTION is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_FARLP_PWR_REDUCTION);
    }

//initial config body158 end


//initial config body159 begin
    if (CP_PCS_CH1_COMMA_REG0 >= 0 &&  CP_PCS_CH1_COMMA_REG0<= 1023)
    {
        SC_PCS_CH1_COMMA_REG0_25_16  :=  CP_PCS_CH1_COMMA_REG0;
    }
    else
    {
        SC_PCS_CH1_COMMA_REG0_25_16  :=  0;
        error("Setting Error : The CP_PCS_CH1_COMMA_REG0 is set to %d. Legal values is 0 to 1023",CP_PCS_CH1_COMMA_REG0);
    }

//initial config body159 end


//initial config body160 begin
    if (CP_PCS_CH1_COMMA_MASK >= 0 &&  CP_PCS_CH1_COMMA_MASK<= 1023)
    {
        SC_PCS_CH1_COMMA_MASK_35_26  :=  CP_PCS_CH1_COMMA_MASK;
    }
    else
    {
        SC_PCS_CH1_COMMA_MASK_35_26  :=  0;
        error("Setting Error : The CP_PCS_CH1_COMMA_MASK is set to %d. Legal values is 0 to 1023",CP_PCS_CH1_COMMA_MASK);
    }

//initial config body160 end


//initial config body161 begin
    if (CP_PCS_CH1_CEB_MODE == "10GB")
    {
        SC_PCS_CH1_CEB_MODE_37_36   := 2'b00;
    }
    else if (CP_PCS_CH1_CEB_MODE == "RAPIDIO")
    {
        SC_PCS_CH1_CEB_MODE_37_36   := 2'b01;
    }
    else if (CP_PCS_CH1_CEB_MODE == "OUTSIDE")
    {
        SC_PCS_CH1_CEB_MODE_37_36   := 2'b10;
    }
    else
    {
        SC_PCS_CH1_CEB_MODE_37_36  :=  2'b00;
        error("Setting Error : The CP_PCS_CH1_CEB_MODE is set to %s. Legal values is 10GB,RAPIDIO,OUTSIDE",CP_PCS_CH1_CEB_MODE);
    }

//initial config body161 end


//initial config body162 begin
    if (CP_PCS_CH1_CTC_MODE == "1SKIP")
    {
        SC_PCS_CH1_CTC_MODE_39_38   := 2'b00;
    }
    else if (CP_PCS_CH1_CTC_MODE == "2SKIP")
    {
        SC_PCS_CH1_CTC_MODE_39_38   := 2'b01;
    }
    else if (CP_PCS_CH1_CTC_MODE == "PCIE_2BYTE")
    {
        SC_PCS_CH1_CTC_MODE_39_38   := 2'b10;
    }
    else if (CP_PCS_CH1_CTC_MODE == "4SKIP")
    {
        SC_PCS_CH1_CTC_MODE_39_38   := 2'b11;
    }
    else
    {
        SC_PCS_CH1_CTC_MODE_39_38  :=  2'b00;
        error("Setting Error : The CP_PCS_CH1_CTC_MODE is set to %s. Legal values is 1SKIP,2SKIP,PCIE_2BYTE,4SKIP",CP_PCS_CH1_CTC_MODE);
    }

//initial config body162 end


//initial config body163 begin
    if (CP_PCS_CH1_A_REG >= 0 &&  CP_PCS_CH1_A_REG<= 255)
    {
        SC_PCS_CH1_A_REG_47_40  :=  CP_PCS_CH1_A_REG;
    }
    else
    {
        SC_PCS_CH1_A_REG_47_40  :=  0;
        error("Setting Error : The CP_PCS_CH1_A_REG is set to %d. Legal values is 0 to 255",CP_PCS_CH1_A_REG);
    }

//initial config body163 end


//initial config body164 begin
    if (CP_PCS_CH1_GE_AUTO_EN == "FALSE")
    {
        SC_PCS_CH1_GE_AUTO_EN_49   := 1'b0;
    }
    else if (CP_PCS_CH1_GE_AUTO_EN == "TRUE")
    {
        SC_PCS_CH1_GE_AUTO_EN_49   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_GE_AUTO_EN_49  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_GE_AUTO_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_GE_AUTO_EN);
    }

//initial config body164 end


//initial config body165 begin
    if (CP_PCS_CH1_SKIP_REG0 >= 0 &&  CP_PCS_CH1_SKIP_REG0<= 1023)
    {
        SC_PCS_CH1_SKIP_REG0_59_50  :=  CP_PCS_CH1_SKIP_REG0;
    }
    else
    {
        SC_PCS_CH1_SKIP_REG0_59_50  :=  0;
        error("Setting Error : The CP_PCS_CH1_SKIP_REG0 is set to %d. Legal values is 0 to 1023",CP_PCS_CH1_SKIP_REG0);
    }

//initial config body165 end


//initial config body166 begin
    if (CP_PCS_CH1_SKIP_REG1 >= 0 &&  CP_PCS_CH1_SKIP_REG1<= 1023)
    {
        SC_PCS_CH1_SKIP_REG1_69_60  :=  CP_PCS_CH1_SKIP_REG1;
    }
    else
    {
        SC_PCS_CH1_SKIP_REG1_69_60  :=  0;
        error("Setting Error : The CP_PCS_CH1_SKIP_REG1 is set to %d. Legal values is 0 to 1023",CP_PCS_CH1_SKIP_REG1);
    }

//initial config body166 end


//initial config body167 begin
    if (CP_PCS_CH1_SKIP_REG2 >= 0 &&  CP_PCS_CH1_SKIP_REG2<= 1023)
    {
        SC_PCS_CH1_SKIP_REG2_79_70  :=  CP_PCS_CH1_SKIP_REG2;
    }
    else
    {
        SC_PCS_CH1_SKIP_REG2_79_70  :=  0;
        error("Setting Error : The CP_PCS_CH1_SKIP_REG2 is set to %d. Legal values is 0 to 1023",CP_PCS_CH1_SKIP_REG2);
    }

//initial config body167 end


//initial config body168 begin
    if (CP_PCS_CH1_SKIP_REG3 >= 0 &&  CP_PCS_CH1_SKIP_REG3<= 1023)
    {
        SC_PCS_CH1_SKIP_REG3_89_80  :=  CP_PCS_CH1_SKIP_REG3;
    }
    else
    {
        SC_PCS_CH1_SKIP_REG3_89_80  :=  0;
        error("Setting Error : The CP_PCS_CH1_SKIP_REG3 is set to %d. Legal values is 0 to 1023",CP_PCS_CH1_SKIP_REG3);
    }

//initial config body168 end


//initial config body169 begin
    if (CP_PCS_CH1_DEC_DUAL == "FALSE")
    {
        SC_PCS_CH1_DEC_DUAL_90   := 1'b0;
    }
    else if (CP_PCS_CH1_DEC_DUAL == "TRUE")
    {
        SC_PCS_CH1_DEC_DUAL_90   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_DEC_DUAL_90  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_DEC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_DEC_DUAL);
    }

//initial config body169 end


//initial config body170 begin
    if (CP_PCS_CH1_SPLIT == "FALSE")
    {
        SC_PCS_CH1_SPLIT_91   := 1'b0;
    }
    else if (CP_PCS_CH1_SPLIT == "TRUE")
    {
        SC_PCS_CH1_SPLIT_91   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_SPLIT_91  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_SPLIT);
    }

//initial config body170 end


//initial config body171 begin
    if (CP_PCS_CH1_FIFOFLAG_CTC == "FALSE")
    {
        SC_PCS_CH1_FIFOFLAG_CTC_92   := 1'b0;
    }
    else if (CP_PCS_CH1_FIFOFLAG_CTC == "TRUE")
    {
        SC_PCS_CH1_FIFOFLAG_CTC_92   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_FIFOFLAG_CTC_92  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_FIFOFLAG_CTC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_FIFOFLAG_CTC);
    }

//initial config body171 end


//initial config body172 begin
    if (CP_PCS_CH1_COMMA_DET_MODE == "COMMA_PATTERN")
    {
        SC_PCS_CH1_COMMA_DET_MODE_93   := 1'b0;
    }
    else if (CP_PCS_CH1_COMMA_DET_MODE == "RX_CLK_SLIP")
    {
        SC_PCS_CH1_COMMA_DET_MODE_93   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_COMMA_DET_MODE_93  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_COMMA_DET_MODE is set to %s. Legal values is COMMA_PATTERN,RX_CLK_SLIP",CP_PCS_CH1_COMMA_DET_MODE);
    }

//initial config body172 end


//initial config body173 begin
    if (CP_PCS_CH1_ERRDETECT_SILENCE == "FALSE")
    {
        SC_PCS_CH1_ERRDETECT_SILENCE_94   := 1'b0;
    }
    else if (CP_PCS_CH1_ERRDETECT_SILENCE == "TRUE")
    {
        SC_PCS_CH1_ERRDETECT_SILENCE_94   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_ERRDETECT_SILENCE_94  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_ERRDETECT_SILENCE is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_ERRDETECT_SILENCE);
    }

//initial config body173 end


//initial config body174 begin
    if (CP_PCS_CH1_PMA_RCLK_POLINV == "PMA_RCLK")
    {
        SC_PCS_CH1_PMA_RCLK_POLINV_96   := 1'b0;
    }
    else if (CP_PCS_CH1_PMA_RCLK_POLINV == "REVERSE_OF_PMA_RCLK")
    {
        SC_PCS_CH1_PMA_RCLK_POLINV_96   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_PMA_RCLK_POLINV_96  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_PMA_RCLK_POLINV is set to %s. Legal values is PMA_RCLK,REVERSE_OF_PMA_RCLK",CP_PCS_CH1_PMA_RCLK_POLINV);
    }

//initial config body174 end


//initial config body175 begin
    if (CP_PCS_CH1_PCS_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH1_PCS_RCLK_SEL_98_97   := 2'b00;
    }
    else if (CP_PCS_CH1_PCS_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH1_PCS_RCLK_SEL_98_97   := 2'b01;
    }
    else if (CP_PCS_CH1_PCS_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH1_PCS_RCLK_SEL_98_97   := 2'b11;
    }
    else
    {
        SC_PCS_CH1_PCS_RCLK_SEL_98_97  :=  2'b00;
        error("Setting Error : The CP_PCS_CH1_PCS_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK",CP_PCS_CH1_PCS_RCLK_SEL);
    }

//initial config body175 end


//initial config body176 begin
    if (CP_PCS_CH1_CB_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH1_CB_RCLK_SEL_100_99   := 2'b00;
    }
    else if (CP_PCS_CH1_CB_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH1_CB_RCLK_SEL_100_99   := 2'b01;
    }
    else if (CP_PCS_CH1_CB_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH1_CB_RCLK_SEL_100_99   := 2'b10;
    }
    else if (CP_PCS_CH1_CB_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH1_CB_RCLK_SEL_100_99   := 2'b11;
    }
    else
    {
        SC_PCS_CH1_CB_RCLK_SEL_100_99  :=  2'b00;
        error("Setting Error : The CP_PCS_CH1_CB_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK",CP_PCS_CH1_CB_RCLK_SEL);
    }

//initial config body176 end


//initial config body177 begin
    if (CP_PCS_CH1_AFTER_CTC_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_SEL_102_101   := 2'b00;
    }
    else if (CP_PCS_CH1_AFTER_CTC_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_SEL_102_101   := 2'b01;
    }
    else if (CP_PCS_CH1_AFTER_CTC_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_SEL_102_101   := 2'b10;
    }
    else if (CP_PCS_CH1_AFTER_CTC_RCLK_SEL == "RCLK2")
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_SEL_102_101   := 2'b11;
    }
    else
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_SEL_102_101  :=  2'b00;
        error("Setting Error : The CP_PCS_CH1_AFTER_CTC_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK2",CP_PCS_CH1_AFTER_CTC_RCLK_SEL);
    }

//initial config body177 end


//initial config body178 begin
    if (CP_PCS_CH1_RCLK_POLINV == "RCLK")
    {
        SC_PCS_CH1_RCLK_POLINV_103   := 1'b0;
    }
    else if (CP_PCS_CH1_RCLK_POLINV == "REVERSE_OF_RCLK")
    {
        SC_PCS_CH1_RCLK_POLINV_103   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_RCLK_POLINV_103  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_RCLK_POLINV is set to %s. Legal values is RCLK,REVERSE_OF_RCLK",CP_PCS_CH1_RCLK_POLINV);
    }

//initial config body178 end


//initial config body179 begin
    if (CP_PCS_CH1_BRIDGE_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH1_BRIDGE_RCLK_SEL_105_104   := 2'b00;
    }
    else if (CP_PCS_CH1_BRIDGE_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH1_BRIDGE_RCLK_SEL_105_104   := 2'b01;
    }
    else if (CP_PCS_CH1_BRIDGE_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH1_BRIDGE_RCLK_SEL_105_104   := 2'b10;
    }
    else if (CP_PCS_CH1_BRIDGE_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH1_BRIDGE_RCLK_SEL_105_104   := 2'b11;
    }
    else
    {
        SC_PCS_CH1_BRIDGE_RCLK_SEL_105_104  :=  2'b00;
        error("Setting Error : The CP_PCS_CH1_BRIDGE_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK",CP_PCS_CH1_BRIDGE_RCLK_SEL);
    }

//initial config body179 end


//initial config body180 begin
    if (CP_PCS_CH1_PCS_RCLK_EN == "FALSE")
    {
        SC_PCS_CH1_PCS_RCLK_EN_106   := 1'b0;
    }
    else if (CP_PCS_CH1_PCS_RCLK_EN == "TRUE")
    {
        SC_PCS_CH1_PCS_RCLK_EN_106   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_PCS_RCLK_EN_106  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_PCS_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_PCS_RCLK_EN);
    }

//initial config body180 end


//initial config body181 begin
    if (CP_PCS_CH1_CB_RCLK_EN == "FALSE")
    {
        SC_PCS_CH1_CB_RCLK_EN_107   := 1'b0;
    }
    else if (CP_PCS_CH1_CB_RCLK_EN == "TRUE")
    {
        SC_PCS_CH1_CB_RCLK_EN_107   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_CB_RCLK_EN_107  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_CB_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_CB_RCLK_EN);
    }

//initial config body181 end


//initial config body182 begin
    if (CP_PCS_CH1_AFTER_CTC_RCLK_EN == "FALSE")
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_EN_108   := 1'b0;
    }
    else if (CP_PCS_CH1_AFTER_CTC_RCLK_EN == "TRUE")
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_EN_108   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_EN_108  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_AFTER_CTC_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_AFTER_CTC_RCLK_EN);
    }

//initial config body182 end


//initial config body183 begin
    if (CP_PCS_CH1_AFTER_CTC_RCLK_EN_GB == "FALSE")
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_EN_GB_109   := 1'b0;
    }
    else if (CP_PCS_CH1_AFTER_CTC_RCLK_EN_GB == "TRUE")
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_EN_GB_109   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_EN_GB_109  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_AFTER_CTC_RCLK_EN_GB is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_AFTER_CTC_RCLK_EN_GB);
    }

//initial config body183 end


//initial config body184 begin
    if (CP_PCS_CH1_AFTER_CTC_RCLK_SEL_1 == "PMA_RCLK")
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b00;
    }
    else if (CP_PCS_CH1_AFTER_CTC_RCLK_SEL_1 == "PMA_TCLK")
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b01;
    }
    else if (CP_PCS_CH1_AFTER_CTC_RCLK_SEL_1 == "MCB_RCLK")
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b10;
    }
    else if (CP_PCS_CH1_AFTER_CTC_RCLK_SEL_1 == "RCLK2")
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b11;
    }
    else
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_SEL_1_111_110  :=  2'b00;
        error("Setting Error : The CP_PCS_CH1_AFTER_CTC_RCLK_SEL_1 is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK2",CP_PCS_CH1_AFTER_CTC_RCLK_SEL_1);
    }

//initial config body184 end


//initial config body185 begin
    if (CP_PCS_CH1_PCS_RX_RSTN == "FALSE")
    {
        SC_PCS_CH1_PCS_RX_RSTN_112   := 1'b0;
    }
    else if (CP_PCS_CH1_PCS_RX_RSTN == "TRUE")
    {
        SC_PCS_CH1_PCS_RX_RSTN_112   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_PCS_RX_RSTN_112  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_PCS_RX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_PCS_RX_RSTN);
    }

//initial config body185 end


//initial config body186 begin
    if (CP_PCS_CH1_SLAVE == "MASTER")
    {
        SC_PCS_CH1_SLAVE_113   := 1'b0;
    }
    else if (CP_PCS_CH1_SLAVE == "SLAVE")
    {
        SC_PCS_CH1_SLAVE_113   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_SLAVE_113  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_PCS_CH1_SLAVE);
    }

//initial config body186 end


//initial config body187 begin
    if (CP_PCS_CH1_PCIE_SLAVE == "MASTER")
    {
        SC_PCS_CH1_PCIE_SLAVE_114   := 1'b0;
    }
    else if (CP_PCS_CH1_PCIE_SLAVE == "SLAVE")
    {
        SC_PCS_CH1_PCIE_SLAVE_114   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_PCIE_SLAVE_114  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_PCIE_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_PCS_CH1_PCIE_SLAVE);
    }

//initial config body187 end


//initial config body188 begin
    if (CP_PCS_CH1_RX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH1_RX_64B66B_67B_116_115  :=  2'b00;
    }
    else if (CP_PCS_CH1_RX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH1_RX_64B66B_67B_116_115  :=  2'b01;
    }
    else if (CP_PCS_CH1_RX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH1_RX_64B66B_67B_116_115  :=  2'b11;
    }
    else
    {
        SC_PCS_CH1_RX_64B66B_67B_116_115  :=  2'b00;
        error("Setting Error : The CP_PCS_CH1_RX_64B66B_67B is set to %d. Legal values is NORMAL,64B_66B,64B_67B",CP_PCS_CH1_RX_64B66B_67B);
    }

//initial config body188 end


//initial config body189 begin
    if (CP_PCS_CH1_RX_BRIDGE_CLK_POLINV == "RX_BRIDGE_CLK")
    {
        SC_PCS_CH1_RX_BRIDGE_CLK_POLINV_117   := 1'b0;
    }
    else if (CP_PCS_CH1_RX_BRIDGE_CLK_POLINV == "REVERSE_OF_RX_BRIDGE_CLK")
    {
        SC_PCS_CH1_RX_BRIDGE_CLK_POLINV_117   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_RX_BRIDGE_CLK_POLINV_117  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_RX_BRIDGE_CLK_POLINV is set to %s. Legal values is RX_BRIDGE_CLK,REVERSE_OF_RX_BRIDGE_CLK",CP_PCS_CH1_RX_BRIDGE_CLK_POLINV);
    }

//initial config body189 end


//initial config body190 begin
    if (CP_PCS_CH1_AFTER_CTC_RCLK_EN_GB_1 == "FALSE")
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_EN_GB_1_118   := 1'b0;
    }
    else if (CP_PCS_CH1_AFTER_CTC_RCLK_EN_GB_1 == "TRUE")
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_EN_GB_1_118   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_AFTER_CTC_RCLK_EN_GB_1_118  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_AFTER_CTC_RCLK_EN_GB_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_AFTER_CTC_RCLK_EN_GB_1);
    }

//initial config body190 end


//initial config body191 begin
    if (CP_PCS_CH1_PCS_CB_RSTN == "FALSE")
    {
        SC_PCS_CH1_PCS_CB_RSTN_120   := 1'b0;
    }
    else if (CP_PCS_CH1_PCS_CB_RSTN == "TRUE")
    {
        SC_PCS_CH1_PCS_CB_RSTN_120   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_PCS_CB_RSTN_120  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_PCS_CB_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_PCS_CB_RSTN);
    }

//initial config body191 end


//initial config body192 begin
    if (CP_PCS_CH1_TX_BRIDGE_GEAR_SEL == "FALSE")
    {
        SC_PCS_CH1_TX_BRIDGE_GEAR_SEL_128   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_BRIDGE_GEAR_SEL == "TRUE")
    {
        SC_PCS_CH1_TX_BRIDGE_GEAR_SEL_128   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_BRIDGE_GEAR_SEL_128  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_BRIDGE_GEAR_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TX_BRIDGE_GEAR_SEL);
    }

//initial config body192 end


//initial config body193 begin
    if (CP_PCS_CH1_TX_BYPASS_BRIDGE_UINT == "FALSE")
    {
        SC_PCS_CH1_TX_BYPASS_BRIDGE_UINT_129   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_BYPASS_BRIDGE_UINT == "TRUE")
    {
        SC_PCS_CH1_TX_BYPASS_BRIDGE_UINT_129   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_BYPASS_BRIDGE_UINT_129  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_BYPASS_BRIDGE_UINT is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TX_BYPASS_BRIDGE_UINT);
    }

//initial config body193 end


//initial config body194 begin
    if (CP_PCS_CH1_TX_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH1_TX_BYPASS_BRIDGE_FIFO_130   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH1_TX_BYPASS_BRIDGE_FIFO_130   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_BYPASS_BRIDGE_FIFO_130  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TX_BYPASS_BRIDGE_FIFO);
    }

//initial config body194 end


//initial config body195 begin
    if (CP_PCS_CH1_TX_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH1_TX_BYPASS_GEAR_131   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH1_TX_BYPASS_GEAR_131   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_BYPASS_GEAR_131  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TX_BYPASS_GEAR);
    }

//initial config body195 end


//initial config body196 begin
    if (CP_PCS_CH1_TX_BYPASS_ENC == "FALSE")
    {
        SC_PCS_CH1_TX_BYPASS_ENC_132   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_BYPASS_ENC == "TRUE")
    {
        SC_PCS_CH1_TX_BYPASS_ENC_132   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_BYPASS_ENC_132  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_BYPASS_ENC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TX_BYPASS_ENC);
    }

//initial config body196 end


//initial config body197 begin
    if (CP_PCS_CH1_TX_BYPASS_BIT_SLIP == "FALSE")
    {
        SC_PCS_CH1_TX_BYPASS_BIT_SLIP_133   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_BYPASS_BIT_SLIP == "TRUE")
    {
        SC_PCS_CH1_TX_BYPASS_BIT_SLIP_133   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_BYPASS_BIT_SLIP_133  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_BYPASS_BIT_SLIP is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TX_BYPASS_BIT_SLIP);
    }

//initial config body197 end


//initial config body198 begin
    if (CP_PCS_CH1_TX_GEAR_SPLIT == "FALSE")
    {
        SC_PCS_CH1_TX_GEAR_SPLIT_136   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_GEAR_SPLIT == "TRUE")
    {
        SC_PCS_CH1_TX_GEAR_SPLIT_136   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_GEAR_SPLIT_136  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_GEAR_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TX_GEAR_SPLIT);
    }

//initial config body198 end


//initial config body199 begin
    if (CP_PCS_CH1_TX_DRIVE_REG_MODE == "NO_CHANGE")
    {
        SC_PCS_CH1_TX_DRIVE_REG_MODE_138_137   := 2'b00;
    }
    else if (CP_PCS_CH1_TX_DRIVE_REG_MODE == "EN_POLARIY_REV")
    {
        SC_PCS_CH1_TX_DRIVE_REG_MODE_138_137   := 2'b01;
    }
    else if (CP_PCS_CH1_TX_DRIVE_REG_MODE == "EN_BIT_REV")
    {
        SC_PCS_CH1_TX_DRIVE_REG_MODE_138_137   := 2'b10;
    }
    else if (CP_PCS_CH1_TX_DRIVE_REG_MODE == "EN_BOTH")
    {
        SC_PCS_CH1_TX_DRIVE_REG_MODE_138_137   := 2'b11;
    }
    else
    {
        SC_PCS_CH1_TX_DRIVE_REG_MODE_138_137  :=  2'b00;
        error("Setting Error : The CP_PCS_CH1_TX_DRIVE_REG_MODE is set to %s. Legal values is NO_CHANGE,EN_POLARIY_REV,EN_BIT_REV,EN_BOTH",CP_PCS_CH1_TX_DRIVE_REG_MODE);
    }

//initial config body199 end


//initial config body200 begin
    if (CP_PCS_CH1_TX_BIT_SLIP_CYCLES >= 0 &&  CP_PCS_CH1_TX_BIT_SLIP_CYCLES<= 31)
    {
        SC_PCS_CH1_TX_BIT_SLIP_CYCLES_143_139  :=  CP_PCS_CH1_TX_BIT_SLIP_CYCLES;
    }
    else
    {
        SC_PCS_CH1_TX_BIT_SLIP_CYCLES_143_139  :=  0;
        error("Setting Error : The CP_PCS_CH1_TX_BIT_SLIP_CYCLES is set to %d. Legal values is 0 to 31",CP_PCS_CH1_TX_BIT_SLIP_CYCLES);
    }

//initial config body200 end


//initial config body201 begin
    if (CP_PCS_CH1_INT_TX_MASK_0 == "FALSE")
    {
        SC_PCS_CH1_INT_TX_MASK_0_144   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_TX_MASK_0 == "TRUE")
    {
        SC_PCS_CH1_INT_TX_MASK_0_144   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_TX_MASK_0_144  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_TX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_TX_MASK_0);
    }

//initial config body201 end


//initial config body202 begin
    if (CP_PCS_CH1_INT_TX_MASK_1 == "FALSE")
    {
        SC_PCS_CH1_INT_TX_MASK_1_145   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_TX_MASK_1 == "TRUE")
    {
        SC_PCS_CH1_INT_TX_MASK_1_145   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_TX_MASK_1_145  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_TX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_TX_MASK_1);
    }

//initial config body202 end


//initial config body203 begin
    if (CP_PCS_CH1_INT_TX_MASK_2 == "FALSE")
    {
        SC_PCS_CH1_INT_TX_MASK_2_146   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_TX_MASK_2 == "TRUE")
    {
        SC_PCS_CH1_INT_TX_MASK_2_146   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_TX_MASK_2_146  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_TX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_TX_MASK_2);
    }

//initial config body203 end


//initial config body204 begin
    if (CP_PCS_CH1_INT_TX_CLR_0 == "FALSE")
    {
        SC_PCS_CH1_INT_TX_CLR_0_152   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_TX_CLR_0 == "TRUE")
    {
        SC_PCS_CH1_INT_TX_CLR_0_152   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_TX_CLR_0_152  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_TX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_TX_CLR_0);
    }

//initial config body204 end


//initial config body205 begin
    if (CP_PCS_CH1_INT_TX_CLR_1 == "FALSE")
    {
        SC_PCS_CH1_INT_TX_CLR_1_153   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_TX_CLR_1 == "TRUE")
    {
        SC_PCS_CH1_INT_TX_CLR_1_153   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_TX_CLR_1_153  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_TX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_TX_CLR_1);
    }

//initial config body205 end


//initial config body206 begin
    if (CP_PCS_CH1_INT_TX_CLR_2 == "FALSE")
    {
        SC_PCS_CH1_INT_TX_CLR_2_154   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_TX_CLR_2 == "TRUE")
    {
        SC_PCS_CH1_INT_TX_CLR_2_154   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_TX_CLR_2_154  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_TX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_TX_CLR_2);
    }

//initial config body206 end


//initial config body207 begin
    if (CP_PCS_CH1_TX_PMA_TCLK_POLINV == "PMA_TCLK")
    {
        SC_PCS_CH1_TX_PMA_TCLK_POLINV_160   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_PMA_TCLK_POLINV == "REVERSE_OF_PMA_TCLK")
    {
        SC_PCS_CH1_TX_PMA_TCLK_POLINV_160  :=  1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_PMA_TCLK_POLINV_160  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_PMA_TCLK_POLINV is set to %s. Legal values is PMA_TCLK,REVERSE_OF_PMA_TCLK",CP_PCS_CH1_TX_PMA_TCLK_POLINV);
    }

//initial config body207 end


//initial config body208 begin
    if (CP_PCS_CH1_TX_PCS_CLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH1_TX_PCS_CLK_EN_SEL_161   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_PCS_CLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH1_TX_PCS_CLK_EN_SEL_161   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_PCS_CLK_EN_SEL_161  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_PCS_CLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TX_PCS_CLK_EN_SEL);
    }

//initial config body208 end


//initial config body209 begin
    if (CP_PCS_CH1_TX_BRIDGE_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH1_TX_BRIDGE_TCLK_SEL_162   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_BRIDGE_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH1_TX_BRIDGE_TCLK_SEL_162   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_BRIDGE_TCLK_SEL_162  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_BRIDGE_TCLK_SEL is set to %s. Legal values is TCLK,TCLK2",CP_PCS_CH1_TX_BRIDGE_TCLK_SEL);
    }

//initial config body209 end


//initial config body210 begin
    if (CP_PCS_CH1_TX_TCLK_POLINV == "TCLK")
    {
        SC_PCS_CH1_TX_TCLK_POLINV_163   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_TCLK_POLINV == "REVERSE_OF_TCLK")
    {
        SC_PCS_CH1_TX_TCLK_POLINV_163   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_TCLK_POLINV_163  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_TCLK_POLINV is set to %s. Legal values is PMA_TCLK,REVERSE_OF_PMA_TCLK",CP_PCS_CH1_TX_TCLK_POLINV);
    }

//initial config body210 end


//initial config body211 begin
    if (CP_PCS_CH1_TX_PCS_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH1_TX_PCS_TCLK_SEL_164   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_PCS_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH1_TX_PCS_TCLK_SEL_164   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_PCS_TCLK_SEL_164  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_PCS_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK",CP_PCS_CH1_TX_PCS_TCLK_SEL);
    }

//initial config body211 end


//initial config body212 begin
    if (CP_PCS_CH1_TX_PCS_TX_RSTN == "FALSE")
    {
        SC_PCS_CH1_TX_PCS_TX_RSTN_165   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_PCS_TX_RSTN == "TRUE")
    {
        SC_PCS_CH1_TX_PCS_TX_RSTN_165   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_PCS_TX_RSTN_165  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_PCS_TX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TX_PCS_TX_RSTN);
    }

//initial config body212 end


//initial config body213 begin
    if (CP_PCS_CH1_TX_SLAVE == "SLAVE")
    {
        SC_PCS_CH1_TX_SLAVE_166   := 1'b1;
    }
    else if (CP_PCS_CH1_TX_SLAVE == "MASTER")
    {
        SC_PCS_CH1_TX_SLAVE_166   := 1'b0;
    }
    else
    {
        SC_PCS_CH1_TX_SLAVE_166  :=  1'b1;
        error("Setting Error : The CP_PCS_CH1_TX_SLAVE is set to %s. Legal values is SLAVE,MASTER",CP_PCS_CH1_TX_SLAVE);
    }

//initial config body213 end


//initial config body214 begin
    if (CP_PCS_CH1_TX_GEAR_TCLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH1_TX_GEAR_TCLK_EN_SEL_167   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_GEAR_TCLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH1_TX_GEAR_TCLK_EN_SEL_167   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_GEAR_TCLK_EN_SEL_167  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_GEAR_TCLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TX_GEAR_TCLK_EN_SEL);
    }

//initial config body214 end


//initial config body215 begin
    if (CP_PCS_CH1_DATA_WIDTH_MODE == "X20")
    {
        SC_PCS_CH1_DATA_WIDTH_MODE_169_168   := 2'b00;
    }
    else if (CP_PCS_CH1_DATA_WIDTH_MODE == "X10")
    {
        SC_PCS_CH1_DATA_WIDTH_MODE_169_168   := 2'b01;
    }
    else if (CP_PCS_CH1_DATA_WIDTH_MODE == "X16")
    {
        SC_PCS_CH1_DATA_WIDTH_MODE_169_168   := 2'b10;
    }
    else if (CP_PCS_CH1_DATA_WIDTH_MODE == "X8")
    {
        SC_PCS_CH1_DATA_WIDTH_MODE_169_168   := 2'b11;
    }
    else
    {
        SC_PCS_CH1_DATA_WIDTH_MODE_169_168  :=  2'b00;
        error("Setting Error : The CP_PCS_CH1_DATA_WIDTH_MODE is set to %s. Legal values is X8,X10,X16,X20",CP_PCS_CH1_DATA_WIDTH_MODE);
    }

//initial config body215 end


//initial config body216 begin
    if (CP_PCS_CH1_TX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH1_TX_64B66B_67B_171_170  :=  2'b00;
    }
    else if (CP_PCS_CH1_TX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH1_TX_64B66B_67B_171_170  :=  2'b01;
    }
    else if (CP_PCS_CH1_TX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH1_TX_64B66B_67B_171_170  :=  2'b11;
    }
    else
    {
        SC_PCS_CH1_TX_64B66B_67B_171_170  :=  2'b00;
        error("Setting Error : The CP_PCS_CH1_TX_64B66B_67B is set to %d. Legal values is NORMAL,64B_66B,64B_67B",CP_PCS_CH1_TX_64B66B_67B);
    }

//initial config body216 end


//initial config body217 begin
    if (CP_PCS_CH1_TX_GEAR_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH1_TX_GEAR_TCLK_SEL_172   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_GEAR_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH1_TX_GEAR_TCLK_SEL_172   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_GEAR_TCLK_SEL_172  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_GEAR_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK2",CP_PCS_CH1_TX_GEAR_TCLK_SEL);
    }

//initial config body217 end


//initial config body218 begin
    if (CP_PCS_CH1_TX_TCLK2FABRIC_SEL == "FALSE")
    {
        SC_PCS_CH1_TX_TCLK2FABRIC_SEL_176   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_TCLK2FABRIC_SEL == "TRUE")
    {
        SC_PCS_CH1_TX_TCLK2FABRIC_SEL_176   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_TCLK2FABRIC_SEL_176  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_TCLK2FABRIC_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TX_TCLK2FABRIC_SEL);
    }

//initial config body218 end


//initial config body219 begin
    if (CP_PCS_CH1_TX_OUTZZ == "FALSE")
    {
        SC_PCS_CH1_TX_OUTZZ_177   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_OUTZZ == "TRUE")
    {
        SC_PCS_CH1_TX_OUTZZ_177   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_OUTZZ_177  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_OUTZZ is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TX_OUTZZ);
    }

//initial config body219 end


//initial config body220 begin
    if (CP_PCS_CH1_ENC_DUAL == "FALSE")
    {
        SC_PCS_CH1_ENC_DUAL_178   := 1'b0;
    }
    else if (CP_PCS_CH1_ENC_DUAL == "TRUE")
    {
        SC_PCS_CH1_ENC_DUAL_178   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_ENC_DUAL_178  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_ENC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_ENC_DUAL);
    }

//initial config body220 end


//initial config body221 begin
    if (CP_PCS_CH1_TX_BITSLIP_DATA_MODE == "X10")
    {
        SC_PCS_CH1_TX_BITSLIP_DATA_MODE_179   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_BITSLIP_DATA_MODE == "X20")
    {
        SC_PCS_CH1_TX_BITSLIP_DATA_MODE_179   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_BITSLIP_DATA_MODE_179  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_BITSLIP_DATA_MODE is set to %s. Legal values is X10,X20",CP_PCS_CH1_TX_BITSLIP_DATA_MODE);
    }

//initial config body221 end


//initial config body222 begin
    if (CP_PCS_CH1_TX_BRIDGE_CLK_POLINV == "TX_BRIDGE_CLK")
    {
        SC_PCS_CH1_TX_BRIDGE_CLK_POLINV_180   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_BRIDGE_CLK_POLINV == "REVERSE_OF_TX_BRIDGE_CLK")
    {
        SC_PCS_CH1_TX_BRIDGE_CLK_POLINV_180   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_BRIDGE_CLK_POLINV_180  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_BRIDGE_CLK_POLINV is set to %s. Legal values is TX_BRIDGE_CLK,REVERSE_OF_TX_BRIDGE_CLK",CP_PCS_CH1_TX_BRIDGE_CLK_POLINV);
    }

//initial config body222 end


//initial config body223 begin
    if (CP_PCS_CH1_COMMA_REG1 >= 0 &&  CP_PCS_CH1_COMMA_REG1<= 1023)
    {
        SC_PCS_CH1_COMMA_REG1_193_184  :=  CP_PCS_CH1_COMMA_REG1;
    }
    else
    {
        SC_PCS_CH1_COMMA_REG1_193_184  :=  0;
        error("Setting Error : The CP_PCS_CH1_COMMA_REG1 is set to %d. Legal values is 0 to 1023",CP_PCS_CH1_COMMA_REG1);
    }

//initial config body223 end


//initial config body224 begin
    if (CP_PCS_CH1_RAPID_IMAX >= 0 &&  CP_PCS_CH1_RAPID_IMAX<= 7)
    {
        SC_PCS_CH1_RAPID_IMAX_202_200  :=  CP_PCS_CH1_RAPID_IMAX;
    }
    else
    {
        SC_PCS_CH1_RAPID_IMAX_202_200  :=  0;
        error("Setting Error : The CP_PCS_CH1_RAPID_IMAX is set to %d. Legal values is 0 to 7",CP_PCS_CH1_RAPID_IMAX);
    }

//initial config body224 end


//initial config body225 begin
    if (CP_PCS_CH1_RAPID_VMIN_1 >= 0 &&  CP_PCS_CH1_RAPID_VMIN_1<= 255)
    {
        SC_PCS_CH1_RAPID_VMIN_1_215_208  :=  CP_PCS_CH1_RAPID_VMIN_1;
    }
    else
    {
        SC_PCS_CH1_RAPID_VMIN_1_215_208  :=  0;
        error("Setting Error : The CP_PCS_CH1_RAPID_VMIN_1 is set to %d. Legal values is 0 to 255",CP_PCS_CH1_RAPID_VMIN_1);
    }

//initial config body225 end


//initial config body226 begin
    if (CP_PCS_CH1_RAPID_VMIN_2 >= 0 &&  CP_PCS_CH1_RAPID_VMIN_2<= 255)
    {
        SC_PCS_CH1_RAPID_VMIN_2_223_216  :=  CP_PCS_CH1_RAPID_VMIN_2;
    }
    else
    {
        SC_PCS_CH1_RAPID_VMIN_2_223_216  :=  0;
        error("Setting Error : The CP_PCS_CH1_RAPID_VMIN_2 is set to %d. Legal values is 0 to 255",CP_PCS_CH1_RAPID_VMIN_2);
    }

//initial config body226 end


//initial config body227 begin
    if (CP_PCS_CH1_RX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH1_RX_PRBS_MODE_227_224   := 4'd0;
    }
    else if (CP_PCS_CH1_RX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH1_RX_PRBS_MODE_227_224   := 4'd1;
    }
    else if (CP_PCS_CH1_RX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH1_RX_PRBS_MODE_227_224   := 4'd2;
    }
    else if (CP_PCS_CH1_RX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH1_RX_PRBS_MODE_227_224   := 4'd3;
    }
    else if (CP_PCS_CH1_RX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH1_RX_PRBS_MODE_227_224   := 4'd4;
    }
    else if (CP_PCS_CH1_RX_PRBS_MODE == "LONG_1")
    {
        SC_PCS_CH1_RX_PRBS_MODE_227_224   := 4'd5;
    }
    else if (CP_PCS_CH1_RX_PRBS_MODE == "LONG_0")
    {
        SC_PCS_CH1_RX_PRBS_MODE_227_224   := 4'd6;
    }
    else if (CP_PCS_CH1_RX_PRBS_MODE == "20UI")
    {
        SC_PCS_CH1_RX_PRBS_MODE_227_224   := 4'd7;
    }
    else if (CP_PCS_CH1_RX_PRBS_MODE == "D10_2")
    {
        SC_PCS_CH1_RX_PRBS_MODE_227_224   := 4'd8;
    }
    else if (CP_PCS_CH1_RX_PRBS_MODE == "PCIE")
    {
        SC_PCS_CH1_RX_PRBS_MODE_227_224   := 4'd9;
    }
    else
    {
        SC_PCS_CH1_RX_PRBS_MODE_227_224  :=  4'd0;
        error("Setting Error : The CP_PCS_CH1_RX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31,LONG_1,LONG_0,20UI,D10_2,PCIE",CP_PCS_CH1_RX_PRBS_MODE);
    }

//initial config body227 end


//initial config body228 begin
    if (CP_PCS_CH1_RX_ERRCNT_CLR == "FALSE")
    {
        SC_PCS_CH1_RX_ERRCNT_CLR_228   := 1'b0;
    }
    else if (CP_PCS_CH1_RX_ERRCNT_CLR == "TRUE")
    {
        SC_PCS_CH1_RX_ERRCNT_CLR_228   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_RX_ERRCNT_CLR_228  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_RX_ERRCNT_CLR is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_RX_ERRCNT_CLR);
    }

//initial config body228 end


//initial config body229 begin
    if (CP_PCS_CH1_RX_PRBS_ERR_LPBK == "FALSE")
    {
        SC_PCS_CH1_RX_PRBS_ERR_LPBK_229   := 1'b0;
    }
    else if (CP_PCS_CH1_RX_PRBS_ERR_LPBK == "TRUE")
    {
        SC_PCS_CH1_RX_PRBS_ERR_LPBK_229   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_RX_PRBS_ERR_LPBK_229  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_RX_PRBS_ERR_LPBK is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_RX_PRBS_ERR_LPBK);
    }

//initial config body229 end


//initial config body230 begin
    if (CP_PCS_CH1_TX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH1_TX_PRBS_MODE_235_232   := 4'd0;
    }
    else if (CP_PCS_CH1_TX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH1_TX_PRBS_MODE_235_232   := 4'd1;
    }
    else if (CP_PCS_CH1_TX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH1_TX_PRBS_MODE_235_232   := 4'd2;
    }
    else if (CP_PCS_CH1_TX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH1_TX_PRBS_MODE_235_232   := 4'd3;
    }
    else if (CP_PCS_CH1_TX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH1_TX_PRBS_MODE_235_232   := 4'd4;
    }
    else if (CP_PCS_CH1_TX_PRBS_MODE == "LONG_1")
    {
        SC_PCS_CH1_TX_PRBS_MODE_235_232   := 4'd5;
    }
    else if (CP_PCS_CH1_TX_PRBS_MODE == "LONG_0")
    {
        SC_PCS_CH1_TX_PRBS_MODE_235_232   := 4'd6;
    }
    else if (CP_PCS_CH1_TX_PRBS_MODE == "20UI")
    {
        SC_PCS_CH1_TX_PRBS_MODE_235_232   := 4'd7;
    }
    else if (CP_PCS_CH1_TX_PRBS_MODE == "D10_2")
    {
        SC_PCS_CH1_TX_PRBS_MODE_235_232   := 4'd8;
    }
    else if (CP_PCS_CH1_TX_PRBS_MODE == "PCIE")
    {
        SC_PCS_CH1_TX_PRBS_MODE_235_232   := 4'd9;
    }
    else
    {
        SC_PCS_CH1_TX_PRBS_MODE_235_232  :=  4'd0;
        error("Setting Error : The CP_PCS_CH1_TX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31,LONG_1,LONG_0,20UI,D10_2,PCIE",CP_PCS_CH1_TX_PRBS_MODE);
    }

//initial config body230 end


//initial config body231 begin
    if (CP_PCS_CH1_TX_INSERT_ER == "FALSE")
    {
        SC_PCS_CH1_TX_INSERT_ER_236   := 1'b0;
    }
    else if (CP_PCS_CH1_TX_INSERT_ER == "TRUE")
    {
        SC_PCS_CH1_TX_INSERT_ER_236   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TX_INSERT_ER_236  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TX_INSERT_ER is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TX_INSERT_ER);
    }

//initial config body231 end


//initial config body232 begin
    if (CP_PCS_CH1_ENABLE_PRBS_GEN == "FALSE")
    {
        SC_PCS_CH1_ENABLE_PRBS_GEN_237   := 1'b0;
    }
    else if (CP_PCS_CH1_ENABLE_PRBS_GEN == "TRUE")
    {
        SC_PCS_CH1_ENABLE_PRBS_GEN_237   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_ENABLE_PRBS_GEN_237  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_ENABLE_PRBS_GEN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_ENABLE_PRBS_GEN);
    }

//initial config body232 end


//initial config body233 begin
    if (CP_PCS_CH1_ERR_CNT >= 0 &&  CP_PCS_CH1_ERR_CNT<= 255)
    {
        SC_PCS_CH1_ERR_CNT_247_240  :=  CP_PCS_CH1_ERR_CNT;
    }
    else
    {
        SC_PCS_CH1_ERR_CNT_247_240  :=  0;
        error("Setting Error : The CP_PCS_CH1_ERR_CNT is set to %d. Legal values is 0 to 255",CP_PCS_CH1_ERR_CNT);
    }

//initial config body233 end


//initial config body234 begin
    if (CP_PCS_CH1_DEFAULT_RADDR >= 0 &&  CP_PCS_CH1_DEFAULT_RADDR<= 15)
    {
        SC_PCS_CH1_DEFAULT_RADDR_251_248  :=  CP_PCS_CH1_DEFAULT_RADDR;
    }
    else
    {
        SC_PCS_CH1_DEFAULT_RADDR_251_248  :=  0;
        error("Setting Error : The CP_PCS_CH1_DEFAULT_RADDR is set to %d. Legal values is 0 to 15",CP_PCS_CH1_DEFAULT_RADDR);
    }

//initial config body234 end


//initial config body235 begin
    if (CP_PCS_CH1_MASTER_CHECK_OFFSET >= 0 &&  CP_PCS_CH1_MASTER_CHECK_OFFSET<= 15)
    {
        SC_PCS_CH1_MASTER_CHECK_OFFSET_255_252  :=  CP_PCS_CH1_MASTER_CHECK_OFFSET;
    }
    else
    {
        SC_PCS_CH1_MASTER_CHECK_OFFSET_255_252  :=  0;
        error("Setting Error : The CP_PCS_CH1_MASTER_CHECK_OFFSET is set to %d. Legal values is 0 to 15",CP_PCS_CH1_MASTER_CHECK_OFFSET);
    }

//initial config body235 end


//initial config body236 begin
    if (CP_PCS_CH1_DELAY_SET >= 0 &&  CP_PCS_CH1_DELAY_SET<= 15)
    {
        SC_PCS_CH1_DELAY_SET_259_256  :=  CP_PCS_CH1_DELAY_SET;
    }
    else
    {
        SC_PCS_CH1_DELAY_SET_259_256  :=  0;
        error("Setting Error : The CP_PCS_CH1_DELAY_SET is set to %d. Legal values is 0 to 15",CP_PCS_CH1_DELAY_SET);
    }

//initial config body236 end


//initial config body237 begin
    if (CP_PCS_CH1_SEACH_OFFSET == "20BIT")
    {
        SC_PCS_CH1_SEACH_OFFSET_262_260   := 3'd0;
    }
    else if (CP_PCS_CH1_SEACH_OFFSET == "30BIT")
    {
        SC_PCS_CH1_SEACH_OFFSET_262_260   := 3'd1;
    }
    else if (CP_PCS_CH1_SEACH_OFFSET == "40BIT")
    {
        SC_PCS_CH1_SEACH_OFFSET_262_260   := 3'd2;
    }
    else if (CP_PCS_CH1_SEACH_OFFSET == "50BIT")
    {
        SC_PCS_CH1_SEACH_OFFSET_262_260   := 3'd3;
    }
    else if (CP_PCS_CH1_SEACH_OFFSET == "60BIT")
    {
        SC_PCS_CH1_SEACH_OFFSET_262_260   := 3'd4;
    }
    else if (CP_PCS_CH1_SEACH_OFFSET == "70BIT")
    {
        SC_PCS_CH1_SEACH_OFFSET_262_260   := 3'd5;
    }
    else if (CP_PCS_CH1_SEACH_OFFSET == "80BIT")
    {
        SC_PCS_CH1_SEACH_OFFSET_262_260   := 3'd6;
    }
    else
    {
        SC_PCS_CH1_SEACH_OFFSET_262_260  :=  3'd0;
        error("Setting Error : The CP_PCS_CH1_SEACH_OFFSET is set to %s. Legal values is 20BIT,30BIT,40BIT,50BIT,60BIT,70BIT,80BIT",CP_PCS_CH1_SEACH_OFFSET);
    }

//initial config body237 end


//initial config body238 begin
    if (CP_PCS_CH1_CEB_RAPIDLS_MMAX >= 0 &&  CP_PCS_CH1_CEB_RAPIDLS_MMAX<= 7)
    {
        SC_PCS_CH1_CEB_RAPIDLS_MMAX_266_264  :=  CP_PCS_CH1_CEB_RAPIDLS_MMAX;
    }
    else
    {
        SC_PCS_CH1_CEB_RAPIDLS_MMAX_266_264  :=  0;
        error("Setting Error : The CP_PCS_CH1_CEB_RAPIDLS_MMAX is set to %d. Legal values is 0 to 7",CP_PCS_CH1_CEB_RAPIDLS_MMAX);
    }

//initial config body238 end


//initial config body239 begin
    if (CP_PCS_CH1_CTC_AFULL >= 0 &&  CP_PCS_CH1_CTC_AFULL<= 31)
    {
        SC_PCS_CH1_CTC_AFULL_276_272  :=  CP_PCS_CH1_CTC_AFULL;
    }
    else
    {
        SC_PCS_CH1_CTC_AFULL_276_272  :=  0;
        error("Setting Error : The CP_PCS_CH1_CTC_AFULL is set to %d. Legal values is 0 to 31",CP_PCS_CH1_CTC_AFULL);
    }

//initial config body239 end


//initial config body240 begin
    if (CP_PCS_CH1_CTC_AEMPTY >= 0 &&  CP_PCS_CH1_CTC_AEMPTY<= 31)
    {
        SC_PCS_CH1_CTC_AEMPTY_284_280  :=  CP_PCS_CH1_CTC_AEMPTY;
    }
    else
    {
        SC_PCS_CH1_CTC_AEMPTY_284_280  :=  0;
        error("Setting Error : The CP_PCS_CH1_CTC_AEMPTY is set to %d. Legal values is 0 to 31",CP_PCS_CH1_CTC_AEMPTY);
    }

//initial config body240 end


//initial config body241 begin
    if (CP_PCS_CH1_CTC_CONTI_SKP_SET >= 0 &&  CP_PCS_CH1_CTC_CONTI_SKP_SET<= 1)
    {
        SC_PCS_CH1_CTC_CONTI_SKP_SET_285  :=  CP_PCS_CH1_CTC_CONTI_SKP_SET;
    }
    else
    {
        SC_PCS_CH1_CTC_CONTI_SKP_SET_285  :=  0;
        error("Setting Error : The CP_PCS_CH1_CTC_CONTI_SKP_SET is set to %d. Legal values is 0 to 1",CP_PCS_CH1_CTC_CONTI_SKP_SET);
    }

//initial config body241 end


//initial config body242 begin
    if (CP_PCS_CH1_FAR_LOOP == "FALSE")
    {
        SC_PCS_CH1_FAR_LOOP_288   := 1'b0;
    }
    else if (CP_PCS_CH1_FAR_LOOP == "TRUE")
    {
        SC_PCS_CH1_FAR_LOOP_288   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_FAR_LOOP_288  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_FAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_FAR_LOOP);
    }

//initial config body242 end


//initial config body243 begin
    if (CP_PCS_CH1_NEAR_LOOP == "FALSE")
    {
        SC_PCS_CH1_NEAR_LOOP_289   := 1'b0;
    }
    else if (CP_PCS_CH1_NEAR_LOOP == "TRUE")
    {
        SC_PCS_CH1_NEAR_LOOP_289   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_NEAR_LOOP_289  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_NEAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_NEAR_LOOP);
    }

//initial config body243 end


//initial config body244 begin
    if (CP_PCS_CH1_REG_TX2RX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH1_REG_TX2RX_PLOOP_EN_290   := 1'b0;
    }
    else if (CP_PCS_CH1_REG_TX2RX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH1_REG_TX2RX_PLOOP_EN_290   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_REG_TX2RX_PLOOP_EN_290  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_REG_TX2RX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_REG_TX2RX_PLOOP_EN);
    }

//initial config body244 end


//initial config body245 begin
    if (CP_PCS_CH1_REG_TX2RX_SLOOP_EN == "FALSE")
    {
        SC_PCS_CH1_REG_TX2RX_SLOOP_EN_291   := 1'b0;
    }
    else if (CP_PCS_CH1_REG_TX2RX_SLOOP_EN == "TRUE")
    {
        SC_PCS_CH1_REG_TX2RX_SLOOP_EN_291   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_REG_TX2RX_SLOOP_EN_291  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_REG_TX2RX_SLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_REG_TX2RX_SLOOP_EN);
    }

//initial config body245 end


//initial config body246 begin
    if (CP_PCS_CH1_REG_RX2TX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH1_REG_RX2TX_PLOOP_EN_292   := 1'b0;
    }
    else if (CP_PCS_CH1_REG_RX2TX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH1_REG_RX2TX_PLOOP_EN_292   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_REG_RX2TX_PLOOP_EN_292  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_REG_RX2TX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_REG_RX2TX_PLOOP_EN);
    }

//initial config body246 end


//initial config body247 begin
    if (CP_PCS_CH1_INT_RX_MASK_0 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_MASK_0_296   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_MASK_0 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_MASK_0_296   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_MASK_0_296  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_MASK_0);
    }

//initial config body247 end


//initial config body248 begin
    if (CP_PCS_CH1_INT_RX_MASK_1 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_MASK_1_297   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_MASK_1 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_MASK_1_297   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_MASK_1_297  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_MASK_1);
    }

//initial config body248 end


//initial config body249 begin
    if (CP_PCS_CH1_INT_RX_MASK_2 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_MASK_2_298   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_MASK_2 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_MASK_2_298   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_MASK_2_298  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_MASK_2);
    }

//initial config body249 end


//initial config body250 begin
    if (CP_PCS_CH1_INT_RX_MASK_3 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_MASK_3_299   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_MASK_3 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_MASK_3_299   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_MASK_3_299  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_MASK_3 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_MASK_3);
    }

//initial config body250 end


//initial config body251 begin
    if (CP_PCS_CH1_INT_RX_MASK_4 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_MASK_4_300   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_MASK_4 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_MASK_4_300   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_MASK_4_300  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_MASK_4 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_MASK_4);
    }

//initial config body251 end


//initial config body252 begin
    if (CP_PCS_CH1_INT_RX_MASK_5 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_MASK_5_301   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_MASK_5 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_MASK_5_301   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_MASK_5_301  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_MASK_5 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_MASK_5);
    }

//initial config body252 end


//initial config body253 begin
    if (CP_PCS_CH1_INT_RX_MASK_6 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_MASK_6_302   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_MASK_6 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_MASK_6_302   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_MASK_6_302  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_MASK_6 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_MASK_6);
    }

//initial config body253 end


//initial config body254 begin
    if (CP_PCS_CH1_INT_RX_MASK_7 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_MASK_7_303   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_MASK_7 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_MASK_7_303   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_MASK_7_303  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_MASK_7 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_MASK_7);
    }

//initial config body254 end


//initial config body255 begin
    if (CP_PCS_CH1_INT_RX_CLR_0 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_CLR_0_304   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_CLR_0 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_CLR_0_304   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_CLR_0_304  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_CLR_0);
    }

//initial config body255 end


//initial config body256 begin
    if (CP_PCS_CH1_INT_RX_CLR_1 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_CLR_1_305   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_CLR_1 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_CLR_1_305   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_CLR_1_305  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_CLR_1);
    }

//initial config body256 end


//initial config body257 begin
    if (CP_PCS_CH1_INT_RX_CLR_2 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_CLR_2_306   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_CLR_2 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_CLR_2_306   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_CLR_2_306  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_CLR_2);
    }

//initial config body257 end


//initial config body258 begin
    if (CP_PCS_CH1_INT_RX_CLR_3 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_CLR_3_307   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_CLR_3 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_CLR_3_307   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_CLR_3_307  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_CLR_3 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_CLR_3);
    }

//initial config body258 end


//initial config body259 begin
    if (CP_PCS_CH1_INT_RX_CLR_4 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_CLR_4_308   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_CLR_4 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_CLR_4_308   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_CLR_4_308  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_CLR_4 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_CLR_4);
    }

//initial config body259 end


//initial config body260 begin
    if (CP_PCS_CH1_INT_RX_CLR_5 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_CLR_5_309   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_CLR_5 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_CLR_5_309   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_CLR_5_309  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_CLR_5 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_CLR_5);
    }

//initial config body260 end


//initial config body261 begin
    if (CP_PCS_CH1_INT_RX_CLR_6 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_CLR_6_310   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_CLR_6 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_CLR_6_310   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_CLR_6_310  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_CLR_6 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_CLR_6);
    }

//initial config body261 end


//initial config body262 begin
    if (CP_PCS_CH1_INT_RX_CLR_7 == "FALSE")
    {
        SC_PCS_CH1_INT_RX_CLR_7_311   := 1'b0;
    }
    else if (CP_PCS_CH1_INT_RX_CLR_7 == "TRUE")
    {
        SC_PCS_CH1_INT_RX_CLR_7_311   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_INT_RX_CLR_7_311  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_INT_RX_CLR_7 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_INT_RX_CLR_7);
    }

//initial config body262 end


//initial config body263 begin
    if (CP_PCS_CH1_CA_RSTN_RX == "FALSE")
    {
        SC_PCS_CH1_CA_RSTN_RX_312   := 1'b0;
    }
    else if (CP_PCS_CH1_CA_RSTN_RX == "TRUE")
    {
        SC_PCS_CH1_CA_RSTN_RX_312   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_CA_RSTN_RX_312  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_CA_RSTN_RX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_CA_RSTN_RX);
    }

//initial config body263 end


//initial config body264 begin
    if (CP_PCS_CH1_CA_DYN_DLY_EN_RX == "FALSE")
    {
        SC_PCS_CH1_CA_DYN_DLY_EN_RX_313   := 1'b0;
    }
    else if (CP_PCS_CH1_CA_DYN_DLY_EN_RX == "TRUE")
    {
        SC_PCS_CH1_CA_DYN_DLY_EN_RX_313   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_CA_DYN_DLY_EN_RX_313  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_CA_DYN_DLY_EN_RX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_CA_DYN_DLY_EN_RX);
    }

//initial config body264 end


//initial config body265 begin
    if (CP_PCS_CH1_CA_DYN_DLY_SEL_RX == "FALSE")
    {
        SC_PCS_CH1_CA_DYN_DLY_SEL_RX_314   := 1'b0;
    }
    else if (CP_PCS_CH1_CA_DYN_DLY_SEL_RX == "TRUE")
    {
        SC_PCS_CH1_CA_DYN_DLY_SEL_RX_314   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_CA_DYN_DLY_SEL_RX_314  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_CA_DYN_DLY_SEL_RX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_CA_DYN_DLY_SEL_RX);
    }

//initial config body265 end


//initial config body266 begin
    if (CP_PCS_CH1_CA_RX >= 0 &&  CP_PCS_CH1_CA_RX <= 255)
    {
        SC_PCS_CH1_CA_RX_322_315  :=  CP_PCS_CH1_CA_RX;
    }
    else
    {
        SC_PCS_CH1_CA_RX_322_315  :=  0;
        error("Setting Error : The CP_PCS_CH1_CA_RX is set to %d. Legal values is 0 to 255",CP_PCS_CH1_CA_RX);
    }

//initial config body266 end


//initial config body267 begin
    if (CP_PCS_CH1_CA_RSTN_TX == "FALSE")
    {
        SC_PCS_CH1_CA_RSTN_TX_323   := 1'b0;
    }
    else if (CP_PCS_CH1_CA_RSTN_TX == "TRUE")
    {
        SC_PCS_CH1_CA_RSTN_TX_323   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_CA_RSTN_TX_323  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_CA_RSTN_TX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_CA_RSTN_TX);
    }

//initial config body267 end


//initial config body268 begin
    if (CP_PCS_CH1_CA_DYN_DLY_EN_TX == "FALSE")
    {
        SC_PCS_CH1_CA_DYN_DLY_EN_TX_324   := 1'b0;
    }
    else if (CP_PCS_CH1_CA_DYN_DLY_EN_TX == "TRUE")
    {
        SC_PCS_CH1_CA_DYN_DLY_EN_TX_324   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_CA_DYN_DLY_EN_TX_324  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_CA_DYN_DLY_EN_TX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_CA_DYN_DLY_EN_TX);
    }

//initial config body268 end


//initial config body269 begin
    if (CP_PCS_CH1_CA_DYN_DLY_SEL_TX == "FALSE")
    {
        SC_PCS_CH1_CA_DYN_DLY_SEL_TX_325   := 1'b0;
    }
    else if (CP_PCS_CH1_CA_DYN_DLY_SEL_TX == "TRUE")
    {
        SC_PCS_CH1_CA_DYN_DLY_SEL_TX_325   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_CA_DYN_DLY_SEL_TX_325  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_CA_DYN_DLY_SEL_TX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_CA_DYN_DLY_SEL_TX);
    }

//initial config body269 end


//initial config body270 begin
    if (CP_PCS_CH1_CA_TX >= 0 &&  CP_PCS_CH1_CA_TX <= 255)
    {
        SC_PCS_CH1_CA_TX_333_326  :=  CP_PCS_CH1_CA_TX;
    }
    else
    {
        SC_PCS_CH1_CA_TX_333_326  :=  0;
        error("Setting Error : The CP_PCS_CH1_CA_TX is set to %d. Legal values is 0 to 255",CP_PCS_CH1_CA_TX);
    }

//initial config body270 end


//initial config body271 begin
    if (CP_PCS_CH1_RXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH1_RXPRBS_PWR_REDUCTION_334   := 1'b0;
    }
    else if (CP_PCS_CH1_RXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH1_RXPRBS_PWR_REDUCTION_334   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_RXPRBS_PWR_REDUCTION_334  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_RXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH1_RXPRBS_PWR_REDUCTION);
    }

//initial config body271 end


//initial config body272 begin
    if (CP_PCS_CH1_WDALIGN_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH1_WDALIGN_PWR_REDUCTION_335   := 1'b0;
    }
    else if (CP_PCS_CH1_WDALIGN_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH1_WDALIGN_PWR_REDUCTION_335   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_WDALIGN_PWR_REDUCTION_335  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_WDALIGN_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH1_WDALIGN_PWR_REDUCTION);
    }

//initial config body272 end


//initial config body273 begin
    if (CP_PCS_CH1_RXDEC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH1_RXDEC_PWR_REDUCTION_336   := 1'b0;
    }
    else if (CP_PCS_CH1_RXDEC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH1_RXDEC_PWR_REDUCTION_336   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_RXDEC_PWR_REDUCTION_336  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_RXDEC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH1_RXDEC_PWR_REDUCTION);
    }

//initial config body273 end


//initial config body274 begin
    if (CP_PCS_CH1_RXCB_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH1_RXCB_PWR_REDUCTION_337   := 1'b0;
    }
    else if (CP_PCS_CH1_RXCB_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH1_RXCB_PWR_REDUCTION_337   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_RXCB_PWR_REDUCTION_337  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_RXCB_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH1_RXCB_PWR_REDUCTION);
    }

//initial config body274 end


//initial config body275 begin
    if (CP_PCS_CH1_RXCTC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH1_RXCTC_PWR_REDUCTION_338   := 1'b0;
    }
    else if (CP_PCS_CH1_RXCTC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH1_RXCTC_PWR_REDUCTION_338   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_RXCTC_PWR_REDUCTION_338  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_RXCTC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH1_RXCTC_PWR_REDUCTION);
    }

//initial config body275 end


//initial config body276 begin
    if (CP_PCS_CH1_RXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH1_RXGEAR_PWR_REDUCTION_339   := 1'b0;
    }
    else if (CP_PCS_CH1_RXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH1_RXGEAR_PWR_REDUCTION_339   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_RXGEAR_PWR_REDUCTION_339  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_RXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH1_RXGEAR_PWR_REDUCTION);
    }

//initial config body276 end


//initial config body277 begin
    if (CP_PCS_CH1_RXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH1_RXBRG_PWR_REDUCTION_340   := 1'b0;
    }
    else if (CP_PCS_CH1_RXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH1_RXBRG_PWR_REDUCTION_340   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_RXBRG_PWR_REDUCTION_340  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_RXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH1_RXBRG_PWR_REDUCTION);
    }

//initial config body277 end


//initial config body278 begin
    if (CP_PCS_CH1_RXTEST_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH1_RXTEST_PWR_REDUCTION_341   := 1'b0;
    }
    else if (CP_PCS_CH1_RXTEST_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH1_RXTEST_PWR_REDUCTION_341   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_RXTEST_PWR_REDUCTION_341  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_RXTEST_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH1_RXTEST_PWR_REDUCTION);
    }

//initial config body278 end


//initial config body279 begin
    if (CP_PCS_CH1_TXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH1_TXBRG_PWR_REDUCTION_342   := 1'b0;
    }
    else if (CP_PCS_CH1_TXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH1_TXBRG_PWR_REDUCTION_342   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TXBRG_PWR_REDUCTION_342  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH1_TXBRG_PWR_REDUCTION);
    }

//initial config body279 end


//initial config body280 begin
    if (CP_PCS_CH1_TXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH1_TXGEAR_PWR_REDUCTION_343   := 1'b0;
    }
    else if (CP_PCS_CH1_TXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH1_TXGEAR_PWR_REDUCTION_343   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TXGEAR_PWR_REDUCTION_343  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH1_TXGEAR_PWR_REDUCTION);
    }

//initial config body280 end


//initial config body281 begin
    if (CP_PCS_CH1_TXENC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH1_TXENC_PWR_REDUCTION_344   := 1'b0;
    }
    else if (CP_PCS_CH1_TXENC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH1_TXENC_PWR_REDUCTION_344   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TXENC_PWR_REDUCTION_344  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TXENC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH1_TXENC_PWR_REDUCTION);
    }

//initial config body281 end


//initial config body282 begin
    if (CP_PCS_CH1_TXBSLP_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH1_TXBSLP_PWR_REDUCTION_345   := 1'b0;
    }
    else if (CP_PCS_CH1_TXBSLP_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH1_TXBSLP_PWR_REDUCTION_345   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TXBSLP_PWR_REDUCTION_345  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TXBSLP_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH1_TXBSLP_PWR_REDUCTION);
    }

//initial config body282 end


//initial config body283 begin
    if (CP_PCS_CH1_TXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH1_TXPRBS_PWR_REDUCTION_346   := 1'b0;
    }
    else if (CP_PCS_CH1_TXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH1_TXPRBS_PWR_REDUCTION_346   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TXPRBS_PWR_REDUCTION_346  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH1_TXPRBS_PWR_REDUCTION);
    }

//initial config body283 end


//initial config body284 begin
    if (CP_PCS_CH1_TXBRG_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH1_TXBRG_FULL_CHK_EN_347   := 1'b0;
    }
    else if (CP_PCS_CH1_TXBRG_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH1_TXBRG_FULL_CHK_EN_347   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TXBRG_FULL_CHK_EN_347  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TXBRG_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TXBRG_FULL_CHK_EN);
    }

//initial config body284 end


//initial config body285 begin
    if (CP_PCS_CH1_TXBRG_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH1_TXBRG_EMPTY_CHK_EN_348   := 1'b0;
    }
    else if (CP_PCS_CH1_TXBRG_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH1_TXBRG_EMPTY_CHK_EN_348   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_TXBRG_EMPTY_CHK_EN_348  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_TXBRG_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_TXBRG_EMPTY_CHK_EN);
    }

//initial config body285 end


//initial config body286 begin
    if (CP_PCS_CH1_RXBRG_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH1_RXBRG_FULL_CHK_EN_349   := 1'b0;
    }
    else if (CP_PCS_CH1_RXBRG_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH1_RXBRG_FULL_CHK_EN_349   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_RXBRG_FULL_CHK_EN_349  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_RXBRG_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_RXBRG_FULL_CHK_EN);
    }

//initial config body286 end


//initial config body287 begin
    if (CP_PCS_CH1_RXBRG_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH1_RXBRG_EMPTY_CHK_EN_350   := 1'b0;
    }
    else if (CP_PCS_CH1_RXBRG_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH1_RXBRG_EMPTY_CHK_EN_350   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_RXBRG_EMPTY_CHK_EN_350  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_RXBRG_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_RXBRG_EMPTY_CHK_EN);
    }

//initial config body287 end


//initial config body288 begin
    if (CP_PCS_CH1_CTC_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH1_CTC_FULL_CHK_EN_351   := 1'b0;
    }
    else if (CP_PCS_CH1_CTC_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH1_CTC_FULL_CHK_EN_351   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_CTC_FULL_CHK_EN_351  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_CTC_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_CTC_FULL_CHK_EN);
    }

//initial config body288 end


//initial config body289 begin
    if (CP_PCS_CH1_CTC_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH1_CTC_EMPTY_CHK_EN_352   := 1'b0;
    }
    else if (CP_PCS_CH1_CTC_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH1_CTC_EMPTY_CHK_EN_352   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_CTC_EMPTY_CHK_EN_352  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_CTC_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_CTC_EMPTY_CHK_EN);
    }

//initial config body289 end


//initial config body290 begin
    if (CP_PCS_CH1_CEB_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH1_CEB_FULL_CHK_EN_353   := 1'b0;
    }
    else if (CP_PCS_CH1_CEB_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH1_CEB_FULL_CHK_EN_353   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_CEB_FULL_CHK_EN_353  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_CEB_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_CEB_FULL_CHK_EN);
    }

//initial config body290 end


//initial config body291 begin
    if (CP_PCS_CH1_CEB_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH1_CEB_EMPTY_CHK_EN_354   := 1'b0;
    }
    else if (CP_PCS_CH1_CEB_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH1_CEB_EMPTY_CHK_EN_354   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_CEB_EMPTY_CHK_EN_354  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_CEB_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_CEB_EMPTY_CHK_EN);
    }

//initial config body291 end


//initial config body292 begin
    if (CP_PCS_CH1_FLP_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH1_FLP_FULL_CHK_EN_355   := 1'b0;
    }
    else if (CP_PCS_CH1_FLP_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH1_FLP_FULL_CHK_EN_355   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_FLP_FULL_CHK_EN_355  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_FLP_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_FLP_FULL_CHK_EN);
    }

//initial config body292 end


//initial config body293 begin
    if (CP_PCS_CH1_FLP_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH1_FLP_EMPTY_CHK_EN_356   := 1'b0;
    }
    else if (CP_PCS_CH1_FLP_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH1_FLP_EMPTY_CHK_EN_356   := 1'b1;
    }
    else
    {
        SC_PCS_CH1_FLP_EMPTY_CHK_EN_356  :=  1'b0;
        error("Setting Error : The CP_PCS_CH1_FLP_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH1_FLP_EMPTY_CHK_EN);
    }

//initial config body293 end


//initial config body294 begin
    if (CP_PCS_CH2_BYPASS_WORD_ALIGN == "FALSE")
    {
        SC_PCS_CH2_BYPASS_WORD_ALIGN_1   := 1'b0;
    }
    else if (CP_PCS_CH2_BYPASS_WORD_ALIGN == "TRUE")
    {
        SC_PCS_CH2_BYPASS_WORD_ALIGN_1   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_BYPASS_WORD_ALIGN_1  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_BYPASS_WORD_ALIGN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_BYPASS_WORD_ALIGN);
    }

//initial config body294 end


//initial config body295 begin
    if (CP_PCS_CH2_BYPASS_DENC == "FALSE")
    {
        SC_PCS_CH2_BYPASS_DENC_2   := 1'b0;
    }
    else if (CP_PCS_CH2_BYPASS_DENC == "TRUE")
    {
        SC_PCS_CH2_BYPASS_DENC_2   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_BYPASS_DENC_2  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_BYPASS_DENC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_BYPASS_DENC);
    }

//initial config body295 end


//initial config body296 begin
    if (CP_PCS_CH2_BYPASS_BONDING == "FALSE")
    {
        SC_PCS_CH2_BYPASS_BONDING_3   := 1'b0;
    }
    else if (CP_PCS_CH2_BYPASS_BONDING == "TRUE")
    {
        SC_PCS_CH2_BYPASS_BONDING_3   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_BYPASS_BONDING_3  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_BYPASS_BONDING is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_BYPASS_BONDING);
    }

//initial config body296 end


//initial config body297 begin
    if (CP_PCS_CH2_BYPASS_CTC == "FALSE")
    {
        SC_PCS_CH2_BYPASS_CTC_4   := 1'b0;
    }
    else if (CP_PCS_CH2_BYPASS_CTC == "TRUE")
    {
        SC_PCS_CH2_BYPASS_CTC_4   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_BYPASS_CTC_4  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_BYPASS_CTC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_BYPASS_CTC);
    }

//initial config body297 end


//initial config body298 begin
    if (CP_PCS_CH2_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH2_BYPASS_GEAR_5   := 1'b0;
    }
    else if (CP_PCS_CH2_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH2_BYPASS_GEAR_5   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_BYPASS_GEAR_5  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_BYPASS_GEAR);
    }

//initial config body298 end


//initial config body299 begin
    if (CP_PCS_CH2_BYPASS_BRIDGE == "FALSE")
    {
        SC_PCS_CH2_BYPASS_BRIDGE_6   := 1'b0;
    }
    else if (CP_PCS_CH2_BYPASS_BRIDGE == "TRUE")
    {
        SC_PCS_CH2_BYPASS_BRIDGE_6   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_BYPASS_BRIDGE_6  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_BYPASS_BRIDGE is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_BYPASS_BRIDGE);
    }

//initial config body299 end


//initial config body300 begin
    if (CP_PCS_CH2_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH2_BYPASS_BRIDGE_FIFO_7   := 1'b0;
    }
    else if (CP_PCS_CH2_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH2_BYPASS_BRIDGE_FIFO_7   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_BYPASS_BRIDGE_FIFO_7  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_BYPASS_BRIDGE_FIFO);
    }

//initial config body300 end


//initial config body301 begin
    if (CP_PCS_CH2_DATA_MODE == "X8")
    {
        SC_PCS_CH2_DATA_MODE_8   := 1'b0;
    }
    else if (CP_PCS_CH2_DATA_MODE == "X10")
    {
        SC_PCS_CH2_DATA_MODE_8   := 1'b0;
    }
    else if (CP_PCS_CH2_DATA_MODE == "X16")
    {
        SC_PCS_CH2_DATA_MODE_8   := 1'b1;
    }
    else if (CP_PCS_CH2_DATA_MODE == "X20")
    {
        SC_PCS_CH2_DATA_MODE_8   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_DATA_MODE_8  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_DATA_MODE is set to %s. Legal values is X8,X10,X16,X20",CP_PCS_CH2_DATA_MODE);
    }

//initial config body301 end


//initial config body302 begin
    if (CP_PCS_CH2_RX_POLARITY_INV == "DELAY")
    {
        SC_PCS_CH2_RX_POLARITY_INV_10_9   := 2'b00;
    }
    else if (CP_PCS_CH2_RX_POLARITY_INV == "BIT_POLARITY_INVERION")
    {
        SC_PCS_CH2_RX_POLARITY_INV_10_9   := 2'b01;
    }
    else if (CP_PCS_CH2_RX_POLARITY_INV == "BIT_REVERSAL")
    {
        SC_PCS_CH2_RX_POLARITY_INV_10_9   := 2'b10;
    }
    else if (CP_PCS_CH2_RX_POLARITY_INV == "BOTH")
    {
        SC_PCS_CH2_RX_POLARITY_INV_10_9   := 2'b11;
    }
    else
    {
        SC_PCS_CH2_RX_POLARITY_INV_10_9  :=  2'b00;
        error("Setting Error : The CP_PCS_CH2_RX_POLARITY_INV is set to %s. Legal values is DELAY,BIT_POLARITY_INVERION,BIT_REVERSAL,BOTH",CP_PCS_CH2_RX_POLARITY_INV);
    }

//initial config body302 end


//initial config body303 begin
    if (CP_PCS_CH2_ALIGN_MODE == "1GB")
    {
        SC_PCS_CH2_ALIGN_MODE_12_11   := 2'b00;
    }
    else if (CP_PCS_CH2_ALIGN_MODE == "10GB")
    {
        SC_PCS_CH2_ALIGN_MODE_12_11   := 2'b01;
    }
    else if (CP_PCS_CH2_ALIGN_MODE == "RAPIDIO")
    {
        SC_PCS_CH2_ALIGN_MODE_12_11   := 2'b10;
    }
    else if (CP_PCS_CH2_ALIGN_MODE == "OUTSIDE")
    {
        SC_PCS_CH2_ALIGN_MODE_12_11   := 2'b11;
    }
    else
    {
        SC_PCS_CH2_ALIGN_MODE_12_11  :=  2'b00;
        error("Setting Error : The CP_PCS_CH2_ALIGN_MODE is set to %s. Legal values is 1GB,10GB,RAPIDIO,OUTSIDE",CP_PCS_CH2_ALIGN_MODE);
    }

//initial config body303 end


//initial config body304 begin
    if (CP_PCS_CH2_SAMP_16B == "X16")
    {
        SC_PCS_CH2_SAMP_16B_13   := 1'b1;
    }
    else if (CP_PCS_CH2_SAMP_16B == "X20")
    {
        SC_PCS_CH2_SAMP_16B_13   := 1'b0;
    }
    else
    {
        SC_PCS_CH2_SAMP_16B_13  :=  1'b1;
        error("Setting Error : The CP_PCS_CH2_SAMP_16B is set to %s. Legal values is X16,X20",CP_PCS_CH2_SAMP_16B);
    }

//initial config body304 end


//initial config body305 begin
    if (CP_PCS_CH2_FARLP_PWR_REDUCTION == "FALSE")
    {
        SC_PCS_CH2_FARLP_PWR_REDUCTION_14   := 1'b0;
    }
    else if (CP_PCS_CH2_FARLP_PWR_REDUCTION == "TRUE")
    {
        SC_PCS_CH2_FARLP_PWR_REDUCTION_14   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_FARLP_PWR_REDUCTION_14  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_FARLP_PWR_REDUCTION is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_FARLP_PWR_REDUCTION);
    }

//initial config body305 end


//initial config body306 begin
    if (CP_PCS_CH2_COMMA_REG0 >= 0 &&  CP_PCS_CH2_COMMA_REG0<= 1023)
    {
        SC_PCS_CH2_COMMA_REG0_25_16  :=  CP_PCS_CH2_COMMA_REG0;
    }
    else
    {
        SC_PCS_CH2_COMMA_REG0_25_16  :=  0;
        error("Setting Error : The CP_PCS_CH2_COMMA_REG0 is set to %d. Legal values is 0 to 1023",CP_PCS_CH2_COMMA_REG0);
    }

//initial config body306 end


//initial config body307 begin
    if (CP_PCS_CH2_COMMA_MASK >= 0 &&  CP_PCS_CH2_COMMA_MASK<= 1023)
    {
        SC_PCS_CH2_COMMA_MASK_35_26  :=  CP_PCS_CH2_COMMA_MASK;
    }
    else
    {
        SC_PCS_CH2_COMMA_MASK_35_26  :=  0;
        error("Setting Error : The CP_PCS_CH2_COMMA_MASK is set to %d. Legal values is 0 to 1023",CP_PCS_CH2_COMMA_MASK);
    }

//initial config body307 end


//initial config body308 begin
    if (CP_PCS_CH2_CEB_MODE == "10GB")
    {
        SC_PCS_CH2_CEB_MODE_37_36   := 2'b00;
    }
    else if (CP_PCS_CH2_CEB_MODE == "RAPIDIO")
    {
        SC_PCS_CH2_CEB_MODE_37_36   := 2'b01;
    }
    else if (CP_PCS_CH2_CEB_MODE == "OUTSIDE")
    {
        SC_PCS_CH2_CEB_MODE_37_36   := 2'b10;
    }
    else
    {
        SC_PCS_CH2_CEB_MODE_37_36  :=  2'b00;
        error("Setting Error : The CP_PCS_CH2_CEB_MODE is set to %s. Legal values is 10GB,RAPIDIO,OUTSIDE",CP_PCS_CH2_CEB_MODE);
    }

//initial config body308 end


//initial config body309 begin
    if (CP_PCS_CH2_CTC_MODE == "1SKIP")
    {
        SC_PCS_CH2_CTC_MODE_39_38   := 2'b00;
    }
    else if (CP_PCS_CH2_CTC_MODE == "2SKIP")
    {
        SC_PCS_CH2_CTC_MODE_39_38   := 2'b01;
    }
    else if (CP_PCS_CH2_CTC_MODE == "PCIE_2BYTE")
    {
        SC_PCS_CH2_CTC_MODE_39_38   := 2'b10;
    }
    else if (CP_PCS_CH2_CTC_MODE == "4SKIP")
    {
        SC_PCS_CH2_CTC_MODE_39_38   := 2'b11;
    }
    else
    {
        SC_PCS_CH2_CTC_MODE_39_38  :=  2'b00;
        error("Setting Error : The CP_PCS_CH2_CTC_MODE is set to %s. Legal values is 1SKIP,2SKIP,PCIE_2BYTE,4SKIP",CP_PCS_CH2_CTC_MODE);
    }

//initial config body309 end


//initial config body310 begin
    if (CP_PCS_CH2_A_REG >= 0 &&  CP_PCS_CH2_A_REG<= 255)
    {
        SC_PCS_CH2_A_REG_47_40  :=  CP_PCS_CH2_A_REG;
    }
    else
    {
        SC_PCS_CH2_A_REG_47_40  :=  0;
        error("Setting Error : The CP_PCS_CH2_A_REG is set to %d. Legal values is 0 to 255",CP_PCS_CH2_A_REG);
    }

//initial config body310 end


//initial config body311 begin
    if (CP_PCS_CH2_GE_AUTO_EN == "FALSE")
    {
        SC_PCS_CH2_GE_AUTO_EN_49   := 1'b0;
    }
    else if (CP_PCS_CH2_GE_AUTO_EN == "TRUE")
    {
        SC_PCS_CH2_GE_AUTO_EN_49   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_GE_AUTO_EN_49  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_GE_AUTO_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_GE_AUTO_EN);
    }

//initial config body311 end


//initial config body312 begin
    if (CP_PCS_CH2_SKIP_REG0 >= 0 &&  CP_PCS_CH2_SKIP_REG0<= 1023)
    {
        SC_PCS_CH2_SKIP_REG0_59_50  :=  CP_PCS_CH2_SKIP_REG0;
    }
    else
    {
        SC_PCS_CH2_SKIP_REG0_59_50  :=  0;
        error("Setting Error : The CP_PCS_CH2_SKIP_REG0 is set to %d. Legal values is 0 to 1023",CP_PCS_CH2_SKIP_REG0);
    }

//initial config body312 end


//initial config body313 begin
    if (CP_PCS_CH2_SKIP_REG1 >= 0 &&  CP_PCS_CH2_SKIP_REG1<= 1023)
    {
        SC_PCS_CH2_SKIP_REG1_69_60  :=  CP_PCS_CH2_SKIP_REG1;
    }
    else
    {
        SC_PCS_CH2_SKIP_REG1_69_60  :=  0;
        error("Setting Error : The CP_PCS_CH2_SKIP_REG1 is set to %d. Legal values is 0 to 1023",CP_PCS_CH2_SKIP_REG1);
    }

//initial config body313 end


//initial config body314 begin
    if (CP_PCS_CH2_SKIP_REG2 >= 0 &&  CP_PCS_CH2_SKIP_REG2<= 1023)
    {
        SC_PCS_CH2_SKIP_REG2_79_70  :=  CP_PCS_CH2_SKIP_REG2;
    }
    else
    {
        SC_PCS_CH2_SKIP_REG2_79_70  :=  0;
        error("Setting Error : The CP_PCS_CH2_SKIP_REG2 is set to %d. Legal values is 0 to 1023",CP_PCS_CH2_SKIP_REG2);
    }

//initial config body314 end


//initial config body315 begin
    if (CP_PCS_CH2_SKIP_REG3 >= 0 &&  CP_PCS_CH2_SKIP_REG3<= 1023)
    {
        SC_PCS_CH2_SKIP_REG3_89_80  :=  CP_PCS_CH2_SKIP_REG3;
    }
    else
    {
        SC_PCS_CH2_SKIP_REG3_89_80  :=  0;
        error("Setting Error : The CP_PCS_CH2_SKIP_REG3 is set to %d. Legal values is 0 to 1023",CP_PCS_CH2_SKIP_REG3);
    }

//initial config body315 end


//initial config body316 begin
    if (CP_PCS_CH2_DEC_DUAL == "FALSE")
    {
        SC_PCS_CH2_DEC_DUAL_90   := 1'b0;
    }
    else if (CP_PCS_CH2_DEC_DUAL == "TRUE")
    {
        SC_PCS_CH2_DEC_DUAL_90   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_DEC_DUAL_90  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_DEC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_DEC_DUAL);
    }

//initial config body316 end


//initial config body317 begin
    if (CP_PCS_CH2_SPLIT == "FALSE")
    {
        SC_PCS_CH2_SPLIT_91   := 1'b0;
    }
    else if (CP_PCS_CH2_SPLIT == "TRUE")
    {
        SC_PCS_CH2_SPLIT_91   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_SPLIT_91  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_SPLIT);
    }

//initial config body317 end


//initial config body318 begin
    if (CP_PCS_CH2_FIFOFLAG_CTC == "FALSE")
    {
        SC_PCS_CH2_FIFOFLAG_CTC_92   := 1'b0;
    }
    else if (CP_PCS_CH2_FIFOFLAG_CTC == "TRUE")
    {
        SC_PCS_CH2_FIFOFLAG_CTC_92   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_FIFOFLAG_CTC_92  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_FIFOFLAG_CTC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_FIFOFLAG_CTC);
    }

//initial config body318 end


//initial config body319 begin
    if (CP_PCS_CH2_COMMA_DET_MODE == "COMMA_PATTERN")
    {
        SC_PCS_CH2_COMMA_DET_MODE_93   := 1'b0;
    }
    else if (CP_PCS_CH2_COMMA_DET_MODE == "RX_CLK_SLIP")
    {
        SC_PCS_CH2_COMMA_DET_MODE_93   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_COMMA_DET_MODE_93  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_COMMA_DET_MODE is set to %s. Legal values is COMMA_PATTERN,RX_CLK_SLIP",CP_PCS_CH2_COMMA_DET_MODE);
    }

//initial config body319 end


//initial config body320 begin
    if (CP_PCS_CH2_ERRDETECT_SILENCE == "FALSE")
    {
        SC_PCS_CH2_ERRDETECT_SILENCE_94   := 1'b0;
    }
    else if (CP_PCS_CH2_ERRDETECT_SILENCE == "TRUE")
    {
        SC_PCS_CH2_ERRDETECT_SILENCE_94   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_ERRDETECT_SILENCE_94  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_ERRDETECT_SILENCE is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_ERRDETECT_SILENCE);
    }

//initial config body320 end


//initial config body321 begin
    if (CP_PCS_CH2_PMA_RCLK_POLINV == "PMA_RCLK")
    {
        SC_PCS_CH2_PMA_RCLK_POLINV_96   := 1'b0;
    }
    else if (CP_PCS_CH2_PMA_RCLK_POLINV == "REVERSE_OF_PMA_RCLK")
    {
        SC_PCS_CH2_PMA_RCLK_POLINV_96   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_PMA_RCLK_POLINV_96  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_PMA_RCLK_POLINV is set to %s. Legal values is PMA_RCLK,REVERSE_OF_PMA_RCLK",CP_PCS_CH2_PMA_RCLK_POLINV);
    }

//initial config body321 end


//initial config body322 begin
    if (CP_PCS_CH2_PCS_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH2_PCS_RCLK_SEL_98_97   := 2'b00;
    }
    else if (CP_PCS_CH2_PCS_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH2_PCS_RCLK_SEL_98_97   := 2'b01;
    }
    else if (CP_PCS_CH2_PCS_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH2_PCS_RCLK_SEL_98_97   := 2'b11;
    }
    else
    {
        SC_PCS_CH2_PCS_RCLK_SEL_98_97  :=  2'b00;
        error("Setting Error : The CP_PCS_CH2_PCS_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK",CP_PCS_CH2_PCS_RCLK_SEL);
    }

//initial config body322 end


//initial config body323 begin
    if (CP_PCS_CH2_CB_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH2_CB_RCLK_SEL_100_99   := 2'b00;
    }
    else if (CP_PCS_CH2_CB_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH2_CB_RCLK_SEL_100_99   := 2'b01;
    }
    else if (CP_PCS_CH2_CB_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH2_CB_RCLK_SEL_100_99   := 2'b10;
    }
    else if (CP_PCS_CH2_CB_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH2_CB_RCLK_SEL_100_99   := 2'b11;
    }
    else
    {
        SC_PCS_CH2_CB_RCLK_SEL_100_99  :=  2'b00;
        error("Setting Error : The CP_PCS_CH2_CB_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK",CP_PCS_CH2_CB_RCLK_SEL);
    }

//initial config body323 end


//initial config body324 begin
    if (CP_PCS_CH2_AFTER_CTC_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_SEL_102_101   := 2'b00;
    }
    else if (CP_PCS_CH2_AFTER_CTC_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_SEL_102_101   := 2'b01;
    }
    else if (CP_PCS_CH2_AFTER_CTC_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_SEL_102_101   := 2'b10;
    }
    else if (CP_PCS_CH2_AFTER_CTC_RCLK_SEL == "RCLK2")
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_SEL_102_101   := 2'b11;
    }
    else
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_SEL_102_101  :=  2'b00;
        error("Setting Error : The CP_PCS_CH2_AFTER_CTC_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK2",CP_PCS_CH2_AFTER_CTC_RCLK_SEL);
    }

//initial config body324 end


//initial config body325 begin
    if (CP_PCS_CH2_RCLK_POLINV == "RCLK")
    {
        SC_PCS_CH2_RCLK_POLINV_103   := 1'b0;
    }
    else if (CP_PCS_CH2_RCLK_POLINV == "REVERSE_OF_RCLK")
    {
        SC_PCS_CH2_RCLK_POLINV_103   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_RCLK_POLINV_103  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_RCLK_POLINV is set to %s. Legal values is RCLK,REVERSE_OF_RCLK",CP_PCS_CH2_RCLK_POLINV);
    }

//initial config body325 end


//initial config body326 begin
    if (CP_PCS_CH2_BRIDGE_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH2_BRIDGE_RCLK_SEL_105_104   := 2'b00;
    }
    else if (CP_PCS_CH2_BRIDGE_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH2_BRIDGE_RCLK_SEL_105_104   := 2'b01;
    }
    else if (CP_PCS_CH2_BRIDGE_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH2_BRIDGE_RCLK_SEL_105_104   := 2'b10;
    }
    else if (CP_PCS_CH2_BRIDGE_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH2_BRIDGE_RCLK_SEL_105_104   := 2'b11;
    }
    else
    {
        SC_PCS_CH2_BRIDGE_RCLK_SEL_105_104  :=  2'b00;
        error("Setting Error : The CP_PCS_CH2_BRIDGE_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK",CP_PCS_CH2_BRIDGE_RCLK_SEL);
    }

//initial config body326 end


//initial config body327 begin
    if (CP_PCS_CH2_PCS_RCLK_EN == "FALSE")
    {
        SC_PCS_CH2_PCS_RCLK_EN_106   := 1'b0;
    }
    else if (CP_PCS_CH2_PCS_RCLK_EN == "TRUE")
    {
        SC_PCS_CH2_PCS_RCLK_EN_106   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_PCS_RCLK_EN_106  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_PCS_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_PCS_RCLK_EN);
    }

//initial config body327 end


//initial config body328 begin
    if (CP_PCS_CH2_CB_RCLK_EN == "FALSE")
    {
        SC_PCS_CH2_CB_RCLK_EN_107   := 1'b0;
    }
    else if (CP_PCS_CH2_CB_RCLK_EN == "TRUE")
    {
        SC_PCS_CH2_CB_RCLK_EN_107   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_CB_RCLK_EN_107  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_CB_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_CB_RCLK_EN);
    }

//initial config body328 end


//initial config body329 begin
    if (CP_PCS_CH2_AFTER_CTC_RCLK_EN == "FALSE")
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_EN_108   := 1'b0;
    }
    else if (CP_PCS_CH2_AFTER_CTC_RCLK_EN == "TRUE")
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_EN_108   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_EN_108  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_AFTER_CTC_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_AFTER_CTC_RCLK_EN);
    }

//initial config body329 end


//initial config body330 begin
    if (CP_PCS_CH2_AFTER_CTC_RCLK_EN_GB == "FALSE")
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_EN_GB_109   := 1'b0;
    }
    else if (CP_PCS_CH2_AFTER_CTC_RCLK_EN_GB == "TRUE")
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_EN_GB_109   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_EN_GB_109  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_AFTER_CTC_RCLK_EN_GB is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_AFTER_CTC_RCLK_EN_GB);
    }

//initial config body330 end


//initial config body331 begin
    if (CP_PCS_CH2_AFTER_CTC_RCLK_SEL_1 == "PMA_RCLK")
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b00;
    }
    else if (CP_PCS_CH2_AFTER_CTC_RCLK_SEL_1 == "PMA_TCLK")
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b01;
    }
    else if (CP_PCS_CH2_AFTER_CTC_RCLK_SEL_1 == "MCB_RCLK")
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b10;
    }
    else if (CP_PCS_CH2_AFTER_CTC_RCLK_SEL_1 == "RCLK2")
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b11;
    }
    else
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_SEL_1_111_110  :=  2'b00;
        error("Setting Error : The CP_PCS_CH2_AFTER_CTC_RCLK_SEL_1 is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK2",CP_PCS_CH2_AFTER_CTC_RCLK_SEL_1);
    }

//initial config body331 end


//initial config body332 begin
    if (CP_PCS_CH2_PCS_RX_RSTN == "FALSE")
    {
        SC_PCS_CH2_PCS_RX_RSTN_112   := 1'b0;
    }
    else if (CP_PCS_CH2_PCS_RX_RSTN == "TRUE")
    {
        SC_PCS_CH2_PCS_RX_RSTN_112   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_PCS_RX_RSTN_112  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_PCS_RX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_PCS_RX_RSTN);
    }

//initial config body332 end


//initial config body333 begin
    if (CP_PCS_CH2_SLAVE == "MASTER")
    {
        SC_PCS_CH2_SLAVE_113   := 1'b0;
    }
    else if (CP_PCS_CH2_SLAVE == "SLAVE")
    {
        SC_PCS_CH2_SLAVE_113   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_SLAVE_113  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_PCS_CH2_SLAVE);
    }

//initial config body333 end


//initial config body334 begin
    if (CP_PCS_CH2_PCIE_SLAVE == "MASTER")
    {
        SC_PCS_CH2_PCIE_SLAVE_114   := 1'b0;
    }
    else if (CP_PCS_CH2_PCIE_SLAVE == "SLAVE")
    {
        SC_PCS_CH2_PCIE_SLAVE_114   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_PCIE_SLAVE_114  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_PCIE_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_PCS_CH2_PCIE_SLAVE);
    }

//initial config body334 end


//initial config body335 begin
    if (CP_PCS_CH2_RX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH2_RX_64B66B_67B_116_115  :=  2'b00;
    }
    else if (CP_PCS_CH2_RX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH2_RX_64B66B_67B_116_115  :=  2'b01;
    }
    else if (CP_PCS_CH2_RX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH2_RX_64B66B_67B_116_115  :=  2'b11;
    }
    else
    {
        SC_PCS_CH2_RX_64B66B_67B_116_115  :=  2'b00;
        error("Setting Error : The CP_PCS_CH2_RX_64B66B_67B is set to %d. Legal values is NORMAL,64B_66B,64B_67B",CP_PCS_CH2_RX_64B66B_67B);
    }

//initial config body335 end


//initial config body336 begin
    if (CP_PCS_CH2_RX_BRIDGE_CLK_POLINV == "RX_BRIDGE_CLK")
    {
        SC_PCS_CH2_RX_BRIDGE_CLK_POLINV_117   := 1'b0;
    }
    else if (CP_PCS_CH2_RX_BRIDGE_CLK_POLINV == "REVERSE_OF_RX_BRIDGE_CLK")
    {
        SC_PCS_CH2_RX_BRIDGE_CLK_POLINV_117   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_RX_BRIDGE_CLK_POLINV_117  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_RX_BRIDGE_CLK_POLINV is set to %s. Legal values is RX_BRIDGE_CLK,REVERSE_OF_RX_BRIDGE_CLK",CP_PCS_CH2_RX_BRIDGE_CLK_POLINV);
    }

//initial config body336 end


//initial config body337 begin
    if (CP_PCS_CH2_AFTER_CTC_RCLK_EN_GB_1 == "FALSE")
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_EN_GB_1_118   := 1'b0;
    }
    else if (CP_PCS_CH2_AFTER_CTC_RCLK_EN_GB_1 == "TRUE")
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_EN_GB_1_118   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_AFTER_CTC_RCLK_EN_GB_1_118  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_AFTER_CTC_RCLK_EN_GB_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_AFTER_CTC_RCLK_EN_GB_1);
    }

//initial config body337 end


//initial config body338 begin
    if (CP_PCS_CH2_PCS_CB_RSTN == "FALSE")
    {
        SC_PCS_CH2_PCS_CB_RSTN_120   := 1'b0;
    }
    else if (CP_PCS_CH2_PCS_CB_RSTN == "TRUE")
    {
        SC_PCS_CH2_PCS_CB_RSTN_120   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_PCS_CB_RSTN_120  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_PCS_CB_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_PCS_CB_RSTN);
    }

//initial config body338 end


//initial config body339 begin
    if (CP_PCS_CH2_TX_BRIDGE_GEAR_SEL == "FALSE")
    {
        SC_PCS_CH2_TX_BRIDGE_GEAR_SEL_128   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_BRIDGE_GEAR_SEL == "TRUE")
    {
        SC_PCS_CH2_TX_BRIDGE_GEAR_SEL_128   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_BRIDGE_GEAR_SEL_128  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_BRIDGE_GEAR_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TX_BRIDGE_GEAR_SEL);
    }

//initial config body339 end


//initial config body340 begin
    if (CP_PCS_CH2_TX_BYPASS_BRIDGE_UINT == "FALSE")
    {
        SC_PCS_CH2_TX_BYPASS_BRIDGE_UINT_129   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_BYPASS_BRIDGE_UINT == "TRUE")
    {
        SC_PCS_CH2_TX_BYPASS_BRIDGE_UINT_129   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_BYPASS_BRIDGE_UINT_129  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_BYPASS_BRIDGE_UINT is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TX_BYPASS_BRIDGE_UINT);
    }

//initial config body340 end


//initial config body341 begin
    if (CP_PCS_CH2_TX_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH2_TX_BYPASS_BRIDGE_FIFO_130   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH2_TX_BYPASS_BRIDGE_FIFO_130   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_BYPASS_BRIDGE_FIFO_130  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TX_BYPASS_BRIDGE_FIFO);
    }

//initial config body341 end


//initial config body342 begin
    if (CP_PCS_CH2_TX_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH2_TX_BYPASS_GEAR_131   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH2_TX_BYPASS_GEAR_131   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_BYPASS_GEAR_131  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TX_BYPASS_GEAR);
    }

//initial config body342 end


//initial config body343 begin
    if (CP_PCS_CH2_TX_BYPASS_ENC == "FALSE")
    {
        SC_PCS_CH2_TX_BYPASS_ENC_132   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_BYPASS_ENC == "TRUE")
    {
        SC_PCS_CH2_TX_BYPASS_ENC_132   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_BYPASS_ENC_132  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_BYPASS_ENC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TX_BYPASS_ENC);
    }

//initial config body343 end


//initial config body344 begin
    if (CP_PCS_CH2_TX_BYPASS_BIT_SLIP == "FALSE")
    {
        SC_PCS_CH2_TX_BYPASS_BIT_SLIP_133   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_BYPASS_BIT_SLIP == "TRUE")
    {
        SC_PCS_CH2_TX_BYPASS_BIT_SLIP_133   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_BYPASS_BIT_SLIP_133  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_BYPASS_BIT_SLIP is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TX_BYPASS_BIT_SLIP);
    }

//initial config body344 end


//initial config body345 begin
    if (CP_PCS_CH2_TX_GEAR_SPLIT == "FALSE")
    {
        SC_PCS_CH2_TX_GEAR_SPLIT_136   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_GEAR_SPLIT == "TRUE")
    {
        SC_PCS_CH2_TX_GEAR_SPLIT_136   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_GEAR_SPLIT_136  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_GEAR_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TX_GEAR_SPLIT);
    }

//initial config body345 end


//initial config body346 begin
    if (CP_PCS_CH2_TX_DRIVE_REG_MODE == "NO_CHANGE")
    {
        SC_PCS_CH2_TX_DRIVE_REG_MODE_138_137   := 2'b00;
    }
    else if (CP_PCS_CH2_TX_DRIVE_REG_MODE == "EN_POLARIY_REV")
    {
        SC_PCS_CH2_TX_DRIVE_REG_MODE_138_137   := 2'b01;
    }
    else if (CP_PCS_CH2_TX_DRIVE_REG_MODE == "EN_BIT_REV")
    {
        SC_PCS_CH2_TX_DRIVE_REG_MODE_138_137   := 2'b10;
    }
    else if (CP_PCS_CH2_TX_DRIVE_REG_MODE == "EN_BOTH")
    {
        SC_PCS_CH2_TX_DRIVE_REG_MODE_138_137   := 2'b11;
    }
    else
    {
        SC_PCS_CH2_TX_DRIVE_REG_MODE_138_137  :=  2'b00;
        error("Setting Error : The CP_PCS_CH2_TX_DRIVE_REG_MODE is set to %s. Legal values is NO_CHANGE,EN_POLARIY_REV,EN_BIT_REV,EN_BOTH",CP_PCS_CH2_TX_DRIVE_REG_MODE);
    }

//initial config body346 end


//initial config body347 begin
    if (CP_PCS_CH2_TX_BIT_SLIP_CYCLES >= 0 &&  CP_PCS_CH2_TX_BIT_SLIP_CYCLES<= 31)
    {
        SC_PCS_CH2_TX_BIT_SLIP_CYCLES_143_139  :=  CP_PCS_CH2_TX_BIT_SLIP_CYCLES;
    }
    else
    {
        SC_PCS_CH2_TX_BIT_SLIP_CYCLES_143_139  :=  0;
        error("Setting Error : The CP_PCS_CH2_TX_BIT_SLIP_CYCLES is set to %d. Legal values is 0 to 31",CP_PCS_CH2_TX_BIT_SLIP_CYCLES);
    }

//initial config body347 end


//initial config body348 begin
    if (CP_PCS_CH2_INT_TX_MASK_0 == "FALSE")
    {
        SC_PCS_CH2_INT_TX_MASK_0_144   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_TX_MASK_0 == "TRUE")
    {
        SC_PCS_CH2_INT_TX_MASK_0_144   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_TX_MASK_0_144  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_TX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_TX_MASK_0);
    }

//initial config body348 end


//initial config body349 begin
    if (CP_PCS_CH2_INT_TX_MASK_1 == "FALSE")
    {
        SC_PCS_CH2_INT_TX_MASK_1_145   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_TX_MASK_1 == "TRUE")
    {
        SC_PCS_CH2_INT_TX_MASK_1_145   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_TX_MASK_1_145  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_TX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_TX_MASK_1);
    }

//initial config body349 end


//initial config body350 begin
    if (CP_PCS_CH2_INT_TX_MASK_2 == "FALSE")
    {
        SC_PCS_CH2_INT_TX_MASK_2_146   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_TX_MASK_2 == "TRUE")
    {
        SC_PCS_CH2_INT_TX_MASK_2_146   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_TX_MASK_2_146  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_TX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_TX_MASK_2);
    }

//initial config body350 end


//initial config body351 begin
    if (CP_PCS_CH2_INT_TX_CLR_0 == "FALSE")
    {
        SC_PCS_CH2_INT_TX_CLR_0_152   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_TX_CLR_0 == "TRUE")
    {
        SC_PCS_CH2_INT_TX_CLR_0_152   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_TX_CLR_0_152  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_TX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_TX_CLR_0);
    }

//initial config body351 end


//initial config body352 begin
    if (CP_PCS_CH2_INT_TX_CLR_1 == "FALSE")
    {
        SC_PCS_CH2_INT_TX_CLR_1_153   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_TX_CLR_1 == "TRUE")
    {
        SC_PCS_CH2_INT_TX_CLR_1_153   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_TX_CLR_1_153  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_TX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_TX_CLR_1);
    }

//initial config body352 end


//initial config body353 begin
    if (CP_PCS_CH2_INT_TX_CLR_2 == "FALSE")
    {
        SC_PCS_CH2_INT_TX_CLR_2_154   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_TX_CLR_2 == "TRUE")
    {
        SC_PCS_CH2_INT_TX_CLR_2_154   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_TX_CLR_2_154  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_TX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_TX_CLR_2);
    }

//initial config body353 end


//initial config body354 begin
    if (CP_PCS_CH2_TX_PMA_TCLK_POLINV == "PMA_TCLK")
    {
        SC_PCS_CH2_TX_PMA_TCLK_POLINV_160   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_PMA_TCLK_POLINV == "REVERSE_OF_PMA_TCLK")
    {
        SC_PCS_CH2_TX_PMA_TCLK_POLINV_160  :=  1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_PMA_TCLK_POLINV_160  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_PMA_TCLK_POLINV is set to %s. Legal values is PMA_TCLK,REVERSE_OF_PMA_TCLK",CP_PCS_CH2_TX_PMA_TCLK_POLINV);
    }

//initial config body354 end


//initial config body355 begin
    if (CP_PCS_CH2_TX_PCS_CLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH2_TX_PCS_CLK_EN_SEL_161   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_PCS_CLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH2_TX_PCS_CLK_EN_SEL_161   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_PCS_CLK_EN_SEL_161  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_PCS_CLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TX_PCS_CLK_EN_SEL);
    }

//initial config body355 end


//initial config body356 begin
    if (CP_PCS_CH2_TX_BRIDGE_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH2_TX_BRIDGE_TCLK_SEL_162   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_BRIDGE_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH2_TX_BRIDGE_TCLK_SEL_162   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_BRIDGE_TCLK_SEL_162  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_BRIDGE_TCLK_SEL is set to %s. Legal values is TCLK,TCLK2",CP_PCS_CH2_TX_BRIDGE_TCLK_SEL);
    }

//initial config body356 end


//initial config body357 begin
    if (CP_PCS_CH2_TX_TCLK_POLINV == "TCLK")
    {
        SC_PCS_CH2_TX_TCLK_POLINV_163   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_TCLK_POLINV == "REVERSE_OF_TCLK")
    {
        SC_PCS_CH2_TX_TCLK_POLINV_163   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_TCLK_POLINV_163  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_TCLK_POLINV is set to %s. Legal values is PMA_TCLK,REVERSE_OF_PMA_TCLK",CP_PCS_CH2_TX_TCLK_POLINV);
    }

//initial config body357 end


//initial config body358 begin
    if (CP_PCS_CH2_TX_PCS_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH2_TX_PCS_TCLK_SEL_164   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_PCS_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH2_TX_PCS_TCLK_SEL_164   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_PCS_TCLK_SEL_164  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_PCS_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK",CP_PCS_CH2_TX_PCS_TCLK_SEL);
    }

//initial config body358 end


//initial config body359 begin
    if (CP_PCS_CH2_TX_PCS_TX_RSTN == "FALSE")
    {
        SC_PCS_CH2_TX_PCS_TX_RSTN_165   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_PCS_TX_RSTN == "TRUE")
    {
        SC_PCS_CH2_TX_PCS_TX_RSTN_165   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_PCS_TX_RSTN_165  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_PCS_TX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TX_PCS_TX_RSTN);
    }

//initial config body359 end


//initial config body360 begin
    if (CP_PCS_CH2_TX_SLAVE == "SLAVE")
    {
        SC_PCS_CH2_TX_SLAVE_166   := 1'b1;
    }
    else if (CP_PCS_CH2_TX_SLAVE == "MASTER")
    {
        SC_PCS_CH2_TX_SLAVE_166   := 1'b0;
    }
    else
    {
        SC_PCS_CH2_TX_SLAVE_166  :=  1'b1;
        error("Setting Error : The CP_PCS_CH2_TX_SLAVE is set to %s. Legal values is SLAVE,MASTER",CP_PCS_CH2_TX_SLAVE);
    }

//initial config body360 end


//initial config body361 begin
    if (CP_PCS_CH2_TX_GEAR_TCLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH2_TX_GEAR_TCLK_EN_SEL_167   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_GEAR_TCLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH2_TX_GEAR_TCLK_EN_SEL_167   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_GEAR_TCLK_EN_SEL_167  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_GEAR_TCLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TX_GEAR_TCLK_EN_SEL);
    }

//initial config body361 end


//initial config body362 begin
    if (CP_PCS_CH2_DATA_WIDTH_MODE == "X20")
    {
        SC_PCS_CH2_DATA_WIDTH_MODE_169_168   := 2'b00;
    }
    else if (CP_PCS_CH2_DATA_WIDTH_MODE == "X10")
    {
        SC_PCS_CH2_DATA_WIDTH_MODE_169_168   := 2'b01;
    }
    else if (CP_PCS_CH2_DATA_WIDTH_MODE == "X16")
    {
        SC_PCS_CH2_DATA_WIDTH_MODE_169_168   := 2'b10;
    }
    else if (CP_PCS_CH2_DATA_WIDTH_MODE == "X8")
    {
        SC_PCS_CH2_DATA_WIDTH_MODE_169_168   := 2'b11;
    }
    else
    {
        SC_PCS_CH2_DATA_WIDTH_MODE_169_168  :=  2'b00;
        error("Setting Error : The CP_PCS_CH2_DATA_WIDTH_MODE is set to %s. Legal values is X8,X10,X16,X20",CP_PCS_CH2_DATA_WIDTH_MODE);
    }

//initial config body362 end


//initial config body363 begin
    if (CP_PCS_CH2_TX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH2_TX_64B66B_67B_171_170  :=  2'b00;
    }
    else if (CP_PCS_CH2_TX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH2_TX_64B66B_67B_171_170  :=  2'b01;
    }
    else if (CP_PCS_CH2_TX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH2_TX_64B66B_67B_171_170  :=  2'b11;
    }
    else
    {
        SC_PCS_CH2_TX_64B66B_67B_171_170  :=  2'b00;
        error("Setting Error : The CP_PCS_CH2_TX_64B66B_67B is set to %d. Legal values is NORMAL,64B_66B,64B_67B",CP_PCS_CH2_TX_64B66B_67B);
    }

//initial config body363 end


//initial config body364 begin
    if (CP_PCS_CH2_TX_GEAR_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH2_TX_GEAR_TCLK_SEL_172   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_GEAR_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH2_TX_GEAR_TCLK_SEL_172   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_GEAR_TCLK_SEL_172  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_GEAR_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK2",CP_PCS_CH2_TX_GEAR_TCLK_SEL);
    }

//initial config body364 end


//initial config body365 begin
    if (CP_PCS_CH2_TX_TCLK2FABRIC_SEL == "FALSE")
    {
        SC_PCS_CH2_TX_TCLK2FABRIC_SEL_176   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_TCLK2FABRIC_SEL == "TRUE")
    {
        SC_PCS_CH2_TX_TCLK2FABRIC_SEL_176   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_TCLK2FABRIC_SEL_176  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_TCLK2FABRIC_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TX_TCLK2FABRIC_SEL);
    }

//initial config body365 end


//initial config body366 begin
    if (CP_PCS_CH2_TX_OUTZZ == "FALSE")
    {
        SC_PCS_CH2_TX_OUTZZ_177   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_OUTZZ == "TRUE")
    {
        SC_PCS_CH2_TX_OUTZZ_177   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_OUTZZ_177  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_OUTZZ is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TX_OUTZZ);
    }

//initial config body366 end


//initial config body367 begin
    if (CP_PCS_CH2_ENC_DUAL == "FALSE")
    {
        SC_PCS_CH2_ENC_DUAL_178   := 1'b0;
    }
    else if (CP_PCS_CH2_ENC_DUAL == "TRUE")
    {
        SC_PCS_CH2_ENC_DUAL_178   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_ENC_DUAL_178  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_ENC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_ENC_DUAL);
    }

//initial config body367 end


//initial config body368 begin
    if (CP_PCS_CH2_TX_BITSLIP_DATA_MODE == "X10")
    {
        SC_PCS_CH2_TX_BITSLIP_DATA_MODE_179   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_BITSLIP_DATA_MODE == "X20")
    {
        SC_PCS_CH2_TX_BITSLIP_DATA_MODE_179   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_BITSLIP_DATA_MODE_179  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_BITSLIP_DATA_MODE is set to %s. Legal values is X10,X20",CP_PCS_CH2_TX_BITSLIP_DATA_MODE);
    }

//initial config body368 end


//initial config body369 begin
    if (CP_PCS_CH2_TX_BRIDGE_CLK_POLINV == "TX_BRIDGE_CLK")
    {
        SC_PCS_CH2_TX_BRIDGE_CLK_POLINV_180   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_BRIDGE_CLK_POLINV == "REVERSE_OF_TX_BRIDGE_CLK")
    {
        SC_PCS_CH2_TX_BRIDGE_CLK_POLINV_180   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_BRIDGE_CLK_POLINV_180  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_BRIDGE_CLK_POLINV is set to %s. Legal values is TX_BRIDGE_CLK,REVERSE_OF_TX_BRIDGE_CLK",CP_PCS_CH2_TX_BRIDGE_CLK_POLINV);
    }

//initial config body369 end


//initial config body370 begin
    if (CP_PCS_CH2_COMMA_REG1 >= 0 &&  CP_PCS_CH2_COMMA_REG1<= 1023)
    {
        SC_PCS_CH2_COMMA_REG1_193_184  :=  CP_PCS_CH2_COMMA_REG1;
    }
    else
    {
        SC_PCS_CH2_COMMA_REG1_193_184  :=  0;
        error("Setting Error : The CP_PCS_CH2_COMMA_REG1 is set to %d. Legal values is 0 to 1023",CP_PCS_CH2_COMMA_REG1);
    }

//initial config body370 end


//initial config body371 begin
    if (CP_PCS_CH2_RAPID_IMAX >= 0 &&  CP_PCS_CH2_RAPID_IMAX<= 7)
    {
        SC_PCS_CH2_RAPID_IMAX_202_200  :=  CP_PCS_CH2_RAPID_IMAX;
    }
    else
    {
        SC_PCS_CH2_RAPID_IMAX_202_200  :=  0;
        error("Setting Error : The CP_PCS_CH2_RAPID_IMAX is set to %d. Legal values is 0 to 7",CP_PCS_CH2_RAPID_IMAX);
    }

//initial config body371 end


//initial config body372 begin
    if (CP_PCS_CH2_RAPID_VMIN_1 >= 0 &&  CP_PCS_CH2_RAPID_VMIN_1<= 255)
    {
        SC_PCS_CH2_RAPID_VMIN_1_215_208  :=  CP_PCS_CH2_RAPID_VMIN_1;
    }
    else
    {
        SC_PCS_CH2_RAPID_VMIN_1_215_208  :=  0;
        error("Setting Error : The CP_PCS_CH2_RAPID_VMIN_1 is set to %d. Legal values is 0 to 255",CP_PCS_CH2_RAPID_VMIN_1);
    }

//initial config body372 end


//initial config body373 begin
    if (CP_PCS_CH2_RAPID_VMIN_2 >= 0 &&  CP_PCS_CH2_RAPID_VMIN_2<= 255)
    {
        SC_PCS_CH2_RAPID_VMIN_2_223_216  :=  CP_PCS_CH2_RAPID_VMIN_2;
    }
    else
    {
        SC_PCS_CH2_RAPID_VMIN_2_223_216  :=  0;
        error("Setting Error : The CP_PCS_CH2_RAPID_VMIN_2 is set to %d. Legal values is 0 to 255",CP_PCS_CH2_RAPID_VMIN_2);
    }

//initial config body373 end


//initial config body374 begin
    if (CP_PCS_CH2_RX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH2_RX_PRBS_MODE_227_224   := 4'd0;
    }
    else if (CP_PCS_CH2_RX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH2_RX_PRBS_MODE_227_224   := 4'd1;
    }
    else if (CP_PCS_CH2_RX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH2_RX_PRBS_MODE_227_224   := 4'd2;
    }
    else if (CP_PCS_CH2_RX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH2_RX_PRBS_MODE_227_224   := 4'd3;
    }
    else if (CP_PCS_CH2_RX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH2_RX_PRBS_MODE_227_224   := 4'd4;
    }
    else if (CP_PCS_CH2_RX_PRBS_MODE == "LONG_1")
    {
        SC_PCS_CH2_RX_PRBS_MODE_227_224   := 4'd5;
    }
    else if (CP_PCS_CH2_RX_PRBS_MODE == "LONG_0")
    {
        SC_PCS_CH2_RX_PRBS_MODE_227_224   := 4'd6;
    }
    else if (CP_PCS_CH2_RX_PRBS_MODE == "20UI")
    {
        SC_PCS_CH2_RX_PRBS_MODE_227_224   := 4'd7;
    }
    else if (CP_PCS_CH2_RX_PRBS_MODE == "D10_2")
    {
        SC_PCS_CH2_RX_PRBS_MODE_227_224   := 4'd8;
    }
    else if (CP_PCS_CH2_RX_PRBS_MODE == "PCIE")
    {
        SC_PCS_CH2_RX_PRBS_MODE_227_224   := 4'd9;
    }
    else
    {
        SC_PCS_CH2_RX_PRBS_MODE_227_224  :=  4'd0;
        error("Setting Error : The CP_PCS_CH2_RX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31,LONG_1,LONG_0,20UI,D10_2,PCIE",CP_PCS_CH2_RX_PRBS_MODE);
    }

//initial config body374 end


//initial config body375 begin
    if (CP_PCS_CH2_RX_ERRCNT_CLR == "FALSE")
    {
        SC_PCS_CH2_RX_ERRCNT_CLR_228   := 1'b0;
    }
    else if (CP_PCS_CH2_RX_ERRCNT_CLR == "TRUE")
    {
        SC_PCS_CH2_RX_ERRCNT_CLR_228   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_RX_ERRCNT_CLR_228  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_RX_ERRCNT_CLR is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_RX_ERRCNT_CLR);
    }

//initial config body375 end


//initial config body376 begin
    if (CP_PCS_CH2_RX_PRBS_ERR_LPBK == "FALSE")
    {
        SC_PCS_CH2_RX_PRBS_ERR_LPBK_229   := 1'b0;
    }
    else if (CP_PCS_CH2_RX_PRBS_ERR_LPBK == "TRUE")
    {
        SC_PCS_CH2_RX_PRBS_ERR_LPBK_229   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_RX_PRBS_ERR_LPBK_229  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_RX_PRBS_ERR_LPBK is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_RX_PRBS_ERR_LPBK);
    }

//initial config body376 end


//initial config body377 begin
    if (CP_PCS_CH2_TX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH2_TX_PRBS_MODE_235_232   := 4'd0;
    }
    else if (CP_PCS_CH2_TX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH2_TX_PRBS_MODE_235_232   := 4'd1;
    }
    else if (CP_PCS_CH2_TX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH2_TX_PRBS_MODE_235_232   := 4'd2;
    }
    else if (CP_PCS_CH2_TX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH2_TX_PRBS_MODE_235_232   := 4'd3;
    }
    else if (CP_PCS_CH2_TX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH2_TX_PRBS_MODE_235_232   := 4'd4;
    }
    else if (CP_PCS_CH2_TX_PRBS_MODE == "LONG_1")
    {
        SC_PCS_CH2_TX_PRBS_MODE_235_232   := 4'd5;
    }
    else if (CP_PCS_CH2_TX_PRBS_MODE == "LONG_0")
    {
        SC_PCS_CH2_TX_PRBS_MODE_235_232   := 4'd6;
    }
    else if (CP_PCS_CH2_TX_PRBS_MODE == "20UI")
    {
        SC_PCS_CH2_TX_PRBS_MODE_235_232   := 4'd7;
    }
    else if (CP_PCS_CH2_TX_PRBS_MODE == "D10_2")
    {
        SC_PCS_CH2_TX_PRBS_MODE_235_232   := 4'd8;
    }
    else if (CP_PCS_CH2_TX_PRBS_MODE == "PCIE")
    {
        SC_PCS_CH2_TX_PRBS_MODE_235_232   := 4'd9;
    }
    else
    {
        SC_PCS_CH2_TX_PRBS_MODE_235_232  :=  4'd0;
        error("Setting Error : The CP_PCS_CH2_TX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31,LONG_1,LONG_0,20UI,D10_2,PCIE",CP_PCS_CH2_TX_PRBS_MODE);
    }

//initial config body377 end


//initial config body378 begin
    if (CP_PCS_CH2_TX_INSERT_ER == "FALSE")
    {
        SC_PCS_CH2_TX_INSERT_ER_236   := 1'b0;
    }
    else if (CP_PCS_CH2_TX_INSERT_ER == "TRUE")
    {
        SC_PCS_CH2_TX_INSERT_ER_236   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TX_INSERT_ER_236  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TX_INSERT_ER is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TX_INSERT_ER);
    }

//initial config body378 end


//initial config body379 begin
    if (CP_PCS_CH2_ENABLE_PRBS_GEN == "FALSE")
    {
        SC_PCS_CH2_ENABLE_PRBS_GEN_237   := 1'b0;
    }
    else if (CP_PCS_CH2_ENABLE_PRBS_GEN == "TRUE")
    {
        SC_PCS_CH2_ENABLE_PRBS_GEN_237   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_ENABLE_PRBS_GEN_237  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_ENABLE_PRBS_GEN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_ENABLE_PRBS_GEN);
    }

//initial config body379 end


//initial config body380 begin
    if (CP_PCS_CH2_ERR_CNT >= 0 &&  CP_PCS_CH2_ERR_CNT<= 255)
    {
        SC_PCS_CH2_ERR_CNT_247_240  :=  CP_PCS_CH2_ERR_CNT;
    }
    else
    {
        SC_PCS_CH2_ERR_CNT_247_240  :=  0;
        error("Setting Error : The CP_PCS_CH2_ERR_CNT is set to %d. Legal values is 0 to 255",CP_PCS_CH2_ERR_CNT);
    }

//initial config body380 end


//initial config body381 begin
    if (CP_PCS_CH2_DEFAULT_RADDR >= 0 &&  CP_PCS_CH2_DEFAULT_RADDR<= 15)
    {
        SC_PCS_CH2_DEFAULT_RADDR_251_248  :=  CP_PCS_CH2_DEFAULT_RADDR;
    }
    else
    {
        SC_PCS_CH2_DEFAULT_RADDR_251_248  :=  0;
        error("Setting Error : The CP_PCS_CH2_DEFAULT_RADDR is set to %d. Legal values is 0 to 15",CP_PCS_CH2_DEFAULT_RADDR);
    }

//initial config body381 end


//initial config body382 begin
    if (CP_PCS_CH2_MASTER_CHECK_OFFSET >= 0 &&  CP_PCS_CH2_MASTER_CHECK_OFFSET<= 15)
    {
        SC_PCS_CH2_MASTER_CHECK_OFFSET_255_252  :=  CP_PCS_CH2_MASTER_CHECK_OFFSET;
    }
    else
    {
        SC_PCS_CH2_MASTER_CHECK_OFFSET_255_252  :=  0;
        error("Setting Error : The CP_PCS_CH2_MASTER_CHECK_OFFSET is set to %d. Legal values is 0 to 15",CP_PCS_CH2_MASTER_CHECK_OFFSET);
    }

//initial config body382 end


//initial config body383 begin
    if (CP_PCS_CH2_DELAY_SET >= 0 &&  CP_PCS_CH2_DELAY_SET<= 15)
    {
        SC_PCS_CH2_DELAY_SET_259_256  :=  CP_PCS_CH2_DELAY_SET;
    }
    else
    {
        SC_PCS_CH2_DELAY_SET_259_256  :=  0;
        error("Setting Error : The CP_PCS_CH2_DELAY_SET is set to %d. Legal values is 0 to 15",CP_PCS_CH2_DELAY_SET);
    }

//initial config body383 end


//initial config body384 begin
    if (CP_PCS_CH2_SEACH_OFFSET == "20BIT")
    {
        SC_PCS_CH2_SEACH_OFFSET_262_260   := 3'd0;
    }
    else if (CP_PCS_CH2_SEACH_OFFSET == "30BIT")
    {
        SC_PCS_CH2_SEACH_OFFSET_262_260   := 3'd1;
    }
    else if (CP_PCS_CH2_SEACH_OFFSET == "40BIT")
    {
        SC_PCS_CH2_SEACH_OFFSET_262_260   := 3'd2;
    }
    else if (CP_PCS_CH2_SEACH_OFFSET == "50BIT")
    {
        SC_PCS_CH2_SEACH_OFFSET_262_260   := 3'd3;
    }
    else if (CP_PCS_CH2_SEACH_OFFSET == "60BIT")
    {
        SC_PCS_CH2_SEACH_OFFSET_262_260   := 3'd4;
    }
    else if (CP_PCS_CH2_SEACH_OFFSET == "70BIT")
    {
        SC_PCS_CH2_SEACH_OFFSET_262_260   := 3'd5;
    }
    else if (CP_PCS_CH2_SEACH_OFFSET == "80BIT")
    {
        SC_PCS_CH2_SEACH_OFFSET_262_260   := 3'd6;
    }
    else
    {
        SC_PCS_CH2_SEACH_OFFSET_262_260  :=  3'd0;
        error("Setting Error : The CP_PCS_CH2_SEACH_OFFSET is set to %s. Legal values is 20BIT,30BIT,40BIT,50BIT,60BIT,70BIT,80BIT",CP_PCS_CH2_SEACH_OFFSET);
    }

//initial config body384 end


//initial config body385 begin
    if (CP_PCS_CH2_CEB_RAPIDLS_MMAX >= 0 &&  CP_PCS_CH2_CEB_RAPIDLS_MMAX<= 7)
    {
        SC_PCS_CH2_CEB_RAPIDLS_MMAX_266_264  :=  CP_PCS_CH2_CEB_RAPIDLS_MMAX;
    }
    else
    {
        SC_PCS_CH2_CEB_RAPIDLS_MMAX_266_264  :=  0;
        error("Setting Error : The CP_PCS_CH2_CEB_RAPIDLS_MMAX is set to %d. Legal values is 0 to 7",CP_PCS_CH2_CEB_RAPIDLS_MMAX);
    }

//initial config body385 end


//initial config body386 begin
    if (CP_PCS_CH2_CTC_AFULL >= 0 &&  CP_PCS_CH2_CTC_AFULL<= 31)
    {
        SC_PCS_CH2_CTC_AFULL_276_272  :=  CP_PCS_CH2_CTC_AFULL;
    }
    else
    {
        SC_PCS_CH2_CTC_AFULL_276_272  :=  0;
        error("Setting Error : The CP_PCS_CH2_CTC_AFULL is set to %d. Legal values is 0 to 31",CP_PCS_CH2_CTC_AFULL);
    }

//initial config body386 end


//initial config body387 begin
    if (CP_PCS_CH2_CTC_AEMPTY >= 0 &&  CP_PCS_CH2_CTC_AEMPTY<= 31)
    {
        SC_PCS_CH2_CTC_AEMPTY_284_280  :=  CP_PCS_CH2_CTC_AEMPTY;
    }
    else
    {
        SC_PCS_CH2_CTC_AEMPTY_284_280  :=  0;
        error("Setting Error : The CP_PCS_CH2_CTC_AEMPTY is set to %d. Legal values is 0 to 31",CP_PCS_CH2_CTC_AEMPTY);
    }

//initial config body387 end


//initial config body388 begin
    if (CP_PCS_CH2_CTC_CONTI_SKP_SET >= 0 &&  CP_PCS_CH2_CTC_CONTI_SKP_SET<= 1)
    {
        SC_PCS_CH2_CTC_CONTI_SKP_SET_285  :=  CP_PCS_CH2_CTC_CONTI_SKP_SET;
    }
    else
    {
        SC_PCS_CH2_CTC_CONTI_SKP_SET_285  :=  0;
        error("Setting Error : The CP_PCS_CH2_CTC_CONTI_SKP_SET is set to %d. Legal values is 0 to 1",CP_PCS_CH2_CTC_CONTI_SKP_SET);
    }

//initial config body388 end


//initial config body389 begin
    if (CP_PCS_CH2_FAR_LOOP == "FALSE")
    {
        SC_PCS_CH2_FAR_LOOP_288   := 1'b0;
    }
    else if (CP_PCS_CH2_FAR_LOOP == "TRUE")
    {
        SC_PCS_CH2_FAR_LOOP_288   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_FAR_LOOP_288  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_FAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_FAR_LOOP);
    }

//initial config body389 end


//initial config body390 begin
    if (CP_PCS_CH2_NEAR_LOOP == "FALSE")
    {
        SC_PCS_CH2_NEAR_LOOP_289   := 1'b0;
    }
    else if (CP_PCS_CH2_NEAR_LOOP == "TRUE")
    {
        SC_PCS_CH2_NEAR_LOOP_289   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_NEAR_LOOP_289  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_NEAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_NEAR_LOOP);
    }

//initial config body390 end


//initial config body391 begin
    if (CP_PCS_CH2_REG_TX2RX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH2_REG_TX2RX_PLOOP_EN_290   := 1'b0;
    }
    else if (CP_PCS_CH2_REG_TX2RX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH2_REG_TX2RX_PLOOP_EN_290   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_REG_TX2RX_PLOOP_EN_290  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_REG_TX2RX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_REG_TX2RX_PLOOP_EN);
    }

//initial config body391 end


//initial config body392 begin
    if (CP_PCS_CH2_REG_TX2RX_SLOOP_EN == "FALSE")
    {
        SC_PCS_CH2_REG_TX2RX_SLOOP_EN_291   := 1'b0;
    }
    else if (CP_PCS_CH2_REG_TX2RX_SLOOP_EN == "TRUE")
    {
        SC_PCS_CH2_REG_TX2RX_SLOOP_EN_291   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_REG_TX2RX_SLOOP_EN_291  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_REG_TX2RX_SLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_REG_TX2RX_SLOOP_EN);
    }

//initial config body392 end


//initial config body393 begin
    if (CP_PCS_CH2_REG_RX2TX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH2_REG_RX2TX_PLOOP_EN_292   := 1'b0;
    }
    else if (CP_PCS_CH2_REG_RX2TX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH2_REG_RX2TX_PLOOP_EN_292   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_REG_RX2TX_PLOOP_EN_292  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_REG_RX2TX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_REG_RX2TX_PLOOP_EN);
    }

//initial config body393 end


//initial config body394 begin
    if (CP_PCS_CH2_INT_RX_MASK_0 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_MASK_0_296   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_MASK_0 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_MASK_0_296   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_MASK_0_296  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_MASK_0);
    }

//initial config body394 end


//initial config body395 begin
    if (CP_PCS_CH2_INT_RX_MASK_1 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_MASK_1_297   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_MASK_1 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_MASK_1_297   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_MASK_1_297  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_MASK_1);
    }

//initial config body395 end


//initial config body396 begin
    if (CP_PCS_CH2_INT_RX_MASK_2 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_MASK_2_298   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_MASK_2 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_MASK_2_298   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_MASK_2_298  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_MASK_2);
    }

//initial config body396 end


//initial config body397 begin
    if (CP_PCS_CH2_INT_RX_MASK_3 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_MASK_3_299   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_MASK_3 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_MASK_3_299   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_MASK_3_299  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_MASK_3 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_MASK_3);
    }

//initial config body397 end


//initial config body398 begin
    if (CP_PCS_CH2_INT_RX_MASK_4 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_MASK_4_300   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_MASK_4 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_MASK_4_300   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_MASK_4_300  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_MASK_4 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_MASK_4);
    }

//initial config body398 end


//initial config body399 begin
    if (CP_PCS_CH2_INT_RX_MASK_5 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_MASK_5_301   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_MASK_5 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_MASK_5_301   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_MASK_5_301  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_MASK_5 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_MASK_5);
    }

//initial config body399 end


//initial config body400 begin
    if (CP_PCS_CH2_INT_RX_MASK_6 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_MASK_6_302   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_MASK_6 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_MASK_6_302   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_MASK_6_302  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_MASK_6 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_MASK_6);
    }

//initial config body400 end


//initial config body401 begin
    if (CP_PCS_CH2_INT_RX_MASK_7 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_MASK_7_303   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_MASK_7 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_MASK_7_303   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_MASK_7_303  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_MASK_7 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_MASK_7);
    }

//initial config body401 end


//initial config body402 begin
    if (CP_PCS_CH2_INT_RX_CLR_0 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_CLR_0_304   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_CLR_0 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_CLR_0_304   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_CLR_0_304  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_CLR_0);
    }

//initial config body402 end


//initial config body403 begin
    if (CP_PCS_CH2_INT_RX_CLR_1 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_CLR_1_305   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_CLR_1 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_CLR_1_305   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_CLR_1_305  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_CLR_1);
    }

//initial config body403 end


//initial config body404 begin
    if (CP_PCS_CH2_INT_RX_CLR_2 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_CLR_2_306   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_CLR_2 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_CLR_2_306   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_CLR_2_306  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_CLR_2);
    }

//initial config body404 end


//initial config body405 begin
    if (CP_PCS_CH2_INT_RX_CLR_3 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_CLR_3_307   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_CLR_3 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_CLR_3_307   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_CLR_3_307  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_CLR_3 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_CLR_3);
    }

//initial config body405 end


//initial config body406 begin
    if (CP_PCS_CH2_INT_RX_CLR_4 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_CLR_4_308   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_CLR_4 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_CLR_4_308   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_CLR_4_308  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_CLR_4 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_CLR_4);
    }

//initial config body406 end


//initial config body407 begin
    if (CP_PCS_CH2_INT_RX_CLR_5 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_CLR_5_309   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_CLR_5 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_CLR_5_309   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_CLR_5_309  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_CLR_5 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_CLR_5);
    }

//initial config body407 end


//initial config body408 begin
    if (CP_PCS_CH2_INT_RX_CLR_6 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_CLR_6_310   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_CLR_6 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_CLR_6_310   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_CLR_6_310  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_CLR_6 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_CLR_6);
    }

//initial config body408 end


//initial config body409 begin
    if (CP_PCS_CH2_INT_RX_CLR_7 == "FALSE")
    {
        SC_PCS_CH2_INT_RX_CLR_7_311   := 1'b0;
    }
    else if (CP_PCS_CH2_INT_RX_CLR_7 == "TRUE")
    {
        SC_PCS_CH2_INT_RX_CLR_7_311   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_INT_RX_CLR_7_311  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_INT_RX_CLR_7 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_INT_RX_CLR_7);
    }

//initial config body409 end


//initial config body410 begin
    if (CP_PCS_CH2_CA_RSTN_RX == "FALSE")
    {
        SC_PCS_CH2_CA_RSTN_RX_312   := 1'b0;
    }
    else if (CP_PCS_CH2_CA_RSTN_RX == "TRUE")
    {
        SC_PCS_CH2_CA_RSTN_RX_312   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_CA_RSTN_RX_312  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_CA_RSTN_RX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_CA_RSTN_RX);
    }

//initial config body410 end


//initial config body411 begin
    if (CP_PCS_CH2_CA_DYN_DLY_EN_RX == "FALSE")
    {
        SC_PCS_CH2_CA_DYN_DLY_EN_RX_313   := 1'b0;
    }
    else if (CP_PCS_CH2_CA_DYN_DLY_EN_RX == "TRUE")
    {
        SC_PCS_CH2_CA_DYN_DLY_EN_RX_313   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_CA_DYN_DLY_EN_RX_313  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_CA_DYN_DLY_EN_RX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_CA_DYN_DLY_EN_RX);
    }

//initial config body411 end


//initial config body412 begin
    if (CP_PCS_CH2_CA_DYN_DLY_SEL_RX == "FALSE")
    {
        SC_PCS_CH2_CA_DYN_DLY_SEL_RX_314   := 1'b0;
    }
    else if (CP_PCS_CH2_CA_DYN_DLY_SEL_RX == "TRUE")
    {
        SC_PCS_CH2_CA_DYN_DLY_SEL_RX_314   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_CA_DYN_DLY_SEL_RX_314  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_CA_DYN_DLY_SEL_RX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_CA_DYN_DLY_SEL_RX);
    }

//initial config body412 end


//initial config body413 begin
    if (CP_PCS_CH2_CA_RX >= 0 &&  CP_PCS_CH2_CA_RX <= 255)
    {
        SC_PCS_CH2_CA_RX_322_315  :=  CP_PCS_CH2_CA_RX;
    }
    else
    {
        SC_PCS_CH2_CA_RX_322_315  :=  0;
        error("Setting Error : The CP_PCS_CH2_CA_RX is set to %d. Legal values is 0 to 255",CP_PCS_CH2_CA_RX);
    }

//initial config body413 end


//initial config body414 begin
    if (CP_PCS_CH2_CA_RSTN_TX == "FALSE")
    {
        SC_PCS_CH2_CA_RSTN_TX_323   := 1'b0;
    }
    else if (CP_PCS_CH2_CA_RSTN_TX == "TRUE")
    {
        SC_PCS_CH2_CA_RSTN_TX_323   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_CA_RSTN_TX_323  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_CA_RSTN_TX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_CA_RSTN_TX);
    }

//initial config body414 end


//initial config body415 begin
    if (CP_PCS_CH2_CA_DYN_DLY_EN_TX == "FALSE")
    {
        SC_PCS_CH2_CA_DYN_DLY_EN_TX_324   := 1'b0;
    }
    else if (CP_PCS_CH2_CA_DYN_DLY_EN_TX == "TRUE")
    {
        SC_PCS_CH2_CA_DYN_DLY_EN_TX_324   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_CA_DYN_DLY_EN_TX_324  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_CA_DYN_DLY_EN_TX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_CA_DYN_DLY_EN_TX);
    }

//initial config body415 end


//initial config body416 begin
    if (CP_PCS_CH2_CA_DYN_DLY_SEL_TX == "FALSE")
    {
        SC_PCS_CH2_CA_DYN_DLY_SEL_TX_325   := 1'b0;
    }
    else if (CP_PCS_CH2_CA_DYN_DLY_SEL_TX == "TRUE")
    {
        SC_PCS_CH2_CA_DYN_DLY_SEL_TX_325   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_CA_DYN_DLY_SEL_TX_325  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_CA_DYN_DLY_SEL_TX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_CA_DYN_DLY_SEL_TX);
    }

//initial config body416 end


//initial config body417 begin
    if (CP_PCS_CH2_CA_TX >= 0 &&  CP_PCS_CH2_CA_TX <= 255)
    {
        SC_PCS_CH2_CA_TX_333_326  :=  CP_PCS_CH2_CA_TX;
    }
    else
    {
        SC_PCS_CH2_CA_TX_333_326  :=  0;
        error("Setting Error : The CP_PCS_CH2_CA_TX is set to %d. Legal values is 0 to 255",CP_PCS_CH2_CA_TX);
    }

//initial config body417 end


//initial config body418 begin
    if (CP_PCS_CH2_RXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH2_RXPRBS_PWR_REDUCTION_334   := 1'b0;
    }
    else if (CP_PCS_CH2_RXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH2_RXPRBS_PWR_REDUCTION_334   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_RXPRBS_PWR_REDUCTION_334  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_RXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH2_RXPRBS_PWR_REDUCTION);
    }

//initial config body418 end


//initial config body419 begin
    if (CP_PCS_CH2_WDALIGN_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH2_WDALIGN_PWR_REDUCTION_335   := 1'b0;
    }
    else if (CP_PCS_CH2_WDALIGN_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH2_WDALIGN_PWR_REDUCTION_335   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_WDALIGN_PWR_REDUCTION_335  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_WDALIGN_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH2_WDALIGN_PWR_REDUCTION);
    }

//initial config body419 end


//initial config body420 begin
    if (CP_PCS_CH2_RXDEC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH2_RXDEC_PWR_REDUCTION_336   := 1'b0;
    }
    else if (CP_PCS_CH2_RXDEC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH2_RXDEC_PWR_REDUCTION_336   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_RXDEC_PWR_REDUCTION_336  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_RXDEC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH2_RXDEC_PWR_REDUCTION);
    }

//initial config body420 end


//initial config body421 begin
    if (CP_PCS_CH2_RXCB_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH2_RXCB_PWR_REDUCTION_337   := 1'b0;
    }
    else if (CP_PCS_CH2_RXCB_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH2_RXCB_PWR_REDUCTION_337   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_RXCB_PWR_REDUCTION_337  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_RXCB_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH2_RXCB_PWR_REDUCTION);
    }

//initial config body421 end


//initial config body422 begin
    if (CP_PCS_CH2_RXCTC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH2_RXCTC_PWR_REDUCTION_338   := 1'b0;
    }
    else if (CP_PCS_CH2_RXCTC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH2_RXCTC_PWR_REDUCTION_338   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_RXCTC_PWR_REDUCTION_338  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_RXCTC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH2_RXCTC_PWR_REDUCTION);
    }

//initial config body422 end


//initial config body423 begin
    if (CP_PCS_CH2_RXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH2_RXGEAR_PWR_REDUCTION_339   := 1'b0;
    }
    else if (CP_PCS_CH2_RXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH2_RXGEAR_PWR_REDUCTION_339   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_RXGEAR_PWR_REDUCTION_339  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_RXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH2_RXGEAR_PWR_REDUCTION);
    }

//initial config body423 end


//initial config body424 begin
    if (CP_PCS_CH2_RXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH2_RXBRG_PWR_REDUCTION_340   := 1'b0;
    }
    else if (CP_PCS_CH2_RXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH2_RXBRG_PWR_REDUCTION_340   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_RXBRG_PWR_REDUCTION_340  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_RXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH2_RXBRG_PWR_REDUCTION);
    }

//initial config body424 end


//initial config body425 begin
    if (CP_PCS_CH2_RXTEST_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH2_RXTEST_PWR_REDUCTION_341   := 1'b0;
    }
    else if (CP_PCS_CH2_RXTEST_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH2_RXTEST_PWR_REDUCTION_341   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_RXTEST_PWR_REDUCTION_341  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_RXTEST_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH2_RXTEST_PWR_REDUCTION);
    }

//initial config body425 end


//initial config body426 begin
    if (CP_PCS_CH2_TXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH2_TXBRG_PWR_REDUCTION_342   := 1'b0;
    }
    else if (CP_PCS_CH2_TXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH2_TXBRG_PWR_REDUCTION_342   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TXBRG_PWR_REDUCTION_342  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH2_TXBRG_PWR_REDUCTION);
    }

//initial config body426 end


//initial config body427 begin
    if (CP_PCS_CH2_TXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH2_TXGEAR_PWR_REDUCTION_343   := 1'b0;
    }
    else if (CP_PCS_CH2_TXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH2_TXGEAR_PWR_REDUCTION_343   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TXGEAR_PWR_REDUCTION_343  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH2_TXGEAR_PWR_REDUCTION);
    }

//initial config body427 end


//initial config body428 begin
    if (CP_PCS_CH2_TXENC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH2_TXENC_PWR_REDUCTION_344   := 1'b0;
    }
    else if (CP_PCS_CH2_TXENC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH2_TXENC_PWR_REDUCTION_344   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TXENC_PWR_REDUCTION_344  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TXENC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH2_TXENC_PWR_REDUCTION);
    }

//initial config body428 end


//initial config body429 begin
    if (CP_PCS_CH2_TXBSLP_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH2_TXBSLP_PWR_REDUCTION_345   := 1'b0;
    }
    else if (CP_PCS_CH2_TXBSLP_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH2_TXBSLP_PWR_REDUCTION_345   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TXBSLP_PWR_REDUCTION_345  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TXBSLP_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH2_TXBSLP_PWR_REDUCTION);
    }

//initial config body429 end


//initial config body430 begin
    if (CP_PCS_CH2_TXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH2_TXPRBS_PWR_REDUCTION_346   := 1'b0;
    }
    else if (CP_PCS_CH2_TXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH2_TXPRBS_PWR_REDUCTION_346   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TXPRBS_PWR_REDUCTION_346  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH2_TXPRBS_PWR_REDUCTION);
    }

//initial config body430 end


//initial config body431 begin
    if (CP_PCS_CH2_TXBRG_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH2_TXBRG_FULL_CHK_EN_347   := 1'b0;
    }
    else if (CP_PCS_CH2_TXBRG_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH2_TXBRG_FULL_CHK_EN_347   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TXBRG_FULL_CHK_EN_347  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TXBRG_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TXBRG_FULL_CHK_EN);
    }

//initial config body431 end


//initial config body432 begin
    if (CP_PCS_CH2_TXBRG_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH2_TXBRG_EMPTY_CHK_EN_348   := 1'b0;
    }
    else if (CP_PCS_CH2_TXBRG_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH2_TXBRG_EMPTY_CHK_EN_348   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_TXBRG_EMPTY_CHK_EN_348  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_TXBRG_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_TXBRG_EMPTY_CHK_EN);
    }

//initial config body432 end


//initial config body433 begin
    if (CP_PCS_CH2_RXBRG_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH2_RXBRG_FULL_CHK_EN_349   := 1'b0;
    }
    else if (CP_PCS_CH2_RXBRG_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH2_RXBRG_FULL_CHK_EN_349   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_RXBRG_FULL_CHK_EN_349  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_RXBRG_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_RXBRG_FULL_CHK_EN);
    }

//initial config body433 end


//initial config body434 begin
    if (CP_PCS_CH2_RXBRG_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH2_RXBRG_EMPTY_CHK_EN_350   := 1'b0;
    }
    else if (CP_PCS_CH2_RXBRG_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH2_RXBRG_EMPTY_CHK_EN_350   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_RXBRG_EMPTY_CHK_EN_350  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_RXBRG_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_RXBRG_EMPTY_CHK_EN);
    }

//initial config body434 end


//initial config body435 begin
    if (CP_PCS_CH2_CTC_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH2_CTC_FULL_CHK_EN_351   := 1'b0;
    }
    else if (CP_PCS_CH2_CTC_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH2_CTC_FULL_CHK_EN_351   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_CTC_FULL_CHK_EN_351  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_CTC_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_CTC_FULL_CHK_EN);
    }

//initial config body435 end


//initial config body436 begin
    if (CP_PCS_CH2_CTC_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH2_CTC_EMPTY_CHK_EN_352   := 1'b0;
    }
    else if (CP_PCS_CH2_CTC_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH2_CTC_EMPTY_CHK_EN_352   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_CTC_EMPTY_CHK_EN_352  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_CTC_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_CTC_EMPTY_CHK_EN);
    }

//initial config body436 end


//initial config body437 begin
    if (CP_PCS_CH2_CEB_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH2_CEB_FULL_CHK_EN_353   := 1'b0;
    }
    else if (CP_PCS_CH2_CEB_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH2_CEB_FULL_CHK_EN_353   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_CEB_FULL_CHK_EN_353  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_CEB_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_CEB_FULL_CHK_EN);
    }

//initial config body437 end


//initial config body438 begin
    if (CP_PCS_CH2_CEB_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH2_CEB_EMPTY_CHK_EN_354   := 1'b0;
    }
    else if (CP_PCS_CH2_CEB_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH2_CEB_EMPTY_CHK_EN_354   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_CEB_EMPTY_CHK_EN_354  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_CEB_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_CEB_EMPTY_CHK_EN);
    }

//initial config body438 end


//initial config body439 begin
    if (CP_PCS_CH2_FLP_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH2_FLP_FULL_CHK_EN_355   := 1'b0;
    }
    else if (CP_PCS_CH2_FLP_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH2_FLP_FULL_CHK_EN_355   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_FLP_FULL_CHK_EN_355  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_FLP_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_FLP_FULL_CHK_EN);
    }

//initial config body439 end


//initial config body440 begin
    if (CP_PCS_CH2_FLP_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH2_FLP_EMPTY_CHK_EN_356   := 1'b0;
    }
    else if (CP_PCS_CH2_FLP_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH2_FLP_EMPTY_CHK_EN_356   := 1'b1;
    }
    else
    {
        SC_PCS_CH2_FLP_EMPTY_CHK_EN_356  :=  1'b0;
        error("Setting Error : The CP_PCS_CH2_FLP_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH2_FLP_EMPTY_CHK_EN);
    }

//initial config body440 end


//initial config body441 begin
    if (CP_PCS_CH3_BYPASS_WORD_ALIGN == "FALSE")
    {
        SC_PCS_CH3_BYPASS_WORD_ALIGN_1   := 1'b0;
    }
    else if (CP_PCS_CH3_BYPASS_WORD_ALIGN == "TRUE")
    {
        SC_PCS_CH3_BYPASS_WORD_ALIGN_1   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_BYPASS_WORD_ALIGN_1  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_BYPASS_WORD_ALIGN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_BYPASS_WORD_ALIGN);
    }

//initial config body441 end


//initial config body442 begin
    if (CP_PCS_CH3_BYPASS_DENC == "FALSE")
    {
        SC_PCS_CH3_BYPASS_DENC_2   := 1'b0;
    }
    else if (CP_PCS_CH3_BYPASS_DENC == "TRUE")
    {
        SC_PCS_CH3_BYPASS_DENC_2   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_BYPASS_DENC_2  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_BYPASS_DENC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_BYPASS_DENC);
    }

//initial config body442 end


//initial config body443 begin
    if (CP_PCS_CH3_BYPASS_BONDING == "FALSE")
    {
        SC_PCS_CH3_BYPASS_BONDING_3   := 1'b0;
    }
    else if (CP_PCS_CH3_BYPASS_BONDING == "TRUE")
    {
        SC_PCS_CH3_BYPASS_BONDING_3   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_BYPASS_BONDING_3  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_BYPASS_BONDING is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_BYPASS_BONDING);
    }

//initial config body443 end


//initial config body444 begin
    if (CP_PCS_CH3_BYPASS_CTC == "FALSE")
    {
        SC_PCS_CH3_BYPASS_CTC_4   := 1'b0;
    }
    else if (CP_PCS_CH3_BYPASS_CTC == "TRUE")
    {
        SC_PCS_CH3_BYPASS_CTC_4   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_BYPASS_CTC_4  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_BYPASS_CTC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_BYPASS_CTC);
    }

//initial config body444 end


//initial config body445 begin
    if (CP_PCS_CH3_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH3_BYPASS_GEAR_5   := 1'b0;
    }
    else if (CP_PCS_CH3_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH3_BYPASS_GEAR_5   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_BYPASS_GEAR_5  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_BYPASS_GEAR);
    }

//initial config body445 end


//initial config body446 begin
    if (CP_PCS_CH3_BYPASS_BRIDGE == "FALSE")
    {
        SC_PCS_CH3_BYPASS_BRIDGE_6   := 1'b0;
    }
    else if (CP_PCS_CH3_BYPASS_BRIDGE == "TRUE")
    {
        SC_PCS_CH3_BYPASS_BRIDGE_6   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_BYPASS_BRIDGE_6  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_BYPASS_BRIDGE is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_BYPASS_BRIDGE);
    }

//initial config body446 end


//initial config body447 begin
    if (CP_PCS_CH3_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH3_BYPASS_BRIDGE_FIFO_7   := 1'b0;
    }
    else if (CP_PCS_CH3_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH3_BYPASS_BRIDGE_FIFO_7   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_BYPASS_BRIDGE_FIFO_7  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_BYPASS_BRIDGE_FIFO);
    }

//initial config body447 end


//initial config body448 begin
    if (CP_PCS_CH3_DATA_MODE == "X8")
    {
        SC_PCS_CH3_DATA_MODE_8   := 1'b0;
    }
    else if (CP_PCS_CH3_DATA_MODE == "X10")
    {
        SC_PCS_CH3_DATA_MODE_8   := 1'b0;
    }
    else if (CP_PCS_CH3_DATA_MODE == "X16")
    {
        SC_PCS_CH3_DATA_MODE_8   := 1'b1;
    }
    else if (CP_PCS_CH3_DATA_MODE == "X20")
    {
        SC_PCS_CH3_DATA_MODE_8   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_DATA_MODE_8  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_DATA_MODE is set to %s. Legal values is X8,X10,X16,X20",CP_PCS_CH3_DATA_MODE);
    }

//initial config body448 end


//initial config body449 begin
    if (CP_PCS_CH3_RX_POLARITY_INV == "DELAY")
    {
        SC_PCS_CH3_RX_POLARITY_INV_10_9   := 2'b00;
    }
    else if (CP_PCS_CH3_RX_POLARITY_INV == "BIT_POLARITY_INVERION")
    {
        SC_PCS_CH3_RX_POLARITY_INV_10_9   := 2'b01;
    }
    else if (CP_PCS_CH3_RX_POLARITY_INV == "BIT_REVERSAL")
    {
        SC_PCS_CH3_RX_POLARITY_INV_10_9   := 2'b10;
    }
    else if (CP_PCS_CH3_RX_POLARITY_INV == "BOTH")
    {
        SC_PCS_CH3_RX_POLARITY_INV_10_9   := 2'b11;
    }
    else
    {
        SC_PCS_CH3_RX_POLARITY_INV_10_9  :=  2'b00;
        error("Setting Error : The CP_PCS_CH3_RX_POLARITY_INV is set to %s. Legal values is DELAY,BIT_POLARITY_INVERION,BIT_REVERSAL,BOTH",CP_PCS_CH3_RX_POLARITY_INV);
    }

//initial config body449 end


//initial config body450 begin
    if (CP_PCS_CH3_ALIGN_MODE == "1GB")
    {
        SC_PCS_CH3_ALIGN_MODE_12_11   := 2'b00;
    }
    else if (CP_PCS_CH3_ALIGN_MODE == "10GB")
    {
        SC_PCS_CH3_ALIGN_MODE_12_11   := 2'b01;
    }
    else if (CP_PCS_CH3_ALIGN_MODE == "RAPIDIO")
    {
        SC_PCS_CH3_ALIGN_MODE_12_11   := 2'b10;
    }
    else if (CP_PCS_CH3_ALIGN_MODE == "OUTSIDE")
    {
        SC_PCS_CH3_ALIGN_MODE_12_11   := 2'b11;
    }
    else
    {
        SC_PCS_CH3_ALIGN_MODE_12_11  :=  2'b00;
        error("Setting Error : The CP_PCS_CH3_ALIGN_MODE is set to %s. Legal values is 1GB,10GB,RAPIDIO,OUTSIDE",CP_PCS_CH3_ALIGN_MODE);
    }

//initial config body450 end


//initial config body451 begin
    if (CP_PCS_CH3_SAMP_16B == "X16")
    {
        SC_PCS_CH3_SAMP_16B_13   := 1'b1;
    }
    else if (CP_PCS_CH3_SAMP_16B == "X20")
    {
        SC_PCS_CH3_SAMP_16B_13   := 1'b0;
    }
    else
    {
        SC_PCS_CH3_SAMP_16B_13  :=  1'b1;
        error("Setting Error : The CP_PCS_CH3_SAMP_16B is set to %s. Legal values is X16,X20",CP_PCS_CH3_SAMP_16B);
    }

//initial config body451 end


//initial config body452 begin
    if (CP_PCS_CH3_FARLP_PWR_REDUCTION == "FALSE")
    {
        SC_PCS_CH3_FARLP_PWR_REDUCTION_14   := 1'b0;
    }
    else if (CP_PCS_CH3_FARLP_PWR_REDUCTION == "TRUE")
    {
        SC_PCS_CH3_FARLP_PWR_REDUCTION_14   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_FARLP_PWR_REDUCTION_14  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_FARLP_PWR_REDUCTION is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_FARLP_PWR_REDUCTION);
    }

//initial config body452 end


//initial config body453 begin
    if (CP_PCS_CH3_COMMA_REG0 >= 0 &&  CP_PCS_CH3_COMMA_REG0<= 1023)
    {
        SC_PCS_CH3_COMMA_REG0_25_16  :=  CP_PCS_CH3_COMMA_REG0;
    }
    else
    {
        SC_PCS_CH3_COMMA_REG0_25_16  :=  0;
        error("Setting Error : The CP_PCS_CH3_COMMA_REG0 is set to %d. Legal values is 0 to 1023",CP_PCS_CH3_COMMA_REG0);
    }

//initial config body453 end


//initial config body454 begin
    if (CP_PCS_CH3_COMMA_MASK >= 0 &&  CP_PCS_CH3_COMMA_MASK<= 1023)
    {
        SC_PCS_CH3_COMMA_MASK_35_26  :=  CP_PCS_CH3_COMMA_MASK;
    }
    else
    {
        SC_PCS_CH3_COMMA_MASK_35_26  :=  0;
        error("Setting Error : The CP_PCS_CH3_COMMA_MASK is set to %d. Legal values is 0 to 1023",CP_PCS_CH3_COMMA_MASK);
    }

//initial config body454 end


//initial config body455 begin
    if (CP_PCS_CH3_CEB_MODE == "10GB")
    {
        SC_PCS_CH3_CEB_MODE_37_36   := 2'b00;
    }
    else if (CP_PCS_CH3_CEB_MODE == "RAPIDIO")
    {
        SC_PCS_CH3_CEB_MODE_37_36   := 2'b01;
    }
    else if (CP_PCS_CH3_CEB_MODE == "OUTSIDE")
    {
        SC_PCS_CH3_CEB_MODE_37_36   := 2'b10;
    }
    else
    {
        SC_PCS_CH3_CEB_MODE_37_36  :=  2'b00;
        error("Setting Error : The CP_PCS_CH3_CEB_MODE is set to %s. Legal values is 10GB,RAPIDIO,OUTSIDE",CP_PCS_CH3_CEB_MODE);
    }

//initial config body455 end


//initial config body456 begin
    if (CP_PCS_CH3_CTC_MODE == "1SKIP")
    {
        SC_PCS_CH3_CTC_MODE_39_38   := 2'b00;
    }
    else if (CP_PCS_CH3_CTC_MODE == "2SKIP")
    {
        SC_PCS_CH3_CTC_MODE_39_38   := 2'b01;
    }
    else if (CP_PCS_CH3_CTC_MODE == "PCIE_2BYTE")
    {
        SC_PCS_CH3_CTC_MODE_39_38   := 2'b10;
    }
    else if (CP_PCS_CH3_CTC_MODE == "4SKIP")
    {
        SC_PCS_CH3_CTC_MODE_39_38   := 2'b11;
    }
    else
    {
        SC_PCS_CH3_CTC_MODE_39_38  :=  2'b00;
        error("Setting Error : The CP_PCS_CH3_CTC_MODE is set to %s. Legal values is 1SKIP,2SKIP,PCIE_2BYTE,4SKIP",CP_PCS_CH3_CTC_MODE);
    }

//initial config body456 end


//initial config body457 begin
    if (CP_PCS_CH3_A_REG >= 0 &&  CP_PCS_CH3_A_REG<= 255)
    {
        SC_PCS_CH3_A_REG_47_40  :=  CP_PCS_CH3_A_REG;
    }
    else
    {
        SC_PCS_CH3_A_REG_47_40  :=  0;
        error("Setting Error : The CP_PCS_CH3_A_REG is set to %d. Legal values is 0 to 255",CP_PCS_CH3_A_REG);
    }

//initial config body457 end


//initial config body458 begin
    if (CP_PCS_CH3_GE_AUTO_EN == "FALSE")
    {
        SC_PCS_CH3_GE_AUTO_EN_49   := 1'b0;
    }
    else if (CP_PCS_CH3_GE_AUTO_EN == "TRUE")
    {
        SC_PCS_CH3_GE_AUTO_EN_49   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_GE_AUTO_EN_49  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_GE_AUTO_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_GE_AUTO_EN);
    }

//initial config body458 end


//initial config body459 begin
    if (CP_PCS_CH3_SKIP_REG0 >= 0 &&  CP_PCS_CH3_SKIP_REG0<= 1023)
    {
        SC_PCS_CH3_SKIP_REG0_59_50  :=  CP_PCS_CH3_SKIP_REG0;
    }
    else
    {
        SC_PCS_CH3_SKIP_REG0_59_50  :=  0;
        error("Setting Error : The CP_PCS_CH3_SKIP_REG0 is set to %d. Legal values is 0 to 1023",CP_PCS_CH3_SKIP_REG0);
    }

//initial config body459 end


//initial config body460 begin
    if (CP_PCS_CH3_SKIP_REG1 >= 0 &&  CP_PCS_CH3_SKIP_REG1<= 1023)
    {
        SC_PCS_CH3_SKIP_REG1_69_60  :=  CP_PCS_CH3_SKIP_REG1;
    }
    else
    {
        SC_PCS_CH3_SKIP_REG1_69_60  :=  0;
        error("Setting Error : The CP_PCS_CH3_SKIP_REG1 is set to %d. Legal values is 0 to 1023",CP_PCS_CH3_SKIP_REG1);
    }

//initial config body460 end


//initial config body461 begin
    if (CP_PCS_CH3_SKIP_REG2 >= 0 &&  CP_PCS_CH3_SKIP_REG2<= 1023)
    {
        SC_PCS_CH3_SKIP_REG2_79_70  :=  CP_PCS_CH3_SKIP_REG2;
    }
    else
    {
        SC_PCS_CH3_SKIP_REG2_79_70  :=  0;
        error("Setting Error : The CP_PCS_CH3_SKIP_REG2 is set to %d. Legal values is 0 to 1023",CP_PCS_CH3_SKIP_REG2);
    }

//initial config body461 end


//initial config body462 begin
    if (CP_PCS_CH3_SKIP_REG3 >= 0 &&  CP_PCS_CH3_SKIP_REG3<= 1023)
    {
        SC_PCS_CH3_SKIP_REG3_89_80  :=  CP_PCS_CH3_SKIP_REG3;
    }
    else
    {
        SC_PCS_CH3_SKIP_REG3_89_80  :=  0;
        error("Setting Error : The CP_PCS_CH3_SKIP_REG3 is set to %d. Legal values is 0 to 1023",CP_PCS_CH3_SKIP_REG3);
    }

//initial config body462 end


//initial config body463 begin
    if (CP_PCS_CH3_DEC_DUAL == "FALSE")
    {
        SC_PCS_CH3_DEC_DUAL_90   := 1'b0;
    }
    else if (CP_PCS_CH3_DEC_DUAL == "TRUE")
    {
        SC_PCS_CH3_DEC_DUAL_90   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_DEC_DUAL_90  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_DEC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_DEC_DUAL);
    }

//initial config body463 end


//initial config body464 begin
    if (CP_PCS_CH3_SPLIT == "FALSE")
    {
        SC_PCS_CH3_SPLIT_91   := 1'b0;
    }
    else if (CP_PCS_CH3_SPLIT == "TRUE")
    {
        SC_PCS_CH3_SPLIT_91   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_SPLIT_91  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_SPLIT);
    }

//initial config body464 end


//initial config body465 begin
    if (CP_PCS_CH3_FIFOFLAG_CTC == "FALSE")
    {
        SC_PCS_CH3_FIFOFLAG_CTC_92   := 1'b0;
    }
    else if (CP_PCS_CH3_FIFOFLAG_CTC == "TRUE")
    {
        SC_PCS_CH3_FIFOFLAG_CTC_92   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_FIFOFLAG_CTC_92  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_FIFOFLAG_CTC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_FIFOFLAG_CTC);
    }

//initial config body465 end


//initial config body466 begin
    if (CP_PCS_CH3_COMMA_DET_MODE == "COMMA_PATTERN")
    {
        SC_PCS_CH3_COMMA_DET_MODE_93   := 1'b0;
    }
    else if (CP_PCS_CH3_COMMA_DET_MODE == "RX_CLK_SLIP")
    {
        SC_PCS_CH3_COMMA_DET_MODE_93   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_COMMA_DET_MODE_93  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_COMMA_DET_MODE is set to %s. Legal values is COMMA_PATTERN,RX_CLK_SLIP",CP_PCS_CH3_COMMA_DET_MODE);
    }

//initial config body466 end


//initial config body467 begin
    if (CP_PCS_CH3_ERRDETECT_SILENCE == "FALSE")
    {
        SC_PCS_CH3_ERRDETECT_SILENCE_94   := 1'b0;
    }
    else if (CP_PCS_CH3_ERRDETECT_SILENCE == "TRUE")
    {
        SC_PCS_CH3_ERRDETECT_SILENCE_94   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_ERRDETECT_SILENCE_94  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_ERRDETECT_SILENCE is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_ERRDETECT_SILENCE);
    }

//initial config body467 end


//initial config body468 begin
    if (CP_PCS_CH3_PMA_RCLK_POLINV == "PMA_RCLK")
    {
        SC_PCS_CH3_PMA_RCLK_POLINV_96   := 1'b0;
    }
    else if (CP_PCS_CH3_PMA_RCLK_POLINV == "REVERSE_OF_PMA_RCLK")
    {
        SC_PCS_CH3_PMA_RCLK_POLINV_96   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_PMA_RCLK_POLINV_96  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_PMA_RCLK_POLINV is set to %s. Legal values is PMA_RCLK,REVERSE_OF_PMA_RCLK",CP_PCS_CH3_PMA_RCLK_POLINV);
    }

//initial config body468 end


//initial config body469 begin
    if (CP_PCS_CH3_PCS_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH3_PCS_RCLK_SEL_98_97   := 2'b00;
    }
    else if (CP_PCS_CH3_PCS_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH3_PCS_RCLK_SEL_98_97   := 2'b01;
    }
    else if (CP_PCS_CH3_PCS_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH3_PCS_RCLK_SEL_98_97   := 2'b11;
    }
    else
    {
        SC_PCS_CH3_PCS_RCLK_SEL_98_97  :=  2'b00;
        error("Setting Error : The CP_PCS_CH3_PCS_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK",CP_PCS_CH3_PCS_RCLK_SEL);
    }

//initial config body469 end


//initial config body470 begin
    if (CP_PCS_CH3_CB_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH3_CB_RCLK_SEL_100_99   := 2'b00;
    }
    else if (CP_PCS_CH3_CB_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH3_CB_RCLK_SEL_100_99   := 2'b01;
    }
    else if (CP_PCS_CH3_CB_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH3_CB_RCLK_SEL_100_99   := 2'b10;
    }
    else if (CP_PCS_CH3_CB_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH3_CB_RCLK_SEL_100_99   := 2'b11;
    }
    else
    {
        SC_PCS_CH3_CB_RCLK_SEL_100_99  :=  2'b00;
        error("Setting Error : The CP_PCS_CH3_CB_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK",CP_PCS_CH3_CB_RCLK_SEL);
    }

//initial config body470 end


//initial config body471 begin
    if (CP_PCS_CH3_AFTER_CTC_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_SEL_102_101   := 2'b00;
    }
    else if (CP_PCS_CH3_AFTER_CTC_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_SEL_102_101   := 2'b01;
    }
    else if (CP_PCS_CH3_AFTER_CTC_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_SEL_102_101   := 2'b10;
    }
    else if (CP_PCS_CH3_AFTER_CTC_RCLK_SEL == "RCLK2")
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_SEL_102_101   := 2'b11;
    }
    else
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_SEL_102_101  :=  2'b00;
        error("Setting Error : The CP_PCS_CH3_AFTER_CTC_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK2",CP_PCS_CH3_AFTER_CTC_RCLK_SEL);
    }

//initial config body471 end


//initial config body472 begin
    if (CP_PCS_CH3_RCLK_POLINV == "RCLK")
    {
        SC_PCS_CH3_RCLK_POLINV_103   := 1'b0;
    }
    else if (CP_PCS_CH3_RCLK_POLINV == "REVERSE_OF_RCLK")
    {
        SC_PCS_CH3_RCLK_POLINV_103   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_RCLK_POLINV_103  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_RCLK_POLINV is set to %s. Legal values is RCLK,REVERSE_OF_RCLK",CP_PCS_CH3_RCLK_POLINV);
    }

//initial config body472 end


//initial config body473 begin
    if (CP_PCS_CH3_BRIDGE_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH3_BRIDGE_RCLK_SEL_105_104   := 2'b00;
    }
    else if (CP_PCS_CH3_BRIDGE_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH3_BRIDGE_RCLK_SEL_105_104   := 2'b01;
    }
    else if (CP_PCS_CH3_BRIDGE_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH3_BRIDGE_RCLK_SEL_105_104   := 2'b10;
    }
    else if (CP_PCS_CH3_BRIDGE_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH3_BRIDGE_RCLK_SEL_105_104   := 2'b11;
    }
    else
    {
        SC_PCS_CH3_BRIDGE_RCLK_SEL_105_104  :=  2'b00;
        error("Setting Error : The CP_PCS_CH3_BRIDGE_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK",CP_PCS_CH3_BRIDGE_RCLK_SEL);
    }

//initial config body473 end


//initial config body474 begin
    if (CP_PCS_CH3_PCS_RCLK_EN == "FALSE")
    {
        SC_PCS_CH3_PCS_RCLK_EN_106   := 1'b0;
    }
    else if (CP_PCS_CH3_PCS_RCLK_EN == "TRUE")
    {
        SC_PCS_CH3_PCS_RCLK_EN_106   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_PCS_RCLK_EN_106  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_PCS_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_PCS_RCLK_EN);
    }

//initial config body474 end


//initial config body475 begin
    if (CP_PCS_CH3_CB_RCLK_EN == "FALSE")
    {
        SC_PCS_CH3_CB_RCLK_EN_107   := 1'b0;
    }
    else if (CP_PCS_CH3_CB_RCLK_EN == "TRUE")
    {
        SC_PCS_CH3_CB_RCLK_EN_107   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_CB_RCLK_EN_107  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_CB_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_CB_RCLK_EN);
    }

//initial config body475 end


//initial config body476 begin
    if (CP_PCS_CH3_AFTER_CTC_RCLK_EN == "FALSE")
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_EN_108   := 1'b0;
    }
    else if (CP_PCS_CH3_AFTER_CTC_RCLK_EN == "TRUE")
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_EN_108   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_EN_108  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_AFTER_CTC_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_AFTER_CTC_RCLK_EN);
    }

//initial config body476 end


//initial config body477 begin
    if (CP_PCS_CH3_AFTER_CTC_RCLK_EN_GB == "FALSE")
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_EN_GB_109   := 1'b0;
    }
    else if (CP_PCS_CH3_AFTER_CTC_RCLK_EN_GB == "TRUE")
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_EN_GB_109   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_EN_GB_109  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_AFTER_CTC_RCLK_EN_GB is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_AFTER_CTC_RCLK_EN_GB);
    }

//initial config body477 end


//initial config body478 begin
    if (CP_PCS_CH3_AFTER_CTC_RCLK_SEL_1 == "PMA_RCLK")
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b00;
    }
    else if (CP_PCS_CH3_AFTER_CTC_RCLK_SEL_1 == "PMA_TCLK")
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b01;
    }
    else if (CP_PCS_CH3_AFTER_CTC_RCLK_SEL_1 == "MCB_RCLK")
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b10;
    }
    else if (CP_PCS_CH3_AFTER_CTC_RCLK_SEL_1 == "RCLK2")
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_SEL_1_111_110   := 2'b11;
    }
    else
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_SEL_1_111_110  :=  2'b00;
        error("Setting Error : The CP_PCS_CH3_AFTER_CTC_RCLK_SEL_1 is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK2",CP_PCS_CH3_AFTER_CTC_RCLK_SEL_1);
    }

//initial config body478 end


//initial config body479 begin
    if (CP_PCS_CH3_PCS_RX_RSTN == "FALSE")
    {
        SC_PCS_CH3_PCS_RX_RSTN_112   := 1'b0;
    }
    else if (CP_PCS_CH3_PCS_RX_RSTN == "TRUE")
    {
        SC_PCS_CH3_PCS_RX_RSTN_112   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_PCS_RX_RSTN_112  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_PCS_RX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_PCS_RX_RSTN);
    }

//initial config body479 end


//initial config body480 begin
    if (CP_PCS_CH3_SLAVE == "MASTER")
    {
        SC_PCS_CH3_SLAVE_113   := 1'b0;
    }
    else if (CP_PCS_CH3_SLAVE == "SLAVE")
    {
        SC_PCS_CH3_SLAVE_113   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_SLAVE_113  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_PCS_CH3_SLAVE);
    }

//initial config body480 end


//initial config body481 begin
    if (CP_PCS_CH3_PCIE_SLAVE == "MASTER")
    {
        SC_PCS_CH3_PCIE_SLAVE_114   := 1'b0;
    }
    else if (CP_PCS_CH3_PCIE_SLAVE == "SLAVE")
    {
        SC_PCS_CH3_PCIE_SLAVE_114   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_PCIE_SLAVE_114  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_PCIE_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_PCS_CH3_PCIE_SLAVE);
    }

//initial config body481 end


//initial config body482 begin
    if (CP_PCS_CH3_RX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH3_RX_64B66B_67B_116_115  :=  2'b00;
    }
    else if (CP_PCS_CH3_RX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH3_RX_64B66B_67B_116_115  :=  2'b01;
    }
    else if (CP_PCS_CH3_RX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH3_RX_64B66B_67B_116_115  :=  2'b11;
    }
    else
    {
        SC_PCS_CH3_RX_64B66B_67B_116_115  :=  2'b00;
        error("Setting Error : The CP_PCS_CH3_RX_64B66B_67B is set to %d. Legal values is NORMAL,64B_66B,64B_67B",CP_PCS_CH3_RX_64B66B_67B);
    }

//initial config body482 end


//initial config body483 begin
    if (CP_PCS_CH3_RX_BRIDGE_CLK_POLINV == "RX_BRIDGE_CLK")
    {
        SC_PCS_CH3_RX_BRIDGE_CLK_POLINV_117   := 1'b0;
    }
    else if (CP_PCS_CH3_RX_BRIDGE_CLK_POLINV == "REVERSE_OF_RX_BRIDGE_CLK")
    {
        SC_PCS_CH3_RX_BRIDGE_CLK_POLINV_117   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_RX_BRIDGE_CLK_POLINV_117  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_RX_BRIDGE_CLK_POLINV is set to %s. Legal values is RX_BRIDGE_CLK,REVERSE_OF_RX_BRIDGE_CLK",CP_PCS_CH3_RX_BRIDGE_CLK_POLINV);
    }

//initial config body483 end


//initial config body484 begin
    if (CP_PCS_CH3_AFTER_CTC_RCLK_EN_GB_1 == "FALSE")
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_EN_GB_1_118   := 1'b0;
    }
    else if (CP_PCS_CH3_AFTER_CTC_RCLK_EN_GB_1 == "TRUE")
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_EN_GB_1_118   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_AFTER_CTC_RCLK_EN_GB_1_118  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_AFTER_CTC_RCLK_EN_GB_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_AFTER_CTC_RCLK_EN_GB_1);
    }

//initial config body484 end


//initial config body485 begin
    if (CP_PCS_CH3_PCS_CB_RSTN == "FALSE")
    {
        SC_PCS_CH3_PCS_CB_RSTN_120   := 1'b0;
    }
    else if (CP_PCS_CH3_PCS_CB_RSTN == "TRUE")
    {
        SC_PCS_CH3_PCS_CB_RSTN_120   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_PCS_CB_RSTN_120  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_PCS_CB_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_PCS_CB_RSTN);
    }

//initial config body485 end


//initial config body486 begin
    if (CP_PCS_CH3_TX_BRIDGE_GEAR_SEL == "FALSE")
    {
        SC_PCS_CH3_TX_BRIDGE_GEAR_SEL_128   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_BRIDGE_GEAR_SEL == "TRUE")
    {
        SC_PCS_CH3_TX_BRIDGE_GEAR_SEL_128   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_BRIDGE_GEAR_SEL_128  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_BRIDGE_GEAR_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TX_BRIDGE_GEAR_SEL);
    }

//initial config body486 end


//initial config body487 begin
    if (CP_PCS_CH3_TX_BYPASS_BRIDGE_UINT == "FALSE")
    {
        SC_PCS_CH3_TX_BYPASS_BRIDGE_UINT_129   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_BYPASS_BRIDGE_UINT == "TRUE")
    {
        SC_PCS_CH3_TX_BYPASS_BRIDGE_UINT_129   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_BYPASS_BRIDGE_UINT_129  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_BYPASS_BRIDGE_UINT is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TX_BYPASS_BRIDGE_UINT);
    }

//initial config body487 end


//initial config body488 begin
    if (CP_PCS_CH3_TX_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH3_TX_BYPASS_BRIDGE_FIFO_130   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH3_TX_BYPASS_BRIDGE_FIFO_130   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_BYPASS_BRIDGE_FIFO_130  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TX_BYPASS_BRIDGE_FIFO);
    }

//initial config body488 end


//initial config body489 begin
    if (CP_PCS_CH3_TX_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH3_TX_BYPASS_GEAR_131   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH3_TX_BYPASS_GEAR_131   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_BYPASS_GEAR_131  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TX_BYPASS_GEAR);
    }

//initial config body489 end


//initial config body490 begin
    if (CP_PCS_CH3_TX_BYPASS_ENC == "FALSE")
    {
        SC_PCS_CH3_TX_BYPASS_ENC_132   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_BYPASS_ENC == "TRUE")
    {
        SC_PCS_CH3_TX_BYPASS_ENC_132   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_BYPASS_ENC_132  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_BYPASS_ENC is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TX_BYPASS_ENC);
    }

//initial config body490 end


//initial config body491 begin
    if (CP_PCS_CH3_TX_BYPASS_BIT_SLIP == "FALSE")
    {
        SC_PCS_CH3_TX_BYPASS_BIT_SLIP_133   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_BYPASS_BIT_SLIP == "TRUE")
    {
        SC_PCS_CH3_TX_BYPASS_BIT_SLIP_133   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_BYPASS_BIT_SLIP_133  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_BYPASS_BIT_SLIP is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TX_BYPASS_BIT_SLIP);
    }

//initial config body491 end


//initial config body492 begin
    if (CP_PCS_CH3_TX_GEAR_SPLIT == "FALSE")
    {
        SC_PCS_CH3_TX_GEAR_SPLIT_136   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_GEAR_SPLIT == "TRUE")
    {
        SC_PCS_CH3_TX_GEAR_SPLIT_136   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_GEAR_SPLIT_136  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_GEAR_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TX_GEAR_SPLIT);
    }

//initial config body492 end


//initial config body493 begin
    if (CP_PCS_CH3_TX_DRIVE_REG_MODE == "NO_CHANGE")
    {
        SC_PCS_CH3_TX_DRIVE_REG_MODE_138_137   := 2'b00;
    }
    else if (CP_PCS_CH3_TX_DRIVE_REG_MODE == "EN_POLARIY_REV")
    {
        SC_PCS_CH3_TX_DRIVE_REG_MODE_138_137   := 2'b01;
    }
    else if (CP_PCS_CH3_TX_DRIVE_REG_MODE == "EN_BIT_REV")
    {
        SC_PCS_CH3_TX_DRIVE_REG_MODE_138_137   := 2'b10;
    }
    else if (CP_PCS_CH3_TX_DRIVE_REG_MODE == "EN_BOTH")
    {
        SC_PCS_CH3_TX_DRIVE_REG_MODE_138_137   := 2'b11;
    }
    else
    {
        SC_PCS_CH3_TX_DRIVE_REG_MODE_138_137  :=  2'b00;
        error("Setting Error : The CP_PCS_CH3_TX_DRIVE_REG_MODE is set to %s. Legal values is NO_CHANGE,EN_POLARIY_REV,EN_BIT_REV,EN_BOTH",CP_PCS_CH3_TX_DRIVE_REG_MODE);
    }

//initial config body493 end


//initial config body494 begin
    if (CP_PCS_CH3_TX_BIT_SLIP_CYCLES >= 0 &&  CP_PCS_CH3_TX_BIT_SLIP_CYCLES<= 31)
    {
        SC_PCS_CH3_TX_BIT_SLIP_CYCLES_143_139  :=  CP_PCS_CH3_TX_BIT_SLIP_CYCLES;
    }
    else
    {
        SC_PCS_CH3_TX_BIT_SLIP_CYCLES_143_139  :=  0;
        error("Setting Error : The CP_PCS_CH3_TX_BIT_SLIP_CYCLES is set to %d. Legal values is 0 to 31",CP_PCS_CH3_TX_BIT_SLIP_CYCLES);
    }

//initial config body494 end


//initial config body495 begin
    if (CP_PCS_CH3_INT_TX_MASK_0 == "FALSE")
    {
        SC_PCS_CH3_INT_TX_MASK_0_144   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_TX_MASK_0 == "TRUE")
    {
        SC_PCS_CH3_INT_TX_MASK_0_144   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_TX_MASK_0_144  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_TX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_TX_MASK_0);
    }

//initial config body495 end


//initial config body496 begin
    if (CP_PCS_CH3_INT_TX_MASK_1 == "FALSE")
    {
        SC_PCS_CH3_INT_TX_MASK_1_145   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_TX_MASK_1 == "TRUE")
    {
        SC_PCS_CH3_INT_TX_MASK_1_145   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_TX_MASK_1_145  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_TX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_TX_MASK_1);
    }

//initial config body496 end


//initial config body497 begin
    if (CP_PCS_CH3_INT_TX_MASK_2 == "FALSE")
    {
        SC_PCS_CH3_INT_TX_MASK_2_146   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_TX_MASK_2 == "TRUE")
    {
        SC_PCS_CH3_INT_TX_MASK_2_146   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_TX_MASK_2_146  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_TX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_TX_MASK_2);
    }

//initial config body497 end


//initial config body498 begin
    if (CP_PCS_CH3_INT_TX_CLR_0 == "FALSE")
    {
        SC_PCS_CH3_INT_TX_CLR_0_152   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_TX_CLR_0 == "TRUE")
    {
        SC_PCS_CH3_INT_TX_CLR_0_152   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_TX_CLR_0_152  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_TX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_TX_CLR_0);
    }

//initial config body498 end


//initial config body499 begin
    if (CP_PCS_CH3_INT_TX_CLR_1 == "FALSE")
    {
        SC_PCS_CH3_INT_TX_CLR_1_153   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_TX_CLR_1 == "TRUE")
    {
        SC_PCS_CH3_INT_TX_CLR_1_153   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_TX_CLR_1_153  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_TX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_TX_CLR_1);
    }

//initial config body499 end


//initial config body500 begin
    if (CP_PCS_CH3_INT_TX_CLR_2 == "FALSE")
    {
        SC_PCS_CH3_INT_TX_CLR_2_154   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_TX_CLR_2 == "TRUE")
    {
        SC_PCS_CH3_INT_TX_CLR_2_154   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_TX_CLR_2_154  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_TX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_TX_CLR_2);
    }

//initial config body500 end


//initial config body501 begin
    if (CP_PCS_CH3_TX_PMA_TCLK_POLINV == "PMA_TCLK")
    {
        SC_PCS_CH3_TX_PMA_TCLK_POLINV_160   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_PMA_TCLK_POLINV == "REVERSE_OF_PMA_TCLK")
    {
        SC_PCS_CH3_TX_PMA_TCLK_POLINV_160  :=  1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_PMA_TCLK_POLINV_160  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_PMA_TCLK_POLINV is set to %s. Legal values is PMA_TCLK,REVERSE_OF_PMA_TCLK",CP_PCS_CH3_TX_PMA_TCLK_POLINV);
    }

//initial config body501 end


//initial config body502 begin
    if (CP_PCS_CH3_TX_PCS_CLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH3_TX_PCS_CLK_EN_SEL_161   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_PCS_CLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH3_TX_PCS_CLK_EN_SEL_161   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_PCS_CLK_EN_SEL_161  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_PCS_CLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TX_PCS_CLK_EN_SEL);
    }

//initial config body502 end


//initial config body503 begin
    if (CP_PCS_CH3_TX_BRIDGE_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH3_TX_BRIDGE_TCLK_SEL_162   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_BRIDGE_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH3_TX_BRIDGE_TCLK_SEL_162   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_BRIDGE_TCLK_SEL_162  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_BRIDGE_TCLK_SEL is set to %s. Legal values is TCLK,TCLK2",CP_PCS_CH3_TX_BRIDGE_TCLK_SEL);
    }

//initial config body503 end


//initial config body504 begin
    if (CP_PCS_CH3_TX_TCLK_POLINV == "TCLK")
    {
        SC_PCS_CH3_TX_TCLK_POLINV_163   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_TCLK_POLINV == "REVERSE_OF_TCLK")
    {
        SC_PCS_CH3_TX_TCLK_POLINV_163   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_TCLK_POLINV_163  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_TCLK_POLINV is set to %s. Legal values is PMA_TCLK,REVERSE_OF_PMA_TCLK",CP_PCS_CH3_TX_TCLK_POLINV);
    }

//initial config body504 end


//initial config body505 begin
    if (CP_PCS_CH3_TX_PCS_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH3_TX_PCS_TCLK_SEL_164   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_PCS_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH3_TX_PCS_TCLK_SEL_164   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_PCS_TCLK_SEL_164  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_PCS_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK",CP_PCS_CH3_TX_PCS_TCLK_SEL);
    }

//initial config body505 end


//initial config body506 begin
    if (CP_PCS_CH3_TX_PCS_TX_RSTN == "FALSE")
    {
        SC_PCS_CH3_TX_PCS_TX_RSTN_165   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_PCS_TX_RSTN == "TRUE")
    {
        SC_PCS_CH3_TX_PCS_TX_RSTN_165   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_PCS_TX_RSTN_165  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_PCS_TX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TX_PCS_TX_RSTN);
    }

//initial config body506 end


//initial config body507 begin
    if (CP_PCS_CH3_TX_SLAVE == "SLAVE")
    {
        SC_PCS_CH3_TX_SLAVE_166   := 1'b1;
    }
    else if (CP_PCS_CH3_TX_SLAVE == "MASTER")
    {
        SC_PCS_CH3_TX_SLAVE_166   := 1'b0;
    }
    else
    {
        SC_PCS_CH3_TX_SLAVE_166  :=  1'b1;
        error("Setting Error : The CP_PCS_CH3_TX_SLAVE is set to %s. Legal values is SLAVE,MASTER",CP_PCS_CH3_TX_SLAVE);
    }

//initial config body507 end


//initial config body508 begin
    if (CP_PCS_CH3_TX_GEAR_TCLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH3_TX_GEAR_TCLK_EN_SEL_167   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_GEAR_TCLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH3_TX_GEAR_TCLK_EN_SEL_167   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_GEAR_TCLK_EN_SEL_167  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_GEAR_TCLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TX_GEAR_TCLK_EN_SEL);
    }

//initial config body508 end


//initial config body509 begin
    if (CP_PCS_CH3_DATA_WIDTH_MODE == "X20")
    {
        SC_PCS_CH3_DATA_WIDTH_MODE_169_168   := 2'b00;
    }
    else if (CP_PCS_CH3_DATA_WIDTH_MODE == "X10")
    {
        SC_PCS_CH3_DATA_WIDTH_MODE_169_168   := 2'b01;
    }
    else if (CP_PCS_CH3_DATA_WIDTH_MODE == "X16")
    {
        SC_PCS_CH3_DATA_WIDTH_MODE_169_168   := 2'b10;
    }
    else if (CP_PCS_CH3_DATA_WIDTH_MODE == "X8")
    {
        SC_PCS_CH3_DATA_WIDTH_MODE_169_168   := 2'b11;
    }
    else
    {
        SC_PCS_CH3_DATA_WIDTH_MODE_169_168  :=  2'b00;
        error("Setting Error : The CP_PCS_CH3_DATA_WIDTH_MODE is set to %s. Legal values is X8,X10,X16,X20",CP_PCS_CH3_DATA_WIDTH_MODE);
    }

//initial config body509 end


//initial config body510 begin
    if (CP_PCS_CH3_TX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH3_TX_64B66B_67B_171_170  :=  2'b00;
    }
    else if (CP_PCS_CH3_TX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH3_TX_64B66B_67B_171_170  :=  2'b01;
    }
    else if (CP_PCS_CH3_TX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH3_TX_64B66B_67B_171_170  :=  2'b11;
    }
    else
    {
        SC_PCS_CH3_TX_64B66B_67B_171_170  :=  2'b00;
        error("Setting Error : The CP_PCS_CH3_TX_64B66B_67B is set to %d. Legal values is NORMAL,64B_66B,64B_67B",CP_PCS_CH3_TX_64B66B_67B);
    }

//initial config body510 end


//initial config body511 begin
    if (CP_PCS_CH3_TX_GEAR_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH3_TX_GEAR_TCLK_SEL_172   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_GEAR_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH3_TX_GEAR_TCLK_SEL_172   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_GEAR_TCLK_SEL_172  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_GEAR_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK2",CP_PCS_CH3_TX_GEAR_TCLK_SEL);
    }

//initial config body511 end


//initial config body512 begin
    if (CP_PCS_CH3_TX_TCLK2FABRIC_SEL == "FALSE")
    {
        SC_PCS_CH3_TX_TCLK2FABRIC_SEL_176   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_TCLK2FABRIC_SEL == "TRUE")
    {
        SC_PCS_CH3_TX_TCLK2FABRIC_SEL_176   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_TCLK2FABRIC_SEL_176  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_TCLK2FABRIC_SEL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TX_TCLK2FABRIC_SEL);
    }

//initial config body512 end


//initial config body513 begin
    if (CP_PCS_CH3_TX_OUTZZ == "FALSE")
    {
        SC_PCS_CH3_TX_OUTZZ_177   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_OUTZZ == "TRUE")
    {
        SC_PCS_CH3_TX_OUTZZ_177   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_OUTZZ_177  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_OUTZZ is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TX_OUTZZ);
    }

//initial config body513 end


//initial config body514 begin
    if (CP_PCS_CH3_ENC_DUAL == "FALSE")
    {
        SC_PCS_CH3_ENC_DUAL_178   := 1'b0;
    }
    else if (CP_PCS_CH3_ENC_DUAL == "TRUE")
    {
        SC_PCS_CH3_ENC_DUAL_178   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_ENC_DUAL_178  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_ENC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_ENC_DUAL);
    }

//initial config body514 end


//initial config body515 begin
    if (CP_PCS_CH3_TX_BITSLIP_DATA_MODE == "X10")
    {
        SC_PCS_CH3_TX_BITSLIP_DATA_MODE_179   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_BITSLIP_DATA_MODE == "X20")
    {
        SC_PCS_CH3_TX_BITSLIP_DATA_MODE_179   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_BITSLIP_DATA_MODE_179  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_BITSLIP_DATA_MODE is set to %s. Legal values is X10,X20",CP_PCS_CH3_TX_BITSLIP_DATA_MODE);
    }

//initial config body515 end


//initial config body516 begin
    if (CP_PCS_CH3_TX_BRIDGE_CLK_POLINV == "TX_BRIDGE_CLK")
    {
        SC_PCS_CH3_TX_BRIDGE_CLK_POLINV_180   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_BRIDGE_CLK_POLINV == "REVERSE_OF_TX_BRIDGE_CLK")
    {
        SC_PCS_CH3_TX_BRIDGE_CLK_POLINV_180   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_BRIDGE_CLK_POLINV_180  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_BRIDGE_CLK_POLINV is set to %s. Legal values is TX_BRIDGE_CLK,REVERSE_OF_TX_BRIDGE_CLK",CP_PCS_CH3_TX_BRIDGE_CLK_POLINV);
    }

//initial config body516 end


//initial config body517 begin
    if (CP_PCS_CH3_COMMA_REG1 >= 0 &&  CP_PCS_CH3_COMMA_REG1<= 1023)
    {
        SC_PCS_CH3_COMMA_REG1_193_184  :=  CP_PCS_CH3_COMMA_REG1;
    }
    else
    {
        SC_PCS_CH3_COMMA_REG1_193_184  :=  0;
        error("Setting Error : The CP_PCS_CH3_COMMA_REG1 is set to %d. Legal values is 0 to 1023",CP_PCS_CH3_COMMA_REG1);
    }

//initial config body517 end


//initial config body518 begin
    if (CP_PCS_CH3_RAPID_IMAX >= 0 &&  CP_PCS_CH3_RAPID_IMAX<= 7)
    {
        SC_PCS_CH3_RAPID_IMAX_202_200  :=  CP_PCS_CH3_RAPID_IMAX;
    }
    else
    {
        SC_PCS_CH3_RAPID_IMAX_202_200  :=  0;
        error("Setting Error : The CP_PCS_CH3_RAPID_IMAX is set to %d. Legal values is 0 to 7",CP_PCS_CH3_RAPID_IMAX);
    }

//initial config body518 end


//initial config body519 begin
    if (CP_PCS_CH3_RAPID_VMIN_1 >= 0 &&  CP_PCS_CH3_RAPID_VMIN_1<= 255)
    {
        SC_PCS_CH3_RAPID_VMIN_1_215_208  :=  CP_PCS_CH3_RAPID_VMIN_1;
    }
    else
    {
        SC_PCS_CH3_RAPID_VMIN_1_215_208  :=  0;
        error("Setting Error : The CP_PCS_CH3_RAPID_VMIN_1 is set to %d. Legal values is 0 to 255",CP_PCS_CH3_RAPID_VMIN_1);
    }

//initial config body519 end


//initial config body520 begin
    if (CP_PCS_CH3_RAPID_VMIN_2 >= 0 &&  CP_PCS_CH3_RAPID_VMIN_2<= 255)
    {
        SC_PCS_CH3_RAPID_VMIN_2_223_216  :=  CP_PCS_CH3_RAPID_VMIN_2;
    }
    else
    {
        SC_PCS_CH3_RAPID_VMIN_2_223_216  :=  0;
        error("Setting Error : The CP_PCS_CH3_RAPID_VMIN_2 is set to %d. Legal values is 0 to 255",CP_PCS_CH3_RAPID_VMIN_2);
    }

//initial config body520 end


//initial config body521 begin
    if (CP_PCS_CH3_RX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH3_RX_PRBS_MODE_227_224   := 4'd0;
    }
    else if (CP_PCS_CH3_RX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH3_RX_PRBS_MODE_227_224   := 4'd1;
    }
    else if (CP_PCS_CH3_RX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH3_RX_PRBS_MODE_227_224   := 4'd2;
    }
    else if (CP_PCS_CH3_RX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH3_RX_PRBS_MODE_227_224   := 4'd3;
    }
    else if (CP_PCS_CH3_RX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH3_RX_PRBS_MODE_227_224   := 4'd4;
    }
    else if (CP_PCS_CH3_RX_PRBS_MODE == "LONG_1")
    {
        SC_PCS_CH3_RX_PRBS_MODE_227_224   := 4'd5;
    }
    else if (CP_PCS_CH3_RX_PRBS_MODE == "LONG_0")
    {
        SC_PCS_CH3_RX_PRBS_MODE_227_224   := 4'd6;
    }
    else if (CP_PCS_CH3_RX_PRBS_MODE == "20UI")
    {
        SC_PCS_CH3_RX_PRBS_MODE_227_224   := 4'd7;
    }
    else if (CP_PCS_CH3_RX_PRBS_MODE == "D10_2")
    {
        SC_PCS_CH3_RX_PRBS_MODE_227_224   := 4'd8;
    }
    else if (CP_PCS_CH3_RX_PRBS_MODE == "PCIE")
    {
        SC_PCS_CH3_RX_PRBS_MODE_227_224   := 4'd9;
    }
    else
    {
        SC_PCS_CH3_RX_PRBS_MODE_227_224  :=  4'd0;
        error("Setting Error : The CP_PCS_CH3_RX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31,LONG_1,LONG_0,20UI,D10_2,PCIE",CP_PCS_CH3_RX_PRBS_MODE);
    }

//initial config body521 end


//initial config body522 begin
    if (CP_PCS_CH3_RX_ERRCNT_CLR == "FALSE")
    {
        SC_PCS_CH3_RX_ERRCNT_CLR_228   := 1'b0;
    }
    else if (CP_PCS_CH3_RX_ERRCNT_CLR == "TRUE")
    {
        SC_PCS_CH3_RX_ERRCNT_CLR_228   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_RX_ERRCNT_CLR_228  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_RX_ERRCNT_CLR is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_RX_ERRCNT_CLR);
    }

//initial config body522 end


//initial config body523 begin
    if (CP_PCS_CH3_RX_PRBS_ERR_LPBK == "FALSE")
    {
        SC_PCS_CH3_RX_PRBS_ERR_LPBK_229   := 1'b0;
    }
    else if (CP_PCS_CH3_RX_PRBS_ERR_LPBK == "TRUE")
    {
        SC_PCS_CH3_RX_PRBS_ERR_LPBK_229   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_RX_PRBS_ERR_LPBK_229  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_RX_PRBS_ERR_LPBK is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_RX_PRBS_ERR_LPBK);
    }

//initial config body523 end


//initial config body524 begin
    if (CP_PCS_CH3_TX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH3_TX_PRBS_MODE_235_232   := 4'd0;
    }
    else if (CP_PCS_CH3_TX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH3_TX_PRBS_MODE_235_232   := 4'd1;
    }
    else if (CP_PCS_CH3_TX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH3_TX_PRBS_MODE_235_232   := 4'd2;
    }
    else if (CP_PCS_CH3_TX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH3_TX_PRBS_MODE_235_232   := 4'd3;
    }
    else if (CP_PCS_CH3_TX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH3_TX_PRBS_MODE_235_232   := 4'd4;
    }
    else if (CP_PCS_CH3_TX_PRBS_MODE == "LONG_1")
    {
        SC_PCS_CH3_TX_PRBS_MODE_235_232   := 4'd5;
    }
    else if (CP_PCS_CH3_TX_PRBS_MODE == "LONG_0")
    {
        SC_PCS_CH3_TX_PRBS_MODE_235_232   := 4'd6;
    }
    else if (CP_PCS_CH3_TX_PRBS_MODE == "20UI")
    {
        SC_PCS_CH3_TX_PRBS_MODE_235_232   := 4'd7;
    }
    else if (CP_PCS_CH3_TX_PRBS_MODE == "D10_2")
    {
        SC_PCS_CH3_TX_PRBS_MODE_235_232   := 4'd8;
    }
    else if (CP_PCS_CH3_TX_PRBS_MODE == "PCIE")
    {
        SC_PCS_CH3_TX_PRBS_MODE_235_232   := 4'd9;
    }
    else
    {
        SC_PCS_CH3_TX_PRBS_MODE_235_232  :=  4'd0;
        error("Setting Error : The CP_PCS_CH3_TX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31,LONG_1,LONG_0,20UI,D10_2,PCIE",CP_PCS_CH3_TX_PRBS_MODE);
    }

//initial config body524 end


//initial config body525 begin
    if (CP_PCS_CH3_TX_INSERT_ER == "FALSE")
    {
        SC_PCS_CH3_TX_INSERT_ER_236   := 1'b0;
    }
    else if (CP_PCS_CH3_TX_INSERT_ER == "TRUE")
    {
        SC_PCS_CH3_TX_INSERT_ER_236   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TX_INSERT_ER_236  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TX_INSERT_ER is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TX_INSERT_ER);
    }

//initial config body525 end


//initial config body526 begin
    if (CP_PCS_CH3_ENABLE_PRBS_GEN == "FALSE")
    {
        SC_PCS_CH3_ENABLE_PRBS_GEN_237   := 1'b0;
    }
    else if (CP_PCS_CH3_ENABLE_PRBS_GEN == "TRUE")
    {
        SC_PCS_CH3_ENABLE_PRBS_GEN_237   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_ENABLE_PRBS_GEN_237  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_ENABLE_PRBS_GEN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_ENABLE_PRBS_GEN);
    }

//initial config body526 end


//initial config body527 begin
    if (CP_PCS_CH3_ERR_CNT >= 0 &&  CP_PCS_CH3_ERR_CNT<= 255)
    {
        SC_PCS_CH3_ERR_CNT_247_240  :=  CP_PCS_CH3_ERR_CNT;
    }
    else
    {
        SC_PCS_CH3_ERR_CNT_247_240  :=  0;
        error("Setting Error : The CP_PCS_CH3_ERR_CNT is set to %d. Legal values is 0 to 255",CP_PCS_CH3_ERR_CNT);
    }

//initial config body527 end


//initial config body528 begin
    if (CP_PCS_CH3_DEFAULT_RADDR >= 0 &&  CP_PCS_CH3_DEFAULT_RADDR<= 15)
    {
        SC_PCS_CH3_DEFAULT_RADDR_251_248  :=  CP_PCS_CH3_DEFAULT_RADDR;
    }
    else
    {
        SC_PCS_CH3_DEFAULT_RADDR_251_248  :=  0;
        error("Setting Error : The CP_PCS_CH3_DEFAULT_RADDR is set to %d. Legal values is 0 to 15",CP_PCS_CH3_DEFAULT_RADDR);
    }

//initial config body528 end


//initial config body529 begin
    if (CP_PCS_CH3_MASTER_CHECK_OFFSET >= 0 &&  CP_PCS_CH3_MASTER_CHECK_OFFSET<= 15)
    {
        SC_PCS_CH3_MASTER_CHECK_OFFSET_255_252  :=  CP_PCS_CH3_MASTER_CHECK_OFFSET;
    }
    else
    {
        SC_PCS_CH3_MASTER_CHECK_OFFSET_255_252  :=  0;
        error("Setting Error : The CP_PCS_CH3_MASTER_CHECK_OFFSET is set to %d. Legal values is 0 to 15",CP_PCS_CH3_MASTER_CHECK_OFFSET);
    }

//initial config body529 end


//initial config body530 begin
    if (CP_PCS_CH3_DELAY_SET >= 0 &&  CP_PCS_CH3_DELAY_SET<= 15)
    {
        SC_PCS_CH3_DELAY_SET_259_256  :=  CP_PCS_CH3_DELAY_SET;
    }
    else
    {
        SC_PCS_CH3_DELAY_SET_259_256  :=  0;
        error("Setting Error : The CP_PCS_CH3_DELAY_SET is set to %d. Legal values is 0 to 15",CP_PCS_CH3_DELAY_SET);
    }

//initial config body530 end


//initial config body531 begin
    if (CP_PCS_CH3_SEACH_OFFSET == "20BIT")
    {
        SC_PCS_CH3_SEACH_OFFSET_262_260   := 3'd0;
    }
    else if (CP_PCS_CH3_SEACH_OFFSET == "30BIT")
    {
        SC_PCS_CH3_SEACH_OFFSET_262_260   := 3'd1;
    }
    else if (CP_PCS_CH3_SEACH_OFFSET == "40BIT")
    {
        SC_PCS_CH3_SEACH_OFFSET_262_260   := 3'd2;
    }
    else if (CP_PCS_CH3_SEACH_OFFSET == "50BIT")
    {
        SC_PCS_CH3_SEACH_OFFSET_262_260   := 3'd3;
    }
    else if (CP_PCS_CH3_SEACH_OFFSET == "60BIT")
    {
        SC_PCS_CH3_SEACH_OFFSET_262_260   := 3'd4;
    }
    else if (CP_PCS_CH3_SEACH_OFFSET == "70BIT")
    {
        SC_PCS_CH3_SEACH_OFFSET_262_260   := 3'd5;
    }
    else if (CP_PCS_CH3_SEACH_OFFSET == "80BIT")
    {
        SC_PCS_CH3_SEACH_OFFSET_262_260   := 3'd6;
    }
    else
    {
        SC_PCS_CH3_SEACH_OFFSET_262_260  :=  3'd0;
        error("Setting Error : The CP_PCS_CH3_SEACH_OFFSET is set to %s. Legal values is 20BIT,30BIT,40BIT,50BIT,60BIT,70BIT,80BIT",CP_PCS_CH3_SEACH_OFFSET);
    }

//initial config body531 end


//initial config body532 begin
    if (CP_PCS_CH3_CEB_RAPIDLS_MMAX >= 0 &&  CP_PCS_CH3_CEB_RAPIDLS_MMAX<= 7)
    {
        SC_PCS_CH3_CEB_RAPIDLS_MMAX_266_264  :=  CP_PCS_CH3_CEB_RAPIDLS_MMAX;
    }
    else
    {
        SC_PCS_CH3_CEB_RAPIDLS_MMAX_266_264  :=  0;
        error("Setting Error : The CP_PCS_CH3_CEB_RAPIDLS_MMAX is set to %d. Legal values is 0 to 7",CP_PCS_CH3_CEB_RAPIDLS_MMAX);
    }

//initial config body532 end


//initial config body533 begin
    if (CP_PCS_CH3_CTC_AFULL >= 0 &&  CP_PCS_CH3_CTC_AFULL<= 31)
    {
        SC_PCS_CH3_CTC_AFULL_276_272  :=  CP_PCS_CH3_CTC_AFULL;
    }
    else
    {
        SC_PCS_CH3_CTC_AFULL_276_272  :=  0;
        error("Setting Error : The CP_PCS_CH3_CTC_AFULL is set to %d. Legal values is 0 to 31",CP_PCS_CH3_CTC_AFULL);
    }

//initial config body533 end


//initial config body534 begin
    if (CP_PCS_CH3_CTC_AEMPTY >= 0 &&  CP_PCS_CH3_CTC_AEMPTY<= 31)
    {
        SC_PCS_CH3_CTC_AEMPTY_284_280  :=  CP_PCS_CH3_CTC_AEMPTY;
    }
    else
    {
        SC_PCS_CH3_CTC_AEMPTY_284_280  :=  0;
        error("Setting Error : The CP_PCS_CH3_CTC_AEMPTY is set to %d. Legal values is 0 to 31",CP_PCS_CH3_CTC_AEMPTY);
    }

//initial config body534 end


//initial config body535 begin
    if (CP_PCS_CH3_CTC_CONTI_SKP_SET >= 0 &&  CP_PCS_CH3_CTC_CONTI_SKP_SET<= 1)
    {
        SC_PCS_CH3_CTC_CONTI_SKP_SET_285  :=  CP_PCS_CH3_CTC_CONTI_SKP_SET;
    }
    else
    {
        SC_PCS_CH3_CTC_CONTI_SKP_SET_285  :=  0;
        error("Setting Error : The CP_PCS_CH3_CTC_CONTI_SKP_SET is set to %d. Legal values is 0 to 1",CP_PCS_CH3_CTC_CONTI_SKP_SET);
    }

//initial config body535 end


//initial config body536 begin
    if (CP_PCS_CH3_FAR_LOOP == "FALSE")
    {
        SC_PCS_CH3_FAR_LOOP_288   := 1'b0;
    }
    else if (CP_PCS_CH3_FAR_LOOP == "TRUE")
    {
        SC_PCS_CH3_FAR_LOOP_288   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_FAR_LOOP_288  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_FAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_FAR_LOOP);
    }

//initial config body536 end


//initial config body537 begin
    if (CP_PCS_CH3_NEAR_LOOP == "FALSE")
    {
        SC_PCS_CH3_NEAR_LOOP_289   := 1'b0;
    }
    else if (CP_PCS_CH3_NEAR_LOOP == "TRUE")
    {
        SC_PCS_CH3_NEAR_LOOP_289   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_NEAR_LOOP_289  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_NEAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_NEAR_LOOP);
    }

//initial config body537 end


//initial config body538 begin
    if (CP_PCS_CH3_REG_TX2RX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH3_REG_TX2RX_PLOOP_EN_290   := 1'b0;
    }
    else if (CP_PCS_CH3_REG_TX2RX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH3_REG_TX2RX_PLOOP_EN_290   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_REG_TX2RX_PLOOP_EN_290  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_REG_TX2RX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_REG_TX2RX_PLOOP_EN);
    }

//initial config body538 end


//initial config body539 begin
    if (CP_PCS_CH3_REG_TX2RX_SLOOP_EN == "FALSE")
    {
        SC_PCS_CH3_REG_TX2RX_SLOOP_EN_291   := 1'b0;
    }
    else if (CP_PCS_CH3_REG_TX2RX_SLOOP_EN == "TRUE")
    {
        SC_PCS_CH3_REG_TX2RX_SLOOP_EN_291   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_REG_TX2RX_SLOOP_EN_291  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_REG_TX2RX_SLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_REG_TX2RX_SLOOP_EN);
    }

//initial config body539 end


//initial config body540 begin
    if (CP_PCS_CH3_REG_RX2TX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH3_REG_RX2TX_PLOOP_EN_292   := 1'b0;
    }
    else if (CP_PCS_CH3_REG_RX2TX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH3_REG_RX2TX_PLOOP_EN_292   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_REG_RX2TX_PLOOP_EN_292  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_REG_RX2TX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_REG_RX2TX_PLOOP_EN);
    }

//initial config body540 end


//initial config body541 begin
    if (CP_PCS_CH3_INT_RX_MASK_0 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_MASK_0_296   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_MASK_0 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_MASK_0_296   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_MASK_0_296  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_MASK_0);
    }

//initial config body541 end


//initial config body542 begin
    if (CP_PCS_CH3_INT_RX_MASK_1 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_MASK_1_297   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_MASK_1 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_MASK_1_297   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_MASK_1_297  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_MASK_1);
    }

//initial config body542 end


//initial config body543 begin
    if (CP_PCS_CH3_INT_RX_MASK_2 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_MASK_2_298   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_MASK_2 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_MASK_2_298   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_MASK_2_298  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_MASK_2);
    }

//initial config body543 end


//initial config body544 begin
    if (CP_PCS_CH3_INT_RX_MASK_3 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_MASK_3_299   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_MASK_3 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_MASK_3_299   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_MASK_3_299  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_MASK_3 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_MASK_3);
    }

//initial config body544 end


//initial config body545 begin
    if (CP_PCS_CH3_INT_RX_MASK_4 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_MASK_4_300   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_MASK_4 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_MASK_4_300   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_MASK_4_300  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_MASK_4 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_MASK_4);
    }

//initial config body545 end


//initial config body546 begin
    if (CP_PCS_CH3_INT_RX_MASK_5 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_MASK_5_301   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_MASK_5 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_MASK_5_301   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_MASK_5_301  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_MASK_5 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_MASK_5);
    }

//initial config body546 end


//initial config body547 begin
    if (CP_PCS_CH3_INT_RX_MASK_6 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_MASK_6_302   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_MASK_6 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_MASK_6_302   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_MASK_6_302  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_MASK_6 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_MASK_6);
    }

//initial config body547 end


//initial config body548 begin
    if (CP_PCS_CH3_INT_RX_MASK_7 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_MASK_7_303   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_MASK_7 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_MASK_7_303   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_MASK_7_303  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_MASK_7 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_MASK_7);
    }

//initial config body548 end


//initial config body549 begin
    if (CP_PCS_CH3_INT_RX_CLR_0 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_CLR_0_304   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_CLR_0 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_CLR_0_304   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_CLR_0_304  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_CLR_0);
    }

//initial config body549 end


//initial config body550 begin
    if (CP_PCS_CH3_INT_RX_CLR_1 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_CLR_1_305   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_CLR_1 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_CLR_1_305   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_CLR_1_305  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_CLR_1);
    }

//initial config body550 end


//initial config body551 begin
    if (CP_PCS_CH3_INT_RX_CLR_2 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_CLR_2_306   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_CLR_2 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_CLR_2_306   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_CLR_2_306  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_CLR_2);
    }

//initial config body551 end


//initial config body552 begin
    if (CP_PCS_CH3_INT_RX_CLR_3 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_CLR_3_307   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_CLR_3 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_CLR_3_307   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_CLR_3_307  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_CLR_3 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_CLR_3);
    }

//initial config body552 end


//initial config body553 begin
    if (CP_PCS_CH3_INT_RX_CLR_4 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_CLR_4_308   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_CLR_4 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_CLR_4_308   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_CLR_4_308  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_CLR_4 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_CLR_4);
    }

//initial config body553 end


//initial config body554 begin
    if (CP_PCS_CH3_INT_RX_CLR_5 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_CLR_5_309   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_CLR_5 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_CLR_5_309   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_CLR_5_309  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_CLR_5 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_CLR_5);
    }

//initial config body554 end


//initial config body555 begin
    if (CP_PCS_CH3_INT_RX_CLR_6 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_CLR_6_310   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_CLR_6 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_CLR_6_310   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_CLR_6_310  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_CLR_6 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_CLR_6);
    }

//initial config body555 end


//initial config body556 begin
    if (CP_PCS_CH3_INT_RX_CLR_7 == "FALSE")
    {
        SC_PCS_CH3_INT_RX_CLR_7_311   := 1'b0;
    }
    else if (CP_PCS_CH3_INT_RX_CLR_7 == "TRUE")
    {
        SC_PCS_CH3_INT_RX_CLR_7_311   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_INT_RX_CLR_7_311  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_INT_RX_CLR_7 is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_INT_RX_CLR_7);
    }

//initial config body556 end


//initial config body557 begin
    if (CP_PCS_CH3_CA_RSTN_RX == "FALSE")
    {
        SC_PCS_CH3_CA_RSTN_RX_312   := 1'b0;
    }
    else if (CP_PCS_CH3_CA_RSTN_RX == "TRUE")
    {
        SC_PCS_CH3_CA_RSTN_RX_312   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_CA_RSTN_RX_312  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_CA_RSTN_RX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_CA_RSTN_RX);
    }

//initial config body557 end


//initial config body558 begin
    if (CP_PCS_CH3_CA_DYN_DLY_EN_RX == "FALSE")
    {
        SC_PCS_CH3_CA_DYN_DLY_EN_RX_313   := 1'b0;
    }
    else if (CP_PCS_CH3_CA_DYN_DLY_EN_RX == "TRUE")
    {
        SC_PCS_CH3_CA_DYN_DLY_EN_RX_313   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_CA_DYN_DLY_EN_RX_313  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_CA_DYN_DLY_EN_RX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_CA_DYN_DLY_EN_RX);
    }

//initial config body558 end


//initial config body559 begin
    if (CP_PCS_CH3_CA_DYN_DLY_SEL_RX == "FALSE")
    {
        SC_PCS_CH3_CA_DYN_DLY_SEL_RX_314   := 1'b0;
    }
    else if (CP_PCS_CH3_CA_DYN_DLY_SEL_RX == "TRUE")
    {
        SC_PCS_CH3_CA_DYN_DLY_SEL_RX_314   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_CA_DYN_DLY_SEL_RX_314  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_CA_DYN_DLY_SEL_RX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_CA_DYN_DLY_SEL_RX);
    }

//initial config body559 end


//initial config body560 begin
    if (CP_PCS_CH3_CA_RX >= 0 &&  CP_PCS_CH3_CA_RX <= 255)
    {
        SC_PCS_CH3_CA_RX_322_315  :=  CP_PCS_CH3_CA_RX;
    }
    else
    {
        SC_PCS_CH3_CA_RX_322_315  :=  0;
        error("Setting Error : The CP_PCS_CH3_CA_RX is set to %d. Legal values is 0 to 255",CP_PCS_CH3_CA_RX);
    }

//initial config body560 end


//initial config body561 begin
    if (CP_PCS_CH3_CA_RSTN_TX == "FALSE")
    {
        SC_PCS_CH3_CA_RSTN_TX_323   := 1'b0;
    }
    else if (CP_PCS_CH3_CA_RSTN_TX == "TRUE")
    {
        SC_PCS_CH3_CA_RSTN_TX_323   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_CA_RSTN_TX_323  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_CA_RSTN_TX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_CA_RSTN_TX);
    }

//initial config body561 end


//initial config body562 begin
    if (CP_PCS_CH3_CA_DYN_DLY_EN_TX == "FALSE")
    {
        SC_PCS_CH3_CA_DYN_DLY_EN_TX_324   := 1'b0;
    }
    else if (CP_PCS_CH3_CA_DYN_DLY_EN_TX == "TRUE")
    {
        SC_PCS_CH3_CA_DYN_DLY_EN_TX_324   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_CA_DYN_DLY_EN_TX_324  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_CA_DYN_DLY_EN_TX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_CA_DYN_DLY_EN_TX);
    }

//initial config body562 end


//initial config body563 begin
    if (CP_PCS_CH3_CA_DYN_DLY_SEL_TX == "FALSE")
    {
        SC_PCS_CH3_CA_DYN_DLY_SEL_TX_325   := 1'b0;
    }
    else if (CP_PCS_CH3_CA_DYN_DLY_SEL_TX == "TRUE")
    {
        SC_PCS_CH3_CA_DYN_DLY_SEL_TX_325   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_CA_DYN_DLY_SEL_TX_325  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_CA_DYN_DLY_SEL_TX is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_CA_DYN_DLY_SEL_TX);
    }

//initial config body563 end


//initial config body564 begin
    if (CP_PCS_CH3_CA_TX >= 0 &&  CP_PCS_CH3_CA_TX <= 255)
    {
        SC_PCS_CH3_CA_TX_333_326  :=  CP_PCS_CH3_CA_TX;
    }
    else
    {
        SC_PCS_CH3_CA_TX_333_326  :=  0;
        error("Setting Error : The CP_PCS_CH3_CA_TX is set to %d. Legal values is 0 to 255",CP_PCS_CH3_CA_TX);
    }

//initial config body564 end


//initial config body565 begin
    if (CP_PCS_CH3_RXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH3_RXPRBS_PWR_REDUCTION_334   := 1'b0;
    }
    else if (CP_PCS_CH3_RXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH3_RXPRBS_PWR_REDUCTION_334   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_RXPRBS_PWR_REDUCTION_334  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_RXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH3_RXPRBS_PWR_REDUCTION);
    }

//initial config body565 end


//initial config body566 begin
    if (CP_PCS_CH3_WDALIGN_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH3_WDALIGN_PWR_REDUCTION_335   := 1'b0;
    }
    else if (CP_PCS_CH3_WDALIGN_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH3_WDALIGN_PWR_REDUCTION_335   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_WDALIGN_PWR_REDUCTION_335  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_WDALIGN_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH3_WDALIGN_PWR_REDUCTION);
    }

//initial config body566 end


//initial config body567 begin
    if (CP_PCS_CH3_RXDEC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH3_RXDEC_PWR_REDUCTION_336   := 1'b0;
    }
    else if (CP_PCS_CH3_RXDEC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH3_RXDEC_PWR_REDUCTION_336   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_RXDEC_PWR_REDUCTION_336  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_RXDEC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH3_RXDEC_PWR_REDUCTION);
    }

//initial config body567 end


//initial config body568 begin
    if (CP_PCS_CH3_RXCB_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH3_RXCB_PWR_REDUCTION_337   := 1'b0;
    }
    else if (CP_PCS_CH3_RXCB_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH3_RXCB_PWR_REDUCTION_337   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_RXCB_PWR_REDUCTION_337  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_RXCB_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH3_RXCB_PWR_REDUCTION);
    }

//initial config body568 end


//initial config body569 begin
    if (CP_PCS_CH3_RXCTC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH3_RXCTC_PWR_REDUCTION_338   := 1'b0;
    }
    else if (CP_PCS_CH3_RXCTC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH3_RXCTC_PWR_REDUCTION_338   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_RXCTC_PWR_REDUCTION_338  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_RXCTC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH3_RXCTC_PWR_REDUCTION);
    }

//initial config body569 end


//initial config body570 begin
    if (CP_PCS_CH3_RXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH3_RXGEAR_PWR_REDUCTION_339   := 1'b0;
    }
    else if (CP_PCS_CH3_RXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH3_RXGEAR_PWR_REDUCTION_339   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_RXGEAR_PWR_REDUCTION_339  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_RXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH3_RXGEAR_PWR_REDUCTION);
    }

//initial config body570 end


//initial config body571 begin
    if (CP_PCS_CH3_RXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH3_RXBRG_PWR_REDUCTION_340   := 1'b0;
    }
    else if (CP_PCS_CH3_RXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH3_RXBRG_PWR_REDUCTION_340   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_RXBRG_PWR_REDUCTION_340  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_RXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH3_RXBRG_PWR_REDUCTION);
    }

//initial config body571 end


//initial config body572 begin
    if (CP_PCS_CH3_RXTEST_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH3_RXTEST_PWR_REDUCTION_341   := 1'b0;
    }
    else if (CP_PCS_CH3_RXTEST_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH3_RXTEST_PWR_REDUCTION_341   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_RXTEST_PWR_REDUCTION_341  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_RXTEST_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH3_RXTEST_PWR_REDUCTION);
    }

//initial config body572 end


//initial config body573 begin
    if (CP_PCS_CH3_TXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH3_TXBRG_PWR_REDUCTION_342   := 1'b0;
    }
    else if (CP_PCS_CH3_TXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH3_TXBRG_PWR_REDUCTION_342   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TXBRG_PWR_REDUCTION_342  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH3_TXBRG_PWR_REDUCTION);
    }

//initial config body573 end


//initial config body574 begin
    if (CP_PCS_CH3_TXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH3_TXGEAR_PWR_REDUCTION_343   := 1'b0;
    }
    else if (CP_PCS_CH3_TXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH3_TXGEAR_PWR_REDUCTION_343   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TXGEAR_PWR_REDUCTION_343  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH3_TXGEAR_PWR_REDUCTION);
    }

//initial config body574 end


//initial config body575 begin
    if (CP_PCS_CH3_TXENC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH3_TXENC_PWR_REDUCTION_344   := 1'b0;
    }
    else if (CP_PCS_CH3_TXENC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH3_TXENC_PWR_REDUCTION_344   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TXENC_PWR_REDUCTION_344  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TXENC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH3_TXENC_PWR_REDUCTION);
    }

//initial config body575 end


//initial config body576 begin
    if (CP_PCS_CH3_TXBSLP_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH3_TXBSLP_PWR_REDUCTION_345   := 1'b0;
    }
    else if (CP_PCS_CH3_TXBSLP_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH3_TXBSLP_PWR_REDUCTION_345   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TXBSLP_PWR_REDUCTION_345  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TXBSLP_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH3_TXBSLP_PWR_REDUCTION);
    }

//initial config body576 end


//initial config body577 begin
    if (CP_PCS_CH3_TXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH3_TXPRBS_PWR_REDUCTION_346   := 1'b0;
    }
    else if (CP_PCS_CH3_TXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH3_TXPRBS_PWR_REDUCTION_346   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TXPRBS_PWR_REDUCTION_346  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_PCS_CH3_TXPRBS_PWR_REDUCTION);
    }

//initial config body577 end


//initial config body578 begin
    if (CP_PCS_CH3_TXBRG_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH3_TXBRG_FULL_CHK_EN_347   := 1'b0;
    }
    else if (CP_PCS_CH3_TXBRG_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH3_TXBRG_FULL_CHK_EN_347   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TXBRG_FULL_CHK_EN_347  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TXBRG_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TXBRG_FULL_CHK_EN);
    }

//initial config body578 end


//initial config body579 begin
    if (CP_PCS_CH3_TXBRG_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH3_TXBRG_EMPTY_CHK_EN_348   := 1'b0;
    }
    else if (CP_PCS_CH3_TXBRG_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH3_TXBRG_EMPTY_CHK_EN_348   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_TXBRG_EMPTY_CHK_EN_348  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_TXBRG_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_TXBRG_EMPTY_CHK_EN);
    }

//initial config body579 end


//initial config body580 begin
    if (CP_PCS_CH3_RXBRG_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH3_RXBRG_FULL_CHK_EN_349   := 1'b0;
    }
    else if (CP_PCS_CH3_RXBRG_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH3_RXBRG_FULL_CHK_EN_349   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_RXBRG_FULL_CHK_EN_349  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_RXBRG_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_RXBRG_FULL_CHK_EN);
    }

//initial config body580 end


//initial config body581 begin
    if (CP_PCS_CH3_RXBRG_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH3_RXBRG_EMPTY_CHK_EN_350   := 1'b0;
    }
    else if (CP_PCS_CH3_RXBRG_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH3_RXBRG_EMPTY_CHK_EN_350   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_RXBRG_EMPTY_CHK_EN_350  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_RXBRG_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_RXBRG_EMPTY_CHK_EN);
    }

//initial config body581 end


//initial config body582 begin
    if (CP_PCS_CH3_CTC_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH3_CTC_FULL_CHK_EN_351   := 1'b0;
    }
    else if (CP_PCS_CH3_CTC_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH3_CTC_FULL_CHK_EN_351   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_CTC_FULL_CHK_EN_351  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_CTC_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_CTC_FULL_CHK_EN);
    }

//initial config body582 end


//initial config body583 begin
    if (CP_PCS_CH3_CTC_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH3_CTC_EMPTY_CHK_EN_352   := 1'b0;
    }
    else if (CP_PCS_CH3_CTC_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH3_CTC_EMPTY_CHK_EN_352   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_CTC_EMPTY_CHK_EN_352  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_CTC_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_CTC_EMPTY_CHK_EN);
    }

//initial config body583 end


//initial config body584 begin
    if (CP_PCS_CH3_CEB_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH3_CEB_FULL_CHK_EN_353   := 1'b0;
    }
    else if (CP_PCS_CH3_CEB_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH3_CEB_FULL_CHK_EN_353   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_CEB_FULL_CHK_EN_353  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_CEB_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_CEB_FULL_CHK_EN);
    }

//initial config body584 end


//initial config body585 begin
    if (CP_PCS_CH3_CEB_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH3_CEB_EMPTY_CHK_EN_354   := 1'b0;
    }
    else if (CP_PCS_CH3_CEB_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH3_CEB_EMPTY_CHK_EN_354   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_CEB_EMPTY_CHK_EN_354  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_CEB_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_CEB_EMPTY_CHK_EN);
    }

//initial config body585 end


//initial config body586 begin
    if (CP_PCS_CH3_FLP_FULL_CHK_EN == "FALSE")
    {
        SC_PCS_CH3_FLP_FULL_CHK_EN_355   := 1'b0;
    }
    else if (CP_PCS_CH3_FLP_FULL_CHK_EN == "TRUE")
    {
        SC_PCS_CH3_FLP_FULL_CHK_EN_355   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_FLP_FULL_CHK_EN_355  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_FLP_FULL_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_FLP_FULL_CHK_EN);
    }

//initial config body586 end


//initial config body587 begin
    if (CP_PCS_CH3_FLP_EMPTY_CHK_EN == "FALSE")
    {
        SC_PCS_CH3_FLP_EMPTY_CHK_EN_356   := 1'b0;
    }
    else if (CP_PCS_CH3_FLP_EMPTY_CHK_EN == "TRUE")
    {
        SC_PCS_CH3_FLP_EMPTY_CHK_EN_356   := 1'b1;
    }
    else
    {
        SC_PCS_CH3_FLP_EMPTY_CHK_EN_356  :=  1'b0;
        error("Setting Error : The CP_PCS_CH3_FLP_EMPTY_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PCS_CH3_FLP_EMPTY_CHK_EN);
    }

//initial config body587 end


//initial config body588 begin
    if (CP_PMA_CH0_REG_RESERVED_556_552 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_556_552  :=  5'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_556_552 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_556_552  :=  5'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_556_552  :=  5'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_556_552 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_556_552);
    }

//initial config body588 end


//initial config body589 begin
    if (CP_PMA_CH0_REG_RESERVED_550_549 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_550_549  :=  2'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_550_549 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_550_549  :=  2'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_550_549  :=  2'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_550_549 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_550_549);
    }

//initial config body589 end


//initial config body590 begin
    if (CP_PMA_CH0_REG_RESERVED_506_505 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_506_505  :=  2'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_506_505 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_506_505  :=  2'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_506_505  :=  2'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_506_505 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_506_505);
    }

//initial config body590 end


//initial config body591 begin
    if (CP_PMA_CH0_REG_RESERVED_502_499 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_502_499  :=  4'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_502_499 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_502_499  :=  4'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_502_499  :=  4'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_502_499 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_502_499);
    }

//initial config body591 end


//initial config body592 begin
    if (CP_PMA_CH0_REG_RESERVED_452 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_452  :=  1'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_452 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_452  :=  1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_452  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_452 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_452);
    }

//initial config body592 end


//initial config body593 begin
    if (CP_PMA_CH0_REG_RESERVED_376 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_376  :=  1'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_376 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_376  :=  1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_376  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_376 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_376);
    }

//initial config body593 end


//initial config body594 begin
    if (CP_PMA_CH0_REG_RESERVED_373 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_373  :=  1'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_373 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_373  :=  1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_373  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_373 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_373);
    }

//initial config body594 end


//initial config body595 begin
    if (CP_PMA_CH0_REG_RESERVED_354_349 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_354_349  :=  6'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_354_349 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_354_349  :=  6'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_354_349  :=  6'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_354_349 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_354_349);
    }

//initial config body595 end


//initial config body596 begin
    if (CP_PMA_CH0_REG_RESERVED_348_341 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_348_341  :=  8'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_348_341 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_348_341  :=  8'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_348_341  :=  8'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_348_341 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_348_341);
    }

//initial config body596 end


//initial config body597 begin
    if (CP_PMA_CH0_REG_RESERVED_340_333 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_340_333  :=  8'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_340_333 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_340_333  :=  8'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_340_333  :=  8'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_340_333 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_340_333);
    }

//initial config body597 end


//initial config body598 begin
    if (CP_PMA_CH0_REG_RESERVED_332_325 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_332_325  :=  8'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_332_325 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_332_325  :=  8'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_332_325  :=  8'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_332_325 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_332_325);
    }

//initial config body598 end


//initial config body599 begin
    if (CP_PMA_CH0_REG_RESERVED_298 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_298  :=  1'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_298 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_298  :=  1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_298  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_298 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_298);
    }

//initial config body599 end


//initial config body600 begin
    if (CP_PMA_CH0_REG_RESERVED_295 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_295  :=  1'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_295 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_295  :=  1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_295  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_295 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_295);
    }

//initial config body600 end


//initial config body601 begin
    if (CP_PMA_CH0_REG_RESERVED_286 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_286  :=  1'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_286 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_286  :=  1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_286  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_286 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_286);
    }

//initial config body601 end


//initial config body602 begin
    if (CP_PMA_CH0_REG_RESERVED_285_283 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_285_283  :=  3'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_285_283 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_285_283  :=  3'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_285_283  :=  3'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_285_283 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_285_283);
    }

//initial config body602 end


//initial config body603 begin
    if (CP_PMA_CH0_REG_RESERVED_241_240 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_241_240  :=  2'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_241_240 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_241_240  :=  2'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_241_240  :=  2'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_241_240 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_241_240);
    }

//initial config body603 end


//initial config body604 begin
    if (CP_PMA_CH0_REG_RESERVED_235_234 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_235_234  :=  2'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_235_234 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_235_234  :=  2'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_235_234  :=  2'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_235_234 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_235_234);
    }

//initial config body604 end


//initial config body605 begin
    if (CP_PMA_CH0_REG_RESERVED_233_232 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_233_232  :=  2'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_233_232 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_233_232  :=  2'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_233_232  :=  2'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_233_232 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_233_232);
    }

//initial config body605 end


//initial config body606 begin
    if (CP_PMA_CH0_REG_RESERVED_190 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_190  :=  1'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_190 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_190  :=  1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_190  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_190 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_190);
    }

//initial config body606 end


//initial config body607 begin
    if (CP_PMA_CH0_REG_RESERVED_175_172 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_175_172  :=  4'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_175_172 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_175_172  :=  4'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_175_172  :=  4'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_175_172 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_175_172);
    }

//initial config body607 end


//initial config body608 begin
    if (CP_PMA_CH0_REG_RESERVED_171_164 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_171_164  :=  8'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_171_164 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_171_164  :=  8'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_171_164  :=  8'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_171_164 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_171_164);
    }

//initial config body608 end


//initial config body609 begin
    if (CP_PMA_CH0_REG_RESERVED_77_76 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_77_76  :=  2'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_77_76 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_77_76  :=  2'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_77_76  :=  2'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_77_76 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_77_76);
    }

//initial config body609 end


//initial config body610 begin
    if (CP_PMA_CH0_REG_RESERVED_69 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_69  :=  1'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_69 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_69  :=  1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_69  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_69 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_69);
    }

//initial config body610 end


//initial config body611 begin
    if (CP_PMA_CH0_REG_RESERVED_48_45 == 0)
    {
        SC_PMA_CH0_REG_RESERVED_48_45   := 4'b0;
    }
    else if (CP_PMA_CH0_REG_RESERVED_48_45 == 1)
    {
        SC_PMA_CH0_REG_RESERVED_48_45   := 4'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RESERVED_48_45   := 4'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RESERVED_48_45 is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RESERVED_48_45);
    }

//initial config body611 end


//initial config body612 begin
    if (CP_PMA_CH0_CFG_CTLE_ADP_RSTN == "FALSE")
    {
        SC_PMA_CH0_CFG_CTLE_ADP_RSTN_666   := 1'b0;
    }
    else if (CP_PMA_CH0_CFG_CTLE_ADP_RSTN == "TRUE")
    {
        SC_PMA_CH0_CFG_CTLE_ADP_RSTN_666   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_CFG_CTLE_ADP_RSTN_666  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_CFG_CTLE_ADP_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_CFG_CTLE_ADP_RSTN);
    }

//initial config body612 end


//initial config body613 begin
    if (CP_PMA_CH0_CFG_TX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH0_CFG_TX_PMA_RSTN_665   := 1'b0;
    }
    else if (CP_PMA_CH0_CFG_TX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH0_CFG_TX_PMA_RSTN_665   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_CFG_TX_PMA_RSTN_665  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_CFG_TX_PMA_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_CFG_TX_PMA_RSTN);
    }

//initial config body613 end


//initial config body614 begin
    if (CP_PMA_CH0_CFG_TX_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH0_CFG_TX_LANE_POWERUP_664   := 1'b0;
    }
    else if (CP_PMA_CH0_CFG_TX_LANE_POWERUP == "ON")
    {
        SC_PMA_CH0_CFG_TX_LANE_POWERUP_664   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_CFG_TX_LANE_POWERUP_664  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_CFG_TX_LANE_POWERUP is set to %s. Legal values is ON,OFF",CP_PMA_CH0_CFG_TX_LANE_POWERUP);
    }

//initial config body614 end


//initial config body615 begin
    if (CP_PMA_CH0_CFG_RX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH0_CFG_RX_PMA_RSTN_663   := 1'b0;
    }
    else if (CP_PMA_CH0_CFG_RX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH0_CFG_RX_PMA_RSTN_663   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_CFG_RX_PMA_RSTN_663  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_CFG_RX_PMA_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_CFG_RX_PMA_RSTN);
    }

//initial config body615 end


//initial config body616 begin
    if (CP_PMA_CH0_CFG_RX_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH0_CFG_RX_LANE_POWERUP_662   := 1'b0;
    }
    else if (CP_PMA_CH0_CFG_RX_LANE_POWERUP == "ON")
    {
        SC_PMA_CH0_CFG_RX_LANE_POWERUP_662   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_CFG_RX_LANE_POWERUP_662  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_CFG_RX_LANE_POWERUP is set to %s. Legal values is ON,OFF",CP_PMA_CH0_CFG_RX_LANE_POWERUP);
    }

//initial config body616 end


//initial config body617 begin
    if (CP_PMA_CH0_CFG_PMA_POR_N == "FALSE")
    {
        SC_PMA_CH0_CFG_PMA_POR_N_661   := 1'b0;
    }
    else if (CP_PMA_CH0_CFG_PMA_POR_N == "TRUE")
    {
        SC_PMA_CH0_CFG_PMA_POR_N_661   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_CFG_PMA_POR_N_661  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_CFG_PMA_POR_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_CFG_PMA_POR_N);
    }

//initial config body617 end


//initial config body618 begin
    if (CP_PMA_CH0_CFG_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH0_CFG_LANE_POWERUP_660   := 1'b0;
    }
    else if (CP_PMA_CH0_CFG_LANE_POWERUP == "ON")
    {
        SC_PMA_CH0_CFG_LANE_POWERUP_660   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_CFG_LANE_POWERUP_660  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_CFG_LANE_POWERUP is set to %s. Legal values is ON,OFF",CP_PMA_CH0_CFG_LANE_POWERUP);
    }

//initial config body618 end


//initial config body619 begin
    if (CP_PMA_CH0_REG_RX_659_656 >= 0 && CP_PMA_CH0_REG_RX_659_656 <= 15)
    {
        SC_PMA_CH0_REG_RX_659_656  :=  CP_PMA_CH0_REG_RX_659_656;
    }
    else
    {
        SC_PMA_CH0_REG_RX_659_656  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_659_656 is set to %d. Legal values is 0 to 15",CP_PMA_CH0_REG_RX_659_656);
    }

//initial config body619 end


//initial config body620 begin
    if (CP_PMA_CH0_REG_RX_655_648 >= 0 && CP_PMA_CH0_REG_RX_655_648 <= 255)
    {
        SC_PMA_CH0_REG_RX_655_648  :=  CP_PMA_CH0_REG_RX_655_648;
    }
    else
    {
        SC_PMA_CH0_REG_RX_655_648  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_655_648 is set to %d. Legal values is 0 to 255",CP_PMA_CH0_REG_RX_655_648);
    }

//initial config body620 end


//initial config body621 begin
    if (CP_PMA_CH0_REG_RX_647_640 >= 0 && CP_PMA_CH0_REG_RX_647_640 <= 255)
    {
        SC_PMA_CH0_REG_RX_647_640  :=  CP_PMA_CH0_REG_RX_647_640;
    }
    else
    {
        SC_PMA_CH0_REG_RX_647_640  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_647_640 is set to %d. Legal values is 0 to 255",CP_PMA_CH0_REG_RX_647_640);
    }

//initial config body621 end


//initial config body622 begin
    if (CP_PMA_CH0_REG_RX_639_632 >= 0 && CP_PMA_CH0_REG_RX_639_632 <= 255)
    {
        SC_PMA_CH0_REG_RX_639_632  :=  CP_PMA_CH0_REG_RX_639_632;
    }
    else
    {
        SC_PMA_CH0_REG_RX_639_632  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_639_632 is set to %d. Legal values is 0 to 255",CP_PMA_CH0_REG_RX_639_632);
    }

//initial config body622 end


//initial config body623 begin
    if (CP_PMA_CH0_REG_RX_631_624 >= 0 && CP_PMA_CH0_REG_RX_631_624 <= 255)
    {
        SC_PMA_CH0_REG_RX_631_624  :=  CP_PMA_CH0_REG_RX_631_624;
    }
    else
    {
        SC_PMA_CH0_REG_RX_631_624  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_631_624 is set to %d. Legal values is 0 to 255",CP_PMA_CH0_REG_RX_631_624);
    }

//initial config body623 end


//initial config body624 begin
    if (CP_PMA_CH0_REG_RX_CDR_623_618 >= 0 && CP_PMA_CH0_REG_RX_CDR_623_618 <= 63)
    {
        SC_PMA_CH0_REG_RX_CDR_623_618  :=  CP_PMA_CH0_REG_RX_CDR_623_618;
    }
    else
    {
        SC_PMA_CH0_REG_RX_CDR_623_618  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_CDR_623_618 is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_RX_CDR_623_618);
    }

//initial config body624 end


//initial config body625 begin
    if (CP_PMA_CH0_REG_RX_CDR_617_610 >= 0 && CP_PMA_CH0_REG_RX_CDR_617_610 <= 255)
    {
        SC_PMA_CH0_REG_RX_CDR_617_610  :=  CP_PMA_CH0_REG_RX_CDR_617_610;
    }
    else
    {
        SC_PMA_CH0_REG_RX_CDR_617_610  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_CDR_617_610 is set to %d. Legal values is 0 to 255",CP_PMA_CH0_REG_RX_CDR_617_610);
    }

//initial config body625 end


//initial config body626 begin
    if (CP_PMA_CH0_REG_TX_609_600 >= 0 && CP_PMA_CH0_REG_TX_609_600 <= 1023)
    {
        SC_PMA_CH0_REG_TX_609_600  :=  CP_PMA_CH0_REG_TX_609_600;
    }
    else
    {
        SC_PMA_CH0_REG_TX_609_600  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_609_600 is set to %d. Legal values is 0 to 1023",CP_PMA_CH0_REG_TX_609_600);
    }

//initial config body626 end


//initial config body627 begin
    if (CP_PMA_CH0_REG_PLPBK_TXPCLK_EN == "FALSE")
    {
        SC_PMA_CH0_REG_PLPBK_TXPCLK_EN_551   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_PLPBK_TXPCLK_EN == "TRUE")
    {
        SC_PMA_CH0_REG_PLPBK_TXPCLK_EN_551   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_PLPBK_TXPCLK_EN_551  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_PLPBK_TXPCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_PLPBK_TXPCLK_EN);
    }

//initial config body627 end


//initial config body628 begin
    if (CP_PMA_CH0_REG_RX_TERM_MODE_CTRL >= 0 && CP_PMA_CH0_REG_RX_TERM_MODE_CTRL <= 7)
    {
        SC_PMA_CH0_REG_RX_TERM_MODE_CTRL_548_546   :=  to_unsigned( CP_PMA_CH0_REG_RX_TERM_MODE_CTRL , 3) ^  3'b110;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_TERM_MODE_CTRL_548_546  :=  0 ^ 3'b110;
        //reversed

        error("Setting Error : The CP_PMA_CH0_REG_RX_TERM_MODE_CTRL is set to %d. Legal values is 0 to 7",CP_PMA_CH0_REG_RX_TERM_MODE_CTRL);
    }

//initial config body628 end


//initial config body629 begin
    if (CP_PMA_CH0_REG_TX_FBCLK_FAR_EN == "FALSE")
    {
        SC_PMA_CH0_REG_TX_FBCLK_FAR_EN_545   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_FBCLK_FAR_EN == "TRUE")
    {
        SC_PMA_CH0_REG_TX_FBCLK_FAR_EN_545   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_FBCLK_FAR_EN_545  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_FBCLK_FAR_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_TX_FBCLK_FAR_EN);
    }

//initial config body629 end


//initial config body630 begin
    if (CP_PMA_CH0_REG_RX_ACJTAG_VHYSTSE >= 0 && CP_PMA_CH0_REG_RX_ACJTAG_VHYSTSE <= 7)
    {
        SC_PMA_CH0_REG_RX_ACJTAG_VHYSTSE_544_542  :=  CP_PMA_CH0_REG_RX_ACJTAG_VHYSTSE;
    }
    else
    {
        SC_PMA_CH0_REG_RX_ACJTAG_VHYSTSE_544_542  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_ACJTAG_VHYSTSE is set to %d. Legal values is 0 to 7",CP_PMA_CH0_REG_RX_ACJTAG_VHYSTSE);
    }

//initial config body630 end


//initial config body631 begin
    if (CP_PMA_CH0_REG_RX_JTAG_OE == "DISABLE")
    {
        SC_PMA_CH0_REG_RX_JTAG_OE_541   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_RX_JTAG_OE == "ENABLE")
    {
        SC_PMA_CH0_REG_RX_JTAG_OE_541   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_JTAG_OE_541  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_JTAG_OE is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_RX_JTAG_OE);
    }

//initial config body631 end


//initial config body632 begin
    if (CP_PMA_CH0_REG_RX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_JTAG_MODE_EN_540   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_JTAG_MODE_EN_540   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_JTAG_MODE_EN_540  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_JTAG_MODE_EN);
    }

//initial config body632 end


//initial config body633 begin
    if (CP_PMA_CH0_REG_RX_JTAG_MODE_EN_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_RX_JTAG_MODE_EN_OW_539   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_JTAG_MODE_EN_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_RX_JTAG_MODE_EN_OW_539   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_JTAG_MODE_EN_OW_539  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_JTAG_MODE_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_RX_JTAG_MODE_EN_OW);
    }

//initial config body633 end


//initial config body634 begin
    if (CP_PMA_CH0_REG_TX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH0_REG_TX_JTAG_MODE_EN_538   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH0_REG_TX_JTAG_MODE_EN_538   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_JTAG_MODE_EN_538  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_TX_JTAG_MODE_EN);
    }

//initial config body634 end


//initial config body635 begin
    if (CP_PMA_CH0_REG_TX_JTAG_MODE_EN_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_JTAG_MODE_EN_OW_537   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_JTAG_MODE_EN_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_JTAG_MODE_EN_OW_537   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_JTAG_MODE_EN_OW_537  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_JTAG_MODE_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_JTAG_MODE_EN_OW);
    }

//initial config body635 end


//initial config body636 begin
    if (CP_PMA_CH0_REG_TX_LS_MODE_EN == "FALSE")
    {
        SC_PMA_CH0_REG_TX_LS_MODE_EN_536   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_LS_MODE_EN == "TRUE")
    {
        SC_PMA_CH0_REG_TX_LS_MODE_EN_536   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_LS_MODE_EN_536  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_LS_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_TX_LS_MODE_EN);
    }

//initial config body636 end


//initial config body637 begin
    if (CP_PMA_CH0_REG_TX_SLPBK_AMP >= 0 && CP_PMA_CH0_REG_TX_SLPBK_AMP <= 3)
    {
        SC_PMA_CH0_REG_TX_SLPBK_AMP_535_534   :=  to_unsigned( CP_PMA_CH0_REG_TX_SLPBK_AMP , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_SLPBK_AMP_535_534  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_SLPBK_AMP is set to %d. Legal values is 0 to 3",CP_PMA_CH0_REG_TX_SLPBK_AMP);
    }

//initial config body637 end


//initial config body638 begin
    if (CP_PMA_CH0_REG_TX_POLARITY == "NORMAL")
    {
        SC_PMA_CH0_REG_TX_POLARITY_533   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_POLARITY == "REVERSE")
    {
        SC_PMA_CH0_REG_TX_POLARITY_533   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_POLARITY_533  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_PMA_CH0_REG_TX_POLARITY);
    }

//initial config body638 end


//initial config body639 begin
    if (CP_PMA_CH0_REG_TX_OOB_DELAY_SEL >= 0 && CP_PMA_CH0_REG_TX_OOB_DELAY_SEL <= 15)
    {
        SC_PMA_CH0_REG_TX_OOB_DELAY_SEL_532_529  :=  CP_PMA_CH0_REG_TX_OOB_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH0_REG_TX_OOB_DELAY_SEL_532_529  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_OOB_DELAY_SEL is set to %d. Legal values is 0 to 15",CP_PMA_CH0_REG_TX_OOB_DELAY_SEL);
    }

//initial config body639 end


//initial config body640 begin
    if (CP_PMA_CH0_REG_TX_PULLUP_DAC3 >= 0 && CP_PMA_CH0_REG_TX_PULLUP_DAC3 <= 31)
    {
        SC_PMA_CH0_REG_TX_PULLUP_DAC3_528_524   :=  to_unsigned( CP_PMA_CH0_REG_TX_PULLUP_DAC3 , 5) ^  5'b01001;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PULLUP_DAC3_528_524  :=  0 ^ 5'b01001;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_PULLUP_DAC3 is set to %d. Legal values is 0 to 31",CP_PMA_CH0_REG_TX_PULLUP_DAC3);
    }

//initial config body640 end


//initial config body641 begin
    if (CP_PMA_CH0_REG_TX_PULLUP_DAC2 >= 0 && CP_PMA_CH0_REG_TX_PULLUP_DAC2 <= 31)
    {
        SC_PMA_CH0_REG_TX_PULLUP_DAC2_523_519   :=  to_unsigned( CP_PMA_CH0_REG_TX_PULLUP_DAC2 , 5) ^  5'b01110;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PULLUP_DAC2_523_519  :=  0 ^ 5'b01110;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_PULLUP_DAC2 is set to %d. Legal values is 0 to 31",CP_PMA_CH0_REG_TX_PULLUP_DAC2);
    }

//initial config body641 end


//initial config body642 begin
    if (CP_PMA_CH0_REG_TX_PULLUP_DAC1 >= 0 && CP_PMA_CH0_REG_TX_PULLUP_DAC1 <= 31)
    {
        SC_PMA_CH0_REG_TX_PULLUP_DAC1_518_514   :=  to_unsigned( CP_PMA_CH0_REG_TX_PULLUP_DAC1 , 5) ^  5'b10011;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PULLUP_DAC1_518_514  :=  0 ^ 5'b10011;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_PULLUP_DAC1 is set to %d. Legal values is 0 to 31",CP_PMA_CH0_REG_TX_PULLUP_DAC1);
    }

//initial config body642 end


//initial config body643 begin
    if (CP_PMA_CH0_REG_TX_PULLUP_DAC0 >= 0 && CP_PMA_CH0_REG_TX_PULLUP_DAC0 <= 31)
    {
        SC_PMA_CH0_REG_TX_PULLUP_DAC0_513_509   :=  to_unsigned( CP_PMA_CH0_REG_TX_PULLUP_DAC0 , 5) ^  5'b11000;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PULLUP_DAC0_513_509  :=  0 ^ 5'b11000;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_PULLUP_DAC0 is set to %d. Legal values is 0 to 31",CP_PMA_CH0_REG_TX_PULLUP_DAC0);
    }

//initial config body643 end


//initial config body644 begin
    if (CP_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON == "DISABLE")
    {
        SC_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_508   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON == "ENABLE")
    {
        SC_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_508   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_508  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON);
    }

//initial config body644 end


//initial config body645 begin
    if (CP_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_OW_507   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_OW_507   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_OW_507  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_RATE_CHANGE_TXPCLK_ON_OW);
    }

//initial config body645 end


//initial config body646 begin
    if (CP_PMA_CH0_REG_TX_SATA_EN == "FALSE")
    {
        SC_PMA_CH0_REG_TX_SATA_EN_504   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_SATA_EN == "TRUE")
    {
        SC_PMA_CH0_REG_TX_SATA_EN_504   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_SATA_EN_504  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_SATA_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_TX_SATA_EN);
    }

//initial config body646 end


//initial config body647 begin
    if (CP_PMA_CH0_REG_TX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH0_REG_TX_ERR_INSERT_498   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH0_REG_TX_ERR_INSERT_498   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_ERR_INSERT_498  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_ERR_INSERT is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_TX_ERR_INSERT);
    }

//initial config body647 end


//initial config body648 begin
    if (CP_PMA_CH0_REG_TX_DATA_MUX_SEL >= 0 && CP_PMA_CH0_REG_TX_DATA_MUX_SEL <= 3)
    {
        SC_PMA_CH0_REG_TX_DATA_MUX_SEL_497_496  :=  CP_PMA_CH0_REG_TX_DATA_MUX_SEL;
    }
    else
    {
        SC_PMA_CH0_REG_TX_DATA_MUX_SEL_497_496  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_DATA_MUX_SEL is set to %d. Legal values is 0 to 3",CP_PMA_CH0_REG_TX_DATA_MUX_SEL);
    }

//initial config body648 end


//initial config body649 begin
    if (CP_PMA_CH0_REG_TX_FIFO_EN == "FALSE")
    {
        SC_PMA_CH0_REG_TX_FIFO_EN_495   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_FIFO_EN == "TRUE")
    {
        SC_PMA_CH0_REG_TX_FIFO_EN_495   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_FIFO_EN_495  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_TX_FIFO_EN);
    }

//initial config body649 end


//initial config body650 begin
    if (CP_PMA_CH0_REG_TX_FIFO_WP_CTRL >= 0 && CP_PMA_CH0_REG_TX_FIFO_WP_CTRL <= 7)
    {
        SC_PMA_CH0_REG_TX_FIFO_WP_CTRL_494_492   :=  to_unsigned( CP_PMA_CH0_REG_TX_FIFO_WP_CTRL , 3) ^  3'b010;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_FIFO_WP_CTRL_494_492  :=  0 ^ 3'b010;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_FIFO_WP_CTRL is set to %d. Legal values is 0 to 7",CP_PMA_CH0_REG_TX_FIFO_WP_CTRL);
    }

//initial config body650 end


//initial config body651 begin
    if (CP_PMA_CH0_REG_TX_FIFO_RST_N == "FALSE")
    {
        SC_PMA_CH0_REG_TX_FIFO_RST_N_491   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_FIFO_RST_N == "TRUE")
    {
        SC_PMA_CH0_REG_TX_FIFO_RST_N_491   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_FIFO_RST_N_491  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_FIFO_RST_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_TX_FIFO_RST_N);
    }

//initial config body651 end


//initial config body652 begin
    if (CP_PMA_CH0_REG_TX_UDP_DATA >= 0 && CP_PMA_CH0_REG_TX_UDP_DATA <= 1048575)
    {
        SC_PMA_CH0_REG_TX_UDP_DATA_490_471   :=  to_unsigned( CP_PMA_CH0_REG_TX_UDP_DATA , 20) ^  20'b00111110101100000101;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_UDP_DATA_490_471  :=  0 ^ 20'b00111110101100000101;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_UDP_DATA is set to %d. Legal values is 0 to 1048575",CP_PMA_CH0_REG_TX_UDP_DATA);
    }

//initial config body652 end


//initial config body653 begin
    if (CP_PMA_CH0_REG_TX_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH0_REG_TX_PRBS_SEL_470_469   := 2'b00;
    }
    else if (CP_PMA_CH0_REG_TX_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH0_REG_TX_PRBS_SEL_470_469   := 2'b01;
    }
    else if (CP_PMA_CH0_REG_TX_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH0_REG_TX_PRBS_SEL_470_469   := 2'b10;
    }
    else if (CP_PMA_CH0_REG_TX_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH0_REG_TX_PRBS_SEL_470_469   := 2'b11;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PRBS_SEL_470_469  :=  2'b00;
        error("Setting Error : The CP_PMA_CH0_REG_TX_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_PMA_CH0_REG_TX_PRBS_SEL);
    }

//initial config body653 end


//initial config body654 begin
    if (CP_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b00 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b01 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b10 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b11 ^ 2'b11;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL_468_467  :=  2'b00 ^ 2'b11;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH0_REG_TX_PRBS_GEN_WIDTH_SEL);
    }

//initial config body654 end


//initial config body655 begin
    if (CP_PMA_CH0_REG_TX_PRBS_GEN_EN == "FALSE")
    {
        SC_PMA_CH0_REG_TX_PRBS_GEN_EN_466   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_PRBS_GEN_EN == "TRUE")
    {
        SC_PMA_CH0_REG_TX_PRBS_GEN_EN_466   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PRBS_GEN_EN_466  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_PRBS_GEN_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_TX_PRBS_GEN_EN);
    }

//initial config body655 end


//initial config body656 begin
    if (CP_PMA_CH0_REG_TX_RXDET_STATUS == "FALSE")
    {
        SC_PMA_CH0_REG_TX_RXDET_STATUS_465   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_RXDET_STATUS == "TRUE")
    {
        SC_PMA_CH0_REG_TX_RXDET_STATUS_465   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_RXDET_STATUS_465  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_RXDET_STATUS is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_TX_RXDET_STATUS);
    }

//initial config body656 end


//initial config body657 begin
    if (CP_PMA_CH0_REG_TX_RXDET_STATUS_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_RXDET_STATUS_OW_464   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_RXDET_STATUS_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_RXDET_STATUS_OW_464   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_RXDET_STATUS_OW_464  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_RXDET_STATUS_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_RXDET_STATUS_OW);
    }

//initial config body657 end


//initial config body658 begin
    if (CP_PMA_CH0_REG_TX_PCLK_EDGE_SEL == "POS_EDGE")
    {
        SC_PMA_CH0_REG_TX_PCLK_EDGE_SEL_463   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_PCLK_EDGE_SEL == "NEG_EDGE")
    {
        SC_PMA_CH0_REG_TX_PCLK_EDGE_SEL_463   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PCLK_EDGE_SEL_463  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_PCLK_EDGE_SEL is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_PMA_CH0_REG_TX_PCLK_EDGE_SEL);
    }

//initial config body658 end


//initial config body659 begin
    if (CP_PMA_CH0_REG_TX_TX2RX_SLPBACK_EN == "FALSE")
    {
        SC_PMA_CH0_REG_TX_TX2RX_SLPBACK_EN_462   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_TX2RX_SLPBACK_EN == "TRUE")
    {
        SC_PMA_CH0_REG_TX_TX2RX_SLPBACK_EN_462   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_TX2RX_SLPBACK_EN_462  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_TX2RX_SLPBACK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_TX_TX2RX_SLPBACK_EN);
    }

//initial config body659 end


//initial config body660 begin
    if (CP_PMA_CH0_REG_TX_PREDRV_CM_CTRL >= 0 && CP_PMA_CH0_REG_TX_PREDRV_CM_CTRL <= 3)
    {
        SC_PMA_CH0_REG_TX_PREDRV_CM_CTRL_461_460   :=  to_unsigned( CP_PMA_CH0_REG_TX_PREDRV_CM_CTRL , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PREDRV_CM_CTRL_461_460  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_PREDRV_CM_CTRL is set to %d. Legal values is 0 to 3",CP_PMA_CH0_REG_TX_PREDRV_CM_CTRL);
    }

//initial config body660 end


//initial config body661 begin
    if (CP_PMA_CH0_REG_TX_PREDRV_DAC >= 0 && CP_PMA_CH0_REG_TX_PREDRV_DAC <= 3)
    {
        SC_PMA_CH0_REG_TX_PREDRV_DAC_459_458   :=  to_unsigned( CP_PMA_CH0_REG_TX_PREDRV_DAC , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PREDRV_DAC_459_458  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_PREDRV_DAC is set to %d. Legal values is 0 to 3",CP_PMA_CH0_REG_TX_PREDRV_DAC);
    }

//initial config body661 end


//initial config body662 begin
    if (CP_PMA_CH0_REG_TX_BEACON_OSC_CTRL >= 0 && CP_PMA_CH0_REG_TX_BEACON_OSC_CTRL <= 7)
    {
        SC_PMA_CH0_REG_TX_BEACON_OSC_CTRL_457_455   :=  to_unsigned( CP_PMA_CH0_REG_TX_BEACON_OSC_CTRL , 3) ^  3'b100;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_BEACON_OSC_CTRL_457_455  :=  0 ^ 3'b100;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_BEACON_OSC_CTRL is set to %d. Legal values is 0 to 7",CP_PMA_CH0_REG_TX_BEACON_OSC_CTRL);
    }

//initial config body662 end


//initial config body663 begin
    if (CP_PMA_CH0_REG_TX_RXDET_THRESHOLD == "50MV")
    {
        SC_PMA_CH0_REG_TX_RXDET_THRESHOLD_454_453   := 2'b00 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_RXDET_THRESHOLD == "75MV")
    {
        SC_PMA_CH0_REG_TX_RXDET_THRESHOLD_454_453   := 2'b01 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_RXDET_THRESHOLD == "100MV")
    {
        SC_PMA_CH0_REG_TX_RXDET_THRESHOLD_454_453   := 2'b10 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_RXDET_THRESHOLD == "125MV")
    {
        SC_PMA_CH0_REG_TX_RXDET_THRESHOLD_454_453   := 2'b11 ^ 2'b10;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_RXDET_THRESHOLD_454_453  :=  2'b00 ^ 2'b10;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_RXDET_THRESHOLD is set to %s. Legal values is 50MV,75MV,100MV,125MV",CP_PMA_CH0_REG_TX_RXDET_THRESHOLD);
    }

//initial config body663 end


//initial config body664 begin
    if (CP_PMA_CH0_REG_TX_SWING_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_SWING_OW_451   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_SWING_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_SWING_OW_451   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_SWING_OW_451  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_SWING_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_SWING_OW);
    }

//initial config body664 end


//initial config body665 begin
    if (CP_PMA_CH0_REG_TX_SWING == "FALSE")
    {
        SC_PMA_CH0_REG_TX_SWING_450   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_SWING == "TRUE")
    {
        SC_PMA_CH0_REG_TX_SWING_450   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_SWING_450  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_SWING is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_TX_SWING);
    }

//initial config body665 end


//initial config body666 begin
    if (CP_PMA_CH0_REG_TX_DEEMP_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_DEEMP_OW_449   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_DEEMP_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_DEEMP_OW_449   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_DEEMP_OW_449  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_DEEMP_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_DEEMP_OW);
    }

//initial config body666 end


//initial config body667 begin
    if (CP_PMA_CH0_REG_TX_DEEMP >= 0 && CP_PMA_CH0_REG_TX_DEEMP <= 3)
    {
        SC_PMA_CH0_REG_TX_DEEMP_448_447  :=  CP_PMA_CH0_REG_TX_DEEMP;
    }
    else
    {
        SC_PMA_CH0_REG_TX_DEEMP_448_447  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_DEEMP is set to %d. Legal values is 0 to 3",CP_PMA_CH0_REG_TX_DEEMP);
    }

//initial config body667 end


//initial config body668 begin
    if (CP_PMA_CH0_REG_TX_MARGIN_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_MARGIN_OW_446   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_MARGIN_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_MARGIN_OW_446   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_MARGIN_OW_446  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_MARGIN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_MARGIN_OW);
    }

//initial config body668 end


//initial config body669 begin
    if (CP_PMA_CH0_REG_TX_MARGIN >= 0 && CP_PMA_CH0_REG_TX_MARGIN <= 7)
    {
        SC_PMA_CH0_REG_TX_MARGIN_445_443  :=  CP_PMA_CH0_REG_TX_MARGIN;
    }
    else
    {
        SC_PMA_CH0_REG_TX_MARGIN_445_443  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_MARGIN is set to %d. Legal values is 0 to 7",CP_PMA_CH0_REG_TX_MARGIN);
    }

//initial config body669 end


//initial config body670 begin
    if (CP_PMA_CH0_REG_TX_AMP4 >= 0 && CP_PMA_CH0_REG_TX_AMP4 <= 63)
    {
        SC_PMA_CH0_REG_TX_AMP4_442_437   :=  to_unsigned( CP_PMA_CH0_REG_TX_AMP4 , 6) ^  6'b000101;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_AMP4_442_437  :=  0 ^ 6'b000101;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_AMP4 is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_TX_AMP4);
    }

//initial config body670 end


//initial config body671 begin
    if (CP_PMA_CH0_REG_TX_AMP3 >= 0 && CP_PMA_CH0_REG_TX_AMP3 <= 63)
    {
        SC_PMA_CH0_REG_TX_AMP3_436_431   :=  to_unsigned( CP_PMA_CH0_REG_TX_AMP3 , 6) ^  6'b001001;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_AMP3_436_431  :=  0 ^ 6'b001001;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_AMP3 is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_TX_AMP3);
    }

//initial config body671 end


//initial config body672 begin
    if (CP_PMA_CH0_REG_TX_AMP2 >= 0 && CP_PMA_CH0_REG_TX_AMP2 <= 63)
    {
        SC_PMA_CH0_REG_TX_AMP2_430_425   :=  to_unsigned( CP_PMA_CH0_REG_TX_AMP2 , 6) ^  6'b001110;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_AMP2_430_425  :=  0 ^ 6'b001110;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_AMP2 is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_TX_AMP2);
    }

//initial config body672 end


//initial config body673 begin
    if (CP_PMA_CH0_REG_TX_AMP1 >= 0 && CP_PMA_CH0_REG_TX_AMP1 <= 63)
    {
        SC_PMA_CH0_REG_TX_AMP1_424_419   :=  to_unsigned( CP_PMA_CH0_REG_TX_AMP1 , 6) ^  6'b010011;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_AMP1_424_419  :=  0 ^ 6'b010011;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_AMP1 is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_TX_AMP1);
    }

//initial config body673 end


//initial config body674 begin
    if (CP_PMA_CH0_REG_TX_AMP0 >= 0 && CP_PMA_CH0_REG_TX_AMP0 <= 63)
    {
        SC_PMA_CH0_REG_TX_AMP0_418_413   :=  to_unsigned( CP_PMA_CH0_REG_TX_AMP0 , 6) ^  6'b011000;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_AMP0_418_413  :=  0 ^ 6'b011000;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_AMP0 is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_TX_AMP0);
    }

//initial config body674 end


//initial config body675 begin
    if (CP_PMA_CH0_REG_TX_DRV00_DAC2 >= 0 && CP_PMA_CH0_REG_TX_DRV00_DAC2 <= 63)
    {
        SC_PMA_CH0_REG_TX_DRV00_DAC2_412_407   :=  to_unsigned( CP_PMA_CH0_REG_TX_DRV00_DAC2 , 6) ^  6'b110000;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_DRV00_DAC2_412_407  :=  0 ^ 6'b110000;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_DRV00_DAC2 is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_TX_DRV00_DAC2);
    }

//initial config body675 end


//initial config body676 begin
    if (CP_PMA_CH0_REG_TX_DRV00_DAC1 >= 0 && CP_PMA_CH0_REG_TX_DRV00_DAC1 <= 63)
    {
        SC_PMA_CH0_REG_TX_DRV00_DAC1_406_401   :=  to_unsigned( CP_PMA_CH0_REG_TX_DRV00_DAC1 , 6) ^  6'b110101;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_DRV00_DAC1_406_401  :=  0 ^ 6'b110101;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_DRV00_DAC1 is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_TX_DRV00_DAC1);
    }

//initial config body676 end


//initial config body677 begin
    if (CP_PMA_CH0_REG_TX_DRV00_DAC0 >= 0 && CP_PMA_CH0_REG_TX_DRV00_DAC0 <= 63)
    {
        SC_PMA_CH0_REG_TX_DRV00_DAC0_400_395   :=  to_unsigned( CP_PMA_CH0_REG_TX_DRV00_DAC0 , 6) ^  6'b111111;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_DRV00_DAC0_400_395  :=  0 ^ 6'b111111;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_DRV00_DAC0 is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_TX_DRV00_DAC0);
    }

//initial config body677 end


//initial config body678 begin
    if (CP_PMA_CH0_REG_TX_DRV01_DAC2 >= 0 && CP_PMA_CH0_REG_TX_DRV01_DAC2 <= 63)
    {
        SC_PMA_CH0_REG_TX_DRV01_DAC2_394_389   :=  to_unsigned( CP_PMA_CH0_REG_TX_DRV01_DAC2 , 6) ^  6'b100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_DRV01_DAC2_394_389  :=  0 ^ 6'b100000;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_DRV01_DAC2 is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_TX_DRV01_DAC2);
    }

//initial config body678 end


//initial config body679 begin
    if (CP_PMA_CH0_REG_TX_DRV01_DAC1 >= 0 && CP_PMA_CH0_REG_TX_DRV01_DAC1 <= 63)
    {
        SC_PMA_CH0_REG_TX_DRV01_DAC1_388_383   :=  to_unsigned( CP_PMA_CH0_REG_TX_DRV01_DAC1 , 6) ^  6'b010101;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_DRV01_DAC1_388_383  :=  0 ^ 6'b010101;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_DRV01_DAC1 is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_TX_DRV01_DAC1);
    }

//initial config body679 end


//initial config body680 begin
    if (CP_PMA_CH0_REG_TX_DRV01_DAC0 >= 0 && CP_PMA_CH0_REG_TX_DRV01_DAC0 <= 63)
    {
        SC_PMA_CH0_REG_TX_DRV01_DAC0_382_377  :=  CP_PMA_CH0_REG_TX_DRV01_DAC0;
    }
    else
    {
        SC_PMA_CH0_REG_TX_DRV01_DAC0_382_377  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_DRV01_DAC0 is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_TX_DRV01_DAC0);
    }

//initial config body680 end


//initial config body681 begin
    if (CP_PMA_CH0_REG_EI_PCLK_DELAY_SEL >= 0 && CP_PMA_CH0_REG_EI_PCLK_DELAY_SEL <= 3)
    {
        SC_PMA_CH0_REG_EI_PCLK_DELAY_SEL_375_374  :=  CP_PMA_CH0_REG_EI_PCLK_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH0_REG_EI_PCLK_DELAY_SEL_375_374  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_EI_PCLK_DELAY_SEL is set to %d. Legal values is 0 to 3",CP_PMA_CH0_REG_EI_PCLK_DELAY_SEL);
    }

//initial config body681 end


//initial config body682 begin
    if (CP_PMA_CH0_REG_TX_PCLK_SW == "FALSE")
    {
        SC_PMA_CH0_REG_TX_PCLK_SW_372   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_PCLK_SW == "TRUE")
    {
        SC_PMA_CH0_REG_TX_PCLK_SW_372   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PCLK_SW_372  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_PCLK_SW is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_TX_PCLK_SW);
    }

//initial config body682 end


//initial config body683 begin
    if (CP_PMA_CH0_REG_TX_PCLK_SW_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_PCLK_SW_OW_371   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_PCLK_SW_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_PCLK_SW_OW_371   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PCLK_SW_OW_371  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_PCLK_SW_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_PCLK_SW_OW);
    }

//initial config body683 end


//initial config body684 begin
    if (CP_PMA_CH0_REG_PLL_READY == "FALSE")
    {
        SC_PMA_CH0_REG_PLL_READY_370   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_PLL_READY == "TRUE")
    {
        SC_PMA_CH0_REG_PLL_READY_370   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_PLL_READY_370  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_PLL_READY is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_PLL_READY);
    }

//initial config body684 end


//initial config body685 begin
    if (CP_PMA_CH0_REG_PLL_READY_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_PLL_READY_OW_369   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_PLL_READY_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_PLL_READY_OW_369   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_PLL_READY_OW_369  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_PLL_READY_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_PLL_READY_OW);
    }

//initial config body685 end


//initial config body686 begin
    if (CP_PMA_CH0_REG_TX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH0_REG_TX_BUSWIDTH_368_366   := 3'd0 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH0_REG_TX_BUSWIDTH_368_366   := 3'd1 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH0_REG_TX_BUSWIDTH_368_366   := 3'd2 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH0_REG_TX_BUSWIDTH_368_366   := 3'd3 ^ 3'b011;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_BUSWIDTH_368_366  :=  3'd0 ^ 3'b011;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH0_REG_TX_BUSWIDTH);
    }

//initial config body686 end


//initial config body687 begin
    if (CP_PMA_CH0_REG_TX_BUSWIDTH_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_BUSWIDTH_OW_365   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_BUSWIDTH_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_BUSWIDTH_OW_365   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_BUSWIDTH_OW_365  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_BUSWIDTH_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_BUSWIDTH_OW);
    }

//initial config body687 end


//initial config body688 begin
    if (CP_PMA_CH0_REG_TX_DCC_RESET_N == "FALSE")
    {
        SC_PMA_CH0_REG_TX_DCC_RESET_N_364   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_DCC_RESET_N == "TRUE")
    {
        SC_PMA_CH0_REG_TX_DCC_RESET_N_364   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_DCC_RESET_N_364  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_DCC_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_TX_DCC_RESET_N);
    }

//initial config body688 end


//initial config body689 begin
    if (CP_PMA_CH0_REG_TX_DCC_RESET_N_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_DCC_RESET_N_OW_363   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_DCC_RESET_N_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_DCC_RESET_N_OW_363   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_DCC_RESET_N_OW_363  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_DCC_RESET_N_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_DCC_RESET_N_OW);
    }

//initial config body689 end


//initial config body690 begin
    if (CP_PMA_CH0_REG_TX_RESET_N == "FALSE")
    {
        SC_PMA_CH0_REG_TX_RESET_N_362   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_RESET_N == "TRUE")
    {
        SC_PMA_CH0_REG_TX_RESET_N_362   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_RESET_N_362  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_TX_RESET_N);
    }

//initial config body690 end


//initial config body691 begin
    if (CP_PMA_CH0_REG_TX_RESET_N_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_RESET_N_OW_361   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_RESET_N_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_RESET_N_OW_361   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_RESET_N_OW_361  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_RESET_N_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_RESET_N_OW);
    }

//initial config body691 end


//initial config body692 begin
    if (CP_PMA_CH0_REG_TX_PD_POST_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_PD_POST_OW_360   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_PD_POST_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_PD_POST_OW_360   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PD_POST_OW_360  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_PD_POST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_PD_POST_OW);
    }

//initial config body692 end


//initial config body693 begin
    if (CP_PMA_CH0_REG_TX_PD_POST == "ON")
    {
        SC_PMA_CH0_REG_TX_PD_POST_359   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_PD_POST == "OFF")
    {
        SC_PMA_CH0_REG_TX_PD_POST_359   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PD_POST_359  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_PD_POST is set to %s. Legal values is ON,OFF",CP_PMA_CH0_REG_TX_PD_POST);
    }

//initial config body693 end


//initial config body694 begin
    if (CP_PMA_CH0_REG_TX_SYNC == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_SYNC_358   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_SYNC == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_SYNC_358   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_SYNC_358  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_SYNC is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_SYNC);
    }

//initial config body694 end


//initial config body695 begin
    if (CP_PMA_CH0_REG_TX_SYNC_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_SYNC_OW_357   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_SYNC_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_SYNC_OW_357   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_SYNC_OW_357  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_SYNC_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_SYNC_OW);
    }

//initial config body695 end


//initial config body696 begin
    if (CP_PMA_CH0_REG_TX_RXDET_TIMER_SEL == "3CYCLE")
    {
        SC_PMA_CH0_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b00 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_RXDET_TIMER_SEL == "12CYCLE")
    {
        SC_PMA_CH0_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b01 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_RXDET_TIMER_SEL == "24CYCLE")
    {
        SC_PMA_CH0_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b10 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_TX_RXDET_TIMER_SEL == "36CYCLE")
    {
        SC_PMA_CH0_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b11 ^ 2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_RXDET_TIMER_SEL_356_355  :=  2'b00 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_RXDET_TIMER_SEL is set to %s. Legal values is 3CYCLE,12CYCLE,24CYCLE,36CYCLE",CP_PMA_CH0_REG_TX_RXDET_TIMER_SEL);
    }

//initial config body696 end


//initial config body697 begin
    if (CP_PMA_CH0_REG_TX_BIAS_CTRL >= 0 && CP_PMA_CH0_REG_TX_BIAS_CTRL <= 63)
    {
        SC_PMA_CH0_REG_TX_BIAS_CTRL_324_319   :=  to_unsigned( CP_PMA_CH0_REG_TX_BIAS_CTRL , 6) ^  6'b100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_BIAS_CTRL_324_319  :=  0 ^ 6'b100000;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_BIAS_CTRL is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_TX_BIAS_CTRL);
    }

//initial config body697 end


//initial config body698 begin
    if (CP_PMA_CH0_REG_TX_BIAS_CAL_EN == "FALSE")
    {
        SC_PMA_CH0_REG_TX_BIAS_CAL_EN_318   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_BIAS_CAL_EN == "TRUE")
    {
        SC_PMA_CH0_REG_TX_BIAS_CAL_EN_318   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_BIAS_CAL_EN_318  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_BIAS_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_TX_BIAS_CAL_EN);
    }

//initial config body698 end


//initial config body699 begin
    if (CP_PMA_CH0_REG_TX_RES_CAL >= 0 && CP_PMA_CH0_REG_TX_RES_CAL <= 63)
    {
        SC_PMA_CH0_REG_TX_RES_CAL_317_312   :=  to_unsigned( CP_PMA_CH0_REG_TX_RES_CAL , 6) ^  6'b110011;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_RES_CAL_317_312  :=  0 ^ 6'b110011;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_RES_CAL is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_TX_RES_CAL);
    }

//initial config body699 end


//initial config body700 begin
    if (CP_PMA_CH0_REG_TX_RES_CAL_EN == "FALSE")
    {
        SC_PMA_CH0_REG_TX_RES_CAL_EN_311   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_RES_CAL_EN == "TRUE")
    {
        SC_PMA_CH0_REG_TX_RES_CAL_EN_311   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_RES_CAL_EN_311  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_RES_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_TX_RES_CAL_EN);
    }

//initial config body700 end


//initial config body701 begin
    if (CP_PMA_CH0_REG_TX_EI_EN == "FALSE")
    {
        SC_PMA_CH0_REG_TX_EI_EN_310   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_EI_EN == "TRUE")
    {
        SC_PMA_CH0_REG_TX_EI_EN_310   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_EI_EN_310  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_EI_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_TX_EI_EN);
    }

//initial config body701 end


//initial config body702 begin
    if (CP_PMA_CH0_REG_TX_EI_EN_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_EI_EN_OW_309   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_EI_EN_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_EI_EN_OW_309   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_EI_EN_OW_309  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_EI_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_EI_EN_OW);
    }

//initial config body702 end


//initial config body703 begin
    if (CP_PMA_CH0_REG_TX_BEACON_EN == "FALSE")
    {
        SC_PMA_CH0_REG_TX_BEACON_EN_308   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_BEACON_EN == "TRUE")
    {
        SC_PMA_CH0_REG_TX_BEACON_EN_308   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_BEACON_EN_308  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_BEACON_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_TX_BEACON_EN);
    }

//initial config body703 end


//initial config body704 begin
    if (CP_PMA_CH0_REG_TX_BEACON_EN_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_BEACON_EN_OW_307   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_BEACON_EN_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_BEACON_EN_OW_307   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_BEACON_EN_OW_307  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_BEACON_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_BEACON_EN_OW);
    }

//initial config body704 end


//initial config body705 begin
    if (CP_PMA_CH0_REG_TX_RXDET_REQ == "FALSE")
    {
        SC_PMA_CH0_REG_TX_RXDET_REQ_306   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_RXDET_REQ == "TRUE")
    {
        SC_PMA_CH0_REG_TX_RXDET_REQ_306   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_RXDET_REQ_306  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_RXDET_REQ is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_TX_RXDET_REQ);
    }

//initial config body705 end


//initial config body706 begin
    if (CP_PMA_CH0_REG_TX_RXDET_REQ_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_RXDET_REQ_OW_305   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_RXDET_REQ_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_RXDET_REQ_OW_305   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_RXDET_REQ_OW_305  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_RXDET_REQ_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_RXDET_REQ_OW);
    }

//initial config body706 end


//initial config body707 begin
    if (CP_PMA_CH0_REG_TX_BEACON_TIMER_SEL >= 0 && CP_PMA_CH0_REG_TX_BEACON_TIMER_SEL <= 3)
    {
        SC_PMA_CH0_REG_TX_BEACON_TIMER_SEL_304_303  :=  CP_PMA_CH0_REG_TX_BEACON_TIMER_SEL;
    }
    else
    {
        SC_PMA_CH0_REG_TX_BEACON_TIMER_SEL_304_303  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_BEACON_TIMER_SEL is set to %d. Legal values is 0 to 3",CP_PMA_CH0_REG_TX_BEACON_TIMER_SEL);
    }

//initial config body707 end


//initial config body708 begin
    if (CP_PMA_CH0_REG_TX_CLKPATH_PD_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_CLKPATH_PD_OW_302   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_CLKPATH_PD_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_CLKPATH_PD_OW_302   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_CLKPATH_PD_OW_302  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_CLKPATH_PD_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_CLKPATH_PD_OW);
    }

//initial config body708 end


//initial config body709 begin
    if (CP_PMA_CH0_REG_TX_CLKPATH_PD == "ON")
    {
        SC_PMA_CH0_REG_TX_CLKPATH_PD_301   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_CLKPATH_PD == "OFF")
    {
        SC_PMA_CH0_REG_TX_CLKPATH_PD_301   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_CLKPATH_PD_301  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_CLKPATH_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH0_REG_TX_CLKPATH_PD);
    }

//initial config body709 end


//initial config body710 begin
    if (CP_PMA_CH0_REG_TX_PD_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_PD_OW_300   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_PD_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_PD_OW_300   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PD_OW_300  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_PD_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_PD_OW);
    }

//initial config body710 end


//initial config body711 begin
    if (CP_PMA_CH0_REG_TX_PD == "ON")
    {
        SC_PMA_CH0_REG_TX_PD_299   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_PD == "OFF")
    {
        SC_PMA_CH0_REG_TX_PD_299   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_PD_299  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH0_REG_TX_PD);
    }

//initial config body711 end


//initial config body712 begin
    if (CP_PMA_CH0_REG_RX_TERM_CM_CTRL == "5DIV7")
    {
        SC_PMA_CH0_REG_RX_TERM_CM_CTRL_297_296   := 2'b00;
    }
    else if (CP_PMA_CH0_REG_RX_TERM_CM_CTRL == "2DIV3")
    {
        SC_PMA_CH0_REG_RX_TERM_CM_CTRL_297_296   := 2'b01;
    }
    else if (CP_PMA_CH0_REG_RX_TERM_CM_CTRL == "5DIV6")
    {
        SC_PMA_CH0_REG_RX_TERM_CM_CTRL_297_296   := 2'b10;
    }
    else if (CP_PMA_CH0_REG_RX_TERM_CM_CTRL == "4DIV5")
    {
        SC_PMA_CH0_REG_RX_TERM_CM_CTRL_297_296   := 2'b11;
    }
    else
    {
        SC_PMA_CH0_REG_RX_TERM_CM_CTRL_297_296  :=  2'b00;
        error("Setting Error : The CP_PMA_CH0_REG_RX_TERM_CM_CTRL is set to %s. Legal values is 5DIV7,2DIV3,5DIV6,4DIV5",CP_PMA_CH0_REG_RX_TERM_CM_CTRL);
    }

//initial config body712 end


//initial config body713 begin
    if (CP_PMA_CH0_REG_RX_OOB_DETECTOR_PD == "ON")
    {
        SC_PMA_CH0_REG_RX_OOB_DETECTOR_PD_294   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_OOB_DETECTOR_PD == "OFF")
    {
        SC_PMA_CH0_REG_RX_OOB_DETECTOR_PD_294   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_OOB_DETECTOR_PD_294  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_OOB_DETECTOR_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH0_REG_RX_OOB_DETECTOR_PD);
    }

//initial config body713 end


//initial config body714 begin
    if (CP_PMA_CH0_REG_RX_OOB_DETECTOR_PD_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_RX_OOB_DETECTOR_PD_OW_293   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_OOB_DETECTOR_PD_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_RX_OOB_DETECTOR_PD_OW_293   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_OOB_DETECTOR_PD_OW_293  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_OOB_DETECTOR_PD_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_RX_OOB_DETECTOR_PD_OW);
    }

//initial config body714 end


//initial config body715 begin
    if (CP_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N == "FALSE")
    {
        SC_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_292   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N == "TRUE")
    {
        SC_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_292   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_292  :=  1'b0;
        error("Setting Error : CP_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N);
    }

//initial config body715 end


//initial config body716 begin
    if (CP_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_OW_291   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_OW_291   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_OW_291  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_RX_OOB_DETECTOR_RESET_N_OW);
    }

//initial config body716 end


//initial config body717 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_IC_I >= 0 && CP_PMA_CH0_REG_RX_SIGDET_IC_I <= 15)
    {
        SC_PMA_CH0_REG_RX_SIGDET_IC_I_290_287   :=  to_unsigned( CP_PMA_CH0_REG_RX_SIGDET_IC_I , 4) ^  4'b1010;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_IC_I_290_287  :=  0 ^ 4'b1010;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_IC_I is set to %d. Legal values is 0 to 15",CP_PMA_CH0_REG_RX_SIGDET_IC_I);
    }

//initial config body717 end


//initial config body718 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_4OOB_DET_SEL >= 0 && CP_PMA_CH0_REG_RX_SIGDET_4OOB_DET_SEL <= 7)
    {
        SC_PMA_CH0_REG_RX_SIGDET_4OOB_DET_SEL_282_280   :=  to_unsigned( CP_PMA_CH0_REG_RX_SIGDET_4OOB_DET_SEL , 3) ^  3'b111;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_4OOB_DET_SEL_282_280  :=  0 ^ 3'b111;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_4OOB_DET_SEL is set to %d. Legal values is 0 to 7",CP_PMA_CH0_REG_RX_SIGDET_4OOB_DET_SEL);
    }

//initial config body718 end


//initial config body719 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL >= 0 && CP_PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL <= 31)
    {
        SC_PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275  :=  CP_PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL is set to %d. Legal values is 0 to 31",CP_PMA_CH0_REG_RX_SIGDET_OOB_DET_COUNT_VAL);
    }

//initial config body719 end


//initial config body720 begin
    if (CP_PMA_CH0_REG_SLIP_FIFO_INV == "POS_EDGE")
    {
        SC_PMA_CH0_REG_SLIP_FIFO_INV_274  :=  1'b0;
    }
    else if (CP_PMA_CH0_REG_SLIP_FIFO_INV == "NEG_EDGE")
    {
        SC_PMA_CH0_REG_SLIP_FIFO_INV_274  :=  1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_SLIP_FIFO_INV_274  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_SLIP_FIFO_INV is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_PMA_CH0_REG_SLIP_FIFO_INV);
    }

//initial config body720 end


//initial config body721 begin
    if (CP_PMA_CH0_REG_SLIP_FIFO_INV_EN == "FALSE")
    {
        SC_PMA_CH0_REG_SLIP_FIFO_INV_EN_273  :=  1'b0;
    }
    else if (CP_PMA_CH0_REG_SLIP_FIFO_INV_EN == "TRUE")
    {
        SC_PMA_CH0_REG_SLIP_FIFO_INV_EN_273  :=  1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_SLIP_FIFO_INV_EN_273  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_SLIP_FIFO_INV_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_SLIP_FIFO_INV_EN);
    }

//initial config body721 end


//initial config body722 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_NOSIG_COUNT_SETTING >= 0 && CP_PMA_CH0_REG_RX_SIGDET_NOSIG_COUNT_SETTING <= 7)
    {
        SC_PMA_CH0_REG_RX_SIGDET_NOSIG_CNT_SET_272_270   :=  to_unsigned( CP_PMA_CH0_REG_RX_SIGDET_NOSIG_COUNT_SETTING , 3) ^  3'b100;
        //272 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_NOSIG_CNT_SET_272_270  :=  0 ^ 3'b100;
        //272 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_NOSIG_COUNT_SETTING is set to %d. Legal values is 0 to 7",CP_PMA_CH0_REG_RX_SIGDET_NOSIG_COUNT_SETTING);
    }

//initial config body722 end


//initial config body723 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_CHK_WINDOW_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_CHK_WINDOW_EN_269   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_CHK_WINDOW_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_CHK_WINDOW_EN_269   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_CHK_WINDOW_EN_269  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_CHK_WINDOW_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_SIGDET_CHK_WINDOW_EN);
    }

//initial config body723 end


//initial config body724 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW >= 0 && CP_PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW <= 31)
    {
        SC_PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264   :=  to_unsigned( CP_PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW , 5) ^  5'b00011;
        //265_264 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264  :=  0 ^ 5'b00011;
        //265_264 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW is set to %d. Legal values is 0 to 31",CP_PMA_CH0_REG_RX_SIGDET_CH2_CHK_WINDOW);
    }

//initial config body724 end


//initial config body725 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_CH2_SEL == 0)
    {
        SC_PMA_CH0_REG_RX_SIGDET_CH2_SEL_263   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_CH2_SEL == 1)
    {
        SC_PMA_CH0_REG_RX_SIGDET_CH2_SEL_263   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_CH2_SEL_263  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_CH2_SEL is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_RX_SIGDET_CH2_SEL);
    }

//initial config body725 end


//initial config body726 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_PULSE_EXT == "DISABLE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_PULSE_EXT_262   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_PULSE_EXT == "ENABLE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_PULSE_EXT_262   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_PULSE_EXT_262  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_PULSE_EXT is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_RX_SIGDET_PULSE_EXT);
    }

//initial config body726 end


//initial config body727 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_GRM == 0)
    {
        SC_PMA_CH0_REG_RX_SIGDET_GRM_261_260   := 2'b00;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_GRM == 1)
    {
        SC_PMA_CH0_REG_RX_SIGDET_GRM_261_260   := 2'b01;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_GRM == 2)
    {
        SC_PMA_CH0_REG_RX_SIGDET_GRM_261_260   := 2'b10;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_GRM == 3)
    {
        SC_PMA_CH0_REG_RX_SIGDET_GRM_261_260   := 2'b11;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_GRM_261_260  :=  2'b00;
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_GRM is set to %s. Legal values is 0,1,2,3",CP_PMA_CH0_REG_RX_SIGDET_GRM);
    }

//initial config body727 end


//initial config body728 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_VTH == "12_5MV")
    {
        SC_PMA_CH0_REG_RX_SIGDET_VTH_259_256   := 4'b0000 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_VTH == "25MV")
    {
        SC_PMA_CH0_REG_RX_SIGDET_VTH_259_256   := 4'b0001 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_VTH == "37_5MV")
    {
        SC_PMA_CH0_REG_RX_SIGDET_VTH_259_256   := 4'b0010 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_VTH == "50MV")
    {
        SC_PMA_CH0_REG_RX_SIGDET_VTH_259_256   := 4'b0011 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_VTH == "62_5MV")
    {
        SC_PMA_CH0_REG_RX_SIGDET_VTH_259_256   := 4'b0100 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_VTH == "75MV")
    {
        SC_PMA_CH0_REG_RX_SIGDET_VTH_259_256   := 4'b0101 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_VTH == "87_5MV")
    {
        SC_PMA_CH0_REG_RX_SIGDET_VTH_259_256   := 4'b0110 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_VTH == "100MV")
    {
        SC_PMA_CH0_REG_RX_SIGDET_VTH_259_256   := 4'b0111 ^ 4'b0011;
        //257_256 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_VTH_259_256  :=  4'b0000 ^ 4'b0011;
        //257_256 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_VTH is set to %s. Legal values is 12_5MV,25MV,37_5MV,50MV,62_5MV,75MV,87_5MV,100MV",CP_PMA_CH0_REG_RX_SIGDET_VTH);
    }

//initial config body728 end


//initial config body729 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_STATUS == "FALSE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_STATUS_255   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_STATUS == "TRUE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_STATUS_255   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_STATUS_255  :=  1'b0;
        error("Setting Error : CP_PMA_CH0_REG_RX_SIGDET_STATUS  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_RX_SIGDET_STATUS);
    }

//initial config body729 end


//initial config body730 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_STATUS_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_STATUS_OW_254   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_STATUS_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_STATUS_OW_254   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_STATUS_OW_254  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_STATUS_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_RX_SIGDET_STATUS_OW);
    }

//initial config body730 end


//initial config body731 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_FSM_RST_N == "FALSE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_FSM_RST_N_253   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_FSM_RST_N == "TRUE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_FSM_RST_N_253   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_FSM_RST_N_253  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : CP_PMA_CH0_REG_RX_SIGDET_FSM_RST_N  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_RX_SIGDET_FSM_RST_N);
    }

//initial config body731 end


//initial config body732 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_STATUS_SEL >= 0 && CP_PMA_CH0_REG_RX_SIGDET_STATUS_SEL <= 7)
    {
        SC_PMA_CH0_REG_RX_SIGDET_STATUS_SEL_252_250   :=  to_unsigned( CP_PMA_CH0_REG_RX_SIGDET_STATUS_SEL , 3) ^  3'b101;
        //252,250 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_STATUS_SEL_252_250  :=  0 ^ 3'b101;
        //252,250 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_STATUS_SEL is set to %d. Legal values is 0 to 7",CP_PMA_CH0_REG_RX_SIGDET_STATUS_SEL);
    }

//initial config body732 end


//initial config body733 begin
    if (CP_PMA_CH0_REG_RX_SLIP_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_SLIP_EN_249  :=  1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_SLIP_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_SLIP_EN_249  :=  1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SLIP_EN_249  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_SLIP_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_SLIP_EN);
    }

//initial config body733 end


//initial config body734 begin
    if (CP_PMA_CH0_REG_RX_SLIP_SEL >= 0 && CP_PMA_CH0_REG_RX_SLIP_SEL <= 15)
    {
        SC_PMA_CH0_REG_RX_SLIP_SEL_248_245  :=  CP_PMA_CH0_REG_RX_SLIP_SEL;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SLIP_SEL_248_245  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_SLIP_SEL is set to %d. Legal values is 0 to 15",CP_PMA_CH0_REG_RX_SLIP_SEL);
    }

//initial config body734 end


//initial config body735 begin
    if (CP_PMA_CH0_REG_RX_SLIP_SEL_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_SLIP_SEL_EN_244  :=  1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_SLIP_SEL_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_SLIP_SEL_EN_244  :=  1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SLIP_SEL_EN_244  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_SLIP_SEL_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_SLIP_SEL_EN);
    }

//initial config body735 end


//initial config body736 begin
    if (CP_PMA_CH0_REG_TX_DCC_DISABLE == "DISABLE")
    {
        SC_PMA_CH0_REG_TX_DCC_DISABLE_243   := 1'b1;
    }
    else if (CP_PMA_CH0_REG_TX_DCC_DISABLE == "ENABLE")
    {
        SC_PMA_CH0_REG_TX_DCC_DISABLE_243   := 1'b0;
    }
    else
    {
        SC_PMA_CH0_REG_TX_DCC_DISABLE_243  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_DCC_DISABLE is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_TX_DCC_DISABLE);
    }

//initial config body736 end


//initial config body737 begin
    if (CP_PMA_CH0_REG_RX_DCC_DISABLE == "DISABLE")
    {
        SC_PMA_CH0_REG_RX_DCC_DISABLE_242   := 1'b1;
    }
    else if (CP_PMA_CH0_REG_RX_DCC_DISABLE == "ENABLE")
    {
        SC_PMA_CH0_REG_RX_DCC_DISABLE_242   := 1'b0;
    }
    else
    {
        SC_PMA_CH0_REG_RX_DCC_DISABLE_242  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_DCC_DISABLE is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_RX_DCC_DISABLE);
    }

//initial config body737 end


//initial config body738 begin
    if (CP_PMA_CH0_REG_RX_SATA_COMWAKE == "FALSE")
    {
        SC_PMA_CH0_REG_RX_SATA_COMWAKE_239   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_SATA_COMWAKE == "TRUE")
    {
        SC_PMA_CH0_REG_RX_SATA_COMWAKE_239   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SATA_COMWAKE_239  :=  1'b0;
        error("Setting Error : CP_PMA_CH0_REG_RX_SATA_COMWAKE  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_RX_SATA_COMWAKE);
    }

//initial config body738 end


//initial config body739 begin
    if (CP_PMA_CH0_REG_RX_SATA_COMWAKE_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_RX_SATA_COMWAKE_OW_238   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_SATA_COMWAKE_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_RX_SATA_COMWAKE_OW_238   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SATA_COMWAKE_OW_238  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_SATA_COMWAKE_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_RX_SATA_COMWAKE_OW);
    }

//initial config body739 end


//initial config body740 begin
    if (CP_PMA_CH0_REG_RX_SATA_COMINIT == "FALSE")
    {
        SC_PMA_CH0_REG_RX_SATA_COMINIT_237   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_SATA_COMINIT == "TRUE")
    {
        SC_PMA_CH0_REG_RX_SATA_COMINIT_237   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SATA_COMINIT_237  :=  1'b0;
        error("Setting Error : CP_PMA_CH0_REG_RX_SATA_COMINIT  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_RX_SATA_COMINIT);
    }

//initial config body740 end


//initial config body741 begin
    if (CP_PMA_CH0_REG_RX_SATA_COMINIT_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_RX_SATA_COMINIT_OW_236   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_SATA_COMINIT_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_RX_SATA_COMINIT_OW_236   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SATA_COMINIT_OW_236  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_SATA_COMINIT_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_RX_SATA_COMINIT_OW);
    }

//initial config body741 end


//initial config body742 begin
    if (CP_PMA_CH0_REG_RX_SYNC_RST_N == "FALSE")
    {
        SC_PMA_CH0_REG_RX_SYNC_RST_N_231   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_RX_SYNC_RST_N == "TRUE")
    {
        SC_PMA_CH0_REG_RX_SYNC_RST_N_231   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SYNC_RST_N_231  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : CP_PMA_CH0_REG_RX_SYNC_RST_N  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_RX_SYNC_RST_N);
    }

//initial config body742 end


//initial config body743 begin
    if (CP_PMA_CH0_REG_RX_SYNC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_SYNC_RST_N_EN_230   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_SYNC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_SYNC_RST_N_EN_230   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SYNC_RST_N_EN_230  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_SYNC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_SYNC_RST_N_EN);
    }

//initial config body743 end


//initial config body744 begin
    if (CP_PMA_CH0_REG_COMINIT_STATUS_CLEAR == 0)
    {
        SC_PMA_CH0_REG_COMINIT_STATUS_CLEAR_229  :=  1'b0;
    }
    else if (CP_PMA_CH0_REG_COMINIT_STATUS_CLEAR == 1)
    {
        SC_PMA_CH0_REG_COMINIT_STATUS_CLEAR_229  :=  1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_COMINIT_STATUS_CLEAR_229  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_COMINIT_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_COMINIT_STATUS_CLEAR);
    }

//initial config body744 end


//initial config body745 begin
    if (CP_PMA_CH0_REG_COMWAKE_STATUS_CLEAR == 0)
    {
        SC_PMA_CH0_REG_COMWAKE_STATUS_CLEAR_228  :=  1'b0;
    }
    else if (CP_PMA_CH0_REG_COMWAKE_STATUS_CLEAR == 1)
    {
        SC_PMA_CH0_REG_COMWAKE_STATUS_CLEAR_228  :=  1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_COMWAKE_STATUS_CLEAR_228  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_COMWAKE_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_COMWAKE_STATUS_CLEAR);
    }

//initial config body745 end


//initial config body746 begin
    if (CP_PMA_CH0_REG_RX_PIBUF_IC_TX == 0)
    {
        SC_PMA_CH0_REG_RX_PIBUF_IC_TX_227_226   := 2'b00 ^ 2'b01;
        //226 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_PIBUF_IC_TX == 1)
    {
        SC_PMA_CH0_REG_RX_PIBUF_IC_TX_227_226   := 2'b01 ^ 2'b01;
        //226 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_PIBUF_IC_TX == 2)
    {
        SC_PMA_CH0_REG_RX_PIBUF_IC_TX_227_226   := 2'b10 ^ 2'b01;
        //226 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_PIBUF_IC_TX == 3)
    {
        SC_PMA_CH0_REG_RX_PIBUF_IC_TX_227_226   := 2'b11 ^ 2'b01;
        //226 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_PIBUF_IC_TX_227_226  :=  2'b00 ^ 2'b01;
        //226 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_PIBUF_IC_TX is set to %s. Legal values is 0,1,2,3",CP_PMA_CH0_REG_RX_PIBUF_IC_TX);
    }

//initial config body746 end


//initial config body747 begin
    if (CP_PMA_CH0_REG_OOB_COMINIT_GAP_MAX >= 0 && CP_PMA_CH0_REG_OOB_COMINIT_GAP_MAX <= 255)
    {
        SC_PMA_CH0_REG_OOB_COMINIT_GAP_MAX_225_218   :=  to_unsigned( CP_PMA_CH0_REG_OOB_COMINIT_GAP_MAX , 8) ^  8'b00100011;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_OOB_COMINIT_GAP_MAX_225_218  :=  0 ^ 8'b00100011;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_OOB_COMINIT_GAP_MAX is set to %d. Legal values is 0 to 255",CP_PMA_CH0_REG_OOB_COMINIT_GAP_MAX);
    }

//initial config body747 end


//initial config body748 begin
    if (CP_PMA_CH0_REG_OOB_COMINIT_GAP_MIN >= 0 && CP_PMA_CH0_REG_OOB_COMINIT_GAP_MIN <= 255)
    {
        SC_PMA_CH0_REG_OOB_COMINIT_GAP_MIN_217_210   :=  to_unsigned( CP_PMA_CH0_REG_OOB_COMINIT_GAP_MIN , 8) ^  8'b00001111;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_OOB_COMINIT_GAP_MIN_217_210  :=  0 ^ 8'b00001111;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_OOB_COMINIT_GAP_MIN is set to %d. Legal values is 0 to 255",CP_PMA_CH0_REG_OOB_COMINIT_GAP_MIN);
    }

//initial config body748 end


//initial config body749 begin
    if (CP_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX >= 0 && CP_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX <= 63)
    {
        SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX_209_204   :=  to_unsigned( CP_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX , 6) ^  6'b001011;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX_209_204  :=  0 ^ 6'b001011;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_OOB_COMWAKE_GAP_MAX);
    }

//initial config body749 end


//initial config body750 begin
    if (CP_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN >= 0 && CP_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN <= 63)
    {
        SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN_203_198   :=  to_unsigned( CP_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN , 6) ^  6'b000011;
        //199_198 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN_203_198  :=  0 ^ 6'b000011;
        //199_198 reversed
        error("Setting Error : The CP_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_OOB_COMWAKE_GAP_MIN);
    }

//initial config body750 end


//initial config body751 begin
    if (CP_PMA_CH0_REG_PMA_TEST_SEL == 0)
    {
        SC_PMA_CH0_REG_PMA_TEST_SEL_197_195   := 3'b000;
    }
    else if (CP_PMA_CH0_REG_PMA_TEST_SEL == 1)
    {
        SC_PMA_CH0_REG_PMA_TEST_SEL_197_195   := 3'b001;
    }
    else
    {
        SC_PMA_CH0_REG_PMA_TEST_SEL_197_195  :=  3'b000;
        error("Setting Error : The CP_PMA_CH0_REG_PMA_TEST_SEL is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_PMA_TEST_SEL);
    }

//initial config body751 end


//initial config body752 begin
    if (CP_PMA_CH0_REG_CDR_STATUS_FIFO_EN == "FALSE")
    {
        SC_PMA_CH0_REG_CDR_STATUS_FIFO_EN_194   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_STATUS_FIFO_EN == "TRUE")
    {
        SC_PMA_CH0_REG_CDR_STATUS_FIFO_EN_194   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_STATUS_FIFO_EN_194  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_CDR_STATUS_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_CDR_STATUS_FIFO_EN);
    }

//initial config body752 end


//initial config body753 begin
    if (CP_PMA_CH0_REG_CDR_STATUS_RADDR_INIT >= 0 && CP_PMA_CH0_REG_CDR_STATUS_RADDR_INIT <= 7)
    {
        SC_PMA_CH0_REG_CDR_STATUS_RADDR_INIT_193_191  :=  CP_PMA_CH0_REG_CDR_STATUS_RADDR_INIT;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_STATUS_RADDR_INIT_193_191  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_CDR_STATUS_RADDR_INIT is set to %d. Legal values is 0 to 7",CP_PMA_CH0_REG_CDR_STATUS_RADDR_INIT);
    }

//initial config body753 end


//initial config body754 begin
    if (CP_PMA_CH0_REG_CDR_TURBO_MODE_EN == "FALSE")
    {
        SC_PMA_CH0_REG_CDR_TURBO_MODE_EN_189   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_TURBO_MODE_EN == "TRUE")
    {
        SC_PMA_CH0_REG_CDR_TURBO_MODE_EN_189   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_TURBO_MODE_EN_189  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_CDR_TURBO_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_CDR_TURBO_MODE_EN);
    }

//initial config body754 end


//initial config body755 begin
    if (CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_OW_188   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_OW_188   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_OW_188  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_OW);
    }

//initial config body755 end


//initial config body756 begin
    if (CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_VAL == "FALSE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_VAL_187   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_VAL == "TRUE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_VAL_187   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_VAL_187  :=  1'b0;
        error("Setting Error : CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_VAL  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_VAL);
    }

//initial config body756 end


//initial config body757 begin
    if (CP_PMA_CH0_REG_CDR_SAT_DET_TIMER == 0)
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_TIMER_186_185   := 2'b00 ^ 2'b10;
        //186 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_SAT_DET_TIMER == 1)
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_TIMER_186_185   := 2'b01 ^ 2'b10;
        //186 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_SAT_DET_TIMER == 2)
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_TIMER_186_185   := 2'b10 ^ 2'b10;
        //186 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_SAT_DET_TIMER == 3)
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_TIMER_186_185   := 2'b11 ^ 2'b10;
        //186 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_TIMER_186_185  :=  2'b00 ^ 2'b10;
        //186 reverse
        error("Setting Error : The CP_PMA_CH0_REG_CDR_SAT_DET_TIMER is set to %s. Legal values is 0,1,2,3",CP_PMA_CH0_REG_CDR_SAT_DET_TIMER);
    }

//initial config body757 end


//initial config body758 begin
    if (CP_PMA_CH0_REG_CDR_SIGDET_STATUS_DIS == "FALSE")
    {
        SC_PMA_CH0_REG_CDR_SIGDET_STATUS_DIS_184   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_SIGDET_STATUS_DIS == "TRUE")
    {
        SC_PMA_CH0_REG_CDR_SIGDET_STATUS_DIS_184   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_SIGDET_STATUS_DIS_184  :=  1'b0;
        error("Setting Error : CP_PMA_CH0_REG_CDR_SIGDET_STATUS_DIS  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_CDR_SIGDET_STATUS_DIS);
    }

//initial config body758 end


//initial config body759 begin
    if (CP_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_OW_183   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_OW_183   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_OW_183  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_OW);
    }

//initial config body759 end


//initial config body760 begin
    if (CP_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST == "FALSE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_182   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST == "TRUE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_182   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST_182  :=  1'b0;
        error("Setting Error : CP_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_CDR_SAT_DET_STICKY_RST);
    }

//initial config body760 end


//initial config body761 begin
    if (CP_PMA_CH0_REG_CDR_SAT_DET_RST_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_RST_OW_181   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_SAT_DET_RST_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_RST_OW_181   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_RST_OW_181  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_CDR_SAT_DET_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_CDR_SAT_DET_RST_OW);
    }

//initial config body761 end


//initial config body762 begin
    if (CP_PMA_CH0_REG_CDR_SAT_DET_RST == "FALSE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_RST_180   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_SAT_DET_RST == "TRUE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_RST_180   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_RST_180  :=  1'b0;
        error("Setting Error : CP_PMA_CH0_REG_CDR_SAT_DET_RST  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_CDR_SAT_DET_RST);
    }

//initial config body762 end


//initial config body763 begin
    if (CP_PMA_CH0_REG_CDR_PI_CTRL_RST_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_CDR_PI_CTRL_RST_OW_179   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_PI_CTRL_RST_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_CDR_PI_CTRL_RST_OW_179   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_PI_CTRL_RST_OW_179  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_CDR_PI_CTRL_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_CDR_PI_CTRL_RST_OW);
    }

//initial config body763 end


//initial config body764 begin
    if (CP_PMA_CH0_REG_CDR_PI_CTRL_RST == "FALSE")
    {
        SC_PMA_CH0_REG_CDR_PI_CTRL_RST_178   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_PI_CTRL_RST == "TRUE")
    {
        SC_PMA_CH0_REG_CDR_PI_CTRL_RST_178   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_PI_CTRL_RST_178  :=  1'b0;
        error("Setting Error : CP_PMA_CH0_REG_CDR_PI_CTRL_RST  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_CDR_PI_CTRL_RST);
    }

//initial config body764 end


//initial config body765 begin
    if (CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_RESET_EN == "FALSE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_RESET_EN_177   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_RESET_EN == "TRUE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_RESET_EN_177   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_RESET_EN_177  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_RESET_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_RESET_EN);
    }

//initial config body765 end


//initial config body766 begin
    if (CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_EN == "FALSE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_EN_176   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_EN == "TRUE")
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_EN_176   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_SAT_DET_STATUS_EN_176  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_CDR_SAT_DET_STATUS_EN);
    }

//initial config body766 end


//initial config body767 begin
    if (CP_PMA_CH0_REG_CDR_INT_SAT_DET_EN == "FALSE")
    {
        SC_PMA_CH0_REG_CDR_INT_SAT_DET_EN_163   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_SAT_DET_EN == "TRUE")
    {
        SC_PMA_CH0_REG_CDR_INT_SAT_DET_EN_163   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_INT_SAT_DET_EN_163  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_CDR_INT_SAT_DET_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_CDR_INT_SAT_DET_EN);
    }

//initial config body767 end


//initial config body768 begin
    if (CP_PMA_CH0_REG_CDR_LOCK_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_CDR_LOCK_OW_162   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_LOCK_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_CDR_LOCK_OW_162   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_LOCK_OW_162  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_CDR_LOCK_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_CDR_LOCK_OW);
    }

//initial config body768 end


//initial config body769 begin
    if (CP_PMA_CH0_REG_CDR_LOCK_VAL == "FALSE")
    {
        SC_PMA_CH0_REG_CDR_LOCK_VAL_161   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_LOCK_VAL == "TRUE")
    {
        SC_PMA_CH0_REG_CDR_LOCK_VAL_161   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_LOCK_VAL_161  :=  1'b0;
        error("Setting Error : CP_PMA_CH0_REG_CDR_LOCK_VAL  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_CDR_LOCK_VAL);
    }

//initial config body769 end


//initial config body770 begin
    if (CP_PMA_CH0_REG_CDR_TURBO_MODE_TIMER == 0)
    {
        SC_PMA_CH0_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b00 ^ 2'b01;
        //159 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_TURBO_MODE_TIMER == 1)
    {
        SC_PMA_CH0_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b01 ^ 2'b01;
        //159 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_TURBO_MODE_TIMER == 2)
    {
        SC_PMA_CH0_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b10 ^ 2'b01;
        //159 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_TURBO_MODE_TIMER == 3)
    {
        SC_PMA_CH0_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b11 ^ 2'b01;
        //159 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_TURBO_MODE_TIMER_160_159  :=  2'b00 ^ 2'b01;
        //159 reversed
        error("Setting Error : The CP_PMA_CH0_REG_CDR_TURBO_MODE_TIMER is set to %s. Legal values is 0,1,2,3",CP_PMA_CH0_REG_CDR_TURBO_MODE_TIMER);
    }

//initial config body770 end


//initial config body771 begin
    if (CP_PMA_CH0_REG_CDR_LOCK_TIMER == "0_8U")
    {
        SC_PMA_CH0_REG_CDR_LOCK_TIMER_158_156  :=  3'b000 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_LOCK_TIMER == "1_2U")
    {
        SC_PMA_CH0_REG_CDR_LOCK_TIMER_158_156  :=  3'b001 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_LOCK_TIMER == "1_6U")
    {
        SC_PMA_CH0_REG_CDR_LOCK_TIMER_158_156  :=  3'b010 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_LOCK_TIMER == "2_4U")
    {
        SC_PMA_CH0_REG_CDR_LOCK_TIMER_158_156  :=  3'b011 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_LOCK_TIMER == "3_2U")
    {
        SC_PMA_CH0_REG_CDR_LOCK_TIMER_158_156  :=  3'b100 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_LOCK_TIMER == "4_8U")
    {
        SC_PMA_CH0_REG_CDR_LOCK_TIMER_158_156  :=  3'b101 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_LOCK_TIMER == "12_8U")
    {
        SC_PMA_CH0_REG_CDR_LOCK_TIMER_158_156  :=  3'b110 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_LOCK_TIMER == "25_6U")
    {
        SC_PMA_CH0_REG_CDR_LOCK_TIMER_158_156  :=  3'b111 ^ 3'b001;
        //156 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_LOCK_TIMER_158_156  :=  3'b000 ^ 3'b001;
        //156 reversed
        error("Setting Error : The CP_PMA_CH0_REG_CDR_LOCK_TIMER is set to %s. Legal values is 0_8U,1_2U,1_6U,2_4U,3_2U,4_8U,12_8U,25_6U",CP_PMA_CH0_REG_CDR_LOCK_TIMER);
    }

//initial config body771 end


//initial config body772 begin
    if (CP_PMA_CH0_REG_CDR_RX_PI_FORCE_D >= 0 && CP_PMA_CH0_REG_CDR_RX_PI_FORCE_D <= 255)
    {
        SC_PMA_CH0_REG_CDR_RX_PI_FORCE_D_155_148  :=  CP_PMA_CH0_REG_CDR_RX_PI_FORCE_D;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_RX_PI_FORCE_D_155_148  :=  0;
        error("Setting Error : The CP_PMA_CH0_REG_CDR_RX_PI_FORCE_D is set to %d. Legal values is 0 to 255",CP_PMA_CH0_REG_CDR_RX_PI_FORCE_D);
    }

//initial config body772 end


//initial config body773 begin
    if (CP_PMA_CH0_REG_CDR_RX_PI_FORCE_SEL == 0)
    {
        SC_PMA_CH0_REG_CDR_RX_PI_FORCE_SEL_147   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_RX_PI_FORCE_SEL == 1)
    {
        SC_PMA_CH0_REG_CDR_RX_PI_FORCE_SEL_147   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_RX_PI_FORCE_SEL_147  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_CDR_RX_PI_FORCE_SEL is set to %s. Legal values is 0,1",CP_PMA_CH0_REG_CDR_RX_PI_FORCE_SEL);
    }

//initial config body773 end


//initial config body774 begin
    if (CP_PMA_CH0_REG_CDR_LOCK_RST_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_CDR_LOCK_RST_OW_146   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_LOCK_RST_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_CDR_LOCK_RST_OW_146   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_LOCK_RST_OW_146  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_CDR_LOCK_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_CDR_LOCK_RST_OW);
    }

//initial config body774 end


//initial config body775 begin
    if (CP_PMA_CH0_REG_CDR_LOCK_RST == "FALSE")
    {
        SC_PMA_CH0_REG_CDR_LOCK_RST_145   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_LOCK_RST == "TRUE")
    {
        SC_PMA_CH0_REG_CDR_LOCK_RST_145   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_LOCK_RST_145  :=  1'b0;
        error("Setting Error : CP_PMA_CH0_REG_CDR_LOCK_RST is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_CDR_LOCK_RST);
    }

//initial config body775 end


//initial config body776 begin
    if (CP_PMA_CH0_REG_CDR_PROP_RST_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_CDR_PROP_RST_OW_144   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_RST_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_CDR_PROP_RST_OW_144   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_PROP_RST_OW_144  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_CDR_PROP_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_CDR_PROP_RST_OW);
    }

//initial config body776 end


//initial config body777 begin
    if (CP_PMA_CH0_REG_CDR_PROP_RST == "FALSE")
    {
        SC_PMA_CH0_REG_CDR_PROP_RST_143   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_RST == "TRUE")
    {
        SC_PMA_CH0_REG_CDR_PROP_RST_143   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_PROP_RST_143  :=  1'b0;
        error("Setting Error : CP_PMA_CH0_REG_CDR_PROP_RST is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_CDR_PROP_RST);
    }

//initial config body777 end


//initial config body778 begin
    if (CP_PMA_CH0_REG_CDR_INT_RST_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_CDR_INT_RST_OW_142   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_RST_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_CDR_INT_RST_OW_142   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_INT_RST_OW_142  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_CDR_INT_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_CDR_INT_RST_OW);
    }

//initial config body778 end


//initial config body779 begin
    if (CP_PMA_CH0_REG_CDR_INT_RST == "FALSE")
    {
        SC_PMA_CH0_REG_CDR_INT_RST_141   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_RST == "TRUE")
    {
        SC_PMA_CH0_REG_CDR_INT_RST_141   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_INT_RST_141  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_CDR_INT_RST is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_CDR_INT_RST);
    }

//initial config body779 end


//initial config body780 begin
    if (CP_PMA_CH0_REG_CDR_INT_SAT_MIN >= 0 && CP_PMA_CH0_REG_CDR_INT_SAT_MIN <= 1023)
    {
        SC_PMA_CH0_REG_CDR_INT_SAT_MIN_140_131   :=  to_unsigned( CP_PMA_CH0_REG_CDR_INT_SAT_MIN , 10) ^  10'b0000100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_INT_SAT_MIN_140_131  :=  0 ^ 10'b0000100000;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_CDR_INT_SAT_MIN is set to %d. Legal values is 0 to 1023",CP_PMA_CH0_REG_CDR_INT_SAT_MIN);
    }

//initial config body780 end


//initial config body781 begin
    if (CP_PMA_CH0_REG_CDR_INT_SAT_MAX >= 0 && CP_PMA_CH0_REG_CDR_INT_SAT_MAX <= 1023)
    {
        SC_PMA_CH0_REG_CDR_INT_SAT_MAX_130_121   :=  to_unsigned( CP_PMA_CH0_REG_CDR_INT_SAT_MAX , 10) ^  10'b1111100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_INT_SAT_MAX_130_121  :=  0 ^ 10'b1111100000;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_CDR_INT_SAT_MAX is set to %d. Legal values is 0 to 1023",CP_PMA_CH0_REG_CDR_INT_SAT_MAX);
    }

//initial config body781 end


//initial config body782 begin
    if (CP_PMA_CH0_REG_CDR_INT_TURBO_GAIN == 0)
    {
        SC_PMA_CH0_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b000 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_TURBO_GAIN == 1)
    {
        SC_PMA_CH0_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b001 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_TURBO_GAIN == 2)
    {
        SC_PMA_CH0_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b010 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_TURBO_GAIN == 3)
    {
        SC_PMA_CH0_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b011 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_TURBO_GAIN == 4)
    {
        SC_PMA_CH0_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b100 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_TURBO_GAIN == 5)
    {
        SC_PMA_CH0_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b101 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_TURBO_GAIN == 6)
    {
        SC_PMA_CH0_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b110 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_TURBO_GAIN == 7)
    {
        SC_PMA_CH0_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b111 ^ 3'b110;
        //120_119 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_INT_TURBO_GAIN_120_118  :=  3'b000 ^ 3'b110;
        //120_119 reversed
        error("Setting Error : The CP_PMA_CH0_REG_CDR_INT_TURBO_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH0_REG_CDR_INT_TURBO_GAIN);
    }

//initial config body782 end


//initial config body783 begin
    if (CP_PMA_CH0_REG_CDR_INT_GAIN == 0)
    {
        SC_PMA_CH0_REG_CDR_INT_GAIN_117_115   := 3'b000 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_GAIN == 1)
    {
        SC_PMA_CH0_REG_CDR_INT_GAIN_117_115   := 3'b001 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_GAIN == 2)
    {
        SC_PMA_CH0_REG_CDR_INT_GAIN_117_115   := 3'b010 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_GAIN == 3)
    {
        SC_PMA_CH0_REG_CDR_INT_GAIN_117_115   := 3'b011 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_GAIN == 4)
    {
        SC_PMA_CH0_REG_CDR_INT_GAIN_117_115   := 3'b100 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_GAIN == 5)
    {
        SC_PMA_CH0_REG_CDR_INT_GAIN_117_115   := 3'b101 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_GAIN == 6)
    {
        SC_PMA_CH0_REG_CDR_INT_GAIN_117_115   := 3'b110 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_INT_GAIN == 7)
    {
        SC_PMA_CH0_REG_CDR_INT_GAIN_117_115   := 3'b111 ^ 3'b101;
        //117_115 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_INT_GAIN_117_115  :=  3'b000 ^ 3'b101;
        //117_115 reversed
        error("Setting Error : The CP_PMA_CH0_REG_CDR_INT_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH0_REG_CDR_INT_GAIN);
    }

//initial config body783 end


//initial config body784 begin
    if (CP_PMA_CH0_REG_CDR_PROP_TURBO_GAIN == 0)
    {
        SC_PMA_CH0_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b000 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_TURBO_GAIN == 1)
    {
        SC_PMA_CH0_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b001 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_TURBO_GAIN == 2)
    {
        SC_PMA_CH0_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b010 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_TURBO_GAIN == 3)
    {
        SC_PMA_CH0_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b011 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_TURBO_GAIN == 4)
    {
        SC_PMA_CH0_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b100 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_TURBO_GAIN == 5)
    {
        SC_PMA_CH0_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b101 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_TURBO_GAIN == 6)
    {
        SC_PMA_CH0_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b110 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_TURBO_GAIN == 7)
    {
        SC_PMA_CH0_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b111 ^ 3'b110;
        //114_113 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_PROP_TURBO_GAIN_114_112  :=  3'b000 ^ 3'b110;
        //114_113 reversed
        error("Setting Error : The CP_PMA_CH0_REG_CDR_PROP_TURBO_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH0_REG_CDR_PROP_TURBO_GAIN);
    }

//initial config body784 end


//initial config body785 begin
    if (CP_PMA_CH0_REG_CDR_PROP_GAIN == 0)
    {
        SC_PMA_CH0_REG_CDR_PROP_GAIN_111_109   := 3'b000 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_GAIN == 1)
    {
        SC_PMA_CH0_REG_CDR_PROP_GAIN_111_109   := 3'b001 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_GAIN == 2)
    {
        SC_PMA_CH0_REG_CDR_PROP_GAIN_111_109   := 3'b010 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_GAIN == 3)
    {
        SC_PMA_CH0_REG_CDR_PROP_GAIN_111_109   := 3'b011 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_GAIN == 4)
    {
        SC_PMA_CH0_REG_CDR_PROP_GAIN_111_109   := 3'b100 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_GAIN == 5)
    {
        SC_PMA_CH0_REG_CDR_PROP_GAIN_111_109   := 3'b101 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_GAIN == 6)
    {
        SC_PMA_CH0_REG_CDR_PROP_GAIN_111_109   := 3'b110 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH0_REG_CDR_PROP_GAIN == 7)
    {
        SC_PMA_CH0_REG_CDR_PROP_GAIN_111_109   := 3'b111 ^ 3'b101;
        //111_109 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_CDR_PROP_GAIN_111_109  :=  3'b000 ^ 3'b101;
        //111_109 reversed
        error("Setting Error : The CP_PMA_CH0_REG_CDR_PROP_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH0_REG_CDR_PROP_GAIN);
    }

//initial config body785 end


//initial config body786 begin
    if (CP_PMA_CH0_REG_CHK_COUNTER_EN == "FALSE")
    {
        SC_PMA_CH0_REG_CHK_COUNTER_EN_108   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_CHK_COUNTER_EN == "TRUE")
    {
        SC_PMA_CH0_REG_CHK_COUNTER_EN_108   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_CHK_COUNTER_EN_108  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_CHK_COUNTER_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_CHK_COUNTER_EN);
    }

//initial config body786 end


//initial config body787 begin
    if (CP_PMA_CH0_REG_LOAD_ERR_CNT == "DISABLE")
    {
        SC_PMA_CH0_REG_LOAD_ERR_CNT_107   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_LOAD_ERR_CNT == "ENABLE")
    {
        SC_PMA_CH0_REG_LOAD_ERR_CNT_107   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_LOAD_ERR_CNT_107  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_LOAD_ERR_CNT is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_LOAD_ERR_CNT);
    }

//initial config body787 end


//initial config body788 begin
    if (CP_PMA_CH0_REG_BIST_CHK_PAT_SEL == "PRBS")
    {
        SC_PMA_CH0_REG_BIST_CHK_PAT_SEL_106   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_BIST_CHK_PAT_SEL == "CONSTANT")
    {
        SC_PMA_CH0_REG_BIST_CHK_PAT_SEL_106   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_BIST_CHK_PAT_SEL_106  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_BIST_CHK_PAT_SEL is set to %s. Legal values is PRBS,CONSTANT",CP_PMA_CH0_REG_BIST_CHK_PAT_SEL);
    }

//initial config body788 end


//initial config body789 begin
    if (CP_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b00 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b01 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b10 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b11 ^ 2'b11;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL_105_104  :=  2'b00 ^ 2'b11;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH0_REG_PRBS_CHK_WIDTH_SEL);
    }

//initial config body789 end


//initial config body790 begin
    if (CP_PMA_CH0_REG_PRBS_CHK_EN == "FALSE")
    {
        SC_PMA_CH0_REG_PRBS_CHK_EN_103   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_PRBS_CHK_EN == "TRUE")
    {
        SC_PMA_CH0_REG_PRBS_CHK_EN_103   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_PRBS_CHK_EN_103  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_PRBS_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_PRBS_CHK_EN);
    }

//initial config body790 end


//initial config body791 begin
    if (CP_PMA_CH0_REG_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH0_REG_PRBS_SEL_102_101   := 2'b00;
    }
    else if (CP_PMA_CH0_REG_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH0_REG_PRBS_SEL_102_101   := 2'b01;
    }
    else if (CP_PMA_CH0_REG_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH0_REG_PRBS_SEL_102_101   := 2'b10;
    }
    else if (CP_PMA_CH0_REG_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH0_REG_PRBS_SEL_102_101   := 2'b11;
    }
    else
    {
        SC_PMA_CH0_REG_PRBS_SEL_102_101  :=  2'b00;
        error("Setting Error : The CP_PMA_CH0_REG_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_PMA_CH0_REG_PRBS_SEL);
    }

//initial config body791 end


//initial config body792 begin
    if (CP_PMA_CH0_REG_UDP_CHK_EN == "FALSE")
    {
        SC_PMA_CH0_REG_UDP_CHK_EN_100   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_UDP_CHK_EN == "TRUE")
    {
        SC_PMA_CH0_REG_UDP_CHK_EN_100   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_UDP_CHK_EN_100  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_UDP_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_UDP_CHK_EN);
    }

//initial config body792 end


//initial config body793 begin
    if (CP_PMA_CH0_REG_RX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH0_REG_RX_ERR_INSERT_99   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH0_REG_RX_ERR_INSERT_99   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_ERR_INSERT_99  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_ERR_INSERT is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_RX_ERR_INSERT);
    }

//initial config body793 end


//initial config body794 begin
    if (CP_PMA_CH0_REG_RX_DATA_POLARITY == "NORMAL")
    {
        SC_PMA_CH0_REG_RX_DATA_POLARITY_98   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_DATA_POLARITY == "REVERSE")
    {
        SC_PMA_CH0_REG_RX_DATA_POLARITY_98   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_DATA_POLARITY_98  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_DATA_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_PMA_CH0_REG_RX_DATA_POLARITY);
    }

//initial config body794 end


//initial config body795 begin
    if (CP_PMA_CH0_REG_TXCLK_SEL == "PLL")
    {
        SC_PMA_CH0_REG_TXCLK_SEL_97   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TXCLK_SEL == "RXCLK")
    {
        SC_PMA_CH0_REG_TXCLK_SEL_97   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TXCLK_SEL_97  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TXCLK_SEL is set to %s. Legal values is PLL,RXCLK",CP_PMA_CH0_REG_TXCLK_SEL);
    }

//initial config body795 end


//initial config body796 begin
    if (CP_PMA_CH0_REG_RX_TX2RX_PLPBK_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_TX2RX_PLPBK_EN_96   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_TX2RX_PLPBK_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_TX2RX_PLPBK_EN_96   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_TX2RX_PLPBK_EN_96  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_TX2RX_PLPBK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_TX2RX_PLPBK_EN);
    }

//initial config body796 end


//initial config body797 begin
    if (CP_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_EN_95   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_EN_95   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_EN_95  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_EN);
    }

//initial config body797 end


//initial config body798 begin
    if (CP_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N == "FALSE")
    {
        SC_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_94   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N == "TRUE")
    {
        SC_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_94   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N_94  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH0_REG_RX_TX2RX_PLPBK_RST_N);
    }

//initial config body798 end


//initial config body799 begin
    if (CP_PMA_CH0_REG_TX_RATE_EN == "FALSE")
    {
        SC_PMA_CH0_REG_TX_RATE_EN_93   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_TX_RATE_EN == "TRUE")
    {
        SC_PMA_CH0_REG_TX_RATE_EN_93   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_TX_RATE_EN_93  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_TX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_TX_RATE_EN);
    }

//initial config body799 end


//initial config body800 begin
    if (CP_PMA_CH0_REG_TX_RATE == "DIV8")
    {
        SC_PMA_CH0_REG_TX_RATE_92_90   := 3'd0 ^ 3'b011;
        //91_90 reversed;
    }
    else if (CP_PMA_CH0_REG_TX_RATE == "DIV4")
    {
        SC_PMA_CH0_REG_TX_RATE_92_90   := 3'd1 ^ 3'b011;
        //91_90 reversed;
    }
    else if (CP_PMA_CH0_REG_TX_RATE == "DIV2")
    {
        SC_PMA_CH0_REG_TX_RATE_92_90   := 3'd2 ^ 3'b011;
        //91_90 reversed;
    }
    else if (CP_PMA_CH0_REG_TX_RATE == "DIV1")
    {
        SC_PMA_CH0_REG_TX_RATE_92_90   := 3'd3 ^ 3'b011;
        //91_90 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_TX_RATE_92_90  :=  3'd0 ^ 3'b011;
        //91_90 reversed
        error("Setting Error : The CP_PMA_CH0_REG_TX_RATE is set to %s. Legal values is DIV8,DIV4,DIV2,DIV1",CP_PMA_CH0_REG_TX_RATE);
    }

//initial config body800 end


//initial config body801 begin
    if (CP_PMA_CH0_REG_RX_ICTRL_PREDRV == "87_5PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PREDRV_89_88   := 2'b00 ^ 2'b01;
        //88 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_PREDRV == "100PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PREDRV_89_88   := 2'b01 ^ 2'b01;
        //88 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_PREDRV == "112_5PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PREDRV_89_88   := 2'b10 ^ 2'b01;
        //88 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_PREDRV == "125PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PREDRV_89_88   := 2'b11 ^ 2'b01;
        //88 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_ICTRL_PREDRV_89_88  :=  2'b00 ^ 2'b01;
        //88 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_ICTRL_PREDRV is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH0_REG_RX_ICTRL_PREDRV);
    }

//initial config body801 end


//initial config body802 begin
    if (CP_PMA_CH0_REG_RX_ICTRL_DCC == "87_5PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_DCC_87_86   := 2'b00 ^ 2'b01;
        //86 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_DCC == "100PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_DCC_87_86   := 2'b01 ^ 2'b01;
        //86 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_DCC == "112_5PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_DCC_87_86   := 2'b10 ^ 2'b01;
        //86 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_DCC == "125PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_DCC_87_86   := 2'b11 ^ 2'b01;
        //86 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_ICTRL_DCC_87_86  :=  2'b00 ^ 2'b01;
        //86 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_ICTRL_DCC is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH0_REG_RX_ICTRL_DCC);
    }

//initial config body802 end


//initial config body803 begin
    if (CP_PMA_CH0_REG_RX_ICTRL_PI == "87_5PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PI_85_84   := 2'b00 ^ 2'b01;
        //84 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_PI == "100PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PI_85_84   := 2'b01 ^ 2'b01;
        //84 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_PI == "112_5PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PI_85_84   := 2'b10 ^ 2'b01;
        //84 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_PI == "125PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PI_85_84   := 2'b11 ^ 2'b01;
        //84 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_ICTRL_PI_85_84  :=  2'b00 ^ 2'b01;
        //84 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_ICTRL_PI is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH0_REG_RX_ICTRL_PI);
    }

//initial config body803 end


//initial config body804 begin
    if (CP_PMA_CH0_REG_RX_ICTRL_PIBUF == "87_5PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PIBUF_83_82   := 2'b00 ^ 2'b01;
        //82 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_PIBUF == "100PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PIBUF_83_82   := 2'b01 ^ 2'b01;
        //82 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_PIBUF == "112_5PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PIBUF_83_82   := 2'b10 ^ 2'b01;
        //82 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_PIBUF == "125PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PIBUF_83_82   := 2'b11 ^ 2'b01;
        //82 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_ICTRL_PIBUF_83_82  :=  2'b00 ^ 2'b01;
        //82 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_ICTRL_PIBUF is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH0_REG_RX_ICTRL_PIBUF);
    }

//initial config body804 end


//initial config body805 begin
    if (CP_PMA_CH0_REG_RX_ICTRL_SLICER == "87_5PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_SLICER_81_80   := 2'b00 ^ 2'b01;
        //80 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_SLICER == "100PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_SLICER_81_80   := 2'b01 ^ 2'b01;
        //80 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_SLICER == "112_5PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_SLICER_81_80   := 2'b10 ^ 2'b01;
        //80 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_SLICER == "125PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_SLICER_81_80   := 2'b11 ^ 2'b01;
        //80 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_ICTRL_SLICER_81_80  :=  2'b00 ^ 2'b01;
        //80 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_ICTRL_SLICER is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH0_REG_RX_ICTRL_SLICER);
    }

//initial config body805 end


//initial config body806 begin
    if (CP_PMA_CH0_REG_RX_ICTRL_PREAMP == "87_5PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PREAMP_79_78   := 2'b00 ^ 2'b01;
        //78 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_PREAMP == "100PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PREAMP_79_78   := 2'b01 ^ 2'b01;
        //78 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_PREAMP == "112_5PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PREAMP_79_78   := 2'b10 ^ 2'b01;
        //78 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_PREAMP == "125PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_PREAMP_79_78   := 2'b11 ^ 2'b01;
        //78 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_ICTRL_PREAMP_79_78  :=  2'b00 ^ 2'b01;
        //78 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_ICTRL_PREAMP is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH0_REG_RX_ICTRL_PREAMP);
    }

//initial config body806 end


//initial config body807 begin
    if (CP_PMA_CH0_REG_RX_ICTRL_TRX == "87_5PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_TRX_75_74   := 2'b00 ^ 2'b01;
        //74 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_TRX == "100PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_TRX_75_74   := 2'b01 ^ 2'b01;
        //74 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_TRX == "112_5PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_TRX_75_74   := 2'b10 ^ 2'b01;
        //74 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_ICTRL_TRX == "125PCT")
    {
        SC_PMA_CH0_REG_RX_ICTRL_TRX_75_74   := 2'b11 ^ 2'b01;
        //74 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_ICTRL_TRX_75_74  :=  2'b00 ^ 2'b01;
        //74 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_ICTRL_TRX is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH0_REG_RX_ICTRL_TRX);
    }

//initial config body807 end


//initial config body808 begin
    if (CP_PMA_CH0_REG_RX_DCC_IC_TX >= 0 && CP_PMA_CH0_REG_RX_DCC_IC_TX <= 3)
    {
        SC_PMA_CH0_REG_RX_DCC_IC_TX_73_72   :=  to_unsigned( CP_PMA_CH0_REG_RX_DCC_IC_TX , 2) ^  2'b11;
        //73_72 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_DCC_IC_TX_73_72  :=  0 ^ 2'b11;
        //73_72 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_DCC_IC_TX is set to %d. Legal values is 0 to 3",CP_PMA_CH0_REG_RX_DCC_IC_TX);
    }

//initial config body808 end


//initial config body809 begin
    if (CP_PMA_CH0_REG_RX_DCC_IC_RX >= 0 && CP_PMA_CH0_REG_RX_DCC_IC_RX <= 3)
    {
        SC_PMA_CH0_REG_RX_DCC_IC_RX_71_70   :=  to_unsigned( CP_PMA_CH0_REG_RX_DCC_IC_RX , 2) ^  2'b11;
        //71_70 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_DCC_IC_RX_71_70  :=  0 ^ 2'b11;
        //71_70 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_DCC_IC_RX is set to %d. Legal values is 0 to 3",CP_PMA_CH0_REG_RX_DCC_IC_RX);
    }

//initial config body809 end


//initial config body810 begin
    if (CP_PMA_CH0_REG_RX_PIBUF_IC >= 0 && CP_PMA_CH0_REG_RX_PIBUF_IC <= 3)
    {
        SC_PMA_CH0_REG_RX_PIBUF_IC_68_67   :=  to_unsigned( CP_PMA_CH0_REG_RX_PIBUF_IC , 2) ^  2'b10;
        //68 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_PIBUF_IC_68_67  :=  0 ^ 2'b10;
        //68 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_PIBUF_IC is set to %d. Legal values is 0 to 3",CP_PMA_CH0_REG_RX_PIBUF_IC);
    }

//initial config body810 end


//initial config body811 begin
    if (CP_PMA_CH0_REG_RX_PCLK_EDGE_SEL == "POS_EDGE")
    {
        SC_PMA_CH0_REG_RX_PCLK_EDGE_SEL_66   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_PCLK_EDGE_SEL == "NEG_EDGE")
    {
        SC_PMA_CH0_REG_RX_PCLK_EDGE_SEL_66   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_PCLK_EDGE_SEL_66  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_PCLK_EDGE_SEL is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_PMA_CH0_REG_RX_PCLK_EDGE_SEL);
    }

//initial config body811 end


//initial config body812 begin
    if (CP_PMA_CH0_REG_RX_PREAMP_IC >= 0 && CP_PMA_CH0_REG_RX_PREAMP_IC <= 4095)
    {
        SC_PMA_CH0_REG_RX_PREAMP_IC_65_54   :=  to_unsigned( CP_PMA_CH0_REG_RX_PREAMP_IC , 12) ^  12'b010101010111;
        // reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_PREAMP_IC_65_54  :=  0 ^ 12'b010101010111;
        // reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_PREAMP_IC is set to %d. Legal values is 0 to 4095",CP_PMA_CH0_REG_RX_PREAMP_IC);
    }

//initial config body812 end


//initial config body813 begin
    if (CP_PMA_CH0_REG_RX_EQ_OFF == "FALSE")
    {
        SC_PMA_CH0_REG_RX_EQ_OFF_53   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_EQ_OFF == "TRUE")
    {
        SC_PMA_CH0_REG_RX_EQ_OFF_53   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_EQ_OFF_53  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_EQ_OFF is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_EQ_OFF);
    }

//initial config body813 end


//initial config body814 begin
    if (CP_PMA_CH0_REG_RX_ICTRL_SIGDET >= 0 && CP_PMA_CH0_REG_RX_ICTRL_SIGDET <= 15)
    {
        SC_PMA_CH0_REG_RX_ICTRL_SIGDET_52_49   :=  to_unsigned( CP_PMA_CH0_REG_RX_ICTRL_SIGDET , 4) ^  4'b0101;
        //51,49 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_ICTRL_SIGDET_52_49  :=  0 ^ 4'b0101;
        //51,49 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_ICTRL_SIGDET is set to %d. Legal values is 0 to 15",CP_PMA_CH0_REG_RX_ICTRL_SIGDET);
    }

//initial config body814 end


//initial config body815 begin
    if (CP_PMA_CH0_REG_RX_RES_TRIM_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_RES_TRIM_EN_44   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_RES_TRIM_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_RES_TRIM_EN_44   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_RES_TRIM_EN_44  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_RES_TRIM_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_RES_TRIM_EN);
    }

//initial config body815 end


//initial config body816 begin
    if (CP_PMA_CH0_REG_RX_RES_TRIM >= 0 && CP_PMA_CH0_REG_RX_RES_TRIM <= 63)
    {
        SC_PMA_CH0_REG_RX_RES_TRIM_43_38   :=  to_unsigned( CP_PMA_CH0_REG_RX_RES_TRIM , 6) ^  6'b110011;
        //43_42,39_38 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_RES_TRIM_43_38  :=  0 ^ 6'b110011;
        //43_42,39_38 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_RES_TRIM is set to %d. Legal values is 0 to 63",CP_PMA_CH0_REG_RX_RES_TRIM);
    }

//initial config body816 end


//initial config body817 begin
    if (CP_PMA_CH0_REG_RX_RATE_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_RATE_EN_37   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_RATE_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_RATE_EN_37   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_RATE_EN_37  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_RATE_EN);
    }

//initial config body817 end


//initial config body818 begin
    if (CP_PMA_CH0_REG_RX_RATE == "DIV8")
    {
        SC_PMA_CH0_REG_RX_RATE_36_34   := 3'd0 ^ 3'b011;
        //35_34 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_RATE == "DIV4")
    {
        SC_PMA_CH0_REG_RX_RATE_36_34   := 3'd1 ^ 3'b011;
        //35_34 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_RATE == "DIV2")
    {
        SC_PMA_CH0_REG_RX_RATE_36_34   := 3'd2 ^ 3'b011;
        //35_34 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_RATE == "DIV1")
    {
        SC_PMA_CH0_REG_RX_RATE_36_34   := 3'd3 ^ 3'b011;
        //35_34 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_RATE_36_34  :=  3'd0 ^ 3'b011;
        //35_34 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_RATE is set to %s. Legal values is DIV8,DIV4,DIV2,DIV1",CP_PMA_CH0_REG_RX_RATE);
    }

//initial config body818 end


//initial config body819 begin
    if (CP_PMA_CH0_REG_RX_BUSWIDTH_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_BUSWIDTH_EN_33   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_BUSWIDTH_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_BUSWIDTH_EN_33   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_BUSWIDTH_EN_33  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_BUSWIDTH_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_BUSWIDTH_EN);
    }

//initial config body819 end


//initial config body820 begin
    if (CP_PMA_CH0_REG_RX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH0_REG_RX_BUSWIDTH_32_30   := 3'd0 ^ 3'b011;
        //31_30 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH0_REG_RX_BUSWIDTH_32_30   := 3'd1 ^ 3'b011;
        //31_30 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH0_REG_RX_BUSWIDTH_32_30   := 3'd2 ^ 3'b011;
        //31_30 reversed;
    }
    else if (CP_PMA_CH0_REG_RX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH0_REG_RX_BUSWIDTH_32_30   := 3'd3 ^ 3'b011;
        //31_30 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_BUSWIDTH_32_30  :=  3'd0 ^ 3'b011;
        //31_30 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH0_REG_RX_BUSWIDTH);
    }

//initial config body820 end


//initial config body821 begin
    if (CP_PMA_CH0_REG_RX_EQ_R_SET >= 0 && CP_PMA_CH0_REG_RX_EQ_R_SET <= 15)
    {
        SC_PMA_CH0_REG_RX_EQ_R_SET_29_26   :=  to_unsigned( CP_PMA_CH0_REG_RX_EQ_R_SET , 4) ^  4'b1000;
        //29 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_EQ_R_SET_29_26  :=  0 ^ 4'b1000;
        //29 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_EQ_R_SET is set to %d. Legal values is 0 to 15",CP_PMA_CH0_REG_RX_EQ_R_SET);
    }

//initial config body821 end


//initial config body822 begin
    if (CP_PMA_CH0_REG_RX_EQ_C_SET >= 0 && CP_PMA_CH0_REG_RX_EQ_C_SET <= 15)
    {
        SC_PMA_CH0_REG_RX_EQ_C_SET_25_22   :=  to_unsigned( CP_PMA_CH0_REG_RX_EQ_C_SET , 4) ^  4'b1000;
        //25 reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_EQ_C_SET_25_22  :=  0 ^ 4'b1000;
        //25 reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_EQ_C_SET is set to %d. Legal values is 0 to 15",CP_PMA_CH0_REG_RX_EQ_C_SET);
    }

//initial config body822 end


//initial config body823 begin
    if (CP_PMA_CH0_REG_RX_HIGHZ_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_HIGHZ_EN_21   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_HIGHZ_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_HIGHZ_EN_21   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_HIGHZ_EN_21  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_HIGHZ_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_HIGHZ_EN);
    }

//initial config body823 end


//initial config body824 begin
    if (CP_PMA_CH0_REG_RX_HIGHZ == "FALSE")
    {
        SC_PMA_CH0_REG_RX_HIGHZ_20   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_HIGHZ == "TRUE")
    {
        SC_PMA_CH0_REG_RX_HIGHZ_20   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_HIGHZ_20  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_HIGHZ is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_HIGHZ);
    }

//initial config body824 end


//initial config body825 begin
    if (CP_PMA_CH0_REG_RX_PCLKSWITCH_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_PCLKSWITCH_EN_19   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_PCLKSWITCH_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_PCLKSWITCH_EN_19   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_PCLKSWITCH_EN_19  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_PCLKSWITCH_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_PCLKSWITCH_EN);
    }

//initial config body825 end


//initial config body826 begin
    if (CP_PMA_CH0_REG_RX_PCLKSWITCH == "FALSE")
    {
        SC_PMA_CH0_REG_RX_PCLKSWITCH_18   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_PCLKSWITCH == "TRUE")
    {
        SC_PMA_CH0_REG_RX_PCLKSWITCH_18   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_PCLKSWITCH_18  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_PCLKSWITCH is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_PCLKSWITCH);
    }

//initial config body826 end


//initial config body827 begin
    if (CP_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_EN_17   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_EN_17   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_EN_17  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_EN);
    }

//initial config body827 end


//initial config body828 begin
    if (CP_PMA_CH0_REG_RX_PCLKSWITCH_RST_N == "FALSE")
    {
        SC_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_16   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_RX_PCLKSWITCH_RST_N == "TRUE")
    {
        SC_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_16   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_PCLKSWITCH_RST_N_16  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_PCLKSWITCH_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_PCLKSWITCH_RST_N);
    }

//initial config body828 end


//initial config body829 begin
    if (CP_PMA_CH0_REG_RXPCLK_SLIP_OW == "DISABLE")
    {
        SC_PMA_CH0_REG_RXPCLK_SLIP_OW_15   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RXPCLK_SLIP_OW == "ENABLE")
    {
        SC_PMA_CH0_REG_RXPCLK_SLIP_OW_15   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RXPCLK_SLIP_OW_15  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RXPCLK_SLIP_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH0_REG_RXPCLK_SLIP_OW);
    }

//initial config body829 end


//initial config body830 begin
    if (CP_PMA_CH0_REG_RXPCLK_SLIP == "FALSE")
    {
        SC_PMA_CH0_REG_RXPCLK_SLIP_14   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RXPCLK_SLIP == "TRUE")
    {
        SC_PMA_CH0_REG_RXPCLK_SLIP_14   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RXPCLK_SLIP_14  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RXPCLK_SLIP is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RXPCLK_SLIP);
    }

//initial config body830 end


//initial config body831 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_RST_N_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_RST_N_EN_13   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_RST_N_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_RST_N_EN_13   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_RST_N_EN_13  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_SIGDET_RST_N_EN);
    }

//initial config body831 end


//initial config body832 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_RST_N == "FALSE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_RST_N_12   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_RST_N == "TRUE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_RST_N_12   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_RST_N_12  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_SIGDET_RST_N);
    }

//initial config body832 end


//initial config body833 begin
    if (CP_PMA_CH0_REG_RX_CDR_RST_N_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_CDR_RST_N_EN_11   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_CDR_RST_N_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_CDR_RST_N_EN_11   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_CDR_RST_N_EN_11  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_CDR_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_CDR_RST_N_EN);
    }

//initial config body833 end


//initial config body834 begin
    if (CP_PMA_CH0_REG_RX_CDR_RST_N == "FALSE")
    {
        SC_PMA_CH0_REG_RX_CDR_RST_N_10   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_RX_CDR_RST_N == "TRUE")
    {
        SC_PMA_CH0_REG_RX_CDR_RST_N_10   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_CDR_RST_N_10  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_CDR_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_CDR_RST_N);
    }

//initial config body834 end


//initial config body835 begin
    if (CP_PMA_CH0_REG_RX_DCC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_DCC_RST_N_EN_9   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_DCC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_DCC_RST_N_EN_9   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_DCC_RST_N_EN_9  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_DCC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_DCC_RST_N_EN);
    }

//initial config body835 end


//initial config body836 begin
    if (CP_PMA_CH0_REG_RX_DCC_RST_N == "FALSE")
    {
        SC_PMA_CH0_REG_RX_DCC_RST_N_8   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH0_REG_RX_DCC_RST_N == "TRUE")
    {
        SC_PMA_CH0_REG_RX_DCC_RST_N_8   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH0_REG_RX_DCC_RST_N_8  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH0_REG_RX_DCC_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_DCC_RST_N);
    }

//initial config body836 end


//initial config body837 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_PD_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_PD_EN_7   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_PD_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_SIGDET_PD_EN_7   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_PD_EN_7  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_SIGDET_PD_EN);
    }

//initial config body837 end


//initial config body838 begin
    if (CP_PMA_CH0_REG_RX_SIGDET_PD == "ON")
    {
        SC_PMA_CH0_REG_RX_SIGDET_PD_6   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_SIGDET_PD == "OFF")
    {
        SC_PMA_CH0_REG_RX_SIGDET_PD_6   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_SIGDET_PD_6  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_SIGDET_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH0_REG_RX_SIGDET_PD);
    }

//initial config body838 end


//initial config body839 begin
    if (CP_PMA_CH0_REG_RX_DATAPATH_PD_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_DATAPATH_PD_EN_5   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_DATAPATH_PD_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_DATAPATH_PD_EN_5   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_DATAPATH_PD_EN_5  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_DATAPATH_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_DATAPATH_PD_EN);
    }

//initial config body839 end


//initial config body840 begin
    if (CP_PMA_CH0_REG_RX_DATAPATH_PD == "ON")
    {
        SC_PMA_CH0_REG_RX_DATAPATH_PD_4   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_DATAPATH_PD == "OFF")
    {
        SC_PMA_CH0_REG_RX_DATAPATH_PD_4   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_DATAPATH_PD_4  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_DATAPATH_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH0_REG_RX_DATAPATH_PD);
    }

//initial config body840 end


//initial config body841 begin
    if (CP_PMA_CH0_REG_RX_CLKPATH_PD_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_CLKPATH_PD_EN_3   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_CLKPATH_PD_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_CLKPATH_PD_EN_3   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_CLKPATH_PD_EN_3  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_CLKPATH_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_CLKPATH_PD_EN);
    }

//initial config body841 end


//initial config body842 begin
    if (CP_PMA_CH0_REG_RX_CLKPATH_PD == "ON")
    {
        SC_PMA_CH0_REG_RX_CLKPATH_PD_2   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_CLKPATH_PD == "OFF")
    {
        SC_PMA_CH0_REG_RX_CLKPATH_PD_2   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_CLKPATH_PD_2  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_CLKPATH_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH0_REG_RX_CLKPATH_PD);
    }

//initial config body842 end


//initial config body843 begin
    if (CP_PMA_CH0_REG_RX_PD_EN == "FALSE")
    {
        SC_PMA_CH0_REG_RX_PD_EN_1   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_PD_EN == "TRUE")
    {
        SC_PMA_CH0_REG_RX_PD_EN_1   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_PD_EN_1  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH0_REG_RX_PD_EN);
    }

//initial config body843 end


//initial config body844 begin
    if (CP_PMA_CH0_REG_RX_PD == "ON")
    {
        SC_PMA_CH0_REG_RX_PD_0   := 1'b0;
    }
    else if (CP_PMA_CH0_REG_RX_PD == "OFF")
    {
        SC_PMA_CH0_REG_RX_PD_0   := 1'b1;
    }
    else
    {
        SC_PMA_CH0_REG_RX_PD_0  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_REG_RX_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH0_REG_RX_PD);
    }

//initial config body844 end


//initial config body845 begin
    if (CP_PMA_CH1_REG_RESERVED_556_552 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_556_552  :=  5'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_556_552 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_556_552  :=  5'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_556_552  :=  5'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_556_552 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_556_552);
    }

//initial config body845 end


//initial config body846 begin
    if (CP_PMA_CH1_REG_RESERVED_550_549 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_550_549  :=  2'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_550_549 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_550_549  :=  2'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_550_549  :=  2'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_550_549 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_550_549);
    }

//initial config body846 end


//initial config body847 begin
    if (CP_PMA_CH1_REG_RESERVED_506_505 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_506_505  :=  2'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_506_505 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_506_505  :=  2'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_506_505  :=  2'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_506_505 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_506_505);
    }

//initial config body847 end


//initial config body848 begin
    if (CP_PMA_CH1_REG_RESERVED_502_499 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_502_499  :=  4'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_502_499 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_502_499  :=  4'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_502_499  :=  4'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_502_499 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_502_499);
    }

//initial config body848 end


//initial config body849 begin
    if (CP_PMA_CH1_REG_RESERVED_452 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_452  :=  1'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_452 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_452  :=  1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_452  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_452 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_452);
    }

//initial config body849 end


//initial config body850 begin
    if (CP_PMA_CH1_REG_RESERVED_376 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_376  :=  1'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_376 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_376  :=  1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_376  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_376 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_376);
    }

//initial config body850 end


//initial config body851 begin
    if (CP_PMA_CH1_REG_RESERVED_373 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_373  :=  1'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_373 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_373  :=  1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_373  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_373 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_373);
    }

//initial config body851 end


//initial config body852 begin
    if (CP_PMA_CH1_REG_RESERVED_354_349 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_354_349  :=  6'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_354_349 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_354_349  :=  6'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_354_349  :=  6'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_354_349 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_354_349);
    }

//initial config body852 end


//initial config body853 begin
    if (CP_PMA_CH1_REG_RESERVED_348_341 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_348_341  :=  8'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_348_341 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_348_341  :=  8'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_348_341  :=  8'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_348_341 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_348_341);
    }

//initial config body853 end


//initial config body854 begin
    if (CP_PMA_CH1_REG_RESERVED_340_333 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_340_333  :=  8'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_340_333 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_340_333  :=  8'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_340_333  :=  8'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_340_333 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_340_333);
    }

//initial config body854 end


//initial config body855 begin
    if (CP_PMA_CH1_REG_RESERVED_332_325 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_332_325  :=  8'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_332_325 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_332_325  :=  8'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_332_325  :=  8'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_332_325 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_332_325);
    }

//initial config body855 end


//initial config body856 begin
    if (CP_PMA_CH1_REG_RESERVED_298 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_298  :=  1'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_298 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_298  :=  1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_298  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_298 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_298);
    }

//initial config body856 end


//initial config body857 begin
    if (CP_PMA_CH1_REG_RESERVED_295 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_295  :=  1'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_295 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_295  :=  1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_295  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_295 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_295);
    }

//initial config body857 end


//initial config body858 begin
    if (CP_PMA_CH1_REG_RESERVED_286 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_286  :=  1'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_286 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_286  :=  1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_286  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_286 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_286);
    }

//initial config body858 end


//initial config body859 begin
    if (CP_PMA_CH1_REG_RESERVED_285_283 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_285_283  :=  3'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_285_283 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_285_283  :=  3'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_285_283  :=  3'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_285_283 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_285_283);
    }

//initial config body859 end


//initial config body860 begin
    if (CP_PMA_CH1_REG_RESERVED_241_240 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_241_240  :=  2'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_241_240 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_241_240  :=  2'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_241_240  :=  2'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_241_240 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_241_240);
    }

//initial config body860 end


//initial config body861 begin
    if (CP_PMA_CH1_REG_RESERVED_235_234 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_235_234  :=  2'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_235_234 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_235_234  :=  2'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_235_234  :=  2'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_235_234 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_235_234);
    }

//initial config body861 end


//initial config body862 begin
    if (CP_PMA_CH1_REG_RESERVED_233_232 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_233_232  :=  2'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_233_232 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_233_232  :=  2'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_233_232  :=  2'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_233_232 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_233_232);
    }

//initial config body862 end


//initial config body863 begin
    if (CP_PMA_CH1_REG_RESERVED_190 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_190  :=  1'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_190 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_190  :=  1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_190  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_190 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_190);
    }

//initial config body863 end


//initial config body864 begin
    if (CP_PMA_CH1_REG_RESERVED_175_172 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_175_172  :=  4'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_175_172 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_175_172  :=  4'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_175_172  :=  4'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_175_172 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_175_172);
    }

//initial config body864 end


//initial config body865 begin
    if (CP_PMA_CH1_REG_RESERVED_171_164 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_171_164  :=  8'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_171_164 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_171_164  :=  8'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_171_164  :=  8'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_171_164 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_171_164);
    }

//initial config body865 end


//initial config body866 begin
    if (CP_PMA_CH1_REG_RESERVED_77_76 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_77_76  :=  2'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_77_76 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_77_76  :=  2'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_77_76  :=  2'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_77_76 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_77_76);
    }

//initial config body866 end


//initial config body867 begin
    if (CP_PMA_CH1_REG_RESERVED_69 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_69  :=  1'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_69 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_69  :=  1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_69  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_69 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_69);
    }

//initial config body867 end


//initial config body868 begin
    if (CP_PMA_CH1_REG_RESERVED_48_45 == 0)
    {
        SC_PMA_CH1_REG_RESERVED_48_45   := 4'b0;
    }
    else if (CP_PMA_CH1_REG_RESERVED_48_45 == 1)
    {
        SC_PMA_CH1_REG_RESERVED_48_45   := 4'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RESERVED_48_45   := 4'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RESERVED_48_45 is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RESERVED_48_45);
    }

//initial config body868 end


//initial config body869 begin
    if (CP_PMA_CH1_CFG_CTLE_ADP_RSTN == "FALSE")
    {
        SC_PMA_CH1_CFG_CTLE_ADP_RSTN_666   := 1'b0;
    }
    else if (CP_PMA_CH1_CFG_CTLE_ADP_RSTN == "TRUE")
    {
        SC_PMA_CH1_CFG_CTLE_ADP_RSTN_666   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_CFG_CTLE_ADP_RSTN_666  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_CFG_CTLE_ADP_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_CFG_CTLE_ADP_RSTN);
    }

//initial config body869 end


//initial config body870 begin
    if (CP_PMA_CH1_CFG_TX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH1_CFG_TX_PMA_RSTN_665   := 1'b0;
    }
    else if (CP_PMA_CH1_CFG_TX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH1_CFG_TX_PMA_RSTN_665   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_CFG_TX_PMA_RSTN_665  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_CFG_TX_PMA_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_CFG_TX_PMA_RSTN);
    }

//initial config body870 end


//initial config body871 begin
    if (CP_PMA_CH1_CFG_TX_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH1_CFG_TX_LANE_POWERUP_664   := 1'b0;
    }
    else if (CP_PMA_CH1_CFG_TX_LANE_POWERUP == "ON")
    {
        SC_PMA_CH1_CFG_TX_LANE_POWERUP_664   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_CFG_TX_LANE_POWERUP_664  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_CFG_TX_LANE_POWERUP is set to %s. Legal values is ON,OFF",CP_PMA_CH1_CFG_TX_LANE_POWERUP);
    }

//initial config body871 end


//initial config body872 begin
    if (CP_PMA_CH1_CFG_RX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH1_CFG_RX_PMA_RSTN_663   := 1'b0;
    }
    else if (CP_PMA_CH1_CFG_RX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH1_CFG_RX_PMA_RSTN_663   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_CFG_RX_PMA_RSTN_663  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_CFG_RX_PMA_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_CFG_RX_PMA_RSTN);
    }

//initial config body872 end


//initial config body873 begin
    if (CP_PMA_CH1_CFG_RX_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH1_CFG_RX_LANE_POWERUP_662   := 1'b0;
    }
    else if (CP_PMA_CH1_CFG_RX_LANE_POWERUP == "ON")
    {
        SC_PMA_CH1_CFG_RX_LANE_POWERUP_662   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_CFG_RX_LANE_POWERUP_662  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_CFG_RX_LANE_POWERUP is set to %s. Legal values is ON,OFF",CP_PMA_CH1_CFG_RX_LANE_POWERUP);
    }

//initial config body873 end


//initial config body874 begin
    if (CP_PMA_CH1_CFG_PMA_POR_N == "FALSE")
    {
        SC_PMA_CH1_CFG_PMA_POR_N_661   := 1'b0;
    }
    else if (CP_PMA_CH1_CFG_PMA_POR_N == "TRUE")
    {
        SC_PMA_CH1_CFG_PMA_POR_N_661   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_CFG_PMA_POR_N_661  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_CFG_PMA_POR_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_CFG_PMA_POR_N);
    }

//initial config body874 end


//initial config body875 begin
    if (CP_PMA_CH1_CFG_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH1_CFG_LANE_POWERUP_660   := 1'b0;
    }
    else if (CP_PMA_CH1_CFG_LANE_POWERUP == "ON")
    {
        SC_PMA_CH1_CFG_LANE_POWERUP_660   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_CFG_LANE_POWERUP_660  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_CFG_LANE_POWERUP is set to %s. Legal values is ON,OFF",CP_PMA_CH1_CFG_LANE_POWERUP);
    }

//initial config body875 end


//initial config body876 begin
    if (CP_PMA_CH1_REG_RX_659_656 >= 0 && CP_PMA_CH1_REG_RX_659_656 <= 15)
    {
        SC_PMA_CH1_REG_RX_659_656  :=  CP_PMA_CH1_REG_RX_659_656;
    }
    else
    {
        SC_PMA_CH1_REG_RX_659_656  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_659_656 is set to %d. Legal values is 0 to 15",CP_PMA_CH1_REG_RX_659_656);
    }

//initial config body876 end


//initial config body877 begin
    if (CP_PMA_CH1_REG_RX_655_648 >= 0 && CP_PMA_CH1_REG_RX_655_648 <= 255)
    {
        SC_PMA_CH1_REG_RX_655_648  :=  CP_PMA_CH1_REG_RX_655_648;
    }
    else
    {
        SC_PMA_CH1_REG_RX_655_648  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_655_648 is set to %d. Legal values is 0 to 255",CP_PMA_CH1_REG_RX_655_648);
    }

//initial config body877 end


//initial config body878 begin
    if (CP_PMA_CH1_REG_RX_647_640 >= 0 && CP_PMA_CH1_REG_RX_647_640 <= 255)
    {
        SC_PMA_CH1_REG_RX_647_640  :=  CP_PMA_CH1_REG_RX_647_640;
    }
    else
    {
        SC_PMA_CH1_REG_RX_647_640  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_647_640 is set to %d. Legal values is 0 to 255",CP_PMA_CH1_REG_RX_647_640);
    }

//initial config body878 end


//initial config body879 begin
    if (CP_PMA_CH1_REG_RX_639_632 >= 0 && CP_PMA_CH1_REG_RX_639_632 <= 255)
    {
        SC_PMA_CH1_REG_RX_639_632  :=  CP_PMA_CH1_REG_RX_639_632;
    }
    else
    {
        SC_PMA_CH1_REG_RX_639_632  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_639_632 is set to %d. Legal values is 0 to 255",CP_PMA_CH1_REG_RX_639_632);
    }

//initial config body879 end


//initial config body880 begin
    if (CP_PMA_CH1_REG_RX_631_624 >= 0 && CP_PMA_CH1_REG_RX_631_624 <= 255)
    {
        SC_PMA_CH1_REG_RX_631_624  :=  CP_PMA_CH1_REG_RX_631_624;
    }
    else
    {
        SC_PMA_CH1_REG_RX_631_624  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_631_624 is set to %d. Legal values is 0 to 255",CP_PMA_CH1_REG_RX_631_624);
    }

//initial config body880 end


//initial config body881 begin
    if (CP_PMA_CH1_REG_RX_CDR_623_618 >= 0 && CP_PMA_CH1_REG_RX_CDR_623_618 <= 63)
    {
        SC_PMA_CH1_REG_RX_CDR_623_618  :=  CP_PMA_CH1_REG_RX_CDR_623_618;
    }
    else
    {
        SC_PMA_CH1_REG_RX_CDR_623_618  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_CDR_623_618 is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_RX_CDR_623_618);
    }

//initial config body881 end


//initial config body882 begin
    if (CP_PMA_CH1_REG_RX_CDR_617_610 >= 0 && CP_PMA_CH1_REG_RX_CDR_617_610 <= 255)
    {
        SC_PMA_CH1_REG_RX_CDR_617_610  :=  CP_PMA_CH1_REG_RX_CDR_617_610;
    }
    else
    {
        SC_PMA_CH1_REG_RX_CDR_617_610  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_CDR_617_610 is set to %d. Legal values is 0 to 255",CP_PMA_CH1_REG_RX_CDR_617_610);
    }

//initial config body882 end


//initial config body883 begin
    if (CP_PMA_CH1_REG_TX_609_600 >= 0 && CP_PMA_CH1_REG_TX_609_600 <= 1023)
    {
        SC_PMA_CH1_REG_TX_609_600  :=  CP_PMA_CH1_REG_TX_609_600;
    }
    else
    {
        SC_PMA_CH1_REG_TX_609_600  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_609_600 is set to %d. Legal values is 0 to 1023",CP_PMA_CH1_REG_TX_609_600);
    }

//initial config body883 end


//initial config body884 begin
    if (CP_PMA_CH1_REG_PLPBK_TXPCLK_EN == "FALSE")
    {
        SC_PMA_CH1_REG_PLPBK_TXPCLK_EN_551   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_PLPBK_TXPCLK_EN == "TRUE")
    {
        SC_PMA_CH1_REG_PLPBK_TXPCLK_EN_551   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_PLPBK_TXPCLK_EN_551  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_PLPBK_TXPCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_PLPBK_TXPCLK_EN);
    }

//initial config body884 end


//initial config body885 begin
    if (CP_PMA_CH1_REG_RX_TERM_MODE_CTRL >= 0 && CP_PMA_CH1_REG_RX_TERM_MODE_CTRL <= 7)
    {
        SC_PMA_CH1_REG_RX_TERM_MODE_CTRL_548_546   :=  to_unsigned( CP_PMA_CH1_REG_RX_TERM_MODE_CTRL , 3) ^  3'b110;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_TERM_MODE_CTRL_548_546  :=  0 ^ 3'b110;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_TERM_MODE_CTRL is set to %d. Legal values is 0 to 7",CP_PMA_CH1_REG_RX_TERM_MODE_CTRL);
    }

//initial config body885 end


//initial config body886 begin
    if (CP_PMA_CH1_REG_TX_FBCLK_FAR_EN == "FALSE")
    {
        SC_PMA_CH1_REG_TX_FBCLK_FAR_EN_545   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_FBCLK_FAR_EN == "TRUE")
    {
        SC_PMA_CH1_REG_TX_FBCLK_FAR_EN_545   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_FBCLK_FAR_EN_545  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_FBCLK_FAR_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_TX_FBCLK_FAR_EN);
    }

//initial config body886 end


//initial config body887 begin
    if (CP_PMA_CH1_REG_RX_ACJTAG_VHYSTSE >= 0 && CP_PMA_CH1_REG_RX_ACJTAG_VHYSTSE <= 7)
    {
        SC_PMA_CH1_REG_RX_ACJTAG_VHYSTSE_544_542  :=  CP_PMA_CH1_REG_RX_ACJTAG_VHYSTSE;
    }
    else
    {
        SC_PMA_CH1_REG_RX_ACJTAG_VHYSTSE_544_542  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_ACJTAG_VHYSTSE is set to %d. Legal values is 0 to 7",CP_PMA_CH1_REG_RX_ACJTAG_VHYSTSE);
    }

//initial config body887 end


//initial config body888 begin
    if (CP_PMA_CH1_REG_RX_JTAG_OE == "DISABLE")
    {
        SC_PMA_CH1_REG_RX_JTAG_OE_541   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_RX_JTAG_OE == "ENABLE")
    {
        SC_PMA_CH1_REG_RX_JTAG_OE_541   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_JTAG_OE_541  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_JTAG_OE is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_RX_JTAG_OE);
    }

//initial config body888 end


//initial config body889 begin
    if (CP_PMA_CH1_REG_RX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_JTAG_MODE_EN_540   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_JTAG_MODE_EN_540   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_JTAG_MODE_EN_540  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_JTAG_MODE_EN);
    }

//initial config body889 end


//initial config body890 begin
    if (CP_PMA_CH1_REG_RX_JTAG_MODE_EN_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_RX_JTAG_MODE_EN_OW_539   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_JTAG_MODE_EN_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_RX_JTAG_MODE_EN_OW_539   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_JTAG_MODE_EN_OW_539  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_JTAG_MODE_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_RX_JTAG_MODE_EN_OW);
    }

//initial config body890 end


//initial config body891 begin
    if (CP_PMA_CH1_REG_TX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH1_REG_TX_JTAG_MODE_EN_538   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH1_REG_TX_JTAG_MODE_EN_538   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_JTAG_MODE_EN_538  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_TX_JTAG_MODE_EN);
    }

//initial config body891 end


//initial config body892 begin
    if (CP_PMA_CH1_REG_TX_JTAG_MODE_EN_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_JTAG_MODE_EN_OW_537   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_JTAG_MODE_EN_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_JTAG_MODE_EN_OW_537   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_JTAG_MODE_EN_OW_537  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_JTAG_MODE_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_JTAG_MODE_EN_OW);
    }

//initial config body892 end


//initial config body893 begin
    if (CP_PMA_CH1_REG_TX_LS_MODE_EN == "FALSE")
    {
        SC_PMA_CH1_REG_TX_LS_MODE_EN_536   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_LS_MODE_EN == "TRUE")
    {
        SC_PMA_CH1_REG_TX_LS_MODE_EN_536   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_LS_MODE_EN_536  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_LS_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_TX_LS_MODE_EN);
    }

//initial config body893 end


//initial config body894 begin
    if (CP_PMA_CH1_REG_TX_SLPBK_AMP >= 0 && CP_PMA_CH1_REG_TX_SLPBK_AMP <= 3)
    {
        SC_PMA_CH1_REG_TX_SLPBK_AMP_535_534   :=  to_unsigned( CP_PMA_CH1_REG_TX_SLPBK_AMP , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_SLPBK_AMP_535_534  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_SLPBK_AMP is set to %d. Legal values is 0 to 3",CP_PMA_CH1_REG_TX_SLPBK_AMP);
    }

//initial config body894 end


//initial config body895 begin
    if (CP_PMA_CH1_REG_TX_POLARITY == "NORMAL")
    {
        SC_PMA_CH1_REG_TX_POLARITY_533   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_POLARITY == "REVERSE")
    {
        SC_PMA_CH1_REG_TX_POLARITY_533   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_POLARITY_533  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_PMA_CH1_REG_TX_POLARITY);
    }

//initial config body895 end


//initial config body896 begin
    if (CP_PMA_CH1_REG_TX_OOB_DELAY_SEL >= 0 && CP_PMA_CH1_REG_TX_OOB_DELAY_SEL <= 15)
    {
        SC_PMA_CH1_REG_TX_OOB_DELAY_SEL_532_529  :=  CP_PMA_CH1_REG_TX_OOB_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH1_REG_TX_OOB_DELAY_SEL_532_529  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_OOB_DELAY_SEL is set to %d. Legal values is 0 to 15",CP_PMA_CH1_REG_TX_OOB_DELAY_SEL);
    }

//initial config body896 end


//initial config body897 begin
    if (CP_PMA_CH1_REG_TX_PULLUP_DAC3 >= 0 && CP_PMA_CH1_REG_TX_PULLUP_DAC3 <= 31)
    {
        SC_PMA_CH1_REG_TX_PULLUP_DAC3_528_524   :=  to_unsigned( CP_PMA_CH1_REG_TX_PULLUP_DAC3 , 5) ^  5'b01001;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PULLUP_DAC3_528_524  :=  0 ^ 5'b01001;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_PULLUP_DAC3 is set to %d. Legal values is 0 to 31",CP_PMA_CH1_REG_TX_PULLUP_DAC3);
    }

//initial config body897 end


//initial config body898 begin
    if (CP_PMA_CH1_REG_TX_PULLUP_DAC2 >= 0 && CP_PMA_CH1_REG_TX_PULLUP_DAC2 <= 31)
    {
        SC_PMA_CH1_REG_TX_PULLUP_DAC2_523_519   :=  to_unsigned( CP_PMA_CH1_REG_TX_PULLUP_DAC2 , 5) ^  5'b01110;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PULLUP_DAC2_523_519  :=  0 ^ 5'b01110;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_PULLUP_DAC2 is set to %d. Legal values is 0 to 31",CP_PMA_CH1_REG_TX_PULLUP_DAC2);
    }

//initial config body898 end


//initial config body899 begin
    if (CP_PMA_CH1_REG_TX_PULLUP_DAC1 >= 0 && CP_PMA_CH1_REG_TX_PULLUP_DAC1 <= 31)
    {
        SC_PMA_CH1_REG_TX_PULLUP_DAC1_518_514   :=  to_unsigned( CP_PMA_CH1_REG_TX_PULLUP_DAC1 , 5) ^  5'b10011;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PULLUP_DAC1_518_514  :=  0 ^ 5'b10011;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_PULLUP_DAC1 is set to %d. Legal values is 0 to 31",CP_PMA_CH1_REG_TX_PULLUP_DAC1);
    }

//initial config body899 end


//initial config body900 begin
    if (CP_PMA_CH1_REG_TX_PULLUP_DAC0 >= 0 && CP_PMA_CH1_REG_TX_PULLUP_DAC0 <= 31)
    {
        SC_PMA_CH1_REG_TX_PULLUP_DAC0_513_509   :=  to_unsigned( CP_PMA_CH1_REG_TX_PULLUP_DAC0 , 5) ^  5'b11000;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PULLUP_DAC0_513_509  :=  0 ^ 5'b11000;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_PULLUP_DAC0 is set to %d. Legal values is 0 to 31",CP_PMA_CH1_REG_TX_PULLUP_DAC0);
    }

//initial config body900 end


//initial config body901 begin
    if (CP_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON == "DISABLE")
    {
        SC_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_508   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON == "ENABLE")
    {
        SC_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_508   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_508  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON);
    }

//initial config body901 end


//initial config body902 begin
    if (CP_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_OW_507   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_OW_507   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_OW_507  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_RATE_CHANGE_TXPCLK_ON_OW);
    }

//initial config body902 end


//initial config body903 begin
    if (CP_PMA_CH1_REG_TX_SATA_EN == "FALSE")
    {
        SC_PMA_CH1_REG_TX_SATA_EN_504   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_SATA_EN == "TRUE")
    {
        SC_PMA_CH1_REG_TX_SATA_EN_504   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_SATA_EN_504  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_SATA_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_TX_SATA_EN);
    }

//initial config body903 end


//initial config body904 begin
    if (CP_PMA_CH1_REG_TX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH1_REG_TX_ERR_INSERT_498   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH1_REG_TX_ERR_INSERT_498   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_ERR_INSERT_498  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_ERR_INSERT is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_TX_ERR_INSERT);
    }

//initial config body904 end


//initial config body905 begin
    if (CP_PMA_CH1_REG_TX_DATA_MUX_SEL >= 0 && CP_PMA_CH1_REG_TX_DATA_MUX_SEL <= 3)
    {
        SC_PMA_CH1_REG_TX_DATA_MUX_SEL_497_496  :=  CP_PMA_CH1_REG_TX_DATA_MUX_SEL;
    }
    else
    {
        SC_PMA_CH1_REG_TX_DATA_MUX_SEL_497_496  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_DATA_MUX_SEL is set to %d. Legal values is 0 to 3",CP_PMA_CH1_REG_TX_DATA_MUX_SEL);
    }

//initial config body905 end


//initial config body906 begin
    if (CP_PMA_CH1_REG_TX_FIFO_EN == "FALSE")
    {
        SC_PMA_CH1_REG_TX_FIFO_EN_495   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_FIFO_EN == "TRUE")
    {
        SC_PMA_CH1_REG_TX_FIFO_EN_495   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_FIFO_EN_495  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_TX_FIFO_EN);
    }

//initial config body906 end


//initial config body907 begin
    if (CP_PMA_CH1_REG_TX_FIFO_WP_CTRL >= 0 && CP_PMA_CH1_REG_TX_FIFO_WP_CTRL <= 7)
    {
        SC_PMA_CH1_REG_TX_FIFO_WP_CTRL_494_492   :=  to_unsigned( CP_PMA_CH1_REG_TX_FIFO_WP_CTRL , 3) ^  3'b010;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_FIFO_WP_CTRL_494_492  :=  0 ^ 3'b010;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_FIFO_WP_CTRL is set to %d. Legal values is 0 to 7",CP_PMA_CH1_REG_TX_FIFO_WP_CTRL);
    }

//initial config body907 end


//initial config body908 begin
    if (CP_PMA_CH1_REG_TX_FIFO_RST_N == "FALSE")
    {
        SC_PMA_CH1_REG_TX_FIFO_RST_N_491   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_FIFO_RST_N == "TRUE")
    {
        SC_PMA_CH1_REG_TX_FIFO_RST_N_491   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_FIFO_RST_N_491  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_FIFO_RST_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_TX_FIFO_RST_N);
    }

//initial config body908 end


//initial config body909 begin
    if (CP_PMA_CH1_REG_TX_UDP_DATA >= 0 && CP_PMA_CH1_REG_TX_UDP_DATA <= 1048575)
    {
        SC_PMA_CH1_REG_TX_UDP_DATA_490_471   :=  to_unsigned( CP_PMA_CH1_REG_TX_UDP_DATA , 20) ^  20'b00111110101100000101;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_UDP_DATA_490_471  :=  0 ^ 20'b00111110101100000101;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_UDP_DATA is set to %d. Legal values is 0 to 1048575",CP_PMA_CH1_REG_TX_UDP_DATA);
    }

//initial config body909 end


//initial config body910 begin
    if (CP_PMA_CH1_REG_TX_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH1_REG_TX_PRBS_SEL_470_469   := 2'b00;
    }
    else if (CP_PMA_CH1_REG_TX_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH1_REG_TX_PRBS_SEL_470_469   := 2'b01;
    }
    else if (CP_PMA_CH1_REG_TX_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH1_REG_TX_PRBS_SEL_470_469   := 2'b10;
    }
    else if (CP_PMA_CH1_REG_TX_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH1_REG_TX_PRBS_SEL_470_469   := 2'b11;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PRBS_SEL_470_469  :=  2'b00;
        error("Setting Error : The CP_PMA_CH1_REG_TX_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_PMA_CH1_REG_TX_PRBS_SEL);
    }

//initial config body910 end


//initial config body911 begin
    if (CP_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b00 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b01 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b10 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b11 ^ 2'b11;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL_468_467  :=  2'b00 ^ 2'b11;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH1_REG_TX_PRBS_GEN_WIDTH_SEL);
    }

//initial config body911 end


//initial config body912 begin
    if (CP_PMA_CH1_REG_TX_PRBS_GEN_EN == "FALSE")
    {
        SC_PMA_CH1_REG_TX_PRBS_GEN_EN_466   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_PRBS_GEN_EN == "TRUE")
    {
        SC_PMA_CH1_REG_TX_PRBS_GEN_EN_466   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PRBS_GEN_EN_466  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_PRBS_GEN_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_TX_PRBS_GEN_EN);
    }

//initial config body912 end


//initial config body913 begin
    if (CP_PMA_CH1_REG_TX_RXDET_STATUS == "FALSE")
    {
        SC_PMA_CH1_REG_TX_RXDET_STATUS_465   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_RXDET_STATUS == "TRUE")
    {
        SC_PMA_CH1_REG_TX_RXDET_STATUS_465   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_RXDET_STATUS_465  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_RXDET_STATUS is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_TX_RXDET_STATUS);
    }

//initial config body913 end


//initial config body914 begin
    if (CP_PMA_CH1_REG_TX_RXDET_STATUS_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_RXDET_STATUS_OW_464   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_RXDET_STATUS_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_RXDET_STATUS_OW_464   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_RXDET_STATUS_OW_464  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_RXDET_STATUS_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_RXDET_STATUS_OW);
    }

//initial config body914 end


//initial config body915 begin
    if (CP_PMA_CH1_REG_TX_PCLK_EDGE_SEL == "POS_EDGE")
    {
        SC_PMA_CH1_REG_TX_PCLK_EDGE_SEL_463   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_PCLK_EDGE_SEL == "NEG_EDGE")
    {
        SC_PMA_CH1_REG_TX_PCLK_EDGE_SEL_463   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PCLK_EDGE_SEL_463  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_PCLK_EDGE_SEL is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_PMA_CH1_REG_TX_PCLK_EDGE_SEL);
    }

//initial config body915 end


//initial config body916 begin
    if (CP_PMA_CH1_REG_TX_TX2RX_SLPBACK_EN == "FALSE")
    {
        SC_PMA_CH1_REG_TX_TX2RX_SLPBACK_EN_462   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_TX2RX_SLPBACK_EN == "TRUE")
    {
        SC_PMA_CH1_REG_TX_TX2RX_SLPBACK_EN_462   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_TX2RX_SLPBACK_EN_462  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_TX2RX_SLPBACK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_TX_TX2RX_SLPBACK_EN);
    }

//initial config body916 end


//initial config body917 begin
    if (CP_PMA_CH1_REG_TX_PREDRV_CM_CTRL >= 0 && CP_PMA_CH1_REG_TX_PREDRV_CM_CTRL <= 3)
    {
        SC_PMA_CH1_REG_TX_PREDRV_CM_CTRL_461_460   :=  to_unsigned( CP_PMA_CH1_REG_TX_PREDRV_CM_CTRL , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PREDRV_CM_CTRL_461_460  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_PREDRV_CM_CTRL is set to %d. Legal values is 0 to 3",CP_PMA_CH1_REG_TX_PREDRV_CM_CTRL);
    }

//initial config body917 end


//initial config body918 begin
    if (CP_PMA_CH1_REG_TX_PREDRV_DAC >= 0 && CP_PMA_CH1_REG_TX_PREDRV_DAC <= 3)
    {
        SC_PMA_CH1_REG_TX_PREDRV_DAC_459_458   :=  to_unsigned( CP_PMA_CH1_REG_TX_PREDRV_DAC , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PREDRV_DAC_459_458  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_PREDRV_DAC is set to %d. Legal values is 0 to 3",CP_PMA_CH1_REG_TX_PREDRV_DAC);
    }

//initial config body918 end


//initial config body919 begin
    if (CP_PMA_CH1_REG_TX_BEACON_OSC_CTRL >= 0 && CP_PMA_CH1_REG_TX_BEACON_OSC_CTRL <= 7)
    {
        SC_PMA_CH1_REG_TX_BEACON_OSC_CTRL_457_455   :=  to_unsigned( CP_PMA_CH1_REG_TX_BEACON_OSC_CTRL , 3) ^  3'b100;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_BEACON_OSC_CTRL_457_455  :=  0 ^ 3'b100;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_BEACON_OSC_CTRL is set to %d. Legal values is 0 to 7",CP_PMA_CH1_REG_TX_BEACON_OSC_CTRL);
    }

//initial config body919 end


//initial config body920 begin
    if (CP_PMA_CH1_REG_TX_RXDET_THRESHOLD == "50MV")
    {
        SC_PMA_CH1_REG_TX_RXDET_THRESHOLD_454_453   := 2'b00 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_RXDET_THRESHOLD == "75MV")
    {
        SC_PMA_CH1_REG_TX_RXDET_THRESHOLD_454_453   := 2'b01 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_RXDET_THRESHOLD == "100MV")
    {
        SC_PMA_CH1_REG_TX_RXDET_THRESHOLD_454_453   := 2'b10 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_RXDET_THRESHOLD == "125MV")
    {
        SC_PMA_CH1_REG_TX_RXDET_THRESHOLD_454_453   := 2'b11 ^ 2'b10;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_RXDET_THRESHOLD_454_453  :=  2'b00 ^ 2'b10;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_RXDET_THRESHOLD is set to %s. Legal values is 50MV,75MV,100MV,125MV",CP_PMA_CH1_REG_TX_RXDET_THRESHOLD);
    }

//initial config body920 end


//initial config body921 begin
    if (CP_PMA_CH1_REG_TX_SWING_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_SWING_OW_451   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_SWING_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_SWING_OW_451   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_SWING_OW_451  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_SWING_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_SWING_OW);
    }

//initial config body921 end


//initial config body922 begin
    if (CP_PMA_CH1_REG_TX_SWING == "FALSE")
    {
        SC_PMA_CH1_REG_TX_SWING_450   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_SWING == "TRUE")
    {
        SC_PMA_CH1_REG_TX_SWING_450   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_SWING_450  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_SWING is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_TX_SWING);
    }

//initial config body922 end


//initial config body923 begin
    if (CP_PMA_CH1_REG_TX_DEEMP_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_DEEMP_OW_449   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_DEEMP_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_DEEMP_OW_449   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_DEEMP_OW_449  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_DEEMP_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_DEEMP_OW);
    }

//initial config body923 end


//initial config body924 begin
    if (CP_PMA_CH1_REG_TX_DEEMP >= 0 && CP_PMA_CH1_REG_TX_DEEMP <= 3)
    {
        SC_PMA_CH1_REG_TX_DEEMP_448_447  :=  CP_PMA_CH1_REG_TX_DEEMP;
    }
    else
    {
        SC_PMA_CH1_REG_TX_DEEMP_448_447  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_DEEMP is set to %d. Legal values is 0 to 3",CP_PMA_CH1_REG_TX_DEEMP);
    }

//initial config body924 end


//initial config body925 begin
    if (CP_PMA_CH1_REG_TX_MARGIN_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_MARGIN_OW_446   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_MARGIN_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_MARGIN_OW_446   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_MARGIN_OW_446  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_MARGIN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_MARGIN_OW);
    }

//initial config body925 end


//initial config body926 begin
    if (CP_PMA_CH1_REG_TX_MARGIN >= 0 && CP_PMA_CH1_REG_TX_MARGIN <= 7)
    {
        SC_PMA_CH1_REG_TX_MARGIN_445_443  :=  CP_PMA_CH1_REG_TX_MARGIN;
    }
    else
    {
        SC_PMA_CH1_REG_TX_MARGIN_445_443  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_MARGIN is set to %d. Legal values is 0 to 7",CP_PMA_CH1_REG_TX_MARGIN);
    }

//initial config body926 end


//initial config body927 begin
    if (CP_PMA_CH1_REG_TX_AMP4 >= 0 && CP_PMA_CH1_REG_TX_AMP4 <= 63)
    {
        SC_PMA_CH1_REG_TX_AMP4_442_437   :=  to_unsigned( CP_PMA_CH1_REG_TX_AMP4 , 6) ^  6'b000101;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_AMP4_442_437  :=  0 ^ 6'b000101;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_AMP4 is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_TX_AMP4);
    }

//initial config body927 end


//initial config body928 begin
    if (CP_PMA_CH1_REG_TX_AMP3 >= 0 && CP_PMA_CH1_REG_TX_AMP3 <= 63)
    {
        SC_PMA_CH1_REG_TX_AMP3_436_431   :=  to_unsigned( CP_PMA_CH1_REG_TX_AMP3 , 6) ^  6'b001001;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_AMP3_436_431  :=  0 ^ 6'b001001;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_AMP3 is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_TX_AMP3);
    }

//initial config body928 end


//initial config body929 begin
    if (CP_PMA_CH1_REG_TX_AMP2 >= 0 && CP_PMA_CH1_REG_TX_AMP2 <= 63)
    {
        SC_PMA_CH1_REG_TX_AMP2_430_425   :=  to_unsigned( CP_PMA_CH1_REG_TX_AMP2 , 6) ^  6'b001110;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_AMP2_430_425  :=  0 ^ 6'b001110;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_AMP2 is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_TX_AMP2);
    }

//initial config body929 end


//initial config body930 begin
    if (CP_PMA_CH1_REG_TX_AMP1 >= 0 && CP_PMA_CH1_REG_TX_AMP1 <= 63)
    {
        SC_PMA_CH1_REG_TX_AMP1_424_419   :=  to_unsigned( CP_PMA_CH1_REG_TX_AMP1 , 6) ^  6'b010011;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_AMP1_424_419  :=  0 ^ 6'b010011;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_AMP1 is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_TX_AMP1);
    }

//initial config body930 end


//initial config body931 begin
    if (CP_PMA_CH1_REG_TX_AMP0 >= 0 && CP_PMA_CH1_REG_TX_AMP0 <= 63)
    {
        SC_PMA_CH1_REG_TX_AMP0_418_413   :=  to_unsigned( CP_PMA_CH1_REG_TX_AMP0 , 6) ^  6'b011000;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_AMP0_418_413  :=  0 ^ 6'b011000;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_AMP0 is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_TX_AMP0);
    }

//initial config body931 end


//initial config body932 begin
    if (CP_PMA_CH1_REG_TX_DRV00_DAC2 >= 0 && CP_PMA_CH1_REG_TX_DRV00_DAC2 <= 63)
    {
        SC_PMA_CH1_REG_TX_DRV00_DAC2_412_407   :=  to_unsigned( CP_PMA_CH1_REG_TX_DRV00_DAC2 , 6) ^  6'b110000;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_DRV00_DAC2_412_407  :=  0 ^ 6'b110000;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_DRV00_DAC2 is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_TX_DRV00_DAC2);
    }

//initial config body932 end


//initial config body933 begin
    if (CP_PMA_CH1_REG_TX_DRV00_DAC1 >= 0 && CP_PMA_CH1_REG_TX_DRV00_DAC1 <= 63)
    {
        SC_PMA_CH1_REG_TX_DRV00_DAC1_406_401   :=  to_unsigned( CP_PMA_CH1_REG_TX_DRV00_DAC1 , 6) ^  6'b110101;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_DRV00_DAC1_406_401  :=  0 ^ 6'b110101;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_DRV00_DAC1 is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_TX_DRV00_DAC1);
    }

//initial config body933 end


//initial config body934 begin
    if (CP_PMA_CH1_REG_TX_DRV00_DAC0 >= 0 && CP_PMA_CH1_REG_TX_DRV00_DAC0 <= 63)
    {
        SC_PMA_CH1_REG_TX_DRV00_DAC0_400_395   :=  to_unsigned( CP_PMA_CH1_REG_TX_DRV00_DAC0 , 6) ^  6'b111111;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_DRV00_DAC0_400_395  :=  0 ^ 6'b111111;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_DRV00_DAC0 is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_TX_DRV00_DAC0);
    }

//initial config body934 end


//initial config body935 begin
    if (CP_PMA_CH1_REG_TX_DRV01_DAC2 >= 0 && CP_PMA_CH1_REG_TX_DRV01_DAC2 <= 63)
    {
        SC_PMA_CH1_REG_TX_DRV01_DAC2_394_389   :=  to_unsigned( CP_PMA_CH1_REG_TX_DRV01_DAC2 , 6) ^  6'b100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_DRV01_DAC2_394_389  :=  0 ^ 6'b100000;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_DRV01_DAC2 is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_TX_DRV01_DAC2);
    }

//initial config body935 end


//initial config body936 begin
    if (CP_PMA_CH1_REG_TX_DRV01_DAC1 >= 0 && CP_PMA_CH1_REG_TX_DRV01_DAC1 <= 63)
    {
        SC_PMA_CH1_REG_TX_DRV01_DAC1_388_383   :=  to_unsigned( CP_PMA_CH1_REG_TX_DRV01_DAC1 , 6) ^  6'b010101;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_DRV01_DAC1_388_383  :=  0 ^ 6'b010101;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_DRV01_DAC1 is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_TX_DRV01_DAC1);
    }

//initial config body936 end


//initial config body937 begin
    if (CP_PMA_CH1_REG_TX_DRV01_DAC0 >= 0 && CP_PMA_CH1_REG_TX_DRV01_DAC0 <= 63)
    {
        SC_PMA_CH1_REG_TX_DRV01_DAC0_382_377  :=  CP_PMA_CH1_REG_TX_DRV01_DAC0;
    }
    else
    {
        SC_PMA_CH1_REG_TX_DRV01_DAC0_382_377  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_DRV01_DAC0 is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_TX_DRV01_DAC0);
    }

//initial config body937 end


//initial config body938 begin
    if (CP_PMA_CH1_REG_EI_PCLK_DELAY_SEL >= 0 && CP_PMA_CH1_REG_EI_PCLK_DELAY_SEL <= 3)
    {
        SC_PMA_CH1_REG_EI_PCLK_DELAY_SEL_375_374  :=  CP_PMA_CH1_REG_EI_PCLK_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH1_REG_EI_PCLK_DELAY_SEL_375_374  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_EI_PCLK_DELAY_SEL is set to %d. Legal values is 0 to 3",CP_PMA_CH1_REG_EI_PCLK_DELAY_SEL);
    }

//initial config body938 end


//initial config body939 begin
    if (CP_PMA_CH1_REG_TX_PCLK_SW == "FALSE")
    {
        SC_PMA_CH1_REG_TX_PCLK_SW_372   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_PCLK_SW == "TRUE")
    {
        SC_PMA_CH1_REG_TX_PCLK_SW_372   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PCLK_SW_372  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_PCLK_SW is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_TX_PCLK_SW);
    }

//initial config body939 end


//initial config body940 begin
    if (CP_PMA_CH1_REG_TX_PCLK_SW_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_PCLK_SW_OW_371   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_PCLK_SW_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_PCLK_SW_OW_371   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PCLK_SW_OW_371  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_PCLK_SW_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_PCLK_SW_OW);
    }

//initial config body940 end


//initial config body941 begin
    if (CP_PMA_CH1_REG_PLL_READY == "FALSE")
    {
        SC_PMA_CH1_REG_PLL_READY_370   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_PLL_READY == "TRUE")
    {
        SC_PMA_CH1_REG_PLL_READY_370   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_PLL_READY_370  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_PLL_READY is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_PLL_READY);
    }

//initial config body941 end


//initial config body942 begin
    if (CP_PMA_CH1_REG_PLL_READY_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_PLL_READY_OW_369   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_PLL_READY_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_PLL_READY_OW_369   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_PLL_READY_OW_369  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_PLL_READY_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_PLL_READY_OW);
    }

//initial config body942 end


//initial config body943 begin
    if (CP_PMA_CH1_REG_TX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH1_REG_TX_BUSWIDTH_368_366   := 3'd0 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH1_REG_TX_BUSWIDTH_368_366   := 3'd1 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH1_REG_TX_BUSWIDTH_368_366   := 3'd2 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH1_REG_TX_BUSWIDTH_368_366   := 3'd3 ^ 3'b011;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_BUSWIDTH_368_366  :=  3'd0 ^ 3'b011;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH1_REG_TX_BUSWIDTH);
    }

//initial config body943 end


//initial config body944 begin
    if (CP_PMA_CH1_REG_TX_BUSWIDTH_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_BUSWIDTH_OW_365   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_BUSWIDTH_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_BUSWIDTH_OW_365   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_BUSWIDTH_OW_365  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_BUSWIDTH_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_BUSWIDTH_OW);
    }

//initial config body944 end


//initial config body945 begin
    if (CP_PMA_CH1_REG_TX_DCC_RESET_N == "FALSE")
    {
        SC_PMA_CH1_REG_TX_DCC_RESET_N_364   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_DCC_RESET_N == "TRUE")
    {
        SC_PMA_CH1_REG_TX_DCC_RESET_N_364   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_DCC_RESET_N_364  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_DCC_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_TX_DCC_RESET_N);
    }

//initial config body945 end


//initial config body946 begin
    if (CP_PMA_CH1_REG_TX_DCC_RESET_N_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_DCC_RESET_N_OW_363   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_DCC_RESET_N_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_DCC_RESET_N_OW_363   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_DCC_RESET_N_OW_363  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_DCC_RESET_N_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_DCC_RESET_N_OW);
    }

//initial config body946 end


//initial config body947 begin
    if (CP_PMA_CH1_REG_TX_RESET_N == "FALSE")
    {
        SC_PMA_CH1_REG_TX_RESET_N_362   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_RESET_N == "TRUE")
    {
        SC_PMA_CH1_REG_TX_RESET_N_362   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_RESET_N_362  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_TX_RESET_N);
    }

//initial config body947 end


//initial config body948 begin
    if (CP_PMA_CH1_REG_TX_RESET_N_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_RESET_N_OW_361   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_RESET_N_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_RESET_N_OW_361   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_RESET_N_OW_361  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_RESET_N_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_RESET_N_OW);
    }

//initial config body948 end


//initial config body949 begin
    if (CP_PMA_CH1_REG_TX_PD_POST_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_PD_POST_OW_360   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_PD_POST_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_PD_POST_OW_360   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PD_POST_OW_360  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_PD_POST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_PD_POST_OW);
    }

//initial config body949 end


//initial config body950 begin
    if (CP_PMA_CH1_REG_TX_PD_POST == "ON")
    {
        SC_PMA_CH1_REG_TX_PD_POST_359   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_PD_POST == "OFF")
    {
        SC_PMA_CH1_REG_TX_PD_POST_359   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PD_POST_359  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_PD_POST is set to %s. Legal values is ON,OFF",CP_PMA_CH1_REG_TX_PD_POST);
    }

//initial config body950 end


//initial config body951 begin
    if (CP_PMA_CH1_REG_TX_SYNC == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_SYNC_358   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_SYNC == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_SYNC_358   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_SYNC_358  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_SYNC is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_SYNC);
    }

//initial config body951 end


//initial config body952 begin
    if (CP_PMA_CH1_REG_TX_SYNC_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_SYNC_OW_357   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_SYNC_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_SYNC_OW_357   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_SYNC_OW_357  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_SYNC_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_SYNC_OW);
    }

//initial config body952 end


//initial config body953 begin
    if (CP_PMA_CH1_REG_TX_RXDET_TIMER_SEL == "3CYCLE")
    {
        SC_PMA_CH1_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b00 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_RXDET_TIMER_SEL == "12CYCLE")
    {
        SC_PMA_CH1_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b01 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_RXDET_TIMER_SEL == "24CYCLE")
    {
        SC_PMA_CH1_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b10 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_TX_RXDET_TIMER_SEL == "36CYCLE")
    {
        SC_PMA_CH1_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b11 ^ 2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_RXDET_TIMER_SEL_356_355  :=  2'b00 ^ 2'b01;
        //reversed := 
        error("Setting Error : The CP_PMA_CH1_REG_TX_RXDET_TIMER_SEL is set to %s. Legal values is 3CYCLE,12CYCLE,24CYCLE,36CYCLE",CP_PMA_CH1_REG_TX_RXDET_TIMER_SEL);
    }

//initial config body953 end


//initial config body954 begin
    if (CP_PMA_CH1_REG_TX_BIAS_CTRL >= 0 && CP_PMA_CH1_REG_TX_BIAS_CTRL <= 63)
    {
        SC_PMA_CH1_REG_TX_BIAS_CTRL_324_319   :=  to_unsigned( CP_PMA_CH1_REG_TX_BIAS_CTRL , 6) ^  6'b100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_BIAS_CTRL_324_319  :=  0 ^ 6'b100000;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_BIAS_CTRL is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_TX_BIAS_CTRL);
    }

//initial config body954 end


//initial config body955 begin
    if (CP_PMA_CH1_REG_TX_BIAS_CAL_EN == "FALSE")
    {
        SC_PMA_CH1_REG_TX_BIAS_CAL_EN_318   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_BIAS_CAL_EN == "TRUE")
    {
        SC_PMA_CH1_REG_TX_BIAS_CAL_EN_318   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_BIAS_CAL_EN_318  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_BIAS_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_TX_BIAS_CAL_EN);
    }

//initial config body955 end


//initial config body956 begin
    if (CP_PMA_CH1_REG_TX_RES_CAL >= 0 && CP_PMA_CH1_REG_TX_RES_CAL <= 63)
    {
        SC_PMA_CH1_REG_TX_RES_CAL_317_312   :=  to_unsigned( CP_PMA_CH1_REG_TX_RES_CAL , 6) ^  6'b110011;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_RES_CAL_317_312  :=  0 ^ 6'b110011;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_RES_CAL is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_TX_RES_CAL);
    }

//initial config body956 end


//initial config body957 begin
    if (CP_PMA_CH1_REG_TX_RES_CAL_EN == "FALSE")
    {
        SC_PMA_CH1_REG_TX_RES_CAL_EN_311   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_RES_CAL_EN == "TRUE")
    {
        SC_PMA_CH1_REG_TX_RES_CAL_EN_311   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_RES_CAL_EN_311  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_RES_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_TX_RES_CAL_EN);
    }

//initial config body957 end


//initial config body958 begin
    if (CP_PMA_CH1_REG_TX_EI_EN == "FALSE")
    {
        SC_PMA_CH1_REG_TX_EI_EN_310   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_EI_EN == "TRUE")
    {
        SC_PMA_CH1_REG_TX_EI_EN_310   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_EI_EN_310  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_EI_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_TX_EI_EN);
    }

//initial config body958 end


//initial config body959 begin
    if (CP_PMA_CH1_REG_TX_EI_EN_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_EI_EN_OW_309   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_EI_EN_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_EI_EN_OW_309   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_EI_EN_OW_309  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_EI_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_EI_EN_OW);
    }

//initial config body959 end


//initial config body960 begin
    if (CP_PMA_CH1_REG_TX_BEACON_EN == "FALSE")
    {
        SC_PMA_CH1_REG_TX_BEACON_EN_308   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_BEACON_EN == "TRUE")
    {
        SC_PMA_CH1_REG_TX_BEACON_EN_308   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_BEACON_EN_308  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_BEACON_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_TX_BEACON_EN);
    }

//initial config body960 end


//initial config body961 begin
    if (CP_PMA_CH1_REG_TX_BEACON_EN_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_BEACON_EN_OW_307   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_BEACON_EN_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_BEACON_EN_OW_307   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_BEACON_EN_OW_307  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_BEACON_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_BEACON_EN_OW);
    }

//initial config body961 end


//initial config body962 begin
    if (CP_PMA_CH1_REG_TX_RXDET_REQ == "FALSE")
    {
        SC_PMA_CH1_REG_TX_RXDET_REQ_306   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_RXDET_REQ == "TRUE")
    {
        SC_PMA_CH1_REG_TX_RXDET_REQ_306   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_RXDET_REQ_306  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_RXDET_REQ is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_TX_RXDET_REQ);
    }

//initial config body962 end


//initial config body963 begin
    if (CP_PMA_CH1_REG_TX_RXDET_REQ_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_RXDET_REQ_OW_305   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_RXDET_REQ_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_RXDET_REQ_OW_305   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_RXDET_REQ_OW_305  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_RXDET_REQ_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_RXDET_REQ_OW);
    }

//initial config body963 end


//initial config body964 begin
    if (CP_PMA_CH1_REG_TX_BEACON_TIMER_SEL >= 0 && CP_PMA_CH1_REG_TX_BEACON_TIMER_SEL <= 3)
    {
        SC_PMA_CH1_REG_TX_BEACON_TIMER_SEL_304_303  :=  CP_PMA_CH1_REG_TX_BEACON_TIMER_SEL;
    }
    else
    {
        SC_PMA_CH1_REG_TX_BEACON_TIMER_SEL_304_303  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_BEACON_TIMER_SEL is set to %d. Legal values is 0 to 3",CP_PMA_CH1_REG_TX_BEACON_TIMER_SEL);
    }

//initial config body964 end


//initial config body965 begin
    if (CP_PMA_CH1_REG_TX_CLKPATH_PD_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_CLKPATH_PD_OW_302   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_CLKPATH_PD_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_CLKPATH_PD_OW_302   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_CLKPATH_PD_OW_302  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_CLKPATH_PD_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_CLKPATH_PD_OW);
    }

//initial config body965 end


//initial config body966 begin
    if (CP_PMA_CH1_REG_TX_CLKPATH_PD == "ON")
    {
        SC_PMA_CH1_REG_TX_CLKPATH_PD_301   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_CLKPATH_PD == "OFF")
    {
        SC_PMA_CH1_REG_TX_CLKPATH_PD_301   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_CLKPATH_PD_301  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_CLKPATH_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH1_REG_TX_CLKPATH_PD);
    }

//initial config body966 end


//initial config body967 begin
    if (CP_PMA_CH1_REG_TX_PD_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_PD_OW_300   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_PD_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_PD_OW_300   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PD_OW_300  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_PD_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_PD_OW);
    }

//initial config body967 end


//initial config body968 begin
    if (CP_PMA_CH1_REG_TX_PD == "ON")
    {
        SC_PMA_CH1_REG_TX_PD_299   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_PD == "OFF")
    {
        SC_PMA_CH1_REG_TX_PD_299   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_PD_299  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH1_REG_TX_PD);
    }

//initial config body968 end


//initial config body969 begin
    if (CP_PMA_CH1_REG_RX_TERM_CM_CTRL == "5DIV7")
    {
        SC_PMA_CH1_REG_RX_TERM_CM_CTRL_297_296   := 2'b00;
    }
    else if (CP_PMA_CH1_REG_RX_TERM_CM_CTRL == "2DIV3")
    {
        SC_PMA_CH1_REG_RX_TERM_CM_CTRL_297_296   := 2'b01;
    }
    else if (CP_PMA_CH1_REG_RX_TERM_CM_CTRL == "5DIV6")
    {
        SC_PMA_CH1_REG_RX_TERM_CM_CTRL_297_296   := 2'b10;
    }
    else if (CP_PMA_CH1_REG_RX_TERM_CM_CTRL == "4DIV5")
    {
        SC_PMA_CH1_REG_RX_TERM_CM_CTRL_297_296   := 2'b11;
    }
    else
    {
        SC_PMA_CH1_REG_RX_TERM_CM_CTRL_297_296  :=  2'b00;
        error("Setting Error : The CP_PMA_CH1_REG_RX_TERM_CM_CTRL is set to %s. Legal values is 5DIV7,2DIV3,5DIV6,4DIV5",CP_PMA_CH1_REG_RX_TERM_CM_CTRL);
    }

//initial config body969 end


//initial config body970 begin
    if (CP_PMA_CH1_REG_RX_OOB_DETECTOR_PD == "ON")
    {
        SC_PMA_CH1_REG_RX_OOB_DETECTOR_PD_294   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_OOB_DETECTOR_PD == "OFF")
    {
        SC_PMA_CH1_REG_RX_OOB_DETECTOR_PD_294   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_OOB_DETECTOR_PD_294  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_OOB_DETECTOR_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH1_REG_RX_OOB_DETECTOR_PD);
    }

//initial config body970 end


//initial config body971 begin
    if (CP_PMA_CH1_REG_RX_OOB_DETECTOR_PD_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_RX_OOB_DETECTOR_PD_OW_293   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_OOB_DETECTOR_PD_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_RX_OOB_DETECTOR_PD_OW_293   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_OOB_DETECTOR_PD_OW_293  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_OOB_DETECTOR_PD_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_RX_OOB_DETECTOR_PD_OW);
    }

//initial config body971 end


//initial config body972 begin
    if (CP_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N == "FALSE")
    {
        SC_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_292   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N == "TRUE")
    {
        SC_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_292   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_292  :=  1'b0;
        error("Setting Error : CP_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N);
    }

//initial config body972 end


//initial config body973 begin
    if (CP_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_OW_291   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_OW_291   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_OW_291  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_RX_OOB_DETECTOR_RESET_N_OW);
    }

//initial config body973 end


//initial config body974 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_IC_I >= 0 && CP_PMA_CH1_REG_RX_SIGDET_IC_I <= 15)
    {
        SC_PMA_CH1_REG_RX_SIGDET_IC_I_290_287   :=  to_unsigned( CP_PMA_CH1_REG_RX_SIGDET_IC_I , 4) ^  4'b1010;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_IC_I_290_287  :=  0 ^ 4'b1010;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_IC_I is set to %d. Legal values is 0 to 15",CP_PMA_CH1_REG_RX_SIGDET_IC_I);
    }

//initial config body974 end


//initial config body975 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_4OOB_DET_SEL >= 0 && CP_PMA_CH1_REG_RX_SIGDET_4OOB_DET_SEL <= 7)
    {
        SC_PMA_CH1_REG_RX_SIGDET_4OOB_DET_SEL_282_280   :=  to_unsigned( CP_PMA_CH1_REG_RX_SIGDET_4OOB_DET_SEL , 3) ^  3'b111;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_4OOB_DET_SEL_282_280  :=  0 ^ 3'b111;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_4OOB_DET_SEL is set to %d. Legal values is 0 to 7",CP_PMA_CH1_REG_RX_SIGDET_4OOB_DET_SEL);
    }

//initial config body975 end


//initial config body976 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL >= 0 && CP_PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL <= 31)
    {
        SC_PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275  :=  CP_PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL is set to %d. Legal values is 0 to 31",CP_PMA_CH1_REG_RX_SIGDET_OOB_DET_COUNT_VAL);
    }

//initial config body976 end


//initial config body977 begin
    if (CP_PMA_CH1_REG_SLIP_FIFO_INV == "POS_EDGE")
    {
        SC_PMA_CH1_REG_SLIP_FIFO_INV_274  :=  1'b0;
    }
    else if (CP_PMA_CH1_REG_SLIP_FIFO_INV == "NEG_EDGE")
    {
        SC_PMA_CH1_REG_SLIP_FIFO_INV_274  :=  1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_SLIP_FIFO_INV_274  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_SLIP_FIFO_INV is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_PMA_CH1_REG_SLIP_FIFO_INV);
    }

//initial config body977 end


//initial config body978 begin
    if (CP_PMA_CH1_REG_SLIP_FIFO_INV_EN == "FALSE")
    {
        SC_PMA_CH1_REG_SLIP_FIFO_INV_EN_273  :=  1'b0;
    }
    else if (CP_PMA_CH1_REG_SLIP_FIFO_INV_EN == "TRUE")
    {
        SC_PMA_CH1_REG_SLIP_FIFO_INV_EN_273  :=  1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_SLIP_FIFO_INV_EN_273  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_SLIP_FIFO_INV_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_SLIP_FIFO_INV_EN);
    }

//initial config body978 end


//initial config body979 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_NOSIG_COUNT_SETTING >= 0 && CP_PMA_CH1_REG_RX_SIGDET_NOSIG_COUNT_SETTING <= 7)
    {
        SC_PMA_CH1_REG_RX_SIGDET_NOSIG_CNT_SET_272_270   :=  to_unsigned( CP_PMA_CH1_REG_RX_SIGDET_NOSIG_COUNT_SETTING , 3) ^  3'b100;
        //272 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_NOSIG_CNT_SET_272_270  :=  0 ^ 3'b100;
        //272 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_NOSIG_COUNT_SETTING is set to %d. Legal values is 0 to 7",CP_PMA_CH1_REG_RX_SIGDET_NOSIG_COUNT_SETTING);
    }

//initial config body979 end


//initial config body980 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_CHK_WINDOW_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_CHK_WINDOW_EN_269   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_CHK_WINDOW_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_CHK_WINDOW_EN_269   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_CHK_WINDOW_EN_269  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_CHK_WINDOW_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_SIGDET_CHK_WINDOW_EN);
    }

//initial config body980 end


//initial config body981 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW >= 0 && CP_PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW <= 31)
    {
        SC_PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264   :=  to_unsigned( CP_PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW , 5) ^  5'b00011;
        //265_264 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264  :=  0 ^ 5'b00011;
        //265_264 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW is set to %d. Legal values is 0 to 31",CP_PMA_CH1_REG_RX_SIGDET_CH2_CHK_WINDOW);
    }

//initial config body981 end


//initial config body982 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_CH2_SEL == 0)
    {
        SC_PMA_CH1_REG_RX_SIGDET_CH2_SEL_263   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_CH2_SEL == 1)
    {
        SC_PMA_CH1_REG_RX_SIGDET_CH2_SEL_263   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_CH2_SEL_263  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_CH2_SEL is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_RX_SIGDET_CH2_SEL);
    }

//initial config body982 end


//initial config body983 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_PULSE_EXT == "DISABLE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_PULSE_EXT_262   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_PULSE_EXT == "ENABLE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_PULSE_EXT_262   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_PULSE_EXT_262  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_PULSE_EXT is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_RX_SIGDET_PULSE_EXT);
    }

//initial config body983 end


//initial config body984 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_GRM == 0)
    {
        SC_PMA_CH1_REG_RX_SIGDET_GRM_261_260   := 2'b00;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_GRM == 1)
    {
        SC_PMA_CH1_REG_RX_SIGDET_GRM_261_260   := 2'b01;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_GRM == 2)
    {
        SC_PMA_CH1_REG_RX_SIGDET_GRM_261_260   := 2'b10;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_GRM == 3)
    {
        SC_PMA_CH1_REG_RX_SIGDET_GRM_261_260   := 2'b11;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_GRM_261_260  :=  2'b00;
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_GRM is set to %s. Legal values is 0,1,2,3",CP_PMA_CH1_REG_RX_SIGDET_GRM);
    }

//initial config body984 end


//initial config body985 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_VTH == "12_5MV")
    {
        SC_PMA_CH1_REG_RX_SIGDET_VTH_259_256   := 4'b0000 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_VTH == "25MV")
    {
        SC_PMA_CH1_REG_RX_SIGDET_VTH_259_256   := 4'b0001 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_VTH == "37_5MV")
    {
        SC_PMA_CH1_REG_RX_SIGDET_VTH_259_256   := 4'b0010 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_VTH == "50MV")
    {
        SC_PMA_CH1_REG_RX_SIGDET_VTH_259_256   := 4'b0011 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_VTH == "62_5MV")
    {
        SC_PMA_CH1_REG_RX_SIGDET_VTH_259_256   := 4'b0100 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_VTH == "75MV")
    {
        SC_PMA_CH1_REG_RX_SIGDET_VTH_259_256   := 4'b0101 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_VTH == "87_5MV")
    {
        SC_PMA_CH1_REG_RX_SIGDET_VTH_259_256   := 4'b0110 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_VTH == "100MV")
    {
        SC_PMA_CH1_REG_RX_SIGDET_VTH_259_256   := 4'b0111 ^ 4'b0011;
        //257_256 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_VTH_259_256  :=  4'b0000 ^ 4'b0011;
        //257_256 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_VTH is set to %s. Legal values is 12_5MV,25MV,37_5MV,50MV,62_5MV,75MV,87_5MV,100MV",CP_PMA_CH1_REG_RX_SIGDET_VTH);
    }

//initial config body985 end


//initial config body986 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_STATUS == "FALSE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_STATUS_255   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_STATUS == "TRUE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_STATUS_255   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_STATUS_255  :=  1'b0;
        error("Setting Error : CP_PMA_CH1_REG_RX_SIGDET_STATUS  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_RX_SIGDET_STATUS);
    }

//initial config body986 end


//initial config body987 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_STATUS_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_STATUS_OW_254   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_STATUS_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_STATUS_OW_254   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_STATUS_OW_254  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_STATUS_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_RX_SIGDET_STATUS_OW);
    }

//initial config body987 end


//initial config body988 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_FSM_RST_N == "FALSE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_FSM_RST_N_253   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_FSM_RST_N == "TRUE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_FSM_RST_N_253   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_FSM_RST_N_253  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : CP_PMA_CH1_REG_RX_SIGDET_FSM_RST_N  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_RX_SIGDET_FSM_RST_N);
    }

//initial config body988 end


//initial config body989 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_STATUS_SEL >= 0 && CP_PMA_CH1_REG_RX_SIGDET_STATUS_SEL <= 7)
    {
        SC_PMA_CH1_REG_RX_SIGDET_STATUS_SEL_252_250   :=  to_unsigned( CP_PMA_CH1_REG_RX_SIGDET_STATUS_SEL , 3) ^  3'b101;
        //252,250 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_STATUS_SEL_252_250  :=  0 ^ 3'b101;
        //252,250 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_STATUS_SEL is set to %d. Legal values is 0 to 7",CP_PMA_CH1_REG_RX_SIGDET_STATUS_SEL);
    }

//initial config body989 end


//initial config body990 begin
    if (CP_PMA_CH1_REG_RX_SLIP_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_SLIP_EN_249  :=  1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_SLIP_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_SLIP_EN_249  :=  1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SLIP_EN_249  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_SLIP_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_SLIP_EN);
    }

//initial config body990 end


//initial config body991 begin
    if (CP_PMA_CH1_REG_RX_SLIP_SEL >= 0 && CP_PMA_CH1_REG_RX_SLIP_SEL <= 15)
    {
        SC_PMA_CH1_REG_RX_SLIP_SEL_248_245  :=  CP_PMA_CH1_REG_RX_SLIP_SEL;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SLIP_SEL_248_245  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_SLIP_SEL is set to %d. Legal values is 0 to 15",CP_PMA_CH1_REG_RX_SLIP_SEL);
    }

//initial config body991 end


//initial config body992 begin
    if (CP_PMA_CH1_REG_RX_SLIP_SEL_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_SLIP_SEL_EN_244  :=  1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_SLIP_SEL_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_SLIP_SEL_EN_244  :=  1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SLIP_SEL_EN_244  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_SLIP_SEL_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_SLIP_SEL_EN);
    }

//initial config body992 end


//initial config body993 begin
    if (CP_PMA_CH1_REG_TX_DCC_DISABLE == "DISABLE")
    {
        SC_PMA_CH1_REG_TX_DCC_DISABLE_243   := 1'b1;
    }
    else if (CP_PMA_CH1_REG_TX_DCC_DISABLE == "ENABLE")
    {
        SC_PMA_CH1_REG_TX_DCC_DISABLE_243   := 1'b0;
    }
    else
    {
        SC_PMA_CH1_REG_TX_DCC_DISABLE_243  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_DCC_DISABLE is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_TX_DCC_DISABLE);
    }

//initial config body993 end


//initial config body994 begin
    if (CP_PMA_CH1_REG_RX_DCC_DISABLE == "DISABLE")
    {
        SC_PMA_CH1_REG_RX_DCC_DISABLE_242   := 1'b1;
    }
    else if (CP_PMA_CH1_REG_RX_DCC_DISABLE == "ENABLE")
    {
        SC_PMA_CH1_REG_RX_DCC_DISABLE_242   := 1'b0;
    }
    else
    {
        SC_PMA_CH1_REG_RX_DCC_DISABLE_242  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_DCC_DISABLE is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_RX_DCC_DISABLE);
    }

//initial config body994 end


//initial config body995 begin
    if (CP_PMA_CH1_REG_RX_SATA_COMWAKE == "FALSE")
    {
        SC_PMA_CH1_REG_RX_SATA_COMWAKE_239   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_SATA_COMWAKE == "TRUE")
    {
        SC_PMA_CH1_REG_RX_SATA_COMWAKE_239   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SATA_COMWAKE_239  :=  1'b0;
        error("Setting Error : CP_PMA_CH1_REG_RX_SATA_COMWAKE  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_RX_SATA_COMWAKE);
    }

//initial config body995 end


//initial config body996 begin
    if (CP_PMA_CH1_REG_RX_SATA_COMWAKE_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_RX_SATA_COMWAKE_OW_238   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_SATA_COMWAKE_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_RX_SATA_COMWAKE_OW_238   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SATA_COMWAKE_OW_238  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_SATA_COMWAKE_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_RX_SATA_COMWAKE_OW);
    }

//initial config body996 end


//initial config body997 begin
    if (CP_PMA_CH1_REG_RX_SATA_COMINIT == "FALSE")
    {
        SC_PMA_CH1_REG_RX_SATA_COMINIT_237   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_SATA_COMINIT == "TRUE")
    {
        SC_PMA_CH1_REG_RX_SATA_COMINIT_237   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SATA_COMINIT_237  :=  1'b0;
        error("Setting Error : CP_PMA_CH1_REG_RX_SATA_COMINIT  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_RX_SATA_COMINIT);
    }

//initial config body997 end


//initial config body998 begin
    if (CP_PMA_CH1_REG_RX_SATA_COMINIT_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_RX_SATA_COMINIT_OW_236   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_SATA_COMINIT_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_RX_SATA_COMINIT_OW_236   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SATA_COMINIT_OW_236  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_SATA_COMINIT_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_RX_SATA_COMINIT_OW);
    }

//initial config body998 end


//initial config body999 begin
    if (CP_PMA_CH1_REG_RX_SYNC_RST_N == "FALSE")
    {
        SC_PMA_CH1_REG_RX_SYNC_RST_N_231   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_RX_SYNC_RST_N == "TRUE")
    {
        SC_PMA_CH1_REG_RX_SYNC_RST_N_231   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SYNC_RST_N_231  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : CP_PMA_CH1_REG_RX_SYNC_RST_N  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_RX_SYNC_RST_N);
    }

//initial config body999 end


//initial config body1000 begin
    if (CP_PMA_CH1_REG_RX_SYNC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_SYNC_RST_N_EN_230   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_SYNC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_SYNC_RST_N_EN_230   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SYNC_RST_N_EN_230  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_SYNC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_SYNC_RST_N_EN);
    }

//initial config body1000 end


//initial config body1001 begin
    if (CP_PMA_CH1_REG_COMINIT_STATUS_CLEAR == 0)
    {
        SC_PMA_CH1_REG_COMINIT_STATUS_CLEAR_229  :=  1'b0;
    }
    else if (CP_PMA_CH1_REG_COMINIT_STATUS_CLEAR == 1)
    {
        SC_PMA_CH1_REG_COMINIT_STATUS_CLEAR_229  :=  1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_COMINIT_STATUS_CLEAR_229  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_COMINIT_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_COMINIT_STATUS_CLEAR);
    }

//initial config body1001 end


//initial config body1002 begin
    if (CP_PMA_CH1_REG_COMWAKE_STATUS_CLEAR == 0)
    {
        SC_PMA_CH1_REG_COMWAKE_STATUS_CLEAR_228  :=  1'b0;
    }
    else if (CP_PMA_CH1_REG_COMWAKE_STATUS_CLEAR == 1)
    {
        SC_PMA_CH1_REG_COMWAKE_STATUS_CLEAR_228  :=  1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_COMWAKE_STATUS_CLEAR_228  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_COMWAKE_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_COMWAKE_STATUS_CLEAR);
    }

//initial config body1002 end


//initial config body1003 begin
    if (CP_PMA_CH1_REG_RX_PIBUF_IC_TX == 0)
    {
        SC_PMA_CH1_REG_RX_PIBUF_IC_TX_227_226   := 2'b00 ^ 2'b01;
        //226 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_PIBUF_IC_TX == 1)
    {
        SC_PMA_CH1_REG_RX_PIBUF_IC_TX_227_226   := 2'b01 ^ 2'b01;
        //226 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_PIBUF_IC_TX == 2)
    {
        SC_PMA_CH1_REG_RX_PIBUF_IC_TX_227_226   := 2'b10 ^ 2'b01;
        //226 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_PIBUF_IC_TX == 3)
    {
        SC_PMA_CH1_REG_RX_PIBUF_IC_TX_227_226   := 2'b11 ^ 2'b01;
        //226 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_PIBUF_IC_TX_227_226  :=  2'b00 ^ 2'b01;
        //226 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_PIBUF_IC_TX is set to %s. Legal values is 0,1,2,3",CP_PMA_CH1_REG_RX_PIBUF_IC_TX);
    }

//initial config body1003 end


//initial config body1004 begin
    if (CP_PMA_CH1_REG_OOB_COMINIT_GAP_MAX >= 0 && CP_PMA_CH1_REG_OOB_COMINIT_GAP_MAX <= 255)
    {
        SC_PMA_CH1_REG_OOB_COMINIT_GAP_MAX_225_218   :=  to_unsigned( CP_PMA_CH1_REG_OOB_COMINIT_GAP_MAX , 8) ^  8'b00100011;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_OOB_COMINIT_GAP_MAX_225_218  :=  0 ^ 8'b00100011;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_OOB_COMINIT_GAP_MAX is set to %d. Legal values is 0 to 255",CP_PMA_CH1_REG_OOB_COMINIT_GAP_MAX);
    }

//initial config body1004 end


//initial config body1005 begin
    if (CP_PMA_CH1_REG_OOB_COMINIT_GAP_MIN >= 0 && CP_PMA_CH1_REG_OOB_COMINIT_GAP_MIN <= 255)
    {
        SC_PMA_CH1_REG_OOB_COMINIT_GAP_MIN_217_210   :=  to_unsigned( CP_PMA_CH1_REG_OOB_COMINIT_GAP_MIN , 8) ^  8'b00001111;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_OOB_COMINIT_GAP_MIN_217_210  :=  0 ^ 8'b00001111;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_OOB_COMINIT_GAP_MIN is set to %d. Legal values is 0 to 255",CP_PMA_CH1_REG_OOB_COMINIT_GAP_MIN);
    }

//initial config body1005 end


//initial config body1006 begin
    if (CP_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX >= 0 && CP_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX <= 63)
    {
        SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX_209_204   :=  to_unsigned( CP_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX , 6) ^  6'b001011;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX_209_204  :=  0 ^ 6'b001011;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_OOB_COMWAKE_GAP_MAX);
    }

//initial config body1006 end


//initial config body1007 begin
    if (CP_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN >= 0 && CP_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN <= 63)
    {
        SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN_203_198   :=  to_unsigned( CP_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN , 6) ^  6'b000011;
        //199_198 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN_203_198  :=  0 ^ 6'b000011;
        //199_198 reversed
        error("Setting Error : The CP_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_OOB_COMWAKE_GAP_MIN);
    }

//initial config body1007 end


//initial config body1008 begin
    if (CP_PMA_CH1_REG_PMA_TEST_SEL == 0)
    {
        SC_PMA_CH1_REG_PMA_TEST_SEL_197_195   := 3'b000;
    }
    else if (CP_PMA_CH1_REG_PMA_TEST_SEL == 1)
    {
        SC_PMA_CH1_REG_PMA_TEST_SEL_197_195   := 3'b001;
    }
    else
    {
        SC_PMA_CH1_REG_PMA_TEST_SEL_197_195  :=  3'b000;
        error("Setting Error : The CP_PMA_CH1_REG_PMA_TEST_SEL is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_PMA_TEST_SEL);
    }

//initial config body1008 end


//initial config body1009 begin
    if (CP_PMA_CH1_REG_CDR_STATUS_FIFO_EN == "FALSE")
    {
        SC_PMA_CH1_REG_CDR_STATUS_FIFO_EN_194   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_STATUS_FIFO_EN == "TRUE")
    {
        SC_PMA_CH1_REG_CDR_STATUS_FIFO_EN_194   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_STATUS_FIFO_EN_194  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_CDR_STATUS_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_CDR_STATUS_FIFO_EN);
    }

//initial config body1009 end


//initial config body1010 begin
    if (CP_PMA_CH1_REG_CDR_STATUS_RADDR_INIT >= 0 && CP_PMA_CH1_REG_CDR_STATUS_RADDR_INIT <= 7)
    {
        SC_PMA_CH1_REG_CDR_STATUS_RADDR_INIT_193_191  :=  CP_PMA_CH1_REG_CDR_STATUS_RADDR_INIT;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_STATUS_RADDR_INIT_193_191  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_CDR_STATUS_RADDR_INIT is set to %d. Legal values is 0 to 7",CP_PMA_CH1_REG_CDR_STATUS_RADDR_INIT);
    }

//initial config body1010 end


//initial config body1011 begin
    if (CP_PMA_CH1_REG_CDR_TURBO_MODE_EN == "FALSE")
    {
        SC_PMA_CH1_REG_CDR_TURBO_MODE_EN_189   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_TURBO_MODE_EN == "TRUE")
    {
        SC_PMA_CH1_REG_CDR_TURBO_MODE_EN_189   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_TURBO_MODE_EN_189  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_CDR_TURBO_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_CDR_TURBO_MODE_EN);
    }

//initial config body1011 end


//initial config body1012 begin
    if (CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_OW_188   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_OW_188   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_OW_188  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_OW);
    }

//initial config body1012 end


//initial config body1013 begin
    if (CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_VAL == "FALSE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_VAL_187   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_VAL == "TRUE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_VAL_187   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_VAL_187  :=  1'b0;
        error("Setting Error : CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_VAL  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_VAL);
    }

//initial config body1013 end


//initial config body1014 begin
    if (CP_PMA_CH1_REG_CDR_SAT_DET_TIMER == 0)
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_TIMER_186_185   := 2'b00 ^ 2'b10;
        //186 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_SAT_DET_TIMER == 1)
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_TIMER_186_185   := 2'b01 ^ 2'b10;
        //186 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_SAT_DET_TIMER == 2)
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_TIMER_186_185   := 2'b10 ^ 2'b10;
        //186 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_SAT_DET_TIMER == 3)
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_TIMER_186_185   := 2'b11 ^ 2'b10;
        //186 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_TIMER_186_185  :=  2'b00 ^ 2'b10;
        //186 reversed
        error("Setting Error : The CP_PMA_CH1_REG_CDR_SAT_DET_TIMER is set to %s. Legal values is 0,1,2,3",CP_PMA_CH1_REG_CDR_SAT_DET_TIMER);
    }

//initial config body1014 end


//initial config body1015 begin
    if (CP_PMA_CH1_REG_CDR_SIGDET_STATUS_DIS == "FALSE")
    {
        SC_PMA_CH1_REG_CDR_SIGDET_STATUS_DIS_184   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_SIGDET_STATUS_DIS == "TRUE")
    {
        SC_PMA_CH1_REG_CDR_SIGDET_STATUS_DIS_184   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_SIGDET_STATUS_DIS_184  :=  1'b0;
        error("Setting Error : CP_PMA_CH1_REG_CDR_SIGDET_STATUS_DIS  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_CDR_SIGDET_STATUS_DIS);
    }

//initial config body1015 end


//initial config body1016 begin
    if (CP_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_OW_183   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_OW_183   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_OW_183  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_OW);
    }

//initial config body1016 end


//initial config body1017 begin
    if (CP_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST == "FALSE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_182   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST == "TRUE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_182   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST_182  :=  1'b0;
        error("Setting Error : CP_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_CDR_SAT_DET_STICKY_RST);
    }

//initial config body1017 end


//initial config body1018 begin
    if (CP_PMA_CH1_REG_CDR_SAT_DET_RST_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_RST_OW_181   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_SAT_DET_RST_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_RST_OW_181   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_RST_OW_181  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_CDR_SAT_DET_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_CDR_SAT_DET_RST_OW);
    }

//initial config body1018 end


//initial config body1019 begin
    if (CP_PMA_CH1_REG_CDR_SAT_DET_RST == "FALSE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_RST_180   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_SAT_DET_RST == "TRUE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_RST_180   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_RST_180  :=  1'b0;
        error("Setting Error : CP_PMA_CH1_REG_CDR_SAT_DET_RST  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_CDR_SAT_DET_RST);
    }

//initial config body1019 end


//initial config body1020 begin
    if (CP_PMA_CH1_REG_CDR_PI_CTRL_RST_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_CDR_PI_CTRL_RST_OW_179   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_PI_CTRL_RST_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_CDR_PI_CTRL_RST_OW_179   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_PI_CTRL_RST_OW_179  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_CDR_PI_CTRL_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_CDR_PI_CTRL_RST_OW);
    }

//initial config body1020 end


//initial config body1021 begin
    if (CP_PMA_CH1_REG_CDR_PI_CTRL_RST == "FALSE")
    {
        SC_PMA_CH1_REG_CDR_PI_CTRL_RST_178   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_PI_CTRL_RST == "TRUE")
    {
        SC_PMA_CH1_REG_CDR_PI_CTRL_RST_178   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_PI_CTRL_RST_178  :=  1'b0;
        error("Setting Error : CP_PMA_CH1_REG_CDR_PI_CTRL_RST  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_CDR_PI_CTRL_RST);
    }

//initial config body1021 end


//initial config body1022 begin
    if (CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_RESET_EN == "FALSE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_RESET_EN_177   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_RESET_EN == "TRUE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_RESET_EN_177   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_RESET_EN_177  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_RESET_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_RESET_EN);
    }

//initial config body1022 end


//initial config body1023 begin
    if (CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_EN == "FALSE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_EN_176   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_EN == "TRUE")
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_EN_176   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_SAT_DET_STATUS_EN_176  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_CDR_SAT_DET_STATUS_EN);
    }

//initial config body1023 end


//initial config body1024 begin
    if (CP_PMA_CH1_REG_CDR_INT_SAT_DET_EN == "FALSE")
    {
        SC_PMA_CH1_REG_CDR_INT_SAT_DET_EN_163   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_SAT_DET_EN == "TRUE")
    {
        SC_PMA_CH1_REG_CDR_INT_SAT_DET_EN_163   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_INT_SAT_DET_EN_163  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_CDR_INT_SAT_DET_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_CDR_INT_SAT_DET_EN);
    }

//initial config body1024 end


//initial config body1025 begin
    if (CP_PMA_CH1_REG_CDR_LOCK_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_CDR_LOCK_OW_162   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_LOCK_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_CDR_LOCK_OW_162   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_LOCK_OW_162  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_CDR_LOCK_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_CDR_LOCK_OW);
    }

//initial config body1025 end


//initial config body1026 begin
    if (CP_PMA_CH1_REG_CDR_LOCK_VAL == "FALSE")
    {
        SC_PMA_CH1_REG_CDR_LOCK_VAL_161   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_LOCK_VAL == "TRUE")
    {
        SC_PMA_CH1_REG_CDR_LOCK_VAL_161   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_LOCK_VAL_161  :=  1'b0;
        error("Setting Error : CP_PMA_CH1_REG_CDR_LOCK_VAL  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_CDR_LOCK_VAL);
    }

//initial config body1026 end


//initial config body1027 begin
    if (CP_PMA_CH1_REG_CDR_TURBO_MODE_TIMER == 0)
    {
        SC_PMA_CH1_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b00 ^ 2'b01;
        //159 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_TURBO_MODE_TIMER == 1)
    {
        SC_PMA_CH1_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b01 ^ 2'b01;
        //159 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_TURBO_MODE_TIMER == 2)
    {
        SC_PMA_CH1_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b10 ^ 2'b01;
        //159 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_TURBO_MODE_TIMER == 3)
    {
        SC_PMA_CH1_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b11 ^ 2'b01;
        //159 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_TURBO_MODE_TIMER_160_159  :=  2'b00 ^ 2'b01;
        //159 reversed
        error("Setting Error : The CP_PMA_CH1_REG_CDR_TURBO_MODE_TIMER is set to %s. Legal values is 0,1,2,3",CP_PMA_CH1_REG_CDR_TURBO_MODE_TIMER);
    }

//initial config body1027 end


//initial config body1028 begin
    if (CP_PMA_CH1_REG_CDR_LOCK_TIMER == "0_8U")
    {
        SC_PMA_CH1_REG_CDR_LOCK_TIMER_158_156  :=  3'b000 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_LOCK_TIMER == "1_2U")
    {
        SC_PMA_CH1_REG_CDR_LOCK_TIMER_158_156  :=  3'b001 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_LOCK_TIMER == "1_6U")
    {
        SC_PMA_CH1_REG_CDR_LOCK_TIMER_158_156  :=  3'b010 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_LOCK_TIMER == "2_4U")
    {
        SC_PMA_CH1_REG_CDR_LOCK_TIMER_158_156  :=  3'b011 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_LOCK_TIMER == "3_2U")
    {
        SC_PMA_CH1_REG_CDR_LOCK_TIMER_158_156  :=  3'b100 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_LOCK_TIMER == "4_8U")
    {
        SC_PMA_CH1_REG_CDR_LOCK_TIMER_158_156  :=  3'b101 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_LOCK_TIMER == "12_8U")
    {
        SC_PMA_CH1_REG_CDR_LOCK_TIMER_158_156  :=  3'b110 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_LOCK_TIMER == "25_6U")
    {
        SC_PMA_CH1_REG_CDR_LOCK_TIMER_158_156  :=  3'b111 ^ 3'b001;
        //156 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_LOCK_TIMER_158_156  :=  3'b000 ^ 3'b001;
        //156 reversed
        error("Setting Error : The CP_PMA_CH1_REG_CDR_LOCK_TIMER is set to %s. Legal values is 0_8U,1_2U,1_6U,2_4U,3_2U,4_8U,12_8U,25_6U",CP_PMA_CH1_REG_CDR_LOCK_TIMER);
    }

//initial config body1028 end


//initial config body1029 begin
    if (CP_PMA_CH1_REG_CDR_RX_PI_FORCE_D >= 0 && CP_PMA_CH1_REG_CDR_RX_PI_FORCE_D <= 255)
    {
        SC_PMA_CH1_REG_CDR_RX_PI_FORCE_D_155_148  :=  CP_PMA_CH1_REG_CDR_RX_PI_FORCE_D;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_RX_PI_FORCE_D_155_148  :=  0;
        error("Setting Error : The CP_PMA_CH1_REG_CDR_RX_PI_FORCE_D is set to %d. Legal values is 0 to 255",CP_PMA_CH1_REG_CDR_RX_PI_FORCE_D);
    }

//initial config body1029 end


//initial config body1030 begin
    if (CP_PMA_CH1_REG_CDR_RX_PI_FORCE_SEL == 0)
    {
        SC_PMA_CH1_REG_CDR_RX_PI_FORCE_SEL_147   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_RX_PI_FORCE_SEL == 1)
    {
        SC_PMA_CH1_REG_CDR_RX_PI_FORCE_SEL_147   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_RX_PI_FORCE_SEL_147  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_CDR_RX_PI_FORCE_SEL is set to %s. Legal values is 0,1",CP_PMA_CH1_REG_CDR_RX_PI_FORCE_SEL);
    }

//initial config body1030 end


//initial config body1031 begin
    if (CP_PMA_CH1_REG_CDR_LOCK_RST_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_CDR_LOCK_RST_OW_146   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_LOCK_RST_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_CDR_LOCK_RST_OW_146   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_LOCK_RST_OW_146  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_CDR_LOCK_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_CDR_LOCK_RST_OW);
    }

//initial config body1031 end


//initial config body1032 begin
    if (CP_PMA_CH1_REG_CDR_LOCK_RST == "FALSE")
    {
        SC_PMA_CH1_REG_CDR_LOCK_RST_145   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_LOCK_RST == "TRUE")
    {
        SC_PMA_CH1_REG_CDR_LOCK_RST_145   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_LOCK_RST_145  :=  1'b0;
        error("Setting Error : CP_PMA_CH1_REG_CDR_LOCK_RST is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_CDR_LOCK_RST);
    }

//initial config body1032 end


//initial config body1033 begin
    if (CP_PMA_CH1_REG_CDR_PROP_RST_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_CDR_PROP_RST_OW_144   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_RST_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_CDR_PROP_RST_OW_144   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_PROP_RST_OW_144  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_CDR_PROP_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_CDR_PROP_RST_OW);
    }

//initial config body1033 end


//initial config body1034 begin
    if (CP_PMA_CH1_REG_CDR_PROP_RST == "FALSE")
    {
        SC_PMA_CH1_REG_CDR_PROP_RST_143   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_RST == "TRUE")
    {
        SC_PMA_CH1_REG_CDR_PROP_RST_143   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_PROP_RST_143  :=  1'b0;
        error("Setting Error : CP_PMA_CH1_REG_CDR_PROP_RST is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_CDR_PROP_RST);
    }

//initial config body1034 end


//initial config body1035 begin
    if (CP_PMA_CH1_REG_CDR_INT_RST_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_CDR_INT_RST_OW_142   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_RST_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_CDR_INT_RST_OW_142   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_INT_RST_OW_142  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_CDR_INT_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_CDR_INT_RST_OW);
    }

//initial config body1035 end


//initial config body1036 begin
    if (CP_PMA_CH1_REG_CDR_INT_RST == "FALSE")
    {
        SC_PMA_CH1_REG_CDR_INT_RST_141   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_RST == "TRUE")
    {
        SC_PMA_CH1_REG_CDR_INT_RST_141   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_INT_RST_141  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_CDR_INT_RST is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_CDR_INT_RST);
    }

//initial config body1036 end


//initial config body1037 begin
    if (CP_PMA_CH1_REG_CDR_INT_SAT_MIN >= 0 && CP_PMA_CH1_REG_CDR_INT_SAT_MIN <= 1023)
    {
        SC_PMA_CH1_REG_CDR_INT_SAT_MIN_140_131   :=  to_unsigned( CP_PMA_CH1_REG_CDR_INT_SAT_MIN , 10) ^  10'b0000100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_INT_SAT_MIN_140_131  :=  0 ^ 10'b0000100000;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_CDR_INT_SAT_MIN is set to %d. Legal values is 0 to 1023",CP_PMA_CH1_REG_CDR_INT_SAT_MIN);
    }

//initial config body1037 end


//initial config body1038 begin
    if (CP_PMA_CH1_REG_CDR_INT_SAT_MAX >= 0 && CP_PMA_CH1_REG_CDR_INT_SAT_MAX <= 1023)
    {
        SC_PMA_CH1_REG_CDR_INT_SAT_MAX_130_121   :=  to_unsigned( CP_PMA_CH1_REG_CDR_INT_SAT_MAX , 10) ^  10'b1111100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_INT_SAT_MAX_130_121  :=  0 ^ 10'b1111100000;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_CDR_INT_SAT_MAX is set to %d. Legal values is 0 to 1023",CP_PMA_CH1_REG_CDR_INT_SAT_MAX);
    }

//initial config body1038 end


//initial config body1039 begin
    if (CP_PMA_CH1_REG_CDR_INT_TURBO_GAIN == 0)
    {
        SC_PMA_CH1_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b000 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_TURBO_GAIN == 1)
    {
        SC_PMA_CH1_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b001 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_TURBO_GAIN == 2)
    {
        SC_PMA_CH1_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b010 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_TURBO_GAIN == 3)
    {
        SC_PMA_CH1_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b011 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_TURBO_GAIN == 4)
    {
        SC_PMA_CH1_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b100 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_TURBO_GAIN == 5)
    {
        SC_PMA_CH1_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b101 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_TURBO_GAIN == 6)
    {
        SC_PMA_CH1_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b110 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_TURBO_GAIN == 7)
    {
        SC_PMA_CH1_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b111 ^ 3'b110;
        //120_119 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_INT_TURBO_GAIN_120_118  :=  3'b000 ^ 3'b110;
        //120_119 reversed
        error("Setting Error : The CP_PMA_CH1_REG_CDR_INT_TURBO_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH1_REG_CDR_INT_TURBO_GAIN);
    }

//initial config body1039 end


//initial config body1040 begin
    if (CP_PMA_CH1_REG_CDR_INT_GAIN == 0)
    {
        SC_PMA_CH1_REG_CDR_INT_GAIN_117_115   := 3'b000 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_GAIN == 1)
    {
        SC_PMA_CH1_REG_CDR_INT_GAIN_117_115   := 3'b001 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_GAIN == 2)
    {
        SC_PMA_CH1_REG_CDR_INT_GAIN_117_115   := 3'b010 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_GAIN == 3)
    {
        SC_PMA_CH1_REG_CDR_INT_GAIN_117_115   := 3'b011 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_GAIN == 4)
    {
        SC_PMA_CH1_REG_CDR_INT_GAIN_117_115   := 3'b100 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_GAIN == 5)
    {
        SC_PMA_CH1_REG_CDR_INT_GAIN_117_115   := 3'b101 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_GAIN == 6)
    {
        SC_PMA_CH1_REG_CDR_INT_GAIN_117_115   := 3'b110 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_INT_GAIN == 7)
    {
        SC_PMA_CH1_REG_CDR_INT_GAIN_117_115   := 3'b111 ^ 3'b101;
        //117_115 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_INT_GAIN_117_115  :=  3'b000 ^ 3'b101;
        //117_115 reversed
        error("Setting Error : The CP_PMA_CH1_REG_CDR_INT_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH1_REG_CDR_INT_GAIN);
    }

//initial config body1040 end


//initial config body1041 begin
    if (CP_PMA_CH1_REG_CDR_PROP_TURBO_GAIN == 0)
    {
        SC_PMA_CH1_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b000 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_TURBO_GAIN == 1)
    {
        SC_PMA_CH1_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b001 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_TURBO_GAIN == 2)
    {
        SC_PMA_CH1_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b010 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_TURBO_GAIN == 3)
    {
        SC_PMA_CH1_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b011 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_TURBO_GAIN == 4)
    {
        SC_PMA_CH1_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b100 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_TURBO_GAIN == 5)
    {
        SC_PMA_CH1_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b101 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_TURBO_GAIN == 6)
    {
        SC_PMA_CH1_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b110 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_TURBO_GAIN == 7)
    {
        SC_PMA_CH1_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b111 ^ 3'b110;
        //114_113 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_PROP_TURBO_GAIN_114_112  :=  3'b000 ^ 3'b110;
        //114_113 reversed
        error("Setting Error : The CP_PMA_CH1_REG_CDR_PROP_TURBO_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH1_REG_CDR_PROP_TURBO_GAIN);
    }

//initial config body1041 end


//initial config body1042 begin
    if (CP_PMA_CH1_REG_CDR_PROP_GAIN == 0)
    {
        SC_PMA_CH1_REG_CDR_PROP_GAIN_111_109   := 3'b000 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_GAIN == 1)
    {
        SC_PMA_CH1_REG_CDR_PROP_GAIN_111_109   := 3'b001 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_GAIN == 2)
    {
        SC_PMA_CH1_REG_CDR_PROP_GAIN_111_109   := 3'b010 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_GAIN == 3)
    {
        SC_PMA_CH1_REG_CDR_PROP_GAIN_111_109   := 3'b011 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_GAIN == 4)
    {
        SC_PMA_CH1_REG_CDR_PROP_GAIN_111_109   := 3'b100 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_GAIN == 5)
    {
        SC_PMA_CH1_REG_CDR_PROP_GAIN_111_109   := 3'b101 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_GAIN == 6)
    {
        SC_PMA_CH1_REG_CDR_PROP_GAIN_111_109   := 3'b110 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH1_REG_CDR_PROP_GAIN == 7)
    {
        SC_PMA_CH1_REG_CDR_PROP_GAIN_111_109   := 3'b111 ^ 3'b101;
        //111_109 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_CDR_PROP_GAIN_111_109  :=  3'b000 ^ 3'b101;
        //111_109 reversed
        error("Setting Error : The CP_PMA_CH1_REG_CDR_PROP_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH1_REG_CDR_PROP_GAIN);
    }

//initial config body1042 end


//initial config body1043 begin
    if (CP_PMA_CH1_REG_CHK_COUNTER_EN == "FALSE")
    {
        SC_PMA_CH1_REG_CHK_COUNTER_EN_108   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_CHK_COUNTER_EN == "TRUE")
    {
        SC_PMA_CH1_REG_CHK_COUNTER_EN_108   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_CHK_COUNTER_EN_108  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_CHK_COUNTER_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_CHK_COUNTER_EN);
    }

//initial config body1043 end


//initial config body1044 begin
    if (CP_PMA_CH1_REG_LOAD_ERR_CNT == "DISABLE")
    {
        SC_PMA_CH1_REG_LOAD_ERR_CNT_107   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_LOAD_ERR_CNT == "ENABLE")
    {
        SC_PMA_CH1_REG_LOAD_ERR_CNT_107   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_LOAD_ERR_CNT_107  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_LOAD_ERR_CNT is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_LOAD_ERR_CNT);
    }

//initial config body1044 end


//initial config body1045 begin
    if (CP_PMA_CH1_REG_BIST_CHK_PAT_SEL == "PRBS")
    {
        SC_PMA_CH1_REG_BIST_CHK_PAT_SEL_106   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_BIST_CHK_PAT_SEL == "CONSTANT")
    {
        SC_PMA_CH1_REG_BIST_CHK_PAT_SEL_106   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_BIST_CHK_PAT_SEL_106  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_BIST_CHK_PAT_SEL is set to %s. Legal values is PRBS,CONSTANT",CP_PMA_CH1_REG_BIST_CHK_PAT_SEL);
    }

//initial config body1045 end


//initial config body1046 begin
    if (CP_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b00 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b01 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b10 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b11 ^ 2'b11;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL_105_104  :=  2'b00 ^ 2'b11;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH1_REG_PRBS_CHK_WIDTH_SEL);
    }

//initial config body1046 end


//initial config body1047 begin
    if (CP_PMA_CH1_REG_PRBS_CHK_EN == "FALSE")
    {
        SC_PMA_CH1_REG_PRBS_CHK_EN_103   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_PRBS_CHK_EN == "TRUE")
    {
        SC_PMA_CH1_REG_PRBS_CHK_EN_103   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_PRBS_CHK_EN_103  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_PRBS_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_PRBS_CHK_EN);
    }

//initial config body1047 end


//initial config body1048 begin
    if (CP_PMA_CH1_REG_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH1_REG_PRBS_SEL_102_101   := 2'b00;
    }
    else if (CP_PMA_CH1_REG_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH1_REG_PRBS_SEL_102_101   := 2'b01;
    }
    else if (CP_PMA_CH1_REG_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH1_REG_PRBS_SEL_102_101   := 2'b10;
    }
    else if (CP_PMA_CH1_REG_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH1_REG_PRBS_SEL_102_101   := 2'b11;
    }
    else
    {
        SC_PMA_CH1_REG_PRBS_SEL_102_101  :=  2'b00;
        error("Setting Error : The CP_PMA_CH1_REG_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_PMA_CH1_REG_PRBS_SEL);
    }

//initial config body1048 end


//initial config body1049 begin
    if (CP_PMA_CH1_REG_UDP_CHK_EN == "FALSE")
    {
        SC_PMA_CH1_REG_UDP_CHK_EN_100   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_UDP_CHK_EN == "TRUE")
    {
        SC_PMA_CH1_REG_UDP_CHK_EN_100   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_UDP_CHK_EN_100  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_UDP_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_UDP_CHK_EN);
    }

//initial config body1049 end


//initial config body1050 begin
    if (CP_PMA_CH1_REG_RX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH1_REG_RX_ERR_INSERT_99   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH1_REG_RX_ERR_INSERT_99   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_ERR_INSERT_99  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_ERR_INSERT is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_RX_ERR_INSERT);
    }

//initial config body1050 end


//initial config body1051 begin
    if (CP_PMA_CH1_REG_RX_DATA_POLARITY == "NORMAL")
    {
        SC_PMA_CH1_REG_RX_DATA_POLARITY_98   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_DATA_POLARITY == "REVERSE")
    {
        SC_PMA_CH1_REG_RX_DATA_POLARITY_98   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_DATA_POLARITY_98  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_DATA_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_PMA_CH1_REG_RX_DATA_POLARITY);
    }

//initial config body1051 end


//initial config body1052 begin
    if (CP_PMA_CH1_REG_TXCLK_SEL == "PLL")
    {
        SC_PMA_CH1_REG_TXCLK_SEL_97   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TXCLK_SEL == "RXCLK")
    {
        SC_PMA_CH1_REG_TXCLK_SEL_97   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TXCLK_SEL_97  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TXCLK_SEL is set to %s. Legal values is PLL,RXCLK",CP_PMA_CH1_REG_TXCLK_SEL);
    }

//initial config body1052 end


//initial config body1053 begin
    if (CP_PMA_CH1_REG_RX_TX2RX_PLPBK_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_TX2RX_PLPBK_EN_96   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_TX2RX_PLPBK_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_TX2RX_PLPBK_EN_96   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_TX2RX_PLPBK_EN_96  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_TX2RX_PLPBK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_TX2RX_PLPBK_EN);
    }

//initial config body1053 end


//initial config body1054 begin
    if (CP_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_EN_95   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_EN_95   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_EN_95  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_EN);
    }

//initial config body1054 end


//initial config body1055 begin
    if (CP_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N == "FALSE")
    {
        SC_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_94   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N == "TRUE")
    {
        SC_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_94   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N_94  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH1_REG_RX_TX2RX_PLPBK_RST_N);
    }

//initial config body1055 end


//initial config body1056 begin
    if (CP_PMA_CH1_REG_TX_RATE_EN == "FALSE")
    {
        SC_PMA_CH1_REG_TX_RATE_EN_93   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_TX_RATE_EN == "TRUE")
    {
        SC_PMA_CH1_REG_TX_RATE_EN_93   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_TX_RATE_EN_93  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_TX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_TX_RATE_EN);
    }

//initial config body1056 end


//initial config body1057 begin
    if (CP_PMA_CH1_REG_TX_RATE == "DIV8")
    {
        SC_PMA_CH1_REG_TX_RATE_92_90   := 3'd0 ^ 3'b011;
        //91_90 reversed;
    }
    else if (CP_PMA_CH1_REG_TX_RATE == "DIV4")
    {
        SC_PMA_CH1_REG_TX_RATE_92_90   := 3'd1 ^ 3'b011;
        //91_90 reversed;
    }
    else if (CP_PMA_CH1_REG_TX_RATE == "DIV2")
    {
        SC_PMA_CH1_REG_TX_RATE_92_90   := 3'd2 ^ 3'b011;
        //91_90 reversed;
    }
    else if (CP_PMA_CH1_REG_TX_RATE == "DIV1")
    {
        SC_PMA_CH1_REG_TX_RATE_92_90   := 3'd3 ^ 3'b011;
        //91_90 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_TX_RATE_92_90  :=  3'd0 ^ 3'b011;
        //91_90 reversed
        error("Setting Error : The CP_PMA_CH1_REG_TX_RATE is set to %s. Legal values is DIV8,DIV4,DIV2,DIV1",CP_PMA_CH1_REG_TX_RATE);
    }

//initial config body1057 end


//initial config body1058 begin
    if (CP_PMA_CH1_REG_RX_ICTRL_PREDRV == "87_5PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PREDRV_89_88   := 2'b00 ^ 2'b01;
        //88 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_PREDRV == "100PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PREDRV_89_88   := 2'b01 ^ 2'b01;
        //88 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_PREDRV == "112_5PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PREDRV_89_88   := 2'b10 ^ 2'b01;
        //88 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_PREDRV == "125PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PREDRV_89_88   := 2'b11 ^ 2'b01;
        //88 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_ICTRL_PREDRV_89_88  :=  2'b00 ^ 2'b01;
        //88 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_ICTRL_PREDRV is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH1_REG_RX_ICTRL_PREDRV);
    }

//initial config body1058 end


//initial config body1059 begin
    if (CP_PMA_CH1_REG_RX_ICTRL_DCC == "87_5PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_DCC_87_86   := 2'b00 ^ 2'b01;
        //86 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_DCC == "100PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_DCC_87_86   := 2'b01 ^ 2'b01;
        //86 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_DCC == "112_5PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_DCC_87_86   := 2'b10 ^ 2'b01;
        //86 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_DCC == "125PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_DCC_87_86   := 2'b11 ^ 2'b01;
        //86 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_ICTRL_DCC_87_86  :=  2'b00 ^ 2'b01;
        //86 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_ICTRL_DCC is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH1_REG_RX_ICTRL_DCC);
    }

//initial config body1059 end


//initial config body1060 begin
    if (CP_PMA_CH1_REG_RX_ICTRL_PI == "87_5PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PI_85_84   := 2'b00 ^ 2'b01;
        //84 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_PI == "100PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PI_85_84   := 2'b01 ^ 2'b01;
        //84 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_PI == "112_5PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PI_85_84   := 2'b10 ^ 2'b01;
        //84 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_PI == "125PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PI_85_84   := 2'b11 ^ 2'b01;
        //84 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_ICTRL_PI_85_84  :=  2'b00 ^ 2'b01;
        //84 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_ICTRL_PI is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH1_REG_RX_ICTRL_PI);
    }

//initial config body1060 end


//initial config body1061 begin
    if (CP_PMA_CH1_REG_RX_ICTRL_PIBUF == "87_5PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PIBUF_83_82   := 2'b00 ^ 2'b01;
        //82 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_PIBUF == "100PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PIBUF_83_82   := 2'b01 ^ 2'b01;
        //82 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_PIBUF == "112_5PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PIBUF_83_82   := 2'b10 ^ 2'b01;
        //82 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_PIBUF == "125PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PIBUF_83_82   := 2'b11 ^ 2'b01;
        //82 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_ICTRL_PIBUF_83_82  :=  2'b00 ^ 2'b01;
        //82 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_ICTRL_PIBUF is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH1_REG_RX_ICTRL_PIBUF);
    }

//initial config body1061 end


//initial config body1062 begin
    if (CP_PMA_CH1_REG_RX_ICTRL_SLICER == "87_5PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_SLICER_81_80   := 2'b00 ^ 2'b01;
        //80 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_SLICER == "100PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_SLICER_81_80   := 2'b01 ^ 2'b01;
        //80 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_SLICER == "112_5PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_SLICER_81_80   := 2'b10 ^ 2'b01;
        //80 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_SLICER == "125PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_SLICER_81_80   := 2'b11 ^ 2'b01;
        //80 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_ICTRL_SLICER_81_80  :=  2'b00 ^ 2'b01;
        //80 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_ICTRL_SLICER is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH1_REG_RX_ICTRL_SLICER);
    }

//initial config body1062 end


//initial config body1063 begin
    if (CP_PMA_CH1_REG_RX_ICTRL_PREAMP == "87_5PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PREAMP_79_78   := 2'b00 ^ 2'b01;
        //78 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_PREAMP == "100PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PREAMP_79_78   := 2'b01 ^ 2'b01;
        //78 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_PREAMP == "112_5PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PREAMP_79_78   := 2'b10 ^ 2'b01;
        //78 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_PREAMP == "125PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_PREAMP_79_78   := 2'b11 ^ 2'b01;
        //78 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_ICTRL_PREAMP_79_78  :=  2'b00 ^ 2'b01;
        //78 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_ICTRL_PREAMP is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH1_REG_RX_ICTRL_PREAMP);
    }

//initial config body1063 end


//initial config body1064 begin
    if (CP_PMA_CH1_REG_RX_ICTRL_TRX == "87_5PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_TRX_75_74   := 2'b00 ^ 2'b01;
        //74 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_TRX == "100PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_TRX_75_74   := 2'b01 ^ 2'b01;
        //74 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_TRX == "112_5PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_TRX_75_74   := 2'b10 ^ 2'b01;
        //74 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_ICTRL_TRX == "125PCT")
    {
        SC_PMA_CH1_REG_RX_ICTRL_TRX_75_74   := 2'b11 ^ 2'b01;
        //74 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_ICTRL_TRX_75_74  :=  2'b00 ^ 2'b01;
        //74 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_ICTRL_TRX is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH1_REG_RX_ICTRL_TRX);
    }

//initial config body1064 end


//initial config body1065 begin
    if (CP_PMA_CH1_REG_RX_DCC_IC_TX >= 0 && CP_PMA_CH1_REG_RX_DCC_IC_TX <= 3)
    {
        SC_PMA_CH1_REG_RX_DCC_IC_TX_73_72   :=  to_unsigned( CP_PMA_CH1_REG_RX_DCC_IC_TX , 2) ^  2'b11;
        //73_72 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_DCC_IC_TX_73_72  :=  0 ^ 2'b11;
        //73_72 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_DCC_IC_TX is set to %d. Legal values is 0 to 3",CP_PMA_CH1_REG_RX_DCC_IC_TX);
    }

//initial config body1065 end


//initial config body1066 begin
    if (CP_PMA_CH1_REG_RX_DCC_IC_RX >= 0 && CP_PMA_CH1_REG_RX_DCC_IC_RX <= 3)
    {
        SC_PMA_CH1_REG_RX_DCC_IC_RX_71_70   :=  to_unsigned( CP_PMA_CH1_REG_RX_DCC_IC_RX , 2) ^  2'b11;
        //71_70 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_DCC_IC_RX_71_70  :=  0 ^ 2'b11;
        //71_70 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_DCC_IC_RX is set to %d. Legal values is 0 to 3",CP_PMA_CH1_REG_RX_DCC_IC_RX);
    }

//initial config body1066 end


//initial config body1067 begin
    if (CP_PMA_CH1_REG_RX_PIBUF_IC >= 0 && CP_PMA_CH1_REG_RX_PIBUF_IC <= 3)
    {
        SC_PMA_CH1_REG_RX_PIBUF_IC_68_67   :=  to_unsigned( CP_PMA_CH1_REG_RX_PIBUF_IC , 2) ^  2'b10;
        //68 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_PIBUF_IC_68_67  :=  0 ^ 2'b10;
        //68 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_PIBUF_IC is set to %d. Legal values is 0 to 3",CP_PMA_CH1_REG_RX_PIBUF_IC);
    }

//initial config body1067 end


//initial config body1068 begin
    if (CP_PMA_CH1_REG_RX_PCLK_EDGE_SEL == "POS_EDGE")
    {
        SC_PMA_CH1_REG_RX_PCLK_EDGE_SEL_66   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_PCLK_EDGE_SEL == "NEG_EDGE")
    {
        SC_PMA_CH1_REG_RX_PCLK_EDGE_SEL_66   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_PCLK_EDGE_SEL_66  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_PCLK_EDGE_SEL is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_PMA_CH1_REG_RX_PCLK_EDGE_SEL);
    }

//initial config body1068 end


//initial config body1069 begin
    if (CP_PMA_CH1_REG_RX_PREAMP_IC >= 0 && CP_PMA_CH1_REG_RX_PREAMP_IC <= 4095)
    {
        SC_PMA_CH1_REG_RX_PREAMP_IC_65_54   :=  to_unsigned( CP_PMA_CH1_REG_RX_PREAMP_IC , 12) ^  12'b010101010111;
        // reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_PREAMP_IC_65_54  :=  0 ^ 12'b010101010111;
        // reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_PREAMP_IC is set to %d. Legal values is 0 to 4095",CP_PMA_CH1_REG_RX_PREAMP_IC);
    }

//initial config body1069 end


//initial config body1070 begin
    if (CP_PMA_CH1_REG_RX_EQ_OFF == "FALSE")
    {
        SC_PMA_CH1_REG_RX_EQ_OFF_53   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_EQ_OFF == "TRUE")
    {
        SC_PMA_CH1_REG_RX_EQ_OFF_53   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_EQ_OFF_53  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_EQ_OFF is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_EQ_OFF);
    }

//initial config body1070 end


//initial config body1071 begin
    if (CP_PMA_CH1_REG_RX_ICTRL_SIGDET >= 0 && CP_PMA_CH1_REG_RX_ICTRL_SIGDET <= 15)
    {
        SC_PMA_CH1_REG_RX_ICTRL_SIGDET_52_49   :=  to_unsigned( CP_PMA_CH1_REG_RX_ICTRL_SIGDET , 4) ^  4'b0101;
        //51,49 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_ICTRL_SIGDET_52_49  :=  0 ^ 4'b0101;
        //51,49 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_ICTRL_SIGDET is set to %d. Legal values is 0 to 15",CP_PMA_CH1_REG_RX_ICTRL_SIGDET);
    }

//initial config body1071 end


//initial config body1072 begin
    if (CP_PMA_CH1_REG_RX_RES_TRIM_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_RES_TRIM_EN_44   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_RES_TRIM_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_RES_TRIM_EN_44   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_RES_TRIM_EN_44  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_RES_TRIM_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_RES_TRIM_EN);
    }

//initial config body1072 end


//initial config body1073 begin
    if (CP_PMA_CH1_REG_RX_RES_TRIM >= 0 && CP_PMA_CH1_REG_RX_RES_TRIM <= 63)
    {
        SC_PMA_CH1_REG_RX_RES_TRIM_43_38   :=  to_unsigned( CP_PMA_CH1_REG_RX_RES_TRIM , 6) ^  6'b110011;
        //43_42,39_38 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_RES_TRIM_43_38  :=  0 ^ 6'b110011;
        //43_42,39_38 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_RES_TRIM is set to %d. Legal values is 0 to 63",CP_PMA_CH1_REG_RX_RES_TRIM);
    }

//initial config body1073 end


//initial config body1074 begin
    if (CP_PMA_CH1_REG_RX_RATE_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_RATE_EN_37   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_RATE_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_RATE_EN_37   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_RATE_EN_37  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_RATE_EN);
    }

//initial config body1074 end


//initial config body1075 begin
    if (CP_PMA_CH1_REG_RX_RATE == "DIV8")
    {
        SC_PMA_CH1_REG_RX_RATE_36_34   := 3'd0 ^ 3'b011;
        //35_34 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_RATE == "DIV4")
    {
        SC_PMA_CH1_REG_RX_RATE_36_34   := 3'd1 ^ 3'b011;
        //35_34 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_RATE == "DIV2")
    {
        SC_PMA_CH1_REG_RX_RATE_36_34   := 3'd2 ^ 3'b011;
        //35_34 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_RATE == "DIV1")
    {
        SC_PMA_CH1_REG_RX_RATE_36_34   := 3'd3 ^ 3'b011;
        //35_34 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_RATE_36_34  :=  3'd0 ^ 3'b011;
        //35_34 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_RATE is set to %s. Legal values is DIV8,DIV4,DIV2,DIV1",CP_PMA_CH1_REG_RX_RATE);
    }

//initial config body1075 end


//initial config body1076 begin
    if (CP_PMA_CH1_REG_RX_BUSWIDTH_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_BUSWIDTH_EN_33   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_BUSWIDTH_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_BUSWIDTH_EN_33   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_BUSWIDTH_EN_33  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_BUSWIDTH_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_BUSWIDTH_EN);
    }

//initial config body1076 end


//initial config body1077 begin
    if (CP_PMA_CH1_REG_RX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH1_REG_RX_BUSWIDTH_32_30   := 3'd0 ^ 3'b011;
        //31_30 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH1_REG_RX_BUSWIDTH_32_30   := 3'd1 ^ 3'b011;
        //31_30 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH1_REG_RX_BUSWIDTH_32_30   := 3'd2 ^ 3'b011;
        //31_30 reversed;
    }
    else if (CP_PMA_CH1_REG_RX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH1_REG_RX_BUSWIDTH_32_30   := 3'd3 ^ 3'b011;
        //31_30 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_BUSWIDTH_32_30  :=  3'd0 ^ 3'b011;
        //31_30 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH1_REG_RX_BUSWIDTH);
    }

//initial config body1077 end


//initial config body1078 begin
    if (CP_PMA_CH1_REG_RX_EQ_R_SET >= 0 && CP_PMA_CH1_REG_RX_EQ_R_SET <= 15)
    {
        SC_PMA_CH1_REG_RX_EQ_R_SET_29_26   :=  to_unsigned( CP_PMA_CH1_REG_RX_EQ_R_SET , 4) ^  4'b1000;
        //29 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_EQ_R_SET_29_26  :=  0 ^ 4'b1000;
        //29 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_EQ_R_SET is set to %d. Legal values is 0 to 15",CP_PMA_CH1_REG_RX_EQ_R_SET);
    }

//initial config body1078 end


//initial config body1079 begin
    if (CP_PMA_CH1_REG_RX_EQ_C_SET >= 0 && CP_PMA_CH1_REG_RX_EQ_C_SET <= 15)
    {
        SC_PMA_CH1_REG_RX_EQ_C_SET_25_22   :=  to_unsigned( CP_PMA_CH1_REG_RX_EQ_C_SET , 4) ^  4'b1000;
        //25 reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_EQ_C_SET_25_22  :=  0 ^ 4'b1000;
        //25 reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_EQ_C_SET is set to %d. Legal values is 0 to 15",CP_PMA_CH1_REG_RX_EQ_C_SET);
    }

//initial config body1079 end


//initial config body1080 begin
    if (CP_PMA_CH1_REG_RX_HIGHZ_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_HIGHZ_EN_21   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_HIGHZ_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_HIGHZ_EN_21   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_HIGHZ_EN_21  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_HIGHZ_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_HIGHZ_EN);
    }

//initial config body1080 end


//initial config body1081 begin
    if (CP_PMA_CH1_REG_RX_HIGHZ == "FALSE")
    {
        SC_PMA_CH1_REG_RX_HIGHZ_20   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_HIGHZ == "TRUE")
    {
        SC_PMA_CH1_REG_RX_HIGHZ_20   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_HIGHZ_20  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_HIGHZ is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_HIGHZ);
    }

//initial config body1081 end


//initial config body1082 begin
    if (CP_PMA_CH1_REG_RX_PCLKSWITCH_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_PCLKSWITCH_EN_19   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_PCLKSWITCH_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_PCLKSWITCH_EN_19   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_PCLKSWITCH_EN_19  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_PCLKSWITCH_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_PCLKSWITCH_EN);
    }

//initial config body1082 end


//initial config body1083 begin
    if (CP_PMA_CH1_REG_RX_PCLKSWITCH == "FALSE")
    {
        SC_PMA_CH1_REG_RX_PCLKSWITCH_18   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_PCLKSWITCH == "TRUE")
    {
        SC_PMA_CH1_REG_RX_PCLKSWITCH_18   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_PCLKSWITCH_18  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_PCLKSWITCH is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_PCLKSWITCH);
    }

//initial config body1083 end


//initial config body1084 begin
    if (CP_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_EN_17   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_EN_17   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_EN_17  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_EN);
    }

//initial config body1084 end


//initial config body1085 begin
    if (CP_PMA_CH1_REG_RX_PCLKSWITCH_RST_N == "FALSE")
    {
        SC_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_16   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_RX_PCLKSWITCH_RST_N == "TRUE")
    {
        SC_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_16   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_PCLKSWITCH_RST_N_16  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_PCLKSWITCH_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_PCLKSWITCH_RST_N);
    }

//initial config body1085 end


//initial config body1086 begin
    if (CP_PMA_CH1_REG_RXPCLK_SLIP_OW == "DISABLE")
    {
        SC_PMA_CH1_REG_RXPCLK_SLIP_OW_15   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RXPCLK_SLIP_OW == "ENABLE")
    {
        SC_PMA_CH1_REG_RXPCLK_SLIP_OW_15   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RXPCLK_SLIP_OW_15  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RXPCLK_SLIP_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH1_REG_RXPCLK_SLIP_OW);
    }

//initial config body1086 end


//initial config body1087 begin
    if (CP_PMA_CH1_REG_RXPCLK_SLIP == "FALSE")
    {
        SC_PMA_CH1_REG_RXPCLK_SLIP_14   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RXPCLK_SLIP == "TRUE")
    {
        SC_PMA_CH1_REG_RXPCLK_SLIP_14   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RXPCLK_SLIP_14  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RXPCLK_SLIP is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RXPCLK_SLIP);
    }

//initial config body1087 end


//initial config body1088 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_RST_N_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_RST_N_EN_13   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_RST_N_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_RST_N_EN_13   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_RST_N_EN_13  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_SIGDET_RST_N_EN);
    }

//initial config body1088 end


//initial config body1089 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_RST_N == "FALSE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_RST_N_12   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_RST_N == "TRUE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_RST_N_12   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_RST_N_12  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_SIGDET_RST_N);
    }

//initial config body1089 end


//initial config body1090 begin
    if (CP_PMA_CH1_REG_RX_CDR_RST_N_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_CDR_RST_N_EN_11   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_CDR_RST_N_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_CDR_RST_N_EN_11   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_CDR_RST_N_EN_11  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_CDR_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_CDR_RST_N_EN);
    }

//initial config body1090 end


//initial config body1091 begin
    if (CP_PMA_CH1_REG_RX_CDR_RST_N == "FALSE")
    {
        SC_PMA_CH1_REG_RX_CDR_RST_N_10   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_RX_CDR_RST_N == "TRUE")
    {
        SC_PMA_CH1_REG_RX_CDR_RST_N_10   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_CDR_RST_N_10  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_CDR_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_CDR_RST_N);
    }

//initial config body1091 end


//initial config body1092 begin
    if (CP_PMA_CH1_REG_RX_DCC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_DCC_RST_N_EN_9   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_DCC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_DCC_RST_N_EN_9   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_DCC_RST_N_EN_9  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_DCC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_DCC_RST_N_EN);
    }

//initial config body1092 end


//initial config body1093 begin
    if (CP_PMA_CH1_REG_RX_DCC_RST_N == "FALSE")
    {
        SC_PMA_CH1_REG_RX_DCC_RST_N_8   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH1_REG_RX_DCC_RST_N == "TRUE")
    {
        SC_PMA_CH1_REG_RX_DCC_RST_N_8   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH1_REG_RX_DCC_RST_N_8  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH1_REG_RX_DCC_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_DCC_RST_N);
    }

//initial config body1093 end


//initial config body1094 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_PD_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_PD_EN_7   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_PD_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_SIGDET_PD_EN_7   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_PD_EN_7  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_SIGDET_PD_EN);
    }

//initial config body1094 end


//initial config body1095 begin
    if (CP_PMA_CH1_REG_RX_SIGDET_PD == "ON")
    {
        SC_PMA_CH1_REG_RX_SIGDET_PD_6   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_SIGDET_PD == "OFF")
    {
        SC_PMA_CH1_REG_RX_SIGDET_PD_6   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_SIGDET_PD_6  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_SIGDET_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH1_REG_RX_SIGDET_PD);
    }

//initial config body1095 end


//initial config body1096 begin
    if (CP_PMA_CH1_REG_RX_DATAPATH_PD_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_DATAPATH_PD_EN_5   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_DATAPATH_PD_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_DATAPATH_PD_EN_5   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_DATAPATH_PD_EN_5  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_DATAPATH_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_DATAPATH_PD_EN);
    }

//initial config body1096 end


//initial config body1097 begin
    if (CP_PMA_CH1_REG_RX_DATAPATH_PD == "ON")
    {
        SC_PMA_CH1_REG_RX_DATAPATH_PD_4   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_DATAPATH_PD == "OFF")
    {
        SC_PMA_CH1_REG_RX_DATAPATH_PD_4   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_DATAPATH_PD_4  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_DATAPATH_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH1_REG_RX_DATAPATH_PD);
    }

//initial config body1097 end


//initial config body1098 begin
    if (CP_PMA_CH1_REG_RX_CLKPATH_PD_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_CLKPATH_PD_EN_3   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_CLKPATH_PD_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_CLKPATH_PD_EN_3   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_CLKPATH_PD_EN_3  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_CLKPATH_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_CLKPATH_PD_EN);
    }

//initial config body1098 end


//initial config body1099 begin
    if (CP_PMA_CH1_REG_RX_CLKPATH_PD == "ON")
    {
        SC_PMA_CH1_REG_RX_CLKPATH_PD_2   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_CLKPATH_PD == "OFF")
    {
        SC_PMA_CH1_REG_RX_CLKPATH_PD_2   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_CLKPATH_PD_2  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_CLKPATH_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH1_REG_RX_CLKPATH_PD);
    }

//initial config body1099 end


//initial config body1100 begin
    if (CP_PMA_CH1_REG_RX_PD_EN == "FALSE")
    {
        SC_PMA_CH1_REG_RX_PD_EN_1   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_PD_EN == "TRUE")
    {
        SC_PMA_CH1_REG_RX_PD_EN_1   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_PD_EN_1  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH1_REG_RX_PD_EN);
    }

//initial config body1100 end


//initial config body1101 begin
    if (CP_PMA_CH1_REG_RX_PD == "ON")
    {
        SC_PMA_CH1_REG_RX_PD_0   := 1'b0;
    }
    else if (CP_PMA_CH1_REG_RX_PD == "OFF")
    {
        SC_PMA_CH1_REG_RX_PD_0   := 1'b1;
    }
    else
    {
        SC_PMA_CH1_REG_RX_PD_0  :=  1'b0;
        error("Setting Error : The CP_PMA_CH1_REG_RX_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH1_REG_RX_PD);
    }

//initial config body1101 end


//initial config body1102 begin
    if (CP_PMA_CH2_REG_RESERVED_556_552 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_556_552  :=  5'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_556_552 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_556_552  :=  5'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_556_552  :=  5'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_556_552 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_556_552);
    }

//initial config body1102 end


//initial config body1103 begin
    if (CP_PMA_CH2_REG_RESERVED_550_549 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_550_549  :=  2'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_550_549 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_550_549  :=  2'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_550_549  :=  2'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_550_549 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_550_549);
    }

//initial config body1103 end


//initial config body1104 begin
    if (CP_PMA_CH2_REG_RESERVED_506_505 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_506_505  :=  2'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_506_505 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_506_505  :=  2'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_506_505  :=  2'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_506_505 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_506_505);
    }

//initial config body1104 end


//initial config body1105 begin
    if (CP_PMA_CH2_REG_RESERVED_502_499 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_502_499  :=  4'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_502_499 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_502_499  :=  4'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_502_499  :=  4'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_502_499 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_502_499);
    }

//initial config body1105 end


//initial config body1106 begin
    if (CP_PMA_CH2_REG_RESERVED_452 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_452  :=  1'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_452 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_452  :=  1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_452  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_452 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_452);
    }

//initial config body1106 end


//initial config body1107 begin
    if (CP_PMA_CH2_REG_RESERVED_376 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_376  :=  1'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_376 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_376  :=  1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_376  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_376 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_376);
    }

//initial config body1107 end


//initial config body1108 begin
    if (CP_PMA_CH2_REG_RESERVED_373 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_373  :=  1'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_373 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_373  :=  1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_373  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_373 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_373);
    }

//initial config body1108 end


//initial config body1109 begin
    if (CP_PMA_CH2_REG_RESERVED_354_349 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_354_349  :=  6'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_354_349 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_354_349  :=  6'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_354_349  :=  6'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_354_349 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_354_349);
    }

//initial config body1109 end


//initial config body1110 begin
    if (CP_PMA_CH2_REG_RESERVED_348_341 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_348_341  :=  8'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_348_341 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_348_341  :=  8'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_348_341  :=  8'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_348_341 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_348_341);
    }

//initial config body1110 end


//initial config body1111 begin
    if (CP_PMA_CH2_REG_RESERVED_340_333 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_340_333  :=  8'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_340_333 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_340_333  :=  8'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_340_333  :=  8'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_340_333 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_340_333);
    }

//initial config body1111 end


//initial config body1112 begin
    if (CP_PMA_CH2_REG_RESERVED_332_325 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_332_325  :=  8'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_332_325 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_332_325  :=  8'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_332_325  :=  8'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_332_325 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_332_325);
    }

//initial config body1112 end


//initial config body1113 begin
    if (CP_PMA_CH2_REG_RESERVED_298 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_298  :=  1'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_298 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_298  :=  1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_298  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_298 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_298);
    }

//initial config body1113 end


//initial config body1114 begin
    if (CP_PMA_CH2_REG_RESERVED_295 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_295  :=  1'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_295 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_295  :=  1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_295  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_295 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_295);
    }

//initial config body1114 end


//initial config body1115 begin
    if (CP_PMA_CH2_REG_RESERVED_286 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_286  :=  1'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_286 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_286  :=  1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_286  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_286 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_286);
    }

//initial config body1115 end


//initial config body1116 begin
    if (CP_PMA_CH2_REG_RESERVED_285_283 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_285_283  :=  3'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_285_283 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_285_283  :=  3'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_285_283  :=  3'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_285_283 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_285_283);
    }

//initial config body1116 end


//initial config body1117 begin
    if (CP_PMA_CH2_REG_RESERVED_241_240 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_241_240  :=  2'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_241_240 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_241_240  :=  2'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_241_240  :=  2'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_241_240 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_241_240);
    }

//initial config body1117 end


//initial config body1118 begin
    if (CP_PMA_CH2_REG_RESERVED_235_234 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_235_234  :=  2'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_235_234 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_235_234  :=  2'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_235_234  :=  2'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_235_234 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_235_234);
    }

//initial config body1118 end


//initial config body1119 begin
    if (CP_PMA_CH2_REG_RESERVED_233_232 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_233_232  :=  2'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_233_232 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_233_232  :=  2'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_233_232  :=  2'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_233_232 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_233_232);
    }

//initial config body1119 end


//initial config body1120 begin
    if (CP_PMA_CH2_REG_RESERVED_190 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_190  :=  1'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_190 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_190  :=  1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_190  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_190 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_190);
    }

//initial config body1120 end


//initial config body1121 begin
    if (CP_PMA_CH2_REG_RESERVED_175_172 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_175_172  :=  4'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_175_172 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_175_172  :=  4'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_175_172  :=  4'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_175_172 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_175_172);
    }

//initial config body1121 end


//initial config body1122 begin
    if (CP_PMA_CH2_REG_RESERVED_171_164 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_171_164  :=  8'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_171_164 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_171_164  :=  8'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_171_164  :=  8'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_171_164 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_171_164);
    }

//initial config body1122 end


//initial config body1123 begin
    if (CP_PMA_CH2_REG_RESERVED_77_76 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_77_76  :=  2'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_77_76 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_77_76  :=  2'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_77_76  :=  2'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_77_76 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_77_76);
    }

//initial config body1123 end


//initial config body1124 begin
    if (CP_PMA_CH2_REG_RESERVED_69 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_69  :=  1'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_69 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_69  :=  1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_69  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_69 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_69);
    }

//initial config body1124 end


//initial config body1125 begin
    if (CP_PMA_CH2_REG_RESERVED_48_45 == 0)
    {
        SC_PMA_CH2_REG_RESERVED_48_45   := 4'b0;
    }
    else if (CP_PMA_CH2_REG_RESERVED_48_45 == 1)
    {
        SC_PMA_CH2_REG_RESERVED_48_45   := 4'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RESERVED_48_45   := 4'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RESERVED_48_45 is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RESERVED_48_45);
    }

//initial config body1125 end


//initial config body1126 begin
    if (CP_PMA_CH2_CFG_CTLE_ADP_RSTN == "FALSE")
    {
        SC_PMA_CH2_CFG_CTLE_ADP_RSTN_666   := 1'b0;
    }
    else if (CP_PMA_CH2_CFG_CTLE_ADP_RSTN == "TRUE")
    {
        SC_PMA_CH2_CFG_CTLE_ADP_RSTN_666   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_CFG_CTLE_ADP_RSTN_666  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_CFG_CTLE_ADP_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_CFG_CTLE_ADP_RSTN);
    }

//initial config body1126 end


//initial config body1127 begin
    if (CP_PMA_CH2_CFG_TX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH2_CFG_TX_PMA_RSTN_665   := 1'b0;
    }
    else if (CP_PMA_CH2_CFG_TX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH2_CFG_TX_PMA_RSTN_665   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_CFG_TX_PMA_RSTN_665  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_CFG_TX_PMA_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_CFG_TX_PMA_RSTN);
    }

//initial config body1127 end


//initial config body1128 begin
    if (CP_PMA_CH2_CFG_TX_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH2_CFG_TX_LANE_POWERUP_664   := 1'b0;
    }
    else if (CP_PMA_CH2_CFG_TX_LANE_POWERUP == "ON")
    {
        SC_PMA_CH2_CFG_TX_LANE_POWERUP_664   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_CFG_TX_LANE_POWERUP_664  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_CFG_TX_LANE_POWERUP is set to %s. Legal values is ON,OFF",CP_PMA_CH2_CFG_TX_LANE_POWERUP);
    }

//initial config body1128 end


//initial config body1129 begin
    if (CP_PMA_CH2_CFG_RX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH2_CFG_RX_PMA_RSTN_663   := 1'b0;
    }
    else if (CP_PMA_CH2_CFG_RX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH2_CFG_RX_PMA_RSTN_663   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_CFG_RX_PMA_RSTN_663  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_CFG_RX_PMA_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_CFG_RX_PMA_RSTN);
    }

//initial config body1129 end


//initial config body1130 begin
    if (CP_PMA_CH2_CFG_RX_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH2_CFG_RX_LANE_POWERUP_662   := 1'b0;
    }
    else if (CP_PMA_CH2_CFG_RX_LANE_POWERUP == "ON")
    {
        SC_PMA_CH2_CFG_RX_LANE_POWERUP_662   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_CFG_RX_LANE_POWERUP_662  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_CFG_RX_LANE_POWERUP is set to %s. Legal values is ON,OFF",CP_PMA_CH2_CFG_RX_LANE_POWERUP);
    }

//initial config body1130 end


//initial config body1131 begin
    if (CP_PMA_CH2_CFG_PMA_POR_N == "FALSE")
    {
        SC_PMA_CH2_CFG_PMA_POR_N_661   := 1'b0;
    }
    else if (CP_PMA_CH2_CFG_PMA_POR_N == "TRUE")
    {
        SC_PMA_CH2_CFG_PMA_POR_N_661   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_CFG_PMA_POR_N_661  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_CFG_PMA_POR_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_CFG_PMA_POR_N);
    }

//initial config body1131 end


//initial config body1132 begin
    if (CP_PMA_CH2_CFG_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH2_CFG_LANE_POWERUP_660   := 1'b0;
    }
    else if (CP_PMA_CH2_CFG_LANE_POWERUP == "ON")
    {
        SC_PMA_CH2_CFG_LANE_POWERUP_660   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_CFG_LANE_POWERUP_660  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_CFG_LANE_POWERUP is set to %s. Legal values is ON,OFF",CP_PMA_CH2_CFG_LANE_POWERUP);
    }

//initial config body1132 end


//initial config body1133 begin
    if (CP_PMA_CH2_REG_RX_659_656 >= 0 && CP_PMA_CH2_REG_RX_659_656 <= 15)
    {
        SC_PMA_CH2_REG_RX_659_656  :=  CP_PMA_CH2_REG_RX_659_656;
    }
    else
    {
        SC_PMA_CH2_REG_RX_659_656  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_659_656 is set to %d. Legal values is 0 to 15",CP_PMA_CH2_REG_RX_659_656);
    }

//initial config body1133 end


//initial config body1134 begin
    if (CP_PMA_CH2_REG_RX_655_648 >= 0 && CP_PMA_CH2_REG_RX_655_648 <= 255)
    {
        SC_PMA_CH2_REG_RX_655_648  :=  CP_PMA_CH2_REG_RX_655_648;
    }
    else
    {
        SC_PMA_CH2_REG_RX_655_648  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_655_648 is set to %d. Legal values is 0 to 255",CP_PMA_CH2_REG_RX_655_648);
    }

//initial config body1134 end


//initial config body1135 begin
    if (CP_PMA_CH2_REG_RX_647_640 >= 0 && CP_PMA_CH2_REG_RX_647_640 <= 255)
    {
        SC_PMA_CH2_REG_RX_647_640  :=  CP_PMA_CH2_REG_RX_647_640;
    }
    else
    {
        SC_PMA_CH2_REG_RX_647_640  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_647_640 is set to %d. Legal values is 0 to 255",CP_PMA_CH2_REG_RX_647_640);
    }

//initial config body1135 end


//initial config body1136 begin
    if (CP_PMA_CH2_REG_RX_639_632 >= 0 && CP_PMA_CH2_REG_RX_639_632 <= 255)
    {
        SC_PMA_CH2_REG_RX_639_632  :=  CP_PMA_CH2_REG_RX_639_632;
    }
    else
    {
        SC_PMA_CH2_REG_RX_639_632  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_639_632 is set to %d. Legal values is 0 to 255",CP_PMA_CH2_REG_RX_639_632);
    }

//initial config body1136 end


//initial config body1137 begin
    if (CP_PMA_CH2_REG_RX_631_624 >= 0 && CP_PMA_CH2_REG_RX_631_624 <= 255)
    {
        SC_PMA_CH2_REG_RX_631_624  :=  CP_PMA_CH2_REG_RX_631_624;
    }
    else
    {
        SC_PMA_CH2_REG_RX_631_624  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_631_624 is set to %d. Legal values is 0 to 255",CP_PMA_CH2_REG_RX_631_624);
    }

//initial config body1137 end


//initial config body1138 begin
    if (CP_PMA_CH2_REG_RX_CDR_623_618 >= 0 && CP_PMA_CH2_REG_RX_CDR_623_618 <= 63)
    {
        SC_PMA_CH2_REG_RX_CDR_623_618  :=  CP_PMA_CH2_REG_RX_CDR_623_618;
    }
    else
    {
        SC_PMA_CH2_REG_RX_CDR_623_618  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_CDR_623_618 is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_RX_CDR_623_618);
    }

//initial config body1138 end


//initial config body1139 begin
    if (CP_PMA_CH2_REG_RX_CDR_617_610 >= 0 && CP_PMA_CH2_REG_RX_CDR_617_610 <= 255)
    {
        SC_PMA_CH2_REG_RX_CDR_617_610  :=  CP_PMA_CH2_REG_RX_CDR_617_610;
    }
    else
    {
        SC_PMA_CH2_REG_RX_CDR_617_610  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_CDR_617_610 is set to %d. Legal values is 0 to 255",CP_PMA_CH2_REG_RX_CDR_617_610);
    }

//initial config body1139 end


//initial config body1140 begin
    if (CP_PMA_CH2_REG_TX_609_600 >= 0 && CP_PMA_CH2_REG_TX_609_600 <= 1023)
    {
        SC_PMA_CH2_REG_TX_609_600  :=  CP_PMA_CH2_REG_TX_609_600;
    }
    else
    {
        SC_PMA_CH2_REG_TX_609_600  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_609_600 is set to %d. Legal values is 0 to 1023",CP_PMA_CH2_REG_TX_609_600);
    }

//initial config body1140 end


//initial config body1141 begin
    if (CP_PMA_CH2_REG_PLPBK_TXPCLK_EN == "FALSE")
    {
        SC_PMA_CH2_REG_PLPBK_TXPCLK_EN_551   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_PLPBK_TXPCLK_EN == "TRUE")
    {
        SC_PMA_CH2_REG_PLPBK_TXPCLK_EN_551   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_PLPBK_TXPCLK_EN_551  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_PLPBK_TXPCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_PLPBK_TXPCLK_EN);
    }

//initial config body1141 end


//initial config body1142 begin
    if (CP_PMA_CH2_REG_RX_TERM_MODE_CTRL >= 0 && CP_PMA_CH2_REG_RX_TERM_MODE_CTRL <= 7)
    {
        SC_PMA_CH2_REG_RX_TERM_MODE_CTRL_548_546   :=  to_unsigned( CP_PMA_CH2_REG_RX_TERM_MODE_CTRL , 3) ^  3'b110;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_TERM_MODE_CTRL_548_546  :=  0 ^ 3'b110;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_TERM_MODE_CTRL is set to %d. Legal values is 0 to 7",CP_PMA_CH2_REG_RX_TERM_MODE_CTRL);
    }

//initial config body1142 end


//initial config body1143 begin
    if (CP_PMA_CH2_REG_TX_FBCLK_FAR_EN == "FALSE")
    {
        SC_PMA_CH2_REG_TX_FBCLK_FAR_EN_545   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_FBCLK_FAR_EN == "TRUE")
    {
        SC_PMA_CH2_REG_TX_FBCLK_FAR_EN_545   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_FBCLK_FAR_EN_545  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_FBCLK_FAR_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_TX_FBCLK_FAR_EN);
    }

//initial config body1143 end


//initial config body1144 begin
    if (CP_PMA_CH2_REG_RX_ACJTAG_VHYSTSE >= 0 && CP_PMA_CH2_REG_RX_ACJTAG_VHYSTSE <= 7)
    {
        SC_PMA_CH2_REG_RX_ACJTAG_VHYSTSE_544_542  :=  CP_PMA_CH2_REG_RX_ACJTAG_VHYSTSE;
    }
    else
    {
        SC_PMA_CH2_REG_RX_ACJTAG_VHYSTSE_544_542  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_ACJTAG_VHYSTSE is set to %d. Legal values is 0 to 7",CP_PMA_CH2_REG_RX_ACJTAG_VHYSTSE);
    }

//initial config body1144 end


//initial config body1145 begin
    if (CP_PMA_CH2_REG_RX_JTAG_OE == "DISABLE")
    {
        SC_PMA_CH2_REG_RX_JTAG_OE_541   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_RX_JTAG_OE == "ENABLE")
    {
        SC_PMA_CH2_REG_RX_JTAG_OE_541   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_JTAG_OE_541  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_JTAG_OE is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_RX_JTAG_OE);
    }

//initial config body1145 end


//initial config body1146 begin
    if (CP_PMA_CH2_REG_RX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_JTAG_MODE_EN_540   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_JTAG_MODE_EN_540   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_JTAG_MODE_EN_540  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_JTAG_MODE_EN);
    }

//initial config body1146 end


//initial config body1147 begin
    if (CP_PMA_CH2_REG_RX_JTAG_MODE_EN_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_RX_JTAG_MODE_EN_OW_539   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_JTAG_MODE_EN_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_RX_JTAG_MODE_EN_OW_539   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_JTAG_MODE_EN_OW_539  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_JTAG_MODE_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_RX_JTAG_MODE_EN_OW);
    }

//initial config body1147 end


//initial config body1148 begin
    if (CP_PMA_CH2_REG_TX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH2_REG_TX_JTAG_MODE_EN_538   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH2_REG_TX_JTAG_MODE_EN_538   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_JTAG_MODE_EN_538  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_TX_JTAG_MODE_EN);
    }

//initial config body1148 end


//initial config body1149 begin
    if (CP_PMA_CH2_REG_TX_JTAG_MODE_EN_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_JTAG_MODE_EN_OW_537   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_JTAG_MODE_EN_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_JTAG_MODE_EN_OW_537   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_JTAG_MODE_EN_OW_537  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_JTAG_MODE_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_JTAG_MODE_EN_OW);
    }

//initial config body1149 end


//initial config body1150 begin
    if (CP_PMA_CH2_REG_TX_LS_MODE_EN == "FALSE")
    {
        SC_PMA_CH2_REG_TX_LS_MODE_EN_536   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_LS_MODE_EN == "TRUE")
    {
        SC_PMA_CH2_REG_TX_LS_MODE_EN_536   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_LS_MODE_EN_536  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_LS_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_TX_LS_MODE_EN);
    }

//initial config body1150 end


//initial config body1151 begin
    if (CP_PMA_CH2_REG_TX_SLPBK_AMP >= 0 && CP_PMA_CH2_REG_TX_SLPBK_AMP <= 3)
    {
        SC_PMA_CH2_REG_TX_SLPBK_AMP_535_534   :=  to_unsigned( CP_PMA_CH2_REG_TX_SLPBK_AMP , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_SLPBK_AMP_535_534  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_SLPBK_AMP is set to %d. Legal values is 0 to 3",CP_PMA_CH2_REG_TX_SLPBK_AMP);
    }

//initial config body1151 end


//initial config body1152 begin
    if (CP_PMA_CH2_REG_TX_POLARITY == "NORMAL")
    {
        SC_PMA_CH2_REG_TX_POLARITY_533   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_POLARITY == "REVERSE")
    {
        SC_PMA_CH2_REG_TX_POLARITY_533   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_POLARITY_533  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_PMA_CH2_REG_TX_POLARITY);
    }

//initial config body1152 end


//initial config body1153 begin
    if (CP_PMA_CH2_REG_TX_OOB_DELAY_SEL >= 0 && CP_PMA_CH2_REG_TX_OOB_DELAY_SEL <= 15)
    {
        SC_PMA_CH2_REG_TX_OOB_DELAY_SEL_532_529  :=  CP_PMA_CH2_REG_TX_OOB_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH2_REG_TX_OOB_DELAY_SEL_532_529  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_OOB_DELAY_SEL is set to %d. Legal values is 0 to 15",CP_PMA_CH2_REG_TX_OOB_DELAY_SEL);
    }

//initial config body1153 end


//initial config body1154 begin
    if (CP_PMA_CH2_REG_TX_PULLUP_DAC3 >= 0 && CP_PMA_CH2_REG_TX_PULLUP_DAC3 <= 31)
    {
        SC_PMA_CH2_REG_TX_PULLUP_DAC3_528_524   :=  to_unsigned( CP_PMA_CH2_REG_TX_PULLUP_DAC3 , 5) ^  5'b01001;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PULLUP_DAC3_528_524  :=  0 ^ 5'b01001;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_PULLUP_DAC3 is set to %d. Legal values is 0 to 31",CP_PMA_CH2_REG_TX_PULLUP_DAC3);
    }

//initial config body1154 end


//initial config body1155 begin
    if (CP_PMA_CH2_REG_TX_PULLUP_DAC2 >= 0 && CP_PMA_CH2_REG_TX_PULLUP_DAC2 <= 31)
    {
        SC_PMA_CH2_REG_TX_PULLUP_DAC2_523_519   :=  to_unsigned( CP_PMA_CH2_REG_TX_PULLUP_DAC2 , 5) ^  5'b01110;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PULLUP_DAC2_523_519  :=  0 ^ 5'b01110;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_PULLUP_DAC2 is set to %d. Legal values is 0 to 31",CP_PMA_CH2_REG_TX_PULLUP_DAC2);
    }

//initial config body1155 end


//initial config body1156 begin
    if (CP_PMA_CH2_REG_TX_PULLUP_DAC1 >= 0 && CP_PMA_CH2_REG_TX_PULLUP_DAC1 <= 31)
    {
        SC_PMA_CH2_REG_TX_PULLUP_DAC1_518_514   :=  to_unsigned( CP_PMA_CH2_REG_TX_PULLUP_DAC1 , 5) ^  5'b10011;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PULLUP_DAC1_518_514  :=  0 ^ 5'b10011;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_PULLUP_DAC1 is set to %d. Legal values is 0 to 31",CP_PMA_CH2_REG_TX_PULLUP_DAC1);
    }

//initial config body1156 end


//initial config body1157 begin
    if (CP_PMA_CH2_REG_TX_PULLUP_DAC0 >= 0 && CP_PMA_CH2_REG_TX_PULLUP_DAC0 <= 31)
    {
        SC_PMA_CH2_REG_TX_PULLUP_DAC0_513_509   :=  to_unsigned( CP_PMA_CH2_REG_TX_PULLUP_DAC0 , 5) ^  5'b11000;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PULLUP_DAC0_513_509  :=  0 ^ 5'b11000;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_PULLUP_DAC0 is set to %d. Legal values is 0 to 31",CP_PMA_CH2_REG_TX_PULLUP_DAC0);
    }

//initial config body1157 end


//initial config body1158 begin
    if (CP_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON == "DISABLE")
    {
        SC_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_508   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON == "ENABLE")
    {
        SC_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_508   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_508  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON);
    }

//initial config body1158 end


//initial config body1159 begin
    if (CP_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_OW_507   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_OW_507   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_OW_507  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_RATE_CHANGE_TXPCLK_ON_OW);
    }

//initial config body1159 end


//initial config body1160 begin
    if (CP_PMA_CH2_REG_TX_SATA_EN == "FALSE")
    {
        SC_PMA_CH2_REG_TX_SATA_EN_504   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_SATA_EN == "TRUE")
    {
        SC_PMA_CH2_REG_TX_SATA_EN_504   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_SATA_EN_504  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_SATA_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_TX_SATA_EN);
    }

//initial config body1160 end


//initial config body1161 begin
    if (CP_PMA_CH2_REG_TX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH2_REG_TX_ERR_INSERT_498   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH2_REG_TX_ERR_INSERT_498   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_ERR_INSERT_498  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_ERR_INSERT is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_TX_ERR_INSERT);
    }

//initial config body1161 end


//initial config body1162 begin
    if (CP_PMA_CH2_REG_TX_DATA_MUX_SEL >= 0 && CP_PMA_CH2_REG_TX_DATA_MUX_SEL <= 3)
    {
        SC_PMA_CH2_REG_TX_DATA_MUX_SEL_497_496  :=  CP_PMA_CH2_REG_TX_DATA_MUX_SEL;
    }
    else
    {
        SC_PMA_CH2_REG_TX_DATA_MUX_SEL_497_496  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_DATA_MUX_SEL is set to %d. Legal values is 0 to 3",CP_PMA_CH2_REG_TX_DATA_MUX_SEL);
    }

//initial config body1162 end


//initial config body1163 begin
    if (CP_PMA_CH2_REG_TX_FIFO_EN == "FALSE")
    {
        SC_PMA_CH2_REG_TX_FIFO_EN_495   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_FIFO_EN == "TRUE")
    {
        SC_PMA_CH2_REG_TX_FIFO_EN_495   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_FIFO_EN_495  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_TX_FIFO_EN);
    }

//initial config body1163 end


//initial config body1164 begin
    if (CP_PMA_CH2_REG_TX_FIFO_WP_CTRL >= 0 && CP_PMA_CH2_REG_TX_FIFO_WP_CTRL <= 7)
    {
        SC_PMA_CH2_REG_TX_FIFO_WP_CTRL_494_492   :=  to_unsigned( CP_PMA_CH2_REG_TX_FIFO_WP_CTRL , 3) ^  3'b010;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_FIFO_WP_CTRL_494_492  :=  0 ^ 3'b010;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_FIFO_WP_CTRL is set to %d. Legal values is 0 to 7",CP_PMA_CH2_REG_TX_FIFO_WP_CTRL);
    }

//initial config body1164 end


//initial config body1165 begin
    if (CP_PMA_CH2_REG_TX_FIFO_RST_N == "FALSE")
    {
        SC_PMA_CH2_REG_TX_FIFO_RST_N_491   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_FIFO_RST_N == "TRUE")
    {
        SC_PMA_CH2_REG_TX_FIFO_RST_N_491   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_FIFO_RST_N_491  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_FIFO_RST_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_TX_FIFO_RST_N);
    }

//initial config body1165 end


//initial config body1166 begin
    if (CP_PMA_CH2_REG_TX_UDP_DATA >= 0 && CP_PMA_CH2_REG_TX_UDP_DATA <= 1048575)
    {
        SC_PMA_CH2_REG_TX_UDP_DATA_490_471   :=  to_unsigned( CP_PMA_CH2_REG_TX_UDP_DATA , 20) ^  20'b00111110101100000101;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_UDP_DATA_490_471  :=  0 ^ 20'b00111110101100000101;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_UDP_DATA is set to %d. Legal values is 0 to 1048575",CP_PMA_CH2_REG_TX_UDP_DATA);
    }

//initial config body1166 end


//initial config body1167 begin
    if (CP_PMA_CH2_REG_TX_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH2_REG_TX_PRBS_SEL_470_469   := 2'b00;
    }
    else if (CP_PMA_CH2_REG_TX_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH2_REG_TX_PRBS_SEL_470_469   := 2'b01;
    }
    else if (CP_PMA_CH2_REG_TX_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH2_REG_TX_PRBS_SEL_470_469   := 2'b10;
    }
    else if (CP_PMA_CH2_REG_TX_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH2_REG_TX_PRBS_SEL_470_469   := 2'b11;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PRBS_SEL_470_469  :=  2'b00;
        error("Setting Error : The CP_PMA_CH2_REG_TX_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_PMA_CH2_REG_TX_PRBS_SEL);
    }

//initial config body1167 end


//initial config body1168 begin
    if (CP_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b00 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b01 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b10 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b11 ^ 2'b11;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL_468_467  :=  2'b00 ^ 2'b11;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH2_REG_TX_PRBS_GEN_WIDTH_SEL);
    }

//initial config body1168 end


//initial config body1169 begin
    if (CP_PMA_CH2_REG_TX_PRBS_GEN_EN == "FALSE")
    {
        SC_PMA_CH2_REG_TX_PRBS_GEN_EN_466   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_PRBS_GEN_EN == "TRUE")
    {
        SC_PMA_CH2_REG_TX_PRBS_GEN_EN_466   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PRBS_GEN_EN_466  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_PRBS_GEN_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_TX_PRBS_GEN_EN);
    }

//initial config body1169 end


//initial config body1170 begin
    if (CP_PMA_CH2_REG_TX_RXDET_STATUS == "FALSE")
    {
        SC_PMA_CH2_REG_TX_RXDET_STATUS_465   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_RXDET_STATUS == "TRUE")
    {
        SC_PMA_CH2_REG_TX_RXDET_STATUS_465   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_RXDET_STATUS_465  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_RXDET_STATUS is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_TX_RXDET_STATUS);
    }

//initial config body1170 end


//initial config body1171 begin
    if (CP_PMA_CH2_REG_TX_RXDET_STATUS_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_RXDET_STATUS_OW_464   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_RXDET_STATUS_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_RXDET_STATUS_OW_464   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_RXDET_STATUS_OW_464  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_RXDET_STATUS_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_RXDET_STATUS_OW);
    }

//initial config body1171 end


//initial config body1172 begin
    if (CP_PMA_CH2_REG_TX_PCLK_EDGE_SEL == "POS_EDGE")
    {
        SC_PMA_CH2_REG_TX_PCLK_EDGE_SEL_463   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_PCLK_EDGE_SEL == "NEG_EDGE")
    {
        SC_PMA_CH2_REG_TX_PCLK_EDGE_SEL_463   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PCLK_EDGE_SEL_463  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_PCLK_EDGE_SEL is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_PMA_CH2_REG_TX_PCLK_EDGE_SEL);
    }

//initial config body1172 end


//initial config body1173 begin
    if (CP_PMA_CH2_REG_TX_TX2RX_SLPBACK_EN == "FALSE")
    {
        SC_PMA_CH2_REG_TX_TX2RX_SLPBACK_EN_462   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_TX2RX_SLPBACK_EN == "TRUE")
    {
        SC_PMA_CH2_REG_TX_TX2RX_SLPBACK_EN_462   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_TX2RX_SLPBACK_EN_462  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_TX2RX_SLPBACK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_TX_TX2RX_SLPBACK_EN);
    }

//initial config body1173 end


//initial config body1174 begin
    if (CP_PMA_CH2_REG_TX_PREDRV_CM_CTRL >= 0 && CP_PMA_CH2_REG_TX_PREDRV_CM_CTRL <= 3)
    {
        SC_PMA_CH2_REG_TX_PREDRV_CM_CTRL_461_460   :=  to_unsigned( CP_PMA_CH2_REG_TX_PREDRV_CM_CTRL , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PREDRV_CM_CTRL_461_460  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_PREDRV_CM_CTRL is set to %d. Legal values is 0 to 3",CP_PMA_CH2_REG_TX_PREDRV_CM_CTRL);
    }

//initial config body1174 end


//initial config body1175 begin
    if (CP_PMA_CH2_REG_TX_PREDRV_DAC >= 0 && CP_PMA_CH2_REG_TX_PREDRV_DAC <= 3)
    {
        SC_PMA_CH2_REG_TX_PREDRV_DAC_459_458   :=  to_unsigned( CP_PMA_CH2_REG_TX_PREDRV_DAC , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PREDRV_DAC_459_458  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_PREDRV_DAC is set to %d. Legal values is 0 to 3",CP_PMA_CH2_REG_TX_PREDRV_DAC);
    }

//initial config body1175 end


//initial config body1176 begin
    if (CP_PMA_CH2_REG_TX_BEACON_OSC_CTRL >= 0 && CP_PMA_CH2_REG_TX_BEACON_OSC_CTRL <= 7)
    {
        SC_PMA_CH2_REG_TX_BEACON_OSC_CTRL_457_455   :=  to_unsigned( CP_PMA_CH2_REG_TX_BEACON_OSC_CTRL , 3) ^  3'b100;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_BEACON_OSC_CTRL_457_455  :=  0 ^ 3'b100;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_BEACON_OSC_CTRL is set to %d. Legal values is 0 to 7",CP_PMA_CH2_REG_TX_BEACON_OSC_CTRL);
    }

//initial config body1176 end


//initial config body1177 begin
    if (CP_PMA_CH2_REG_TX_RXDET_THRESHOLD == "50MV")
    {
        SC_PMA_CH2_REG_TX_RXDET_THRESHOLD_454_453   := 2'b00 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_RXDET_THRESHOLD == "75MV")
    {
        SC_PMA_CH2_REG_TX_RXDET_THRESHOLD_454_453   := 2'b01 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_RXDET_THRESHOLD == "100MV")
    {
        SC_PMA_CH2_REG_TX_RXDET_THRESHOLD_454_453   := 2'b10 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_RXDET_THRESHOLD == "125MV")
    {
        SC_PMA_CH2_REG_TX_RXDET_THRESHOLD_454_453   := 2'b11 ^ 2'b10;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_RXDET_THRESHOLD_454_453  :=  2'b00 ^ 2'b10;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_RXDET_THRESHOLD is set to %s. Legal values is 50MV,75MV,100MV,125MV",CP_PMA_CH2_REG_TX_RXDET_THRESHOLD);
    }

//initial config body1177 end


//initial config body1178 begin
    if (CP_PMA_CH2_REG_TX_SWING_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_SWING_OW_451   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_SWING_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_SWING_OW_451   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_SWING_OW_451  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_SWING_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_SWING_OW);
    }

//initial config body1178 end


//initial config body1179 begin
    if (CP_PMA_CH2_REG_TX_SWING == "FALSE")
    {
        SC_PMA_CH2_REG_TX_SWING_450   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_SWING == "TRUE")
    {
        SC_PMA_CH2_REG_TX_SWING_450   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_SWING_450  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_SWING is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_TX_SWING);
    }

//initial config body1179 end


//initial config body1180 begin
    if (CP_PMA_CH2_REG_TX_DEEMP_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_DEEMP_OW_449   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_DEEMP_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_DEEMP_OW_449   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_DEEMP_OW_449  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_DEEMP_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_DEEMP_OW);
    }

//initial config body1180 end


//initial config body1181 begin
    if (CP_PMA_CH2_REG_TX_DEEMP >= 0 && CP_PMA_CH2_REG_TX_DEEMP <= 3)
    {
        SC_PMA_CH2_REG_TX_DEEMP_448_447  :=  CP_PMA_CH2_REG_TX_DEEMP;
    }
    else
    {
        SC_PMA_CH2_REG_TX_DEEMP_448_447  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_DEEMP is set to %d. Legal values is 0 to 3",CP_PMA_CH2_REG_TX_DEEMP);
    }

//initial config body1181 end


//initial config body1182 begin
    if (CP_PMA_CH2_REG_TX_MARGIN_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_MARGIN_OW_446   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_MARGIN_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_MARGIN_OW_446   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_MARGIN_OW_446  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_MARGIN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_MARGIN_OW);
    }

//initial config body1182 end


//initial config body1183 begin
    if (CP_PMA_CH2_REG_TX_MARGIN >= 0 && CP_PMA_CH2_REG_TX_MARGIN <= 7)
    {
        SC_PMA_CH2_REG_TX_MARGIN_445_443  :=  CP_PMA_CH2_REG_TX_MARGIN;
    }
    else
    {
        SC_PMA_CH2_REG_TX_MARGIN_445_443  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_MARGIN is set to %d. Legal values is 0 to 7",CP_PMA_CH2_REG_TX_MARGIN);
    }

//initial config body1183 end


//initial config body1184 begin
    if (CP_PMA_CH2_REG_TX_AMP4 >= 0 && CP_PMA_CH2_REG_TX_AMP4 <= 63)
    {
        SC_PMA_CH2_REG_TX_AMP4_442_437   :=  to_unsigned( CP_PMA_CH2_REG_TX_AMP4 , 6) ^  6'b000101;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_AMP4_442_437  :=  0 ^ 6'b000101;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_AMP4 is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_TX_AMP4);
    }

//initial config body1184 end


//initial config body1185 begin
    if (CP_PMA_CH2_REG_TX_AMP3 >= 0 && CP_PMA_CH2_REG_TX_AMP3 <= 63)
    {
        SC_PMA_CH2_REG_TX_AMP3_436_431   :=  to_unsigned( CP_PMA_CH2_REG_TX_AMP3 , 6) ^  6'b001001;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_AMP3_436_431  :=  0 ^ 6'b001001;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_AMP3 is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_TX_AMP3);
    }

//initial config body1185 end


//initial config body1186 begin
    if (CP_PMA_CH2_REG_TX_AMP2 >= 0 && CP_PMA_CH2_REG_TX_AMP2 <= 63)
    {
        SC_PMA_CH2_REG_TX_AMP2_430_425   :=  to_unsigned( CP_PMA_CH2_REG_TX_AMP2 , 6) ^  6'b001110;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_AMP2_430_425  :=  0 ^ 6'b001110;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_AMP2 is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_TX_AMP2);
    }

//initial config body1186 end


//initial config body1187 begin
    if (CP_PMA_CH2_REG_TX_AMP1 >= 0 && CP_PMA_CH2_REG_TX_AMP1 <= 63)
    {
        SC_PMA_CH2_REG_TX_AMP1_424_419   :=  to_unsigned( CP_PMA_CH2_REG_TX_AMP1 , 6) ^  6'b010011;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_AMP1_424_419  :=  0 ^ 6'b010011;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_AMP1 is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_TX_AMP1);
    }

//initial config body1187 end


//initial config body1188 begin
    if (CP_PMA_CH2_REG_TX_AMP0 >= 0 && CP_PMA_CH2_REG_TX_AMP0 <= 63)
    {
        SC_PMA_CH2_REG_TX_AMP0_418_413   :=  to_unsigned( CP_PMA_CH2_REG_TX_AMP0 , 6) ^  6'b011000;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_AMP0_418_413  :=  0 ^ 6'b011000;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_AMP0 is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_TX_AMP0);
    }

//initial config body1188 end


//initial config body1189 begin
    if (CP_PMA_CH2_REG_TX_DRV00_DAC2 >= 0 && CP_PMA_CH2_REG_TX_DRV00_DAC2 <= 63)
    {
        SC_PMA_CH2_REG_TX_DRV00_DAC2_412_407   :=  to_unsigned( CP_PMA_CH2_REG_TX_DRV00_DAC2 , 6) ^  6'b110000;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_DRV00_DAC2_412_407  :=  0 ^ 6'b110000;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_DRV00_DAC2 is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_TX_DRV00_DAC2);
    }

//initial config body1189 end


//initial config body1190 begin
    if (CP_PMA_CH2_REG_TX_DRV00_DAC1 >= 0 && CP_PMA_CH2_REG_TX_DRV00_DAC1 <= 63)
    {
        SC_PMA_CH2_REG_TX_DRV00_DAC1_406_401   :=  to_unsigned( CP_PMA_CH2_REG_TX_DRV00_DAC1 , 6) ^  6'b110101;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_DRV00_DAC1_406_401  :=  0 ^ 6'b110101;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_DRV00_DAC1 is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_TX_DRV00_DAC1);
    }

//initial config body1190 end


//initial config body1191 begin
    if (CP_PMA_CH2_REG_TX_DRV00_DAC0 >= 0 && CP_PMA_CH2_REG_TX_DRV00_DAC0 <= 63)
    {
        SC_PMA_CH2_REG_TX_DRV00_DAC0_400_395   :=  to_unsigned( CP_PMA_CH2_REG_TX_DRV00_DAC0 , 6) ^  6'b111111;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_DRV00_DAC0_400_395  :=  0 ^ 6'b111111;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_DRV00_DAC0 is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_TX_DRV00_DAC0);
    }

//initial config body1191 end


//initial config body1192 begin
    if (CP_PMA_CH2_REG_TX_DRV01_DAC2 >= 0 && CP_PMA_CH2_REG_TX_DRV01_DAC2 <= 63)
    {
        SC_PMA_CH2_REG_TX_DRV01_DAC2_394_389   :=  to_unsigned( CP_PMA_CH2_REG_TX_DRV01_DAC2 , 6) ^  6'b100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_DRV01_DAC2_394_389  :=  0 ^ 6'b100000;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_DRV01_DAC2 is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_TX_DRV01_DAC2);
    }

//initial config body1192 end


//initial config body1193 begin
    if (CP_PMA_CH2_REG_TX_DRV01_DAC1 >= 0 && CP_PMA_CH2_REG_TX_DRV01_DAC1 <= 63)
    {
        SC_PMA_CH2_REG_TX_DRV01_DAC1_388_383   :=  to_unsigned( CP_PMA_CH2_REG_TX_DRV01_DAC1 , 6) ^  6'b010101;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_DRV01_DAC1_388_383  :=  0 ^ 6'b010101;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_DRV01_DAC1 is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_TX_DRV01_DAC1);
    }

//initial config body1193 end


//initial config body1194 begin
    if (CP_PMA_CH2_REG_TX_DRV01_DAC0 >= 0 && CP_PMA_CH2_REG_TX_DRV01_DAC0 <= 63)
    {
        SC_PMA_CH2_REG_TX_DRV01_DAC0_382_377  :=  CP_PMA_CH2_REG_TX_DRV01_DAC0;
    }
    else
    {
        SC_PMA_CH2_REG_TX_DRV01_DAC0_382_377  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_DRV01_DAC0 is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_TX_DRV01_DAC0);
    }

//initial config body1194 end


//initial config body1195 begin
    if (CP_PMA_CH2_REG_EI_PCLK_DELAY_SEL >= 0 && CP_PMA_CH2_REG_EI_PCLK_DELAY_SEL <= 3)
    {
        SC_PMA_CH2_REG_EI_PCLK_DELAY_SEL_375_374  :=  CP_PMA_CH2_REG_EI_PCLK_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH2_REG_EI_PCLK_DELAY_SEL_375_374  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_EI_PCLK_DELAY_SEL is set to %d. Legal values is 0 to 3",CP_PMA_CH2_REG_EI_PCLK_DELAY_SEL);
    }

//initial config body1195 end


//initial config body1196 begin
    if (CP_PMA_CH2_REG_TX_PCLK_SW == "FALSE")
    {
        SC_PMA_CH2_REG_TX_PCLK_SW_372   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_PCLK_SW == "TRUE")
    {
        SC_PMA_CH2_REG_TX_PCLK_SW_372   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PCLK_SW_372  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_PCLK_SW is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_TX_PCLK_SW);
    }

//initial config body1196 end


//initial config body1197 begin
    if (CP_PMA_CH2_REG_TX_PCLK_SW_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_PCLK_SW_OW_371   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_PCLK_SW_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_PCLK_SW_OW_371   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PCLK_SW_OW_371  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_PCLK_SW_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_PCLK_SW_OW);
    }

//initial config body1197 end


//initial config body1198 begin
    if (CP_PMA_CH2_REG_PLL_READY == "FALSE")
    {
        SC_PMA_CH2_REG_PLL_READY_370   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_PLL_READY == "TRUE")
    {
        SC_PMA_CH2_REG_PLL_READY_370   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_PLL_READY_370  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_PLL_READY is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_PLL_READY);
    }

//initial config body1198 end


//initial config body1199 begin
    if (CP_PMA_CH2_REG_PLL_READY_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_PLL_READY_OW_369   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_PLL_READY_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_PLL_READY_OW_369   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_PLL_READY_OW_369  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_PLL_READY_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_PLL_READY_OW);
    }

//initial config body1199 end


//initial config body1200 begin
    if (CP_PMA_CH2_REG_TX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH2_REG_TX_BUSWIDTH_368_366   := 3'd0 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH2_REG_TX_BUSWIDTH_368_366   := 3'd1 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH2_REG_TX_BUSWIDTH_368_366   := 3'd2 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH2_REG_TX_BUSWIDTH_368_366   := 3'd3 ^ 3'b011;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_BUSWIDTH_368_366  :=  3'd0 ^ 3'b011;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH2_REG_TX_BUSWIDTH);
    }

//initial config body1200 end


//initial config body1201 begin
    if (CP_PMA_CH2_REG_TX_BUSWIDTH_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_BUSWIDTH_OW_365   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_BUSWIDTH_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_BUSWIDTH_OW_365   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_BUSWIDTH_OW_365  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_BUSWIDTH_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_BUSWIDTH_OW);
    }

//initial config body1201 end


//initial config body1202 begin
    if (CP_PMA_CH2_REG_TX_DCC_RESET_N == "FALSE")
    {
        SC_PMA_CH2_REG_TX_DCC_RESET_N_364   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_DCC_RESET_N == "TRUE")
    {
        SC_PMA_CH2_REG_TX_DCC_RESET_N_364   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_DCC_RESET_N_364  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_DCC_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_TX_DCC_RESET_N);
    }

//initial config body1202 end


//initial config body1203 begin
    if (CP_PMA_CH2_REG_TX_DCC_RESET_N_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_DCC_RESET_N_OW_363   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_DCC_RESET_N_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_DCC_RESET_N_OW_363   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_DCC_RESET_N_OW_363  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_DCC_RESET_N_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_DCC_RESET_N_OW);
    }

//initial config body1203 end


//initial config body1204 begin
    if (CP_PMA_CH2_REG_TX_RESET_N == "FALSE")
    {
        SC_PMA_CH2_REG_TX_RESET_N_362   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_RESET_N == "TRUE")
    {
        SC_PMA_CH2_REG_TX_RESET_N_362   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_RESET_N_362  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_TX_RESET_N);
    }

//initial config body1204 end


//initial config body1205 begin
    if (CP_PMA_CH2_REG_TX_RESET_N_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_RESET_N_OW_361   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_RESET_N_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_RESET_N_OW_361   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_RESET_N_OW_361  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_RESET_N_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_RESET_N_OW);
    }

//initial config body1205 end


//initial config body1206 begin
    if (CP_PMA_CH2_REG_TX_PD_POST_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_PD_POST_OW_360   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_PD_POST_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_PD_POST_OW_360   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PD_POST_OW_360  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_PD_POST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_PD_POST_OW);
    }

//initial config body1206 end


//initial config body1207 begin
    if (CP_PMA_CH2_REG_TX_PD_POST == "ON")
    {
        SC_PMA_CH2_REG_TX_PD_POST_359   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_PD_POST == "OFF")
    {
        SC_PMA_CH2_REG_TX_PD_POST_359   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PD_POST_359  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_PD_POST is set to %s. Legal values is ON,OFF",CP_PMA_CH2_REG_TX_PD_POST);
    }

//initial config body1207 end


//initial config body1208 begin
    if (CP_PMA_CH2_REG_TX_SYNC == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_SYNC_358   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_SYNC == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_SYNC_358   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_SYNC_358  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_SYNC is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_SYNC);
    }

//initial config body1208 end


//initial config body1209 begin
    if (CP_PMA_CH2_REG_TX_SYNC_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_SYNC_OW_357   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_SYNC_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_SYNC_OW_357   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_SYNC_OW_357  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_SYNC_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_SYNC_OW);
    }

//initial config body1209 end


//initial config body1210 begin
    if (CP_PMA_CH2_REG_TX_RXDET_TIMER_SEL == "3CYCLE")
    {
        SC_PMA_CH2_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b00 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_RXDET_TIMER_SEL == "12CYCLE")
    {
        SC_PMA_CH2_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b01 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_RXDET_TIMER_SEL == "24CYCLE")
    {
        SC_PMA_CH2_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b10 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_TX_RXDET_TIMER_SEL == "36CYCLE")
    {
        SC_PMA_CH2_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b11 ^ 2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_RXDET_TIMER_SEL_356_355  :=  2'b00 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_RXDET_TIMER_SEL is set to %s. Legal values is 3CYCLE,12CYCLE,24CYCLE,36CYCLE",CP_PMA_CH2_REG_TX_RXDET_TIMER_SEL);
    }

//initial config body1210 end


//initial config body1211 begin
    if (CP_PMA_CH2_REG_TX_BIAS_CTRL >= 0 && CP_PMA_CH2_REG_TX_BIAS_CTRL <= 63)
    {
        SC_PMA_CH2_REG_TX_BIAS_CTRL_324_319   :=  to_unsigned( CP_PMA_CH2_REG_TX_BIAS_CTRL , 6) ^  6'b100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_BIAS_CTRL_324_319  :=  0 ^ 6'b100000;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_BIAS_CTRL is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_TX_BIAS_CTRL);
    }

//initial config body1211 end


//initial config body1212 begin
    if (CP_PMA_CH2_REG_TX_BIAS_CAL_EN == "FALSE")
    {
        SC_PMA_CH2_REG_TX_BIAS_CAL_EN_318   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_BIAS_CAL_EN == "TRUE")
    {
        SC_PMA_CH2_REG_TX_BIAS_CAL_EN_318   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_BIAS_CAL_EN_318  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_BIAS_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_TX_BIAS_CAL_EN);
    }

//initial config body1212 end


//initial config body1213 begin
    if (CP_PMA_CH2_REG_TX_RES_CAL >= 0 && CP_PMA_CH2_REG_TX_RES_CAL <= 63)
    {
        SC_PMA_CH2_REG_TX_RES_CAL_317_312   :=  to_unsigned( CP_PMA_CH2_REG_TX_RES_CAL , 6) ^  6'b110011;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_RES_CAL_317_312  :=  0 ^ 6'b110011;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_RES_CAL is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_TX_RES_CAL);
    }

//initial config body1213 end


//initial config body1214 begin
    if (CP_PMA_CH2_REG_TX_RES_CAL_EN == "FALSE")
    {
        SC_PMA_CH2_REG_TX_RES_CAL_EN_311   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_RES_CAL_EN == "TRUE")
    {
        SC_PMA_CH2_REG_TX_RES_CAL_EN_311   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_RES_CAL_EN_311  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_RES_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_TX_RES_CAL_EN);
    }

//initial config body1214 end


//initial config body1215 begin
    if (CP_PMA_CH2_REG_TX_EI_EN == "FALSE")
    {
        SC_PMA_CH2_REG_TX_EI_EN_310   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_EI_EN == "TRUE")
    {
        SC_PMA_CH2_REG_TX_EI_EN_310   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_EI_EN_310  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_EI_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_TX_EI_EN);
    }

//initial config body1215 end


//initial config body1216 begin
    if (CP_PMA_CH2_REG_TX_EI_EN_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_EI_EN_OW_309   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_EI_EN_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_EI_EN_OW_309   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_EI_EN_OW_309  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_EI_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_EI_EN_OW);
    }

//initial config body1216 end


//initial config body1217 begin
    if (CP_PMA_CH2_REG_TX_BEACON_EN == "FALSE")
    {
        SC_PMA_CH2_REG_TX_BEACON_EN_308   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_BEACON_EN == "TRUE")
    {
        SC_PMA_CH2_REG_TX_BEACON_EN_308   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_BEACON_EN_308  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_BEACON_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_TX_BEACON_EN);
    }

//initial config body1217 end


//initial config body1218 begin
    if (CP_PMA_CH2_REG_TX_BEACON_EN_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_BEACON_EN_OW_307   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_BEACON_EN_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_BEACON_EN_OW_307   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_BEACON_EN_OW_307  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_BEACON_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_BEACON_EN_OW);
    }

//initial config body1218 end


//initial config body1219 begin
    if (CP_PMA_CH2_REG_TX_RXDET_REQ == "FALSE")
    {
        SC_PMA_CH2_REG_TX_RXDET_REQ_306   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_RXDET_REQ == "TRUE")
    {
        SC_PMA_CH2_REG_TX_RXDET_REQ_306   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_RXDET_REQ_306  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_RXDET_REQ is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_TX_RXDET_REQ);
    }

//initial config body1219 end


//initial config body1220 begin
    if (CP_PMA_CH2_REG_TX_RXDET_REQ_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_RXDET_REQ_OW_305   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_RXDET_REQ_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_RXDET_REQ_OW_305   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_RXDET_REQ_OW_305  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_RXDET_REQ_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_RXDET_REQ_OW);
    }

//initial config body1220 end


//initial config body1221 begin
    if (CP_PMA_CH2_REG_TX_BEACON_TIMER_SEL >= 0 && CP_PMA_CH2_REG_TX_BEACON_TIMER_SEL <= 3)
    {
        SC_PMA_CH2_REG_TX_BEACON_TIMER_SEL_304_303  :=  CP_PMA_CH2_REG_TX_BEACON_TIMER_SEL;
    }
    else
    {
        SC_PMA_CH2_REG_TX_BEACON_TIMER_SEL_304_303  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_BEACON_TIMER_SEL is set to %d. Legal values is 0 to 3",CP_PMA_CH2_REG_TX_BEACON_TIMER_SEL);
    }

//initial config body1221 end


//initial config body1222 begin
    if (CP_PMA_CH2_REG_TX_CLKPATH_PD_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_CLKPATH_PD_OW_302   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_CLKPATH_PD_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_CLKPATH_PD_OW_302   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_CLKPATH_PD_OW_302  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_CLKPATH_PD_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_CLKPATH_PD_OW);
    }

//initial config body1222 end


//initial config body1223 begin
    if (CP_PMA_CH2_REG_TX_CLKPATH_PD == "ON")
    {
        SC_PMA_CH2_REG_TX_CLKPATH_PD_301   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_CLKPATH_PD == "OFF")
    {
        SC_PMA_CH2_REG_TX_CLKPATH_PD_301   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_CLKPATH_PD_301  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_CLKPATH_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH2_REG_TX_CLKPATH_PD);
    }

//initial config body1223 end


//initial config body1224 begin
    if (CP_PMA_CH2_REG_TX_PD_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_PD_OW_300   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_PD_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_PD_OW_300   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PD_OW_300  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_PD_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_PD_OW);
    }

//initial config body1224 end


//initial config body1225 begin
    if (CP_PMA_CH2_REG_TX_PD == "ON")
    {
        SC_PMA_CH2_REG_TX_PD_299   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_PD == "OFF")
    {
        SC_PMA_CH2_REG_TX_PD_299   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_PD_299  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH2_REG_TX_PD);
    }

//initial config body1225 end


//initial config body1226 begin
    if (CP_PMA_CH2_REG_RX_TERM_CM_CTRL == "5DIV7")
    {
        SC_PMA_CH2_REG_RX_TERM_CM_CTRL_297_296   := 2'b00;
    }
    else if (CP_PMA_CH2_REG_RX_TERM_CM_CTRL == "2DIV3")
    {
        SC_PMA_CH2_REG_RX_TERM_CM_CTRL_297_296   := 2'b01;
    }
    else if (CP_PMA_CH2_REG_RX_TERM_CM_CTRL == "5DIV6")
    {
        SC_PMA_CH2_REG_RX_TERM_CM_CTRL_297_296   := 2'b10;
    }
    else if (CP_PMA_CH2_REG_RX_TERM_CM_CTRL == "4DIV5")
    {
        SC_PMA_CH2_REG_RX_TERM_CM_CTRL_297_296   := 2'b11;
    }
    else
    {
        SC_PMA_CH2_REG_RX_TERM_CM_CTRL_297_296  :=  2'b00;
        error("Setting Error : The CP_PMA_CH2_REG_RX_TERM_CM_CTRL is set to %s. Legal values is 5DIV7,2DIV3,5DIV6,4DIV5",CP_PMA_CH2_REG_RX_TERM_CM_CTRL);
    }

//initial config body1226 end


//initial config body1227 begin
    if (CP_PMA_CH2_REG_RX_OOB_DETECTOR_PD == "ON")
    {
        SC_PMA_CH2_REG_RX_OOB_DETECTOR_PD_294   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_OOB_DETECTOR_PD == "OFF")
    {
        SC_PMA_CH2_REG_RX_OOB_DETECTOR_PD_294   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_OOB_DETECTOR_PD_294  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_OOB_DETECTOR_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH2_REG_RX_OOB_DETECTOR_PD);
    }

//initial config body1227 end


//initial config body1228 begin
    if (CP_PMA_CH2_REG_RX_OOB_DETECTOR_PD_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_RX_OOB_DETECTOR_PD_OW_293   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_OOB_DETECTOR_PD_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_RX_OOB_DETECTOR_PD_OW_293   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_OOB_DETECTOR_PD_OW_293  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_OOB_DETECTOR_PD_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_RX_OOB_DETECTOR_PD_OW);
    }

//initial config body1228 end


//initial config body1229 begin
    if (CP_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N == "FALSE")
    {
        SC_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_292   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N == "TRUE")
    {
        SC_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_292   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_292  :=  1'b0;
        error("Setting Error : CP_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N);
    }

//initial config body1229 end


//initial config body1230 begin
    if (CP_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_OW_291   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_OW_291   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_OW_291  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_RX_OOB_DETECTOR_RESET_N_OW);
    }

//initial config body1230 end


//initial config body1231 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_IC_I >= 0 && CP_PMA_CH2_REG_RX_SIGDET_IC_I <= 15)
    {
        SC_PMA_CH2_REG_RX_SIGDET_IC_I_290_287   :=  to_unsigned( CP_PMA_CH2_REG_RX_SIGDET_IC_I , 4) ^  4'b1010;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_IC_I_290_287  :=  0 ^ 4'b1010;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_IC_I is set to %d. Legal values is 0 to 15",CP_PMA_CH2_REG_RX_SIGDET_IC_I);
    }

//initial config body1231 end


//initial config body1232 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_4OOB_DET_SEL >= 0 && CP_PMA_CH2_REG_RX_SIGDET_4OOB_DET_SEL <= 7)
    {
        SC_PMA_CH2_REG_RX_SIGDET_4OOB_DET_SEL_282_280   :=  to_unsigned( CP_PMA_CH2_REG_RX_SIGDET_4OOB_DET_SEL , 3) ^  3'b111;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_4OOB_DET_SEL_282_280  :=  0 ^ 3'b111;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_4OOB_DET_SEL is set to %d. Legal values is 0 to 7",CP_PMA_CH2_REG_RX_SIGDET_4OOB_DET_SEL);
    }

//initial config body1232 end


//initial config body1233 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL >= 0 && CP_PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL <= 31)
    {
        SC_PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275  :=  CP_PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL is set to %d. Legal values is 0 to 31",CP_PMA_CH2_REG_RX_SIGDET_OOB_DET_COUNT_VAL);
    }

//initial config body1233 end


//initial config body1234 begin
    if (CP_PMA_CH2_REG_SLIP_FIFO_INV == "POS_EDGE")
    {
        SC_PMA_CH2_REG_SLIP_FIFO_INV_274  :=  1'b0;
    }
    else if (CP_PMA_CH2_REG_SLIP_FIFO_INV == "NEG_EDGE")
    {
        SC_PMA_CH2_REG_SLIP_FIFO_INV_274  :=  1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_SLIP_FIFO_INV_274  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_SLIP_FIFO_INV is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_PMA_CH2_REG_SLIP_FIFO_INV);
    }

//initial config body1234 end


//initial config body1235 begin
    if (CP_PMA_CH2_REG_SLIP_FIFO_INV_EN == "FALSE")
    {
        SC_PMA_CH2_REG_SLIP_FIFO_INV_EN_273  :=  1'b0;
    }
    else if (CP_PMA_CH2_REG_SLIP_FIFO_INV_EN == "TRUE")
    {
        SC_PMA_CH2_REG_SLIP_FIFO_INV_EN_273  :=  1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_SLIP_FIFO_INV_EN_273  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_SLIP_FIFO_INV_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_SLIP_FIFO_INV_EN);
    }

//initial config body1235 end


//initial config body1236 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_NOSIG_COUNT_SETTING >= 0 && CP_PMA_CH2_REG_RX_SIGDET_NOSIG_COUNT_SETTING <= 7)
    {
        SC_PMA_CH2_REG_RX_SIGDET_NOSIG_CNT_SET_272_270   :=  to_unsigned( CP_PMA_CH2_REG_RX_SIGDET_NOSIG_COUNT_SETTING , 3) ^  3'b100;
        //272 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_NOSIG_CNT_SET_272_270  :=  0 ^ 3'b100;
        //272 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_NOSIG_COUNT_SETTING is set to %d. Legal values is 0 to 7",CP_PMA_CH2_REG_RX_SIGDET_NOSIG_COUNT_SETTING);
    }

//initial config body1236 end


//initial config body1237 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_CHK_WINDOW_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_CHK_WINDOW_EN_269   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_CHK_WINDOW_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_CHK_WINDOW_EN_269   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_CHK_WINDOW_EN_269  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_CHK_WINDOW_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_SIGDET_CHK_WINDOW_EN);
    }

//initial config body1237 end


//initial config body1238 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW >= 0 && CP_PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW <= 31)
    {
        SC_PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264   :=  to_unsigned( CP_PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW , 5) ^  5'b00011;
        //265_264 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264  :=  0 ^ 5'b00011;
        //265_264 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW is set to %d. Legal values is 0 to 31",CP_PMA_CH2_REG_RX_SIGDET_CH2_CHK_WINDOW);
    }

//initial config body1238 end


//initial config body1239 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_CH2_SEL == 0)
    {
        SC_PMA_CH2_REG_RX_SIGDET_CH2_SEL_263   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_CH2_SEL == 1)
    {
        SC_PMA_CH2_REG_RX_SIGDET_CH2_SEL_263   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_CH2_SEL_263  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_CH2_SEL is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_RX_SIGDET_CH2_SEL);
    }

//initial config body1239 end


//initial config body1240 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_PULSE_EXT == "DISABLE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_PULSE_EXT_262   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_PULSE_EXT == "ENABLE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_PULSE_EXT_262   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_PULSE_EXT_262  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_PULSE_EXT is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_RX_SIGDET_PULSE_EXT);
    }

//initial config body1240 end


//initial config body1241 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_GRM == 0)
    {
        SC_PMA_CH2_REG_RX_SIGDET_GRM_261_260   := 2'b00;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_GRM == 1)
    {
        SC_PMA_CH2_REG_RX_SIGDET_GRM_261_260   := 2'b01;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_GRM == 2)
    {
        SC_PMA_CH2_REG_RX_SIGDET_GRM_261_260   := 2'b10;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_GRM == 3)
    {
        SC_PMA_CH2_REG_RX_SIGDET_GRM_261_260   := 2'b11;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_GRM_261_260  :=  2'b00;
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_GRM is set to %s. Legal values is 0,1,2,3",CP_PMA_CH2_REG_RX_SIGDET_GRM);
    }

//initial config body1241 end


//initial config body1242 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_VTH == "12_5MV")
    {
        SC_PMA_CH2_REG_RX_SIGDET_VTH_259_256   := 4'b0000 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_VTH == "25MV")
    {
        SC_PMA_CH2_REG_RX_SIGDET_VTH_259_256   := 4'b0001 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_VTH == "37_5MV")
    {
        SC_PMA_CH2_REG_RX_SIGDET_VTH_259_256   := 4'b0010 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_VTH == "50MV")
    {
        SC_PMA_CH2_REG_RX_SIGDET_VTH_259_256   := 4'b0011 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_VTH == "62_5MV")
    {
        SC_PMA_CH2_REG_RX_SIGDET_VTH_259_256   := 4'b0100 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_VTH == "75MV")
    {
        SC_PMA_CH2_REG_RX_SIGDET_VTH_259_256   := 4'b0101 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_VTH == "87_5MV")
    {
        SC_PMA_CH2_REG_RX_SIGDET_VTH_259_256   := 4'b0110 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_VTH == "100MV")
    {
        SC_PMA_CH2_REG_RX_SIGDET_VTH_259_256   := 4'b0111 ^ 4'b0011;
        //257_256 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_VTH_259_256  :=  4'b0000 ^ 4'b0011;
        //257_256 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_VTH is set to %s. Legal values is 12_5MV,25MV,37_5MV,50MV,62_5MV,75MV,87_5MV,100MV",CP_PMA_CH2_REG_RX_SIGDET_VTH);
    }

//initial config body1242 end


//initial config body1243 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_STATUS == "FALSE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_STATUS_255   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_STATUS == "TRUE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_STATUS_255   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_STATUS_255  :=  1'b0;
        error("Setting Error : CP_PMA_CH2_REG_RX_SIGDET_STATUS  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_RX_SIGDET_STATUS);
    }

//initial config body1243 end


//initial config body1244 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_STATUS_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_STATUS_OW_254   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_STATUS_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_STATUS_OW_254   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_STATUS_OW_254  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_STATUS_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_RX_SIGDET_STATUS_OW);
    }

//initial config body1244 end


//initial config body1245 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_FSM_RST_N == "FALSE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_FSM_RST_N_253   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_FSM_RST_N == "TRUE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_FSM_RST_N_253   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_FSM_RST_N_253  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : CP_PMA_CH2_REG_RX_SIGDET_FSM_RST_N  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_RX_SIGDET_FSM_RST_N);
    }

//initial config body1245 end


//initial config body1246 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_STATUS_SEL >= 0 && CP_PMA_CH2_REG_RX_SIGDET_STATUS_SEL <= 7)
    {
        SC_PMA_CH2_REG_RX_SIGDET_STATUS_SEL_252_250   :=  to_unsigned( CP_PMA_CH2_REG_RX_SIGDET_STATUS_SEL , 3) ^  3'b101;
        //252,250 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_STATUS_SEL_252_250  :=  0 ^ 3'b101;
        //252,250 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_STATUS_SEL is set to %d. Legal values is 0 to 7",CP_PMA_CH2_REG_RX_SIGDET_STATUS_SEL);
    }

//initial config body1246 end


//initial config body1247 begin
    if (CP_PMA_CH2_REG_RX_SLIP_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_SLIP_EN_249  :=  1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_SLIP_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_SLIP_EN_249  :=  1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SLIP_EN_249  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_SLIP_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_SLIP_EN);
    }

//initial config body1247 end


//initial config body1248 begin
    if (CP_PMA_CH2_REG_RX_SLIP_SEL >= 0 && CP_PMA_CH2_REG_RX_SLIP_SEL <= 15)
    {
        SC_PMA_CH2_REG_RX_SLIP_SEL_248_245  :=  CP_PMA_CH2_REG_RX_SLIP_SEL;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SLIP_SEL_248_245  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_SLIP_SEL is set to %d. Legal values is 0 to 15",CP_PMA_CH2_REG_RX_SLIP_SEL);
    }

//initial config body1248 end


//initial config body1249 begin
    if (CP_PMA_CH2_REG_RX_SLIP_SEL_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_SLIP_SEL_EN_244  :=  1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_SLIP_SEL_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_SLIP_SEL_EN_244  :=  1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SLIP_SEL_EN_244  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_SLIP_SEL_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_SLIP_SEL_EN);
    }

//initial config body1249 end


//initial config body1250 begin
    if (CP_PMA_CH2_REG_TX_DCC_DISABLE == "DISABLE")
    {
        SC_PMA_CH2_REG_TX_DCC_DISABLE_243   := 1'b1;
    }
    else if (CP_PMA_CH2_REG_TX_DCC_DISABLE == "ENABLE")
    {
        SC_PMA_CH2_REG_TX_DCC_DISABLE_243   := 1'b0;
    }
    else
    {
        SC_PMA_CH2_REG_TX_DCC_DISABLE_243  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_DCC_DISABLE is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_TX_DCC_DISABLE);
    }

//initial config body1250 end


//initial config body1251 begin
    if (CP_PMA_CH2_REG_RX_DCC_DISABLE == "DISABLE")
    {
        SC_PMA_CH2_REG_RX_DCC_DISABLE_242   := 1'b1;
    }
    else if (CP_PMA_CH2_REG_RX_DCC_DISABLE == "ENABLE")
    {
        SC_PMA_CH2_REG_RX_DCC_DISABLE_242   := 1'b0;
    }
    else
    {
        SC_PMA_CH2_REG_RX_DCC_DISABLE_242  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_DCC_DISABLE is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_RX_DCC_DISABLE);
    }

//initial config body1251 end


//initial config body1252 begin
    if (CP_PMA_CH2_REG_RX_SATA_COMWAKE == "FALSE")
    {
        SC_PMA_CH2_REG_RX_SATA_COMWAKE_239   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_SATA_COMWAKE == "TRUE")
    {
        SC_PMA_CH2_REG_RX_SATA_COMWAKE_239   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SATA_COMWAKE_239  :=  1'b0;
        error("Setting Error : CP_PMA_CH2_REG_RX_SATA_COMWAKE  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_RX_SATA_COMWAKE);
    }

//initial config body1252 end


//initial config body1253 begin
    if (CP_PMA_CH2_REG_RX_SATA_COMWAKE_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_RX_SATA_COMWAKE_OW_238   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_SATA_COMWAKE_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_RX_SATA_COMWAKE_OW_238   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SATA_COMWAKE_OW_238  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_SATA_COMWAKE_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_RX_SATA_COMWAKE_OW);
    }

//initial config body1253 end


//initial config body1254 begin
    if (CP_PMA_CH2_REG_RX_SATA_COMINIT == "FALSE")
    {
        SC_PMA_CH2_REG_RX_SATA_COMINIT_237   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_SATA_COMINIT == "TRUE")
    {
        SC_PMA_CH2_REG_RX_SATA_COMINIT_237   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SATA_COMINIT_237  :=  1'b0;
        error("Setting Error : CP_PMA_CH2_REG_RX_SATA_COMINIT  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_RX_SATA_COMINIT);
    }

//initial config body1254 end


//initial config body1255 begin
    if (CP_PMA_CH2_REG_RX_SATA_COMINIT_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_RX_SATA_COMINIT_OW_236   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_SATA_COMINIT_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_RX_SATA_COMINIT_OW_236   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SATA_COMINIT_OW_236  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_SATA_COMINIT_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_RX_SATA_COMINIT_OW);
    }

//initial config body1255 end


//initial config body1256 begin
    if (CP_PMA_CH2_REG_RX_SYNC_RST_N == "FALSE")
    {
        SC_PMA_CH2_REG_RX_SYNC_RST_N_231   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_RX_SYNC_RST_N == "TRUE")
    {
        SC_PMA_CH2_REG_RX_SYNC_RST_N_231   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SYNC_RST_N_231  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : CP_PMA_CH2_REG_RX_SYNC_RST_N  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_RX_SYNC_RST_N);
    }

//initial config body1256 end


//initial config body1257 begin
    if (CP_PMA_CH2_REG_RX_SYNC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_SYNC_RST_N_EN_230   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_SYNC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_SYNC_RST_N_EN_230   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SYNC_RST_N_EN_230  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_SYNC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_SYNC_RST_N_EN);
    }

//initial config body1257 end


//initial config body1258 begin
    if (CP_PMA_CH2_REG_COMINIT_STATUS_CLEAR == 0)
    {
        SC_PMA_CH2_REG_COMINIT_STATUS_CLEAR_229  :=  1'b0;
    }
    else if (CP_PMA_CH2_REG_COMINIT_STATUS_CLEAR == 1)
    {
        SC_PMA_CH2_REG_COMINIT_STATUS_CLEAR_229  :=  1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_COMINIT_STATUS_CLEAR_229  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_COMINIT_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_COMINIT_STATUS_CLEAR);
    }

//initial config body1258 end


//initial config body1259 begin
    if (CP_PMA_CH2_REG_COMWAKE_STATUS_CLEAR == 0)
    {
        SC_PMA_CH2_REG_COMWAKE_STATUS_CLEAR_228  :=  1'b0;
    }
    else if (CP_PMA_CH2_REG_COMWAKE_STATUS_CLEAR == 1)
    {
        SC_PMA_CH2_REG_COMWAKE_STATUS_CLEAR_228  :=  1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_COMWAKE_STATUS_CLEAR_228  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_COMWAKE_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_COMWAKE_STATUS_CLEAR);
    }

//initial config body1259 end


//initial config body1260 begin
    if (CP_PMA_CH2_REG_RX_PIBUF_IC_TX == 0)
    {
        SC_PMA_CH2_REG_RX_PIBUF_IC_TX_227_226   := 2'b00 ^ 2'b01;
        //226 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_PIBUF_IC_TX == 1)
    {
        SC_PMA_CH2_REG_RX_PIBUF_IC_TX_227_226   := 2'b01 ^ 2'b01;
        //226 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_PIBUF_IC_TX == 2)
    {
        SC_PMA_CH2_REG_RX_PIBUF_IC_TX_227_226   := 2'b10 ^ 2'b01;
        //226 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_PIBUF_IC_TX == 3)
    {
        SC_PMA_CH2_REG_RX_PIBUF_IC_TX_227_226   := 2'b11 ^ 2'b01;
        //226 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_PIBUF_IC_TX_227_226  :=  2'b00 ^ 2'b01;
        //226 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_PIBUF_IC_TX is set to %s. Legal values is 0,1,2,3",CP_PMA_CH2_REG_RX_PIBUF_IC_TX);
    }

//initial config body1260 end


//initial config body1261 begin
    if (CP_PMA_CH2_REG_OOB_COMINIT_GAP_MAX >= 0 && CP_PMA_CH2_REG_OOB_COMINIT_GAP_MAX <= 255)
    {
        SC_PMA_CH2_REG_OOB_COMINIT_GAP_MAX_225_218   :=  to_unsigned( CP_PMA_CH2_REG_OOB_COMINIT_GAP_MAX , 8) ^  8'b00100011;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_OOB_COMINIT_GAP_MAX_225_218  :=  0 ^ 8'b00100011;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_OOB_COMINIT_GAP_MAX is set to %d. Legal values is 0 to 255",CP_PMA_CH2_REG_OOB_COMINIT_GAP_MAX);
    }

//initial config body1261 end


//initial config body1262 begin
    if (CP_PMA_CH2_REG_OOB_COMINIT_GAP_MIN >= 0 && CP_PMA_CH2_REG_OOB_COMINIT_GAP_MIN <= 255)
    {
        SC_PMA_CH2_REG_OOB_COMINIT_GAP_MIN_217_210   :=  to_unsigned( CP_PMA_CH2_REG_OOB_COMINIT_GAP_MIN , 8) ^  8'b00001111;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_OOB_COMINIT_GAP_MIN_217_210  :=  0 ^ 8'b00001111;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_OOB_COMINIT_GAP_MIN is set to %d. Legal values is 0 to 255",CP_PMA_CH2_REG_OOB_COMINIT_GAP_MIN);
    }

//initial config body1262 end


//initial config body1263 begin
    if (CP_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX >= 0 && CP_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX <= 63)
    {
        SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX_209_204   :=  to_unsigned( CP_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX , 6) ^  6'b001011;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX_209_204  :=  0 ^ 6'b001011;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_OOB_COMWAKE_GAP_MAX);
    }

//initial config body1263 end


//initial config body1264 begin
    if (CP_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN >= 0 && CP_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN <= 63)
    {
        SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN_203_198   :=  to_unsigned( CP_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN , 6) ^  6'b000011;
        //199_198 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN_203_198  :=  0 ^ 6'b000011;
        //199_198 reversed
        error("Setting Error : The CP_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_OOB_COMWAKE_GAP_MIN);
    }

//initial config body1264 end


//initial config body1265 begin
    if (CP_PMA_CH2_REG_PMA_TEST_SEL == 0)
    {
        SC_PMA_CH2_REG_PMA_TEST_SEL_197_195   := 3'b000;
    }
    else if (CP_PMA_CH2_REG_PMA_TEST_SEL == 1)
    {
        SC_PMA_CH2_REG_PMA_TEST_SEL_197_195   := 3'b001;
    }
    else
    {
        SC_PMA_CH2_REG_PMA_TEST_SEL_197_195  :=  3'b000;
        error("Setting Error : The CP_PMA_CH2_REG_PMA_TEST_SEL is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_PMA_TEST_SEL);
    }

//initial config body1265 end


//initial config body1266 begin
    if (CP_PMA_CH2_REG_CDR_STATUS_FIFO_EN == "FALSE")
    {
        SC_PMA_CH2_REG_CDR_STATUS_FIFO_EN_194   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_STATUS_FIFO_EN == "TRUE")
    {
        SC_PMA_CH2_REG_CDR_STATUS_FIFO_EN_194   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_STATUS_FIFO_EN_194  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_CDR_STATUS_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_CDR_STATUS_FIFO_EN);
    }

//initial config body1266 end


//initial config body1267 begin
    if (CP_PMA_CH2_REG_CDR_STATUS_RADDR_INIT >= 0 && CP_PMA_CH2_REG_CDR_STATUS_RADDR_INIT <= 7)
    {
        SC_PMA_CH2_REG_CDR_STATUS_RADDR_INIT_193_191  :=  CP_PMA_CH2_REG_CDR_STATUS_RADDR_INIT;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_STATUS_RADDR_INIT_193_191  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_CDR_STATUS_RADDR_INIT is set to %d. Legal values is 0 to 7",CP_PMA_CH2_REG_CDR_STATUS_RADDR_INIT);
    }

//initial config body1267 end


//initial config body1268 begin
    if (CP_PMA_CH2_REG_CDR_TURBO_MODE_EN == "FALSE")
    {
        SC_PMA_CH2_REG_CDR_TURBO_MODE_EN_189   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_TURBO_MODE_EN == "TRUE")
    {
        SC_PMA_CH2_REG_CDR_TURBO_MODE_EN_189   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_TURBO_MODE_EN_189  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_CDR_TURBO_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_CDR_TURBO_MODE_EN);
    }

//initial config body1268 end


//initial config body1269 begin
    if (CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_OW_188   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_OW_188   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_OW_188  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_OW);
    }

//initial config body1269 end


//initial config body1270 begin
    if (CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_VAL == "FALSE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_VAL_187   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_VAL == "TRUE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_VAL_187   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_VAL_187  :=  1'b0;
        error("Setting Error : CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_VAL  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_VAL);
    }

//initial config body1270 end


//initial config body1271 begin
    if (CP_PMA_CH2_REG_CDR_SAT_DET_TIMER == 0)
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_TIMER_186_185   := 2'b00 ^ 2'b10;
        //186 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_SAT_DET_TIMER == 1)
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_TIMER_186_185   := 2'b01 ^ 2'b10;
        //186 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_SAT_DET_TIMER == 2)
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_TIMER_186_185   := 2'b10 ^ 2'b10;
        //186 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_SAT_DET_TIMER == 3)
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_TIMER_186_185   := 2'b11 ^ 2'b10;
        //186 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_TIMER_186_185  :=  2'b00 ^ 2'b10;
        //186 reversed
        error("Setting Error : The CP_PMA_CH2_REG_CDR_SAT_DET_TIMER is set to %s. Legal values is 0,1,2,3",CP_PMA_CH2_REG_CDR_SAT_DET_TIMER);
    }

//initial config body1271 end


//initial config body1272 begin
    if (CP_PMA_CH2_REG_CDR_SIGDET_STATUS_DIS == "FALSE")
    {
        SC_PMA_CH2_REG_CDR_SIGDET_STATUS_DIS_184   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_SIGDET_STATUS_DIS == "TRUE")
    {
        SC_PMA_CH2_REG_CDR_SIGDET_STATUS_DIS_184   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_SIGDET_STATUS_DIS_184  :=  1'b0;
        error("Setting Error : CP_PMA_CH2_REG_CDR_SIGDET_STATUS_DIS  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_CDR_SIGDET_STATUS_DIS);
    }

//initial config body1272 end


//initial config body1273 begin
    if (CP_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_OW_183   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_OW_183   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_OW_183  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_OW);
    }

//initial config body1273 end


//initial config body1274 begin
    if (CP_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST == "FALSE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_182   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST == "TRUE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_182   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST_182  :=  1'b0;
        error("Setting Error : CP_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_CDR_SAT_DET_STICKY_RST);
    }

//initial config body1274 end


//initial config body1275 begin
    if (CP_PMA_CH2_REG_CDR_SAT_DET_RST_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_RST_OW_181   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_SAT_DET_RST_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_RST_OW_181   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_RST_OW_181  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_CDR_SAT_DET_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_CDR_SAT_DET_RST_OW);
    }

//initial config body1275 end


//initial config body1276 begin
    if (CP_PMA_CH2_REG_CDR_SAT_DET_RST == "FALSE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_RST_180   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_SAT_DET_RST == "TRUE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_RST_180   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_RST_180  :=  1'b0;
        error("Setting Error : CP_PMA_CH2_REG_CDR_SAT_DET_RST  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_CDR_SAT_DET_RST);
    }

//initial config body1276 end


//initial config body1277 begin
    if (CP_PMA_CH2_REG_CDR_PI_CTRL_RST_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_CDR_PI_CTRL_RST_OW_179   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_PI_CTRL_RST_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_CDR_PI_CTRL_RST_OW_179   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_PI_CTRL_RST_OW_179  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_CDR_PI_CTRL_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_CDR_PI_CTRL_RST_OW);
    }

//initial config body1277 end


//initial config body1278 begin
    if (CP_PMA_CH2_REG_CDR_PI_CTRL_RST == "FALSE")
    {
        SC_PMA_CH2_REG_CDR_PI_CTRL_RST_178   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_PI_CTRL_RST == "TRUE")
    {
        SC_PMA_CH2_REG_CDR_PI_CTRL_RST_178   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_PI_CTRL_RST_178  :=  1'b0;
        error("Setting Error : CP_PMA_CH2_REG_CDR_PI_CTRL_RST  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_CDR_PI_CTRL_RST);
    }

//initial config body1278 end


//initial config body1279 begin
    if (CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_RESET_EN == "FALSE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_RESET_EN_177   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_RESET_EN == "TRUE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_RESET_EN_177   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_RESET_EN_177  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_RESET_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_RESET_EN);
    }

//initial config body1279 end


//initial config body1280 begin
    if (CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_EN == "FALSE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_EN_176   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_EN == "TRUE")
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_EN_176   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_SAT_DET_STATUS_EN_176  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_CDR_SAT_DET_STATUS_EN);
    }

//initial config body1280 end


//initial config body1281 begin
    if (CP_PMA_CH2_REG_CDR_INT_SAT_DET_EN == "FALSE")
    {
        SC_PMA_CH2_REG_CDR_INT_SAT_DET_EN_163   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_SAT_DET_EN == "TRUE")
    {
        SC_PMA_CH2_REG_CDR_INT_SAT_DET_EN_163   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_INT_SAT_DET_EN_163  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_CDR_INT_SAT_DET_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_CDR_INT_SAT_DET_EN);
    }

//initial config body1281 end


//initial config body1282 begin
    if (CP_PMA_CH2_REG_CDR_LOCK_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_CDR_LOCK_OW_162   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_LOCK_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_CDR_LOCK_OW_162   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_LOCK_OW_162  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_CDR_LOCK_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_CDR_LOCK_OW);
    }

//initial config body1282 end


//initial config body1283 begin
    if (CP_PMA_CH2_REG_CDR_LOCK_VAL == "FALSE")
    {
        SC_PMA_CH2_REG_CDR_LOCK_VAL_161   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_LOCK_VAL == "TRUE")
    {
        SC_PMA_CH2_REG_CDR_LOCK_VAL_161   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_LOCK_VAL_161  :=  1'b0;
        error("Setting Error : CP_PMA_CH2_REG_CDR_LOCK_VAL  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_CDR_LOCK_VAL);
    }

//initial config body1283 end


//initial config body1284 begin
    if (CP_PMA_CH2_REG_CDR_TURBO_MODE_TIMER == 0)
    {
        SC_PMA_CH2_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b00 ^ 2'b01;
        //159 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_TURBO_MODE_TIMER == 1)
    {
        SC_PMA_CH2_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b01 ^ 2'b01;
        //159 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_TURBO_MODE_TIMER == 2)
    {
        SC_PMA_CH2_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b10 ^ 2'b01;
        //159 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_TURBO_MODE_TIMER == 3)
    {
        SC_PMA_CH2_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b11 ^ 2'b01;
        //159 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_TURBO_MODE_TIMER_160_159  :=  2'b00 ^ 2'b01;
        //159 reversed
        error("Setting Error : The CP_PMA_CH2_REG_CDR_TURBO_MODE_TIMER is set to %s. Legal values is 0,1,2,3",CP_PMA_CH2_REG_CDR_TURBO_MODE_TIMER);
    }

//initial config body1284 end


//initial config body1285 begin
    if (CP_PMA_CH2_REG_CDR_LOCK_TIMER == "0_8U")
    {
        SC_PMA_CH2_REG_CDR_LOCK_TIMER_158_156  :=  3'b000 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_LOCK_TIMER == "1_2U")
    {
        SC_PMA_CH2_REG_CDR_LOCK_TIMER_158_156  :=  3'b001 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_LOCK_TIMER == "1_6U")
    {
        SC_PMA_CH2_REG_CDR_LOCK_TIMER_158_156  :=  3'b010 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_LOCK_TIMER == "2_4U")
    {
        SC_PMA_CH2_REG_CDR_LOCK_TIMER_158_156  :=  3'b011 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_LOCK_TIMER == "3_2U")
    {
        SC_PMA_CH2_REG_CDR_LOCK_TIMER_158_156  :=  3'b100 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_LOCK_TIMER == "4_8U")
    {
        SC_PMA_CH2_REG_CDR_LOCK_TIMER_158_156  :=  3'b101 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_LOCK_TIMER == "12_8U")
    {
        SC_PMA_CH2_REG_CDR_LOCK_TIMER_158_156  :=  3'b110 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_LOCK_TIMER == "25_6U")
    {
        SC_PMA_CH2_REG_CDR_LOCK_TIMER_158_156  :=  3'b111 ^ 3'b001;
        //156 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_LOCK_TIMER_158_156  :=  3'b000 ^ 3'b001;
        //156 reversed
        error("Setting Error : The CP_PMA_CH2_REG_CDR_LOCK_TIMER is set to %s. Legal values is 0_8U,1_2U,1_6U,2_4U,3_2U,4_8U,12_8U,25_6U",CP_PMA_CH2_REG_CDR_LOCK_TIMER);
    }

//initial config body1285 end


//initial config body1286 begin
    if (CP_PMA_CH2_REG_CDR_RX_PI_FORCE_D >= 0 && CP_PMA_CH2_REG_CDR_RX_PI_FORCE_D <= 255)
    {
        SC_PMA_CH2_REG_CDR_RX_PI_FORCE_D_155_148  :=  CP_PMA_CH2_REG_CDR_RX_PI_FORCE_D;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_RX_PI_FORCE_D_155_148  :=  0;
        error("Setting Error : The CP_PMA_CH2_REG_CDR_RX_PI_FORCE_D is set to %d. Legal values is 0 to 255",CP_PMA_CH2_REG_CDR_RX_PI_FORCE_D);
    }

//initial config body1286 end


//initial config body1287 begin
    if (CP_PMA_CH2_REG_CDR_RX_PI_FORCE_SEL == 0)
    {
        SC_PMA_CH2_REG_CDR_RX_PI_FORCE_SEL_147   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_RX_PI_FORCE_SEL == 1)
    {
        SC_PMA_CH2_REG_CDR_RX_PI_FORCE_SEL_147   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_RX_PI_FORCE_SEL_147  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_CDR_RX_PI_FORCE_SEL is set to %s. Legal values is 0,1",CP_PMA_CH2_REG_CDR_RX_PI_FORCE_SEL);
    }

//initial config body1287 end


//initial config body1288 begin
    if (CP_PMA_CH2_REG_CDR_LOCK_RST_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_CDR_LOCK_RST_OW_146   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_LOCK_RST_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_CDR_LOCK_RST_OW_146   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_LOCK_RST_OW_146  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_CDR_LOCK_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_CDR_LOCK_RST_OW);
    }

//initial config body1288 end


//initial config body1289 begin
    if (CP_PMA_CH2_REG_CDR_LOCK_RST == "FALSE")
    {
        SC_PMA_CH2_REG_CDR_LOCK_RST_145   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_LOCK_RST == "TRUE")
    {
        SC_PMA_CH2_REG_CDR_LOCK_RST_145   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_LOCK_RST_145  :=  1'b0;
        error("Setting Error : CP_PMA_CH2_REG_CDR_LOCK_RST is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_CDR_LOCK_RST);
    }

//initial config body1289 end


//initial config body1290 begin
    if (CP_PMA_CH2_REG_CDR_PROP_RST_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_CDR_PROP_RST_OW_144   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_RST_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_CDR_PROP_RST_OW_144   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_PROP_RST_OW_144  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_CDR_PROP_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_CDR_PROP_RST_OW);
    }

//initial config body1290 end


//initial config body1291 begin
    if (CP_PMA_CH2_REG_CDR_PROP_RST == "FALSE")
    {
        SC_PMA_CH2_REG_CDR_PROP_RST_143   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_RST == "TRUE")
    {
        SC_PMA_CH2_REG_CDR_PROP_RST_143   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_PROP_RST_143  :=  1'b0;
        error("Setting Error : CP_PMA_CH2_REG_CDR_PROP_RST is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_CDR_PROP_RST);
    }

//initial config body1291 end


//initial config body1292 begin
    if (CP_PMA_CH2_REG_CDR_INT_RST_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_CDR_INT_RST_OW_142   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_RST_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_CDR_INT_RST_OW_142   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_INT_RST_OW_142  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_CDR_INT_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_CDR_INT_RST_OW);
    }

//initial config body1292 end


//initial config body1293 begin
    if (CP_PMA_CH2_REG_CDR_INT_RST == "FALSE")
    {
        SC_PMA_CH2_REG_CDR_INT_RST_141   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_RST == "TRUE")
    {
        SC_PMA_CH2_REG_CDR_INT_RST_141   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_INT_RST_141  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_CDR_INT_RST is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_CDR_INT_RST);
    }

//initial config body1293 end


//initial config body1294 begin
    if (CP_PMA_CH2_REG_CDR_INT_SAT_MIN >= 0 && CP_PMA_CH2_REG_CDR_INT_SAT_MIN <= 1023)
    {
        SC_PMA_CH2_REG_CDR_INT_SAT_MIN_140_131   :=  to_unsigned( CP_PMA_CH2_REG_CDR_INT_SAT_MIN , 10) ^  10'b0000100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_INT_SAT_MIN_140_131  :=  0 ^ 10'b0000100000;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_CDR_INT_SAT_MIN is set to %d. Legal values is 0 to 1023",CP_PMA_CH2_REG_CDR_INT_SAT_MIN);
    }

//initial config body1294 end


//initial config body1295 begin
    if (CP_PMA_CH2_REG_CDR_INT_SAT_MAX >= 0 && CP_PMA_CH2_REG_CDR_INT_SAT_MAX <= 1023)
    {
        SC_PMA_CH2_REG_CDR_INT_SAT_MAX_130_121   :=  to_unsigned( CP_PMA_CH2_REG_CDR_INT_SAT_MAX , 10) ^  10'b1111100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_INT_SAT_MAX_130_121  :=  0 ^ 10'b1111100000;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_CDR_INT_SAT_MAX is set to %d. Legal values is 0 to 1023",CP_PMA_CH2_REG_CDR_INT_SAT_MAX);
    }

//initial config body1295 end


//initial config body1296 begin
    if (CP_PMA_CH2_REG_CDR_INT_TURBO_GAIN == 0)
    {
        SC_PMA_CH2_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b000 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_TURBO_GAIN == 1)
    {
        SC_PMA_CH2_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b001 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_TURBO_GAIN == 2)
    {
        SC_PMA_CH2_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b010 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_TURBO_GAIN == 3)
    {
        SC_PMA_CH2_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b011 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_TURBO_GAIN == 4)
    {
        SC_PMA_CH2_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b100 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_TURBO_GAIN == 5)
    {
        SC_PMA_CH2_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b101 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_TURBO_GAIN == 6)
    {
        SC_PMA_CH2_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b110 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_TURBO_GAIN == 7)
    {
        SC_PMA_CH2_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b111 ^ 3'b110;
        //120_119 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_INT_TURBO_GAIN_120_118  :=  3'b000 ^ 3'b110;
        //120_119 reversed
        error("Setting Error : The CP_PMA_CH2_REG_CDR_INT_TURBO_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH2_REG_CDR_INT_TURBO_GAIN);
    }

//initial config body1296 end


//initial config body1297 begin
    if (CP_PMA_CH2_REG_CDR_INT_GAIN == 0)
    {
        SC_PMA_CH2_REG_CDR_INT_GAIN_117_115   := 3'b000 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_GAIN == 1)
    {
        SC_PMA_CH2_REG_CDR_INT_GAIN_117_115   := 3'b001 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_GAIN == 2)
    {
        SC_PMA_CH2_REG_CDR_INT_GAIN_117_115   := 3'b010 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_GAIN == 3)
    {
        SC_PMA_CH2_REG_CDR_INT_GAIN_117_115   := 3'b011 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_GAIN == 4)
    {
        SC_PMA_CH2_REG_CDR_INT_GAIN_117_115   := 3'b100 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_GAIN == 5)
    {
        SC_PMA_CH2_REG_CDR_INT_GAIN_117_115   := 3'b101 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_GAIN == 6)
    {
        SC_PMA_CH2_REG_CDR_INT_GAIN_117_115   := 3'b110 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_INT_GAIN == 7)
    {
        SC_PMA_CH2_REG_CDR_INT_GAIN_117_115   := 3'b111 ^ 3'b101;
        //117_115 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_INT_GAIN_117_115  :=  3'b000 ^ 3'b101;
        //117_115 reversed
        error("Setting Error : The CP_PMA_CH2_REG_CDR_INT_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH2_REG_CDR_INT_GAIN);
    }

//initial config body1297 end


//initial config body1298 begin
    if (CP_PMA_CH2_REG_CDR_PROP_TURBO_GAIN == 0)
    {
        SC_PMA_CH2_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b000 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_TURBO_GAIN == 1)
    {
        SC_PMA_CH2_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b001 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_TURBO_GAIN == 2)
    {
        SC_PMA_CH2_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b010 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_TURBO_GAIN == 3)
    {
        SC_PMA_CH2_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b011 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_TURBO_GAIN == 4)
    {
        SC_PMA_CH2_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b100 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_TURBO_GAIN == 5)
    {
        SC_PMA_CH2_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b101 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_TURBO_GAIN == 6)
    {
        SC_PMA_CH2_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b110 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_TURBO_GAIN == 7)
    {
        SC_PMA_CH2_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b111 ^ 3'b110;
        //114_113 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_PROP_TURBO_GAIN_114_112  :=  3'b000 ^ 3'b110;
        //114_113 reversed
        error("Setting Error : The CP_PMA_CH2_REG_CDR_PROP_TURBO_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH2_REG_CDR_PROP_TURBO_GAIN);
    }

//initial config body1298 end


//initial config body1299 begin
    if (CP_PMA_CH2_REG_CDR_PROP_GAIN == 0)
    {
        SC_PMA_CH2_REG_CDR_PROP_GAIN_111_109   := 3'b000 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_GAIN == 1)
    {
        SC_PMA_CH2_REG_CDR_PROP_GAIN_111_109   := 3'b001 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_GAIN == 2)
    {
        SC_PMA_CH2_REG_CDR_PROP_GAIN_111_109   := 3'b010 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_GAIN == 3)
    {
        SC_PMA_CH2_REG_CDR_PROP_GAIN_111_109   := 3'b011 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_GAIN == 4)
    {
        SC_PMA_CH2_REG_CDR_PROP_GAIN_111_109   := 3'b100 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_GAIN == 5)
    {
        SC_PMA_CH2_REG_CDR_PROP_GAIN_111_109   := 3'b101 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_GAIN == 6)
    {
        SC_PMA_CH2_REG_CDR_PROP_GAIN_111_109   := 3'b110 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH2_REG_CDR_PROP_GAIN == 7)
    {
        SC_PMA_CH2_REG_CDR_PROP_GAIN_111_109   := 3'b111 ^ 3'b101;
        //111_109 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_CDR_PROP_GAIN_111_109  :=  3'b000 ^ 3'b101;
        //111_109 reversed
        error("Setting Error : The CP_PMA_CH2_REG_CDR_PROP_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH2_REG_CDR_PROP_GAIN);
    }

//initial config body1299 end


//initial config body1300 begin
    if (CP_PMA_CH2_REG_CHK_COUNTER_EN == "FALSE")
    {
        SC_PMA_CH2_REG_CHK_COUNTER_EN_108   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_CHK_COUNTER_EN == "TRUE")
    {
        SC_PMA_CH2_REG_CHK_COUNTER_EN_108   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_CHK_COUNTER_EN_108  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_CHK_COUNTER_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_CHK_COUNTER_EN);
    }

//initial config body1300 end


//initial config body1301 begin
    if (CP_PMA_CH2_REG_LOAD_ERR_CNT == "DISABLE")
    {
        SC_PMA_CH2_REG_LOAD_ERR_CNT_107   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_LOAD_ERR_CNT == "ENABLE")
    {
        SC_PMA_CH2_REG_LOAD_ERR_CNT_107   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_LOAD_ERR_CNT_107  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_LOAD_ERR_CNT is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_LOAD_ERR_CNT);
    }

//initial config body1301 end


//initial config body1302 begin
    if (CP_PMA_CH2_REG_BIST_CHK_PAT_SEL == "PRBS")
    {
        SC_PMA_CH2_REG_BIST_CHK_PAT_SEL_106   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_BIST_CHK_PAT_SEL == "CONSTANT")
    {
        SC_PMA_CH2_REG_BIST_CHK_PAT_SEL_106   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_BIST_CHK_PAT_SEL_106  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_BIST_CHK_PAT_SEL is set to %s. Legal values is PRBS,CONSTANT",CP_PMA_CH2_REG_BIST_CHK_PAT_SEL);
    }

//initial config body1302 end


//initial config body1303 begin
    if (CP_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b00 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b01 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b10 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b11 ^ 2'b11;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL_105_104  :=  2'b00 ^ 2'b11;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH2_REG_PRBS_CHK_WIDTH_SEL);
    }

//initial config body1303 end


//initial config body1304 begin
    if (CP_PMA_CH2_REG_PRBS_CHK_EN == "FALSE")
    {
        SC_PMA_CH2_REG_PRBS_CHK_EN_103   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_PRBS_CHK_EN == "TRUE")
    {
        SC_PMA_CH2_REG_PRBS_CHK_EN_103   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_PRBS_CHK_EN_103  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_PRBS_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_PRBS_CHK_EN);
    }

//initial config body1304 end


//initial config body1305 begin
    if (CP_PMA_CH2_REG_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH2_REG_PRBS_SEL_102_101   := 2'b00;
    }
    else if (CP_PMA_CH2_REG_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH2_REG_PRBS_SEL_102_101   := 2'b01;
    }
    else if (CP_PMA_CH2_REG_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH2_REG_PRBS_SEL_102_101   := 2'b10;
    }
    else if (CP_PMA_CH2_REG_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH2_REG_PRBS_SEL_102_101   := 2'b11;
    }
    else
    {
        SC_PMA_CH2_REG_PRBS_SEL_102_101  :=  2'b00;
        error("Setting Error : The CP_PMA_CH2_REG_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_PMA_CH2_REG_PRBS_SEL);
    }

//initial config body1305 end


//initial config body1306 begin
    if (CP_PMA_CH2_REG_UDP_CHK_EN == "FALSE")
    {
        SC_PMA_CH2_REG_UDP_CHK_EN_100   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_UDP_CHK_EN == "TRUE")
    {
        SC_PMA_CH2_REG_UDP_CHK_EN_100   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_UDP_CHK_EN_100  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_UDP_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_UDP_CHK_EN);
    }

//initial config body1306 end


//initial config body1307 begin
    if (CP_PMA_CH2_REG_RX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH2_REG_RX_ERR_INSERT_99   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH2_REG_RX_ERR_INSERT_99   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_ERR_INSERT_99  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_ERR_INSERT is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_RX_ERR_INSERT);
    }

//initial config body1307 end


//initial config body1308 begin
    if (CP_PMA_CH2_REG_RX_DATA_POLARITY == "NORMAL")
    {
        SC_PMA_CH2_REG_RX_DATA_POLARITY_98   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_DATA_POLARITY == "REVERSE")
    {
        SC_PMA_CH2_REG_RX_DATA_POLARITY_98   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_DATA_POLARITY_98  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_DATA_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_PMA_CH2_REG_RX_DATA_POLARITY);
    }

//initial config body1308 end


//initial config body1309 begin
    if (CP_PMA_CH2_REG_TXCLK_SEL == "PLL")
    {
        SC_PMA_CH2_REG_TXCLK_SEL_97   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TXCLK_SEL == "RXCLK")
    {
        SC_PMA_CH2_REG_TXCLK_SEL_97   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TXCLK_SEL_97  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TXCLK_SEL is set to %s. Legal values is PLL,RXCLK",CP_PMA_CH2_REG_TXCLK_SEL);
    }

//initial config body1309 end


//initial config body1310 begin
    if (CP_PMA_CH2_REG_RX_TX2RX_PLPBK_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_TX2RX_PLPBK_EN_96   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_TX2RX_PLPBK_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_TX2RX_PLPBK_EN_96   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_TX2RX_PLPBK_EN_96  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_TX2RX_PLPBK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_TX2RX_PLPBK_EN);
    }

//initial config body1310 end


//initial config body1311 begin
    if (CP_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_EN_95   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_EN_95   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_EN_95  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_EN);
    }

//initial config body1311 end


//initial config body1312 begin
    if (CP_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N == "FALSE")
    {
        SC_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_94   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N == "TRUE")
    {
        SC_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_94   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N_94  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH2_REG_RX_TX2RX_PLPBK_RST_N);
    }

//initial config body1312 end


//initial config body1313 begin
    if (CP_PMA_CH2_REG_TX_RATE_EN == "FALSE")
    {
        SC_PMA_CH2_REG_TX_RATE_EN_93   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_TX_RATE_EN == "TRUE")
    {
        SC_PMA_CH2_REG_TX_RATE_EN_93   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_TX_RATE_EN_93  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_TX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_TX_RATE_EN);
    }

//initial config body1313 end


//initial config body1314 begin
    if (CP_PMA_CH2_REG_TX_RATE == "DIV8")
    {
        SC_PMA_CH2_REG_TX_RATE_92_90   := 3'd0 ^ 3'b011;
        //91_90 reversed;
    }
    else if (CP_PMA_CH2_REG_TX_RATE == "DIV4")
    {
        SC_PMA_CH2_REG_TX_RATE_92_90   := 3'd1 ^ 3'b011;
        //91_90 reversed;
    }
    else if (CP_PMA_CH2_REG_TX_RATE == "DIV2")
    {
        SC_PMA_CH2_REG_TX_RATE_92_90   := 3'd2 ^ 3'b011;
        //91_90 reversed;
    }
    else if (CP_PMA_CH2_REG_TX_RATE == "DIV1")
    {
        SC_PMA_CH2_REG_TX_RATE_92_90   := 3'd3 ^ 3'b011;
        //91_90 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_TX_RATE_92_90  :=  3'd0 ^ 3'b011;
        //91_90 reversed
        error("Setting Error : The CP_PMA_CH2_REG_TX_RATE is set to %s. Legal values is DIV8,DIV4,DIV2,DIV1",CP_PMA_CH2_REG_TX_RATE);
    }

//initial config body1314 end


//initial config body1315 begin
    if (CP_PMA_CH2_REG_RX_ICTRL_PREDRV == "87_5PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PREDRV_89_88   := 2'b00 ^ 2'b01;
        //88 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_PREDRV == "100PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PREDRV_89_88   := 2'b01 ^ 2'b01;
        //88 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_PREDRV == "112_5PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PREDRV_89_88   := 2'b10 ^ 2'b01;
        //88 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_PREDRV == "125PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PREDRV_89_88   := 2'b11 ^ 2'b01;
        //88 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_ICTRL_PREDRV_89_88  :=  2'b00 ^ 2'b01;
        //88 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_ICTRL_PREDRV is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH2_REG_RX_ICTRL_PREDRV);
    }

//initial config body1315 end


//initial config body1316 begin
    if (CP_PMA_CH2_REG_RX_ICTRL_DCC == "87_5PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_DCC_87_86   := 2'b00 ^ 2'b01;
        //86 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_DCC == "100PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_DCC_87_86   := 2'b01 ^ 2'b01;
        //86 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_DCC == "112_5PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_DCC_87_86   := 2'b10 ^ 2'b01;
        //86 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_DCC == "125PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_DCC_87_86   := 2'b11 ^ 2'b01;
        //86 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_ICTRL_DCC_87_86  :=  2'b00 ^ 2'b01;
        //86 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_ICTRL_DCC is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH2_REG_RX_ICTRL_DCC);
    }

//initial config body1316 end


//initial config body1317 begin
    if (CP_PMA_CH2_REG_RX_ICTRL_PI == "87_5PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PI_85_84   := 2'b00 ^ 2'b01;
        //84 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_PI == "100PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PI_85_84   := 2'b01 ^ 2'b01;
        //84 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_PI == "112_5PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PI_85_84   := 2'b10 ^ 2'b01;
        //84 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_PI == "125PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PI_85_84   := 2'b11 ^ 2'b01;
        //84 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_ICTRL_PI_85_84  :=  2'b00 ^ 2'b01;
        //84 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_ICTRL_PI is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH2_REG_RX_ICTRL_PI);
    }

//initial config body1317 end


//initial config body1318 begin
    if (CP_PMA_CH2_REG_RX_ICTRL_PIBUF == "87_5PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PIBUF_83_82   := 2'b00 ^ 2'b01;
        //82 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_PIBUF == "100PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PIBUF_83_82   := 2'b01 ^ 2'b01;
        //82 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_PIBUF == "112_5PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PIBUF_83_82   := 2'b10 ^ 2'b01;
        //82 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_PIBUF == "125PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PIBUF_83_82   := 2'b11 ^ 2'b01;
        //82 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_ICTRL_PIBUF_83_82  :=  2'b00 ^ 2'b01;
        //82 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_ICTRL_PIBUF is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH2_REG_RX_ICTRL_PIBUF);
    }

//initial config body1318 end


//initial config body1319 begin
    if (CP_PMA_CH2_REG_RX_ICTRL_SLICER == "87_5PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_SLICER_81_80   := 2'b00 ^ 2'b01;
        //80 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_SLICER == "100PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_SLICER_81_80   := 2'b01 ^ 2'b01;
        //80 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_SLICER == "112_5PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_SLICER_81_80   := 2'b10 ^ 2'b01;
        //80 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_SLICER == "125PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_SLICER_81_80   := 2'b11 ^ 2'b01;
        //80 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_ICTRL_SLICER_81_80  :=  2'b00 ^ 2'b01;
        //80 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_ICTRL_SLICER is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH2_REG_RX_ICTRL_SLICER);
    }

//initial config body1319 end


//initial config body1320 begin
    if (CP_PMA_CH2_REG_RX_ICTRL_PREAMP == "87_5PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PREAMP_79_78   := 2'b00 ^ 2'b01;
        //78 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_PREAMP == "100PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PREAMP_79_78   := 2'b01 ^ 2'b01;
        //78 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_PREAMP == "112_5PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PREAMP_79_78   := 2'b10 ^ 2'b01;
        //78 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_PREAMP == "125PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_PREAMP_79_78   := 2'b11 ^ 2'b01;
        //78 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_ICTRL_PREAMP_79_78  :=  2'b00 ^ 2'b01;
        //78 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_ICTRL_PREAMP is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH2_REG_RX_ICTRL_PREAMP);
    }

//initial config body1320 end


//initial config body1321 begin
    if (CP_PMA_CH2_REG_RX_ICTRL_TRX == "87_5PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_TRX_75_74   := 2'b00 ^ 2'b01;
        //74 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_TRX == "100PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_TRX_75_74   := 2'b01 ^ 2'b01;
        //74 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_TRX == "112_5PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_TRX_75_74   := 2'b10 ^ 2'b01;
        //74 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_ICTRL_TRX == "125PCT")
    {
        SC_PMA_CH2_REG_RX_ICTRL_TRX_75_74   := 2'b11 ^ 2'b01;
        //74 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_ICTRL_TRX_75_74  :=  2'b00 ^ 2'b01;
        //74 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_ICTRL_TRX is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH2_REG_RX_ICTRL_TRX);
    }

//initial config body1321 end


//initial config body1322 begin
    if (CP_PMA_CH2_REG_RX_DCC_IC_TX >= 0 && CP_PMA_CH2_REG_RX_DCC_IC_TX <= 3)
    {
        SC_PMA_CH2_REG_RX_DCC_IC_TX_73_72   :=  to_unsigned( CP_PMA_CH2_REG_RX_DCC_IC_TX , 2) ^  2'b11;
        //73_72 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_DCC_IC_TX_73_72  :=  0 ^ 2'b11;
        //73_72 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_DCC_IC_TX is set to %d. Legal values is 0 to 3",CP_PMA_CH2_REG_RX_DCC_IC_TX);
    }

//initial config body1322 end


//initial config body1323 begin
    if (CP_PMA_CH2_REG_RX_DCC_IC_RX >= 0 && CP_PMA_CH2_REG_RX_DCC_IC_RX <= 3)
    {
        SC_PMA_CH2_REG_RX_DCC_IC_RX_71_70   :=  to_unsigned( CP_PMA_CH2_REG_RX_DCC_IC_RX , 2) ^  2'b11;
        //71_70 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_DCC_IC_RX_71_70  :=  0 ^ 2'b11;
        //71_70 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_DCC_IC_RX is set to %d. Legal values is 0 to 3",CP_PMA_CH2_REG_RX_DCC_IC_RX);
    }

//initial config body1323 end


//initial config body1324 begin
    if (CP_PMA_CH2_REG_RX_PIBUF_IC >= 0 && CP_PMA_CH2_REG_RX_PIBUF_IC <= 3)
    {
        SC_PMA_CH2_REG_RX_PIBUF_IC_68_67   :=  to_unsigned( CP_PMA_CH2_REG_RX_PIBUF_IC , 2) ^  2'b10;
        //68 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_PIBUF_IC_68_67  :=  0 ^ 2'b10;
        //68 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_PIBUF_IC is set to %d. Legal values is 0 to 3",CP_PMA_CH2_REG_RX_PIBUF_IC);
    }

//initial config body1324 end


//initial config body1325 begin
    if (CP_PMA_CH2_REG_RX_PCLK_EDGE_SEL == "POS_EDGE")
    {
        SC_PMA_CH2_REG_RX_PCLK_EDGE_SEL_66   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_PCLK_EDGE_SEL == "NEG_EDGE")
    {
        SC_PMA_CH2_REG_RX_PCLK_EDGE_SEL_66   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_PCLK_EDGE_SEL_66  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_PCLK_EDGE_SEL is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_PMA_CH2_REG_RX_PCLK_EDGE_SEL);
    }

//initial config body1325 end


//initial config body1326 begin
    if (CP_PMA_CH2_REG_RX_PREAMP_IC >= 0 && CP_PMA_CH2_REG_RX_PREAMP_IC <= 4095)
    {
        SC_PMA_CH2_REG_RX_PREAMP_IC_65_54   :=  to_unsigned( CP_PMA_CH2_REG_RX_PREAMP_IC , 12) ^  12'b010101010111;
        // reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_PREAMP_IC_65_54  :=  0 ^ 12'b010101010111;
        // reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_PREAMP_IC is set to %d. Legal values is 0 to 4095",CP_PMA_CH2_REG_RX_PREAMP_IC);
    }

//initial config body1326 end


//initial config body1327 begin
    if (CP_PMA_CH2_REG_RX_EQ_OFF == "FALSE")
    {
        SC_PMA_CH2_REG_RX_EQ_OFF_53   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_EQ_OFF == "TRUE")
    {
        SC_PMA_CH2_REG_RX_EQ_OFF_53   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_EQ_OFF_53  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_EQ_OFF is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_EQ_OFF);
    }

//initial config body1327 end


//initial config body1328 begin
    if (CP_PMA_CH2_REG_RX_ICTRL_SIGDET >= 0 && CP_PMA_CH2_REG_RX_ICTRL_SIGDET <= 15)
    {
        SC_PMA_CH2_REG_RX_ICTRL_SIGDET_52_49   :=  to_unsigned( CP_PMA_CH2_REG_RX_ICTRL_SIGDET , 4) ^  4'b0101;
        //51,49 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_ICTRL_SIGDET_52_49  :=  0 ^ 4'b0101;
        //51,49 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_ICTRL_SIGDET is set to %d. Legal values is 0 to 15",CP_PMA_CH2_REG_RX_ICTRL_SIGDET);
    }

//initial config body1328 end


//initial config body1329 begin
    if (CP_PMA_CH2_REG_RX_RES_TRIM_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_RES_TRIM_EN_44   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_RES_TRIM_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_RES_TRIM_EN_44   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_RES_TRIM_EN_44  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_RES_TRIM_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_RES_TRIM_EN);
    }

//initial config body1329 end


//initial config body1330 begin
    if (CP_PMA_CH2_REG_RX_RES_TRIM >= 0 && CP_PMA_CH2_REG_RX_RES_TRIM <= 63)
    {
        SC_PMA_CH2_REG_RX_RES_TRIM_43_38   :=  to_unsigned( CP_PMA_CH2_REG_RX_RES_TRIM , 6) ^  6'b110011;
        //43_42,39_38 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_RES_TRIM_43_38  :=  0 ^ 6'b110011;
        //43_42,39_38 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_RES_TRIM is set to %d. Legal values is 0 to 63",CP_PMA_CH2_REG_RX_RES_TRIM);
    }

//initial config body1330 end


//initial config body1331 begin
    if (CP_PMA_CH2_REG_RX_RATE_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_RATE_EN_37   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_RATE_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_RATE_EN_37   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_RATE_EN_37  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_RATE_EN);
    }

//initial config body1331 end


//initial config body1332 begin
    if (CP_PMA_CH2_REG_RX_RATE == "DIV8")
    {
        SC_PMA_CH2_REG_RX_RATE_36_34   := 3'd0 ^ 3'b011;
        //35_34 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_RATE == "DIV4")
    {
        SC_PMA_CH2_REG_RX_RATE_36_34   := 3'd1 ^ 3'b011;
        //35_34 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_RATE == "DIV2")
    {
        SC_PMA_CH2_REG_RX_RATE_36_34   := 3'd2 ^ 3'b011;
        //35_34 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_RATE == "DIV1")
    {
        SC_PMA_CH2_REG_RX_RATE_36_34   := 3'd3 ^ 3'b011;
        //35_34 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_RATE_36_34  :=  3'd0 ^ 3'b011;
        //35_34 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_RATE is set to %s. Legal values is DIV8,DIV4,DIV2,DIV1",CP_PMA_CH2_REG_RX_RATE);
    }

//initial config body1332 end


//initial config body1333 begin
    if (CP_PMA_CH2_REG_RX_BUSWIDTH_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_BUSWIDTH_EN_33   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_BUSWIDTH_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_BUSWIDTH_EN_33   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_BUSWIDTH_EN_33  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_BUSWIDTH_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_BUSWIDTH_EN);
    }

//initial config body1333 end


//initial config body1334 begin
    if (CP_PMA_CH2_REG_RX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH2_REG_RX_BUSWIDTH_32_30   := 3'd0 ^ 3'b011;
        //31_30 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH2_REG_RX_BUSWIDTH_32_30   := 3'd1 ^ 3'b011;
        //31_30 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH2_REG_RX_BUSWIDTH_32_30   := 3'd2 ^ 3'b011;
        //31_30 reversed;
    }
    else if (CP_PMA_CH2_REG_RX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH2_REG_RX_BUSWIDTH_32_30   := 3'd3 ^ 3'b011;
        //31_30 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_BUSWIDTH_32_30  :=  3'd0 ^ 3'b011;
        //31_30 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH2_REG_RX_BUSWIDTH);
    }

//initial config body1334 end


//initial config body1335 begin
    if (CP_PMA_CH2_REG_RX_EQ_R_SET >= 0 && CP_PMA_CH2_REG_RX_EQ_R_SET <= 15)
    {
        SC_PMA_CH2_REG_RX_EQ_R_SET_29_26   :=  to_unsigned( CP_PMA_CH2_REG_RX_EQ_R_SET , 4) ^  4'b1000;
        //29 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_EQ_R_SET_29_26  :=  0 ^ 4'b1000;
        //29 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_EQ_R_SET is set to %d. Legal values is 0 to 15",CP_PMA_CH2_REG_RX_EQ_R_SET);
    }

//initial config body1335 end


//initial config body1336 begin
    if (CP_PMA_CH2_REG_RX_EQ_C_SET >= 0 && CP_PMA_CH2_REG_RX_EQ_C_SET <= 15)
    {
        SC_PMA_CH2_REG_RX_EQ_C_SET_25_22   :=  to_unsigned( CP_PMA_CH2_REG_RX_EQ_C_SET , 4) ^  4'b1000;
        //25 reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_EQ_C_SET_25_22  :=  0 ^ 4'b1000;
        //25 reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_EQ_C_SET is set to %d. Legal values is 0 to 15",CP_PMA_CH2_REG_RX_EQ_C_SET);
    }

//initial config body1336 end


//initial config body1337 begin
    if (CP_PMA_CH2_REG_RX_HIGHZ_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_HIGHZ_EN_21   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_HIGHZ_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_HIGHZ_EN_21   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_HIGHZ_EN_21  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_HIGHZ_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_HIGHZ_EN);
    }

//initial config body1337 end


//initial config body1338 begin
    if (CP_PMA_CH2_REG_RX_HIGHZ == "FALSE")
    {
        SC_PMA_CH2_REG_RX_HIGHZ_20   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_HIGHZ == "TRUE")
    {
        SC_PMA_CH2_REG_RX_HIGHZ_20   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_HIGHZ_20  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_HIGHZ is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_HIGHZ);
    }

//initial config body1338 end


//initial config body1339 begin
    if (CP_PMA_CH2_REG_RX_PCLKSWITCH_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_PCLKSWITCH_EN_19   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_PCLKSWITCH_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_PCLKSWITCH_EN_19   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_PCLKSWITCH_EN_19  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_PCLKSWITCH_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_PCLKSWITCH_EN);
    }

//initial config body1339 end


//initial config body1340 begin
    if (CP_PMA_CH2_REG_RX_PCLKSWITCH == "FALSE")
    {
        SC_PMA_CH2_REG_RX_PCLKSWITCH_18   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_PCLKSWITCH == "TRUE")
    {
        SC_PMA_CH2_REG_RX_PCLKSWITCH_18   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_PCLKSWITCH_18  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_PCLKSWITCH is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_PCLKSWITCH);
    }

//initial config body1340 end


//initial config body1341 begin
    if (CP_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_EN_17   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_EN_17   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_EN_17  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_EN);
    }

//initial config body1341 end


//initial config body1342 begin
    if (CP_PMA_CH2_REG_RX_PCLKSWITCH_RST_N == "FALSE")
    {
        SC_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_16   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_RX_PCLKSWITCH_RST_N == "TRUE")
    {
        SC_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_16   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_PCLKSWITCH_RST_N_16  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_PCLKSWITCH_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_PCLKSWITCH_RST_N);
    }

//initial config body1342 end


//initial config body1343 begin
    if (CP_PMA_CH2_REG_RXPCLK_SLIP_OW == "DISABLE")
    {
        SC_PMA_CH2_REG_RXPCLK_SLIP_OW_15   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RXPCLK_SLIP_OW == "ENABLE")
    {
        SC_PMA_CH2_REG_RXPCLK_SLIP_OW_15   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RXPCLK_SLIP_OW_15  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RXPCLK_SLIP_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH2_REG_RXPCLK_SLIP_OW);
    }

//initial config body1343 end


//initial config body1344 begin
    if (CP_PMA_CH2_REG_RXPCLK_SLIP == "FALSE")
    {
        SC_PMA_CH2_REG_RXPCLK_SLIP_14   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RXPCLK_SLIP == "TRUE")
    {
        SC_PMA_CH2_REG_RXPCLK_SLIP_14   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RXPCLK_SLIP_14  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RXPCLK_SLIP is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RXPCLK_SLIP);
    }

//initial config body1344 end


//initial config body1345 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_RST_N_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_RST_N_EN_13   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_RST_N_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_RST_N_EN_13   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_RST_N_EN_13  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_SIGDET_RST_N_EN);
    }

//initial config body1345 end


//initial config body1346 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_RST_N == "FALSE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_RST_N_12   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_RST_N == "TRUE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_RST_N_12   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_RST_N_12  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_SIGDET_RST_N);
    }

//initial config body1346 end


//initial config body1347 begin
    if (CP_PMA_CH2_REG_RX_CDR_RST_N_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_CDR_RST_N_EN_11   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_CDR_RST_N_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_CDR_RST_N_EN_11   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_CDR_RST_N_EN_11  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_CDR_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_CDR_RST_N_EN);
    }

//initial config body1347 end


//initial config body1348 begin
    if (CP_PMA_CH2_REG_RX_CDR_RST_N == "FALSE")
    {
        SC_PMA_CH2_REG_RX_CDR_RST_N_10   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_RX_CDR_RST_N == "TRUE")
    {
        SC_PMA_CH2_REG_RX_CDR_RST_N_10   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_CDR_RST_N_10  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_CDR_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_CDR_RST_N);
    }

//initial config body1348 end


//initial config body1349 begin
    if (CP_PMA_CH2_REG_RX_DCC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_DCC_RST_N_EN_9   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_DCC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_DCC_RST_N_EN_9   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_DCC_RST_N_EN_9  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_DCC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_DCC_RST_N_EN);
    }

//initial config body1349 end


//initial config body1350 begin
    if (CP_PMA_CH2_REG_RX_DCC_RST_N == "FALSE")
    {
        SC_PMA_CH2_REG_RX_DCC_RST_N_8   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH2_REG_RX_DCC_RST_N == "TRUE")
    {
        SC_PMA_CH2_REG_RX_DCC_RST_N_8   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH2_REG_RX_DCC_RST_N_8  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH2_REG_RX_DCC_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_DCC_RST_N);
    }

//initial config body1350 end


//initial config body1351 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_PD_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_PD_EN_7   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_PD_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_SIGDET_PD_EN_7   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_PD_EN_7  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_SIGDET_PD_EN);
    }

//initial config body1351 end


//initial config body1352 begin
    if (CP_PMA_CH2_REG_RX_SIGDET_PD == "ON")
    {
        SC_PMA_CH2_REG_RX_SIGDET_PD_6   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_SIGDET_PD == "OFF")
    {
        SC_PMA_CH2_REG_RX_SIGDET_PD_6   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_SIGDET_PD_6  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_SIGDET_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH2_REG_RX_SIGDET_PD);
    }

//initial config body1352 end


//initial config body1353 begin
    if (CP_PMA_CH2_REG_RX_DATAPATH_PD_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_DATAPATH_PD_EN_5   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_DATAPATH_PD_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_DATAPATH_PD_EN_5   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_DATAPATH_PD_EN_5  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_DATAPATH_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_DATAPATH_PD_EN);
    }

//initial config body1353 end


//initial config body1354 begin
    if (CP_PMA_CH2_REG_RX_DATAPATH_PD == "ON")
    {
        SC_PMA_CH2_REG_RX_DATAPATH_PD_4   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_DATAPATH_PD == "OFF")
    {
        SC_PMA_CH2_REG_RX_DATAPATH_PD_4   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_DATAPATH_PD_4  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_DATAPATH_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH2_REG_RX_DATAPATH_PD);
    }

//initial config body1354 end


//initial config body1355 begin
    if (CP_PMA_CH2_REG_RX_CLKPATH_PD_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_CLKPATH_PD_EN_3   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_CLKPATH_PD_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_CLKPATH_PD_EN_3   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_CLKPATH_PD_EN_3  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_CLKPATH_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_CLKPATH_PD_EN);
    }

//initial config body1355 end


//initial config body1356 begin
    if (CP_PMA_CH2_REG_RX_CLKPATH_PD == "ON")
    {
        SC_PMA_CH2_REG_RX_CLKPATH_PD_2   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_CLKPATH_PD == "OFF")
    {
        SC_PMA_CH2_REG_RX_CLKPATH_PD_2   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_CLKPATH_PD_2  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_CLKPATH_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH2_REG_RX_CLKPATH_PD);
    }

//initial config body1356 end


//initial config body1357 begin
    if (CP_PMA_CH2_REG_RX_PD_EN == "FALSE")
    {
        SC_PMA_CH2_REG_RX_PD_EN_1   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_PD_EN == "TRUE")
    {
        SC_PMA_CH2_REG_RX_PD_EN_1   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_PD_EN_1  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH2_REG_RX_PD_EN);
    }

//initial config body1357 end


//initial config body1358 begin
    if (CP_PMA_CH2_REG_RX_PD == "ON")
    {
        SC_PMA_CH2_REG_RX_PD_0   := 1'b0;
    }
    else if (CP_PMA_CH2_REG_RX_PD == "OFF")
    {
        SC_PMA_CH2_REG_RX_PD_0   := 1'b1;
    }
    else
    {
        SC_PMA_CH2_REG_RX_PD_0  :=  1'b0;
        error("Setting Error : The CP_PMA_CH2_REG_RX_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH2_REG_RX_PD);
    }

//initial config body1358 end


//initial config body1359 begin
    if (CP_PMA_CH3_REG_RESERVED_556_552 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_556_552  :=  5'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_556_552 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_556_552  :=  5'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_556_552  :=  5'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_556_552 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_556_552);
    }

//initial config body1359 end


//initial config body1360 begin
    if (CP_PMA_CH3_REG_RESERVED_550_549 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_550_549  :=  2'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_550_549 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_550_549  :=  2'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_550_549  :=  2'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_550_549 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_550_549);
    }

//initial config body1360 end


//initial config body1361 begin
    if (CP_PMA_CH3_REG_RESERVED_506_505 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_506_505  :=  2'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_506_505 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_506_505  :=  2'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_506_505  :=  2'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_506_505 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_506_505);
    }

//initial config body1361 end


//initial config body1362 begin
    if (CP_PMA_CH3_REG_RESERVED_502_499 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_502_499  :=  4'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_502_499 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_502_499  :=  4'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_502_499  :=  4'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_502_499 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_502_499);
    }

//initial config body1362 end


//initial config body1363 begin
    if (CP_PMA_CH3_REG_RESERVED_452 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_452  :=  1'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_452 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_452  :=  1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_452  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_452 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_452);
    }

//initial config body1363 end


//initial config body1364 begin
    if (CP_PMA_CH3_REG_RESERVED_376 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_376  :=  1'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_376 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_376  :=  1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_376  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_376 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_376);
    }

//initial config body1364 end


//initial config body1365 begin
    if (CP_PMA_CH3_REG_RESERVED_373 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_373  :=  1'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_373 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_373  :=  1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_373  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_373 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_373);
    }

//initial config body1365 end


//initial config body1366 begin
    if (CP_PMA_CH3_REG_RESERVED_354_349 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_354_349  :=  6'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_354_349 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_354_349  :=  6'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_354_349  :=  6'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_354_349 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_354_349);
    }

//initial config body1366 end


//initial config body1367 begin
    if (CP_PMA_CH3_REG_RESERVED_348_341 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_348_341  :=  8'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_348_341 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_348_341  :=  8'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_348_341  :=  8'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_348_341 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_348_341);
    }

//initial config body1367 end


//initial config body1368 begin
    if (CP_PMA_CH3_REG_RESERVED_340_333 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_340_333  :=  8'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_340_333 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_340_333  :=  8'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_340_333  :=  8'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_340_333 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_340_333);
    }

//initial config body1368 end


//initial config body1369 begin
    if (CP_PMA_CH3_REG_RESERVED_332_325 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_332_325  :=  8'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_332_325 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_332_325  :=  8'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_332_325  :=  8'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_332_325 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_332_325);
    }

//initial config body1369 end


//initial config body1370 begin
    if (CP_PMA_CH3_REG_RESERVED_298 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_298  :=  1'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_298 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_298  :=  1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_298  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_298 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_298);
    }

//initial config body1370 end


//initial config body1371 begin
    if (CP_PMA_CH3_REG_RESERVED_295 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_295  :=  1'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_295 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_295  :=  1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_295  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_295 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_295);
    }

//initial config body1371 end


//initial config body1372 begin
    if (CP_PMA_CH3_REG_RESERVED_286 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_286  :=  1'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_286 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_286  :=  1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_286  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_286 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_286);
    }

//initial config body1372 end


//initial config body1373 begin
    if (CP_PMA_CH3_REG_RESERVED_285_283 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_285_283  :=  3'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_285_283 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_285_283  :=  3'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_285_283  :=  3'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_285_283 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_285_283);
    }

//initial config body1373 end


//initial config body1374 begin
    if (CP_PMA_CH3_REG_RESERVED_241_240 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_241_240  :=  2'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_241_240 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_241_240  :=  2'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_241_240  :=  2'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_241_240 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_241_240);
    }

//initial config body1374 end


//initial config body1375 begin
    if (CP_PMA_CH3_REG_RESERVED_235_234 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_235_234  :=  2'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_235_234 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_235_234  :=  2'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_235_234  :=  2'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_235_234 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_235_234);
    }

//initial config body1375 end


//initial config body1376 begin
    if (CP_PMA_CH3_REG_RESERVED_233_232 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_233_232  :=  2'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_233_232 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_233_232  :=  2'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_233_232  :=  2'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_233_232 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_233_232);
    }

//initial config body1376 end


//initial config body1377 begin
    if (CP_PMA_CH3_REG_RESERVED_190 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_190  :=  1'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_190 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_190  :=  1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_190  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_190 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_190);
    }

//initial config body1377 end


//initial config body1378 begin
    if (CP_PMA_CH3_REG_RESERVED_175_172 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_175_172  :=  4'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_175_172 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_175_172  :=  4'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_175_172  :=  4'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_175_172 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_175_172);
    }

//initial config body1378 end


//initial config body1379 begin
    if (CP_PMA_CH3_REG_RESERVED_171_164 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_171_164  :=  8'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_171_164 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_171_164  :=  8'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_171_164  :=  8'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_171_164 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_171_164);
    }

//initial config body1379 end


//initial config body1380 begin
    if (CP_PMA_CH3_REG_RESERVED_77_76 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_77_76  :=  2'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_77_76 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_77_76  :=  2'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_77_76  :=  2'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_77_76 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_77_76);
    }

//initial config body1380 end


//initial config body1381 begin
    if (CP_PMA_CH3_REG_RESERVED_69 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_69  :=  1'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_69 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_69  :=  1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_69  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_69 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_69);
    }

//initial config body1381 end


//initial config body1382 begin
    if (CP_PMA_CH3_REG_RESERVED_48_45 == 0)
    {
        SC_PMA_CH3_REG_RESERVED_48_45   := 4'b0;
    }
    else if (CP_PMA_CH3_REG_RESERVED_48_45 == 1)
    {
        SC_PMA_CH3_REG_RESERVED_48_45   := 4'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RESERVED_48_45   := 4'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RESERVED_48_45 is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RESERVED_48_45);
    }

//initial config body1382 end


//initial config body1383 begin
    if (CP_PMA_CH3_CFG_CTLE_ADP_RSTN == "FALSE")
    {
        SC_PMA_CH3_CFG_CTLE_ADP_RSTN_666   := 1'b0;
    }
    else if (CP_PMA_CH3_CFG_CTLE_ADP_RSTN == "TRUE")
    {
        SC_PMA_CH3_CFG_CTLE_ADP_RSTN_666   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_CFG_CTLE_ADP_RSTN_666  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_CFG_CTLE_ADP_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_CFG_CTLE_ADP_RSTN);
    }

//initial config body1383 end


//initial config body1384 begin
    if (CP_PMA_CH3_CFG_TX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH3_CFG_TX_PMA_RSTN_665   := 1'b0;
    }
    else if (CP_PMA_CH3_CFG_TX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH3_CFG_TX_PMA_RSTN_665   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_CFG_TX_PMA_RSTN_665  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_CFG_TX_PMA_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_CFG_TX_PMA_RSTN);
    }

//initial config body1384 end


//initial config body1385 begin
    if (CP_PMA_CH3_CFG_TX_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH3_CFG_TX_LANE_POWERUP_664   := 1'b0;
    }
    else if (CP_PMA_CH3_CFG_TX_LANE_POWERUP == "ON")
    {
        SC_PMA_CH3_CFG_TX_LANE_POWERUP_664   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_CFG_TX_LANE_POWERUP_664  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_CFG_TX_LANE_POWERUP is set to %s. Legal values is ON,OFF",CP_PMA_CH3_CFG_TX_LANE_POWERUP);
    }

//initial config body1385 end


//initial config body1386 begin
    if (CP_PMA_CH3_CFG_RX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH3_CFG_RX_PMA_RSTN_663   := 1'b0;
    }
    else if (CP_PMA_CH3_CFG_RX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH3_CFG_RX_PMA_RSTN_663   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_CFG_RX_PMA_RSTN_663  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_CFG_RX_PMA_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_CFG_RX_PMA_RSTN);
    }

//initial config body1386 end


//initial config body1387 begin
    if (CP_PMA_CH3_CFG_RX_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH3_CFG_RX_LANE_POWERUP_662   := 1'b0;
    }
    else if (CP_PMA_CH3_CFG_RX_LANE_POWERUP == "ON")
    {
        SC_PMA_CH3_CFG_RX_LANE_POWERUP_662   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_CFG_RX_LANE_POWERUP_662  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_CFG_RX_LANE_POWERUP is set to %s. Legal values is ON,OFF",CP_PMA_CH3_CFG_RX_LANE_POWERUP);
    }

//initial config body1387 end


//initial config body1388 begin
    if (CP_PMA_CH3_CFG_PMA_POR_N == "FALSE")
    {
        SC_PMA_CH3_CFG_PMA_POR_N_661   := 1'b0;
    }
    else if (CP_PMA_CH3_CFG_PMA_POR_N == "TRUE")
    {
        SC_PMA_CH3_CFG_PMA_POR_N_661   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_CFG_PMA_POR_N_661  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_CFG_PMA_POR_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_CFG_PMA_POR_N);
    }

//initial config body1388 end


//initial config body1389 begin
    if (CP_PMA_CH3_CFG_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH3_CFG_LANE_POWERUP_660   := 1'b0;
    }
    else if (CP_PMA_CH3_CFG_LANE_POWERUP == "ON")
    {
        SC_PMA_CH3_CFG_LANE_POWERUP_660   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_CFG_LANE_POWERUP_660  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_CFG_LANE_POWERUP is set to %s. Legal values is ON,OFF",CP_PMA_CH3_CFG_LANE_POWERUP);
    }

//initial config body1389 end


//initial config body1390 begin
    if (CP_PMA_CH3_REG_RX_659_656 >= 0 && CP_PMA_CH3_REG_RX_659_656 <= 15)
    {
        SC_PMA_CH3_REG_RX_659_656  :=  CP_PMA_CH3_REG_RX_659_656;
    }
    else
    {
        SC_PMA_CH3_REG_RX_659_656  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_659_656 is set to %d. Legal values is 0 to 15",CP_PMA_CH3_REG_RX_659_656);
    }

//initial config body1390 end


//initial config body1391 begin
    if (CP_PMA_CH3_REG_RX_655_648 >= 0 && CP_PMA_CH3_REG_RX_655_648 <= 255)
    {
        SC_PMA_CH3_REG_RX_655_648  :=  CP_PMA_CH3_REG_RX_655_648;
    }
    else
    {
        SC_PMA_CH3_REG_RX_655_648  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_655_648 is set to %d. Legal values is 0 to 255",CP_PMA_CH3_REG_RX_655_648);
    }

//initial config body1391 end


//initial config body1392 begin
    if (CP_PMA_CH3_REG_RX_647_640 >= 0 && CP_PMA_CH3_REG_RX_647_640 <= 255)
    {
        SC_PMA_CH3_REG_RX_647_640  :=  CP_PMA_CH3_REG_RX_647_640;
    }
    else
    {
        SC_PMA_CH3_REG_RX_647_640  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_647_640 is set to %d. Legal values is 0 to 255",CP_PMA_CH3_REG_RX_647_640);
    }

//initial config body1392 end


//initial config body1393 begin
    if (CP_PMA_CH3_REG_RX_639_632 >= 0 && CP_PMA_CH3_REG_RX_639_632 <= 255)
    {
        SC_PMA_CH3_REG_RX_639_632  :=  CP_PMA_CH3_REG_RX_639_632;
    }
    else
    {
        SC_PMA_CH3_REG_RX_639_632  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_639_632 is set to %d. Legal values is 0 to 255",CP_PMA_CH3_REG_RX_639_632);
    }

//initial config body1393 end


//initial config body1394 begin
    if (CP_PMA_CH3_REG_RX_631_624 >= 0 && CP_PMA_CH3_REG_RX_631_624 <= 255)
    {
        SC_PMA_CH3_REG_RX_631_624  :=  CP_PMA_CH3_REG_RX_631_624;
    }
    else
    {
        SC_PMA_CH3_REG_RX_631_624  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_631_624 is set to %d. Legal values is 0 to 255",CP_PMA_CH3_REG_RX_631_624);
    }

//initial config body1394 end


//initial config body1395 begin
    if (CP_PMA_CH3_REG_RX_CDR_623_618 >= 0 && CP_PMA_CH3_REG_RX_CDR_623_618 <= 63)
    {
        SC_PMA_CH3_REG_RX_CDR_623_618  :=  CP_PMA_CH3_REG_RX_CDR_623_618;
    }
    else
    {
        SC_PMA_CH3_REG_RX_CDR_623_618  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_CDR_623_618 is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_RX_CDR_623_618);
    }

//initial config body1395 end


//initial config body1396 begin
    if (CP_PMA_CH3_REG_RX_CDR_617_610 >= 0 && CP_PMA_CH3_REG_RX_CDR_617_610 <= 255)
    {
        SC_PMA_CH3_REG_RX_CDR_617_610  :=  CP_PMA_CH3_REG_RX_CDR_617_610;
    }
    else
    {
        SC_PMA_CH3_REG_RX_CDR_617_610  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_CDR_617_610 is set to %d. Legal values is 0 to 255",CP_PMA_CH3_REG_RX_CDR_617_610);
    }

//initial config body1396 end


//initial config body1397 begin
    if (CP_PMA_CH3_REG_TX_609_600 >= 0 && CP_PMA_CH3_REG_TX_609_600 <= 1023)
    {
        SC_PMA_CH3_REG_TX_609_600  :=  CP_PMA_CH3_REG_TX_609_600;
    }
    else
    {
        SC_PMA_CH3_REG_TX_609_600  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_609_600 is set to %d. Legal values is 0 to 1023",CP_PMA_CH3_REG_TX_609_600);
    }

//initial config body1397 end


//initial config body1398 begin
    if (CP_PMA_CH3_REG_PLPBK_TXPCLK_EN == "FALSE")
    {
        SC_PMA_CH3_REG_PLPBK_TXPCLK_EN_551   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_PLPBK_TXPCLK_EN == "TRUE")
    {
        SC_PMA_CH3_REG_PLPBK_TXPCLK_EN_551   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_PLPBK_TXPCLK_EN_551  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_PLPBK_TXPCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_PLPBK_TXPCLK_EN);
    }

//initial config body1398 end


//initial config body1399 begin
    if (CP_PMA_CH3_REG_RX_TERM_MODE_CTRL >= 0 && CP_PMA_CH3_REG_RX_TERM_MODE_CTRL <= 7)
    {
        SC_PMA_CH3_REG_RX_TERM_MODE_CTRL_548_546   :=  to_unsigned( CP_PMA_CH3_REG_RX_TERM_MODE_CTRL , 3) ^  3'b110;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_TERM_MODE_CTRL_548_546  :=  0 ^ 3'b110;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_TERM_MODE_CTRL is set to %d. Legal values is 0 to 7",CP_PMA_CH3_REG_RX_TERM_MODE_CTRL);
    }

//initial config body1399 end


//initial config body1400 begin
    if (CP_PMA_CH3_REG_TX_FBCLK_FAR_EN == "FALSE")
    {
        SC_PMA_CH3_REG_TX_FBCLK_FAR_EN_545   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_FBCLK_FAR_EN == "TRUE")
    {
        SC_PMA_CH3_REG_TX_FBCLK_FAR_EN_545   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_FBCLK_FAR_EN_545  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_FBCLK_FAR_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_TX_FBCLK_FAR_EN);
    }

//initial config body1400 end


//initial config body1401 begin
    if (CP_PMA_CH3_REG_RX_ACJTAG_VHYSTSE >= 0 && CP_PMA_CH3_REG_RX_ACJTAG_VHYSTSE <= 7)
    {
        SC_PMA_CH3_REG_RX_ACJTAG_VHYSTSE_544_542  :=  CP_PMA_CH3_REG_RX_ACJTAG_VHYSTSE;
    }
    else
    {
        SC_PMA_CH3_REG_RX_ACJTAG_VHYSTSE_544_542  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_ACJTAG_VHYSTSE is set to %d. Legal values is 0 to 7",CP_PMA_CH3_REG_RX_ACJTAG_VHYSTSE);
    }

//initial config body1401 end


//initial config body1402 begin
    if (CP_PMA_CH3_REG_RX_JTAG_OE == "DISABLE")
    {
        SC_PMA_CH3_REG_RX_JTAG_OE_541   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_RX_JTAG_OE == "ENABLE")
    {
        SC_PMA_CH3_REG_RX_JTAG_OE_541   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_JTAG_OE_541  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_JTAG_OE is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_RX_JTAG_OE);
    }

//initial config body1402 end


//initial config body1403 begin
    if (CP_PMA_CH3_REG_RX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_JTAG_MODE_EN_540   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_JTAG_MODE_EN_540   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_JTAG_MODE_EN_540  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_JTAG_MODE_EN);
    }

//initial config body1403 end


//initial config body1404 begin
    if (CP_PMA_CH3_REG_RX_JTAG_MODE_EN_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_RX_JTAG_MODE_EN_OW_539   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_JTAG_MODE_EN_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_RX_JTAG_MODE_EN_OW_539   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_JTAG_MODE_EN_OW_539  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_JTAG_MODE_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_RX_JTAG_MODE_EN_OW);
    }

//initial config body1404 end


//initial config body1405 begin
    if (CP_PMA_CH3_REG_TX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH3_REG_TX_JTAG_MODE_EN_538   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH3_REG_TX_JTAG_MODE_EN_538   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_JTAG_MODE_EN_538  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_TX_JTAG_MODE_EN);
    }

//initial config body1405 end


//initial config body1406 begin
    if (CP_PMA_CH3_REG_TX_JTAG_MODE_EN_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_JTAG_MODE_EN_OW_537   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_JTAG_MODE_EN_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_JTAG_MODE_EN_OW_537   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_JTAG_MODE_EN_OW_537  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_JTAG_MODE_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_JTAG_MODE_EN_OW);
    }

//initial config body1406 end


//initial config body1407 begin
    if (CP_PMA_CH3_REG_TX_LS_MODE_EN == "FALSE")
    {
        SC_PMA_CH3_REG_TX_LS_MODE_EN_536   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_LS_MODE_EN == "TRUE")
    {
        SC_PMA_CH3_REG_TX_LS_MODE_EN_536   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_LS_MODE_EN_536  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_LS_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_TX_LS_MODE_EN);
    }

//initial config body1407 end


//initial config body1408 begin
    if (CP_PMA_CH3_REG_TX_SLPBK_AMP >= 0 && CP_PMA_CH3_REG_TX_SLPBK_AMP <= 3)
    {
        SC_PMA_CH3_REG_TX_SLPBK_AMP_535_534   :=  to_unsigned( CP_PMA_CH3_REG_TX_SLPBK_AMP , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_SLPBK_AMP_535_534  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_SLPBK_AMP is set to %d. Legal values is 0 to 3",CP_PMA_CH3_REG_TX_SLPBK_AMP);
    }

//initial config body1408 end


//initial config body1409 begin
    if (CP_PMA_CH3_REG_TX_POLARITY == "NORMAL")
    {
        SC_PMA_CH3_REG_TX_POLARITY_533   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_POLARITY == "REVERSE")
    {
        SC_PMA_CH3_REG_TX_POLARITY_533   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_POLARITY_533  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_PMA_CH3_REG_TX_POLARITY);
    }

//initial config body1409 end


//initial config body1410 begin
    if (CP_PMA_CH3_REG_TX_OOB_DELAY_SEL >= 0 && CP_PMA_CH3_REG_TX_OOB_DELAY_SEL <= 15)
    {
        SC_PMA_CH3_REG_TX_OOB_DELAY_SEL_532_529  :=  CP_PMA_CH3_REG_TX_OOB_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH3_REG_TX_OOB_DELAY_SEL_532_529  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_OOB_DELAY_SEL is set to %d. Legal values is 0 to 15",CP_PMA_CH3_REG_TX_OOB_DELAY_SEL);
    }

//initial config body1410 end


//initial config body1411 begin
    if (CP_PMA_CH3_REG_TX_PULLUP_DAC3 >= 0 && CP_PMA_CH3_REG_TX_PULLUP_DAC3 <= 31)
    {
        SC_PMA_CH3_REG_TX_PULLUP_DAC3_528_524   :=  to_unsigned( CP_PMA_CH3_REG_TX_PULLUP_DAC3 , 5) ^  5'b01001;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PULLUP_DAC3_528_524  :=  0 ^ 5'b01001;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_PULLUP_DAC3 is set to %d. Legal values is 0 to 31",CP_PMA_CH3_REG_TX_PULLUP_DAC3);
    }

//initial config body1411 end


//initial config body1412 begin
    if (CP_PMA_CH3_REG_TX_PULLUP_DAC2 >= 0 && CP_PMA_CH3_REG_TX_PULLUP_DAC2 <= 31)
    {
        SC_PMA_CH3_REG_TX_PULLUP_DAC2_523_519   :=  to_unsigned( CP_PMA_CH3_REG_TX_PULLUP_DAC2 , 5) ^  5'b01110;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PULLUP_DAC2_523_519  :=  0 ^ 5'b01110;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_PULLUP_DAC2 is set to %d. Legal values is 0 to 31",CP_PMA_CH3_REG_TX_PULLUP_DAC2);
    }

//initial config body1412 end


//initial config body1413 begin
    if (CP_PMA_CH3_REG_TX_PULLUP_DAC1 >= 0 && CP_PMA_CH3_REG_TX_PULLUP_DAC1 <= 31)
    {
        SC_PMA_CH3_REG_TX_PULLUP_DAC1_518_514   :=  to_unsigned( CP_PMA_CH3_REG_TX_PULLUP_DAC1 , 5) ^  5'b10011;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PULLUP_DAC1_518_514  :=  0 ^ 5'b10011;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_PULLUP_DAC1 is set to %d. Legal values is 0 to 31",CP_PMA_CH3_REG_TX_PULLUP_DAC1);
    }

//initial config body1413 end


//initial config body1414 begin
    if (CP_PMA_CH3_REG_TX_PULLUP_DAC0 >= 0 && CP_PMA_CH3_REG_TX_PULLUP_DAC0 <= 31)
    {
        SC_PMA_CH3_REG_TX_PULLUP_DAC0_513_509   :=  to_unsigned( CP_PMA_CH3_REG_TX_PULLUP_DAC0 , 5) ^  5'b11000;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PULLUP_DAC0_513_509  :=  0 ^ 5'b11000;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_PULLUP_DAC0 is set to %d. Legal values is 0 to 31",CP_PMA_CH3_REG_TX_PULLUP_DAC0);
    }

//initial config body1414 end


//initial config body1415 begin
    if (CP_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON == "DISABLE")
    {
        SC_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_508   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON == "ENABLE")
    {
        SC_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_508   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_508  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON);
    }

//initial config body1415 end


//initial config body1416 begin
    if (CP_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_OW_507   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_OW_507   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_OW_507  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_RATE_CHANGE_TXPCLK_ON_OW);
    }

//initial config body1416 end


//initial config body1417 begin
    if (CP_PMA_CH3_REG_TX_SATA_EN == "FALSE")
    {
        SC_PMA_CH3_REG_TX_SATA_EN_504   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_SATA_EN == "TRUE")
    {
        SC_PMA_CH3_REG_TX_SATA_EN_504   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_SATA_EN_504  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_SATA_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_TX_SATA_EN);
    }

//initial config body1417 end


//initial config body1418 begin
    if (CP_PMA_CH3_REG_TX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH3_REG_TX_ERR_INSERT_498   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH3_REG_TX_ERR_INSERT_498   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_ERR_INSERT_498  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_ERR_INSERT is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_TX_ERR_INSERT);
    }

//initial config body1418 end


//initial config body1419 begin
    if (CP_PMA_CH3_REG_TX_DATA_MUX_SEL >= 0 && CP_PMA_CH3_REG_TX_DATA_MUX_SEL <= 3)
    {
        SC_PMA_CH3_REG_TX_DATA_MUX_SEL_497_496  :=  CP_PMA_CH3_REG_TX_DATA_MUX_SEL;
    }
    else
    {
        SC_PMA_CH3_REG_TX_DATA_MUX_SEL_497_496  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_DATA_MUX_SEL is set to %d. Legal values is 0 to 3",CP_PMA_CH3_REG_TX_DATA_MUX_SEL);
    }

//initial config body1419 end


//initial config body1420 begin
    if (CP_PMA_CH3_REG_TX_FIFO_EN == "FALSE")
    {
        SC_PMA_CH3_REG_TX_FIFO_EN_495   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_FIFO_EN == "TRUE")
    {
        SC_PMA_CH3_REG_TX_FIFO_EN_495   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_FIFO_EN_495  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_TX_FIFO_EN);
    }

//initial config body1420 end


//initial config body1421 begin
    if (CP_PMA_CH3_REG_TX_FIFO_WP_CTRL >= 0 && CP_PMA_CH3_REG_TX_FIFO_WP_CTRL <= 7)
    {
        SC_PMA_CH3_REG_TX_FIFO_WP_CTRL_494_492   :=  to_unsigned( CP_PMA_CH3_REG_TX_FIFO_WP_CTRL , 3) ^  3'b010;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_FIFO_WP_CTRL_494_492  :=  0 ^ 3'b010;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_FIFO_WP_CTRL is set to %d. Legal values is 0 to 7",CP_PMA_CH3_REG_TX_FIFO_WP_CTRL);
    }

//initial config body1421 end


//initial config body1422 begin
    if (CP_PMA_CH3_REG_TX_FIFO_RST_N == "FALSE")
    {
        SC_PMA_CH3_REG_TX_FIFO_RST_N_491   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_FIFO_RST_N == "TRUE")
    {
        SC_PMA_CH3_REG_TX_FIFO_RST_N_491   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_FIFO_RST_N_491  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_FIFO_RST_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_TX_FIFO_RST_N);
    }

//initial config body1422 end


//initial config body1423 begin
    if (CP_PMA_CH3_REG_TX_UDP_DATA >= 0 && CP_PMA_CH3_REG_TX_UDP_DATA <= 1048575)
    {
        SC_PMA_CH3_REG_TX_UDP_DATA_490_471   :=  to_unsigned( CP_PMA_CH3_REG_TX_UDP_DATA , 20) ^  20'b00111110101100000101;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_UDP_DATA_490_471  :=  0 ^ 20'b00111110101100000101;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_UDP_DATA is set to %d. Legal values is 0 to 1048575",CP_PMA_CH3_REG_TX_UDP_DATA);
    }

//initial config body1423 end


//initial config body1424 begin
    if (CP_PMA_CH3_REG_TX_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH3_REG_TX_PRBS_SEL_470_469   := 2'b00;
    }
    else if (CP_PMA_CH3_REG_TX_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH3_REG_TX_PRBS_SEL_470_469   := 2'b01;
    }
    else if (CP_PMA_CH3_REG_TX_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH3_REG_TX_PRBS_SEL_470_469   := 2'b10;
    }
    else if (CP_PMA_CH3_REG_TX_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH3_REG_TX_PRBS_SEL_470_469   := 2'b11;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PRBS_SEL_470_469  :=  2'b00;
        error("Setting Error : The CP_PMA_CH3_REG_TX_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_PMA_CH3_REG_TX_PRBS_SEL);
    }

//initial config body1424 end


//initial config body1425 begin
    if (CP_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b00 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b01 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b10 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL_468_467   := 2'b11 ^ 2'b11;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL_468_467  :=  2'b00 ^ 2'b11;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH3_REG_TX_PRBS_GEN_WIDTH_SEL);
    }

//initial config body1425 end


//initial config body1426 begin
    if (CP_PMA_CH3_REG_TX_PRBS_GEN_EN == "FALSE")
    {
        SC_PMA_CH3_REG_TX_PRBS_GEN_EN_466   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_PRBS_GEN_EN == "TRUE")
    {
        SC_PMA_CH3_REG_TX_PRBS_GEN_EN_466   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PRBS_GEN_EN_466  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_PRBS_GEN_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_TX_PRBS_GEN_EN);
    }

//initial config body1426 end


//initial config body1427 begin
    if (CP_PMA_CH3_REG_TX_RXDET_STATUS == "FALSE")
    {
        SC_PMA_CH3_REG_TX_RXDET_STATUS_465   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_RXDET_STATUS == "TRUE")
    {
        SC_PMA_CH3_REG_TX_RXDET_STATUS_465   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_RXDET_STATUS_465  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_RXDET_STATUS is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_TX_RXDET_STATUS);
    }

//initial config body1427 end


//initial config body1428 begin
    if (CP_PMA_CH3_REG_TX_RXDET_STATUS_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_RXDET_STATUS_OW_464   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_RXDET_STATUS_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_RXDET_STATUS_OW_464   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_RXDET_STATUS_OW_464  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_RXDET_STATUS_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_RXDET_STATUS_OW);
    }

//initial config body1428 end


//initial config body1429 begin
    if (CP_PMA_CH3_REG_TX_PCLK_EDGE_SEL == "POS_EDGE")
    {
        SC_PMA_CH3_REG_TX_PCLK_EDGE_SEL_463   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_PCLK_EDGE_SEL == "NEG_EDGE")
    {
        SC_PMA_CH3_REG_TX_PCLK_EDGE_SEL_463   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PCLK_EDGE_SEL_463  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_PCLK_EDGE_SEL is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_PMA_CH3_REG_TX_PCLK_EDGE_SEL);
    }

//initial config body1429 end


//initial config body1430 begin
    if (CP_PMA_CH3_REG_TX_TX2RX_SLPBACK_EN == "FALSE")
    {
        SC_PMA_CH3_REG_TX_TX2RX_SLPBACK_EN_462   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_TX2RX_SLPBACK_EN == "TRUE")
    {
        SC_PMA_CH3_REG_TX_TX2RX_SLPBACK_EN_462   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_TX2RX_SLPBACK_EN_462  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_TX2RX_SLPBACK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_TX_TX2RX_SLPBACK_EN);
    }

//initial config body1430 end


//initial config body1431 begin
    if (CP_PMA_CH3_REG_TX_PREDRV_CM_CTRL >= 0 && CP_PMA_CH3_REG_TX_PREDRV_CM_CTRL <= 3)
    {
        SC_PMA_CH3_REG_TX_PREDRV_CM_CTRL_461_460   :=  to_unsigned( CP_PMA_CH3_REG_TX_PREDRV_CM_CTRL , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PREDRV_CM_CTRL_461_460  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_PREDRV_CM_CTRL is set to %d. Legal values is 0 to 3",CP_PMA_CH3_REG_TX_PREDRV_CM_CTRL);
    }

//initial config body1431 end


//initial config body1432 begin
    if (CP_PMA_CH3_REG_TX_PREDRV_DAC >= 0 && CP_PMA_CH3_REG_TX_PREDRV_DAC <= 3)
    {
        SC_PMA_CH3_REG_TX_PREDRV_DAC_459_458   :=  to_unsigned( CP_PMA_CH3_REG_TX_PREDRV_DAC , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PREDRV_DAC_459_458  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_PREDRV_DAC is set to %d. Legal values is 0 to 3",CP_PMA_CH3_REG_TX_PREDRV_DAC);
    }

//initial config body1432 end


//initial config body1433 begin
    if (CP_PMA_CH3_REG_TX_BEACON_OSC_CTRL >= 0 && CP_PMA_CH3_REG_TX_BEACON_OSC_CTRL <= 7)
    {
        SC_PMA_CH3_REG_TX_BEACON_OSC_CTRL_457_455   :=  to_unsigned( CP_PMA_CH3_REG_TX_BEACON_OSC_CTRL , 3) ^  3'b100;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_BEACON_OSC_CTRL_457_455  :=  0 ^ 3'b100;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_BEACON_OSC_CTRL is set to %d. Legal values is 0 to 7",CP_PMA_CH3_REG_TX_BEACON_OSC_CTRL);
    }

//initial config body1433 end


//initial config body1434 begin
    if (CP_PMA_CH3_REG_TX_RXDET_THRESHOLD == "50MV")
    {
        SC_PMA_CH3_REG_TX_RXDET_THRESHOLD_454_453   := 2'b00 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_RXDET_THRESHOLD == "75MV")
    {
        SC_PMA_CH3_REG_TX_RXDET_THRESHOLD_454_453   := 2'b01 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_RXDET_THRESHOLD == "100MV")
    {
        SC_PMA_CH3_REG_TX_RXDET_THRESHOLD_454_453   := 2'b10 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_RXDET_THRESHOLD == "125MV")
    {
        SC_PMA_CH3_REG_TX_RXDET_THRESHOLD_454_453   := 2'b11 ^ 2'b10;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_RXDET_THRESHOLD_454_453  :=  2'b00 ^ 2'b10;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_RXDET_THRESHOLD is set to %s. Legal values is 50MV,75MV,100MV,125MV",CP_PMA_CH3_REG_TX_RXDET_THRESHOLD);
    }

//initial config body1434 end


//initial config body1435 begin
    if (CP_PMA_CH3_REG_TX_SWING_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_SWING_OW_451   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_SWING_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_SWING_OW_451   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_SWING_OW_451  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_SWING_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_SWING_OW);
    }

//initial config body1435 end


//initial config body1436 begin
    if (CP_PMA_CH3_REG_TX_SWING == "FALSE")
    {
        SC_PMA_CH3_REG_TX_SWING_450   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_SWING == "TRUE")
    {
        SC_PMA_CH3_REG_TX_SWING_450   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_SWING_450  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_SWING is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_TX_SWING);
    }

//initial config body1436 end


//initial config body1437 begin
    if (CP_PMA_CH3_REG_TX_DEEMP_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_DEEMP_OW_449   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_DEEMP_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_DEEMP_OW_449   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_DEEMP_OW_449  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_DEEMP_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_DEEMP_OW);
    }

//initial config body1437 end


//initial config body1438 begin
    if (CP_PMA_CH3_REG_TX_DEEMP >= 0 && CP_PMA_CH3_REG_TX_DEEMP <= 3)
    {
        SC_PMA_CH3_REG_TX_DEEMP_448_447  :=  CP_PMA_CH3_REG_TX_DEEMP;
    }
    else
    {
        SC_PMA_CH3_REG_TX_DEEMP_448_447  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_DEEMP is set to %d. Legal values is 0 to 3",CP_PMA_CH3_REG_TX_DEEMP);
    }

//initial config body1438 end


//initial config body1439 begin
    if (CP_PMA_CH3_REG_TX_MARGIN_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_MARGIN_OW_446   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_MARGIN_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_MARGIN_OW_446   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_MARGIN_OW_446  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_MARGIN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_MARGIN_OW);
    }

//initial config body1439 end


//initial config body1440 begin
    if (CP_PMA_CH3_REG_TX_MARGIN >= 0 && CP_PMA_CH3_REG_TX_MARGIN <= 7)
    {
        SC_PMA_CH3_REG_TX_MARGIN_445_443  :=  CP_PMA_CH3_REG_TX_MARGIN;
    }
    else
    {
        SC_PMA_CH3_REG_TX_MARGIN_445_443  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_MARGIN is set to %d. Legal values is 0 to 7",CP_PMA_CH3_REG_TX_MARGIN);
    }

//initial config body1440 end


//initial config body1441 begin
    if (CP_PMA_CH3_REG_TX_AMP4 >= 0 && CP_PMA_CH3_REG_TX_AMP4 <= 63)
    {
        SC_PMA_CH3_REG_TX_AMP4_442_437   :=  to_unsigned( CP_PMA_CH3_REG_TX_AMP4 , 6) ^  6'b000101;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_AMP4_442_437  :=  0 ^ 6'b000101;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_AMP4 is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_TX_AMP4);
    }

//initial config body1441 end


//initial config body1442 begin
    if (CP_PMA_CH3_REG_TX_AMP3 >= 0 && CP_PMA_CH3_REG_TX_AMP3 <= 63)
    {
        SC_PMA_CH3_REG_TX_AMP3_436_431   :=  to_unsigned( CP_PMA_CH3_REG_TX_AMP3 , 6) ^  6'b001001;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_AMP3_436_431  :=  0 ^ 6'b001001;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_AMP3 is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_TX_AMP3);
    }

//initial config body1442 end


//initial config body1443 begin
    if (CP_PMA_CH3_REG_TX_AMP2 >= 0 && CP_PMA_CH3_REG_TX_AMP2 <= 63)
    {
        SC_PMA_CH3_REG_TX_AMP2_430_425   :=  to_unsigned( CP_PMA_CH3_REG_TX_AMP2 , 6) ^  6'b001110;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_AMP2_430_425  :=  0 ^ 6'b001110;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_AMP2 is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_TX_AMP2);
    }

//initial config body1443 end


//initial config body1444 begin
    if (CP_PMA_CH3_REG_TX_AMP1 >= 0 && CP_PMA_CH3_REG_TX_AMP1 <= 63)
    {
        SC_PMA_CH3_REG_TX_AMP1_424_419   :=  to_unsigned( CP_PMA_CH3_REG_TX_AMP1 , 6) ^  6'b010011;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_AMP1_424_419  :=  0 ^ 6'b010011;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_AMP1 is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_TX_AMP1);
    }

//initial config body1444 end


//initial config body1445 begin
    if (CP_PMA_CH3_REG_TX_AMP0 >= 0 && CP_PMA_CH3_REG_TX_AMP0 <= 63)
    {
        SC_PMA_CH3_REG_TX_AMP0_418_413   :=  to_unsigned( CP_PMA_CH3_REG_TX_AMP0 , 6) ^  6'b011000;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_AMP0_418_413  :=  0 ^ 6'b011000;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_AMP0 is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_TX_AMP0);
    }

//initial config body1445 end


//initial config body1446 begin
    if (CP_PMA_CH3_REG_TX_DRV00_DAC2 >= 0 && CP_PMA_CH3_REG_TX_DRV00_DAC2 <= 63)
    {
        SC_PMA_CH3_REG_TX_DRV00_DAC2_412_407   :=  to_unsigned( CP_PMA_CH3_REG_TX_DRV00_DAC2 , 6) ^  6'b110000;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_DRV00_DAC2_412_407  :=  0 ^ 6'b110000;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_DRV00_DAC2 is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_TX_DRV00_DAC2);
    }

//initial config body1446 end


//initial config body1447 begin
    if (CP_PMA_CH3_REG_TX_DRV00_DAC1 >= 0 && CP_PMA_CH3_REG_TX_DRV00_DAC1 <= 63)
    {
        SC_PMA_CH3_REG_TX_DRV00_DAC1_406_401   :=  to_unsigned( CP_PMA_CH3_REG_TX_DRV00_DAC1 , 6) ^  6'b110101;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_DRV00_DAC1_406_401  :=  0 ^ 6'b110101;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_DRV00_DAC1 is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_TX_DRV00_DAC1);
    }

//initial config body1447 end


//initial config body1448 begin
    if (CP_PMA_CH3_REG_TX_DRV00_DAC0 >= 0 && CP_PMA_CH3_REG_TX_DRV00_DAC0 <= 63)
    {
        SC_PMA_CH3_REG_TX_DRV00_DAC0_400_395   :=  to_unsigned( CP_PMA_CH3_REG_TX_DRV00_DAC0 , 6) ^  6'b111111;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_DRV00_DAC0_400_395  :=  0 ^ 6'b111111;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_DRV00_DAC0 is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_TX_DRV00_DAC0);
    }

//initial config body1448 end


//initial config body1449 begin
    if (CP_PMA_CH3_REG_TX_DRV01_DAC2 >= 0 && CP_PMA_CH3_REG_TX_DRV01_DAC2 <= 63)
    {
        SC_PMA_CH3_REG_TX_DRV01_DAC2_394_389   :=  to_unsigned( CP_PMA_CH3_REG_TX_DRV01_DAC2 , 6) ^  6'b100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_DRV01_DAC2_394_389  :=  0 ^ 6'b100000;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_DRV01_DAC2 is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_TX_DRV01_DAC2);
    }

//initial config body1449 end


//initial config body1450 begin
    if (CP_PMA_CH3_REG_TX_DRV01_DAC1 >= 0 && CP_PMA_CH3_REG_TX_DRV01_DAC1 <= 63)
    {
        SC_PMA_CH3_REG_TX_DRV01_DAC1_388_383   :=  to_unsigned( CP_PMA_CH3_REG_TX_DRV01_DAC1 , 6) ^  6'b010101;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_DRV01_DAC1_388_383  :=  0 ^ 6'b010101;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_DRV01_DAC1 is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_TX_DRV01_DAC1);
    }

//initial config body1450 end


//initial config body1451 begin
    if (CP_PMA_CH3_REG_TX_DRV01_DAC0 >= 0 && CP_PMA_CH3_REG_TX_DRV01_DAC0 <= 63)
    {
        SC_PMA_CH3_REG_TX_DRV01_DAC0_382_377  :=  CP_PMA_CH3_REG_TX_DRV01_DAC0;
    }
    else
    {
        SC_PMA_CH3_REG_TX_DRV01_DAC0_382_377  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_DRV01_DAC0 is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_TX_DRV01_DAC0);
    }

//initial config body1451 end


//initial config body1452 begin
    if (CP_PMA_CH3_REG_EI_PCLK_DELAY_SEL >= 0 && CP_PMA_CH3_REG_EI_PCLK_DELAY_SEL <= 3)
    {
        SC_PMA_CH3_REG_EI_PCLK_DELAY_SEL_375_374  :=  CP_PMA_CH3_REG_EI_PCLK_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH3_REG_EI_PCLK_DELAY_SEL_375_374  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_EI_PCLK_DELAY_SEL is set to %d. Legal values is 0 to 3",CP_PMA_CH3_REG_EI_PCLK_DELAY_SEL);
    }

//initial config body1452 end


//initial config body1453 begin
    if (CP_PMA_CH3_REG_TX_PCLK_SW == "FALSE")
    {
        SC_PMA_CH3_REG_TX_PCLK_SW_372   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_PCLK_SW == "TRUE")
    {
        SC_PMA_CH3_REG_TX_PCLK_SW_372   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PCLK_SW_372  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_PCLK_SW is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_TX_PCLK_SW);
    }

//initial config body1453 end


//initial config body1454 begin
    if (CP_PMA_CH3_REG_TX_PCLK_SW_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_PCLK_SW_OW_371   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_PCLK_SW_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_PCLK_SW_OW_371   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PCLK_SW_OW_371  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_PCLK_SW_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_PCLK_SW_OW);
    }

//initial config body1454 end


//initial config body1455 begin
    if (CP_PMA_CH3_REG_PLL_READY == "FALSE")
    {
        SC_PMA_CH3_REG_PLL_READY_370   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_PLL_READY == "TRUE")
    {
        SC_PMA_CH3_REG_PLL_READY_370   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_PLL_READY_370  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_PLL_READY is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_PLL_READY);
    }

//initial config body1455 end


//initial config body1456 begin
    if (CP_PMA_CH3_REG_PLL_READY_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_PLL_READY_OW_369   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_PLL_READY_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_PLL_READY_OW_369   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_PLL_READY_OW_369  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_PLL_READY_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_PLL_READY_OW);
    }

//initial config body1456 end


//initial config body1457 begin
    if (CP_PMA_CH3_REG_TX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH3_REG_TX_BUSWIDTH_368_366   := 3'd0 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH3_REG_TX_BUSWIDTH_368_366   := 3'd1 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH3_REG_TX_BUSWIDTH_368_366   := 3'd2 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH3_REG_TX_BUSWIDTH_368_366   := 3'd3 ^ 3'b011;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_BUSWIDTH_368_366  :=  3'd0 ^ 3'b011;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH3_REG_TX_BUSWIDTH);
    }

//initial config body1457 end


//initial config body1458 begin
    if (CP_PMA_CH3_REG_TX_BUSWIDTH_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_BUSWIDTH_OW_365   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_BUSWIDTH_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_BUSWIDTH_OW_365   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_BUSWIDTH_OW_365  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_BUSWIDTH_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_BUSWIDTH_OW);
    }

//initial config body1458 end


//initial config body1459 begin
    if (CP_PMA_CH3_REG_TX_DCC_RESET_N == "FALSE")
    {
        SC_PMA_CH3_REG_TX_DCC_RESET_N_364   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_DCC_RESET_N == "TRUE")
    {
        SC_PMA_CH3_REG_TX_DCC_RESET_N_364   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_DCC_RESET_N_364  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_DCC_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_TX_DCC_RESET_N);
    }

//initial config body1459 end


//initial config body1460 begin
    if (CP_PMA_CH3_REG_TX_DCC_RESET_N_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_DCC_RESET_N_OW_363   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_DCC_RESET_N_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_DCC_RESET_N_OW_363   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_DCC_RESET_N_OW_363  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_DCC_RESET_N_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_DCC_RESET_N_OW);
    }

//initial config body1460 end


//initial config body1461 begin
    if (CP_PMA_CH3_REG_TX_RESET_N == "FALSE")
    {
        SC_PMA_CH3_REG_TX_RESET_N_362   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_RESET_N == "TRUE")
    {
        SC_PMA_CH3_REG_TX_RESET_N_362   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_RESET_N_362  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_TX_RESET_N);
    }

//initial config body1461 end


//initial config body1462 begin
    if (CP_PMA_CH3_REG_TX_RESET_N_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_RESET_N_OW_361   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_RESET_N_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_RESET_N_OW_361   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_RESET_N_OW_361  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_RESET_N_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_RESET_N_OW);
    }

//initial config body1462 end


//initial config body1463 begin
    if (CP_PMA_CH3_REG_TX_PD_POST_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_PD_POST_OW_360   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_PD_POST_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_PD_POST_OW_360   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PD_POST_OW_360  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_PD_POST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_PD_POST_OW);
    }

//initial config body1463 end


//initial config body1464 begin
    if (CP_PMA_CH3_REG_TX_PD_POST == "ON")
    {
        SC_PMA_CH3_REG_TX_PD_POST_359   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_PD_POST == "OFF")
    {
        SC_PMA_CH3_REG_TX_PD_POST_359   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PD_POST_359  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_PD_POST is set to %s. Legal values is ON,OFF",CP_PMA_CH3_REG_TX_PD_POST);
    }

//initial config body1464 end


//initial config body1465 begin
    if (CP_PMA_CH3_REG_TX_SYNC == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_SYNC_358   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_SYNC == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_SYNC_358   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_SYNC_358  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_SYNC is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_SYNC);
    }

//initial config body1465 end


//initial config body1466 begin
    if (CP_PMA_CH3_REG_TX_SYNC_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_SYNC_OW_357   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_SYNC_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_SYNC_OW_357   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_SYNC_OW_357  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_SYNC_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_SYNC_OW);
    }

//initial config body1466 end


//initial config body1467 begin
    if (CP_PMA_CH3_REG_TX_RXDET_TIMER_SEL == "3CYCLE")
    {
        SC_PMA_CH3_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b00 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_RXDET_TIMER_SEL == "12CYCLE")
    {
        SC_PMA_CH3_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b01 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_RXDET_TIMER_SEL == "24CYCLE")
    {
        SC_PMA_CH3_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b10 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_TX_RXDET_TIMER_SEL == "36CYCLE")
    {
        SC_PMA_CH3_REG_TX_RXDET_TIMER_SEL_356_355   := 2'b11 ^ 2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_RXDET_TIMER_SEL_356_355  :=  2'b00 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_RXDET_TIMER_SEL is set to %s. Legal values is 3CYCLE,12CYCLE,24CYCLE,36CYCLE",CP_PMA_CH3_REG_TX_RXDET_TIMER_SEL);
    }

//initial config body1467 end


//initial config body1468 begin
    if (CP_PMA_CH3_REG_TX_BIAS_CTRL >= 0 && CP_PMA_CH3_REG_TX_BIAS_CTRL <= 63)
    {
        SC_PMA_CH3_REG_TX_BIAS_CTRL_324_319   :=  to_unsigned( CP_PMA_CH3_REG_TX_BIAS_CTRL , 6) ^  6'b100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_BIAS_CTRL_324_319  :=  0 ^ 6'b100000;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_BIAS_CTRL is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_TX_BIAS_CTRL);
    }

//initial config body1468 end


//initial config body1469 begin
    if (CP_PMA_CH3_REG_TX_BIAS_CAL_EN == "FALSE")
    {
        SC_PMA_CH3_REG_TX_BIAS_CAL_EN_318   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_BIAS_CAL_EN == "TRUE")
    {
        SC_PMA_CH3_REG_TX_BIAS_CAL_EN_318   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_BIAS_CAL_EN_318  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_BIAS_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_TX_BIAS_CAL_EN);
    }

//initial config body1469 end


//initial config body1470 begin
    if (CP_PMA_CH3_REG_TX_RES_CAL >= 0 && CP_PMA_CH3_REG_TX_RES_CAL <= 63)
    {
        SC_PMA_CH3_REG_TX_RES_CAL_317_312   :=  to_unsigned( CP_PMA_CH3_REG_TX_RES_CAL , 6) ^  6'b110011;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_RES_CAL_317_312  :=  0 ^ 6'b110011;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_RES_CAL is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_TX_RES_CAL);
    }

//initial config body1470 end


//initial config body1471 begin
    if (CP_PMA_CH3_REG_TX_RES_CAL_EN == "FALSE")
    {
        SC_PMA_CH3_REG_TX_RES_CAL_EN_311   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_RES_CAL_EN == "TRUE")
    {
        SC_PMA_CH3_REG_TX_RES_CAL_EN_311   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_RES_CAL_EN_311  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_RES_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_TX_RES_CAL_EN);
    }

//initial config body1471 end


//initial config body1472 begin
    if (CP_PMA_CH3_REG_TX_EI_EN == "FALSE")
    {
        SC_PMA_CH3_REG_TX_EI_EN_310   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_EI_EN == "TRUE")
    {
        SC_PMA_CH3_REG_TX_EI_EN_310   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_EI_EN_310  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_EI_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_TX_EI_EN);
    }

//initial config body1472 end


//initial config body1473 begin
    if (CP_PMA_CH3_REG_TX_EI_EN_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_EI_EN_OW_309   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_EI_EN_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_EI_EN_OW_309   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_EI_EN_OW_309  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_EI_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_EI_EN_OW);
    }

//initial config body1473 end


//initial config body1474 begin
    if (CP_PMA_CH3_REG_TX_BEACON_EN == "FALSE")
    {
        SC_PMA_CH3_REG_TX_BEACON_EN_308   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_BEACON_EN == "TRUE")
    {
        SC_PMA_CH3_REG_TX_BEACON_EN_308   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_BEACON_EN_308  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_BEACON_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_TX_BEACON_EN);
    }

//initial config body1474 end


//initial config body1475 begin
    if (CP_PMA_CH3_REG_TX_BEACON_EN_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_BEACON_EN_OW_307   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_BEACON_EN_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_BEACON_EN_OW_307   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_BEACON_EN_OW_307  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_BEACON_EN_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_BEACON_EN_OW);
    }

//initial config body1475 end


//initial config body1476 begin
    if (CP_PMA_CH3_REG_TX_RXDET_REQ == "FALSE")
    {
        SC_PMA_CH3_REG_TX_RXDET_REQ_306   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_RXDET_REQ == "TRUE")
    {
        SC_PMA_CH3_REG_TX_RXDET_REQ_306   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_RXDET_REQ_306  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_RXDET_REQ is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_TX_RXDET_REQ);
    }

//initial config body1476 end


//initial config body1477 begin
    if (CP_PMA_CH3_REG_TX_RXDET_REQ_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_RXDET_REQ_OW_305   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_RXDET_REQ_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_RXDET_REQ_OW_305   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_RXDET_REQ_OW_305  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_RXDET_REQ_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_RXDET_REQ_OW);
    }

//initial config body1477 end


//initial config body1478 begin
    if (CP_PMA_CH3_REG_TX_BEACON_TIMER_SEL >= 0 && CP_PMA_CH3_REG_TX_BEACON_TIMER_SEL <= 3)
    {
        SC_PMA_CH3_REG_TX_BEACON_TIMER_SEL_304_303  :=  CP_PMA_CH3_REG_TX_BEACON_TIMER_SEL;
    }
    else
    {
        SC_PMA_CH3_REG_TX_BEACON_TIMER_SEL_304_303  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_BEACON_TIMER_SEL is set to %d. Legal values is 0 to 3",CP_PMA_CH3_REG_TX_BEACON_TIMER_SEL);
    }

//initial config body1478 end


//initial config body1479 begin
    if (CP_PMA_CH3_REG_TX_CLKPATH_PD_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_CLKPATH_PD_OW_302   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_CLKPATH_PD_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_CLKPATH_PD_OW_302   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_CLKPATH_PD_OW_302  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_CLKPATH_PD_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_CLKPATH_PD_OW);
    }

//initial config body1479 end


//initial config body1480 begin
    if (CP_PMA_CH3_REG_TX_CLKPATH_PD == "ON")
    {
        SC_PMA_CH3_REG_TX_CLKPATH_PD_301   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_CLKPATH_PD == "OFF")
    {
        SC_PMA_CH3_REG_TX_CLKPATH_PD_301   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_CLKPATH_PD_301  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_CLKPATH_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH3_REG_TX_CLKPATH_PD);
    }

//initial config body1480 end


//initial config body1481 begin
    if (CP_PMA_CH3_REG_TX_PD_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_PD_OW_300   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_PD_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_PD_OW_300   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PD_OW_300  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_PD_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_PD_OW);
    }

//initial config body1481 end


//initial config body1482 begin
    if (CP_PMA_CH3_REG_TX_PD == "ON")
    {
        SC_PMA_CH3_REG_TX_PD_299   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_PD == "OFF")
    {
        SC_PMA_CH3_REG_TX_PD_299   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_PD_299  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH3_REG_TX_PD);
    }

//initial config body1482 end


//initial config body1483 begin
    if (CP_PMA_CH3_REG_RX_TERM_CM_CTRL == "5DIV7")
    {
        SC_PMA_CH3_REG_RX_TERM_CM_CTRL_297_296   := 2'b00;
    }
    else if (CP_PMA_CH3_REG_RX_TERM_CM_CTRL == "2DIV3")
    {
        SC_PMA_CH3_REG_RX_TERM_CM_CTRL_297_296   := 2'b01;
    }
    else if (CP_PMA_CH3_REG_RX_TERM_CM_CTRL == "5DIV6")
    {
        SC_PMA_CH3_REG_RX_TERM_CM_CTRL_297_296   := 2'b10;
    }
    else if (CP_PMA_CH3_REG_RX_TERM_CM_CTRL == "4DIV5")
    {
        SC_PMA_CH3_REG_RX_TERM_CM_CTRL_297_296   := 2'b11;
    }
    else
    {
        SC_PMA_CH3_REG_RX_TERM_CM_CTRL_297_296  :=  2'b00;
        error("Setting Error : The CP_PMA_CH3_REG_RX_TERM_CM_CTRL is set to %s. Legal values is 5DIV7,2DIV3,5DIV6,4DIV5",CP_PMA_CH3_REG_RX_TERM_CM_CTRL);
    }

//initial config body1483 end


//initial config body1484 begin
    if (CP_PMA_CH3_REG_RX_OOB_DETECTOR_PD == "ON")
    {
        SC_PMA_CH3_REG_RX_OOB_DETECTOR_PD_294   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_OOB_DETECTOR_PD == "OFF")
    {
        SC_PMA_CH3_REG_RX_OOB_DETECTOR_PD_294   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_OOB_DETECTOR_PD_294  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_OOB_DETECTOR_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH3_REG_RX_OOB_DETECTOR_PD);
    }

//initial config body1484 end


//initial config body1485 begin
    if (CP_PMA_CH3_REG_RX_OOB_DETECTOR_PD_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_RX_OOB_DETECTOR_PD_OW_293   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_OOB_DETECTOR_PD_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_RX_OOB_DETECTOR_PD_OW_293   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_OOB_DETECTOR_PD_OW_293  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_OOB_DETECTOR_PD_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_RX_OOB_DETECTOR_PD_OW);
    }

//initial config body1485 end


//initial config body1486 begin
    if (CP_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N == "FALSE")
    {
        SC_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_292   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N == "TRUE")
    {
        SC_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_292   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_292  :=  1'b0;
        error("Setting Error : CP_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N);
    }

//initial config body1486 end


//initial config body1487 begin
    if (CP_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_OW_291   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_OW_291   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_OW_291  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_RX_OOB_DETECTOR_RESET_N_OW);
    }

//initial config body1487 end


//initial config body1488 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_IC_I >= 0 && CP_PMA_CH3_REG_RX_SIGDET_IC_I <= 15)
    {
        SC_PMA_CH3_REG_RX_SIGDET_IC_I_290_287   :=  to_unsigned( CP_PMA_CH3_REG_RX_SIGDET_IC_I , 4) ^  4'b1010;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_IC_I_290_287  :=  0 ^ 4'b1010;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_IC_I is set to %d. Legal values is 0 to 15",CP_PMA_CH3_REG_RX_SIGDET_IC_I);
    }

//initial config body1488 end


//initial config body1489 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_4OOB_DET_SEL >= 0 && CP_PMA_CH3_REG_RX_SIGDET_4OOB_DET_SEL <= 7)
    {
        SC_PMA_CH3_REG_RX_SIGDET_4OOB_DET_SEL_282_280   :=  to_unsigned( CP_PMA_CH3_REG_RX_SIGDET_4OOB_DET_SEL , 3) ^  3'b111;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_4OOB_DET_SEL_282_280  :=  0 ^ 3'b111;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_4OOB_DET_SEL is set to %d. Legal values is 0 to 7",CP_PMA_CH3_REG_RX_SIGDET_4OOB_DET_SEL);
    }

//initial config body1489 end


//initial config body1490 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL >= 0 && CP_PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL <= 31)
    {
        SC_PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275  :=  CP_PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL_279_275  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL is set to %d. Legal values is 0 to 31",CP_PMA_CH3_REG_RX_SIGDET_OOB_DET_COUNT_VAL);
    }

//initial config body1490 end


//initial config body1491 begin
    if (CP_PMA_CH3_REG_SLIP_FIFO_INV == "POS_EDGE")
    {
        SC_PMA_CH3_REG_SLIP_FIFO_INV_274  :=  1'b0;
    }
    else if (CP_PMA_CH3_REG_SLIP_FIFO_INV == "NEG_EDGE")
    {
        SC_PMA_CH3_REG_SLIP_FIFO_INV_274  :=  1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_SLIP_FIFO_INV_274  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_SLIP_FIFO_INV is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_PMA_CH3_REG_SLIP_FIFO_INV);
    }

//initial config body1491 end


//initial config body1492 begin
    if (CP_PMA_CH3_REG_SLIP_FIFO_INV_EN == "FALSE")
    {
        SC_PMA_CH3_REG_SLIP_FIFO_INV_EN_273  :=  1'b0;
    }
    else if (CP_PMA_CH3_REG_SLIP_FIFO_INV_EN == "TRUE")
    {
        SC_PMA_CH3_REG_SLIP_FIFO_INV_EN_273  :=  1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_SLIP_FIFO_INV_EN_273  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_SLIP_FIFO_INV_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_SLIP_FIFO_INV_EN);
    }

//initial config body1492 end


//initial config body1493 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_NOSIG_COUNT_SETTING >= 0 && CP_PMA_CH3_REG_RX_SIGDET_NOSIG_COUNT_SETTING <= 7)
    {
        SC_PMA_CH3_REG_RX_SIGDET_NOSIG_CNT_SET_272_270   :=  to_unsigned( CP_PMA_CH3_REG_RX_SIGDET_NOSIG_COUNT_SETTING , 3) ^  3'b100;
        //272 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_NOSIG_CNT_SET_272_270  :=  0 ^ 3'b100;
        //272 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_NOSIG_COUNT_SETTING is set to %d. Legal values is 0 to 7",CP_PMA_CH3_REG_RX_SIGDET_NOSIG_COUNT_SETTING);
    }

//initial config body1493 end


//initial config body1494 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_CHK_WINDOW_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_CHK_WINDOW_EN_269   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_CHK_WINDOW_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_CHK_WINDOW_EN_269   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_CHK_WINDOW_EN_269  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_CHK_WINDOW_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_SIGDET_CHK_WINDOW_EN);
    }

//initial config body1494 end


//initial config body1495 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW >= 0 && CP_PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW <= 31)
    {
        SC_PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264   :=  to_unsigned( CP_PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW , 5) ^  5'b00011;
        //265_264 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW_268_264  :=  0 ^ 5'b00011;
        //265_264 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW is set to %d. Legal values is 0 to 31",CP_PMA_CH3_REG_RX_SIGDET_CH2_CHK_WINDOW);
    }

//initial config body1495 end


//initial config body1496 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_CH2_SEL == 0)
    {
        SC_PMA_CH3_REG_RX_SIGDET_CH2_SEL_263   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_CH2_SEL == 1)
    {
        SC_PMA_CH3_REG_RX_SIGDET_CH2_SEL_263   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_CH2_SEL_263  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_CH2_SEL is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_RX_SIGDET_CH2_SEL);
    }

//initial config body1496 end


//initial config body1497 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_PULSE_EXT == "DISABLE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_PULSE_EXT_262   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_PULSE_EXT == "ENABLE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_PULSE_EXT_262   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_PULSE_EXT_262  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_PULSE_EXT is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_RX_SIGDET_PULSE_EXT);
    }

//initial config body1497 end


//initial config body1498 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_GRM == 0)
    {
        SC_PMA_CH3_REG_RX_SIGDET_GRM_261_260   := 2'b00;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_GRM == 1)
    {
        SC_PMA_CH3_REG_RX_SIGDET_GRM_261_260   := 2'b01;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_GRM == 2)
    {
        SC_PMA_CH3_REG_RX_SIGDET_GRM_261_260   := 2'b10;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_GRM == 3)
    {
        SC_PMA_CH3_REG_RX_SIGDET_GRM_261_260   := 2'b11;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_GRM_261_260  :=  2'b00;
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_GRM is set to %s. Legal values is 0,1,2,3",CP_PMA_CH3_REG_RX_SIGDET_GRM);
    }

//initial config body1498 end


//initial config body1499 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_VTH == "12_5MV")
    {
        SC_PMA_CH3_REG_RX_SIGDET_VTH_259_256   := 4'b0000 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_VTH == "25MV")
    {
        SC_PMA_CH3_REG_RX_SIGDET_VTH_259_256   := 4'b0001 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_VTH == "37_5MV")
    {
        SC_PMA_CH3_REG_RX_SIGDET_VTH_259_256   := 4'b0010 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_VTH == "50MV")
    {
        SC_PMA_CH3_REG_RX_SIGDET_VTH_259_256   := 4'b0011 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_VTH == "62_5MV")
    {
        SC_PMA_CH3_REG_RX_SIGDET_VTH_259_256   := 4'b0100 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_VTH == "75MV")
    {
        SC_PMA_CH3_REG_RX_SIGDET_VTH_259_256   := 4'b0101 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_VTH == "87_5MV")
    {
        SC_PMA_CH3_REG_RX_SIGDET_VTH_259_256   := 4'b0110 ^ 4'b0011;
        //257_256 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_VTH == "100MV")
    {
        SC_PMA_CH3_REG_RX_SIGDET_VTH_259_256   := 4'b0111 ^ 4'b0011;
        //257_256 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_VTH_259_256  :=  4'b0000 ^ 4'b0011;
        //257_256 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_VTH is set to %s. Legal values is 12_5MV,25MV,37_5MV,50MV,62_5MV,75MV,87_5MV,100MV",CP_PMA_CH3_REG_RX_SIGDET_VTH);
    }

//initial config body1499 end


//initial config body1500 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_STATUS == "FALSE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_STATUS_255   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_STATUS == "TRUE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_STATUS_255   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_STATUS_255  :=  1'b0;
        error("Setting Error : CP_PMA_CH3_REG_RX_SIGDET_STATUS  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_RX_SIGDET_STATUS);
    }

//initial config body1500 end


//initial config body1501 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_STATUS_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_STATUS_OW_254   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_STATUS_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_STATUS_OW_254   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_STATUS_OW_254  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_STATUS_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_RX_SIGDET_STATUS_OW);
    }

//initial config body1501 end


//initial config body1502 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_FSM_RST_N == "FALSE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_FSM_RST_N_253   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_FSM_RST_N == "TRUE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_FSM_RST_N_253   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_FSM_RST_N_253  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : CP_PMA_CH3_REG_RX_SIGDET_FSM_RST_N  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_RX_SIGDET_FSM_RST_N);
    }

//initial config body1502 end


//initial config body1503 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_STATUS_SEL >= 0 && CP_PMA_CH3_REG_RX_SIGDET_STATUS_SEL <= 7)
    {
        SC_PMA_CH3_REG_RX_SIGDET_STATUS_SEL_252_250   :=  to_unsigned( CP_PMA_CH3_REG_RX_SIGDET_STATUS_SEL , 3) ^  3'b101;
        //252,250 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_STATUS_SEL_252_250  :=  0 ^ 3'b101;
        //252,250 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_STATUS_SEL is set to %d. Legal values is 0 to 7",CP_PMA_CH3_REG_RX_SIGDET_STATUS_SEL);
    }

//initial config body1503 end


//initial config body1504 begin
    if (CP_PMA_CH3_REG_RX_SLIP_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_SLIP_EN_249  :=  1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_SLIP_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_SLIP_EN_249  :=  1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SLIP_EN_249  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_SLIP_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_SLIP_EN);
    }

//initial config body1504 end


//initial config body1505 begin
    if (CP_PMA_CH3_REG_RX_SLIP_SEL >= 0 && CP_PMA_CH3_REG_RX_SLIP_SEL <= 15)
    {
        SC_PMA_CH3_REG_RX_SLIP_SEL_248_245  :=  CP_PMA_CH3_REG_RX_SLIP_SEL;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SLIP_SEL_248_245  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_SLIP_SEL is set to %d. Legal values is 0 to 15",CP_PMA_CH3_REG_RX_SLIP_SEL);
    }

//initial config body1505 end


//initial config body1506 begin
    if (CP_PMA_CH3_REG_RX_SLIP_SEL_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_SLIP_SEL_EN_244  :=  1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_SLIP_SEL_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_SLIP_SEL_EN_244  :=  1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SLIP_SEL_EN_244  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_SLIP_SEL_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_SLIP_SEL_EN);
    }

//initial config body1506 end


//initial config body1507 begin
    if (CP_PMA_CH3_REG_TX_DCC_DISABLE == "DISABLE")
    {
        SC_PMA_CH3_REG_TX_DCC_DISABLE_243   := 1'b1;
    }
    else if (CP_PMA_CH3_REG_TX_DCC_DISABLE == "ENABLE")
    {
        SC_PMA_CH3_REG_TX_DCC_DISABLE_243   := 1'b0;
    }
    else
    {
        SC_PMA_CH3_REG_TX_DCC_DISABLE_243  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_DCC_DISABLE is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_TX_DCC_DISABLE);
    }

//initial config body1507 end


//initial config body1508 begin
    if (CP_PMA_CH3_REG_RX_DCC_DISABLE == "DISABLE")
    {
        SC_PMA_CH3_REG_RX_DCC_DISABLE_242   := 1'b1;
    }
    else if (CP_PMA_CH3_REG_RX_DCC_DISABLE == "ENABLE")
    {
        SC_PMA_CH3_REG_RX_DCC_DISABLE_242   := 1'b0;
    }
    else
    {
        SC_PMA_CH3_REG_RX_DCC_DISABLE_242  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_DCC_DISABLE is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_RX_DCC_DISABLE);
    }

//initial config body1508 end


//initial config body1509 begin
    if (CP_PMA_CH3_REG_RX_SATA_COMWAKE == "FALSE")
    {
        SC_PMA_CH3_REG_RX_SATA_COMWAKE_239   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_SATA_COMWAKE == "TRUE")
    {
        SC_PMA_CH3_REG_RX_SATA_COMWAKE_239   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SATA_COMWAKE_239  :=  1'b0;
        error("Setting Error : CP_PMA_CH3_REG_RX_SATA_COMWAKE  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_RX_SATA_COMWAKE);
    }

//initial config body1509 end


//initial config body1510 begin
    if (CP_PMA_CH3_REG_RX_SATA_COMWAKE_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_RX_SATA_COMWAKE_OW_238   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_SATA_COMWAKE_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_RX_SATA_COMWAKE_OW_238   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SATA_COMWAKE_OW_238  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_SATA_COMWAKE_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_RX_SATA_COMWAKE_OW);
    }

//initial config body1510 end


//initial config body1511 begin
    if (CP_PMA_CH3_REG_RX_SATA_COMINIT == "FALSE")
    {
        SC_PMA_CH3_REG_RX_SATA_COMINIT_237   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_SATA_COMINIT == "TRUE")
    {
        SC_PMA_CH3_REG_RX_SATA_COMINIT_237   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SATA_COMINIT_237  :=  1'b0;
        error("Setting Error : CP_PMA_CH3_REG_RX_SATA_COMINIT  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_RX_SATA_COMINIT);
    }

//initial config body1511 end


//initial config body1512 begin
    if (CP_PMA_CH3_REG_RX_SATA_COMINIT_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_RX_SATA_COMINIT_OW_236   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_SATA_COMINIT_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_RX_SATA_COMINIT_OW_236   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SATA_COMINIT_OW_236  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_SATA_COMINIT_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_RX_SATA_COMINIT_OW);
    }

//initial config body1512 end


//initial config body1513 begin
    if (CP_PMA_CH3_REG_RX_SYNC_RST_N == "FALSE")
    {
        SC_PMA_CH3_REG_RX_SYNC_RST_N_231   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_RX_SYNC_RST_N == "TRUE")
    {
        SC_PMA_CH3_REG_RX_SYNC_RST_N_231   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SYNC_RST_N_231  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : CP_PMA_CH3_REG_RX_SYNC_RST_N  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_RX_SYNC_RST_N);
    }

//initial config body1513 end


//initial config body1514 begin
    if (CP_PMA_CH3_REG_RX_SYNC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_SYNC_RST_N_EN_230   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_SYNC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_SYNC_RST_N_EN_230   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SYNC_RST_N_EN_230  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_SYNC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_SYNC_RST_N_EN);
    }

//initial config body1514 end


//initial config body1515 begin
    if (CP_PMA_CH3_REG_COMINIT_STATUS_CLEAR == 0)
    {
        SC_PMA_CH3_REG_COMINIT_STATUS_CLEAR_229  :=  1'b0;
    }
    else if (CP_PMA_CH3_REG_COMINIT_STATUS_CLEAR == 1)
    {
        SC_PMA_CH3_REG_COMINIT_STATUS_CLEAR_229  :=  1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_COMINIT_STATUS_CLEAR_229  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_COMINIT_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_COMINIT_STATUS_CLEAR);
    }

//initial config body1515 end


//initial config body1516 begin
    if (CP_PMA_CH3_REG_COMWAKE_STATUS_CLEAR == 0)
    {
        SC_PMA_CH3_REG_COMWAKE_STATUS_CLEAR_228  :=  1'b0;
    }
    else if (CP_PMA_CH3_REG_COMWAKE_STATUS_CLEAR == 1)
    {
        SC_PMA_CH3_REG_COMWAKE_STATUS_CLEAR_228  :=  1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_COMWAKE_STATUS_CLEAR_228  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_COMWAKE_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_COMWAKE_STATUS_CLEAR);
    }

//initial config body1516 end


//initial config body1517 begin
    if (CP_PMA_CH3_REG_RX_PIBUF_IC_TX == 0)
    {
        SC_PMA_CH3_REG_RX_PIBUF_IC_TX_227_226   := 2'b00 ^ 2'b01;
        //226 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_PIBUF_IC_TX == 1)
    {
        SC_PMA_CH3_REG_RX_PIBUF_IC_TX_227_226   := 2'b01 ^ 2'b01;
        //226 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_PIBUF_IC_TX == 2)
    {
        SC_PMA_CH3_REG_RX_PIBUF_IC_TX_227_226   := 2'b10 ^ 2'b01;
        //226 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_PIBUF_IC_TX == 3)
    {
        SC_PMA_CH3_REG_RX_PIBUF_IC_TX_227_226   := 2'b11 ^ 2'b01;
        //226 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_PIBUF_IC_TX_227_226  :=  2'b00 ^ 2'b01;
        //226 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_PIBUF_IC_TX is set to %s. Legal values is 0,1,2,3",CP_PMA_CH3_REG_RX_PIBUF_IC_TX);
    }

//initial config body1517 end


//initial config body1518 begin
    if (CP_PMA_CH3_REG_OOB_COMINIT_GAP_MAX >= 0 && CP_PMA_CH3_REG_OOB_COMINIT_GAP_MAX <= 255)
    {
        SC_PMA_CH3_REG_OOB_COMINIT_GAP_MAX_225_218   :=  to_unsigned( CP_PMA_CH3_REG_OOB_COMINIT_GAP_MAX , 8) ^  8'b00100011;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_OOB_COMINIT_GAP_MAX_225_218  :=  0 ^ 8'b00100011;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_OOB_COMINIT_GAP_MAX is set to %d. Legal values is 0 to 255",CP_PMA_CH3_REG_OOB_COMINIT_GAP_MAX);
    }

//initial config body1518 end


//initial config body1519 begin
    if (CP_PMA_CH3_REG_OOB_COMINIT_GAP_MIN >= 0 && CP_PMA_CH3_REG_OOB_COMINIT_GAP_MIN <= 255)
    {
        SC_PMA_CH3_REG_OOB_COMINIT_GAP_MIN_217_210   :=  to_unsigned( CP_PMA_CH3_REG_OOB_COMINIT_GAP_MIN , 8) ^  8'b00001111;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_OOB_COMINIT_GAP_MIN_217_210  :=  0 ^ 8'b00001111;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_OOB_COMINIT_GAP_MIN is set to %d. Legal values is 0 to 255",CP_PMA_CH3_REG_OOB_COMINIT_GAP_MIN);
    }

//initial config body1519 end


//initial config body1520 begin
    if (CP_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX >= 0 && CP_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX <= 63)
    {
        SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX_209_204   :=  to_unsigned( CP_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX , 6) ^  6'b001011;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX_209_204  :=  0 ^ 6'b001011;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_OOB_COMWAKE_GAP_MAX);
    }

//initial config body1520 end


//initial config body1521 begin
    if (CP_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN >= 0 && CP_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN <= 63)
    {
        SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN_203_198   :=  to_unsigned( CP_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN , 6) ^  6'b000011;
        //199_198 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN_203_198  :=  0 ^ 6'b000011;
        //199_198 reversed
        error("Setting Error : The CP_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_OOB_COMWAKE_GAP_MIN);
    }

//initial config body1521 end


//initial config body1522 begin
    if (CP_PMA_CH3_REG_PMA_TEST_SEL == 0)
    {
        SC_PMA_CH3_REG_PMA_TEST_SEL_197_195   := 3'b000;
    }
    else if (CP_PMA_CH3_REG_PMA_TEST_SEL == 1)
    {
        SC_PMA_CH3_REG_PMA_TEST_SEL_197_195   := 3'b001;
    }
    else
    {
        SC_PMA_CH3_REG_PMA_TEST_SEL_197_195  :=  3'b000;
        error("Setting Error : The CP_PMA_CH3_REG_PMA_TEST_SEL is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_PMA_TEST_SEL);
    }

//initial config body1522 end


//initial config body1523 begin
    if (CP_PMA_CH3_REG_CDR_STATUS_FIFO_EN == "FALSE")
    {
        SC_PMA_CH3_REG_CDR_STATUS_FIFO_EN_194   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_STATUS_FIFO_EN == "TRUE")
    {
        SC_PMA_CH3_REG_CDR_STATUS_FIFO_EN_194   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_STATUS_FIFO_EN_194  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_CDR_STATUS_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_CDR_STATUS_FIFO_EN);
    }

//initial config body1523 end


//initial config body1524 begin
    if (CP_PMA_CH3_REG_CDR_STATUS_RADDR_INIT >= 0 && CP_PMA_CH3_REG_CDR_STATUS_RADDR_INIT <= 7)
    {
        SC_PMA_CH3_REG_CDR_STATUS_RADDR_INIT_193_191  :=  CP_PMA_CH3_REG_CDR_STATUS_RADDR_INIT;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_STATUS_RADDR_INIT_193_191  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_CDR_STATUS_RADDR_INIT is set to %d. Legal values is 0 to 7",CP_PMA_CH3_REG_CDR_STATUS_RADDR_INIT);
    }

//initial config body1524 end


//initial config body1525 begin
    if (CP_PMA_CH3_REG_CDR_TURBO_MODE_EN == "FALSE")
    {
        SC_PMA_CH3_REG_CDR_TURBO_MODE_EN_189   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_TURBO_MODE_EN == "TRUE")
    {
        SC_PMA_CH3_REG_CDR_TURBO_MODE_EN_189   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_TURBO_MODE_EN_189  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_CDR_TURBO_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_CDR_TURBO_MODE_EN);
    }

//initial config body1525 end


//initial config body1526 begin
    if (CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_OW_188   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_OW_188   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_OW_188  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_OW);
    }

//initial config body1526 end


//initial config body1527 begin
    if (CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_VAL == "FALSE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_VAL_187   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_VAL == "TRUE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_VAL_187   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_VAL_187  :=  1'b0;
        error("Setting Error : CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_VAL  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_VAL);
    }

//initial config body1527 end


//initial config body1528 begin
    if (CP_PMA_CH3_REG_CDR_SAT_DET_TIMER == 0)
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_TIMER_186_185   := 2'b00 ^ 2'b10;
        //186 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_SAT_DET_TIMER == 1)
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_TIMER_186_185   := 2'b01 ^ 2'b10;
        //186 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_SAT_DET_TIMER == 2)
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_TIMER_186_185   := 2'b10 ^ 2'b10;
        //186 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_SAT_DET_TIMER == 3)
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_TIMER_186_185   := 2'b11 ^ 2'b10;
        //186 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_TIMER_186_185  :=  2'b00 ^ 2'b10;
        //186 reversed
        error("Setting Error : The CP_PMA_CH3_REG_CDR_SAT_DET_TIMER is set to %s. Legal values is 0,1,2,3",CP_PMA_CH3_REG_CDR_SAT_DET_TIMER);
    }

//initial config body1528 end


//initial config body1529 begin
    if (CP_PMA_CH3_REG_CDR_SIGDET_STATUS_DIS == "FALSE")
    {
        SC_PMA_CH3_REG_CDR_SIGDET_STATUS_DIS_184   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_SIGDET_STATUS_DIS == "TRUE")
    {
        SC_PMA_CH3_REG_CDR_SIGDET_STATUS_DIS_184   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_SIGDET_STATUS_DIS_184  :=  1'b0;
        error("Setting Error : CP_PMA_CH3_REG_CDR_SIGDET_STATUS_DIS  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_CDR_SIGDET_STATUS_DIS);
    }

//initial config body1529 end


//initial config body1530 begin
    if (CP_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_OW_183   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_OW_183   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_OW_183  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_OW);
    }

//initial config body1530 end


//initial config body1531 begin
    if (CP_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST == "FALSE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_182   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST == "TRUE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_182   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST_182  :=  1'b0;
        error("Setting Error : CP_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_CDR_SAT_DET_STICKY_RST);
    }

//initial config body1531 end


//initial config body1532 begin
    if (CP_PMA_CH3_REG_CDR_SAT_DET_RST_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_RST_OW_181   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_SAT_DET_RST_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_RST_OW_181   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_RST_OW_181  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_CDR_SAT_DET_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_CDR_SAT_DET_RST_OW);
    }

//initial config body1532 end


//initial config body1533 begin
    if (CP_PMA_CH3_REG_CDR_SAT_DET_RST == "FALSE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_RST_180   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_SAT_DET_RST == "TRUE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_RST_180   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_RST_180  :=  1'b0;
        error("Setting Error : CP_PMA_CH3_REG_CDR_SAT_DET_RST  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_CDR_SAT_DET_RST);
    }

//initial config body1533 end


//initial config body1534 begin
    if (CP_PMA_CH3_REG_CDR_PI_CTRL_RST_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_CDR_PI_CTRL_RST_OW_179   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_PI_CTRL_RST_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_CDR_PI_CTRL_RST_OW_179   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_PI_CTRL_RST_OW_179  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_CDR_PI_CTRL_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_CDR_PI_CTRL_RST_OW);
    }

//initial config body1534 end


//initial config body1535 begin
    if (CP_PMA_CH3_REG_CDR_PI_CTRL_RST == "FALSE")
    {
        SC_PMA_CH3_REG_CDR_PI_CTRL_RST_178   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_PI_CTRL_RST == "TRUE")
    {
        SC_PMA_CH3_REG_CDR_PI_CTRL_RST_178   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_PI_CTRL_RST_178  :=  1'b0;
        error("Setting Error : CP_PMA_CH3_REG_CDR_PI_CTRL_RST  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_CDR_PI_CTRL_RST);
    }

//initial config body1535 end


//initial config body1536 begin
    if (CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_RESET_EN == "FALSE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_RESET_EN_177   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_RESET_EN == "TRUE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_RESET_EN_177   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_RESET_EN_177  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_RESET_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_RESET_EN);
    }

//initial config body1536 end


//initial config body1537 begin
    if (CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_EN == "FALSE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_EN_176   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_EN == "TRUE")
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_EN_176   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_SAT_DET_STATUS_EN_176  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_CDR_SAT_DET_STATUS_EN);
    }

//initial config body1537 end


//initial config body1538 begin
    if (CP_PMA_CH3_REG_CDR_INT_SAT_DET_EN == "FALSE")
    {
        SC_PMA_CH3_REG_CDR_INT_SAT_DET_EN_163   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_SAT_DET_EN == "TRUE")
    {
        SC_PMA_CH3_REG_CDR_INT_SAT_DET_EN_163   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_INT_SAT_DET_EN_163  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_CDR_INT_SAT_DET_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_CDR_INT_SAT_DET_EN);
    }

//initial config body1538 end


//initial config body1539 begin
    if (CP_PMA_CH3_REG_CDR_LOCK_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_CDR_LOCK_OW_162   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_LOCK_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_CDR_LOCK_OW_162   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_LOCK_OW_162  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_CDR_LOCK_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_CDR_LOCK_OW);
    }

//initial config body1539 end


//initial config body1540 begin
    if (CP_PMA_CH3_REG_CDR_LOCK_VAL == "FALSE")
    {
        SC_PMA_CH3_REG_CDR_LOCK_VAL_161   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_LOCK_VAL == "TRUE")
    {
        SC_PMA_CH3_REG_CDR_LOCK_VAL_161   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_LOCK_VAL_161  :=  1'b0;
        error("Setting Error : CP_PMA_CH3_REG_CDR_LOCK_VAL  is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_CDR_LOCK_VAL);
    }

//initial config body1540 end


//initial config body1541 begin
    if (CP_PMA_CH3_REG_CDR_TURBO_MODE_TIMER == 0)
    {
        SC_PMA_CH3_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b00 ^ 2'b01;
        //159 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_TURBO_MODE_TIMER == 1)
    {
        SC_PMA_CH3_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b01 ^ 2'b01;
        //159 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_TURBO_MODE_TIMER == 2)
    {
        SC_PMA_CH3_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b10 ^ 2'b01;
        //159 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_TURBO_MODE_TIMER == 3)
    {
        SC_PMA_CH3_REG_CDR_TURBO_MODE_TIMER_160_159   := 2'b11 ^ 2'b01;
        //159 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_TURBO_MODE_TIMER_160_159  :=  2'b00 ^ 2'b01;
        //159 reversed
        error("Setting Error : The CP_PMA_CH3_REG_CDR_TURBO_MODE_TIMER is set to %s. Legal values is 0,1,2,3",CP_PMA_CH3_REG_CDR_TURBO_MODE_TIMER);
    }

//initial config body1541 end


//initial config body1542 begin
    if (CP_PMA_CH3_REG_CDR_LOCK_TIMER == "0_8U")
    {
        SC_PMA_CH3_REG_CDR_LOCK_TIMER_158_156  :=  3'b000 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_LOCK_TIMER == "1_2U")
    {
        SC_PMA_CH3_REG_CDR_LOCK_TIMER_158_156  :=  3'b001 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_LOCK_TIMER == "1_6U")
    {
        SC_PMA_CH3_REG_CDR_LOCK_TIMER_158_156  :=  3'b010 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_LOCK_TIMER == "2_4U")
    {
        SC_PMA_CH3_REG_CDR_LOCK_TIMER_158_156  :=  3'b011 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_LOCK_TIMER == "3_2U")
    {
        SC_PMA_CH3_REG_CDR_LOCK_TIMER_158_156  :=  3'b100 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_LOCK_TIMER == "4_8U")
    {
        SC_PMA_CH3_REG_CDR_LOCK_TIMER_158_156  :=  3'b101 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_LOCK_TIMER == "12_8U")
    {
        SC_PMA_CH3_REG_CDR_LOCK_TIMER_158_156  :=  3'b110 ^ 3'b001;
        //156 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_LOCK_TIMER == "25_6U")
    {
        SC_PMA_CH3_REG_CDR_LOCK_TIMER_158_156  :=  3'b111 ^ 3'b001;
        //156 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_LOCK_TIMER_158_156  :=  3'b000 ^ 3'b001;
        //156 reversed
        error("Setting Error : The CP_PMA_CH3_REG_CDR_LOCK_TIMER is set to %s. Legal values is 0_8U,1_2U,1_6U,2_4U,3_2U,4_8U,12_8U,25_6U",CP_PMA_CH3_REG_CDR_LOCK_TIMER);
    }

//initial config body1542 end


//initial config body1543 begin
    if (CP_PMA_CH3_REG_CDR_RX_PI_FORCE_D >= 0 && CP_PMA_CH3_REG_CDR_RX_PI_FORCE_D <= 255)
    {
        SC_PMA_CH3_REG_CDR_RX_PI_FORCE_D_155_148  :=  CP_PMA_CH3_REG_CDR_RX_PI_FORCE_D;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_RX_PI_FORCE_D_155_148  :=  0;
        error("Setting Error : The CP_PMA_CH3_REG_CDR_RX_PI_FORCE_D is set to %d. Legal values is 0 to 255",CP_PMA_CH3_REG_CDR_RX_PI_FORCE_D);
    }

//initial config body1543 end


//initial config body1544 begin
    if (CP_PMA_CH3_REG_CDR_RX_PI_FORCE_SEL == 0)
    {
        SC_PMA_CH3_REG_CDR_RX_PI_FORCE_SEL_147   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_RX_PI_FORCE_SEL == 1)
    {
        SC_PMA_CH3_REG_CDR_RX_PI_FORCE_SEL_147   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_RX_PI_FORCE_SEL_147  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_CDR_RX_PI_FORCE_SEL is set to %s. Legal values is 0,1",CP_PMA_CH3_REG_CDR_RX_PI_FORCE_SEL);
    }

//initial config body1544 end


//initial config body1545 begin
    if (CP_PMA_CH3_REG_CDR_LOCK_RST_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_CDR_LOCK_RST_OW_146   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_LOCK_RST_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_CDR_LOCK_RST_OW_146   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_LOCK_RST_OW_146  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_CDR_LOCK_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_CDR_LOCK_RST_OW);
    }

//initial config body1545 end


//initial config body1546 begin
    if (CP_PMA_CH3_REG_CDR_LOCK_RST == "FALSE")
    {
        SC_PMA_CH3_REG_CDR_LOCK_RST_145   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_LOCK_RST == "TRUE")
    {
        SC_PMA_CH3_REG_CDR_LOCK_RST_145   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_LOCK_RST_145  :=  1'b0;
        error("Setting Error : CP_PMA_CH3_REG_CDR_LOCK_RST is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_CDR_LOCK_RST);
    }

//initial config body1546 end


//initial config body1547 begin
    if (CP_PMA_CH3_REG_CDR_PROP_RST_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_CDR_PROP_RST_OW_144   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_RST_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_CDR_PROP_RST_OW_144   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_PROP_RST_OW_144  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_CDR_PROP_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_CDR_PROP_RST_OW);
    }

//initial config body1547 end


//initial config body1548 begin
    if (CP_PMA_CH3_REG_CDR_PROP_RST == "FALSE")
    {
        SC_PMA_CH3_REG_CDR_PROP_RST_143   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_RST == "TRUE")
    {
        SC_PMA_CH3_REG_CDR_PROP_RST_143   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_PROP_RST_143  :=  1'b0;
        error("Setting Error : CP_PMA_CH3_REG_CDR_PROP_RST is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_CDR_PROP_RST);
    }

//initial config body1548 end


//initial config body1549 begin
    if (CP_PMA_CH3_REG_CDR_INT_RST_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_CDR_INT_RST_OW_142   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_RST_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_CDR_INT_RST_OW_142   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_INT_RST_OW_142  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_CDR_INT_RST_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_CDR_INT_RST_OW);
    }

//initial config body1549 end


//initial config body1550 begin
    if (CP_PMA_CH3_REG_CDR_INT_RST == "FALSE")
    {
        SC_PMA_CH3_REG_CDR_INT_RST_141   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_RST == "TRUE")
    {
        SC_PMA_CH3_REG_CDR_INT_RST_141   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_INT_RST_141  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_CDR_INT_RST is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_CDR_INT_RST);
    }

//initial config body1550 end


//initial config body1551 begin
    if (CP_PMA_CH3_REG_CDR_INT_SAT_MIN >= 0 && CP_PMA_CH3_REG_CDR_INT_SAT_MIN <= 1023)
    {
        SC_PMA_CH3_REG_CDR_INT_SAT_MIN_140_131   :=  to_unsigned( CP_PMA_CH3_REG_CDR_INT_SAT_MIN , 10) ^  10'b0000100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_INT_SAT_MIN_140_131  :=  0 ^ 10'b0000100000;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_CDR_INT_SAT_MIN is set to %d. Legal values is 0 to 1023",CP_PMA_CH3_REG_CDR_INT_SAT_MIN);
    }

//initial config body1551 end


//initial config body1552 begin
    if (CP_PMA_CH3_REG_CDR_INT_SAT_MAX >= 0 && CP_PMA_CH3_REG_CDR_INT_SAT_MAX <= 1023)
    {
        SC_PMA_CH3_REG_CDR_INT_SAT_MAX_130_121   :=  to_unsigned( CP_PMA_CH3_REG_CDR_INT_SAT_MAX , 10) ^  10'b1111100000;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_INT_SAT_MAX_130_121  :=  0 ^ 10'b1111100000;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_CDR_INT_SAT_MAX is set to %d. Legal values is 0 to 1023",CP_PMA_CH3_REG_CDR_INT_SAT_MAX);
    }

//initial config body1552 end


//initial config body1553 begin
    if (CP_PMA_CH3_REG_CDR_INT_TURBO_GAIN == 0)
    {
        SC_PMA_CH3_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b000 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_TURBO_GAIN == 1)
    {
        SC_PMA_CH3_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b001 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_TURBO_GAIN == 2)
    {
        SC_PMA_CH3_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b010 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_TURBO_GAIN == 3)
    {
        SC_PMA_CH3_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b011 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_TURBO_GAIN == 4)
    {
        SC_PMA_CH3_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b100 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_TURBO_GAIN == 5)
    {
        SC_PMA_CH3_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b101 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_TURBO_GAIN == 6)
    {
        SC_PMA_CH3_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b110 ^ 3'b110;
        //120_119 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_TURBO_GAIN == 7)
    {
        SC_PMA_CH3_REG_CDR_INT_TURBO_GAIN_120_118   := 3'b111 ^ 3'b110;
        //120_119 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_INT_TURBO_GAIN_120_118  :=  3'b000 ^ 3'b110;
        //120_119 reversed
        error("Setting Error : The CP_PMA_CH3_REG_CDR_INT_TURBO_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH3_REG_CDR_INT_TURBO_GAIN);
    }

//initial config body1553 end


//initial config body1554 begin
    if (CP_PMA_CH3_REG_CDR_INT_GAIN == 0)
    {
        SC_PMA_CH3_REG_CDR_INT_GAIN_117_115   := 3'b000 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_GAIN == 1)
    {
        SC_PMA_CH3_REG_CDR_INT_GAIN_117_115   := 3'b001 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_GAIN == 2)
    {
        SC_PMA_CH3_REG_CDR_INT_GAIN_117_115   := 3'b010 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_GAIN == 3)
    {
        SC_PMA_CH3_REG_CDR_INT_GAIN_117_115   := 3'b011 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_GAIN == 4)
    {
        SC_PMA_CH3_REG_CDR_INT_GAIN_117_115   := 3'b100 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_GAIN == 5)
    {
        SC_PMA_CH3_REG_CDR_INT_GAIN_117_115   := 3'b101 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_GAIN == 6)
    {
        SC_PMA_CH3_REG_CDR_INT_GAIN_117_115   := 3'b110 ^ 3'b101;
        //117_115 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_INT_GAIN == 7)
    {
        SC_PMA_CH3_REG_CDR_INT_GAIN_117_115   := 3'b111 ^ 3'b101;
        //117_115 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_INT_GAIN_117_115  :=  3'b000 ^ 3'b101;
        //117_115 reversed
        error("Setting Error : The CP_PMA_CH3_REG_CDR_INT_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH3_REG_CDR_INT_GAIN);
    }

//initial config body1554 end


//initial config body1555 begin
    if (CP_PMA_CH3_REG_CDR_PROP_TURBO_GAIN == 0)
    {
        SC_PMA_CH3_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b000 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_TURBO_GAIN == 1)
    {
        SC_PMA_CH3_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b001 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_TURBO_GAIN == 2)
    {
        SC_PMA_CH3_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b010 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_TURBO_GAIN == 3)
    {
        SC_PMA_CH3_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b011 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_TURBO_GAIN == 4)
    {
        SC_PMA_CH3_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b100 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_TURBO_GAIN == 5)
    {
        SC_PMA_CH3_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b101 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_TURBO_GAIN == 6)
    {
        SC_PMA_CH3_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b110 ^ 3'b110;
        //114_113 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_TURBO_GAIN == 7)
    {
        SC_PMA_CH3_REG_CDR_PROP_TURBO_GAIN_114_112   := 3'b111 ^ 3'b110;
        //114_113 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_PROP_TURBO_GAIN_114_112  :=  3'b000 ^ 3'b110;
        //114_113 reversed
        error("Setting Error : The CP_PMA_CH3_REG_CDR_PROP_TURBO_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH3_REG_CDR_PROP_TURBO_GAIN);
    }

//initial config body1555 end


//initial config body1556 begin
    if (CP_PMA_CH3_REG_CDR_PROP_GAIN == 0)
    {
        SC_PMA_CH3_REG_CDR_PROP_GAIN_111_109   := 3'b000 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_GAIN == 1)
    {
        SC_PMA_CH3_REG_CDR_PROP_GAIN_111_109   := 3'b001 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_GAIN == 2)
    {
        SC_PMA_CH3_REG_CDR_PROP_GAIN_111_109   := 3'b010 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_GAIN == 3)
    {
        SC_PMA_CH3_REG_CDR_PROP_GAIN_111_109   := 3'b011 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_GAIN == 4)
    {
        SC_PMA_CH3_REG_CDR_PROP_GAIN_111_109   := 3'b100 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_GAIN == 5)
    {
        SC_PMA_CH3_REG_CDR_PROP_GAIN_111_109   := 3'b101 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_GAIN == 6)
    {
        SC_PMA_CH3_REG_CDR_PROP_GAIN_111_109   := 3'b110 ^ 3'b101;
        //111_109 reversed;
    }
    else if (CP_PMA_CH3_REG_CDR_PROP_GAIN == 7)
    {
        SC_PMA_CH3_REG_CDR_PROP_GAIN_111_109   := 3'b111 ^ 3'b101;
        //111_109 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_CDR_PROP_GAIN_111_109  :=  3'b000 ^ 3'b101;
        //111_109 reversed
        error("Setting Error : The CP_PMA_CH3_REG_CDR_PROP_GAIN is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_CH3_REG_CDR_PROP_GAIN);
    }

//initial config body1556 end


//initial config body1557 begin
    if (CP_PMA_CH3_REG_CHK_COUNTER_EN == "FALSE")
    {
        SC_PMA_CH3_REG_CHK_COUNTER_EN_108   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_CHK_COUNTER_EN == "TRUE")
    {
        SC_PMA_CH3_REG_CHK_COUNTER_EN_108   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_CHK_COUNTER_EN_108  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_CHK_COUNTER_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_CHK_COUNTER_EN);
    }

//initial config body1557 end


//initial config body1558 begin
    if (CP_PMA_CH3_REG_LOAD_ERR_CNT == "DISABLE")
    {
        SC_PMA_CH3_REG_LOAD_ERR_CNT_107   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_LOAD_ERR_CNT == "ENABLE")
    {
        SC_PMA_CH3_REG_LOAD_ERR_CNT_107   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_LOAD_ERR_CNT_107  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_LOAD_ERR_CNT is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_LOAD_ERR_CNT);
    }

//initial config body1558 end


//initial config body1559 begin
    if (CP_PMA_CH3_REG_BIST_CHK_PAT_SEL == "PRBS")
    {
        SC_PMA_CH3_REG_BIST_CHK_PAT_SEL_106   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_BIST_CHK_PAT_SEL == "CONSTANT")
    {
        SC_PMA_CH3_REG_BIST_CHK_PAT_SEL_106   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_BIST_CHK_PAT_SEL_106  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_BIST_CHK_PAT_SEL is set to %s. Legal values is PRBS,CONSTANT",CP_PMA_CH3_REG_BIST_CHK_PAT_SEL);
    }

//initial config body1559 end


//initial config body1560 begin
    if (CP_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b00 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b01 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b10 ^ 2'b11;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL_105_104   := 2'b11 ^ 2'b11;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL_105_104  :=  2'b00 ^ 2'b11;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH3_REG_PRBS_CHK_WIDTH_SEL);
    }

//initial config body1560 end


//initial config body1561 begin
    if (CP_PMA_CH3_REG_PRBS_CHK_EN == "FALSE")
    {
        SC_PMA_CH3_REG_PRBS_CHK_EN_103   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_PRBS_CHK_EN == "TRUE")
    {
        SC_PMA_CH3_REG_PRBS_CHK_EN_103   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_PRBS_CHK_EN_103  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_PRBS_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_PRBS_CHK_EN);
    }

//initial config body1561 end


//initial config body1562 begin
    if (CP_PMA_CH3_REG_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH3_REG_PRBS_SEL_102_101   := 2'b00;
    }
    else if (CP_PMA_CH3_REG_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH3_REG_PRBS_SEL_102_101   := 2'b01;
    }
    else if (CP_PMA_CH3_REG_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH3_REG_PRBS_SEL_102_101   := 2'b10;
    }
    else if (CP_PMA_CH3_REG_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH3_REG_PRBS_SEL_102_101   := 2'b11;
    }
    else
    {
        SC_PMA_CH3_REG_PRBS_SEL_102_101  :=  2'b00;
        error("Setting Error : The CP_PMA_CH3_REG_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_PMA_CH3_REG_PRBS_SEL);
    }

//initial config body1562 end


//initial config body1563 begin
    if (CP_PMA_CH3_REG_UDP_CHK_EN == "FALSE")
    {
        SC_PMA_CH3_REG_UDP_CHK_EN_100   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_UDP_CHK_EN == "TRUE")
    {
        SC_PMA_CH3_REG_UDP_CHK_EN_100   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_UDP_CHK_EN_100  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_UDP_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_UDP_CHK_EN);
    }

//initial config body1563 end


//initial config body1564 begin
    if (CP_PMA_CH3_REG_RX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH3_REG_RX_ERR_INSERT_99   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH3_REG_RX_ERR_INSERT_99   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_ERR_INSERT_99  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_ERR_INSERT is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_RX_ERR_INSERT);
    }

//initial config body1564 end


//initial config body1565 begin
    if (CP_PMA_CH3_REG_RX_DATA_POLARITY == "NORMAL")
    {
        SC_PMA_CH3_REG_RX_DATA_POLARITY_98   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_DATA_POLARITY == "REVERSE")
    {
        SC_PMA_CH3_REG_RX_DATA_POLARITY_98   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_DATA_POLARITY_98  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_DATA_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_PMA_CH3_REG_RX_DATA_POLARITY);
    }

//initial config body1565 end


//initial config body1566 begin
    if (CP_PMA_CH3_REG_TXCLK_SEL == "PLL")
    {
        SC_PMA_CH3_REG_TXCLK_SEL_97   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TXCLK_SEL == "RXCLK")
    {
        SC_PMA_CH3_REG_TXCLK_SEL_97   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TXCLK_SEL_97  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TXCLK_SEL is set to %s. Legal values is PLL,RXCLK",CP_PMA_CH3_REG_TXCLK_SEL);
    }

//initial config body1566 end


//initial config body1567 begin
    if (CP_PMA_CH3_REG_RX_TX2RX_PLPBK_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_TX2RX_PLPBK_EN_96   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_TX2RX_PLPBK_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_TX2RX_PLPBK_EN_96   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_TX2RX_PLPBK_EN_96  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_TX2RX_PLPBK_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_TX2RX_PLPBK_EN);
    }

//initial config body1567 end


//initial config body1568 begin
    if (CP_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_EN_95   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_EN_95   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_EN_95  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_EN);
    }

//initial config body1568 end


//initial config body1569 begin
    if (CP_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N == "FALSE")
    {
        SC_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_94   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N == "TRUE")
    {
        SC_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_94   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N_94  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_CH3_REG_RX_TX2RX_PLPBK_RST_N);
    }

//initial config body1569 end


//initial config body1570 begin
    if (CP_PMA_CH3_REG_TX_RATE_EN == "FALSE")
    {
        SC_PMA_CH3_REG_TX_RATE_EN_93   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_TX_RATE_EN == "TRUE")
    {
        SC_PMA_CH3_REG_TX_RATE_EN_93   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_TX_RATE_EN_93  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_TX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_TX_RATE_EN);
    }

//initial config body1570 end


//initial config body1571 begin
    if (CP_PMA_CH3_REG_TX_RATE == "DIV8")
    {
        SC_PMA_CH3_REG_TX_RATE_92_90   := 3'd0 ^ 3'b011;
        //91_90 reversed;
    }
    else if (CP_PMA_CH3_REG_TX_RATE == "DIV4")
    {
        SC_PMA_CH3_REG_TX_RATE_92_90   := 3'd1 ^ 3'b011;
        //91_90 reversed;
    }
    else if (CP_PMA_CH3_REG_TX_RATE == "DIV2")
    {
        SC_PMA_CH3_REG_TX_RATE_92_90   := 3'd2 ^ 3'b011;
        //91_90 reversed;
    }
    else if (CP_PMA_CH3_REG_TX_RATE == "DIV1")
    {
        SC_PMA_CH3_REG_TX_RATE_92_90   := 3'd3 ^ 3'b011;
        //91_90 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_TX_RATE_92_90  :=  3'd0 ^ 3'b011;
        //91_90 reversed
        error("Setting Error : The CP_PMA_CH3_REG_TX_RATE is set to %s. Legal values is DIV8,DIV4,DIV2,DIV1",CP_PMA_CH3_REG_TX_RATE);
    }

//initial config body1571 end


//initial config body1572 begin
    if (CP_PMA_CH3_REG_RX_ICTRL_PREDRV == "87_5PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PREDRV_89_88   := 2'b00 ^ 2'b01;
        //88 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_PREDRV == "100PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PREDRV_89_88   := 2'b01 ^ 2'b01;
        //88 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_PREDRV == "112_5PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PREDRV_89_88   := 2'b10 ^ 2'b01;
        //88 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_PREDRV == "125PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PREDRV_89_88   := 2'b11 ^ 2'b01;
        //88 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_ICTRL_PREDRV_89_88  :=  2'b00 ^ 2'b01;
        //88 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_ICTRL_PREDRV is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH3_REG_RX_ICTRL_PREDRV);
    }

//initial config body1572 end


//initial config body1573 begin
    if (CP_PMA_CH3_REG_RX_ICTRL_DCC == "87_5PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_DCC_87_86   := 2'b00 ^ 2'b01;
        //86 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_DCC == "100PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_DCC_87_86   := 2'b01 ^ 2'b01;
        //86 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_DCC == "112_5PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_DCC_87_86   := 2'b10 ^ 2'b01;
        //86 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_DCC == "125PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_DCC_87_86   := 2'b11 ^ 2'b01;
        //86 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_ICTRL_DCC_87_86  :=  2'b00 ^ 2'b01;
        //86 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_ICTRL_DCC is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH3_REG_RX_ICTRL_DCC);
    }

//initial config body1573 end


//initial config body1574 begin
    if (CP_PMA_CH3_REG_RX_ICTRL_PI == "87_5PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PI_85_84   := 2'b00 ^ 2'b01;
        //84 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_PI == "100PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PI_85_84   := 2'b01 ^ 2'b01;
        //84 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_PI == "112_5PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PI_85_84   := 2'b10 ^ 2'b01;
        //84 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_PI == "125PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PI_85_84   := 2'b11 ^ 2'b01;
        //84 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_ICTRL_PI_85_84  :=  2'b00 ^ 2'b01;
        //84 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_ICTRL_PI is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH3_REG_RX_ICTRL_PI);
    }

//initial config body1574 end


//initial config body1575 begin
    if (CP_PMA_CH3_REG_RX_ICTRL_PIBUF == "87_5PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PIBUF_83_82   := 2'b00 ^ 2'b01;
        //82 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_PIBUF == "100PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PIBUF_83_82   := 2'b01 ^ 2'b01;
        //82 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_PIBUF == "112_5PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PIBUF_83_82   := 2'b10 ^ 2'b01;
        //82 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_PIBUF == "125PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PIBUF_83_82   := 2'b11 ^ 2'b01;
        //82 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_ICTRL_PIBUF_83_82  :=  2'b00 ^ 2'b01;
        //82 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_ICTRL_PIBUF is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH3_REG_RX_ICTRL_PIBUF);
    }

//initial config body1575 end


//initial config body1576 begin
    if (CP_PMA_CH3_REG_RX_ICTRL_SLICER == "87_5PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_SLICER_81_80   := 2'b00 ^ 2'b01;
        //80 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_SLICER == "100PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_SLICER_81_80   := 2'b01 ^ 2'b01;
        //80 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_SLICER == "112_5PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_SLICER_81_80   := 2'b10 ^ 2'b01;
        //80 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_SLICER == "125PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_SLICER_81_80   := 2'b11 ^ 2'b01;
        //80 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_ICTRL_SLICER_81_80  :=  2'b00 ^ 2'b01;
        //80 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_ICTRL_SLICER is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH3_REG_RX_ICTRL_SLICER);
    }

//initial config body1576 end


//initial config body1577 begin
    if (CP_PMA_CH3_REG_RX_ICTRL_PREAMP == "87_5PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PREAMP_79_78   := 2'b00 ^ 2'b01;
        //78 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_PREAMP == "100PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PREAMP_79_78   := 2'b01 ^ 2'b01;
        //78 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_PREAMP == "112_5PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PREAMP_79_78   := 2'b10 ^ 2'b01;
        //78 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_PREAMP == "125PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_PREAMP_79_78   := 2'b11 ^ 2'b01;
        //78 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_ICTRL_PREAMP_79_78  :=  2'b00 ^ 2'b01;
        //78 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_ICTRL_PREAMP is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH3_REG_RX_ICTRL_PREAMP);
    }

//initial config body1577 end


//initial config body1578 begin
    if (CP_PMA_CH3_REG_RX_ICTRL_TRX == "87_5PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_TRX_75_74   := 2'b00 ^ 2'b01;
        //74 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_TRX == "100PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_TRX_75_74   := 2'b01 ^ 2'b01;
        //74 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_TRX == "112_5PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_TRX_75_74   := 2'b10 ^ 2'b01;
        //74 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_ICTRL_TRX == "125PCT")
    {
        SC_PMA_CH3_REG_RX_ICTRL_TRX_75_74   := 2'b11 ^ 2'b01;
        //74 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_ICTRL_TRX_75_74  :=  2'b00 ^ 2'b01;
        //74 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_ICTRL_TRX is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_PMA_CH3_REG_RX_ICTRL_TRX);
    }

//initial config body1578 end


//initial config body1579 begin
    if (CP_PMA_CH3_REG_RX_DCC_IC_TX >= 0 && CP_PMA_CH3_REG_RX_DCC_IC_TX <= 3)
    {
        SC_PMA_CH3_REG_RX_DCC_IC_TX_73_72   :=  to_unsigned( CP_PMA_CH3_REG_RX_DCC_IC_TX , 2) ^  2'b11;
        //73_72 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_DCC_IC_TX_73_72  :=  0 ^ 2'b11;
        //73_72 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_DCC_IC_TX is set to %d. Legal values is 0 to 3",CP_PMA_CH3_REG_RX_DCC_IC_TX);
    }

//initial config body1579 end


//initial config body1580 begin
    if (CP_PMA_CH3_REG_RX_DCC_IC_RX >= 0 && CP_PMA_CH3_REG_RX_DCC_IC_RX <= 3)
    {
        SC_PMA_CH3_REG_RX_DCC_IC_RX_71_70   :=  to_unsigned( CP_PMA_CH3_REG_RX_DCC_IC_RX , 2) ^  2'b11;
        //71_70 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_DCC_IC_RX_71_70  :=  0 ^ 2'b11;
        //71_70 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_DCC_IC_RX is set to %d. Legal values is 0 to 3",CP_PMA_CH3_REG_RX_DCC_IC_RX);
    }

//initial config body1580 end


//initial config body1581 begin
    if (CP_PMA_CH3_REG_RX_PIBUF_IC >= 0 && CP_PMA_CH3_REG_RX_PIBUF_IC <= 3)
    {
        SC_PMA_CH3_REG_RX_PIBUF_IC_68_67   :=  to_unsigned( CP_PMA_CH3_REG_RX_PIBUF_IC , 2) ^  2'b10;
        //68 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_PIBUF_IC_68_67  :=  0 ^ 2'b10;
        //68 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_PIBUF_IC is set to %d. Legal values is 0 to 3",CP_PMA_CH3_REG_RX_PIBUF_IC);
    }

//initial config body1581 end


//initial config body1582 begin
    if (CP_PMA_CH3_REG_RX_PCLK_EDGE_SEL == "POS_EDGE")
    {
        SC_PMA_CH3_REG_RX_PCLK_EDGE_SEL_66   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_PCLK_EDGE_SEL == "NEG_EDGE")
    {
        SC_PMA_CH3_REG_RX_PCLK_EDGE_SEL_66   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_PCLK_EDGE_SEL_66  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_PCLK_EDGE_SEL is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_PMA_CH3_REG_RX_PCLK_EDGE_SEL);
    }

//initial config body1582 end


//initial config body1583 begin
    if (CP_PMA_CH3_REG_RX_PREAMP_IC >= 0 && CP_PMA_CH3_REG_RX_PREAMP_IC <= 4095)
    {
        SC_PMA_CH3_REG_RX_PREAMP_IC_65_54   :=  to_unsigned( CP_PMA_CH3_REG_RX_PREAMP_IC , 12) ^  12'b010101010111;
        // reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_PREAMP_IC_65_54  :=  0 ^ 12'b010101010111;
        // reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_PREAMP_IC is set to %d. Legal values is 0 to 4095",CP_PMA_CH3_REG_RX_PREAMP_IC);
    }

//initial config body1583 end


//initial config body1584 begin
    if (CP_PMA_CH3_REG_RX_EQ_OFF == "FALSE")
    {
        SC_PMA_CH3_REG_RX_EQ_OFF_53   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_EQ_OFF == "TRUE")
    {
        SC_PMA_CH3_REG_RX_EQ_OFF_53   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_EQ_OFF_53  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_EQ_OFF is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_EQ_OFF);
    }

//initial config body1584 end


//initial config body1585 begin
    if (CP_PMA_CH3_REG_RX_ICTRL_SIGDET >= 0 && CP_PMA_CH3_REG_RX_ICTRL_SIGDET <= 15)
    {
        SC_PMA_CH3_REG_RX_ICTRL_SIGDET_52_49   :=  to_unsigned( CP_PMA_CH3_REG_RX_ICTRL_SIGDET , 4) ^  4'b0101;
        //51,49 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_ICTRL_SIGDET_52_49  :=  0 ^ 4'b0101;
        //51,49 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_ICTRL_SIGDET is set to %d. Legal values is 0 to 15",CP_PMA_CH3_REG_RX_ICTRL_SIGDET);
    }

//initial config body1585 end


//initial config body1586 begin
    if (CP_PMA_CH3_REG_RX_RES_TRIM_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_RES_TRIM_EN_44   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_RES_TRIM_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_RES_TRIM_EN_44   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_RES_TRIM_EN_44  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_RES_TRIM_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_RES_TRIM_EN);
    }

//initial config body1586 end


//initial config body1587 begin
    if (CP_PMA_CH3_REG_RX_RES_TRIM >= 0 && CP_PMA_CH3_REG_RX_RES_TRIM <= 63)
    {
        SC_PMA_CH3_REG_RX_RES_TRIM_43_38   :=  to_unsigned( CP_PMA_CH3_REG_RX_RES_TRIM , 6) ^  6'b110011;
        //43_42,39_38 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_RES_TRIM_43_38  :=  0 ^ 6'b110011;
        //43_42,39_38 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_RES_TRIM is set to %d. Legal values is 0 to 63",CP_PMA_CH3_REG_RX_RES_TRIM);
    }

//initial config body1587 end


//initial config body1588 begin
    if (CP_PMA_CH3_REG_RX_RATE_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_RATE_EN_37   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_RATE_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_RATE_EN_37   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_RATE_EN_37  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_RATE_EN);
    }

//initial config body1588 end


//initial config body1589 begin
    if (CP_PMA_CH3_REG_RX_RATE == "DIV8")
    {
        SC_PMA_CH3_REG_RX_RATE_36_34   := 3'd0 ^ 3'b011;
        //35_34 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_RATE == "DIV4")
    {
        SC_PMA_CH3_REG_RX_RATE_36_34   := 3'd1 ^ 3'b011;
        //35_34 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_RATE == "DIV2")
    {
        SC_PMA_CH3_REG_RX_RATE_36_34   := 3'd2 ^ 3'b011;
        //35_34 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_RATE == "DIV1")
    {
        SC_PMA_CH3_REG_RX_RATE_36_34   := 3'd3 ^ 3'b011;
        //35_34 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_RATE_36_34  :=  3'd0 ^ 3'b011;
        //35_34 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_RATE is set to %s. Legal values is DIV8,DIV4,DIV2,DIV1",CP_PMA_CH3_REG_RX_RATE);
    }

//initial config body1589 end


//initial config body1590 begin
    if (CP_PMA_CH3_REG_RX_BUSWIDTH_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_BUSWIDTH_EN_33   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_BUSWIDTH_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_BUSWIDTH_EN_33   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_BUSWIDTH_EN_33  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_BUSWIDTH_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_BUSWIDTH_EN);
    }

//initial config body1590 end


//initial config body1591 begin
    if (CP_PMA_CH3_REG_RX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH3_REG_RX_BUSWIDTH_32_30   := 3'd0 ^ 3'b011;
        //31_30 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH3_REG_RX_BUSWIDTH_32_30   := 3'd1 ^ 3'b011;
        //31_30 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH3_REG_RX_BUSWIDTH_32_30   := 3'd2 ^ 3'b011;
        //31_30 reversed;
    }
    else if (CP_PMA_CH3_REG_RX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH3_REG_RX_BUSWIDTH_32_30   := 3'd3 ^ 3'b011;
        //31_30 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_BUSWIDTH_32_30  :=  3'd0 ^ 3'b011;
        //31_30 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_PMA_CH3_REG_RX_BUSWIDTH);
    }

//initial config body1591 end


//initial config body1592 begin
    if (CP_PMA_CH3_REG_RX_EQ_R_SET >= 0 && CP_PMA_CH3_REG_RX_EQ_R_SET <= 15)
    {
        SC_PMA_CH3_REG_RX_EQ_R_SET_29_26   :=  to_unsigned( CP_PMA_CH3_REG_RX_EQ_R_SET , 4) ^  4'b1000;
        //29 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_EQ_R_SET_29_26  :=  0 ^ 4'b1000;
        //29 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_EQ_R_SET is set to %d. Legal values is 0 to 15",CP_PMA_CH3_REG_RX_EQ_R_SET);
    }

//initial config body1592 end


//initial config body1593 begin
    if (CP_PMA_CH3_REG_RX_EQ_C_SET >= 0 && CP_PMA_CH3_REG_RX_EQ_C_SET <= 15)
    {
        SC_PMA_CH3_REG_RX_EQ_C_SET_25_22   :=  to_unsigned( CP_PMA_CH3_REG_RX_EQ_C_SET , 4) ^  4'b1000;
        //25 reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_EQ_C_SET_25_22  :=  0 ^ 4'b1000;
        //25 reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_EQ_C_SET is set to %d. Legal values is 0 to 15",CP_PMA_CH3_REG_RX_EQ_C_SET);
    }

//initial config body1593 end


//initial config body1594 begin
    if (CP_PMA_CH3_REG_RX_HIGHZ_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_HIGHZ_EN_21   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_HIGHZ_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_HIGHZ_EN_21   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_HIGHZ_EN_21  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_HIGHZ_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_HIGHZ_EN);
    }

//initial config body1594 end


//initial config body1595 begin
    if (CP_PMA_CH3_REG_RX_HIGHZ == "FALSE")
    {
        SC_PMA_CH3_REG_RX_HIGHZ_20   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_HIGHZ == "TRUE")
    {
        SC_PMA_CH3_REG_RX_HIGHZ_20   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_HIGHZ_20  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_HIGHZ is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_HIGHZ);
    }

//initial config body1595 end


//initial config body1596 begin
    if (CP_PMA_CH3_REG_RX_PCLKSWITCH_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_PCLKSWITCH_EN_19   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_PCLKSWITCH_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_PCLKSWITCH_EN_19   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_PCLKSWITCH_EN_19  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_PCLKSWITCH_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_PCLKSWITCH_EN);
    }

//initial config body1596 end


//initial config body1597 begin
    if (CP_PMA_CH3_REG_RX_PCLKSWITCH == "FALSE")
    {
        SC_PMA_CH3_REG_RX_PCLKSWITCH_18   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_PCLKSWITCH == "TRUE")
    {
        SC_PMA_CH3_REG_RX_PCLKSWITCH_18   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_PCLKSWITCH_18  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_PCLKSWITCH is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_PCLKSWITCH);
    }

//initial config body1597 end


//initial config body1598 begin
    if (CP_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_EN_17   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_EN_17   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_EN_17  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_EN);
    }

//initial config body1598 end


//initial config body1599 begin
    if (CP_PMA_CH3_REG_RX_PCLKSWITCH_RST_N == "FALSE")
    {
        SC_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_16   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_RX_PCLKSWITCH_RST_N == "TRUE")
    {
        SC_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_16   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_PCLKSWITCH_RST_N_16  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_PCLKSWITCH_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_PCLKSWITCH_RST_N);
    }

//initial config body1599 end


//initial config body1600 begin
    if (CP_PMA_CH3_REG_RXPCLK_SLIP_OW == "DISABLE")
    {
        SC_PMA_CH3_REG_RXPCLK_SLIP_OW_15   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RXPCLK_SLIP_OW == "ENABLE")
    {
        SC_PMA_CH3_REG_RXPCLK_SLIP_OW_15   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RXPCLK_SLIP_OW_15  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RXPCLK_SLIP_OW is set to %s. Legal values is DISABLE,ENABLE",CP_PMA_CH3_REG_RXPCLK_SLIP_OW);
    }

//initial config body1600 end


//initial config body1601 begin
    if (CP_PMA_CH3_REG_RXPCLK_SLIP == "FALSE")
    {
        SC_PMA_CH3_REG_RXPCLK_SLIP_14   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RXPCLK_SLIP == "TRUE")
    {
        SC_PMA_CH3_REG_RXPCLK_SLIP_14   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RXPCLK_SLIP_14  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RXPCLK_SLIP is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RXPCLK_SLIP);
    }

//initial config body1601 end


//initial config body1602 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_RST_N_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_RST_N_EN_13   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_RST_N_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_RST_N_EN_13   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_RST_N_EN_13  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_SIGDET_RST_N_EN);
    }

//initial config body1602 end


//initial config body1603 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_RST_N == "FALSE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_RST_N_12   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_RST_N == "TRUE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_RST_N_12   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_RST_N_12  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_SIGDET_RST_N);
    }

//initial config body1603 end


//initial config body1604 begin
    if (CP_PMA_CH3_REG_RX_CDR_RST_N_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_CDR_RST_N_EN_11   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_CDR_RST_N_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_CDR_RST_N_EN_11   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_CDR_RST_N_EN_11  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_CDR_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_CDR_RST_N_EN);
    }

//initial config body1604 end


//initial config body1605 begin
    if (CP_PMA_CH3_REG_RX_CDR_RST_N == "FALSE")
    {
        SC_PMA_CH3_REG_RX_CDR_RST_N_10   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_RX_CDR_RST_N == "TRUE")
    {
        SC_PMA_CH3_REG_RX_CDR_RST_N_10   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_CDR_RST_N_10  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_CDR_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_CDR_RST_N);
    }

//initial config body1605 end


//initial config body1606 begin
    if (CP_PMA_CH3_REG_RX_DCC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_DCC_RST_N_EN_9   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_DCC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_DCC_RST_N_EN_9   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_DCC_RST_N_EN_9  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_DCC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_DCC_RST_N_EN);
    }

//initial config body1606 end


//initial config body1607 begin
    if (CP_PMA_CH3_REG_RX_DCC_RST_N == "FALSE")
    {
        SC_PMA_CH3_REG_RX_DCC_RST_N_8   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_CH3_REG_RX_DCC_RST_N == "TRUE")
    {
        SC_PMA_CH3_REG_RX_DCC_RST_N_8   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_CH3_REG_RX_DCC_RST_N_8  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_CH3_REG_RX_DCC_RST_N is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_DCC_RST_N);
    }

//initial config body1607 end


//initial config body1608 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_PD_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_PD_EN_7   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_PD_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_SIGDET_PD_EN_7   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_PD_EN_7  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_SIGDET_PD_EN);
    }

//initial config body1608 end


//initial config body1609 begin
    if (CP_PMA_CH3_REG_RX_SIGDET_PD == "ON")
    {
        SC_PMA_CH3_REG_RX_SIGDET_PD_6   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_SIGDET_PD == "OFF")
    {
        SC_PMA_CH3_REG_RX_SIGDET_PD_6   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_SIGDET_PD_6  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_SIGDET_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH3_REG_RX_SIGDET_PD);
    }

//initial config body1609 end


//initial config body1610 begin
    if (CP_PMA_CH3_REG_RX_DATAPATH_PD_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_DATAPATH_PD_EN_5   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_DATAPATH_PD_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_DATAPATH_PD_EN_5   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_DATAPATH_PD_EN_5  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_DATAPATH_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_DATAPATH_PD_EN);
    }

//initial config body1610 end


//initial config body1611 begin
    if (CP_PMA_CH3_REG_RX_DATAPATH_PD == "ON")
    {
        SC_PMA_CH3_REG_RX_DATAPATH_PD_4   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_DATAPATH_PD == "OFF")
    {
        SC_PMA_CH3_REG_RX_DATAPATH_PD_4   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_DATAPATH_PD_4  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_DATAPATH_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH3_REG_RX_DATAPATH_PD);
    }

//initial config body1611 end


//initial config body1612 begin
    if (CP_PMA_CH3_REG_RX_CLKPATH_PD_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_CLKPATH_PD_EN_3   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_CLKPATH_PD_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_CLKPATH_PD_EN_3   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_CLKPATH_PD_EN_3  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_CLKPATH_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_CLKPATH_PD_EN);
    }

//initial config body1612 end


//initial config body1613 begin
    if (CP_PMA_CH3_REG_RX_CLKPATH_PD == "ON")
    {
        SC_PMA_CH3_REG_RX_CLKPATH_PD_2   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_CLKPATH_PD == "OFF")
    {
        SC_PMA_CH3_REG_RX_CLKPATH_PD_2   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_CLKPATH_PD_2  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_CLKPATH_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH3_REG_RX_CLKPATH_PD);
    }

//initial config body1613 end


//initial config body1614 begin
    if (CP_PMA_CH3_REG_RX_PD_EN == "FALSE")
    {
        SC_PMA_CH3_REG_RX_PD_EN_1   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_PD_EN == "TRUE")
    {
        SC_PMA_CH3_REG_RX_PD_EN_1   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_PD_EN_1  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_CH3_REG_RX_PD_EN);
    }

//initial config body1614 end


//initial config body1615 begin
    if (CP_PMA_CH3_REG_RX_PD == "ON")
    {
        SC_PMA_CH3_REG_RX_PD_0   := 1'b0;
    }
    else if (CP_PMA_CH3_REG_RX_PD == "OFF")
    {
        SC_PMA_CH3_REG_RX_PD_0   := 1'b1;
    }
    else
    {
        SC_PMA_CH3_REG_RX_PD_0  :=  1'b0;
        error("Setting Error : The CP_PMA_CH3_REG_RX_PD is set to %s. Legal values is ON,OFF",CP_PMA_CH3_REG_RX_PD);
    }

//initial config body1615 end


//initial config body1616 begin
    if (CP_PARM_PLL0_RSTN == "FALSE")
    {
        SC_PLL0_RSTN_194   := 1'b0;
    }
    else if (CP_PARM_PLL0_RSTN == "TRUE")
    {
        SC_PLL0_RSTN_194   := 1'b1;
    }
    else
    {
        SC_PLL0_RSTN_194  :=  1'b0;
        error("Setting Error : The CP_PARM_PLL0_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PARM_PLL0_RSTN);
    }

//initial config body1616 end


//initial config body1617 begin
    if (CP_PARM_PLL0_POWERUP == "OFF")
    {
        SC_PLL0_POWERUP_193   := 1'b0;
    }
    else if (CP_PARM_PLL0_POWERUP == "ON")
    {
        SC_PLL0_POWERUP_193   := 1'b1;
    }
    else
    {
        SC_PLL0_POWERUP_193  :=  1'b0;
        error("Setting Error : The CP_PARM_PLL0_POWERUP is set to %s. Legal values is ON,OFF",CP_PARM_PLL0_POWERUP);
    }

//initial config body1617 end


//initial config body1618 begin
    if (CP_PARM_CFG_HSST_RSTN == "FALSE")
    {
        SC_CFG_HSST_RSTN_192   := 1'b0;
    }
    else if (CP_PARM_CFG_HSST_RSTN == "TRUE")
    {
        SC_CFG_HSST_RSTN_192   := 1'b1;
    }
    else
    {
        SC_CFG_HSST_RSTN_192  :=  1'b0;
        error("Setting Error : The CP_PARM_CFG_HSST_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PARM_CFG_HSST_RSTN);
    }

//initial config body1618 end


//initial config body1619 begin
    if (CP_PMA_PLL0_REG_RESERVED_191_184 >= 0 && CP_PMA_PLL0_REG_RESERVED_191_184 <= 255)
    {
        SC_PMA_PLL0_REG_RESERVED_191_160[31:24]  :=  CP_PMA_PLL0_REG_RESERVED_191_184;
    }
    else
    {
        SC_PMA_PLL0_REG_RESERVED_191_160[31:24]  :=  0;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_RESERVED_191_184 is set to %d. Legal values is 0 to 255",CP_PMA_PLL0_REG_RESERVED_191_184);
    }

//initial config body1619 end


//initial config body1620 begin
    if (CP_PMA_PLL0_REG_RESERVED_183_176 >= 0 && CP_PMA_PLL0_REG_RESERVED_183_176 <= 255)
    {
        SC_PMA_PLL0_REG_RESERVED_191_160[23:16]  :=  CP_PMA_PLL0_REG_RESERVED_183_176;
    }
    else
    {
        SC_PMA_PLL0_REG_RESERVED_191_160[23:16]  :=  0;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_RESERVED_183_176 is set to %d. Legal values is 0 to 255",CP_PMA_PLL0_REG_RESERVED_183_176);
    }

//initial config body1620 end


//initial config body1621 begin
    if (CP_PMA_PLL0_REG_RESERVED_175_168 >= 0 && CP_PMA_PLL0_REG_RESERVED_175_168 <= 255)
    {
        SC_PMA_PLL0_REG_RESERVED_191_160[15:8]  :=  CP_PMA_PLL0_REG_RESERVED_175_168;
    }
    else
    {
        SC_PMA_PLL0_REG_RESERVED_191_160[15:8]  :=  0;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_RESERVED_175_168 is set to %d. Legal values is 0 to 255",CP_PMA_PLL0_REG_RESERVED_175_168);
    }

//initial config body1621 end


//initial config body1622 begin
    if (CP_PMA_PLL0_REG_RESERVED_167_160 >= 0 && CP_PMA_PLL0_REG_RESERVED_167_160 <= 255)
    {
        SC_PMA_PLL0_REG_RESERVED_191_160[7:0]  :=  CP_PMA_PLL0_REG_RESERVED_167_160;
    }
    else
    {
        SC_PMA_PLL0_REG_RESERVED_191_160[7:0]  :=  0;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_RESERVED_167_160 is set to %d. Legal values is 0 to 255",CP_PMA_PLL0_REG_RESERVED_167_160);
    }

//initial config body1622 end


//initial config body1623 begin
    if (CP_PMA_PLL0_REG_I_CTRL_MIN >= 0 && CP_PMA_PLL0_REG_I_CTRL_MIN <= 63)
    {
        SC_PMA_PLL0_REG_I_CTRL_MIN_159_154   :=  to_unsigned( CP_PMA_PLL0_REG_I_CTRL_MIN , 6) ^  6'b010011;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_I_CTRL_MIN_159_154  :=  0 ^ 6'b010011;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_I_CTRL_MIN is set to %d. Legal values is 0 to 63",CP_PMA_PLL0_REG_I_CTRL_MIN);
    }

//initial config body1623 end


//initial config body1624 begin
    if (CP_PMA_PLL0_REG_I_CTRL_MAX >= 0 && CP_PMA_PLL0_REG_I_CTRL_MAX <= 63)
    {
        SC_PMA_PLL0_REG_I_CTRL_MAX_153_148   :=  to_unsigned( CP_PMA_PLL0_REG_I_CTRL_MAX , 6) ^  6'b101101;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_I_CTRL_MAX_153_148  :=  0 ^ 6'b101101;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_I_CTRL_MAX is set to %d. Legal values is 0 to 63",CP_PMA_PLL0_REG_I_CTRL_MAX);
    }

//initial config body1624 end


//initial config body1625 begin
    if (CP_PMA_PLL0_REG_RESCAL_WAIT_SEL == 0)
    {
        SC_PMA_PLL0_REG_RESCAL_WAIT_SEL_147   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_RESCAL_WAIT_SEL == 1)
    {
        SC_PMA_PLL0_REG_RESCAL_WAIT_SEL_147   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_WAIT_SEL_147  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_RESCAL_WAIT_SEL is set to %s. Legal values is 0,1",CP_PMA_PLL0_REG_RESCAL_WAIT_SEL);
    }

//initial config body1625 end


//initial config body1626 begin
    if (CP_PMA_PLL0_REG_RESCAL_ITER_VALID_SEL >= 0 && CP_PMA_PLL0_REG_RESCAL_ITER_VALID_SEL <= 3)
    {
        SC_PMA_PLL0_REG_RESCAL_ITER_VALID_SEL_146_145  :=  CP_PMA_PLL0_REG_RESCAL_ITER_VALID_SEL;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_ITER_VALID_SEL_146_145  :=  0;
        error("Setting Error : The CP_PMA_PLL0_REG_RESCAL_ITER_VALID_SEL is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_RESCAL_ITER_VALID_SEL);
    }

//initial config body1626 end


//initial config body1627 begin
    if (CP_PMA_PLL0_REG_RESCAL_I_CODE_OW == 0)
    {
        SC_PMA_PLL0_REG_RESCAL_I_CODE_OW_144   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_RESCAL_I_CODE_OW == 1)
    {
        SC_PMA_PLL0_REG_RESCAL_I_CODE_OW_144   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_I_CODE_OW_144  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_RESCAL_I_CODE_OW is set to %s. Legal values is 0,1",CP_PMA_PLL0_REG_RESCAL_I_CODE_OW);
    }

//initial config body1627 end


//initial config body1628 begin
    if (CP_PMA_PLL0_REG_RESCAL_I_CODE_VAL >= 0 && CP_PMA_PLL0_REG_RESCAL_I_CODE_VAL <= 63)
    {
        SC_PMA_PLL0_REG_RESCAL_I_CODE_VAL_143_138  :=  CP_PMA_PLL0_REG_RESCAL_I_CODE_VAL;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_I_CODE_VAL_143_138  :=  0;
        error("Setting Error : The CP_PMA_PLL0_REG_RESCAL_I_CODE_VAL is set to %d. Legal values is 0 to 63",CP_PMA_PLL0_REG_RESCAL_I_CODE_VAL);
    }

//initial config body1628 end


//initial config body1629 begin
    if (CP_PMA_PLL0_REG_RESCAL_EN == "FALSE")
    {
        SC_PMA_PLL0_REG_RESCAL_EN_137   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_RESCAL_EN == "TRUE")
    {
        SC_PMA_PLL0_REG_RESCAL_EN_137   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_EN_137  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_RESCAL_EN is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_RESCAL_EN);
    }

//initial config body1629 end


//initial config body1630 begin
    if (CP_PMA_PLL0_REG_PLL_CLKBUF_PD_RIGHT == "ON")
    {
        SC_PMA_PLL0_REG_PLL_CLKBUF_PD_RIGHT_136   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_CLKBUF_PD_RIGHT == "OFF")
    {
        SC_PMA_PLL0_REG_PLL_CLKBUF_PD_RIGHT_136   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_CLKBUF_PD_RIGHT_136  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_CLKBUF_PD_RIGHT is set to %s. Legal values is ON,OFF",CP_PMA_PLL0_REG_PLL_CLKBUF_PD_RIGHT);
    }

//initial config body1630 end


//initial config body1631 begin
    if (CP_PMA_PLL0_REG_PLL_CLKBUF_PD_LEFT == "ON")
    {
        SC_PMA_PLL0_REG_PLL_CLKBUF_PD_LEFT_135   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_CLKBUF_PD_LEFT == "OFF")
    {
        SC_PMA_PLL0_REG_PLL_CLKBUF_PD_LEFT_135   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_CLKBUF_PD_LEFT_135  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_CLKBUF_PD_LEFT is set to %s. Legal values is ON,OFF",CP_PMA_PLL0_REG_PLL_CLKBUF_PD_LEFT);
    }

//initial config body1631 end


//initial config body1632 begin
    if (CP_PMA_PLL0_REG_PLL_LOCKDET_MODE == "FALSE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_MODE_134   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_MODE == "TRUE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_MODE_134   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_MODE_134  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_LOCKDET_MODE is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_PLL_LOCKDET_MODE);
    }

//initial config body1632 end


//initial config body1633 begin
    if (CP_PMA_PLL0_REG_PLL_UNLOCKED == "FALSE")
    {
        SC_PMA_PLL0_REG_PLL_UNLOCKED_133   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_UNLOCKED == "TRUE")
    {
        SC_PMA_PLL0_REG_PLL_UNLOCKED_133   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_UNLOCKED_133  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_UNLOCKED is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_PLL_UNLOCKED);
    }

//initial config body1633 end


//initial config body1634 begin
    if (CP_PMA_PLL0_REG_PLL_UNLOCKED_OW == "DISABLE")
    {
        SC_PMA_PLL0_REG_PLL_UNLOCKED_OW_132   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_UNLOCKED_OW == "ENABLE")
    {
        SC_PMA_PLL0_REG_PLL_UNLOCKED_OW_132   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_UNLOCKED_OW_132  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_UNLOCKED_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_PLL_UNLOCKED_OW);
    }

//initial config body1634 end


//initial config body1635 begin
    if (CP_PMA_PLL0_REG_RESCAL_R_CODE_SIGN == "FALSE")
    {
        SC_PMA_PLL0_REG_RESCAL_R_CODE_SIGN_131   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_RESCAL_R_CODE_SIGN == "TRUE")
    {
        SC_PMA_PLL0_REG_RESCAL_R_CODE_SIGN_131   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_R_CODE_SIGN_131  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_RESCAL_R_CODE_SIGN is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_RESCAL_R_CODE_SIGN);
    }

//initial config body1635 end


//initial config body1636 begin
    if (CP_PMA_PLL0_REG_REFCLK_SEL == "FALSE")
    {
        SC_PMA_PLL0_REG_REFCLK_SEL_130   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_REFCLK_SEL == "TRUE")
    {
        SC_PMA_PLL0_REG_REFCLK_SEL_130   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_REFCLK_SEL_130  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_REFCLK_SEL is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_REFCLK_SEL);
    }

//initial config body1636 end


//initial config body1637 begin
    if (CP_PMA_PLL0_REG_PLL_REFCLK_CML_SEL >= 0 && CP_PMA_PLL0_REG_PLL_REFCLK_CML_SEL <= 3)
    {
        SC_PMA_PLL0_REG_PLL_REFCLK_CML_SEL_129_128  :=  CP_PMA_PLL0_REG_PLL_REFCLK_CML_SEL;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_REFCLK_CML_SEL_129_128  :=  0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_REFCLK_CML_SEL is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_PLL_REFCLK_CML_SEL);
    }

//initial config body1637 end


//initial config body1638 begin
    if (CP_PMA_PLL0_REG_CLKBUFS4_C >= 0 && CP_PMA_PLL0_REG_CLKBUFS4_C <= 3)
    {
        SC_PMA_PLL0_REG_CLKBUFS4_C_127_126   :=  to_unsigned( CP_PMA_PLL0_REG_CLKBUFS4_C , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_CLKBUFS4_C_127_126  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_CLKBUFS4_C is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_CLKBUFS4_C);
    }

//initial config body1638 end


//initial config body1639 begin
    if (CP_PMA_PLL0_REG_CLKBUFS3_C >= 0 && CP_PMA_PLL0_REG_CLKBUFS3_C <= 7)
    {
        SC_PMA_PLL0_REG_CLKBUFS3_C_125_123   :=  to_unsigned( CP_PMA_PLL0_REG_CLKBUFS3_C , 3) ^  3'b110;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_CLKBUFS3_C_125_123  :=  0 ^ 3'b110;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_CLKBUFS3_C is set to %d. Legal values is 0 to 7",CP_PMA_PLL0_REG_CLKBUFS3_C);
    }

//initial config body1639 end


//initial config body1640 begin
    if (CP_PMA_PLL0_REG_CLKBUFS2_C >= 0 && CP_PMA_PLL0_REG_CLKBUFS2_C <= 7)
    {
        SC_PMA_PLL0_REG_CLKBUFS2_C_122_120   :=  to_unsigned( CP_PMA_PLL0_REG_CLKBUFS2_C , 3) ^  3'b110;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_CLKBUFS2_C_122_120  :=  0 ^ 3'b110;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_CLKBUFS2_C is set to %d. Legal values is 0 to 7",CP_PMA_PLL0_REG_CLKBUFS2_C);
    }

//initial config body1640 end


//initial config body1641 begin
    if (CP_PMA_PLL0_REG_CLKBUFS1_C >= 0 && CP_PMA_PLL0_REG_CLKBUFS1_C <= 3)
    {
        SC_PMA_PLL0_REG_CLKBUFS1_C_119_118   :=  to_unsigned( CP_PMA_PLL0_REG_CLKBUFS1_C , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_CLKBUFS1_C_119_118  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_CLKBUFS1_C is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_CLKBUFS1_C);
    }

//initial config body1641 end


//initial config body1642 begin
    if (CP_PMA_PLL0_REG_BIAS_REFBUF_C >= 0 && CP_PMA_PLL0_REG_BIAS_REFBUF_C <= 3)
    {
        SC_PMA_PLL0_REG_BIAS_REFBUF_C_117_116   :=  to_unsigned( CP_PMA_PLL0_REG_BIAS_REFBUF_C , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_BIAS_REFBUF_C_117_116  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_BIAS_REFBUF_C is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_BIAS_REFBUF_C);
    }

//initial config body1642 end


//initial config body1643 begin
    if (CP_PMA_PLL0_REG_BIAS_VCRST_C >= 0 && CP_PMA_PLL0_REG_BIAS_VCRST_C <= 3)
    {
        SC_PMA_PLL0_REG_BIAS_VCRST_C_115_114   :=  to_unsigned( CP_PMA_PLL0_REG_BIAS_VCRST_C , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_BIAS_VCRST_C_115_114  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_BIAS_VCRST_C is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_BIAS_VCRST_C);
    }

//initial config body1643 end


//initial config body1644 begin
    if (CP_PMA_PLL0_REG_BIAS_REFD2S_C >= 0 && CP_PMA_PLL0_REG_BIAS_REFD2S_C <= 3)
    {
        SC_PMA_PLL0_REG_BIAS_REFD2S_C_113_112   :=  to_unsigned( CP_PMA_PLL0_REG_BIAS_REFD2S_C , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_BIAS_REFD2S_C_113_112  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_BIAS_REFD2S_C is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_BIAS_REFD2S_C);
    }

//initial config body1644 end


//initial config body1645 begin
    if (CP_PMA_PLL0_REG_BIAS_D2S >= 0 && CP_PMA_PLL0_REG_BIAS_D2S <= 3)
    {
        SC_PMA_PLL0_REG_BIAS_D2S_111_110   :=  to_unsigned( CP_PMA_PLL0_REG_BIAS_D2S , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_BIAS_D2S_111_110  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_BIAS_D2S is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_BIAS_D2S);
    }

//initial config body1645 end


//initial config body1646 begin
    if (CP_PMA_PLL0_REG_LANE_SYNC_EN_OW == "DISABLE")
    {
        SC_PMA_PLL0_REG_BIAS_CLKBUFS4_109_108[1]  :=  1'b0;
    }
    else if (CP_PMA_PLL0_REG_LANE_SYNC_EN_OW == "ENABLE")
    {
        SC_PMA_PLL0_REG_BIAS_CLKBUFS4_109_108[1]  :=  1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_BIAS_CLKBUFS4_109_108[1]  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_LANE_SYNC_EN_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_LANE_SYNC_EN_OW);
    }

//initial config body1646 end


//initial config body1647 begin
    if (CP_PMA_PLL0_REG_LANE_SYNC_EN == "FALSE")
    {
        SC_PMA_PLL0_REG_BIAS_CLKBUFS4_109_108[0]  :=  1'b0;
    }
    else if (CP_PMA_PLL0_REG_LANE_SYNC_EN == "TRUE")
    {
        SC_PMA_PLL0_REG_BIAS_CLKBUFS4_109_108[0]  :=  1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_BIAS_CLKBUFS4_109_108[0]  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_LANE_SYNC_EN is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_LANE_SYNC_EN);
    }

//initial config body1647 end


//initial config body1648 begin
    if (CP_PMA_PLL0_REG_BIAS_CLKBUFS3 >= 0 && CP_PMA_PLL0_REG_BIAS_CLKBUFS3 <= 3)
    {
        SC_PMA_PLL0_REG_BIAS_CLKBUFS3_107_106   :=  to_unsigned( CP_PMA_PLL0_REG_BIAS_CLKBUFS3 , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_BIAS_CLKBUFS3_107_106  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_BIAS_CLKBUFS3 is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_BIAS_CLKBUFS3);
    }

//initial config body1648 end


//initial config body1649 begin
    if (CP_PMA_PLL0_REG_TXPCLK_SEL >= 0 && CP_PMA_PLL0_REG_TXPCLK_SEL <= 3)
    {
        SC_PMA_PLL0_REG_BIAS_CLKBUFS2_105_104  :=  CP_PMA_PLL0_REG_TXPCLK_SEL;
    }
    else
    {
        SC_PMA_PLL0_REG_BIAS_CLKBUFS2_105_104  :=  0;
        error("Setting Error : The CP_PMA_PLL0_REG_TXPCLK_SEL is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_TXPCLK_SEL);
    }

//initial config body1649 end


//initial config body1650 begin
    if (CP_PMA_PLL0_REG_BIAS_CLKBUFS1 >= 0 && CP_PMA_PLL0_REG_BIAS_CLKBUFS1 <= 3)
    {
        SC_PMA_PLL0_REG_BIAS_CLKBUFS1_103_102   :=  to_unsigned( CP_PMA_PLL0_REG_BIAS_CLKBUFS1 , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_BIAS_CLKBUFS1_103_102  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_BIAS_CLKBUFS1 is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_BIAS_CLKBUFS1);
    }

//initial config body1650 end


//initial config body1651 begin
    if (CP_PMA_PLL0_REG_BIAS_LANE_SYNC == 0)
    {
        SC_PMA_PLL0_REG_BIAS_LANE_SYNC_101_100   := 2'b00 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_BIAS_LANE_SYNC == 1)
    {
        SC_PMA_PLL0_REG_BIAS_LANE_SYNC_101_100   := 2'b01 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_BIAS_LANE_SYNC == 2)
    {
        SC_PMA_PLL0_REG_BIAS_LANE_SYNC_101_100   := 2'b10 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_BIAS_LANE_SYNC == 3)
    {
        SC_PMA_PLL0_REG_BIAS_LANE_SYNC_101_100   := 2'b11 ^ 2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_BIAS_LANE_SYNC_101_100  :=  2'b00 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_BIAS_LANE_SYNC is set to %s. Legal values is 0,1,2,3",CP_PMA_PLL0_REG_BIAS_LANE_SYNC);
    }

//initial config body1651 end


//initial config body1652 begin
    if (CP_PMA_PLL0_REG_BIAS_QP >= 0 && CP_PMA_PLL0_REG_BIAS_QP <= 3)
    {
        SC_PMA_PLL0_REG_BIAS_QP_99_98   :=  to_unsigned( CP_PMA_PLL0_REG_BIAS_QP , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_BIAS_QP_99_98  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_BIAS_QP is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_BIAS_QP);
    }

//initial config body1652 end


//initial config body1653 begin
    if (CP_PMA_PLL0_REG_ICTRL_PLL >= 0 && CP_PMA_PLL0_REG_ICTRL_PLL <= 3)
    {
        SC_PMA_PLL0_REG_ICTRL_PLL_97_96   :=  to_unsigned( CP_PMA_PLL0_REG_ICTRL_PLL , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_ICTRL_PLL_97_96  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_ICTRL_PLL is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_ICTRL_PLL);
    }

//initial config body1653 end


//initial config body1654 begin
    if (CP_PMA_PLL0_REG_PD_BIAS == "ON")
    {
        SC_PMA_PLL0_REG_PD_BIAS_95   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PD_BIAS == "OFF")
    {
        SC_PMA_PLL0_REG_PD_BIAS_95   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PD_BIAS_95  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PD_BIAS is set to %s. Legal values is ON,OFF",CP_PMA_PLL0_REG_PD_BIAS);
    }

//initial config body1654 end


//initial config body1655 begin
    if (CP_PMA_PLL0_REG_LPF_TR_C >= 0 && CP_PMA_PLL0_REG_LPF_TR_C <= 15)
    {
        SC_PMA_PLL0_REG_LPF_TR_C_94_91  :=  CP_PMA_PLL0_REG_LPF_TR_C;
    }
    else
    {
        SC_PMA_PLL0_REG_LPF_TR_C_94_91  :=  0;
        error("Setting Error : The CP_PMA_PLL0_REG_LPF_TR_C is set to %d. Legal values is 0 to 15",CP_PMA_PLL0_REG_LPF_TR_C);
    }

//initial config body1655 end


//initial config body1656 begin
    if (CP_PMA_PLL0_REG_LPF_R_C >= 0 && CP_PMA_PLL0_REG_LPF_R_C <= 15)
    {
        SC_PMA_PLL0_REG_LPF_R_C_90_87   :=  to_unsigned( CP_PMA_PLL0_REG_LPF_R_C , 4) ^  4'b0001;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_LPF_R_C_90_87  :=  0 ^ 4'b0001;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_LPF_R_C is set to %d. Legal values is 0 to 15",CP_PMA_PLL0_REG_LPF_R_C);
    }

//initial config body1656 end


//initial config body1657 begin
    if (CP_PMA_PLL0_REG_VCRESET_C_RING >= 0 && CP_PMA_PLL0_REG_VCRESET_C_RING <= 31)
    {
        SC_PMA_PLL0_REG_VCRESET_C_RING_86_82   :=  to_unsigned( CP_PMA_PLL0_REG_VCRESET_C_RING , 5) ^  5'b00100;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_VCRESET_C_RING_86_82  :=  0 ^ 5'b00100;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_VCRESET_C_RING is set to %d. Legal values is 0 to 31",CP_PMA_PLL0_REG_VCRESET_C_RING);
    }

//initial config body1657 end


//initial config body1658 begin
    if (CP_PMA_PLL0_REG_VC_FORCE_EN == "FALSE")
    {
        SC_PMA_PLL0_REG_VC_FORCE_EN_81   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_VC_FORCE_EN == "TRUE")
    {
        SC_PMA_PLL0_REG_VC_FORCE_EN_81   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_VC_FORCE_EN_81  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_VC_FORCE_EN is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_VC_FORCE_EN);
    }

//initial config body1658 end


//initial config body1659 begin
    if (CP_PMA_PLL0_REG_QPCURRENT >= 0 && CP_PMA_PLL0_REG_QPCURRENT <= 15)
    {
        SC_PMA_PLL0_REG_QPCURRENT_80_77   :=  to_unsigned( CP_PMA_PLL0_REG_QPCURRENT , 4) ^  4'b0100;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_QPCURRENT_80_77  :=  0 ^ 4'b0100;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_QPCURRENT is set to %d. Legal values is 0 to 15",CP_PMA_PLL0_REG_QPCURRENT);
    }

//initial config body1659 end


//initial config body1660 begin
    if (CP_PMA_PLL0_REG_RESET_N_PFDQP == "FALSE")
    {
        SC_PMA_PLL0_REG_RESET_N_PFDQP_76   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_RESET_N_PFDQP == "TRUE")
    {
        SC_PMA_PLL0_REG_RESET_N_PFDQP_76   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_RESET_N_PFDQP_76  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_RESET_N_PFDQP is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_RESET_N_PFDQP);
    }

//initial config body1660 end


//initial config body1661 begin
    if (CP_PMA_PLL0_REG_RESET_N_PFDQP_OW == "DISABLE")
    {
        SC_PMA_PLL0_REG_RESET_N_PFDQP_OW_75   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_RESET_N_PFDQP_OW == "ENABLE")
    {
        SC_PMA_PLL0_REG_RESET_N_PFDQP_OW_75   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_RESET_N_PFDQP_OW_75  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_RESET_N_PFDQP_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_RESET_N_PFDQP_OW);
    }

//initial config body1661 end


//initial config body1662 begin
    if (CP_PMA_PLL0_REG_FBDIVB == 0)
    {
        SC_PMA_PLL0_REG_FBDIVB_74_73   := 2'b00 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_FBDIVB == 1)
    {
        SC_PMA_PLL0_REG_FBDIVB_74_73   := 2'b01 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_FBDIVB == 2)
    {
        SC_PMA_PLL0_REG_FBDIVB_74_73   := 2'b10 ^ 2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_FBDIVB_74_73  :=  2'b00 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_FBDIVB is set to %s. Legal values is 0,1,2",CP_PMA_PLL0_REG_FBDIVB);
    }

//initial config body1662 end


//initial config body1663 begin
    if (CP_PMA_PLL0_REG_FBDIVA_5_EN == "FALSE")
    {
        SC_PMA_PLL0_REG_FBDIVA_5_EN_72   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_FBDIVA_5_EN == "TRUE")
    {
        SC_PMA_PLL0_REG_FBDIVA_5_EN_72   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_FBDIVA_5_EN_72  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_FBDIVA_5_EN is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_FBDIVA_5_EN);
    }

//initial config body1663 end


//initial config body1664 begin
    if (CP_PMA_PLL0_REG_REFCLK_TERM_VCM_EN == "FALSE")
    {
        SC_PMA_PLL0_REG_REFCLK_TERM_VCM_EN_71   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_REFCLK_TERM_VCM_EN == "TRUE")
    {
        SC_PMA_PLL0_REG_REFCLK_TERM_VCM_EN_71   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_REFCLK_TERM_VCM_EN_71  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_REFCLK_TERM_VCM_EN is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_REFCLK_TERM_VCM_EN);
    }

//initial config body1664 end


//initial config body1665 begin
    if (CP_PMA_PLL0_REG_PD_BGR == "ON")
    {
        SC_PMA_PLL0_REG_PD_BGR_70   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PD_BGR == "OFF")
    {
        SC_PMA_PLL0_REG_PD_BGR_70   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PD_BGR_70  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PD_BGR is set to %s. Legal values is ON,OFF",CP_PMA_PLL0_REG_PD_BGR);
    }

//initial config body1665 end


//initial config body1666 begin
    if (CP_PMA_PLL0_REG_BGR_STARTUP == "FALSE")
    {
        SC_PMA_PLL0_REG_BGR_STARTUP_69   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_BGR_STARTUP == "TRUE")
    {
        SC_PMA_PLL0_REG_BGR_STARTUP_69   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_BGR_STARTUP_69  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_BGR_STARTUP is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_BGR_STARTUP);
    }

//initial config body1666 end


//initial config body1667 begin
    if (CP_PMA_PLL0_REG_BGR_STARTUP_EN == "FALSE")
    {
        SC_PMA_PLL0_REG_BGR_STARTUP_EN_68   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_BGR_STARTUP_EN == "TRUE")
    {
        SC_PMA_PLL0_REG_BGR_STARTUP_EN_68   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_BGR_STARTUP_EN_68  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_BGR_STARTUP_EN is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_BGR_STARTUP_EN);
    }

//initial config body1667 end


//initial config body1668 begin
    if (CP_PMA_PLL0_REG_REFCLK_OUT_PD == "ON")
    {
        SC_PMA_PLL0_REG_REFCLK_OUT_PD_67   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_REFCLK_OUT_PD == "OFF")
    {
        SC_PMA_PLL0_REG_REFCLK_OUT_PD_67   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_REFCLK_OUT_PD_67  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_REFCLK_OUT_PD is set to %s. Legal values is ON,OFF",CP_PMA_PLL0_REG_REFCLK_OUT_PD);
    }

//initial config body1668 end


//initial config body1669 begin
    if (CP_PMA_PLL0_REG_TEST_FSM == 0)
    {
        SC_PMA_PLL0_REG_TEST_FSM_66_65   := 2'b00;
    }
    else if (CP_PMA_PLL0_REG_TEST_FSM == 1)
    {
        SC_PMA_PLL0_REG_TEST_FSM_66_65   := 2'b01;
    }
    else if (CP_PMA_PLL0_REG_TEST_FSM == 2)
    {
        SC_PMA_PLL0_REG_TEST_FSM_66_65   := 2'b10;
    }
    else if (CP_PMA_PLL0_REG_TEST_FSM == 3)
    {
        SC_PMA_PLL0_REG_TEST_FSM_66_65   := 2'b11;
    }
    else
    {
        SC_PMA_PLL0_REG_TEST_FSM_66_65  :=  2'b00;
        error("Setting Error : The CP_PMA_PLL0_REG_TEST_FSM is set to %s. Legal values is 0,1,2,3",CP_PMA_PLL0_REG_TEST_FSM);
    }

//initial config body1669 end


//initial config body1670 begin
    if (CP_PMA_PLL0_REG_TEST_SIG_HALF_EN == "FALSE")
    {
        SC_PMA_PLL0_REG_TEST_SIG_HALF_EN_64   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_TEST_SIG_HALF_EN == "TRUE")
    {
        SC_PMA_PLL0_REG_TEST_SIG_HALF_EN_64   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_TEST_SIG_HALF_EN_64  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_TEST_SIG_HALF_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL0_REG_TEST_SIG_HALF_EN);
    }

//initial config body1670 end


//initial config body1671 begin
    if (CP_PMA_PLL0_REG_TEST_V_EN == "FALSE")
    {
        SC_PMA_PLL0_REG_TEST_V_EN_63   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_TEST_V_EN == "TRUE")
    {
        SC_PMA_PLL0_REG_TEST_V_EN_63   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_TEST_V_EN_63  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_TEST_V_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL0_REG_TEST_V_EN);
    }

//initial config body1671 end


//initial config body1672 begin
    if (CP_PMA_PLL0_REG_TEST_SEL == 0)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b00000;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 1)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b00001;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 2)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b00010;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 3)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b00011;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 4)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b00100;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 5)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b00101;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 6)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b00110;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 7)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b00111;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 8)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b01000;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 9)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b01001;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 10)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b01010;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 11)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b01011;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 12)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b01100;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 13)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b01101;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 14)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b01110;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 15)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b01111;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 16)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b10000;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 17)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b10001;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 18)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b10010;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 19)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b10011;
    }
    else if (CP_PMA_PLL0_REG_TEST_SEL == 20)
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58   := 5'b10100;
    }
    else
    {
        SC_PMA_PLL0_REG_TEST_SEL_62_58  :=  5'b00000;
        error("Setting Error : The CP_PMA_PLL0_REG_TEST_SEL is set to %s. Legal values is 0 to 20",CP_PMA_PLL0_REG_TEST_SEL);
    }

//initial config body1672 end


//initial config body1673 begin
    if (CP_PMA_PLL0_REG_REFCLK_TEST_EN == "FALSE")
    {
        SC_PMA_PLL0_REG_REFCLK_TEST_EN_57   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_REFCLK_TEST_EN == "TRUE")
    {
        SC_PMA_PLL0_REG_REFCLK_TEST_EN_57   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_REFCLK_TEST_EN_57  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_REFCLK_TEST_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL0_REG_REFCLK_TEST_EN);
    }

//initial config body1673 end


//initial config body1674 begin
    if (CP_PMA_PLL0_REG_FBCLK_TEST_EN == "FALSE")
    {
        SC_PMA_PLL0_REG_FBCLK_TEST_EN_56   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_FBCLK_TEST_EN == "TRUE")
    {
        SC_PMA_PLL0_REG_FBCLK_TEST_EN_56   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_FBCLK_TEST_EN_56  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_FBCLK_TEST_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL0_REG_FBCLK_TEST_EN);
    }

//initial config body1674 end


//initial config body1675 begin
    if (CP_PMA_PLL0_REG_PD_VCO == "ON")
    {
        SC_PMA_PLL0_REG_PD_VCO_55   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PD_VCO == "OFF")
    {
        SC_PMA_PLL0_REG_PD_VCO_55   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PD_VCO_55  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PD_VCO is set to %s. Legal values is ON,OFF",CP_PMA_PLL0_REG_PD_VCO);
    }

//initial config body1675 end


//initial config body1676 begin
    if (CP_PMA_PLL0_REG_PLL_UNLOCKDET_ITER == 0)
    {
        SC_PMA_PLL0_REG_PLL_UNLOCKDET_ITER_54_53   := 2'b00 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_UNLOCKDET_ITER == 1)
    {
        SC_PMA_PLL0_REG_PLL_UNLOCKDET_ITER_54_53   := 2'b01 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_UNLOCKDET_ITER == 2)
    {
        SC_PMA_PLL0_REG_PLL_UNLOCKDET_ITER_54_53   := 2'b10 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_UNLOCKDET_ITER == 3)
    {
        SC_PMA_PLL0_REG_PLL_UNLOCKDET_ITER_54_53   := 2'b11 ^ 2'b10;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_UNLOCKDET_ITER_54_53  :=  2'b00 ^ 2'b10;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_UNLOCKDET_ITER is set to %s. Legal values is 0,1,2,3",CP_PMA_PLL0_REG_PLL_UNLOCKDET_ITER);
    }

//initial config body1676 end


//initial config body1677 begin
    if (CP_PMA_PLL0_REG_PLL_LOCKDET_ITER == 0)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_ITER_52_50   := 3'b000 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_ITER == 1)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_ITER_52_50   := 3'b001 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_ITER == 2)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_ITER_52_50   := 3'b010 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_ITER == 3)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_ITER_52_50   := 3'b011 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_ITER == 4)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_ITER_52_50   := 3'b100 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_ITER == 5)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_ITER_52_50   := 3'b101 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_ITER == 6)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_ITER_52_50   := 3'b110 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_ITER == 7)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_ITER_52_50   := 3'b111 ^ 3'b011;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_ITER_52_50  :=  3'b000 ^ 3'b011;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_LOCKDET_ITER is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_PLL0_REG_PLL_LOCKDET_ITER);
    }

//initial config body1677 end


//initial config body1678 begin
    if (CP_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT == 0)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b000 ^ 3'b100;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT == 1)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b001 ^ 3'b100;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT == 2)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b010 ^ 3'b100;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT == 3)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b011 ^ 3'b100;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT == 4)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b100 ^ 3'b100;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT == 5)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b101 ^ 3'b100;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT == 6)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b110 ^ 3'b100;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT == 7)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b111 ^ 3'b100;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT_49_47  :=  3'b000 ^ 3'b100;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_PLL0_REG_PLL_LOCKDET_LOCKCT);
    }

//initial config body1678 end


//initial config body1679 begin
    if (CP_PMA_PLL0_REG_PLL_LOCKDET_FBCT == 0)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_FBCT_46_44   := 3'b000 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_FBCT == 1)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_FBCT_46_44   := 3'b001 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_FBCT == 2)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_FBCT_46_44   := 3'b010 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_FBCT == 3)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_FBCT_46_44   := 3'b011 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_FBCT == 4)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_FBCT_46_44   := 3'b100 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_FBCT == 5)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_FBCT_46_44   := 3'b101 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_FBCT == 6)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_FBCT_46_44   := 3'b110 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_FBCT == 7)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_FBCT_46_44   := 3'b111 ^ 3'b111;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_FBCT_46_44  :=  3'b000 ^ 3'b111;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_LOCKDET_FBCT is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_PLL0_REG_PLL_LOCKDET_FBCT);
    }

//initial config body1679 end


//initial config body1680 begin
    if (CP_PMA_PLL0_REG_PLL_LOCKDET_REFCT == 0)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_REFCT_43_41   := 3'b000 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_REFCT == 1)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_REFCT_43_41   := 3'b001 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_REFCT == 2)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_REFCT_43_41   := 3'b010 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_REFCT == 3)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_REFCT_43_41   := 3'b011 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_REFCT == 4)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_REFCT_43_41   := 3'b100 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_REFCT == 5)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_REFCT_43_41   := 3'b101 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_REFCT == 6)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_REFCT_43_41   := 3'b110 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_REFCT == 7)
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_REFCT_43_41   := 3'b111 ^ 3'b111;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_REFCT_43_41  :=  3'b000 ^ 3'b111;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_LOCKDET_REFCT is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_PLL0_REG_PLL_LOCKDET_REFCT);
    }

//initial config body1680 end


//initial config body1681 begin
    if (CP_PMA_PLL0_REG_NOFBCLK_STICKY_CLEAR == "FALSE")
    {
        SC_PMA_PLL0_REG_NOFBCLK_STICKY_CLEAR_40   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_NOFBCLK_STICKY_CLEAR == "TRUE")
    {
        SC_PMA_PLL0_REG_NOFBCLK_STICKY_CLEAR_40   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_NOFBCLK_STICKY_CLEAR_40  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_NOFBCLK_STICKY_CLEAR is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_NOFBCLK_STICKY_CLEAR);
    }

//initial config body1681 end


//initial config body1682 begin
    if (CP_PMA_PLL0_REG_PLL_UNLOCKED_STICKY_CLEAR == "FALSE")
    {
        SC_PMA_PLL0_REG_PLL_UNLOCKED_STICKY_CLEAR_39   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_UNLOCKED_STICKY_CLEAR == "TRUE")
    {
        SC_PMA_PLL0_REG_PLL_UNLOCKED_STICKY_CLEAR_39   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_UNLOCKED_STICKY_CLEAR_39  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_UNLOCKED_STICKY_CLEAR is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_PLL_UNLOCKED_STICKY_CLEAR);
    }

//initial config body1682 end


//initial config body1683 begin
    if (CP_PMA_PLL0_REG_PLL_LOCKED_STICKY_CLEAR == "FALSE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKED_STICKY_CLEAR_38   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKED_STICKY_CLEAR == "TRUE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKED_STICKY_CLEAR_38   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_LOCKED_STICKY_CLEAR_38  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_LOCKED_STICKY_CLEAR is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_PLL_LOCKED_STICKY_CLEAR);
    }

//initial config body1683 end


//initial config body1684 begin
    if (CP_PMA_PLL0_REG_PLL_LOCKED == "FALSE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKED_37   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKED == "TRUE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKED_37   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_LOCKED_37  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_LOCKED is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_PLL_LOCKED);
    }

//initial config body1684 end


//initial config body1685 begin
    if (CP_PMA_PLL0_REG_PLL_LOCKED_OW == "DISABLE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKED_OW_36   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKED_OW == "ENABLE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKED_OW_36   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_LOCKED_OW_36  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_LOCKED_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_PLL_LOCKED_OW);
    }

//initial config body1685 end


//initial config body1686 begin
    if (CP_PMA_PLL0_REG_PLL_LOCKDET_RESET_N == "FALSE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_35   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_RESET_N == "TRUE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_35   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_35  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_LOCKDET_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_PLL_LOCKDET_RESET_N);
    }

//initial config body1686 end


//initial config body1687 begin
    if (CP_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_OW == "DISABLE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_OW_34   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_OW == "ENABLE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_OW_34   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_OW_34  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_PLL_LOCKDET_RESET_N_OW);
    }

//initial config body1687 end


//initial config body1688 begin
    if (CP_PMA_PLL0_REG_PLL_LOCKDET_EN == "FALSE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_EN_33   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_EN == "TRUE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_EN_33   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_EN_33  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_LOCKDET_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL0_REG_PLL_LOCKDET_EN);
    }

//initial config body1688 end


//initial config body1689 begin
    if (CP_PMA_PLL0_REG_PLL_LOCKDET_EN_OW == "DISABLE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_EN_OW_32   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_LOCKDET_EN_OW == "ENABLE")
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_EN_OW_32   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_LOCKDET_EN_OW_32  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_LOCKDET_EN_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_PLL_LOCKDET_EN_OW);
    }

//initial config body1689 end


//initial config body1690 begin
    if (CP_PMA_PLL0_REG_JTAG_VHYSTSEL >= 0 && CP_PMA_PLL0_REG_JTAG_VHYSTSEL <= 7)
    {
        SC_PMA_PLL0_REG_JTAG_VHYSTSEL_31_29  :=  CP_PMA_PLL0_REG_JTAG_VHYSTSEL;
    }
    else
    {
        SC_PMA_PLL0_REG_JTAG_VHYSTSEL_31_29  :=  0;
        error("Setting Error : The CP_PMA_PLL0_REG_JTAG_VHYSTSEL is set to %d. Legal values is 0 to 7",CP_PMA_PLL0_REG_JTAG_VHYSTSEL);
    }

//initial config body1690 end


//initial config body1691 begin
    if (CP_PMA_PLL0_REG_JTAG_AC_MODE == "DISABLE")
    {
        SC_PMA_PLL0_REG_JTAG_AC_MODE_28   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_JTAG_AC_MODE == "ENABLE")
    {
        SC_PMA_PLL0_REG_JTAG_AC_MODE_28   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_JTAG_AC_MODE_28  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_JTAG_AC_MODE is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_JTAG_AC_MODE);
    }

//initial config body1691 end


//initial config body1692 begin
    if (CP_PMA_PLL0_REG_JTAG_OE == "DISABLE")
    {
        SC_PMA_PLL0_REG_JTAG_OE_27   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_JTAG_OE == "ENABLE")
    {
        SC_PMA_PLL0_REG_JTAG_OE_27   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_JTAG_OE_27  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_JTAG_OE is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_JTAG_OE);
    }

//initial config body1692 end


//initial config body1693 begin
    if (CP_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL == 0)
    {
        SC_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_26   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL == 1)
    {
        SC_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_26   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_26  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_RPLUS is set to %s. Legal values is 0,1",CP_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL);
    }

//initial config body1693 end


//initial config body1694 begin
    if (CP_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_OW == "DISABLE")
    {
        SC_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_OW_25   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_OW == "ENABLE")
    {
        SC_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_OW_25   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_OW_25  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_RESCAL_ONCHIP_SMALL_OW);
    }

//initial config body1694 end


//initial config body1695 begin
    if (CP_PMA_PLL0_REG_RESCAL_I_CODE >= 0 && CP_PMA_PLL0_REG_RESCAL_I_CODE <= 63)
    {
        SC_PMA_PLL0_REG_RESCAL_I_CODE_24_19   :=  to_unsigned( CP_PMA_PLL0_REG_RESCAL_I_CODE , 6) ^  6'b100000;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_I_CODE_24_19  :=  0 ^ 6'b100000;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_RESCAL_I_CODE is set to %d. Legal values is 0 to 63",CP_PMA_PLL0_REG_RESCAL_I_CODE);
    }

//initial config body1695 end


//initial config body1696 begin
    if (CP_PMA_PLL0_REG_BIAS_VCOREP_C >= 0 && CP_PMA_PLL0_REG_BIAS_VCOREP_C <= 3)
    {
        SC_PMA_PLL0_REG_BIAS_VCOREP_C_18_17   :=  to_unsigned( CP_PMA_PLL0_REG_BIAS_VCOREP_C , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_BIAS_VCOREP_C_18_17  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_BIAS_VCOREP_C is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_BIAS_VCOREP_C);
    }

//initial config body1696 end


//initial config body1697 begin
    if (CP_PMA_PLL0_REG_LDO_VREF_SEL >= 0 && CP_PMA_PLL0_REG_LDO_VREF_SEL <= 3)
    {
        SC_PMA_PLL0_REG_LDO_VREF_SEL_16_15   :=  to_unsigned( CP_PMA_PLL0_REG_LDO_VREF_SEL , 2) ^  2'b10;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_LDO_VREF_SEL_16_15  :=  0 ^ 2'b10;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_LDO_VREF_SEL is set to %d. Legal values is 0 to 3",CP_PMA_PLL0_REG_LDO_VREF_SEL);
    }

//initial config body1697 end


//initial config body1698 begin
    if (CP_PMA_PLL0_REG_RESCAL_CODE_OW == "DISABLE")
    {
        SC_PMA_PLL0_REG_RESCAL_CODE_OW_14   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_RESCAL_CODE_OW == "ENABLE")
    {
        SC_PMA_PLL0_REG_RESCAL_CODE_OW_14   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_CODE_OW_14  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_RESCAL_CODE_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_RESCAL_CODE_OW);
    }

//initial config body1698 end


//initial config body1699 begin
    if (CP_PMA_PLL0_REG_RESCAL_DONE == "FALSE")
    {
        SC_PMA_PLL0_REG_RESCAL_DONE_13   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_RESCAL_DONE == "TRUE")
    {
        SC_PMA_PLL0_REG_RESCAL_DONE_13   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_DONE_13  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_RESCAL_DONE is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_RESCAL_DONE);
    }

//initial config body1699 end


//initial config body1700 begin
    if (CP_PMA_PLL0_REG_RESCAL_DONE_OW == "DISABLE")
    {
        SC_PMA_PLL0_REG_RESCAL_DONE_OW_12   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_RESCAL_DONE_OW == "ENABLE")
    {
        SC_PMA_PLL0_REG_RESCAL_DONE_OW_12   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_DONE_OW_12  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_RESCAL_DONE_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_RESCAL_DONE_OW);
    }

//initial config body1700 end


//initial config body1701 begin
    if (CP_PMA_PLL0_REG_RESCAL_RESET_N == "FALSE")
    {
        SC_PMA_PLL0_REG_RESCAL_RESET_N_11   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_RESCAL_RESET_N == "TRUE")
    {
        SC_PMA_PLL0_REG_RESCAL_RESET_N_11   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_RESET_N_11  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_RESCAL_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_RESCAL_RESET_N);
    }

//initial config body1701 end


//initial config body1702 begin
    if (CP_PMA_PLL0_REG_RESCAL_RESET_N_OW == "DISABLE")
    {
        SC_PMA_PLL0_REG_RESCAL_RESET_N_OW_10   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_RESCAL_RESET_N_OW == "ENABLE")
    {
        SC_PMA_PLL0_REG_RESCAL_RESET_N_OW_10   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_RESET_N_OW_10  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_RESCAL_RESET_N_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_RESCAL_RESET_N_OW);
    }

//initial config body1702 end


//initial config body1703 begin
    if (CP_PMA_PLL0_REG_RESCAL_I_CODE_PMA == "DISABLE")
    {
        SC_PMA_PLL0_REG_RESCAL_I_CODE_PMA_9   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_RESCAL_I_CODE_PMA == "ENABLE")
    {
        SC_PMA_PLL0_REG_RESCAL_I_CODE_PMA_9   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_RESCAL_I_CODE_PMA_9  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_RESCAL_I_CODE_PMA is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_RESCAL_I_CODE_PMA);
    }

//initial config body1703 end


//initial config body1704 begin
    if (CP_PMA_PLL0_REG_LOCKDET_REPEAT == "DISABLE")
    {
        SC_PMA_PLL0_REG_LOCKDET_REPEAT_8   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_LOCKDET_REPEAT == "ENABLE")
    {
        SC_PMA_PLL0_REG_LOCKDET_REPEAT_8   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_LOCKDET_REPEAT_8  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_LOCKDET_REPEAT is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_LOCKDET_REPEAT);
    }

//initial config body1704 end


//initial config body1705 begin
    if (CP_PMA_PLL0_REG_LANE_SYNC == "FALSE")
    {
        SC_PMA_PLL0_REG_LANE_SYNC_7   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_LANE_SYNC == "TRUE")
    {
        SC_PMA_PLL0_REG_LANE_SYNC_7   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_LANE_SYNC_7  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_LANE_SYNC is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_LANE_SYNC);
    }

//initial config body1705 end


//initial config body1706 begin
    if (CP_PMA_PLL0_REG_LANE_SYNC_OW == "DISABLE")
    {
        SC_PMA_PLL0_REG_LANE_SYNC_OW_6   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_LANE_SYNC_OW == "ENABLE")
    {
        SC_PMA_PLL0_REG_LANE_SYNC_OW_6   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_LANE_SYNC_OW_6  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_LANE_SYNC_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_LANE_SYNC_OW);
    }

//initial config body1706 end


//initial config body1707 begin
    if (CP_PMA_PLL0_REG_PLL_READY == "FALSE")
    {
        SC_PMA_PLL0_REG_PLL_READY_5   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_READY == "TRUE")
    {
        SC_PMA_PLL0_REG_PLL_READY_5   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_READY_5  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_READY is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_PLL_READY);
    }

//initial config body1707 end


//initial config body1708 begin
    if (CP_PMA_PLL0_REG_PLL_READY_OW == "DISABLE")
    {
        SC_PMA_PLL0_REG_PLL_READY_OW_4   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_READY_OW == "ENABLE")
    {
        SC_PMA_PLL0_REG_PLL_READY_OW_4   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_READY_OW_4  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_READY_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_PLL_READY_OW);
    }

//initial config body1708 end


//initial config body1709 begin
    if (CP_PMA_PLL0_REG_PLL_RESET_N == "FALSE")
    {
        SC_PMA_PLL0_REG_PLL_RESET_N_3   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_PLL0_REG_PLL_RESET_N == "TRUE")
    {
        SC_PMA_PLL0_REG_PLL_RESET_N_3   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_RESET_N_3  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL0_REG_PLL_RESET_N);
    }

//initial config body1709 end


//initial config body1710 begin
    if (CP_PMA_PLL0_REG_PLL_RESET_N_OW == "DISABLE")
    {
        SC_PMA_PLL0_REG_PLL_RESET_N_OW_2   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_RESET_N_OW == "ENABLE")
    {
        SC_PMA_PLL0_REG_PLL_RESET_N_OW_2   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_RESET_N_OW_2  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_RESET_N_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_PLL_RESET_N_OW);
    }

//initial config body1710 end


//initial config body1711 begin
    if (CP_PMA_PLL0_REG_PLL_POWERDOWN == "ON")
    {
        SC_PMA_PLL0_REG_PLL_POWERDOWN_1   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_POWERDOWN == "OFF")
    {
        SC_PMA_PLL0_REG_PLL_POWERDOWN_1   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_POWERDOWN_1  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_POWERDOWN is set to %s. Legal values is ON,OFF",CP_PMA_PLL0_REG_PLL_POWERDOWN);
    }

//initial config body1711 end


//initial config body1712 begin
    if (CP_PMA_PLL0_REG_PLL_POWERDOWN_OW == "DISABLE")
    {
        SC_PMA_PLL0_REG_PLL_POWERDOWN_OW_0   := 1'b0;
    }
    else if (CP_PMA_PLL0_REG_PLL_POWERDOWN_OW == "ENABLE")
    {
        SC_PMA_PLL0_REG_PLL_POWERDOWN_OW_0   := 1'b1;
    }
    else
    {
        SC_PMA_PLL0_REG_PLL_POWERDOWN_OW_0  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL0_REG_PLL_POWERDOWN_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL0_REG_PLL_POWERDOWN_OW);
    }

//initial config body1712 end


//initial config body1713 begin
    if (CP_PARM_PLL1_RSTN == "FALSE")
    {
        SC_PLL1_RSTN_194   := 1'b0;
    }
    else if (CP_PARM_PLL1_RSTN == "TRUE")
    {
        SC_PLL1_RSTN_194   := 1'b1;
    }
    else
    {
        SC_PLL1_RSTN_194  :=  1'b0;
        error("Setting Error : The CP_PARM_PLL1_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PARM_PLL1_RSTN);
    }

//initial config body1713 end


//initial config body1714 begin
    if (CP_PARM_PLL1_POWERUP == "OFF")
    {
        SC_PLL1_POWERUP_193   := 1'b0;
    }
    else if (CP_PARM_PLL1_POWERUP == "ON")
    {
        SC_PLL1_POWERUP_193   := 1'b1;
    }
    else
    {
        SC_PLL1_POWERUP_193  :=  1'b0;
        error("Setting Error : The CP_PARM_PLL1_POWERUP is set to %s. Legal values is ON,OFF",CP_PARM_PLL1_POWERUP);
    }

//initial config body1714 end


//initial config body1715 begin
    if (CP_PMA_PLL1_REG_RESERVED_191_184 >= 0 && CP_PMA_PLL1_REG_RESERVED_191_184 <= 255)
    {
        SC_PMA_PLL1_REG_RESERVED_191_160[31:24]  :=  CP_PMA_PLL1_REG_RESERVED_191_184;
    }
    else
    {
        SC_PMA_PLL1_REG_RESERVED_191_160[31:24]  :=  0;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_RESERVED_191_184 is set to %d. Legal values is 0 to 255",CP_PMA_PLL1_REG_RESERVED_191_184);
    }

//initial config body1715 end


//initial config body1716 begin
    if (CP_PMA_PLL1_REG_RESERVED_183_176 >= 0 && CP_PMA_PLL1_REG_RESERVED_183_176 <= 255)
    {
        SC_PMA_PLL1_REG_RESERVED_191_160[23:16]  :=  CP_PMA_PLL1_REG_RESERVED_183_176;
    }
    else
    {
        SC_PMA_PLL1_REG_RESERVED_191_160[23:16]  :=  0;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_RESERVED_183_176 is set to %d. Legal values is 0 to 255",CP_PMA_PLL1_REG_RESERVED_183_176);
    }

//initial config body1716 end


//initial config body1717 begin
    if (CP_PMA_PLL1_REG_RESERVED_175_168 >= 0 && CP_PMA_PLL1_REG_RESERVED_175_168 <= 255)
    {
        SC_PMA_PLL1_REG_RESERVED_191_160[15:8]  :=  CP_PMA_PLL1_REG_RESERVED_175_168;
    }
    else
    {
        SC_PMA_PLL1_REG_RESERVED_191_160[15:8]  :=  0;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_RESERVED_175_168 is set to %d. Legal values is 0 to 255",CP_PMA_PLL1_REG_RESERVED_175_168);
    }

//initial config body1717 end


//initial config body1718 begin
    if (CP_PMA_PLL1_REG_RESERVED_167_160 >= 0 && CP_PMA_PLL1_REG_RESERVED_167_160 <= 255)
    {
        SC_PMA_PLL1_REG_RESERVED_191_160[7:0]  :=  CP_PMA_PLL1_REG_RESERVED_167_160;
    }
    else
    {
        SC_PMA_PLL1_REG_RESERVED_191_160[7:0]  :=  0;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_RESERVED_167_160 is set to %d. Legal values is 0 to 255",CP_PMA_PLL1_REG_RESERVED_167_160);
    }

//initial config body1718 end


//initial config body1719 begin
    if (CP_PMA_PLL1_REG_I_CTRL_MIN >= 0 && CP_PMA_PLL1_REG_I_CTRL_MIN <= 63)
    {
        SC_PMA_PLL1_REG_I_CTRL_MIN_159_154   :=  to_unsigned( CP_PMA_PLL1_REG_I_CTRL_MIN , 6) ^  6'b010011;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_I_CTRL_MIN_159_154  :=  0 ^ 6'b010011;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_I_CTRL_MIN is set to %d. Legal values is 0 to 63",CP_PMA_PLL1_REG_I_CTRL_MIN);
    }

//initial config body1719 end


//initial config body1720 begin
    if (CP_PMA_PLL1_REG_I_CTRL_MAX >= 0 && CP_PMA_PLL1_REG_I_CTRL_MAX <= 63)
    {
        SC_PMA_PLL1_REG_I_CTRL_MAX_153_148   :=  to_unsigned( CP_PMA_PLL1_REG_I_CTRL_MAX , 6) ^  6'b101101;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_I_CTRL_MAX_153_148  :=  0 ^ 6'b101101;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_I_CTRL_MAX is set to %d. Legal values is 0 to 63",CP_PMA_PLL1_REG_I_CTRL_MAX);
    }

//initial config body1720 end


//initial config body1721 begin
    if (CP_PMA_PLL1_REG_RESCAL_WAIT_SEL == 0)
    {
        SC_PMA_PLL1_REG_RESCAL_WAIT_SEL_147   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_RESCAL_WAIT_SEL == 1)
    {
        SC_PMA_PLL1_REG_RESCAL_WAIT_SEL_147   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_WAIT_SEL_147  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_RESCAL_WAIT_SEL is set to %s. Legal values is 0,1",CP_PMA_PLL1_REG_RESCAL_WAIT_SEL);
    }

//initial config body1721 end


//initial config body1722 begin
    if (CP_PMA_PLL1_REG_RESCAL_ITER_VALID_SEL >= 0 && CP_PMA_PLL1_REG_RESCAL_ITER_VALID_SEL <= 3)
    {
        SC_PMA_PLL1_REG_RESCAL_ITER_VALID_SEL_146_145  :=  CP_PMA_PLL1_REG_RESCAL_ITER_VALID_SEL;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_ITER_VALID_SEL_146_145  :=  0;
        error("Setting Error : The CP_PMA_PLL1_REG_RESCAL_ITER_VALID_SEL is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_RESCAL_ITER_VALID_SEL);
    }

//initial config body1722 end


//initial config body1723 begin
    if (CP_PMA_PLL1_REG_RESCAL_I_CODE_OW == 0)
    {
        SC_PMA_PLL1_REG_RESCAL_I_CODE_OW_144   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_RESCAL_I_CODE_OW == 1)
    {
        SC_PMA_PLL1_REG_RESCAL_I_CODE_OW_144   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_I_CODE_OW_144  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_RESCAL_I_CODE_OW is set to %s. Legal values is 0,1",CP_PMA_PLL1_REG_RESCAL_I_CODE_OW);
    }

//initial config body1723 end


//initial config body1724 begin
    if (CP_PMA_PLL1_REG_RESCAL_I_CODE_VAL >= 0 && CP_PMA_PLL1_REG_RESCAL_I_CODE_VAL <= 63)
    {
        SC_PMA_PLL1_REG_RESCAL_I_CODE_VAL_143_138  :=  CP_PMA_PLL1_REG_RESCAL_I_CODE_VAL;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_I_CODE_VAL_143_138  :=  0;
        error("Setting Error : The CP_PMA_PLL1_REG_RESCAL_I_CODE_VAL is set to %d. Legal values is 0 to 63",CP_PMA_PLL1_REG_RESCAL_I_CODE_VAL);
    }

//initial config body1724 end


//initial config body1725 begin
    if (CP_PMA_PLL1_REG_RESCAL_EN == "FALSE")
    {
        SC_PMA_PLL1_REG_RESCAL_EN_137   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_RESCAL_EN == "TRUE")
    {
        SC_PMA_PLL1_REG_RESCAL_EN_137   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_EN_137  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_RESCAL_EN is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_RESCAL_EN);
    }

//initial config body1725 end


//initial config body1726 begin
    if (CP_PMA_PLL1_REG_PLL_CLKBUF_PD_RIGHT == "ON")
    {
        SC_PMA_PLL1_REG_PLL_CLKBUF_PD_RIGHT_136   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_CLKBUF_PD_RIGHT == "OFF")
    {
        SC_PMA_PLL1_REG_PLL_CLKBUF_PD_RIGHT_136   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_CLKBUF_PD_RIGHT_136  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_CLKBUF_PD_RIGHT is set to %s. Legal values is ON,OFF",CP_PMA_PLL1_REG_PLL_CLKBUF_PD_RIGHT);
    }

//initial config body1726 end


//initial config body1727 begin
    if (CP_PMA_PLL1_REG_PLL_CLKBUF_PD_LEFT == "ON")
    {
        SC_PMA_PLL1_REG_PLL_CLKBUF_PD_LEFT_135   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_CLKBUF_PD_LEFT == "OFF")
    {
        SC_PMA_PLL1_REG_PLL_CLKBUF_PD_LEFT_135   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_CLKBUF_PD_LEFT_135  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_CLKBUF_PD_LEFT is set to %s. Legal values is ON,OFF",CP_PMA_PLL1_REG_PLL_CLKBUF_PD_LEFT);
    }

//initial config body1727 end


//initial config body1728 begin
    if (CP_PMA_PLL1_REG_PLL_LOCKDET_MODE == "FALSE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_MODE_134   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_MODE == "TRUE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_MODE_134   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_MODE_134  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_LOCKDET_MODE is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_PLL_LOCKDET_MODE);
    }

//initial config body1728 end


//initial config body1729 begin
    if (CP_PMA_PLL1_REG_PLL_UNLOCKED == "FALSE")
    {
        SC_PMA_PLL1_REG_PLL_UNLOCKED_133   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_UNLOCKED == "TRUE")
    {
        SC_PMA_PLL1_REG_PLL_UNLOCKED_133   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_UNLOCKED_133  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_UNLOCKED is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_PLL_UNLOCKED);
    }

//initial config body1729 end


//initial config body1730 begin
    if (CP_PMA_PLL1_REG_PLL_UNLOCKED_OW == "DISABLE")
    {
        SC_PMA_PLL1_REG_PLL_UNLOCKED_OW_132   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_UNLOCKED_OW == "ENABLE")
    {
        SC_PMA_PLL1_REG_PLL_UNLOCKED_OW_132   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_UNLOCKED_OW_132  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_UNLOCKED_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_PLL_UNLOCKED_OW);
    }

//initial config body1730 end


//initial config body1731 begin
    if (CP_PMA_PLL1_REG_RESCAL_R_CODE_SIGN == "FALSE")
    {
        SC_PMA_PLL1_REG_RESCAL_R_CODE_SIGN_131   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_RESCAL_R_CODE_SIGN == "TRUE")
    {
        SC_PMA_PLL1_REG_RESCAL_R_CODE_SIGN_131   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_R_CODE_SIGN_131  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_RESCAL_R_CODE_SIGN is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_RESCAL_R_CODE_SIGN);
    }

//initial config body1731 end


//initial config body1732 begin
    if (CP_PMA_PLL1_REG_REFCLK_SEL == "FALSE")
    {
        SC_PMA_PLL1_REG_REFCLK_SEL_130   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_REFCLK_SEL == "TRUE")
    {
        SC_PMA_PLL1_REG_REFCLK_SEL_130   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_REFCLK_SEL_130  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_REFCLK_SEL is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_REFCLK_SEL);
    }

//initial config body1732 end


//initial config body1733 begin
    if (CP_PMA_PLL1_REG_PLL_REFCLK_CML_SEL >= 0 && CP_PMA_PLL1_REG_PLL_REFCLK_CML_SEL <= 3)
    {
        SC_PMA_PLL1_REG_PLL_REFCLK_CML_SEL_129_128  :=  CP_PMA_PLL1_REG_PLL_REFCLK_CML_SEL;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_REFCLK_CML_SEL_129_128  :=  0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_REFCLK_CML_SEL is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_PLL_REFCLK_CML_SEL);
    }

//initial config body1733 end


//initial config body1734 begin
    if (CP_PMA_PLL1_REG_CLKBUFS4_C >= 0 && CP_PMA_PLL1_REG_CLKBUFS4_C <= 3)
    {
        SC_PMA_PLL1_REG_CLKBUFS4_C_127_126   :=  to_unsigned( CP_PMA_PLL1_REG_CLKBUFS4_C , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_CLKBUFS4_C_127_126  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_CLKBUFS4_C is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_CLKBUFS4_C);
    }

//initial config body1734 end


//initial config body1735 begin
    if (CP_PMA_PLL1_REG_CLKBUFS3_C >= 0 && CP_PMA_PLL1_REG_CLKBUFS3_C <= 7)
    {
        SC_PMA_PLL1_REG_CLKBUFS3_C_125_123   :=  to_unsigned( CP_PMA_PLL1_REG_CLKBUFS3_C , 3) ^  3'b110;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_CLKBUFS3_C_125_123  :=  0 ^ 3'b110;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_CLKBUFS3_C is set to %d. Legal values is 0 to 7",CP_PMA_PLL1_REG_CLKBUFS3_C);
    }

//initial config body1735 end


//initial config body1736 begin
    if (CP_PMA_PLL1_REG_CLKBUFS2_C >= 0 && CP_PMA_PLL1_REG_CLKBUFS2_C <= 7)
    {
        SC_PMA_PLL1_REG_CLKBUFS2_C_122_120   :=  to_unsigned( CP_PMA_PLL1_REG_CLKBUFS2_C , 3) ^  3'b110;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_CLKBUFS2_C_122_120  :=  0 ^ 3'b110;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_CLKBUFS2_C is set to %d. Legal values is 0 to 7",CP_PMA_PLL1_REG_CLKBUFS2_C);
    }

//initial config body1736 end


//initial config body1737 begin
    if (CP_PMA_PLL1_REG_CLKBUFS1_C >= 0 && CP_PMA_PLL1_REG_CLKBUFS1_C <= 3)
    {
        SC_PMA_PLL1_REG_CLKBUFS1_C_119_118   :=  to_unsigned( CP_PMA_PLL1_REG_CLKBUFS1_C , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_CLKBUFS1_C_119_118  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_CLKBUFS1_C is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_CLKBUFS1_C);
    }

//initial config body1737 end


//initial config body1738 begin
    if (CP_PMA_PLL1_REG_BIAS_REFBUF_C >= 0 && CP_PMA_PLL1_REG_BIAS_REFBUF_C <= 3)
    {
        SC_PMA_PLL1_REG_BIAS_REFBUF_C_117_116   :=  to_unsigned( CP_PMA_PLL1_REG_BIAS_REFBUF_C , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_BIAS_REFBUF_C_117_116  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_BIAS_REFBUF_C is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_BIAS_REFBUF_C);
    }

//initial config body1738 end


//initial config body1739 begin
    if (CP_PMA_PLL1_REG_BIAS_VCRST_C >= 0 && CP_PMA_PLL1_REG_BIAS_VCRST_C <= 3)
    {
        SC_PMA_PLL1_REG_BIAS_VCRST_C_115_114   :=  to_unsigned( CP_PMA_PLL1_REG_BIAS_VCRST_C , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_BIAS_VCRST_C_115_114  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_BIAS_VCRST_C is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_BIAS_VCRST_C);
    }

//initial config body1739 end


//initial config body1740 begin
    if (CP_PMA_PLL1_REG_BIAS_REFD2S_C >= 0 && CP_PMA_PLL1_REG_BIAS_REFD2S_C <= 3)
    {
        SC_PMA_PLL1_REG_BIAS_REFD2S_C_113_112   :=  to_unsigned( CP_PMA_PLL1_REG_BIAS_REFD2S_C , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_BIAS_REFD2S_C_113_112  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_BIAS_REFD2S_C is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_BIAS_REFD2S_C);
    }

//initial config body1740 end


//initial config body1741 begin
    if (CP_PMA_PLL1_REG_BIAS_D2S >= 0 && CP_PMA_PLL1_REG_BIAS_D2S <= 3)
    {
        SC_PMA_PLL1_REG_BIAS_D2S_111_110   :=  to_unsigned( CP_PMA_PLL1_REG_BIAS_D2S , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_BIAS_D2S_111_110  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_BIAS_D2S is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_BIAS_D2S);
    }

//initial config body1741 end


//initial config body1742 begin
    if (CP_PMA_PLL1_REG_LANE_SYNC_EN_OW == "DISABLE")
    {
        SC_PMA_PLL1_REG_BIAS_CLKBUFS4_109_108[1]  :=  1'b0;
    }
    else if (CP_PMA_PLL1_REG_LANE_SYNC_EN_OW == "ENABLE")
    {
        SC_PMA_PLL1_REG_BIAS_CLKBUFS4_109_108[1]  :=  1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_BIAS_CLKBUFS4_109_108[1]  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_LANE_SYNC_EN_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_LANE_SYNC_EN_OW);
    }

//initial config body1742 end


//initial config body1743 begin
    if (CP_PMA_PLL1_REG_LANE_SYNC_EN == "FALSE")
    {
        SC_PMA_PLL1_REG_BIAS_CLKBUFS4_109_108[0]  :=  1'b0;
    }
    else if (CP_PMA_PLL1_REG_LANE_SYNC_EN == "TRUE")
    {
        SC_PMA_PLL1_REG_BIAS_CLKBUFS4_109_108[0]  :=  1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_BIAS_CLKBUFS4_109_108[0]  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_LANE_SYNC_EN is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_LANE_SYNC_EN);
    }

//initial config body1743 end


//initial config body1744 begin
    if (CP_PMA_PLL1_REG_BIAS_CLKBUFS3 >= 0 && CP_PMA_PLL1_REG_BIAS_CLKBUFS3 <= 3)
    {
        SC_PMA_PLL1_REG_BIAS_CLKBUFS3_107_106   :=  to_unsigned( CP_PMA_PLL1_REG_BIAS_CLKBUFS3 , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_BIAS_CLKBUFS3_107_106  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_BIAS_CLKBUFS3 is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_BIAS_CLKBUFS3);
    }

//initial config body1744 end


//initial config body1745 begin
    if (CP_PMA_PLL1_REG_TXPCLK_SEL >= 0 && CP_PMA_PLL1_REG_TXPCLK_SEL <= 3)
    {
        SC_PMA_PLL1_REG_BIAS_CLKBUFS2_105_104  :=  CP_PMA_PLL1_REG_TXPCLK_SEL;
    }
    else
    {
        SC_PMA_PLL1_REG_BIAS_CLKBUFS2_105_104  :=  0;
        error("Setting Error : The CP_PMA_PLL1_REG_TXPCLK_SEL is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_TXPCLK_SEL);
    }

//initial config body1745 end


//initial config body1746 begin
    if (CP_PMA_PLL1_REG_BIAS_CLKBUFS1 >= 0 && CP_PMA_PLL1_REG_BIAS_CLKBUFS1 <= 3)
    {
        SC_PMA_PLL1_REG_BIAS_CLKBUFS1_103_102   :=  to_unsigned( CP_PMA_PLL1_REG_BIAS_CLKBUFS1 , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_BIAS_CLKBUFS1_103_102  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_BIAS_CLKBUFS1 is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_BIAS_CLKBUFS1);
    }

//initial config body1746 end


//initial config body1747 begin
    if (CP_PMA_PLL1_REG_BIAS_LANE_SYNC == 0)
    {
        SC_PMA_PLL1_REG_BIAS_LANE_SYNC_101_100   := 2'b00 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_BIAS_LANE_SYNC == 1)
    {
        SC_PMA_PLL1_REG_BIAS_LANE_SYNC_101_100   := 2'b01 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_BIAS_LANE_SYNC == 2)
    {
        SC_PMA_PLL1_REG_BIAS_LANE_SYNC_101_100   := 2'b10 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_BIAS_LANE_SYNC == 3)
    {
        SC_PMA_PLL1_REG_BIAS_LANE_SYNC_101_100   := 2'b11 ^ 2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_BIAS_LANE_SYNC_101_100  :=  2'b00 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_BIAS_LANE_SYNC is set to %s. Legal values is 0,1,2,3",CP_PMA_PLL1_REG_BIAS_LANE_SYNC);
    }

//initial config body1747 end


//initial config body1748 begin
    if (CP_PMA_PLL1_REG_BIAS_QP >= 0 && CP_PMA_PLL1_REG_BIAS_QP <= 3)
    {
        SC_PMA_PLL1_REG_BIAS_QP_99_98   :=  to_unsigned( CP_PMA_PLL1_REG_BIAS_QP , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_BIAS_QP_99_98  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_BIAS_QP is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_BIAS_QP);
    }

//initial config body1748 end


//initial config body1749 begin
    if (CP_PMA_PLL1_REG_ICTRL_PLL >= 0 && CP_PMA_PLL1_REG_ICTRL_PLL <= 3)
    {
        SC_PMA_PLL1_REG_ICTRL_PLL_97_96   :=  to_unsigned( CP_PMA_PLL1_REG_ICTRL_PLL , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_ICTRL_PLL_97_96  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_ICTRL_PLL is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_ICTRL_PLL);
    }

//initial config body1749 end


//initial config body1750 begin
    if (CP_PMA_PLL1_REG_PD_BIAS == "ON")
    {
        SC_PMA_PLL1_REG_PD_BIAS_95   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PD_BIAS == "OFF")
    {
        SC_PMA_PLL1_REG_PD_BIAS_95   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PD_BIAS_95  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PD_BIAS is set to %s. Legal values is ON,OFF",CP_PMA_PLL1_REG_PD_BIAS);
    }

//initial config body1750 end


//initial config body1751 begin
    if (CP_PMA_PLL1_REG_LPF_TR_C >= 0 && CP_PMA_PLL1_REG_LPF_TR_C <= 15)
    {
        SC_PMA_PLL1_REG_LPF_TR_C_94_91  :=  CP_PMA_PLL1_REG_LPF_TR_C;
    }
    else
    {
        SC_PMA_PLL1_REG_LPF_TR_C_94_91  :=  0;
        error("Setting Error : The CP_PMA_PLL1_REG_LPF_TR_C is set to %d. Legal values is 0 to 15",CP_PMA_PLL1_REG_LPF_TR_C);
    }

//initial config body1751 end


//initial config body1752 begin
    if (CP_PMA_PLL1_REG_LPF_R_C >= 0 && CP_PMA_PLL1_REG_LPF_R_C <= 15)
    {
        SC_PMA_PLL1_REG_LPF_R_C_90_87   :=  to_unsigned( CP_PMA_PLL1_REG_LPF_R_C , 4) ^  4'b0001;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_LPF_R_C_90_87  :=  0 ^ 4'b0001;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_LPF_R_C is set to %d. Legal values is 0 to 15",CP_PMA_PLL1_REG_LPF_R_C);
    }

//initial config body1752 end


//initial config body1753 begin
    if (CP_PMA_PLL1_REG_VCRESET_C_RING >= 0 && CP_PMA_PLL1_REG_VCRESET_C_RING <= 31)
    {
        SC_PMA_PLL1_REG_VCRESET_C_RING_86_82   :=  to_unsigned( CP_PMA_PLL1_REG_VCRESET_C_RING , 5) ^  5'b00100;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_VCRESET_C_RING_86_82  :=  0 ^ 5'b00100;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_VCRESET_C_RING is set to %d. Legal values is 0 to 31",CP_PMA_PLL1_REG_VCRESET_C_RING);
    }

//initial config body1753 end


//initial config body1754 begin
    if (CP_PMA_PLL1_REG_VC_FORCE_EN == "FALSE")
    {
        SC_PMA_PLL1_REG_VC_FORCE_EN_81   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_VC_FORCE_EN == "TRUE")
    {
        SC_PMA_PLL1_REG_VC_FORCE_EN_81   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_VC_FORCE_EN_81  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_VC_FORCE_EN is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_VC_FORCE_EN);
    }

//initial config body1754 end


//initial config body1755 begin
    if (CP_PMA_PLL1_REG_QPCURRENT >= 0 && CP_PMA_PLL1_REG_QPCURRENT <= 15)
    {
        SC_PMA_PLL1_REG_QPCURRENT_80_77   :=  to_unsigned( CP_PMA_PLL1_REG_QPCURRENT , 4) ^  4'b0100;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_QPCURRENT_80_77  :=  0 ^ 4'b0100;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_QPCURRENT is set to %d. Legal values is 0 to 15",CP_PMA_PLL1_REG_QPCURRENT);
    }

//initial config body1755 end


//initial config body1756 begin
    if (CP_PMA_PLL1_REG_RESET_N_PFDQP == "FALSE")
    {
        SC_PMA_PLL1_REG_RESET_N_PFDQP_76   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_RESET_N_PFDQP == "TRUE")
    {
        SC_PMA_PLL1_REG_RESET_N_PFDQP_76   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_RESET_N_PFDQP_76  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_RESET_N_PFDQP is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_RESET_N_PFDQP);
    }

//initial config body1756 end


//initial config body1757 begin
    if (CP_PMA_PLL1_REG_RESET_N_PFDQP_OW == "DISABLE")
    {
        SC_PMA_PLL1_REG_RESET_N_PFDQP_OW_75   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_RESET_N_PFDQP_OW == "ENABLE")
    {
        SC_PMA_PLL1_REG_RESET_N_PFDQP_OW_75   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_RESET_N_PFDQP_OW_75  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_RESET_N_PFDQP_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_RESET_N_PFDQP_OW);
    }

//initial config body1757 end


//initial config body1758 begin
    if (CP_PMA_PLL1_REG_FBDIVB == 0)
    {
        SC_PMA_PLL1_REG_FBDIVB_74_73   := 2'b00 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_FBDIVB == 1)
    {
        SC_PMA_PLL1_REG_FBDIVB_74_73   := 2'b01 ^ 2'b01;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_FBDIVB == 2)
    {
        SC_PMA_PLL1_REG_FBDIVB_74_73   := 2'b10 ^ 2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_FBDIVB_74_73  :=  2'b00 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_FBDIVB is set to %s. Legal values is 0,1,2",CP_PMA_PLL1_REG_FBDIVB);
    }

//initial config body1758 end


//initial config body1759 begin
    if (CP_PMA_PLL1_REG_FBDIVA_5_EN == "FALSE")
    {
        SC_PMA_PLL1_REG_FBDIVA_5_EN_72   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_FBDIVA_5_EN == "TRUE")
    {
        SC_PMA_PLL1_REG_FBDIVA_5_EN_72   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_FBDIVA_5_EN_72  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_FBDIVA_5_EN is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_FBDIVA_5_EN);
    }

//initial config body1759 end


//initial config body1760 begin
    if (CP_PMA_PLL1_REG_REFCLK_TERM_VCM_EN == "FALSE")
    {
        SC_PMA_PLL1_REG_REFCLK_TERM_VCM_EN_71   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_REFCLK_TERM_VCM_EN == "TRUE")
    {
        SC_PMA_PLL1_REG_REFCLK_TERM_VCM_EN_71   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_REFCLK_TERM_VCM_EN_71  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_REFCLK_TERM_VCM_EN is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_REFCLK_TERM_VCM_EN);
    }

//initial config body1760 end


//initial config body1761 begin
    if (CP_PMA_PLL1_REG_PD_BGR == "ON")
    {
        SC_PMA_PLL1_REG_PD_BGR_70   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PD_BGR == "OFF")
    {
        SC_PMA_PLL1_REG_PD_BGR_70   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PD_BGR_70  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PD_BGR is set to %s. Legal values is ON,OFF",CP_PMA_PLL1_REG_PD_BGR);
    }

//initial config body1761 end


//initial config body1762 begin
    if (CP_PMA_PLL1_REG_BGR_STARTUP == "FALSE")
    {
        SC_PMA_PLL1_REG_BGR_STARTUP_69   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_BGR_STARTUP == "TRUE")
    {
        SC_PMA_PLL1_REG_BGR_STARTUP_69   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_BGR_STARTUP_69  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_BGR_STARTUP is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_BGR_STARTUP);
    }

//initial config body1762 end


//initial config body1763 begin
    if (CP_PMA_PLL1_REG_BGR_STARTUP_EN == "FALSE")
    {
        SC_PMA_PLL1_REG_BGR_STARTUP_EN_68   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_BGR_STARTUP_EN == "TRUE")
    {
        SC_PMA_PLL1_REG_BGR_STARTUP_EN_68   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_BGR_STARTUP_EN_68  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_BGR_STARTUP_EN is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_BGR_STARTUP_EN);
    }

//initial config body1763 end


//initial config body1764 begin
    if (CP_PMA_PLL1_REG_REFCLK_OUT_PD == "ON")
    {
        SC_PMA_PLL1_REG_REFCLK_OUT_PD_67   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_REFCLK_OUT_PD == "OFF")
    {
        SC_PMA_PLL1_REG_REFCLK_OUT_PD_67   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_REFCLK_OUT_PD_67  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_REFCLK_OUT_PD is set to %s. Legal values is ON,OFF",CP_PMA_PLL1_REG_REFCLK_OUT_PD);
    }

//initial config body1764 end


//initial config body1765 begin
    if (CP_PMA_PLL1_REG_TEST_FSM == 0)
    {
        SC_PMA_PLL1_REG_TEST_FSM_66_65   := 2'b00;
    }
    else if (CP_PMA_PLL1_REG_TEST_FSM == 1)
    {
        SC_PMA_PLL1_REG_TEST_FSM_66_65   := 2'b01;
    }
    else if (CP_PMA_PLL1_REG_TEST_FSM == 2)
    {
        SC_PMA_PLL1_REG_TEST_FSM_66_65   := 2'b10;
    }
    else if (CP_PMA_PLL1_REG_TEST_FSM == 3)
    {
        SC_PMA_PLL1_REG_TEST_FSM_66_65   := 2'b11;
    }
    else
    {
        SC_PMA_PLL1_REG_TEST_FSM_66_65  :=  2'b00;
        error("Setting Error : The CP_PMA_PLL1_REG_TEST_FSM is set to %s. Legal values is 0,1,2,3",CP_PMA_PLL1_REG_TEST_FSM);
    }

//initial config body1765 end


//initial config body1766 begin
    if (CP_PMA_PLL1_REG_TEST_SIG_HALF_EN == "FALSE")
    {
        SC_PMA_PLL1_REG_TEST_SIG_HALF_EN_64   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_TEST_SIG_HALF_EN == "TRUE")
    {
        SC_PMA_PLL1_REG_TEST_SIG_HALF_EN_64   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_TEST_SIG_HALF_EN_64  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_TEST_SIG_HALF_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL1_REG_TEST_SIG_HALF_EN);
    }

//initial config body1766 end


//initial config body1767 begin
    if (CP_PMA_PLL1_REG_TEST_V_EN == "FALSE")
    {
        SC_PMA_PLL1_REG_TEST_V_EN_63   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_TEST_V_EN == "TRUE")
    {
        SC_PMA_PLL1_REG_TEST_V_EN_63   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_TEST_V_EN_63  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_TEST_V_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL1_REG_TEST_V_EN);
    }

//initial config body1767 end


//initial config body1768 begin
    if (CP_PMA_PLL1_REG_TEST_SEL == 0)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b00000;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 1)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b00001;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 2)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b00010;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 3)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b00011;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 4)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b00100;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 5)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b00101;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 6)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b00110;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 7)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b00111;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 8)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b01000;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 9)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b01001;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 10)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b01010;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 11)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b01011;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 12)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b01100;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 13)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b01101;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 14)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b01110;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 15)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b01111;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 16)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b10000;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 17)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b10001;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 18)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b10010;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 19)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b10011;
    }
    else if (CP_PMA_PLL1_REG_TEST_SEL == 20)
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58   := 5'b10100;
    }
    else
    {
        SC_PMA_PLL1_REG_TEST_SEL_62_58  :=  5'b00000;
        error("Setting Error : The CP_PMA_PLL1_REG_TEST_SEL is set to %s. Legal values is 0 to 20",CP_PMA_PLL1_REG_TEST_SEL);
    }

//initial config body1768 end


//initial config body1769 begin
    if (CP_PMA_PLL1_REG_REFCLK_TEST_EN == "FALSE")
    {
        SC_PMA_PLL1_REG_REFCLK_TEST_EN_57   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_REFCLK_TEST_EN == "TRUE")
    {
        SC_PMA_PLL1_REG_REFCLK_TEST_EN_57   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_REFCLK_TEST_EN_57  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_REFCLK_TEST_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL1_REG_REFCLK_TEST_EN);
    }

//initial config body1769 end


//initial config body1770 begin
    if (CP_PMA_PLL1_REG_FBCLK_TEST_EN == "FALSE")
    {
        SC_PMA_PLL1_REG_FBCLK_TEST_EN_56   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_FBCLK_TEST_EN == "TRUE")
    {
        SC_PMA_PLL1_REG_FBCLK_TEST_EN_56   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_FBCLK_TEST_EN_56  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_FBCLK_TEST_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL1_REG_FBCLK_TEST_EN);
    }

//initial config body1770 end


//initial config body1771 begin
    if (CP_PMA_PLL1_REG_PD_VCO == "ON")
    {
        SC_PMA_PLL1_REG_PD_VCO_55   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PD_VCO == "OFF")
    {
        SC_PMA_PLL1_REG_PD_VCO_55   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PD_VCO_55  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PD_VCO is set to %s. Legal values is ON,OFF",CP_PMA_PLL1_REG_PD_VCO);
    }

//initial config body1771 end


//initial config body1772 begin
    if (CP_PMA_PLL1_REG_PLL_UNLOCKDET_ITER == 0)
    {
        SC_PMA_PLL1_REG_PLL_UNLOCKDET_ITER_54_53   := 2'b00 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_UNLOCKDET_ITER == 1)
    {
        SC_PMA_PLL1_REG_PLL_UNLOCKDET_ITER_54_53   := 2'b01 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_UNLOCKDET_ITER == 2)
    {
        SC_PMA_PLL1_REG_PLL_UNLOCKDET_ITER_54_53   := 2'b10 ^ 2'b10;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_UNLOCKDET_ITER == 3)
    {
        SC_PMA_PLL1_REG_PLL_UNLOCKDET_ITER_54_53   := 2'b11 ^ 2'b10;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_UNLOCKDET_ITER_54_53  :=  2'b00 ^ 2'b10;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_UNLOCKDET_ITER is set to %s. Legal values is 0,1,2,3",CP_PMA_PLL1_REG_PLL_UNLOCKDET_ITER);
    }

//initial config body1772 end


//initial config body1773 begin
    if (CP_PMA_PLL1_REG_PLL_LOCKDET_ITER == 0)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_ITER_52_50   := 3'b000 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_ITER == 1)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_ITER_52_50   := 3'b001 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_ITER == 2)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_ITER_52_50   := 3'b010 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_ITER == 3)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_ITER_52_50   := 3'b011 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_ITER == 4)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_ITER_52_50   := 3'b100 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_ITER == 5)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_ITER_52_50   := 3'b101 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_ITER == 6)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_ITER_52_50   := 3'b110 ^ 3'b011;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_ITER == 7)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_ITER_52_50   := 3'b111 ^ 3'b011;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_ITER_52_50  :=  3'b000 ^ 3'b011;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_LOCKDET_ITER is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_PLL1_REG_PLL_LOCKDET_ITER);
    }

//initial config body1773 end


//initial config body1774 begin
    if (CP_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT == 0)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b000 ^ 3'b100;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT == 1)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b001 ^ 3'b100;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT == 2)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b010 ^ 3'b100;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT == 3)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b011 ^ 3'b100;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT == 4)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b100 ^ 3'b100;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT == 5)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b101 ^ 3'b100;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT == 6)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b110 ^ 3'b100;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT == 7)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT_49_47   := 3'b111 ^ 3'b100;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT_49_47  :=  3'b000 ^ 3'b100;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_PLL1_REG_PLL_LOCKDET_LOCKCT);
    }

//initial config body1774 end


//initial config body1775 begin
    if (CP_PMA_PLL1_REG_PLL_LOCKDET_FBCT == 0)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_FBCT_46_44   := 3'b000 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_FBCT == 1)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_FBCT_46_44   := 3'b001 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_FBCT == 2)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_FBCT_46_44   := 3'b010 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_FBCT == 3)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_FBCT_46_44   := 3'b011 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_FBCT == 4)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_FBCT_46_44   := 3'b100 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_FBCT == 5)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_FBCT_46_44   := 3'b101 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_FBCT == 6)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_FBCT_46_44   := 3'b110 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_FBCT == 7)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_FBCT_46_44   := 3'b111 ^ 3'b111;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_FBCT_46_44  :=  3'b000 ^ 3'b111;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_LOCKDET_FBCT is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_PLL1_REG_PLL_LOCKDET_FBCT);
    }

//initial config body1775 end


//initial config body1776 begin
    if (CP_PMA_PLL1_REG_PLL_LOCKDET_REFCT == 0)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_REFCT_43_41   := 3'b000 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_REFCT == 1)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_REFCT_43_41   := 3'b001 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_REFCT == 2)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_REFCT_43_41   := 3'b010 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_REFCT == 3)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_REFCT_43_41   := 3'b011 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_REFCT == 4)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_REFCT_43_41   := 3'b100 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_REFCT == 5)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_REFCT_43_41   := 3'b101 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_REFCT == 6)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_REFCT_43_41   := 3'b110 ^ 3'b111;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_REFCT == 7)
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_REFCT_43_41   := 3'b111 ^ 3'b111;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_REFCT_43_41  :=  3'b000 ^ 3'b111;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_LOCKDET_REFCT is set to %s. Legal values is 0,1,2,3,4,5,6,7",CP_PMA_PLL1_REG_PLL_LOCKDET_REFCT);
    }

//initial config body1776 end


//initial config body1777 begin
    if (CP_PMA_PLL1_REG_NOFBCLK_STICKY_CLEAR == "FALSE")
    {
        SC_PMA_PLL1_REG_NOFBCLK_STICKY_CLEAR_40   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_NOFBCLK_STICKY_CLEAR == "TRUE")
    {
        SC_PMA_PLL1_REG_NOFBCLK_STICKY_CLEAR_40   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_NOFBCLK_STICKY_CLEAR_40  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_NOFBCLK_STICKY_CLEAR is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_NOFBCLK_STICKY_CLEAR);
    }

//initial config body1777 end


//initial config body1778 begin
    if (CP_PMA_PLL1_REG_PLL_UNLOCKED_STICKY_CLEAR == "FALSE")
    {
        SC_PMA_PLL1_REG_PLL_UNLOCKED_STICKY_CLEAR_39   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_UNLOCKED_STICKY_CLEAR == "TRUE")
    {
        SC_PMA_PLL1_REG_PLL_UNLOCKED_STICKY_CLEAR_39   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_UNLOCKED_STICKY_CLEAR_39  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_UNLOCKED_STICKY_CLEAR is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_PLL_UNLOCKED_STICKY_CLEAR);
    }

//initial config body1778 end


//initial config body1779 begin
    if (CP_PMA_PLL1_REG_PLL_LOCKED_STICKY_CLEAR == "FALSE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKED_STICKY_CLEAR_38   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKED_STICKY_CLEAR == "TRUE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKED_STICKY_CLEAR_38   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_LOCKED_STICKY_CLEAR_38  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_LOCKED_STICKY_CLEAR is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_PLL_LOCKED_STICKY_CLEAR);
    }

//initial config body1779 end


//initial config body1780 begin
    if (CP_PMA_PLL1_REG_PLL_LOCKED == "FALSE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKED_37   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKED == "TRUE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKED_37   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_LOCKED_37  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_LOCKED is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_PLL_LOCKED);
    }

//initial config body1780 end


//initial config body1781 begin
    if (CP_PMA_PLL1_REG_PLL_LOCKED_OW == "DISABLE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKED_OW_36   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKED_OW == "ENABLE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKED_OW_36   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_LOCKED_OW_36  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_LOCKED_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_PLL_LOCKED_OW);
    }

//initial config body1781 end


//initial config body1782 begin
    if (CP_PMA_PLL1_REG_PLL_LOCKDET_RESET_N == "FALSE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_35   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_RESET_N == "TRUE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_35   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_35  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_LOCKDET_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_PLL_LOCKDET_RESET_N);
    }

//initial config body1782 end


//initial config body1783 begin
    if (CP_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_OW == "DISABLE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_OW_34   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_OW == "ENABLE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_OW_34   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_OW_34  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_PLL_LOCKDET_RESET_N_OW);
    }

//initial config body1783 end


//initial config body1784 begin
    if (CP_PMA_PLL1_REG_PLL_LOCKDET_EN == "FALSE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_EN_33   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_EN == "TRUE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_EN_33   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_EN_33  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_LOCKDET_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL1_REG_PLL_LOCKDET_EN);
    }

//initial config body1784 end


//initial config body1785 begin
    if (CP_PMA_PLL1_REG_PLL_LOCKDET_EN_OW == "DISABLE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_EN_OW_32   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_LOCKDET_EN_OW == "ENABLE")
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_EN_OW_32   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_LOCKDET_EN_OW_32  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_LOCKDET_EN_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_PLL_LOCKDET_EN_OW);
    }

//initial config body1785 end


//initial config body1786 begin
    if (CP_PMA_PLL1_REG_JTAG_VHYSTSEL >= 0 && CP_PMA_PLL1_REG_JTAG_VHYSTSEL <= 7)
    {
        SC_PMA_PLL1_REG_JTAG_VHYSTSEL_31_29  :=  CP_PMA_PLL1_REG_JTAG_VHYSTSEL;
    }
    else
    {
        SC_PMA_PLL1_REG_JTAG_VHYSTSEL_31_29  :=  0;
        error("Setting Error : The CP_PMA_PLL1_REG_JTAG_VHYSTSEL is set to %d. Legal values is 0 to 7",CP_PMA_PLL1_REG_JTAG_VHYSTSEL);
    }

//initial config body1786 end


//initial config body1787 begin
    if (CP_PMA_PLL1_REG_JTAG_AC_MODE == "DISABLE")
    {
        SC_PMA_PLL1_REG_JTAG_AC_MODE_28   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_JTAG_AC_MODE == "ENABLE")
    {
        SC_PMA_PLL1_REG_JTAG_AC_MODE_28   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_JTAG_AC_MODE_28  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_JTAG_AC_MODE is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_JTAG_AC_MODE);
    }

//initial config body1787 end


//initial config body1788 begin
    if (CP_PMA_PLL1_REG_JTAG_OE == "DISABLE")
    {
        SC_PMA_PLL1_REG_JTAG_OE_27   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_JTAG_OE == "ENABLE")
    {
        SC_PMA_PLL1_REG_JTAG_OE_27   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_JTAG_OE_27  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_JTAG_OE is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_JTAG_OE);
    }

//initial config body1788 end


//initial config body1789 begin
    if (CP_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL == 0)
    {
        SC_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_26   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL == 1)
    {
        SC_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_26   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_26  :=  1'b0;
        error("Setting Error : The CP_PMA_CH0_RPLUS is set to %s. Legal values is 0,1",CP_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL);
    }

//initial config body1789 end


//initial config body1790 begin
    if (CP_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_OW == "DISABLE")
    {
        SC_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_OW_25   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_OW == "ENABLE")
    {
        SC_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_OW_25   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_OW_25  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_RESCAL_ONCHIP_SMALL_OW);
    }

//initial config body1790 end


//initial config body1791 begin
    if (CP_PMA_PLL1_REG_RESCAL_I_CODE >= 0 && CP_PMA_PLL1_REG_RESCAL_I_CODE <= 63)
    {
        SC_PMA_PLL1_REG_RESCAL_I_CODE_24_19   :=  to_unsigned( CP_PMA_PLL1_REG_RESCAL_I_CODE , 6) ^  6'b100000;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_I_CODE_24_19  :=  0 ^ 6'b100000;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_RESCAL_I_CODE is set to %d. Legal values is 0 to 63",CP_PMA_PLL1_REG_RESCAL_I_CODE);
    }

//initial config body1791 end


//initial config body1792 begin
    if (CP_PMA_PLL1_REG_BIAS_VCOREP_C >= 0 && CP_PMA_PLL1_REG_BIAS_VCOREP_C <= 3)
    {
        SC_PMA_PLL1_REG_BIAS_VCOREP_C_18_17   :=  to_unsigned( CP_PMA_PLL1_REG_BIAS_VCOREP_C , 2) ^  2'b01;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_BIAS_VCOREP_C_18_17  :=  0 ^ 2'b01;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_BIAS_VCOREP_C is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_BIAS_VCOREP_C);
    }

//initial config body1792 end


//initial config body1793 begin
    if (CP_PMA_PLL1_REG_LDO_VREF_SEL >= 0 && CP_PMA_PLL1_REG_LDO_VREF_SEL <= 3)
    {
        SC_PMA_PLL1_REG_LDO_VREF_SEL_16_15   :=  to_unsigned( CP_PMA_PLL1_REG_LDO_VREF_SEL , 2) ^  2'b10;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_LDO_VREF_SEL_16_15  :=  0 ^ 2'b10;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_LDO_VREF_SEL is set to %d. Legal values is 0 to 3",CP_PMA_PLL1_REG_LDO_VREF_SEL);
    }

//initial config body1793 end


//initial config body1794 begin
    if (CP_PMA_PLL1_REG_RESCAL_CODE_OW == "DISABLE")
    {
        SC_PMA_PLL1_REG_RESCAL_CODE_OW_14   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_RESCAL_CODE_OW == "ENABLE")
    {
        SC_PMA_PLL1_REG_RESCAL_CODE_OW_14   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_CODE_OW_14  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_RESCAL_CODE_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_RESCAL_CODE_OW);
    }

//initial config body1794 end


//initial config body1795 begin
    if (CP_PMA_PLL1_REG_RESCAL_DONE == "FALSE")
    {
        SC_PMA_PLL1_REG_RESCAL_DONE_13   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_RESCAL_DONE == "TRUE")
    {
        SC_PMA_PLL1_REG_RESCAL_DONE_13   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_DONE_13  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_RESCAL_DONE is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_RESCAL_DONE);
    }

//initial config body1795 end


//initial config body1796 begin
    if (CP_PMA_PLL1_REG_RESCAL_DONE_OW == "DISABLE")
    {
        SC_PMA_PLL1_REG_RESCAL_DONE_OW_12   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_RESCAL_DONE_OW == "ENABLE")
    {
        SC_PMA_PLL1_REG_RESCAL_DONE_OW_12   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_DONE_OW_12  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_RESCAL_DONE_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_RESCAL_DONE_OW);
    }

//initial config body1796 end


//initial config body1797 begin
    if (CP_PMA_PLL1_REG_RESCAL_RESET_N == "FALSE")
    {
        SC_PMA_PLL1_REG_RESCAL_RESET_N_11   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_RESCAL_RESET_N == "TRUE")
    {
        SC_PMA_PLL1_REG_RESCAL_RESET_N_11   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_RESET_N_11  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_RESCAL_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_RESCAL_RESET_N);
    }

//initial config body1797 end


//initial config body1798 begin
    if (CP_PMA_PLL1_REG_RESCAL_RESET_N_OW == "DISABLE")
    {
        SC_PMA_PLL1_REG_RESCAL_RESET_N_OW_10   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_RESCAL_RESET_N_OW == "ENABLE")
    {
        SC_PMA_PLL1_REG_RESCAL_RESET_N_OW_10   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_RESET_N_OW_10  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_RESCAL_RESET_N_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_RESCAL_RESET_N_OW);
    }

//initial config body1798 end


//initial config body1799 begin
    if (CP_PMA_PLL1_REG_RESCAL_I_CODE_PMA == "DISABLE")
    {
        SC_PMA_PLL1_REG_RESCAL_I_CODE_PMA_9   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_RESCAL_I_CODE_PMA == "ENABLE")
    {
        SC_PMA_PLL1_REG_RESCAL_I_CODE_PMA_9   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_RESCAL_I_CODE_PMA_9  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_RESCAL_I_CODE_PMA is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_RESCAL_I_CODE_PMA);
    }

//initial config body1799 end


//initial config body1800 begin
    if (CP_PMA_PLL1_REG_LOCKDET_REPEAT == "DISABLE")
    {
        SC_PMA_PLL1_REG_LOCKDET_REPEAT_8   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_LOCKDET_REPEAT == "ENABLE")
    {
        SC_PMA_PLL1_REG_LOCKDET_REPEAT_8   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_LOCKDET_REPEAT_8  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_LOCKDET_REPEAT is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_LOCKDET_REPEAT);
    }

//initial config body1800 end


//initial config body1801 begin
    if (CP_PMA_PLL1_REG_LANE_SYNC == "FALSE")
    {
        SC_PMA_PLL1_REG_LANE_SYNC_7   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_LANE_SYNC == "TRUE")
    {
        SC_PMA_PLL1_REG_LANE_SYNC_7   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_LANE_SYNC_7  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_LANE_SYNC is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_LANE_SYNC);
    }

//initial config body1801 end


//initial config body1802 begin
    if (CP_PMA_PLL1_REG_LANE_SYNC_OW == "DISABLE")
    {
        SC_PMA_PLL1_REG_LANE_SYNC_OW_6   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_LANE_SYNC_OW == "ENABLE")
    {
        SC_PMA_PLL1_REG_LANE_SYNC_OW_6   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_LANE_SYNC_OW_6  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_LANE_SYNC_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_LANE_SYNC_OW);
    }

//initial config body1802 end


//initial config body1803 begin
    if (CP_PMA_PLL1_REG_PLL_READY == "FALSE")
    {
        SC_PMA_PLL1_REG_PLL_READY_5   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_READY == "TRUE")
    {
        SC_PMA_PLL1_REG_PLL_READY_5   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_READY_5  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_READY is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_PLL_READY);
    }

//initial config body1803 end


//initial config body1804 begin
    if (CP_PMA_PLL1_REG_PLL_READY_OW == "DISABLE")
    {
        SC_PMA_PLL1_REG_PLL_READY_OW_4   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_READY_OW == "ENABLE")
    {
        SC_PMA_PLL1_REG_PLL_READY_OW_4   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_READY_OW_4  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_READY_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_PLL_READY_OW);
    }

//initial config body1804 end


//initial config body1805 begin
    if (CP_PMA_PLL1_REG_PLL_RESET_N == "FALSE")
    {
        SC_PMA_PLL1_REG_PLL_RESET_N_3   := 1'b0 ^ 1'b1;
        //reversed;
    }
    else if (CP_PMA_PLL1_REG_PLL_RESET_N == "TRUE")
    {
        SC_PMA_PLL1_REG_PLL_RESET_N_3   := 1'b1 ^ 1'b1;
        //reversed;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_RESET_N_3  :=  1'b0 ^ 1'b1;
        //reversed
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_RESET_N is set to %s. Legal values is TRUE,FALSE",CP_PMA_PLL1_REG_PLL_RESET_N);
    }

//initial config body1805 end


//initial config body1806 begin
    if (CP_PMA_PLL1_REG_PLL_RESET_N_OW == "DISABLE")
    {
        SC_PMA_PLL1_REG_PLL_RESET_N_OW_2   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_RESET_N_OW == "ENABLE")
    {
        SC_PMA_PLL1_REG_PLL_RESET_N_OW_2   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_RESET_N_OW_2  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_RESET_N_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_PLL_RESET_N_OW);
    }

//initial config body1806 end


//initial config body1807 begin
    if (CP_PMA_PLL1_REG_PLL_POWERDOWN == "ON")
    {
        SC_PMA_PLL1_REG_PLL_POWERDOWN_1   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_POWERDOWN == "OFF")
    {
        SC_PMA_PLL1_REG_PLL_POWERDOWN_1   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_POWERDOWN_1  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_POWERDOWN is set to %s. Legal values is ON,OFF",CP_PMA_PLL1_REG_PLL_POWERDOWN);
    }

//initial config body1807 end


//initial config body1808 begin
    if (CP_PMA_PLL1_REG_PLL_POWERDOWN_OW == "DISABLE")
    {
        SC_PMA_PLL1_REG_PLL_POWERDOWN_OW_0   := 1'b0;
    }
    else if (CP_PMA_PLL1_REG_PLL_POWERDOWN_OW == "ENABLE")
    {
        SC_PMA_PLL1_REG_PLL_POWERDOWN_OW_0   := 1'b1;
    }
    else
    {
        SC_PMA_PLL1_REG_PLL_POWERDOWN_OW_0  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL1_REG_PLL_POWERDOWN_OW is set to %s. Legal values is ENABLE,DISABLE",CP_PMA_PLL1_REG_PLL_POWERDOWN_OW);
    }

//initial config body1808 end


//initial config body1809 begin
    if (CP_PARM_GRSN_DIS == "FALSE")
    {
        SC_GRSN_DIS   := 1'b0;
    }
    else if (CP_PARM_GRSN_DIS == "TRUE")
    {
        SC_GRSN_DIS   := 1'b1;
    }
    else
    {
        SC_GRSN_DIS  :=  1'b0;
        error("Setting Error : The CP_PARM_GRSN_DIS is set to %s. Legal values is TRUE,FALSE",CP_PARM_GRSN_DIS);
    }

//initial config body1809 end


//initial config body1810 begin
    if (CP_PARM_CFG_RSTN == "FALSE")
    {
        SC_CFG_RSTN   := 1'b0;
    }
    else if (CP_PARM_CFG_RSTN == "TRUE")
    {
        SC_CFG_RSTN   := 1'b1;
    }
    else
    {
        SC_CFG_RSTN  :=  1'b0;
        error("Setting Error : The CP_PARM_CFG_RSTN is set to %s. Legal values is TRUE,FALSE",CP_PARM_CFG_RSTN);
    }

//initial config body1810 end

};

//grid device configure body end

