tarted
grid
device IOCKDLYMUX
{
    // grid_property_def_start
    // grid_property_def_end

    parameter
    (
        config string CP_DLLSTEP_SEL = "SEL_STEP0",
        config string CP_CLKIN_SEL = "SEL_NODLY"
    );
    port
    (
// configuration_body_def_on


    config input SC_DLLSTEP_SEL = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DLLSTEP_SEL" */,

    config input SC_CLKIN_SEL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CLKIN_SEL[1],SC_CLKIN_SEL[0]" */,

// configuration_body_def_end

        input DLL_INDLY_STEP0[7:0] = 8'b1111_1111,
        input DLL_INDLY_STEP1[7:0] = 8'b1111_1111,
        input CLK_IN = 1'b1,
        input CLK_IN_DLY = 1'b1,
        input CLK_CRYSTAL = 1'b1,
        output DLL_STEP[7:0],
        output CLK_OUT
    );
};
//grid device end

//grid device structure netlist started

structure netlist of IOCKDLYMUX
{
    routing
    {
        ( CLK_CRYSTAL --> CLK_OUT ) = 150;
        ( CLK_IN --> CLK_OUT ) = 150;
        ( CLK_IN_DLY --> CLK_OUT ) = 150;
        ( DLL_INDLY_STEP0[0] --> DLL_STEP[0] ) = 150;
        ( DLL_INDLY_STEP0[1] --> DLL_STEP[1] ) = 150;
        ( DLL_INDLY_STEP0[2] --> DLL_STEP[2] ) = 150;
        ( DLL_INDLY_STEP0[3] --> DLL_STEP[3] ) = 150;
        ( DLL_INDLY_STEP0[4] --> DLL_STEP[4] ) = 150;
        ( DLL_INDLY_STEP0[5] --> DLL_STEP[5] ) = 150;
        ( DLL_INDLY_STEP0[6] --> DLL_STEP[6] ) = 150;
        ( DLL_INDLY_STEP0[7] --> DLL_STEP[7] ) = 150;
        ( DLL_INDLY_STEP1[0] --> DLL_STEP[0] ) = 150;
        ( DLL_INDLY_STEP1[1] --> DLL_STEP[1] ) = 150;
        ( DLL_INDLY_STEP1[2] --> DLL_STEP[2] ) = 150;
        ( DLL_INDLY_STEP1[3] --> DLL_STEP[3] ) = 150;
        ( DLL_INDLY_STEP1[4] --> DLL_STEP[4] ) = 150;
        ( DLL_INDLY_STEP1[5] --> DLL_STEP[5] ) = 150;
        ( DLL_INDLY_STEP1[6] --> DLL_STEP[6] ) = 150;
        ( DLL_INDLY_STEP1[7] --> DLL_STEP[7] ) = 150;

    }
};
//grid device structure netlist end
//grid device configure body started

configuration cfg of IOCKDLYMUX
{
    if ( DLL_INDLY_STEP1[0] --> DLL_STEP[0] )
    {
        SC_DLLSTEP_SEL := 1'b1;
    }

    if ( DLL_INDLY_STEP0[0] --> DLL_STEP[0] )
    {
        SC_DLLSTEP_SEL := 1'b0;
    }

    if ( DLL_INDLY_STEP1[1] --> DLL_STEP[1] )
    {
        SC_DLLSTEP_SEL := 1'b1;
    }

    if ( DLL_INDLY_STEP0[1] --> DLL_STEP[1] )
    {
        SC_DLLSTEP_SEL := 1'b0;
    }

    if ( DLL_INDLY_STEP1[2] --> DLL_STEP[2] )
    {
        SC_DLLSTEP_SEL := 1'b1;
    }

    if ( DLL_INDLY_STEP0[2] --> DLL_STEP[2] )
    {
        SC_DLLSTEP_SEL := 1'b0;
    }

    if ( DLL_INDLY_STEP1[3] --> DLL_STEP[3] )
    {
        SC_DLLSTEP_SEL := 1'b1;
    }

    if ( DLL_INDLY_STEP0[3] --> DLL_STEP[3] )
    {
        SC_DLLSTEP_SEL := 1'b0;
    }

    if ( DLL_INDLY_STEP1[4] --> DLL_STEP[4] )
    {
        SC_DLLSTEP_SEL := 1'b1;
    }

    if ( DLL_INDLY_STEP0[4] --> DLL_STEP[4] )
    {
        SC_DLLSTEP_SEL := 1'b0;
    }

    if ( DLL_INDLY_STEP1[5] --> DLL_STEP[5] )
    {
        SC_DLLSTEP_SEL := 1'b1;
    }

    if ( DLL_INDLY_STEP0[5] --> DLL_STEP[5] )
    {
        SC_DLLSTEP_SEL := 1'b0;
    }

    if ( DLL_INDLY_STEP1[6] --> DLL_STEP[6] )
    {
        SC_DLLSTEP_SEL := 1'b1;
    }

    if ( DLL_INDLY_STEP0[6] --> DLL_STEP[6] )
    {
        SC_DLLSTEP_SEL := 1'b0;
    }

    if ( DLL_INDLY_STEP1[7] --> DLL_STEP[7] )
    {
        SC_DLLSTEP_SEL := 1'b1;
    }

    if ( DLL_INDLY_STEP0[7] --> DLL_STEP[7] )
    {
        SC_DLLSTEP_SEL := 1'b0;
    }

    if ( CLK_IN --> CLK_OUT )
    {
        SC_CLKIN_SEL := 2'b00;
    }

    if ( CLK_IN_DLY --> CLK_OUT )
    {
        SC_CLKIN_SEL := 2'b01;
    }

    if ( CLK_CRYSTAL --> CLK_OUT )
    {
        SC_CLKIN_SEL := 2'b10;
    }

};

//grid device configure body end

