*****************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_srb_tile of PGL50H
{
    // Tile index variable
    unsigned int tx, ty;
    
    foreach tx ( L_SRB_TILES_X )
    {
        foreach ty ( L_SRB_TILES_Y )
        {
            if(!(tx==BLSR_TILE_X_L || tx==BLSR_TILE_X_R))
            {
                if(!((tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X) && (ty>=HSST_TILE_U_L_Y && ty<HSST_TILE_U_R_Y)))
                {
                    if(!((tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X) && (ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y)))
                    {

                        place_srb_tile ( tx, ty);

                    }

                }
            } 
        }    
    }

};//end of structure arch_nl layout_srb_tile of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_clm_tile of PGL50H
{
    // Tile index variable
    unsigned int tx, ty;
        
    foreach tx ( L_CLMA_TILES_X )
    {
        foreach ty ( L_CLM_TILES_Y )
        {
            if(!(tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X && ty>=HSST_TILE_U_L_Y - 1))
            {
                if(!(tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X && ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y))
                {
                    place_clma_tile( tx, ty );
                }
            }
        }
    }
    foreach tx ( L_CLMS_TILES_X )
    {
        foreach ty ( L_CLM_TILES_Y )
        {
            if(!(tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X && ty>=HSST_TILE_U_L_Y - 1))
            {
                if(!(tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X && ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y))
                {
                    if(!(tx==PLL_TILE_X))
                    {
                        place_clms_tile( tx, ty );
                    }
                }
            }
        }
    }

    foreach ty ( L_CLM_TILES_PLL_Y )
    {
        place_clms_tile ( PLL_TILE_X, ty);                            
    }

}; // end of structure arch_nl layout_clm_tile of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_drm_tile of PGL50H
{
    unsigned int tx,ty;
    
    foreach tx ( L_DRM_TILES_X )
    {
        foreach ty ( L_DRM_TILES_Y )
        {
            if(!(tx==BLSR_TILE_X_L || tx==BLSR_TILE_X_R))
            {
                if(!(tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X && ty>=HSST_TILE_U_L_Y - 1) )
                {
                    if(!((tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X) && (ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y)))
                    {
                        place_drm_tile ( tx, ty);

                    }
                }
            }
        }
    } 
    
};  // end of structure arch_nl layout_drm_tile of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_apm_tile of PGL50H
{
    unsigned int tx,ty;
    
    foreach tx ( L_APM_TILES_X )
    {
        foreach ty ( L_APM_TILES_Y )
        {
            if(!(tx==BLSR_TILE_X_L || tx==BLSR_TILE_X_R))
            {
                if(!(tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X && ty>=HSST_TILE_U_L_Y - 1))
                {
                    if(!((tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X) && (ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y)))
                    {

                        place_apm_tile ( tx, ty);

                    }
                }
            }
        }
    } 
    
};  // end of structure arch_nl layout_apm_tile of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_wlsr_tiles of PGL50H
{
    unsigned int tx,ty;
    
    foreach ty ( L_WLSR_TILES_Y )
    {
        foreach tx ( L_WLSR_TILES_X )
        {
            place_wlsr_tile( tx, ty);
        }  
        foreach tx ( L_WLSR1_TILES_X )
        {
            place_wlsr1_tile( tx, ty);
        } 
        foreach tx ( L_WLSR1B_TILES_X )
        {
            place_wlsr1_100h_tile( tx, ty);
        }
        foreach tx ( L_APM_TILES_X )
        {
            place_wlsra_tile( tx,ty);
        }
        foreach tx ( L_DRM_TILES_X )
        {
            place_wlsrd_tile( tx, ty);
        }
        foreach tx ( {PLL_TILE_X} )
        {
            place_wlsr2_tile( tx, ty);
        }
    }    
};  // end of structure arch_nl layout_wlsr_tiles of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_iol_lr_tiles of PGL50H
{
    unsigned int tx,ty,ty_tmp,rx;
    
    foreach tx ( {IOL_TILE_X_L,IOL_TILE_X_R} )
    {
        int ty_iol[] = (tx==IOL_TILE_X_L) ? L_IOL_TILES_Y_L : L_IOL_TILES_Y_R ;

        foreach ty ( ty_iol )
        {
            place_iol_tile( tx, ty);
        }  
        foreach ty ( L_DQSL_TILES_Y )
        {
            int flag_ccs = (ty==7&&tx==IOL_TILE_X_R) ? 1 : 0 ;

            place_dqsl_tile( tx, ty, flag_ccs);
        }
        
        int ty_cramsl2[] = (tx==IOL_TILE_X_L) ? L_CRAMSL2_TILES_Y_L : L_CRAMSL2_TILES_Y_R ;

        foreach ty ( ty_cramsl2 )
        {
            place_cramsl2_tile( tx, ty);
        } 
        foreach ty ( L_RLYBUFS5_TILES_Y )
        {
            place_rlybufs7_tile( tx, ty);
        } 

        foreach ty ( L_IOCKGATEDLL_TILES_Y )
        {
            place_iockgatedll_100h_tile( tx, ty);
        } 
    }
    
};  // end of structure arch_nl layout_iol_lr_tile of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_analog_tile of PGL50H
{
     
    place_analog_tile( ANALOG_TILE_X, ANALOG_TILE_Y,93);
       
};//end of structure arch_nl layout_cram0826_tiles of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_ccs_tile of PGL50H
{
        
    place_ccs_tile(CCS_TILE_X,CCS_TILE_Y,93);

}; // end of structure arch_nl layout_ccs_tile of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_pll_tile of PGL50H
{
    unsigned int tx,ty,ty_tmp,rx,flag_t;
    
    unsigned int L_PLL_B_TILES_Y[] = {PLL0_TILE_Y};
    unsigned int L_PLL_T_TILES_Y[] = {PLL1_TILE_Y};

    foreach rx(L_REGIONS)
    {
        foreach ty_tmp ( {PLL0_TILE_Y,PLL1_TILE_Y} )
        {
            ty = ty_tmp + rx * NUM_TILES_REGION;
    
            flag_t = (ty_tmp==PLL1_TILE_Y) ? 1 : 0 ;

            if(ty<=NUM_TILE_HALF_Y + 2 * NUM_TILES_REGION)
            { 
                place_pll_tile( PLL_TILE_X, ty, flag_t);
            }
        }  
    }
};  // end of structure arch_nl layout_pll_tile of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_uscm_tile of PGL50H
{
    unsigned int tx,ty;
    
    unsigned int L_USCM_TILES_X[] = {USCM_TILE_LOC_X};
    unsigned int L_USCM_TILES_Y[] = {USCM0_TILE_LOC_Y, USCM1_TILE_LOC_Y};
    int tx_srb = USCM_TILE_X;

    foreach tx ( L_USCM_TILES_X )
    {
        foreach ty ( L_USCM_TILES_Y )
        {
            int ty_srb = (ty < NUM_TILES_REGION * 1) ? USCM0_TILE_Y : USCM1_TILE_Y;
            place_uscm_tile( tx, ty, tx_srb, ty_srb);
        }      
    } 
    
};  // end of structure arch_nl layout_uscm_tile of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_iol_ud_tiles of PGL50H
{
    unsigned int tx,ty;
    
    foreach ty ( {IOL_TILE_Y_U} )
    {
        foreach tx ( L_IOL_TILES_X_U )
        {
            place_iol_tile_ud( tx, ty, 1);
        }  
    }
    foreach ty ( {IOL_TILE_Y_U} )
    {
        foreach tx ( L_CRAMSL7206_TILES_X_U )
        {
            place_cramsl7206_tile( tx, ty);
        }  
    }
    foreach ty ( {IOL_TILE_Y_D} )
    {
        foreach tx ( L_IOL_TILES_X_D )
        {
            place_iol_tile_ud( tx, ty, 0);
        }  
    }
    foreach ty ( {IOL_TILE_Y_D} )
    {
        foreach tx ( L_CRAMSL7206_TILES_X_D )
        {
            place_cramsl7206_tile( tx, ty);
        }  
    }

    foreach ty ( L_IOCKDLL_TILES_LOC_Y )
    {

         int ty_iockdll = (ty < PLL0_TILE_Y) ? IOL_TILE_Y_D : IOL_TILE_Y_U ;

        foreach tx( L_BLSR_TILES_X )
        {
            
            int tx_iockdll = (tx < PLL_TILE_X && ty < USCM0_TILE_Y) ? IOCKDLL_TILE_X_D_L : 
                             (tx < PLL_TILE_X && ty > USCM0_TILE_Y) ? IOCKDLL_TILE_X_U_L : 
                             (tx > PLL_TILE_X && ty < USCM0_TILE_Y) ? IOCKDLL_TILE_X_D_R :  IOCKDLL_TILE_X_U_R ;

            place_iockdll_tile( tx, ty, tx_iockdll, ty_iockdll);
        }

    }
    
};  // end of structure arch_nl layout_iol_ud_tile of PGL50H

/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_blsr_tiles of PGL50H
{
    unsigned int tx,ty,rx;
   
    foreach rx(L_REGIONS)
    {
        foreach tx ( L_BLSR_TILES_X )
        {
            if(tx>PLL_TILE_X&&rx==0)
            {
                place_blsr2_tile( tx, rx);
            }
            else
            {
                place_blsr1_tile( tx, rx);
            }
        } 
    }
    
};  // end of structure arch_nl layout_blsr_tiles of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_clkmux_tile of PGL50H
{
    int ty ;

    foreach ty(L_CLKMUX_TILES_Y)
    {
        place_clkmux_tile(PLL_TILE_X , ty);
    }
       
};//end of structure arch_nl layout_clkmux_tiles of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_rlybufs_tiles of PGL50H
{
    int tx ;

    int ty = RLYBUFS_TILE_Y;
          
    foreach tx(L_RLYBUFS_TILES_X)
    {
        place_rlybufs_tile( tx, ty);
    }
}
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_hsst_tile of PGL50H
{
    int ty , flag_ud , ty_dr ;

    ty_dr = HSST_TILE_U_R_Y ;

    foreach ty({HSST_TILE_U_L_Y})
    {

        flag_ud = (ty > USCM0_TILE_Y) ? 1 : 0 ;

        place_hsst_tile(HSST_TILE_U_L_X, ty ,ty_dr, flag_ud);
    }
       
};//end of structure arch_nl layout_hsst_tiles of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_pcie_tile of PGL50H
{
    place_pcie_tile(PCIE_TILE_L_X,PCIE_TILE_L_Y,PCIE_TILE_R_X);

};//end of structure arch_nl layout_pcie_tiles of PGL50H

///*******************************************************************************
//********************************************************************************/
//library work;
//use pgl_defs, pgl50h_defs;
//use pgl_funcs_place_100h;
//
//structure arch_nl layout_blank_srb of PGL50H
//{
//
//    int tx,ty ;
//
//    foreach ty({RLYBUFS5_TILE_Y})
//    {
//        foreach tx({IOL_TILE_X_L,IOL_TILE_X_R})
//        {
//            connect_blank_srb(tx,ty);
//        }
//    }     
//
//    connect_blank_srb( IOL_TILE_X_R,IOL_TILE_Y_U);
//       
//};//end of structure arch_nl layout_blank_srb of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl50h_funcs_place;

structure arch_nl layout_esd_tiles of PGL50H
{
    unsigned int tx,ty;
    foreach ty( {ESD_TILE_Y} )
    {
        foreach tx ( {ESD_TILE_X} )
        {
           place_esd_tile( tx, ty);
        }
    }
}
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl50h_funcs_place;

structure arch_nl layout_idcode_tile of PGL50H
{
     
    place_idcode_tile( IDCODE_TILE_X, IDCODE_TILE_Y);
       
};//end of structure arch_nl layout_idcode_tiles of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl50h_funcs_place;

structure arch_nl layout_iob_tile of PGL50H
{
    place_iob0_tile(IOB0_TILE_X, IOB0_TILE_Y);
    place_iob1_tile(IOB1_TILE_X, IOB1_TILE_Y );
    place_iob2_tile(IOB2_TILE_X, IOB2_TILE_Y );
    place_iob3_tile(IOB3_TILE_X, IOB3_TILE_Y );
   
};//end of structure arch_nl layout_iob_tiles of PGL50H
///*******************************************************************************
//********************************************************************************/
//library work;
//use pgl_defs, pgl50h_defs;
//use pgl_funcs_place_100h;
//
//structure arch_nl layout_srbpciedrv_tile of PGL50H
//{
//    int ty ;   
//
//    int y_beg = PCIE_TILE_L_Y ;
//    int y_end = PCIE_TILE_R_Y-1 ;
// 
//    foreach ty({[y_end:y_beg]})
//    { 
//        place_srbpciedrv_tile( PCIE_TILE_L_X + 5,ty );
//    }   
//};//end of structure arch_nl layout_srbpciedrv_tiles of PGL50H
/*******************************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl50h_defs;
use pgl_funcs_place_100h;

structure arch_nl layout_piomux_tile of PGL50H
{
    int tx, ty ;   

    foreach ty(L_PIOMUX_TILES_Y)
    { 
        place_piomux_tile( PLL_TILE_X,ty );
    }   
};//end of structure arch_nl layout_piomux_tiles of PGL50H
