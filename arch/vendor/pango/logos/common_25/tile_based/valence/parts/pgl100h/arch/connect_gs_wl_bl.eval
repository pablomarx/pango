*************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl100h_defs,pgl_funcs_connect_gs_wl;

structure arch_nl connect_blsr_output of PGL100H
{

// blsr signals by one to multi horizon ; bus_wlsr

    unsigned int rx,tx;
    string blsr;
    int tx_wlsr1_l = WLSR1_TILE_X_L;
    int tx_wlsr1_r = WLSR1_TILE_X_R;

    int ty_iob ;


    foreach rx( L_REGIONS )
    {

        ty_iob = (rx < 3) ? IOB3_TILE_Y : IOB4_TILE_Y ;

        foreach tx( L_WLSR_TILES_X )
        {
            blsr = (rx == 0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            if(tx<=PLL_TILE_X)
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_L, CCS_TILE_X, CCS_TILE_Y, ty_iob, "WLSR_TILE", "0", "0", blsr, 0);
            }          
            else
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_R, CCS_TILE_X, CCS_TILE_Y, ty_iob, "WLSR_TILE", "0", "0", blsr, 0);
            }
        } 

        foreach tx( L_WLSR1_TILES_X )
        {
            blsr = (rx == 0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            if(tx<=PLL_TILE_X)
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_L, CCS_TILE_X, CCS_TILE_Y, ty_iob, "WLSR1_TILE", "0", "0",blsr, 0);
            }          
            else
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_R, CCS_TILE_X, CCS_TILE_Y, ty_iob, "WLSR1_TILE", "0", "0",blsr, 0);
            }
        }
        foreach tx( L_WLSR1B_TILES_X )
        {
            blsr = (rx == 0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            if(tx<=PLL_TILE_X)
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_L, CCS_TILE_X, CCS_TILE_Y, ty_iob, "WLSR1_100H_TILE", "0", "0",blsr, 0);
            }          
            else
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_R, CCS_TILE_X, CCS_TILE_Y, ty_iob, "WLSR1_100H_TILE", "0", "0",blsr, 0);
            }
        }

        foreach tx( {PLL_TILE_X} )
        {
            blsr = (rx == 0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            if(tx<=PLL_TILE_X)
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_L, CCS_TILE_X, CCS_TILE_Y, ty_iob, "WLSR2_TILE", "0", "0", blsr,0);
            }          
            else
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_R, CCS_TILE_X, CCS_TILE_Y, ty_iob, "WLSR2_TILE", "0", "0", blsr,0);
            }
        }

        foreach tx( L_DRM_TILES_X )
        {
            blsr = (rx == 0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            if(tx<=PLL_TILE_X)
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_L, CCS_TILE_X, CCS_TILE_Y, ty_iob, "WLSRD_TILE", "0", "0", blsr,0);
            }          
            else
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_R, CCS_TILE_X, CCS_TILE_Y, ty_iob, "WLSRD_TILE", "0", "0", blsr,0);
            }
        }
        foreach tx( L_APM_TILES_X )
        {
            blsr = (rx == 0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            if(tx<=PLL_TILE_X)
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_L, CCS_TILE_X, CCS_TILE_Y, ty_iob, "WLSRA_TILE", "0", "0", blsr,0);
            }          
            else
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_R, CCS_TILE_X, CCS_TILE_Y, ty_iob, "WLSRA_TILE", "0", "0", blsr,0);
            }
        }
        foreach tx( {IOB_TILE_X_L,IOB_TILE_X_R} )
        {
            blsr = (rx == 0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            string iob = (rx < 3&&tx<PLL_TILE_X) ? "IOB3_TILE" : 
                         (rx < 3&&tx>PLL_TILE_X)? "IOB1_TILE" :
                         (rx >=3&&tx<PLL_TILE_X)? "IOB4_TILE" : "IOB5_TILE" ;

            string bus_wlsrb_in = (rx==0||rx==3) ? "BUS_WLSRB_IN_0" : (rx==1||rx==4) ?"BUS_WLSRB_IN_1" : "BUS_WLSRB_IN_2" ;
            string wlshft_ref = (rx==0||rx==3) ? "WLSHFT_REF[0]" : (rx==1||rx==4) ?"WLSHFT_REF[1]":"WLSHFT_REF[2]"  ;

            if(tx<=PLL_TILE_X)
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_L, CCS_TILE_X, CCS_TILE_Y, ty_iob, iob, bus_wlsrb_in, wlshft_ref, blsr,1);
            }          
            else
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_R, CCS_TILE_X, CCS_TILE_Y, ty_iob, iob, bus_wlsrb_in, wlshft_ref, blsr,1);
            }
        }
        foreach tx( {IOL_TILE_X_L,IOL_TILE_X_R} )
        {
            blsr = (rx == 0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            if(tx<=PLL_TILE_X)
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_L, CCS_TILE_X, CCS_TILE_Y, ty_iob, "IOCKGATEDLL_100H_TILE", "0", "0", blsr,0);
            }          
            else
            {
                connect_blsr_gs_output(rx, tx, BLSR_TILE_X_R, CCS_TILE_X, CCS_TILE_Y, ty_iob, "IOCKGATEDLL_100H_TILE", "0", "0",blsr, 0);
            }
        }

    }

};//end of structure arch_nl connect_blsr of PGL100H
/***************************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl100h_defs,pgl_funcs_connect_gs_wl;
use pgl_funcs_connect_gs_wl_100h;

structure arch_nl connect_col_addr of PGL100H
{

    int region_index, tx , num_wlsr;

    string iob_l,iob_r , blsr;

// for col_addr l

    int l_wlsr_tx[]= L_WLSR_TILES_X_L;
    int l_wlsra_tx[]= L_APM_TILES_X_L;
    int l_wlsrd_tx[]= L_DRM_TILES_X_L;
    int l_wlsr1_tx[]= {WLSR1_TILE_X_L};
    int l_wlsr1b_tx[]= L_WLSR1B_TILES_X_L;
    int l_wlsr2_tx[]= {PLL_TILE_X};
    int l_iock_tx[]= {IOL_TILE_X_L};
    int l_iob_tx[]= {0};

    iob_l = "IOB3_TILE"; 
    iob_r = "IOB1_TILE";

    int ty_iob_l = IOB3_TILE_Y ;
    int ty_iob_r = IOB1_TILE_Y ;

    foreach region_index(L_REGIONS)
    {
        num_wlsr = 0 ;

        foreach tx({[1:23,25:47]})
        {
            blsr = (region_index == 0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            num_wlsr = num_wlsr + 1 ;

            connect_col_wlsr_addr_100h(BLSR_TILE_X_L, tx, num_wlsr, region_index, 1, 1, l_wlsr_tx, l_wlsrd_tx, l_wlsra_tx, l_wlsr2_tx, l_wlsr1_tx,l_wlsr1b_tx, l_iock_tx, l_iob_tx, "COL_ADDR", blsr,"WLSRA_TILE",iob_l,iob_r);
        }
    }

// for iob col_addr l

    foreach region_index(L_REGIONS)
    {
        num_wlsr = 0 ;

        blsr =  "BLSR1_TILE" ;

        iob_l = (region_index<3) ? "IOB3_TILE" : "IOB4_TILE" ;

        ty_iob_l = (region_index<3) ? IOB3_TILE_Y : IOB4_TILE_Y ;

        string col_addr = (region_index==0||region_index==3) ? "COL_ADDR_0" : (region_index==1||region_index==4) ? "COL_ADDR_1" : "COL_ADDR_2";

        foreach tx({0})
        {
            connect_col_wlsr_addr_100h(BLSR_TILE_X_L, tx, num_wlsr, region_index, ty_iob_l, ty_iob_r, l_wlsr_tx, l_wlsrd_tx, l_wlsra_tx, l_wlsr2_tx, l_wlsr1_tx,l_wlsr1b_tx, l_iock_tx, l_iob_tx, col_addr, blsr,"WLSRA_TILE",iob_l,iob_r);
        }
    }

// for iob col_addr r

    int l_wlsr_tx_r[]= L_WLSR_TILES_X_R;
    int l_wlsra_tx_r[]= L_APM_TILES_X_R;
    int l_wlsrd_tx_r[]= L_DRM_TILES_X_R;
    int l_wlsr1_tx_r[]= {WLSR1_TILE_X_R};
    int l_wlsr1b_tx_r[]= L_WLSR1B_TILES_X_R;
    int l_wlsr2_tx_r[]= {0};
    int l_iock_tx_r[]= {IOL_TILE_X_R};
    int l_iob_tx_r[]= {IOB_TILE_X_R};

    foreach region_index(L_REGIONS)
    {
        num_wlsr = 0 ;

        foreach tx({[49:73,75:95]})
        {
            blsr = (region_index == 0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            num_wlsr = num_wlsr + 1 ;
        
            connect_col_wlsr_addr_100h(BLSR_TILE_X_R, tx, num_wlsr, region_index, 1, 1, l_wlsr_tx_r, l_wlsrd_tx_r, l_wlsra_tx_r, l_wlsr2_tx_r, l_wlsr1_tx_r, l_wlsr1b_tx_r,l_iock_tx_r, l_iob_tx_r, "COL_ADDR", blsr,"WLSRA_TILE",iob_l,iob_r);
        }
    }

    foreach region_index(L_REGIONS)
    {
        num_wlsr = 0 ;

        blsr = (region_index==0) ? "BLSR2_TILE" : "BLSR1_TILE" ;

        foreach tx({48})
        {
            connect_col_wlsr_addr_100h(BLSR_TILE_X_R, tx, num_wlsr, region_index, 1, 1, l_wlsr_tx_r, l_wlsrd_tx_r, l_wlsra_tx_r, l_wlsr2_tx_r, l_wlsr1_tx_r, l_wlsr1b_tx_r,l_iock_tx_r, l_iob_tx_r, "COL_ADDR", blsr,"WLSRA_TILE",iob_l,iob_r);
        }
    }

// for iob col_addr r

    foreach region_index(L_REGIONS)
    {
        num_wlsr =  47;

        blsr = (region_index==0) ? "BLSR2_TILE" : "BLSR1_TILE" ;

        iob_r = (region_index<3) ? "IOB1_TILE" : "IOB5_TILE" ;

        ty_iob_r = (region_index<3) ? IOB1_TILE_Y : IOB5_TILE_Y ;

        string col_addr = (region_index==0||region_index==3) ? "COL_ADDR_0" : (region_index==1||region_index==4) ? "COL_ADDR_1" : "COL_ADDR_2";

        foreach tx(l_iob_tx_r)
        {
            connect_col_wlsr_addr_100h(BLSR_TILE_X_R, tx, num_wlsr, region_index, ty_iob_l, ty_iob_r, l_wlsr_tx_r, l_wlsrd_tx_r, l_wlsra_tx_r, l_wlsr2_tx_r, l_wlsr1_tx_r,l_wlsr1b_tx_r, l_iock_tx_r, l_iob_tx_r, col_addr, blsr,"WLSRA_TILE",iob_l,iob_r);
        }
    }

// for WLSRD COL_ADDR_D

    int num_wlsrd ;

    foreach region_index(L_REGIONS)
    {
        num_wlsrd = 0 ;

        blsr = "BLSR1_TILE" ;

        foreach tx(L_DRM_TILES_X_L)
        {
            num_wlsrd = num_wlsrd + 1 ;
        
            connect_col_wlsrdd_addr(BLSR_TILE_X_L, tx, num_wlsrd, region_index, blsr);
        }
    }

    foreach region_index(L_REGIONS)
    {
        num_wlsrd = 0 ;

        blsr = (region_index==0) ? "BLSR2_TILE" : "BLSR1_TILE" ;

        foreach tx(L_DRM_TILES_X_R)
        {
            num_wlsrd = num_wlsrd + 1 ;
        
            connect_col_wlsrdd_addr(BLSR_TILE_X_R, tx, num_wlsrd, region_index, blsr);
        }
    }

};//end of structure arch_nl connect_blsr of PGL100H

/***************************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl100h_defs;
use pgl100h_connect_wl_bl,pgl_funcs_connect_gs_wl;
use pgl_funcs_connect_gs_wl_100h;

structure arch_nl connect_gs_wl of PGL100H 
{   

// for horizon one by one connect

    unsigned int rx,tx, ty_tmp,rx_tmp;
    string blsr1, blsr2 ;
    int flag_lr ;
    
    unsigned int l_tx_wlsrs_l[44:0] = {[2:23,25:47]};
    unsigned int l_tx_wlsrs_r[45:0] = {[49:73,75:95]};
    unsigned int l_tx_wlsrs_l_b[44:0] = {[47:25,23:2]};
    unsigned int l_tx_wlsrs_r_b[45:0] = {[95:75,73:49]};
    int l_wlsr_tx[]= L_WLSR_TILES_X ;
    int l_wlsra_tx[]= L_APM_TILES_X ;
    int l_wlsrd_tx[]= L_DRM_TILES_X;
    int l_wlsr1_tx[]= L_WLSR1_TILES_X;
    int l_wlsr1b_tx[]= L_WLSR1B_TILES_X;
    int l_wlsr2_tx[]= {PLL_TILE_X};
    int l_iock_tx[]= {IOL_TILE_X_L,IOL_TILE_X_R};

    unsigned int ty, index,flag_ud,tx_l,tx_r,tx_iob,ty_iob,tx_iock;
    string blsr = "BLSR1_TILE";
    string addr ;

    int f_begin = NUM_TILE_START_Y ;

    foreach rx( L_REGIONS )
    {
        foreach flag_ud({1,0})
        {
            int l_tx_l[44:0] = (flag_ud==1) ? l_tx_wlsrs_l_b : l_tx_wlsrs_l ;
            int l_tx_r[45:0] = (flag_ud==1) ? l_tx_wlsrs_r_b : l_tx_wlsrs_r ;

            blsr = "BLSR1_TILE";

            foreach index({[44:0]})
            { 
                connect_WLSR_gs_wl_100h(index, BLSR_TILE_X_L, rx, l_tx_l, l_tx_r,l_wlsr_tx,l_wlsr1_tx,l_wlsr1b_tx,l_wlsr2_tx,l_wlsra_tx,l_wlsrd_tx,l_iock_tx, blsr, 1,flag_ud);
            }

            blsr = (rx==0) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            foreach index({[45:0]})
            { 
                connect_WLSR_gs_wl_100h(index, BLSR_TILE_X_R, rx,l_tx_l, l_tx_r , l_wlsr_tx,l_wlsr1_tx,l_wlsr1b_tx,l_wlsr2_tx,l_wlsra_tx,l_wlsrd_tx,l_iock_tx, blsr, 0,flag_ud);
            }
        }

        string wlshft_por_erase_n = (rx==0||rx==3) ? "WLSHFT_POR_ERASE_N[0]" : (rx==1||rx==4) ? "WLSHFT_POR_ERASE_N[1]" : "WLSHFT_POR_ERASE_N[2]" ;
        string cs_in = (rx==0||rx==3) ? "CS_IN[0]" : (rx==1||rx==4) ? "CS_IN[1]" : "CS_IN[2]" ;
        string col_inc_in = (rx==0||rx==3) ? "COL_INC_IN[0]" : (rx==1||rx==4) ? "COL_INC_IN[1]" : "COL_INC_IN[2]" ;
        string cs_out = (rx==0||rx==3) ? "CS_OUT[0]" : (rx==1||rx==4) ? "CS_OUT[1]" : "CS_OUT[2]" ;
        string col_inc_out = (rx==0||rx==3) ? "COL_INC_OUT[0]" : (rx==1||rx==4) ? "COL_INC_OUT[1]" : "COL_INC_OUT[2]" ;

        foreach flag_lr({1,0})
        {
            string iob = (flag_lr==1&&rx<3) ? "IOB3_TILE" :
                         (flag_lr==1&&rx>=3) ? "IOB4_TILE" :
                         (flag_lr==0&&rx<3) ? "IOB1_TILE" : "IOB5_TILE" ;

            tx_iob = (flag_lr==0) ? IOB_TILE_X_R : IOB_TILE_X_L ;
            ty_iob = (rx<3) ? IOB1_TILE_Y : IOB4_TILE_Y ;
            tx_iock = (flag_lr==1) ? IOL_TILE_X_L : IOL_TILE_X_R ;
                    
            connect_iock_iob_gs_h_100h(rx,tx_iob,ty_iob,tx_iock , 48, iob,wlshft_por_erase_n,cs_in,col_inc_in,cs_out,col_inc_out,flag_lr);
        }
    }

// for srb addr

    int ty_srb ;

    foreach rx( L_REGIONS )
    {
        foreach ty_srb({[1:15,17:31]})
        {
            ty = ty_srb + rx * NUM_TILES_REGION ;

            foreach tx( L_WLSR_TILES_X)
            {
                if(!(((tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X) && (ty>=HSST_TILE_D_L_Y && ty<HSST_TILE_D_R_Y)) || ((tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X) && (ty>=HSST_TILE_U_L_Y && ty<HSST_TILE_U_R_Y))))
                {
                    if(!((tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X) && (ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y)))
                    {
                        connect_SRB_gs_addr_input(tx, ty_srb, rx, "WLSR_TILE", 0);
                    }
                }
            }
            foreach tx( L_WLSR1_TILES_X)
            {
                connect_SRB_gs_addr_input(tx, ty_srb, rx, "WLSR1_TILE", 0);
            }
            foreach tx( L_WLSR1B_TILES_X)
            {
                if(!(((tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X) && (ty>=HSST_TILE_D_L_Y && ty<HSST_TILE_D_R_Y)) || ((tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X) && (ty>=HSST_TILE_U_L_Y && ty<HSST_TILE_U_R_Y))))
                {
                    if(!((tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X) && (ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y)))
                    {
                        connect_SRB_gs_addr_input(tx, ty_srb, rx, "WLSR1_100H_TILE", 0);
                    }
                }
            }
            foreach tx( {PLL_TILE_X})
            {
                if(!(((tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X) && (ty>=HSST_TILE_D_L_Y && ty<HSST_TILE_D_R_Y)) || ((tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X) && (ty>=HSST_TILE_U_L_Y && ty<HSST_TILE_U_R_Y))))
                {
                    if(!((tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X) && (ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y)))
                    {
                        connect_SRB_gs_addr_input(tx, ty_srb, rx, "WLSR2_TILE", 0);
                    }
                }
            }
            foreach tx( L_APM_TILES_X)
            {
                if(!(((tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X) && (ty>=HSST_TILE_D_L_Y && ty<HSST_TILE_D_R_Y)) || ((tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X) && (ty>=HSST_TILE_U_L_Y && ty<HSST_TILE_U_R_Y))))
                {
                    if(!((tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X) && (ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y)))
                    {
                        connect_SRB_gs_addr_input(tx, ty_srb, rx, "WLSRA_TILE", 0);
                    }
                }
            }
            foreach tx( L_DRM_TILES_X)
            {
                if(!(((tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X) && (ty>=HSST_TILE_D_L_Y && ty<HSST_TILE_D_R_Y)) || ((tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X) && (ty>=HSST_TILE_U_L_Y && ty<HSST_TILE_U_R_Y))))
                {
                    if(!((tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X) && (ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y)))
                    {
                        connect_SRB_gs_addr_input(tx, ty_srb, rx, "WLSRD_TILE", 0);
                    }
                }
            }
            foreach tx({IOL_TILE_X_L,IOL_TILE_X_R})
            {
                connect_SRB_gs_addr_input(tx, ty_srb, rx, "IOCKGATEDLL_100H_TILE", 1);
            }
        }
    }

// for clm addr 

    int l_clma_tx[]=L_CLMA_TILES_X ;
    int l_clms_tx[]=L_CLMS_TILES_X ;

    int tx_wlsr1 , tx_wlsr1b ,tx_wlsr,ty_clm ;
    string wlsr ;

    foreach rx( L_REGIONS )
    {
        foreach tx(l_clma_tx)
        {
            foreach tx_wlsr1(L_WLSR1_TILES_X)
            {
                if(tx==tx_wlsr1)
                {
                    wlsr = "WLSR1_TILE";
                    break ;
                }
            }
            foreach tx_wlsr1b(L_WLSR1B_TILES_X)
            {
                if(tx==tx_wlsr1b)
                {
                    wlsr = "WLSR1_100H_TILE";
                    break ;
                }
            }
            foreach tx_wlsr(L_WLSR_TILES_X)
            {
                if(tx==tx_wlsr)
                {
                    wlsr = "WLSR_TILE";
                    break ;
                }
            }
            foreach ty_clm({[2:15,17:30]})
            {
                ty = ty_clm + rx * NUM_TILES_REGION ;

                if(!(tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && (ty<=HSST_TILE_D_R_Y || ty>=HSST_TILE_U_L_Y - 1)))
                {
                    if(!(tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X && ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y))
                    {
                        connect_CLM_gs_addr_input(tx, ty_clm, rx, "CLMA_TILE", wlsr,0);
                    }
                }
            }
            if(!(rx==NUM_REGION-1))
            {
                ty = 31 + rx * NUM_TILES_REGION ;

                if(!(tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && (ty<=HSST_TILE_D_R_Y || ty>=HSST_TILE_U_L_Y - 1)))
                {
                    if(!(tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X && ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y))
                    {
                        connect_CLM_gs_addr_input(tx, 31, rx, "CLMA_TILE", wlsr,0);
                    }
                }
            }
            if(!(rx==0))
            {
                ty = 1 + rx * NUM_TILES_REGION ;

                if(!(tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && (ty<=HSST_TILE_D_R_Y || ty>=HSST_TILE_U_L_Y - 1)))
                {
                    if(!(tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X && ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y))
                    {
                        connect_CLM_gs_addr_input(tx, 1, rx, "CLMA_TILE", wlsr,0);
                    }
                }
            }
        }
        foreach tx(l_clms_tx)
        {
            if(tx!=PLL_TILE_X)
            {            
                foreach tx_wlsr1(L_WLSR1_TILES_X)
                {
                    if(tx==tx_wlsr1)
                    {
                        wlsr = "WLSR1_TILE";
                        break ;
                    }
                }
                foreach tx_wlsr1b(L_WLSR1B_TILES_X)
                {
                    if(tx==tx_wlsr1b)
                    {
                        wlsr = "WLSR1_100H_TILE";
                        break ;
                    }
                }
                foreach tx_wlsr(L_WLSR_TILES_X)
                {
                    if(tx==tx_wlsr)
                    {
                        wlsr = "WLSR_TILE";
                        break ;
                    }
                }
                foreach ty_clm({[2:15,17:30]})
                {
                    ty = ty_clm + rx * NUM_TILES_REGION ;

                    if(!(tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && (ty<=HSST_TILE_D_R_Y || ty>=HSST_TILE_U_L_Y - 1)))
                    {
                        if(!(tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X && ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y))
                        {
                            connect_CLM_gs_addr_input(tx, ty_clm, rx, "CLMS_TILE", wlsr,0);
                        }
                    }
                }
                if(!(rx==NUM_REGION-1))
                {
                    ty = 31 + rx * NUM_TILES_REGION ;

                    if(!(tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && (ty<=HSST_TILE_D_R_Y || ty>=HSST_TILE_U_L_Y - 1)))
                    {
                        if(!(tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X && ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y))
                        {
                            connect_CLM_gs_addr_input(tx, 31, rx, "CLMS_TILE", wlsr,0);
                        }
                    }
                }
                if(!(rx==0))
                {
                    ty = 1 + rx * NUM_TILES_REGION ;

                    if(!(tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && (ty<=HSST_TILE_D_R_Y || ty>=HSST_TILE_U_L_Y - 1)))
                    {
                        if(!(tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X && ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y))
                        {
                            connect_CLM_gs_addr_input(tx, 1, rx, "CLMS_TILE", wlsr,0);
                        }
                    }
                }
            }
        }
    } // end region loop

     wlsr = "WLSR2_TILE" ;

    int ty_tmp1 ;
 
    foreach rx ( L_REGIONS )
    {
        foreach ty_tmp ( L_CLM_TILES_PLL_Y )
        {
            ty = ty_tmp - rx * NUM_TILES_REGION ;

            foreach ty_tmp1({[1:31]})
            {
                if(ty==ty_tmp1)
                {
                    connect_CLM_gs_addr_input(PLL_TILE_X, ty, rx, "CLMS_TILE", wlsr,0);
                }
            }
        }
    }

// for drm addr

    int ty_drm ; 
    
    foreach rx( L_REGIONS )
    {
        foreach tx( L_DRM_TILES_X)
        {
            foreach ty_drm({1,6,11,17,22,27})
            {
                ty = ty_drm + rx * NUM_TILES_REGION ;

                if(!((tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && ty>=HSST_TILE_U_L_Y - 1) || (tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X && ty<=HSST_TILE_D_R_Y - 1)))
                {
                    if(!((tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X) && (ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y)))
                    {
                        connect_DRM_gs_addr_input(tx, rx, ty_drm);
                    }
                }
            }
        }
    }

// for apm addr

    int ty_apm ; 
    
    foreach rx( L_REGIONS )
    {
        foreach tx( L_APM_TILES_X )
        {
            foreach ty_apm({1,4,7,10,13,17,20,23,26,29})
            {
                ty = ty_apm + rx * NUM_TILES_REGION ;

                if(!((tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && ty>=HSST_TILE_U_L_Y - 1) || (tx>=HSST_TILE_U_L_X && tx<HSST_TILE_U_R_X && ty<=HSST_TILE_D_R_Y - 1)))
                {
                    if(!((tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X) && (ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y)))
                    {
                        connect_APM_gs_addr_input(tx, rx, ty_apm);
                    }
                }
            }
        }
    }

// for pll addr

    int ty_pll ;   

    foreach rx( L_REGIONS )
    {
        foreach tx( {PLL_TILE_X})
        {
            foreach ty_pll({12,17})
            {
                ty = ty_pll + rx * NUM_TILES_REGION;
        
                if(ty>=NUM_TILE_HALF_Y&&ty<=NUM_TILE_HALF_Y + 4 * NUM_TILES_REGION)
                {
                    connect_PLL_gs_addr_input( tx, rx, ty_pll,"PLL_100H_TILE");
                }
            } 
        }    
    } 

// for uscm addr

    connect_USCM_gs_addr_input( BLSR_TILE_X_L, PLL_TILE_X, 2, USCM0_TILE_LOC_Y);
    connect_USCM_gs_addr_input( BLSR_TILE_X_L, PLL_TILE_X, 3, USCM1_TILE_LOC_Y);

// for iol_v rlybufs7 addr

    foreach rx( L_REGIONS )
    {
        foreach tx( {IOL_TILE_X_L,IOL_TILE_X_R})
        {
            int ty_iol[] = (tx==IOL_TILE_X_L) ? L_IOL_TILES_Y_L : L_IOL_TILES_Y_R ;

            foreach ty( ty_iol )
            {
                rx_tmp = (ty < NUM_TILES_REGION + f_begin) ? 0 :
                         (ty < 2*NUM_TILES_REGION + f_begin) ? 1 :
                         (ty < 3*NUM_TILES_REGION + f_begin) ? 2 :
                         (ty < 4*NUM_TILES_REGION + f_begin) ? 3 : 4 ;

                ty_tmp = ty - rx_tmp * NUM_TILES_REGION ;

                if(rx==rx_tmp)
                {
                    connect_iol_v_gs_addr_input(tx, rx_tmp, ty_tmp, "IOL_TILE", "IOCKGATEDLL_100H_TILE", 0,0);
                }
            }
            foreach ty( {7,14,25})
            {
                connect_iol_v_gs_addr_input(tx, rx, ty, "DQSL_TILE", "IOCKGATEDLL_100H_TILE", 0,0);
            }
            foreach ty_tmp({1})
            {
                ty = ty_tmp + rx * NUM_TILES_REGION ;
                
                if(rx>0)
                {
                    connect_iol_v_gs_addr_input(tx, rx, ty, "RLYBUFS7_TILE", "IOCKGATEDLL_100H_TILE", 0,1);
                }
            }
            foreach ty_tmp({18})
            {
                ty = ty_tmp + rx * NUM_TILES_REGION ;
                
                if(rx>0&&rx<4)
                {
                    connect_iol_v_gs_addr_input(tx, rx, ty, "RLYBUFS8_TILE", "IOCKGATEDLL_100H_TILE", 0,1);
                }
            }
            int ty_cramsl2[] = (tx==IOL_TILE_X_L) ? L_CRAMSL2_TILES_Y_L : L_CRAMSL2_TILES_Y_R ;

            foreach ty(ty_cramsl2)
            {
                rx_tmp = (ty < NUM_TILES_REGION + f_begin) ? 0 :
                         (ty < 2*NUM_TILES_REGION + f_begin) ? 1 :
                         (ty < 3*NUM_TILES_REGION + f_begin) ? 2 :
                         (ty < 4*NUM_TILES_REGION + f_begin) ? 3 : 4 ;

                ty_tmp = ty - rx_tmp * NUM_TILES_REGION ;

                if(rx==rx_tmp)
                {
                    connect_cramsl2_addr_input(tx, rx_tmp, ty_tmp, "CRAMSL2_TILE", "IOCKGATEDLL_100H_TILE", 1);
                }
            }
        }
    }

// for iol_h addr

    int tx_iol;

    foreach tx_iol(L_IOL_TILES_X_UD)
    {
        foreach tx_wlsr1(L_WLSR1_TILES_X)
        {
            if(tx_iol==tx_wlsr1)
            {
                wlsr = "WLSR1_TILE";
                break ;
            }
        }
        foreach tx_wlsr1b(L_WLSR1B_TILES_X)
        {
            if(tx_iol==tx_wlsr1b)
            {
                wlsr = "WLSR1_100H_TILE";
                break ;
            }
        }
        foreach tx_wlsr(L_WLSR_TILES_X)
        {
            if(tx_iol==tx_wlsr)
            {
                wlsr = "WLSR_TILE";
                break ;
            }
        }            

        if(tx_iol==PLL_TILE_X)
        {
            wlsr = "WLSR2_TILE";
        }
        connect_iol_h_gs_addr_input(tx_iol, 4, IOL_TILE_Y_U, "IOLTB_TILE", wlsr);        
    }
    foreach tx_iol(L_IOL_TILES_X_UD)
    {
        foreach tx_wlsr1(L_WLSR1_TILES_X)
        {
            if(tx_iol==tx_wlsr1)
            {
                wlsr = "WLSR1_TILE";
                break ;
            }
        }
        foreach tx_wlsr1b(L_WLSR1B_TILES_X)
        {
            if(tx_iol==tx_wlsr1b)
            {
                wlsr = "WLSR1_100H_TILE";
                break ;
            }
        }
        foreach tx_wlsr(L_WLSR_TILES_X)
       {
            if(tx_iol==tx_wlsr)
            {
                wlsr = "WLSR_TILE";
                break ;
            }
        }            

        if(tx_iol==PLL_TILE_X)
        {
            wlsr = "WLSR2_TILE";
        }
        connect_iol_h_gs_addr_input(tx_iol, 0, IOL_TILE_Y_D, "IOLTB_TILE", wlsr);        
    }

    connect_cramsl7206_h_gs_addr_input(CRAMSL7206_TILE_X,4,IOL_TILE_Y_U,"CRAMSL7206_TILE","WLSR_TILE");
    connect_cramsl7206_h_gs_addr_input(CRAMSL7206_TILE_X,0,IOL_TILE_Y_D,"CRAMSL7206_TILE","WLSR_TILE");

// for iockdll addr

    foreach rx({0,4})
    {
        int ty_loc = (rx==0) ? IOCKDLL_TILE_LOC_Y_D : IOCKDLL_TILE_LOC_Y_U ;

        connect_iockdll_gs_addr_input(rx, IOCKDLL_TILE_X_L, BLSR_TILE_X_L, ty_loc, "IOCKDLL_TILE", "WLSR_TILE");
        connect_iockdll_gs_addr_input(rx, IOCKDLL_TILE_X_R, BLSR_TILE_X_R, ty_loc, "IOCKDLL_TILE", "WLSR_TILE");
    }

// for clkmux addr

    foreach rx( {0,4} )
    {
        foreach tx( {PLL_TILE_X})
        {
            ty_pll = (rx==0) ? 15 : 17 ;
        
            ty = ty_pll + rx * NUM_TILES_REGION;
    
            connect_PLL_gs_addr_input( tx, rx, ty_pll,"CLKMUX_100H_TILE");
        }    
    }

// for pcie addr

    foreach rx( {3,4} )
    {
        addr = (rx==3) ? "ADDR_D" : "ADDR_U" ;

        string addr_b = (rx==3) ? "ADDR_DN" : "ADDR_UP" ;
        string addr_c = (rx==3) ? "ADDR_C_DN" : "ADDR_C_UP" ;
        string col_sel = (rx==3) ? "COL_SEL_DN" : "COL_SEL_UP" ;
        string read_or = (rx==3) ? "READ_OR_DN" : "READ_OR_UP" ;
        string tielo = (rx==3) ? "TIELO_0" : "TIELO_1";

        connect_pcie_wl_input_100h(PCIE_TILE_L_X, rx, PCIE_TILE_L_Y,PCIE_TILE_R_X,BLSR_TILE_X_L,PCIE_TILE_L_X,addr_c,addr_b,col_sel,read_or,addr,tielo,"PCIE_TILE");
    }
// for hsst addr

    foreach rx( {0,4} )
    {
        ty = (rx==0) ? HSST_TILE_D_L_Y : HSST_TILE_U_L_Y ;

        blsr1 = "BLSR1_TILE" ;
        blsr2 = (rx==0) ? "BLSR2_TILE" : "BLSR1_TILE" ;

        connect_hsst_wl_input_100h(HSST_TILE_U_L_X, ty,BLSR_TILE_X_L,BLSR_TILE_X_R,blsr1,blsr2);
    }

// for  iob_h addr

    foreach rx( {0,4} )
    {
        string iob = (rx==0) ? "IOB2_TILE" : "IOB0_TILE" ;

        int ty = (rx==0) ? IOB_TILE_Y_D : IOB_TILE_Y_U ;

        connect_iob_addr_h_input_100h( IOB0_TILE_X, ty, iob, rx);
    }
// for piomux addr 

     wlsr = "WLSR2_TILE" ;

    foreach rx( {0,4} )
    {
        foreach tx( {PLL_TILE_X})
        {
            foreach ty_pll(L_PIOMUX_TILES_Y)
            {
                ty = ty_pll - rx * NUM_TILES_REGION;
        
                foreach ty_tmp1({[1:31]})
                {
                    if(ty==ty_tmp1)
                    {
                        connect_PLL_gs_addr_input( tx, rx, ty,"PIOMUX_TILE");
                    }
                }
            } 
        }    
    }

};//end of structure arch_nl connect_addr_sig of PGL100H
/***************************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl100h_defs;
use pgl100h_connect_wl_bl,pgl_funcs_connect_gs_wl;
use pgl_funcs_connect_gs_wl_100h;

structure arch_nl connect_bl of PGL100H
{
    unsigned int tx_ccs = CCS_TILE_X;
    unsigned int ty_ccs = CCS_TILE_Y;
    unsigned int l_tx_srb[] = L_SRB_TILES_X;  
    unsigned int l_tx_clma[] = L_CLMA_TILES_X;  
    unsigned int l_tx_clms[] = L_CLMS_TILES_X;  
    unsigned int l_tx_clm[] = L_CLM_TILES_X;
    unsigned int l_tx_drm[] = L_DRM_TILES_X;  
    unsigned int l_tx_apm[] = L_APM_TILES_X;  
    unsigned int l_tx_wlsr[] = L_WLSR_TILES_X;  
    unsigned int l_tx_wlsrd[] = L_DRM_TILES_X;  
    unsigned int l_tx_wlsra[] = L_APM_TILES_X;  
    unsigned int l_tx_wlsr1[] = L_WLSR1_TILES_X;  
    unsigned int l_tx_wlsr1b[] = L_WLSR1B_TILES_X;  
    unsigned int l_tx_wlsr2[] = {PLL_TILE_X};  
    unsigned int tx_pll = PLL_TILE_X;  

    unsigned int tx, rx, tx_blsr, ty_blsr, ty,tx_tmp,f_srb,flag_ud;
    unsigned int f_begin,f_y0,f_y1,f_y2,f_y3,f_y4,f_y5,f_y6,f_y7,f_y8,f_y9,f_y10,f_y11,f_y12,f_y13,f_y14,f_y15,f_y16,f_y17,f_y18,f_y19,f_y20,f_y21,f_y22,f_y23,f_y24,f_y25,f_y26,f_y27,f_y28,f_y29 ;

    string data,datan,data_ori,datan_ori ;

    string blsr,srb ;

    blsr = "BLSR1_TILE" ;

    f_begin = NUM_TILE_START_Y ;

// for srb bl

    foreach rx(L_REGIONS)
    {
        f_srb = 1 ;

        srb = "SRB_TILE" ;

        foreach tx(L_SRB_TILES_X)
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            if(!(tx==BLSR_TILE_X_L||tx==BLSR_TILE_X_R))
            {
                f_y0 = 1 ;
                f_y1 = 1 ;
                f_y2 = 1 ;
                f_y3 = 1 ;
                f_y4 = 1 ;
                f_y5 = 1 ;
                f_y6 = 1 ;
                f_y7 = 1 ;
                f_y8 = 1 ;
                f_y9 = 1 ;
                f_y10 = 1 ;
                f_y11 = 1 ;
                f_y12 = 1 ;
                f_y13 = 1 ;
                f_y14 = 1 ;
                f_y15 = 1 ;
                f_y16 = 1 ;
                f_y17 = 1 ;
                f_y18 = 1 ;
                f_y19 = 1 ;
                f_y20 = 1 ;
                f_y21 = 1 ;
                f_y22 = 1 ;
                f_y23 = 1 ;
                f_y24 = 1 ;
                f_y25 = 1 ;
                f_y26 = 1 ;
                f_y27 = 1 ;
                f_y28 = 1 ;
                f_y29 = 1 ; 

                if(rx==0&&tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X)
                {
                    f_y0 = 0 ;
                    f_y1 = 0 ;
                    f_y2 = 0 ;
                    f_y3 = 0 ;
                    f_y4 = 0 ;
                    f_y5 = 0 ;
                    f_y6 = 0 ;
                    f_y7 = 0 ;
                    f_y8 = 0 ;                
                }
                if(rx==4&&tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X)
                {
                    f_y21 = 0 ;
                    f_y22 = 0 ;
                    f_y23 = 0 ;
                    f_y24 = 0 ;
                    f_y25 = 0 ;
                    f_y26 = 0 ;
                    f_y27 = 0 ;
                    f_y28 = 0 ;
                    f_y29 = 0 ;                
                }
                if(rx==3&&tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X)
                {
                    f_y15 = 0 ;
                    f_y16 = 0 ;
                    f_y17 = 0 ;
                    f_y18 = 0 ;
                    f_y19 = 0 ;
                    f_y20 = 0 ;
                    f_y21 = 0 ;
                    f_y22 = 0 ;
                    f_y23 = 0 ;
                    f_y24 = 0 ;
                    f_y25 = 0 ;
                    f_y26 = 0 ;
                    f_y27 = 0 ;
                    f_y28 = 0 ;
                    f_y29 = 0 ;                
                }
                if(rx==4&&tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X)
                {
                    f_y0  = 0 ;
                    f_y1  = 0 ;
                    f_y2  = 0 ;
                    f_y3  = 0 ;
                    f_y4  = 0 ;
                    f_y5  = 0 ;
                    f_y6  = 0 ;
                    f_y7  = 0 ;
                    f_y8  = 0 ;
                    f_y9  = 0 ;
                    f_y10 = 0 ;
                    f_y11 = 0 ;
                    f_y12 = 0 ;
                    f_y13 = 0 ;
                    f_y14 = 0 ;                
                }

                tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
                
                connect_SRB_bl_input_100h( tx,rx,tx_blsr,blsr,srb,f_srb,f_begin,f_y0,f_y1,f_y2,f_y3,f_y4,f_y5,f_y6,f_y7,f_y8,f_y9,f_y10,f_y11,f_y12,f_y13,f_y14,f_y15,f_y16,f_y17,f_y18,f_y19,f_y20,f_y21,f_y22,f_y23,f_y24,f_y25,f_y26,f_y27,f_y28,f_y29);
            }
        }

// for clm bl

        foreach tx(l_tx_clm)
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            f_srb = 0 ;

            srb = "CLMA_TILE" ;

            foreach tx_tmp(l_tx_clms)
            {
                if(tx==tx_tmp)
                {
                    srb = "CLMS_TILE" ;
                    break ;
                }
            }

            f_y0 = 1 ;
            f_y1 = 1 ;
            f_y2 = 1 ;
            f_y3 = 1 ;
            f_y4 = 1 ;
            f_y5 = 1 ;
            f_y6 = 1 ;
            f_y7 = 1 ;
            f_y8 = 1 ;
            f_y9 = 1 ;
            f_y10 = 1 ;
            f_y11 = 1 ;
            f_y12 = 1 ;
            f_y13 = 1 ;
            f_y14 = 1 ;
            f_y15 = 1 ;
            f_y16 = 1 ;
            f_y17 = 1 ;
            f_y18 = 1 ;
            f_y19 = 1 ;
            f_y20 = 1 ;
            f_y21 = 1 ;
            f_y22 = 1 ;
            f_y23 = 1 ;
            f_y24 = 1 ;
            f_y25 = 1 ;
            f_y26 = 1 ;
            f_y27 = 1 ;
            f_y28 = 1 ;
            f_y29 = 1 ; 

            if(rx==0&&tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X)
            {
                f_y0 = 0 ;
                f_y1 = 0 ;
                f_y2 = 0 ;
                f_y3 = 0 ;
                f_y4 = 0 ;
                f_y5 = 0 ;
                f_y6 = 0 ;
                f_y7 = 0 ;
                f_y8 = 0 ;                
                f_y9 = 0 ;                
            }
            if(rx==4&&tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X)
            {
                f_y20 = 0 ;
                f_y21 = 0 ;
                f_y22 = 0 ;
                f_y23 = 0 ;
                f_y24 = 0 ;
                f_y25 = 0 ;
                f_y26 = 0 ;
                f_y27 = 0 ;
                f_y28 = 0 ;
                f_y29 = 0 ;                
            }
            if(rx==3&&tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X)
            {
                f_y15 = 0 ;
                f_y16 = 0 ;
                f_y17 = 0 ;
                f_y18 = 0 ;
                f_y19 = 0 ;
                f_y20 = 0 ;
                f_y21 = 0 ;
                f_y22 = 0 ;
                f_y23 = 0 ;
                f_y24 = 0 ;
                f_y25 = 0 ;
                f_y26 = 0 ;
                f_y27 = 0 ;
                f_y28 = 0 ;
                f_y29 = 0 ;                
            }
            if(rx==4&&tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X)
            {
                f_y0  = 0 ;
                f_y1  = 0 ;
                f_y2  = 0 ;
                f_y3  = 0 ;
                f_y4  = 0 ;
                f_y5  = 0 ;
                f_y6  = 0 ;
                f_y7  = 0 ;
                f_y8  = 0 ;
                f_y9  = 0 ;
                f_y10 = 0 ;
                f_y11 = 0 ;
                f_y12 = 0 ;
                f_y13 = 0 ;
                f_y14 = 0 ;                
            }
            if(rx==0)
            {
                f_y0  = 0 ;
            }
            if(rx==4)
            {
                f_y29  = 0 ;
            }
            if((rx==0||rx==1||rx==2||rx==3)&&tx==PLL_TILE_X)
            {
                f_y15  = 0 ;
                f_y16  = 0 ;
                f_y17  = 0 ;
                f_y18  = 0 ;
            }
            if((rx==4||rx==1||rx==2||rx==3)&&tx==PLL_TILE_X)
            {
                f_y11  = 0 ;
                f_y12  = 0 ;
                f_y13  = 0 ;
                f_y14  = 0 ;
            }
            if(rx==0&&tx==PLL_TILE_X)
            {
                f_y14  = 0 ;
            }
            if(rx==4&&tx==PLL_TILE_X)
            {
                f_y15  = 0 ;
            }
            if(rx==2&&tx==PLL_TILE_X)
            {
                f_y28  = 0 ;
                f_y29  = 0 ;
            }
            if(rx==3&&tx==PLL_TILE_X)
            {
                f_y0  = 0 ;
                f_y1  = 0 ;
            }

            tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
            
            connect_SRB_bl_input_100h( tx,rx,tx_blsr,blsr,srb,f_srb,f_begin,f_y0,f_y1,f_y2,f_y3,f_y4,f_y5,f_y6,f_y7,f_y8,f_y9,f_y10,f_y11,f_y12,f_y13,f_y14,f_y15,f_y16,f_y17,f_y18,f_y19,f_y20,f_y21,f_y22,f_y23,f_y24,f_y25,f_y26,f_y27,f_y28,f_y29);
        }
    } // end of region loop

// for drm bl

    string drm ;

    int f_drm ;

    foreach rx(L_REGIONS)
    {
        f_drm = 1 ;

        drm = "DRM_TILE" ;

        foreach tx(L_DRM_TILES_X)
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            f_y0 = 1 ;
            f_y1 = 1 ;
            f_y2 = 1 ;
            f_y3 = 1 ;
            f_y4 = 1 ;
            f_y5 = 1 ;

            if(rx==0&&tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X)
            {
                f_y0 = 0 ;
                f_y1 = 0 ;
            }
            if(rx==4&&tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X)
            {
                f_y4 = 0 ;
                f_y5 = 0 ;
            }
            if(rx==3&&tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X)
            {
                f_y3 = 0 ;
                f_y4 = 0 ;
                f_y5 = 0 ;
            }
            if(rx==4&&tx>PCIE_TILE_L_X && tx<PCIE_TILE_R_X)
            {
                f_y0  = 0 ;
                f_y1  = 0 ;
                f_y2  = 0 ;
            }

            tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
            
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            connect_DRM_bl_input_100h( tx,rx,tx_blsr,blsr,drm,f_drm,f_begin,f_y0,f_y1,f_y2,f_y3,f_y4,f_y5);
        }
    }

// for apm bl

    string apm ;

    int f_apm ;

    foreach rx(L_REGIONS)
    {
        f_apm = 1 ;

        apm = "APM_TILE" ;

        foreach tx(L_APM_TILES_X)
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            f_y0 = 1 ;
            f_y1 = 1 ;
            f_y2 = 1 ;
            f_y3 = 1 ;
            f_y4 = 1 ;
            f_y5 = 1 ;
            f_y6 = 1 ;
            f_y7 = 1 ;
            f_y8 = 1 ;
            f_y9 = 1 ;

            if(rx==0&&tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X)
            {
                f_y0 = 0 ;
                f_y1 = 0 ;
                f_y2 = 0 ;
            }
            if(rx==4&&tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X)
            {
                f_y7 = 0 ;
                f_y8 = 0 ;
                f_y9 = 0 ;
            }

            tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
            
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            connect_APM_bl_input_100h( tx,rx,tx_blsr,blsr,apm,f_apm,f_begin,f_y0,f_y1,f_y2,f_y3,f_y4,f_y5,f_y6,f_y7,f_y8,f_y9);
        }
    }

// for iol_v bl 

    srb="IOL_TILE" ;
    f_srb=0 ;

    foreach rx(L_REGIONS)
    {
        foreach tx({IOL_TILE_X_L,IOL_TILE_X_R})
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;

            int ty_iol[] = (tx==IOL_TILE_X_L) ? L_IOL_TILES_Y_L : L_IOL_TILES_Y_R ;
       
            f_y0 = 0 ;
            f_y1 = 1 ;
            f_y2 = 1 ;
            f_y3 = 1 ;
            f_y4 = 1 ;
            f_y5 = 1 ;
            f_y6 = 0 ;
            f_y7 = 0 ;
            f_y8 = 1 ;
            f_y9 = 1 ;
            f_y10 = 1 ;
            f_y11 = 1 ;
            f_y12 = 1 ;
            f_y13 = 0 ;
            f_y14 = 0 ;
            f_y15 = 0 ;
            f_y16 = 0 ;
            f_y17 = 1 ;
            f_y18 = 1 ;
            f_y19 = 1 ;
            f_y20 = 1 ;
            f_y21 = 1 ;
            f_y22 = 0 ;
            f_y23 = 0 ;
            f_y24 = 1 ;
            f_y25 = 1 ;
            f_y26 = 1 ;
            f_y27 = 1 ;
            f_y28 = 1 ;
            f_y29 = 0 ;

            if(tx==IOL_TILE_X_L)
            {
                if(rx==2)
                {
                    f_y25 = 0 ;
                    f_y26 = 0 ;
                    f_y27 = 0 ;
                }
                if(rx==3)
                {
                    f_y19 = 0 ;
                    f_y2 = 0 ;
                    f_y28 = 0 ;
                    f_y3 = 0 ;
                    f_y4 = 0 ;
                    f_y5 = 0 ;
                    f_y8 = 0 ;
                    f_y9 = 0 ;
                }
                if(rx==4)
                {
                    f_y20 = 0 ;
                    f_y21 = 0 ;
                    f_y24 = 0 ;
                    f_y25 = 0 ;
                    f_y26 = 0 ;
                    f_y27 = 0 ;
                }
            }
            if(tx==IOL_TILE_X_R)
            {
                if(rx==0)
                {
                    f_y1 = 0 ;
                    f_y2 = 0 ;
                    f_y3 = 0 ;
                    f_y4 = 0 ;
                    f_y9 = 0 ;
                }
                if(rx==1)
                {
                    f_y19 = 0 ;
                    f_y28 = 0 ;
                }
                if(rx==2||rx==4)
                {
                    f_y20 = 0 ;
                    f_y21 = 0 ;
                    f_y24 = 0 ;
                    f_y25 = 0 ;
                    f_y26 = 0 ;
                    f_y27 = 0 ;
                }
                if(rx==3)
                {
                    f_y19 = 0 ;
                    f_y28 = 0 ;
                    f_y3 = 0 ;
                    f_y4 = 0 ;
                    f_y5 = 0 ;
                    f_y8 = 0 ;
                    f_y9 = 0 ;
                }
            }

            connect_SRB_bl_input_100h( tx,rx,tx_blsr,blsr,srb,f_srb,f_begin,f_y0,f_y1,f_y2,f_y3,f_y4,f_y5,f_y6,f_y7,f_y8,f_y9,f_y10,f_y11,f_y12,f_y13,f_y14,f_y15,f_y16,f_y17,f_y18,f_y19,f_y20,f_y21,f_y22,f_y23,f_y24,f_y25,f_y26,f_y27,f_y28,f_y29);
        }
    }

// for cramsl2 bl

    srb="CRAMSL2_TILE" ;
    f_srb=0 ;

    foreach rx(L_REGIONS)
    {
        foreach tx({IOL_TILE_X_L,IOL_TILE_X_R})
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;

            int ty_iol[] = (tx==IOL_TILE_X_L) ? L_CRAMSL2_TILES_Y_L : L_CRAMSL2_TILES_Y_R ;

            if(tx==IOL_TILE_X_L)
            {
                f_y0 = 0 ;
                f_y1 = 0 ;
                f_y2 = 0 ;
                f_y3 = 0 ;
                f_y4 = 0 ;
                f_y5 = 0 ;
                f_y6 = 0 ;
                f_y7 = 1 ;
                f_y8 = 0 ;
                f_y9 = 0 ;
                f_y10 = 0 ;
                f_y11 = 0 ;
                f_y12 = 0 ;
                f_y13 = 0 ;
                f_y14 = 0 ;
                f_y15 = 0 ;
                f_y16 = 0 ;
                f_y17 = 0 ;
                f_y18 = 0 ;
                f_y19 = 0 ;
                f_y20 = 0 ;
                f_y21 = 0 ;
                f_y22 = 1 ;
                f_y23 = 0 ;
                f_y24 = 0 ;
                f_y25 = 1 ;
                f_y26 = 1 ;
                f_y27 = 1 ;
                f_y28 = 0 ;
                f_y29 = 1 ;
            }
            else
            {
                f_y0 = 0 ;
                f_y1 = 0 ;
                f_y2 = 0 ;
                f_y3 = 1 ;
                f_y4 = 0 ;
                f_y5 = 0 ;
                f_y6 = 0 ;
                f_y7 = 1 ;
                f_y8 = 1 ;
                f_y9 = 1 ;
                f_y10 = 0 ;
                f_y11 = 0 ;
                f_y12 = 0 ;
                f_y13 = 0 ;
                f_y14 = 0 ;
                f_y15 = 0 ;
                f_y16 = 0 ;
                f_y17 = 0 ;
                f_y18 = 0 ;
                f_y19 = 1 ;
                f_y20 = 1 ;
                f_y21 = 1 ;
                f_y22 = 1 ;
                f_y23 = 0 ;
                f_y24 = 1 ;
                f_y25 = 1 ;
                f_y26 = 1 ;
                f_y27 = 1 ;
                f_y28 = 1 ;
                f_y29 = 1 ;
            }

            if(tx==IOL_TILE_X_L)
            {
                if(rx==0)
                {
                    f_y16 = 1 ;
                    f_y25 = 0 ;
                    f_y26 = 0 ;
                    f_y27 = 0 ;
                }
                if(rx==1)
                {
                    f_y25 = 0 ;
                    f_y26 = 0 ;
                    f_y27 = 0 ;
                }
                if(rx==3)
                {
                    f_y19 = 1 ;
                    f_y2 = 1 ;
                    f_y25 = 0 ;
                    f_y26 = 0 ;
                    f_y27 = 0 ;
                    f_y28 = 1 ;
                    f_y3 = 1 ;
                    f_y4 = 1 ;
                    f_y5 = 1 ;
                    f_y8 = 1 ;
                    f_y9 = 1 ;
                }
                if(rx==4)
                {
                    f_y16 = 1 ;
                    f_y20 = 1 ;
                    f_y21 = 1 ;
                    f_y24 = 1 ;
                    f_y29 = 0 ;
                }
            }
            if(tx==IOL_TILE_X_R)
            {
                if(rx==0)
                {
                    f_y3 = 0 ;
                    f_y8 = 0 ;
                    f_y16 = 1 ;
                    f_y19 = 0 ;
                    f_y20 = 0 ;
                    f_y21 = 0 ;
                    f_y24 = 0 ;
                    f_y25 = 0 ;
                    f_y26 = 0 ;
                    f_y27 = 0 ;
                    f_y28 = 0 ;
                }
                if(rx==1)
                {
                    f_y20 = 0 ;
                    f_y21 = 0 ;
                    f_y24 = 0 ;
                    f_y25 = 0 ;
                    f_y26 = 0 ;
                    f_y27 = 0 ;
                    f_y3 = 0 ;
                    f_y8 = 0 ;
                    f_y9 = 0 ;
                }
                if(rx==2)
                {
                    f_y19 = 0 ;
                    f_y28 = 0 ;
                    f_y3 = 0 ;
                    f_y8 = 0 ;
                    f_y9 = 0 ;
                }
                if(rx==3)
                {
                    f_y20 = 0 ;
                    f_y21 = 0 ;
                    f_y24 = 0 ;
                    f_y25 = 0 ;
                    f_y26 = 0 ;
                    f_y27 = 0 ;
                    f_y4 = 1 ;
                    f_y5 = 1 ;
                }
                if(rx==4)
                {
                    f_y16 = 1 ;
                    f_y19 = 0 ;
                    f_y28 = 0 ;
                    f_y29 = 0 ;
                    f_y3 = 0 ;
                    f_y8 = 0 ;
                    f_y9 = 0 ;
                }
            }

            connect_SRB_bl_input_100h( tx,rx,tx_blsr,blsr,srb,f_srb,f_begin,f_y0,f_y1,f_y2,f_y3,f_y4,f_y5,f_y6,f_y7,f_y8,f_y9,f_y10,f_y11,f_y12,f_y13,f_y14,f_y15,f_y16,f_y17,f_y18,f_y19,f_y20,f_y21,f_y22,f_y23,f_y24,f_y25,f_y26,f_y27,f_y28,f_y29);
           
        }
    }

// for rlybufs7 bl

    srb="RLYBUFS7_TILE" ;

    f_srb=0 ;

    foreach rx(L_REGIONS)
    {
        foreach tx({IOL_TILE_X_L,IOL_TILE_X_R})
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;

            f_y0  = 1 ;
            f_y1  = 0 ;
            f_y2  = 0 ;
            f_y3  = 0 ;
            f_y4  = 0 ;
            f_y5  = 0 ;
            f_y6  = 0 ;
            f_y7  = 0 ;
            f_y8  = 0 ;
            f_y9  = 0 ;
            f_y10 = 0 ;
            f_y11 = 0 ;
            f_y12 = 0 ;
            f_y13 = 0 ;
            f_y14 = 0 ;
            f_y15 = 0 ;
            f_y16 = 0 ;
            f_y17 = 0 ;
            f_y18 = 0 ;
            f_y19 = 0 ;
            f_y20 = 0 ;
            f_y21 = 0 ;
            f_y22 = 0 ;
            f_y23 = 0 ;
            f_y24 = 0 ;
            f_y25 = 0 ;
            f_y26 = 0 ;
            f_y27 = 0 ;
            f_y28 = 0 ;
            f_y29 = 0 ;

            if(rx==0)
            {
                f_y0 = 0 ;
            }

            connect_SRB_bl_input_100h( tx,rx,tx_blsr,blsr,srb,f_srb,f_begin,f_y0,f_y1,f_y2,f_y3,f_y4,f_y5,f_y6,f_y7,f_y8,f_y9,f_y10,f_y11,f_y12,f_y13,f_y14,f_y15,f_y16,f_y17,f_y18,f_y19,f_y20,f_y21,f_y22,f_y23,f_y24,f_y25,f_y26,f_y27,f_y28,f_y29);
        }
    }

// for rlybufs8 bl

    srb="RLYBUFS8_TILE" ;

    f_srb=0 ;

    foreach rx(L_REGIONS)
    {
        foreach tx({IOL_TILE_X_L,IOL_TILE_X_R})
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;

            f_y0  = 0 ;
            f_y1  = 0 ;
            f_y2  = 0 ;
            f_y3  = 0 ;
            f_y4  = 0 ;
            f_y5  = 0 ;
            f_y6  = 0 ;
            f_y7  = 0 ;
            f_y8  = 0 ;
            f_y9  = 0 ;
            f_y10 = 0 ;
            f_y11 = 0 ;
            f_y12 = 0 ;
            f_y13 = 0 ;
            f_y14 = 0 ;
            f_y15 = 0 ;
            f_y16 = 1 ;
            f_y17 = 0 ;
            f_y18 = 0 ;
            f_y19 = 0 ;
            f_y20 = 0 ;
            f_y21 = 0 ;
            f_y22 = 0 ;
            f_y23 = 0 ;
            f_y24 = 0 ;
            f_y25 = 0 ;
            f_y26 = 0 ;
            f_y27 = 0 ;
            f_y28 = 0 ;
            f_y29 = 0 ;

            if(rx==0||rx==4)
            {
                f_y16 = 0 ;
            }

            connect_SRB_bl_input_100h( tx,rx,tx_blsr,blsr,srb,f_srb,f_begin,f_y0,f_y1,f_y2,f_y3,f_y4,f_y5,f_y6,f_y7,f_y8,f_y9,f_y10,f_y11,f_y12,f_y13,f_y14,f_y15,f_y16,f_y17,f_y18,f_y19,f_y20,f_y21,f_y22,f_y23,f_y24,f_y25,f_y26,f_y27,f_y28,f_y29);
        }
    }

// for dqsl bl

    foreach rx(L_REGIONS)
    {
        foreach tx({IOL_TILE_X_L,IOL_TILE_X_R})
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            f_y0 = 1 ;

            tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
            
            connect_iockgate_bl_input_100h( rx, tx, tx_blsr , f_begin, blsr, f_y0);

            f_y0 = 1 ;
            f_y1 = 1 ;
            f_y2 = 1 ;

            tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
            
            connect_dqsl_bl_input_100h( rx, tx, tx_blsr , f_begin, blsr, f_y0,f_y1,f_y2);
        }
    }

// for iol_h iockdll bl

    foreach tx(L_IOL_TILES_X_UD)
    {
        int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
    
        connect_iol_bl_h_input( tx, tx_blsr, 0, 4, IOL_TILE_Y_U, IOL_TILE_Y_D, "IOLTB_TILE", "BLSR1_TILE", "BLSR1_TILE", 1);
    }
    foreach tx(L_BLSR_TILES_X)
    {
        int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
    
        connect_iol_bl_h_input( tx, tx_blsr, 0, 4, IOCKDLL_TILE_LOC_Y_U,IOCKDLL_TILE_LOC_Y_D, "IOCKDLL_TILE", "BLSR1_TILE", "BLSR1_TILE", 1);
    }

    foreach tx(L_IOL_TILES_X_UD)
    {
        blsr = (tx>tx_pll) ? "BLSR2_TILE" : "BLSR1_TILE" ;

        int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
    
        connect_iol_bl_h_input( tx, tx_blsr, 0, 4, IOL_TILE_Y_U, IOL_TILE_Y_D, "IOLTB_TILE", "BLSR1_TILE",blsr , 0);
    }
    foreach tx(L_BLSR_TILES_X)
    {
        blsr = (tx>tx_pll) ? "BLSR2_TILE" : "BLSR1_TILE" ;

        int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
    
        connect_iol_bl_h_input( tx, tx_blsr, 0, 4, IOCKDLL_TILE_LOC_Y_U,IOCKDLL_TILE_LOC_Y_D, "IOCKDLL_TILE", "BLSR1_TILE",blsr , 0);
    }

// for cramsl7206 bl

    foreach rx({0,4})
    {
        foreach tx({CRAMSL7206_TILE_X})
        {
            int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;

            flag_ud = (rx==0) ? 0 : 1 ;

            blsr =  (rx==0) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            ty = (rx==0) ? IOL_TILE_Y_D : IOL_TILE_Y_U ;
       
            connect_cramsl7206_bl_input( tx, ty, tx_blsr, rx, blsr, flag_ud, 0);
        }
    }

// for wlsr bl

    foreach rx(L_REGIONS)
    {
        f_y0 = 1 ;
    
        foreach tx({l_tx_wlsr})
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
            
            connect_wlsr_bl_input_100h( rx, tx, tx_blsr, f_begin, blsr, "WLSR_TILE", f_y0);
        }

        foreach tx({l_tx_wlsrd})
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
            
            connect_wlsr_bl_input_100h( rx, tx, tx_blsr, f_begin, blsr, "WLSRD_TILE", f_y0);
        }

        foreach tx({l_tx_wlsra})
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
            
            connect_wlsr_bl_input_100h( rx, tx, tx_blsr, f_begin, blsr, "WLSRA_TILE", f_y0);
        }

        foreach tx({l_tx_wlsr1})
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
            
            connect_wlsr_bl_input_100h( rx, tx, tx_blsr, f_begin, blsr, "WLSR1_TILE", f_y0);
        }
        foreach tx({l_tx_wlsr1b})
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
            
            connect_wlsr_bl_input_100h( rx, tx, tx_blsr, f_begin, blsr, "WLSR1_100H_TILE", f_y0);
        }

        foreach tx({l_tx_wlsr2})
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
            
            connect_wlsr_bl_input_100h( rx, tx, tx_blsr, f_begin, blsr, "WLSR2_TILE", f_y0);
        }
    }

// for pll bl

    foreach rx(L_REGIONS)
    {
        f_y0 = 1 ;
        f_y1 = 1 ;

        if(rx==0)
        {
            f_y0=0 ;
        }
        if(rx==4)
        {
            f_y1=0 ;
        }

        connect_PLL_bl_input_100h( rx, PLL_TILE_X, BLSR_TILE_X_L, "BLSR1_TILE", f_begin,f_y0,f_y1);
    }

// for uscm bl

    connect_USCM_bl_input( USCM_TILE_LOC_X, USCM1_TILE_LOC_Y, USCM0_TILE_LOC_Y, BLSR_TILE_X_L, 2, 3, "BLSR1_TILE", "BLSR1_TILE");

// for clkmux bl

    ty = 4 * NUM_TILES_REGION + PLL1_TILE_Y ;

    connect_clkmux_bl_input( PLL_TILE_X,ty,BLSR_TILE_X_L,4,"CLKMUX_100H_TILE","BLSR1_TILE",1,1);

    ty = 0 * NUM_TILES_REGION + 15 ;

    connect_clkmux_bl_input( PLL_TILE_X,ty,BLSR_TILE_X_L,0,"CLKMUX_100H_TILE","BLSR1_TILE",0,1);

// for pcie bl

    foreach rx({3,4})
    {
        srb = "PCIE_TILE" ;

        f_y0 = 0 ;
        f_y1 = 0 ;

        if(rx==3)       
        {
            f_y1=1 ;
        }

        if(rx==4)       
        {
            f_y0=1 ;
        }

        tx_blsr = BLSR_TILE_X_L ;
        
        blsr = "BLSR1_TILE";

        connect_pcie_bl_input( PCIE_TILE_L_X,PCIE_TILE_L_Y,rx,tx_blsr,blsr,srb,f_begin,f_y0,f_y1);
    }

// for hsst bl

    foreach rx({0,4})
    {
        srb = "HSST_TILE" ;

        int f_u = 0 ;
        int f_d = 0 ;

        if(rx==4)       
        {
            f_u=1 ;
        }
        if(rx==0)       
        {
            f_d=1 ;
        }

        foreach tx_blsr(L_BLSR_TILES_X)
        {

            blsr = (rx==0&&tx_blsr>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;
            data  = (tx_blsr>PLL_TILE_X) ? "DATA1" : "DATA0" ;
            datan = (tx_blsr>PLL_TILE_X) ? "DATAN1" : "DATAN0" ;

            connect_hsst_bl_input_100h( HSST_TILE_U_L_X,rx,tx_blsr,blsr,srb,data,datan,f_begin,f_u,f_d);
        }
    }


// for iob bl

    foreach rx(L_REGIONS)
    {
        ty = (rx<3) ? IOB1_TILE_Y : IOB4_TILE_Y ;

        foreach tx({IOB_TILE_X_L,IOB_TILE_X_R})
        {
            int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
            
            string iob = (rx<3&&tx<=tx_pll) ? "IOB3_TILE" :
                         (rx>=3&&tx<=tx_pll) ? "IOB4_TILE" :
                         (rx<3&&tx>tx_pll) ? "IOB1_TILE"  : "IOB5_TILE" ;

            data = (rx==0||rx==3) ? "DATA0" : (rx==1||rx==4) ? "DATA1" : "DATA2" ;
            datan = (rx==0||rx==3) ? "DATAN0" : (rx==1||rx==4) ? "DATAN1" : "DATAN2" ;
            data_ori="DATA";
            datan_ori="DATAN";
        
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            connect_iob_bl_input_100h( rx,tx, ty, tx_blsr, iob, blsr, data,datan,data_ori,datan_ori);
        }
    }

    foreach rx({0,4})
    {
        foreach tx({IOB_TILE_X_L,IOB_TILE_X_R})
        {
            int tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
            
            string iob = (rx==0) ? "IOB2_TILE" : "IOB0_TILE" ;

            ty = (rx==0) ? IOB_TILE_Y_D : IOB_TILE_Y_U ;

            data = (tx<=tx_pll) ? "DATA0" :  "DATA1"  ;
            datan = (tx<=tx_pll) ? "DATAN0" :  "DATAN1" ;

            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;
        
            connect_iob_bl_h_input_100h( rx,IOB0_TILE_X, ty, tx_blsr, iob, blsr, data,datan);
        }
    }
// for piomux bl

    foreach rx(L_REGIONS)
    {
        f_srb = 0 ;

        srb = "PIOMUX_TILE" ;

        foreach tx({PLL_TILE_X})
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            if(!(tx==BLSR_TILE_X_L||tx==BLSR_TILE_X_R))
            {
                f_y0 = 0 ;
                f_y1 = 0 ;
                f_y2 = 0 ;
                f_y3 = 0 ;
                f_y4 = 0 ;
                f_y5 = 0 ;
                f_y6 = 0 ;
                f_y7 = 0 ;
                f_y8 = 0 ;
                f_y9 = 0 ;
                f_y10 = 0 ;
                f_y11 = 0 ;
                f_y12 = 0 ;
                f_y13 = 0 ;
                f_y14 = 0 ;
                f_y15 = 0 ;
                f_y16 = 0 ;
                f_y17 = 0 ;
                f_y18 = 0 ;
                f_y19 = 0 ;
                f_y20 = 0 ;
                f_y21 = 0 ;
                f_y22 = 0 ;
                f_y23 = 0 ;
                f_y24 = 0 ;
                f_y25 = 0 ;
                f_y26 = 0 ;
                f_y27 = 0 ;
                f_y28 = 0 ;
                f_y29 = 0 ; 

                if(rx==0)
                {
                    f_y9 = 1 ;
                }
                if(rx==4)
                {
                    f_y20 = 1 ;
                }
                tx_blsr = (tx<=tx_pll) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
                
                connect_SRB_bl_input_100h( tx,rx,tx_blsr,blsr,srb,f_srb,f_begin,f_y0,f_y1,f_y2,f_y3,f_y4,f_y5,f_y6,f_y7,f_y8,f_y9,f_y10,f_y11,f_y12,f_y13,f_y14,f_y15,f_y16,f_y17,f_y18,f_y19,f_y20,f_y21,f_y22,f_y23,f_y24,f_y25,f_y26,f_y27,f_y28,f_y29);
            }
        }
    }

};//end of structure arch_nl connect_bl of PGL100H
/***************************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl100h_defs;
use pgl_funcs_connect_gs_wl_100h;

structure arch_nl connect_ccs_wl_bl of PGL100H
{
    int rx ;

    string blsr ;

    unsigned int tx = CCS_TILE_X;
    unsigned int ty = CCS_TILE_Y;

    foreach rx({0,4})
    {
        blsr = (rx==0) ? "BLSR2_TILE" : "BLSR1_TILE" ;

        int ty_wlsr = rx * NUM_TILES_REGION + MID_TILE_REGION - 1 ;

        connect_ccs_wl_bl_input_100h( rx, tx, ty, IOL_TILE_X_R, ty_wlsr, BLSR_TILE_X_R, "IOCKGATEDLL_100H_TILE", blsr);
    }
};//end of structure arch_nl connect_ccs_wl_bl of PGL100H
/***************************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl100h_defs;
use pgl_funcs_connect_gs_wl_100h;

structure arch_nl connect_analog_wl_bl of PGL100H
{
    int rx ;

    string blsr1,blsr2 ,analog;

    analog = "ANALOG_PGL100H_TILE" ;

    int tx = ANALOG_TILE_X;
    int ty = ANALOG_TILE_Y;

    blsr1 = "BLSR1_TILE" ;
    blsr2 = "BLSR2_TILE" ;

    int tx_blsr_l = BLSR_TILE_X_L ; 
    int tx_blsr_r = BLSR_TILE_X_R ;
    int tx_iock_l = IOL_TILE_X_L ;

    foreach rx({0,4})
    {
        int flag_d = (rx==0) ? 1 : 0 ;

        connect_analog_wl_bl_input_100h(tx,ty,rx,tx_blsr_l,tx_blsr_r,tx_iock_l,analog,blsr1,blsr2,flag_d );
    }

};//end of structure arch_nl connect_analog_wl_bl of PGL50H
/***************************************************************************************
****************************************************************************************/
//library work;
//use pgl_defs,pgl100h_defs;
//use pgl_funcs_place,pgl_funcs_connect_gs_wl;
//use pgl_funcs_connect_blsr,pgl100h_funcs;
//
//structure arch_nl connect_esd_tile of PGL100H
//{
//  int tx,ty;
//
//  foreach tx( {ESD_PGL35ES_TILE_X} )
//  {
//    foreach ty( {ESD_PGL35ES_TILE_Y} )
//    {
//      connect_esd_tile( tx, ty);
//    }
//  }
//
//
//};//end of structure arch_nl connect_esd_tile of PGL100H
/***************************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl100h_defs;
use pgl_funcs_connect_gs_wl;

structure arch_nl connect_MASK_BL2WL of PGL100H
{

    int rx,tx; 

    string blsr ;

    foreach rx(L_REGIONS)
    {
        foreach tx(L_WLSR_TILES_X)
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            string wlsr =  "WLSR_TILE" ;

            if(tx<=PLL_TILE_X)
            {
                connect_MASK_BL2WL(rx,tx,BLSR_TILE_X_L, blsr, wlsr, 1);
            }
            else
            {
                connect_MASK_BL2WL(rx,tx,BLSR_TILE_X_R, blsr, wlsr, 0);
            }
        }
        foreach tx(L_WLSR1_TILES_X)
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            string wlsr =  "WLSR1_TILE" ;

            if(tx<=PLL_TILE_X)
            {
                connect_MASK_BL2WL(rx,tx,BLSR_TILE_X_L, blsr, wlsr, 1);
            }
            else
            {
                connect_MASK_BL2WL(rx,tx,BLSR_TILE_X_R, blsr, wlsr, 0);
            }
        }
        foreach tx(L_WLSR1B_TILES_X)
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            string wlsr =  "WLSR1_100H_TILE" ;

            if(tx<=PLL_TILE_X)
            {
                connect_MASK_BL2WL(rx,tx,BLSR_TILE_X_L, blsr, wlsr, 1);
            }
            else
            {
                connect_MASK_BL2WL(rx,tx,BLSR_TILE_X_R, blsr, wlsr, 0);
            }
        }
        foreach tx({PLL_TILE_X})
        {
            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;

            string wlsr =  "WLSR2_TILE" ;

            if(tx<=PLL_TILE_X)
            {
                connect_MASK_BL2WL(rx,tx,BLSR_TILE_X_L, blsr, wlsr, 1);
            }
            else
            {
                connect_MASK_BL2WL(rx,tx,BLSR_TILE_X_R, blsr, wlsr, 0);
            }
        }
    }
}
/***************************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl100h_defs;
use pgl_funcs_connect_gs_wl;

structure arch_nl connect_MASK_WL2CLM of PGL100H
{

    int l_clms_tx[]=L_CLMS_TILES_X ;

    int tx_wlsr ,ty_clm,ty_tmp,tx, rx, ty;
    int tx_wlsr1 ,tx_wlsr1b;
    string wlsr ;

    foreach rx( L_REGIONS )
    {
        foreach tx(l_clms_tx)
        {
            if(tx!=PLL_TILE_X)
            {            
                foreach tx_wlsr1(L_WLSR1_TILES_X)
                {
                    if(tx==tx_wlsr1)
                    {
                        wlsr = "WLSR1_TILE";
                        break ;
                    }
                }
                foreach tx_wlsr1b(L_WLSR1B_TILES_X)
                {
                    if(tx==tx_wlsr1b)
                    {
                        wlsr = "WLSR1_100H_TILE";
                        break ;
                    }
                }
                foreach tx_wlsr(L_WLSR_TILES_X)
                {
                    if(tx==tx_wlsr)
                    {
                        wlsr = "WLSR_TILE";
                        break ;
                    }
                }
                foreach ty_clm({[2:15,17:30]})
                {
                    ty = ty_clm + rx * NUM_TILES_REGION ;

                    if(!(tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && (ty<=HSST_TILE_D_R_Y || ty>=HSST_TILE_U_L_Y - 1)))
                    {
                        if(!(tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X && ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y))
                        {
                            connect_MASK_WL2CLM(rx,tx,ty_clm,wlsr);
                        }
                    }
                }
                if(!(rx==NUM_REGION-1))
                {
                    ty = 31 + rx * NUM_TILES_REGION ;

                    if(!(tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && (ty<=HSST_TILE_D_R_Y || ty>=HSST_TILE_U_L_Y - 1)))
                    {
                        if(!(tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X && ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y))
                        {
                            connect_MASK_WL2CLM(rx,tx,31,wlsr);
                        }
                    }
                }
                if(!(rx==0))
                {
                    ty = 1 + rx * NUM_TILES_REGION ;

                    if(!(tx>=HSST_TILE_D_L_X && tx<HSST_TILE_D_R_X && (ty<=HSST_TILE_D_R_Y || ty>=HSST_TILE_U_L_Y - 1)))
                    {
                        if(!(tx>=PCIE_TILE_L_X && tx<=PCIE_TILE_R_X && ty>=PCIE_TILE_L_Y && ty<PCIE_TILE_R_Y))
                        {
                            connect_MASK_WL2CLM(rx,tx,1,wlsr);
                        }
                    }
                }
            }
        }
    } // end region loop

     wlsr = "WLSR2_TILE" ;
 
    int ty_tmp1 ;

    foreach rx ( L_REGIONS )
    {
        foreach ty_tmp ( {L_CLM_TILES_PLL_Y} )
        {
            ty = ty_tmp - rx * NUM_TILES_REGION ;

            foreach ty_tmp1({[1:31]})
            {
                if(ty==ty_tmp1)
                {
                    connect_MASK_WL2CLM(rx,PLL_TILE_X,ty,wlsr);                                       
                }
            }
        }
    }
 
};//end of structure arch_nl connect_MASK_WL2CLM of PGL100H
/***************************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl100h_defs;
use pgl100h_connect_wl_bl;

structure arch_nl connect_MASK_CLM2CLM of PGL100H
{
    int l_y[147:0] = {[154:141,139:125,124:110,108:94,93:79,77:63,62:48,46:32,31:17,15:2]};
    int l_x0[14:0]={22,21,20,17,16,15,12,11,10,7,6,5,4,3,2} ;
    int l_x1[13:0]={26,27,28,31,32,33,36,37,38,40,41,44,45,47} ;
    int l_x2[15:0]={72,70,69,66,65,64,62,61,58,57,55,54,51,50,49,48} ;
    int l_x3[11:0]={75,76,78,80,81,83,85,86,87,90,91,92} ;
    int l_x4[2:0]={26,27,28} ;
    int l_x5[9:0]={26,27,28,31,32,33,36,37,45,47} ;
    int l_x6[8:0]={26,27,28,31,32,33,36,37,45} ;
    int l_x7[6:0]={72,70,69,66,65,64,62} ;
    int l_x8[12:0]={26,27,28,31,32,33,36,37,38,40,41,44,45} ;

    int ty_plld=PLL0_TILE_Y ;
    int ty_pllu=PLL1_TILE_Y ;


    int ty, rx, index,index_y,f_access;

    foreach ty(L_CLM_TILES_Y)
    {
        foreach index({[14:0]})
        {
            connect_MASK_CLM2CLM_100h(index,ty,0,l_x0,l_x1,l_x2,l_x3,l_x4,l_x5,l_x6,l_x7,l_x8);
        }
        foreach index({[11:0]})
        {
            connect_MASK_CLM2CLM_100h(index,ty,3,l_x0,l_x1,l_x2,l_x3,l_x4,l_x5,l_x6,l_x7,l_x8);
        }
        if(ty>=HSST_TILE_U_L_Y-1||ty<=HSST_TILE_D_R_Y)
        {
            foreach index({[2:0]})
            {
                connect_MASK_CLM2CLM_100h(index,ty,4,l_x0,l_x1,l_x2,l_x3,l_x4,l_x5,l_x6,l_x7,l_x8);
            }
            foreach index({[6:0]})
            {
                connect_MASK_CLM2CLM_100h(index,ty,7,l_x0,l_x1,l_x2,l_x3,l_x4,l_x5,l_x6,l_x7,l_x8);
            }
        }
        else
        {
            foreach index({[15:0]})
            {
                connect_MASK_CLM2CLM_100h(index,ty,2,l_x0,l_x1,l_x2,l_x3,l_x4,l_x5,l_x6,l_x7,l_x8);
            }
        }

// For Pll 

        f_access = 0 ;

        if((ty>=15&&ty<=PLL0_TILE_Y+NUM_GRID_PLL_Y)||(ty>=PLL0_TILE_Y+NUM_TILES_REGION&&ty<=PLL0_TILE_Y+NUM_GRID_PLL_Y+NUM_TILES_REGION))
        {
            f_access = 1 ;
        }
        if((ty>=PLL0_TILE_Y+2*NUM_TILES_REGION&&ty<=PLL0_TILE_Y+NUM_GRID_PLL_Y+2*NUM_TILES_REGION)||(ty>=PLL0_TILE_Y+3*NUM_TILES_REGION&&ty<=PLL0_TILE_Y+3+3*NUM_TILES_REGION))
        {
            f_access = 1 ;
        }
        if(ty==PLL0_TILE_Y+5+4*NUM_TILES_REGION)
        {
            f_access = 1 ;
        }
        if(ty>=USCM0_TILE_Y&&ty<=USCM0_TILE_Y+3)
        {
            f_access = 1 ;
        }
        if(f_access==1)
        {
            foreach index({[12:0]})
            {
                connect_MASK_CLM2CLM_100h(index,ty,8,l_x0,l_x1,l_x2,l_x3,l_x4,l_x5,l_x6,l_x7,l_x8);
            }
        }

        f_access = 0 ;

        if(ty>=PLL0_TILE_Y+5+3*NUM_TILES_REGION&&ty<=PLL0_TILE_Y+NUM_GRID_PLL_Y+3*NUM_TILES_REGION)
        {
            f_access = 1 ;
        }
        if(ty>=PLL0_TILE_Y+4*NUM_TILES_REGION&&ty<=PLL0_TILE_Y+3+4*NUM_TILES_REGION)
        {
            f_access = 1 ;
        }
        if(f_access==1)
        {
            foreach index({[8:0]})
            {
                connect_MASK_CLM2CLM_100h(index,ty,6,l_x0,l_x1,l_x2,l_x3,l_x4,l_x5,l_x6,l_x7,l_x8);
            }
        }

        f_access = 0 ;

        if(ty>PLL0_TILE_Y+NUM_GRID_PLL_Y+3*NUM_TILES_REGION&&ty<PLL0_TILE_Y+4*NUM_TILES_REGION)
        {
            f_access = 1 ;
        }
        if(f_access==1)
        {
            foreach index({[9:0]})
            {
                connect_MASK_CLM2CLM_100h(index,ty,5,l_x0,l_x1,l_x2,l_x3,l_x4,l_x5,l_x6,l_x7,l_x8);
            }
        }

        f_access = 0 ;

        if((ty>=11&&ty<=14)||(ty>=21&&ty<=42)||(ty>=52&&ty<=73)||(ty>=83&&ty<=91)||(ty>=96&&ty<=104))
        {
            f_access = 1 ;
        }
        if(ty>=142&&ty<=145)
        {
            f_access = 1 ;
        }
        if(f_access==1)
        {
            foreach index({[13:0]})
            {
                connect_MASK_CLM2CLM_100h(index,ty,1,l_x0,l_x1,l_x2,l_x3,l_x4,l_x5,l_x6,l_x7,l_x8);
            }
        }
    }

};//end of structure arch_nl connect_MASK_CLM2CLM of PGL100H
/***************************************************************************************
****************************************************************************************/
library work;
use pgl_defs,pgl100h_defs;
use pgl_funcs_connect_gs_wl_100h;

structure arch_nl connect_MASK_CLM2BL of PGL100H
{
    int rx, f_begin, tx, f_srb,tx_blsr; 
    string blsr,mask_data;

    int f_y0,f_y1,f_y2,f_y3,f_y4,f_y5,f_y6,f_y7,f_y8,f_y9,f_y10,f_y11,f_y12,f_y13,f_y14,f_y15,f_y16,f_y17,f_y18,f_y19,f_y20,f_y21,f_y22,f_y23,f_y24,f_y25,f_y26,f_y27,f_y28,f_y29 ;

    f_begin = NUM_TILE_START_Y ;

    f_srb = 0 ;

    foreach rx(L_REGIONS)
    {
        foreach tx({22,26,72,75})
        {
            f_y0 = 1 ;
            f_y1 = 1 ;
            f_y2 = 1 ;
            f_y3 = 1 ;
            f_y4 = 1 ;
            f_y5 = 1 ;
            f_y6 = 1 ;
            f_y7 = 1 ;
            f_y8 = 1 ;
            f_y9 = 1 ;
            f_y10 = 1 ;
            f_y11 = 1 ;
            f_y12 = 1 ;
            f_y13 = 1 ;
            f_y14 = 1 ;
            f_y15 = 1 ;
            f_y16 = 1 ;
            f_y17 = 1 ;
            f_y18 = 1 ;
            f_y19 = 1 ;
            f_y20 = 1 ;
            f_y21 = 1 ;
            f_y22 = 1 ;
            f_y23 = 1 ;
            f_y24 = 1 ;
            f_y25 = 1 ;
            f_y26 = 1 ;
            f_y27 = 1 ;
            f_y28 = 1 ;
            f_y29 = 1 ; 

            if(rx==0)
            {
                f_y0 = 0 ;
            }
            if(rx==NUM_REGION-1)
            {
                f_y29 = 0 ;                
            }

            tx_blsr = (tx<=PLL_TILE_X) ? BLSR_TILE_X_L : BLSR_TILE_X_R ;
            mask_data = (tx<BLSR_TILE_X_L||(tx>PLL_TILE_X&&tx<BLSR_TILE_X_R)) ? "MASK_DATA_L" : "MASK_DATA_R" ;

            string tielo = (rx==0) ? "TIEL2" : "TIEL1" ;

            blsr = (rx==0&&tx>PLL_TILE_X) ? "BLSR2_TILE" : "BLSR1_TILE" ;
            
            connect_MASK_CLM2BL_100h( tx,rx,tx_blsr,blsr,mask_data,f_srb,f_begin,tielo,f_y0,f_y1,f_y2,f_y3,f_y4,f_y5,f_y6,f_y7,f_y8,f_y9,f_y10,f_y11,f_y12,f_y13,f_y14,f_y15,f_y16,f_y17,f_y18,f_y19,f_y20,f_y21,f_y22,f_y23,f_y24,f_y25,f_y26,f_y27,f_y28,f_y29);
        }
    }
}

