*****************************************************************

  Device    [devDQ_S]

  Author    [guoxi]

  Abstract  [D Part of CLMS]

  Revision History:

********************************************************************************/
gate
device devDQ_S : device devD_S
{
    parameter
    (
        config string  CP_GRS_EN    = "FALSE",  
        config string  CP_Q3MUX_SEL := "MX",       //"YX":Y3 "MX":M3 "SRQ":QP1
        config string  CP_RS_MODE   = "ASYNC",    //"SYNC" "ASYNC" - CLMS Global
        config string  CP_FF3_RS    = "SET",      //"RESET" "SET"
        config string  CP_CEMUX_SEL = "LOCAL",    //"LOCAL":CE; "CHAIN":CEIN
        config string  CP_RSMUX_SEL = "LOCAL",    //"LOCAL":RS; "CHAIN":RSIN
        config string  CP_LRS_EN  = "TRUE",      //"Disable"; "Enable"
        config string  CP_LRS_POL = "FALSE",      //"RS"; "Invert RS" - CLMS Global
        config string  CP_LCE_EN  = "TRUE",      // "Disable"; "Enable"
        config string  CP_LCE_POL = "FALSE",      // "CE";  "Invert CE" - CLMS Global
        config string  CP_CLK_POL = "FALSE"       //"CLK"; "Invert CLK" - CLMS Global
    );
    
    port
    (
        output   Q3,  
        input    M3,
        input    RS,
        input    CE,
        input    CLK,
        input    RSCI,
        input    CECI,
        output   RSCO,
        output   CECO 
    );
}; // end of device devDQ_S


/*******************************************************************************

  Device    [devDQ_S]

  Author    [guoxi]

  Abstract  []

  Revision History:

********************************************************************************/
structure netlist of devDQ_S
{
    // Wires for input ports
    wire ntM3;
    wire ntRS;
    wire ntCE;
    wire ntCLK;  
    wire ntRSCI;
    wire ntCECI;

    // Wires connecting to output ports
    wire ntQ3;
    wire ntCECO;
    wire ntRSCO;

    // Internal wires
    wire ntQD3;  
    wire ntCLKCO;
    wire ntRS_P;
    wire ntCE_P;
    
    //
    // Connection to ports
    //
    ntM3      <= M3;

    ntRS      <= RS;
    ntCE      <= CE;
    ntCLK     <= CLK;
    ntRSCI    <= RSCI;
    ntCECI    <= CECI;

    Q3        <= ntQ3;   
    RSCO      <= ntRSCO;
    CECO      <= ntCECO;
    
    //
    // Instances. FGA section
    //
   
   device QMUX  Q3MUX
        parameter map
        (
            CP_OUT_SEL => CP_Q3MUX_SEL
        )
        port map
        (
            Q    => ntQD3,
            MX   => ntM3
        );
    
    device FF FF3
        parameter map
        (
            CP_GRS_EN  => CP_GRS_EN,
            CP_RS_MODE => CP_RS_MODE,
            CP_FF_RS   => CP_FF3_RS
        )
        port map
        (
            Q   => ntQ3,
            D   => ntQD3,
            CE  => ntCECO,
            CLK => ntCLKCO,
            RS  => ntRSCO
        );

    device MUX2_P  CEMUX
        parameter map
        (
            SEL => CP_CEMUX_SEL
        )
        port map
        (
            DOUT  => ntCECO,
            DI1   => ntCECI,
            DI0   => ntCE_P
        );
    
    device MUX2_P  RSMUX
        parameter map
        (
            SEL => CP_RSMUX_SEL
        )
        port map
        (
            DOUT  => ntRSCO,
            DI1   => ntRSCI,
            DI0   => ntRS_P
        );

    device CLK_POLMUX  CLKPOLMUX
        parameter map
        (
            CP_CLK_POL => CP_CLK_POL
        )
        port map
        (
            Y  => ntCLKCO,
            IN => ntCLK
        );
        
    device LCE_POLMUX  LCEPOLMUX
        parameter map
        (
            CP_LCE_EN  => CP_LCE_EN,
            CP_LCE_POL => CP_LCE_POL
        )
        port map
        (
            Y  => ntCE_P,
            IN => ntCE
        );
        
    device LRS_POLMUX  LRSPOLMUX
        parameter map
        (
            CP_LRS_EN  => CP_LRS_EN,
            CP_LRS_POL => CP_LRS_POL
        )
        port map
        (
            Y  => ntRS_P,
            IN => ntRS
        ); 
}; // end of structure netlist of devDQ_S

