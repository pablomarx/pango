tarted
grid
device APMMUX
{
    // grid_property_def_start
    // grid_property_def_end

    parameter
    (
        config bit CP_XRST[1:0] = 2'b00,
        config bit CP_YRST[1:0] = 2'b00,
        config bit CP_ZRST[1:0] = 2'b00,
        config bit CP_MRST[1:0] = 2'b00,
        config bit CP_PRST[1:0] = 2'b00,
        config bit CP_PRERST[1:0] = 2'b00,
        config bit CP_MODEXRST[1:0] = 2'b00,
        config bit CP_MODEYRST[1:0] = 2'b00,
        config bit CP_MODEZRST[1:0] = 2'b00,
        config bit CP_XCE[1:0] = 2'b00,
        config bit CP_YCE[1:0] = 2'b00,
        config bit CP_ZCE[1:0] = 2'b00,
        config bit CP_MCE[1:0] = 2'b00,
        config bit CP_PCE[1:0] = 2'b00,
        config bit CP_PRECE[1:0] = 2'b00,
        config bit CP_MODEXCE[1:0] = 2'b00,
        config bit CP_MODEYCE[1:0] = 2'b00,
        config bit CP_MODEZCE[1:0] = 2'b00
    );
    port
    (
// configuration_body_def_on


    config input SC_XRST[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_XRST[1],SC_XRST[0]" */,

    config input SC_YRST[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_YRST[1],SC_YRST[0]" */,

    config input SC_ZRST[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ZRST[1],SC_ZRST[0]" */,

    config input SC_MRST[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_MRST[1],SC_MRST[0]" */,

    config input SC_PRST[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PRST[1],SC_PRST[0]" */,

    config input SC_PRERST[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PRERST[1],SC_PRERST[0]" */,

    config input SC_MODEXRST[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_MODEXRST[1],SC_MODEXRST[0]" */,

    config input SC_MODEYRST[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_MODEYRST[1],SC_MODEYRST[0]" */,

    config input SC_MODEZRST[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_MODEZRST[1],SC_MODEZRST[0]" */,

    config input SC_XCE[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_XCE[1],SC_XCE[0]" */,

    config input SC_YCE[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_YCE[1],SC_YCE[0]" */,

    config input SC_ZCE[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ZCE[1],SC_ZCE[0]" */,

    config input SC_MCE[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_MCE[1],SC_MCE[0]" */,

    config input SC_PCE[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PCE[1],SC_PCE[0]" */,

    config input SC_PRECE[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PRECE[1],SC_PRECE[0]" */,

    config input SC_MODEXCE[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_MODEXCE[1],SC_MODEXCE[0]" */,

    config input SC_MODEYCE[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_MODEYCE[1],SC_MODEYCE[0]" */,

    config input SC_MODEZCE[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_MODEZCE[1],SC_MODEZCE[0]" */,

// configuration_body_def_end

        input RST[2:0] = 3'b111,
        input CE[2:0] = 3'b111,
        output RST_X,
        output CE_X,
        output RST_Y,
        output CE_Y,
        output RST_Z,
        output CE_Z,
        output RST_PRE,
        output CE_PRE,
        output RST_M,
        output CE_M,
        output RST_P,
        output CE_P,
        output RST_MODEX,
        output CE_MODEX,
        output RST_MODEY,
        output CE_MODEY,
        output RST_MODEZ,
        output CE_MODEZ
    );
};
//grid device end

//grid device structure netlist started

structure netlist of APMMUX
{
    routing
    {
        ( CE[0] --> CE_M ) = 150;
        ( CE[0] --> CE_MODEX ) = 150;
        ( CE[0] --> CE_MODEY ) = 150;
        ( CE[0] --> CE_MODEZ ) = 150;
        ( CE[0] --> CE_P ) = 150;
        ( CE[0] --> CE_PRE ) = 150;
        ( CE[0] --> CE_X ) = 150;
        ( CE[0] --> CE_Y ) = 150;
        ( CE[0] --> CE_Z ) = 150;
        ( CE[1] --> CE_M ) = 150;
        ( CE[1] --> CE_MODEX ) = 150;
        ( CE[1] --> CE_MODEY ) = 150;
        ( CE[1] --> CE_MODEZ ) = 150;
        ( CE[1] --> CE_P ) = 150;
        ( CE[1] --> CE_PRE ) = 150;
        ( CE[1] --> CE_X ) = 150;
        ( CE[1] --> CE_Y ) = 150;
        ( CE[1] --> CE_Z ) = 150;
        ( CE[2] --> CE_M ) = 150;
        ( CE[2] --> CE_MODEX ) = 150;
        ( CE[2] --> CE_MODEY ) = 150;
        ( CE[2] --> CE_MODEZ ) = 150;
        ( CE[2] --> CE_P ) = 150;
        ( CE[2] --> CE_PRE ) = 150;
        ( CE[2] --> CE_X ) = 150;
        ( CE[2] --> CE_Y ) = 150;
        ( CE[2] --> CE_Z ) = 150;
        ( RST[0] --> RST_M ) = 150;
        ( RST[0] --> RST_MODEX ) = 150;
        ( RST[0] --> RST_MODEY ) = 150;
        ( RST[0] --> RST_MODEZ ) = 150;
        ( RST[0] --> RST_P ) = 150;
        ( RST[0] --> RST_PRE ) = 150;
        ( RST[0] --> RST_X ) = 150;
        ( RST[0] --> RST_Y ) = 150;
        ( RST[0] --> RST_Z ) = 150;
        ( RST[1] --> RST_M ) = 150;
        ( RST[1] --> RST_MODEX ) = 150;
        ( RST[1] --> RST_MODEY ) = 150;
        ( RST[1] --> RST_MODEZ ) = 150;
        ( RST[1] --> RST_P ) = 150;
        ( RST[1] --> RST_PRE ) = 150;
        ( RST[1] --> RST_X ) = 150;
        ( RST[1] --> RST_Y ) = 150;
        ( RST[1] --> RST_Z ) = 150;
        ( RST[2] --> RST_M ) = 150;
        ( RST[2] --> RST_MODEX ) = 150;
        ( RST[2] --> RST_MODEY ) = 150;
        ( RST[2] --> RST_MODEZ ) = 150;
        ( RST[2] --> RST_P ) = 150;
        ( RST[2] --> RST_PRE ) = 150;
        ( RST[2] --> RST_X ) = 150;
        ( RST[2] --> RST_Y ) = 150;
        ( RST[2] --> RST_Z ) = 150;

    }
};
//grid device structure netlist end
//grid device configure body started

configuration cfg of APMMUX
{

 // assign config body begin
    SC_XRST := CP_XRST;
    SC_YRST := CP_YRST;
    SC_ZRST := CP_ZRST;
    SC_MRST := CP_MRST;
    SC_PRST := CP_PRST;
    SC_PRERST := CP_PRERST;
    SC_MODEXRST := CP_MODEXRST;
    SC_MODEYRST := CP_MODEYRST;
    SC_MODEZRST := CP_MODEZRST;
    SC_XCE := CP_XCE;
    SC_YCE := CP_YCE;
    SC_ZCE := CP_ZCE;
    SC_MCE := CP_MCE;
    SC_PCE := CP_PCE;
    SC_PRECE := CP_PRECE;
    SC_MODEXCE := CP_MODEXCE;
    SC_MODEYCE := CP_MODEYCE;
    SC_MODEZCE := CP_MODEZCE;
// assign config body end
    if ( CE[0] --> CE_X )
    {
        SC_XCE := 2'b01;
    }

    if ( CE[1] --> CE_X )
    {
        SC_XCE := 2'b10;
    }

    if ( CE[2] --> CE_X )
    {
        SC_XCE := 2'b11;
    }

    if ( RST[0] --> RST_X )
    {
        SC_XRST := 2'b01;
    }

    if ( RST[1] --> RST_X )
    {
        SC_XRST := 2'b10;
    }

    if ( RST[2] --> RST_X )
    {
        SC_XRST := 2'b11;
    }

    if ( CE[0] --> CE_Y )
    {
        SC_YCE := 2'b01;
    }

    if ( CE[1] --> CE_Y )
    {
        SC_YCE := 2'b10;
    }

    if ( CE[2] --> CE_Y )
    {
        SC_YCE := 2'b11;
    }

    if ( RST[0] --> RST_Y )
    {
        SC_YRST := 2'b01;
    }

    if ( RST[1] --> RST_Y )
    {
        SC_YRST := 2'b10;
    }

    if ( RST[2] --> RST_Y )
    {
        SC_YRST := 2'b11;
    }

    if ( CE[0] --> CE_Z )
    {
        SC_ZCE := 2'b01;
    }

    if ( CE[1] --> CE_Z )
    {
        SC_ZCE := 2'b10;
    }

    if ( CE[2] --> CE_Z )
    {
        SC_ZCE := 2'b11;
    }

    if ( RST[0] --> RST_Z )
    {
        SC_ZRST := 2'b01;
    }

    if ( RST[1] --> RST_Z )
    {
        SC_ZRST := 2'b10;
    }

    if ( RST[2] --> RST_Z )
    {
        SC_ZRST := 2'b11;
    }

    if ( CE[0] --> CE_PRE )
    {
        SC_PRECE := 2'b01;
    }

    if ( CE[1] --> CE_PRE )
    {
        SC_PRECE := 2'b10;
    }

    if ( CE[2] --> CE_PRE )
    {
        SC_PRECE := 2'b11;
    }

    if ( RST[0] --> RST_PRE )
    {
        SC_PRERST := 2'b01;
    }

    if ( RST[1] --> RST_PRE )
    {
        SC_PRERST := 2'b10;
    }

    if ( RST[2] --> RST_PRE )
    {
        SC_PRERST := 2'b11;
    }

    if ( CE[0] --> CE_M )
    {
        SC_MCE := 2'b01;
    }

    if ( CE[1] --> CE_M )
    {
        SC_MCE := 2'b10;
    }

    if ( CE[2] --> CE_M )
    {
        SC_MCE := 2'b11;
    }

    if ( RST[0] --> RST_M )
    {
        SC_MRST := 2'b01;
    }

    if ( RST[1] --> RST_M )
    {
        SC_MRST := 2'b10;
    }

    if ( RST[2] --> RST_M )
    {
        SC_MRST := 2'b11;
    }

    if ( CE[0] --> CE_P )
    {
        SC_PCE := 2'b01;
    }

    if ( CE[1] --> CE_P )
    {
        SC_PCE := 2'b10;
    }

    if ( CE[2] --> CE_P )
    {
        SC_PCE := 2'b11;
    }

    if ( RST[0] --> RST_P )
    {
        SC_PRST := 2'b01;
    }

    if ( RST[1] --> RST_P )
    {
        SC_PRST := 2'b10;
    }

    if ( RST[2] --> RST_P )
    {
        SC_PRST := 2'b11;
    }

    if ( CE[0] --> CE_MODEX )
    {
        SC_MODEXCE := 2'b01;
    }

    if ( CE[1] --> CE_MODEX )
    {
        SC_MODEXCE := 2'b10;
    }

    if ( CE[2] --> CE_MODEX )
    {
        SC_MODEXCE := 2'b11;
    }

    if ( RST[0] --> RST_MODEX )
    {
        SC_MODEXRST := 2'b01;
    }

    if ( RST[1] --> RST_MODEX )
    {
        SC_MODEXRST := 2'b10;
    }

    if ( RST[2] --> RST_MODEX )
    {
        SC_MODEXRST := 2'b11;
    }

    if ( CE[0] --> CE_MODEY )
    {
        SC_MODEYCE := 2'b01;
    }

    if ( CE[1] --> CE_MODEY )
    {
        SC_MODEYCE := 2'b10;
    }

    if ( CE[2] --> CE_MODEY )
    {
        SC_MODEYCE := 2'b11;
    }

    if ( RST[0] --> RST_MODEY )
    {
        SC_MODEYRST := 2'b01;
    }

    if ( RST[1] --> RST_MODEY )
    {
        SC_MODEYRST := 2'b10;
    }

    if ( RST[2] --> RST_MODEY )
    {
        SC_MODEYRST := 2'b11;
    }

    if ( CE[0] --> CE_MODEZ )
    {
        SC_MODEZCE := 2'b01;
    }

    if ( CE[1] --> CE_MODEZ )
    {
        SC_MODEZCE := 2'b10;
    }

    if ( CE[2] --> CE_MODEZ )
    {
        SC_MODEZCE := 2'b11;
    }

    if ( RST[0] --> RST_MODEZ )
    {
        SC_MODEZRST := 2'b01;
    }

    if ( RST[1] --> RST_MODEZ )
    {
        SC_MODEZRST := 2'b10;
    }

    if ( RST[2] --> RST_MODEZ )
    {
        SC_MODEZRST := 2'b11;
    }

};

//grid device configure body end

