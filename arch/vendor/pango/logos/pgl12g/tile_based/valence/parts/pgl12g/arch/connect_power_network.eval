*****************************************************************
********************************************************************************/
library work;
use pgl_defs, pgl12g_defs;

structure arch_nl connect_power_network of devPGL12G
{
    // Tile index variable

    &wire ntRef_ntVDD11_CLK = <wire ntVDD11_CLK>;
    &wire ntRef_ntVSS_CLK = <wire ntVSS_CLK>;
    &wire ntRef_ntVDD11 = <wire ntVDD11>;
    &wire ntRef_ntVSS = <wire ntVSS>;
    &wire ntRef_ntVDDM = wire VDDM;
    &wire ntRef_ntVDD33 = <wire ntVDD33>;
    &wire ntRef_ntVDD33A = <wire ntVDD33A>;
    &wire ntRef_ntVDD33A_PLL = <wire ntVDD33A_PLL of architecture>;
    &wire ntRef_ntVSSA = <wire ntVSSA>;
    &wire ntRef_ntVSSA_PLL0 = <wire ntVSSA_PLL0 of architecture>;
    &wire ntRef_ntVSSA_PLL1 = <wire ntVSSA_PLL1 of architecture>;
    &wire ntRef_ntVSSA_PLL2 = <wire ntVSSA_PLL2 of architecture>;
    &wire ntRef_ntVSSA_PLL3 = <wire ntVSSA_PLL3 of architecture>;
    &wire ntRef_ntVDDIOCFG = <wire ntVDDIOCFG>;
    &wire ntRef_ntVSSIOCFG = <wire ntVSSIOCFG>;
    &wire ntRef_ntVDDEFUSE = <wire ntVDDEFUSE>;

    &wire ntRef_ntVDDIOL0 = <wire ntVDDIOL0 of architecture>;
    &wire ntRef_ntVDDIOL1 = <wire ntVDDIOL1 of architecture>;
    &wire ntRef_ntVDDIOR0 = <wire ntVDDIOR0 of architecture>;
    &wire ntRef_ntVDDIOR1 = <wire ntVDDIOR1 of architecture>;
    &wire ntRef_ntVSSIOL0 = <wire ntVSSIOL0 of architecture>;
    &wire ntRef_ntVSSIOL1 = <wire ntVSSIOL1 of architecture>;
    &wire ntRef_ntVSSIOR0 = <wire ntVSSIOR0 of architecture>;
    &wire ntRef_ntVSSIOR1 = <wire ntVSSIOR1 of architecture>;

    unsigned int tx, ty;
    unsigned int sx,sy;
    unsigned int tmp_ty;
    
    foreach tx ( L_SRB_TILES_X )
    {
        foreach ty ( L_SRB_TILES_Y )
        {
          unsigned int sx,sy;
          sx = tx * NUM_GRID_X;
          sy = ty * NUM_GRID_Y;

          unsigned int tmp_ty;
          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }
          if(!((tx>CCS_TILE_X) && (tx<=(CCS_TILE_X+NUM_GRID_CCS_X/NUM_GRID_X)) && (ty>=CCS_TILE_Y)))
          {

              connect
                (
                   <pin VDD11 of <device SRB_TILE @ [sx,sy]>> => ntRef_ntVDD11,
                   <pin VSS of <device SRB_TILE @ [sx,sy]>>   => ntRef_ntVSS,
                   <pin VDDM of <device SRB_TILE @ [sx,sy]>>  => ntRef_ntVDDM
                );

          }
        } 
    }



    foreach tx ( L_CLMS_TILES_X )
    {
        foreach ty ( L_CLM_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          unsigned int tmp_ty;
          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }
          if(!((tx>=CCS_TILE_X) && (tx<=(CCS_TILE_X+NUM_GRID_CCS_X/NUM_GRID_X)) && (ty>=CCS_TILE_Y)))
          {
            if((tx==PLL_TILE_X) && (((ty>=PLL_TILE0_Y) && (ty<=PLL_TILE0_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1)) || ((ty>=PLL_TILE1_Y) && (ty<=PLL_TILE1_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1)) || ((ty>=PLL_TILE2_Y) && (ty<=PLL_TILE2_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1)) || ((ty>=PLL_TILE3_Y) && (ty<=PLL_TILE3_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1)))) 
            {      
            }  
            else if((tx == USCM_TILE_X) && (((ty >= USCM_TILE0_Y) && (ty <= USCM_TILE0_Y + NUM_GRID_USCM_Y/NUM_GRID_Y - 1)) || ((ty >= USCM_TILE1_Y) && (ty <= USCM_TILE1_Y + NUM_GRID_USCM_Y/NUM_GRID_Y - 1))))
            {
            }
            else
            {
              connect
                (
                   <pin VDD11 of <device CLMS_TILE @ [sx,sy]>> => ntRef_ntVDD11,
                   <pin VSS of <device CLMS_TILE @ [sx,sy]>>   => ntRef_ntVSS,
                   <pin VDDM of <device CLMS_TILE @ [sx,sy]>>  => ntRef_ntVDDM
                );
            }
          }
        } 
    }

    foreach tx ( L_CLMA_TILES_X )
    {
        foreach ty ( L_CLM_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          unsigned int tmp_ty;
          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }
          if(!((tx>=CCS_TILE_X) && (tx<=(CCS_TILE_X+NUM_GRID_CCS_X/NUM_GRID_X)) && (ty>=CCS_TILE_Y)))
          {
            if((tx==PLL_TILE_X) && (((ty>=PLL_TILE0_Y) && (ty<=PLL_TILE0_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1)) || ((ty>=PLL_TILE1_Y) && (ty<=PLL_TILE1_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1)) || ((ty>=PLL_TILE2_Y) && (ty<=PLL_TILE2_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1)) || ((ty>=PLL_TILE3_Y) && (ty<=PLL_TILE3_Y+NUM_GRID_PLL_Y/NUM_GRID_Y-1)))) 
            {      
            }  
            else if((tx == USCM_TILE_X) && (((ty >= USCM_TILE0_Y) && (ty <= USCM_TILE0_Y + NUM_GRID_USCM_Y/NUM_GRID_Y - 1)) || ((ty >= USCM_TILE1_Y) && (ty <= USCM_TILE1_Y + NUM_GRID_USCM_Y/NUM_GRID_Y - 1))))
            {
            }
            else
            {
              connect
                (
                   <pin VDD11 of <device CLMA_TILE @ [sx,sy]>> => ntRef_ntVDD11,
                   <pin VSS of <device CLMA_TILE @ [sx,sy]>>   => ntRef_ntVSS,
                   <pin VDDM of <device CLMA_TILE @ [sx,sy]>>  => ntRef_ntVDDM
                );
            }
          }
        } 
    }

    int sx_ccs = CCS_TILE_X * NUM_GRID_X + 2;
    int sy_ccs = CCS_TILE_Y * NUM_GRID_Y;

    for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
    {
      sy_ccs = sy_ccs + NUM_GRID_WLSR_Y - NUM_GRID_Y;
    }
    connect
      (
        <pin VDD11 of <device CCS_TILE @ [sx_ccs,sy_ccs]>>   => ntRef_ntVDD11,
        <pin VSS of <device CCS_TILE @ [sx_ccs,sy_ccs]>>     => ntRef_ntVSS,
        <pin VDDM of <device CCS_TILE @ [sx_ccs,sy_ccs]>>    => ntRef_ntVDDM,
        <pin VDD33 of <device CCS_TILE @ [sx_ccs,sy_ccs]>>   => ntRef_ntVDD33,
        <pin VDD33A of <device CCS_TILE @ [sx_ccs,sy_ccs]>>  => ntRef_ntVDD33A,
        <pin VSSA of <device CCS_TILE @ [sx_ccs,sy_ccs]>>    => ntRef_ntVSSA,
        <pin VDDIOCFG of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntVDDIOCFG,
        <pin VSSIOCFG of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntVSSIOCFG,
        <pin VDDEFUSE of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntVDDEFUSE
      );

    foreach tx ( L_DRM_TILES_X )
    {
        foreach ty ( L_DRM_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          if(!((tx>=CCS_TILE_X) && (tx<=CCS_TILE_X+NUM_GRID_CCS_X/NUM_GRID_X) && (ty>=CCS_TILE_Y)))
          {
            connect
              (
                <pin VDD11 of <device DRM_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
                <pin VSS of <device DRM_TILE @ [sx,sy]>>    => ntRef_ntVSS,
                <pin VDDM of <device DRM_TILE @ [sx,sy]>>   => ntRef_ntVDDM
              );
          } 
        }
    } 

    foreach tx ( L_APM_TILES_X )
    {
        foreach ty ( L_APM_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          connect
            (
              <pin VDD11 of <device APM_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device APM_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device APM_TILE @ [sx,sy]>>   => ntRef_ntVDDM
            );
        }
    } 

    unsigned int L_PLL_TILES_X[] = {PLL_TILE_X};
    unsigned int L_PLL_TILES_Y[] = {PLL_TILE0_Y,PLL_TILE1_Y,PLL_TILE2_Y,PLL_TILE3_Y};

    foreach tx ( L_PLL_TILES_X )
    {
        foreach ty ( L_PLL_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }
          connect
            (
              <pin VDD33 of <device PLL_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
              <pin VDD11 of <device PLL_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device PLL_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device PLL_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
              <pin VDD33A of <device PLL_TILE @ [sx,sy]>> => ntRef_ntVDD33A_PLL,
              <pin VSSA of <device PLL_TILE @ [sx,sy]>>   => (ty==PLL_TILE0_Y) ? ntRef_ntVSSA_PLL0 :
                                                              (ty==PLL_TILE1_Y) ? ntRef_ntVSSA_PLL1 :
                                                              (ty==PLL_TILE2_Y) ? ntRef_ntVSSA_PLL2 : ntRef_ntVSSA_PLL3 
            );
        }     
    }

    unsigned int L_USCM_TILES_X[] = {USCM_LOC_X};
    unsigned int L_USCM_TILES_Y[] = {USCM0_LOC_Y, USCM1_LOC_Y};
    
    foreach tx ( L_USCM_TILES_X )
    {
        foreach ty ( L_USCM_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }
          connect
            (
              <pin VDD33 of <device USCM_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
              <pin VDD11 of <device USCM_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device USCM_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device USCM_TILE @ [sx,sy]>>   => ntRef_ntVDDM
            );
        }      
    } 

    foreach tx ( L_IOL_TILES_X )
    {
        foreach ty ( L_IOL_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }
          connect
            (
              <pin VDD11_CLK of <device IOL_TILE @ [sx,sy]>>  => ntRef_ntVDD11_CLK,
              <pin VSS_CLK of <device IOL_TILE @ [sx,sy]>>  => ntRef_ntVSS_CLK,
              <pin VDD11 of <device IOL_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device IOL_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device IOL_TILE @ [sx,sy]>>   => ntRef_ntVDDM
            );
        }
        foreach ty ( L_IOCKGATEDLL_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }
          connect
            (
              <pin VDD11_CLK of <device IOCKGATEDLL_TILE @ [sx,sy]>>  => ntRef_ntVDD11_CLK,
              <pin VSS_CLK of <device IOCKGATEDLL_TILE @ [sx,sy]>>  => ntRef_ntVSS_CLK,
              <pin VDD11 of <device IOCKGATEDLL_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device IOCKGATEDLL_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDD33 of <device IOCKGATEDLL_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
              <pin VDDM of <device IOCKGATEDLL_TILE @ [sx,sy]>>   => ntRef_ntVDDM
            );
        } 
        foreach ty ( L_DQSL_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }
          connect
            (
              <pin VDD11 of <device DQSL_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device DQSL_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device DQSL_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
              <pin VDD11_CLK of <device DQSL_TILE @ [sx,sy]>>   => ntRef_ntVDD11_CLK,
              <pin VSS_CLK of <device DQSL_TILE @ [sx,sy]>>   => ntRef_ntVSS_CLK
            );
        }
        foreach ty ( L_CRAMSL2_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }
          connect
            (
              <pin VDDM of <device CRAMSL2_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
              <pin VSS of <device CRAMSL2_TILE @ [sx,sy]>>    => ntRef_ntVSS
            );
        }      
        foreach ty ( L_RLYBUFS5_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 2;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }
          connect
            (
              <pin VDD11 of <device RLYBUFS5_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device RLYBUFS5_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device RLYBUFS5_TILE @ [sx,sy]>>   => ntRef_ntVDDM
            );
        }  
    } 



//    foreach tx ( L_IOB_TILES_X )
//    {
        foreach ty ( L_IOB_TILES_Y )
        {
          sx = 32 * NUM_GRID_X;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }
          connect
            (
              <pin VDD11 of <device IOB_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device IOB_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device IOB_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
              <pin VDD33 of <device IOB_TILE @ [sx,sy]>>  => ntRef_ntVDD33
            );
        }  
//    } 

//    foreach tx ( L_IOB_WO_TILES_X )
//    {
        foreach ty ( L_IOB_TILES_Y )
        {
          sx = 0 * NUM_GRID_X;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }
          connect
            (
              <pin VDD11 of <device IOB_WO_ODIFF_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device IOB_WO_ODIFF_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device IOB_WO_ODIFF_TILE @ [sx,sy]>>   => ntRef_ntVDDM,
              <pin VDD33 of <device IOB_WO_ODIFF_TILE @ [sx,sy]>>  => ntRef_ntVDD33
            );
        }  
//    }

    foreach tx ( L_BLSR_TILES_X )
    {
        foreach ty ( L_BLSR_TILES_Y )
        {
          sx = tx * NUM_GRID_X;
          sy = ty * NUM_GRID_BLSR_Y;
          connect
            (
              <pin VDD11 of <device BLSR_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device BLSR_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDDM of <device BLSR_TILE @ [sx,sy]>>   => ntRef_ntVDDM
            );
        }  
    } 

    int tx_hmemc = 31;
    string device_wlsr;
    foreach ty ( L_WLSR_TILES_Y )
    {
      foreach tx ( L_WLSR_TILES_X )
      {

          sx = tx * NUM_GRID_X;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }

          connect
            (
              <pin VDD11 of <device WLSR_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device WLSR_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDD33 of <device WLSR_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
              <pin VDDM of <device WLSR_TILE @ [sx,sy]>>   => ntRef_ntVDDM           
            );

        }  
        foreach tx ( L_WLSR1_TILES_X )
        {
          sx = tx * NUM_GRID_X;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }

          connect
            (
              <pin VDD11 of <device WLSR1_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device WLSR1_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDD33 of <device WLSR1_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
              <pin VDDM of <device WLSR1_TILE @ [sx,sy]>>   => ntRef_ntVDDM           
            );
        } 

   

        foreach tx ( L_WLSRA_TILES_X )
        {
          sx = tx * NUM_GRID_X;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }

          connect
            (
              <pin VDD11 of <device WLSRA_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device WLSRA_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDD33 of <device WLSRA_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
              <pin VDDM of <device WLSRA_TILE @ [sx,sy]>>   => ntRef_ntVDDM    
            );
        }
        foreach tx ( L_WLSRD_TILES_X )
        {
          sx = tx * NUM_GRID_X;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }

          connect
            (
              <pin VDD11 of <device WLSRD_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device WLSRD_TILE @ [sx,sy]>>  => ntRef_ntVSS,
              <pin VDD33 of <device WLSRD_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
              <pin VDDM of <device WLSRD_TILE @ [sx,sy]>>   => ntRef_ntVDDM    
            );
        }
        foreach tx ( L_WLSR2_TILES_X )
        {
          sx = tx * NUM_GRID_X;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }

          connect
            (
              <pin VDD11 of <device WLSR2_TILE @ [sx,sy]>>  => ntRef_ntVDD11,
              <pin VSS of <device WLSR2_TILE @ [sx,sy]>>    => ntRef_ntVSS,
              <pin VDD33 of <device WLSR2_TILE @ [sx,sy]>>  => ntRef_ntVDD33,
              <pin VDDM of <device WLSR2_TILE @ [sx,sy]>>   => ntRef_ntVDDM           
            );
        } 
    } 

  


    tx = IDCODE_TILE_X;
    ty = IDCODE_TILE_Y;

    sx = tx * NUM_GRID_X + 2;
    sy = ty * NUM_GRID_Y;

    for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
    {
      sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
    }

    connect
      (
        <pin VDD11 of <device IDCODE_PGL12G_TILE @ [sx,sy]>>   => ntRef_ntVDD11,
        <pin VSS of <device IDCODE_PGL12G_TILE @ [sx,sy]>>     => ntRef_ntVSS
      );

    foreach ty ( {ESD_PGL12G_TILE_Y} )
    {
        foreach tx ( {ESD_PGL12G_TILE_X} )
        {
          sx = tx * NUM_GRID_X;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }

          connect
            (
              <pin VDD11 of <device ESD_PGL12G_TILE @ [sx,sy]>>       => ntRef_ntVDD11,
              <pin VDD33 of <device ESD_PGL12G_TILE @ [sx,sy]>>       => ntRef_ntVDD33,
              <pin VSS of <device ESD_PGL12G_TILE @ [sx,sy]>>         => ntRef_ntVSS,
              <pin VDD33A_PLL of <device ESD_PGL12G_TILE @ [sx,sy]>>  => ntRef_ntVDD33A_PLL,
              <pin VSSA_PLL0 of <device ESD_PGL12G_TILE @ [sx,sy]>>   => ntRef_ntVSSA_PLL0,
              <pin VSSA_PLL1 of <device ESD_PGL12G_TILE @ [sx,sy]>>   => ntRef_ntVSSA_PLL1,
              <pin VSSA_PLL2 of <device ESD_PGL12G_TILE @ [sx,sy]>>   => ntRef_ntVSSA_PLL2,
              <pin VSSA_PLL3 of <device ESD_PGL12G_TILE @ [sx,sy]>>   => ntRef_ntVSSA_PLL3,
              <pin VDDIOL0 of <device ESD_PGL12G_TILE @ [sx,sy]>>     => ntRef_ntVDDIOL0,
              <pin VDDIOL1 of <device ESD_PGL12G_TILE @ [sx,sy]>>     => ntRef_ntVDDIOL1,
              <pin VDDIOR0 of <device ESD_PGL12G_TILE @ [sx,sy]>>     => ntRef_ntVDDIOR0,
              <pin VDDIOR1 of <device ESD_PGL12G_TILE @ [sx,sy]>>     => ntRef_ntVDDIOR1,
              <pin VSSIOL0 of <device ESD_PGL12G_TILE @ [sx,sy]>>     => ntRef_ntVSSIOL0,
              <pin VSSIOL1 of <device ESD_PGL12G_TILE @ [sx,sy]>>     => ntRef_ntVSSIOL1,
              <pin VSSIOR0 of <device ESD_PGL12G_TILE @ [sx,sy]>>     => ntRef_ntVSSIOR0,
              <pin VDD11_CLK of <device ESD_PGL12G_TILE @ [sx,sy]>>   => ntRef_ntVDD11_CLK,
              <pin VSS_CLK of <device ESD_PGL12G_TILE @ [sx,sy]>>     => ntRef_ntVSS_CLK,
              <pin VSSIOR1 of <device ESD_PGL12G_TILE @ [sx,sy]>>     => ntRef_ntVSSIOR1

            );
        }  
    } 

    foreach ty ( {L_CRAMSL2_TILES_Y} )
    {
        foreach tx ( {L_IOL_TILES_X} )
        {
          sx = tx * NUM_GRID_X+2;
          sy = ty * NUM_GRID_Y;

          for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
          {
            sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
          }

          connect
            (
              <pin VDD11 of <device CRAMSL2_TILE @ [sx,sy]>>       => ntRef_ntVDD11

            );
        }  
    }


};//end of structure arch_nl connect_power_network of devPGL12G


