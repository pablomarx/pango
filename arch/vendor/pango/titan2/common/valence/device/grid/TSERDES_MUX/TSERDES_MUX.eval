tarted
grid
device TSERDES_MUX
{
    // grid_property_def_start
    // grid_property_def_end

    parameter
    (
        config bit CP_CB[3:0] = 4'b0000,
        config bit CP_CC[3:0] = 4'b0000,
        config bit CP_CE[3:0] = 4'b0000,
        config bit CP_CF[3:0] = 4'b0000,
        config bit CP_CI[1:0] = 2'b00,
        config bit CP_CL[1:0] = 2'b00,
        config bit CP_CJ = 1'b0,
        config bit CP_CM = 1'b0
    );
    port
    (
// configuration_body_def_on


    config input SC_CB[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CB[3],SC_CB[2],SC_CB[1],SC_CB[0]" */,

    config input SC_CC[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CC[3],SC_CC[2],SC_CC[1],SC_CC[0]" */,

    config input SC_CE[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CE[3],SC_CE[2],SC_CE[1],SC_CE[0]" */,

    config input SC_CF[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CF[3],SC_CF[2],SC_CF[1],SC_CF[0]" */,

    config input SC_CI[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CI[1],SC_CI[0]" */,

    config input SC_CL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CL[1],SC_CL[0]" */,

    config input SC_CJ = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CJ" */,

    config input SC_CM = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CM" */,

// configuration_body_def_end

        input GCLK[5:0] = 6'b1111_11,
        input RCLK[3:0] = 4'b1111,
        input IOCLK[3:0] = 4'b1111,
        input PLLCLK0 = 1'b1,
        input PLLCLK0_N = 1'b1,
        input PLLCLK1 = 1'b1,
        input WCLK = 1'b1,
        input WCLK_DELAY = 1'b1,
        input D_SRB_1 = 1'b1,
        input D_SRB_2 = 1'b1,
        output SERCLK,
        output SERCLKB,
        output OCLK,
        output OCLKB,
        output OCLKDIV,
        output OCLKDIVB
    );
};
//grid device end

//grid device structure netlist started

structure netlist of TSERDES_MUX
{
    routing
    {
        ( D_SRB_1 --> OCLK ) = 150;
        ( D_SRB_1 --> OCLKB ) = 150;
        ( D_SRB_1 --> SERCLK ) = 150;
        ( D_SRB_1 --> SERCLKB ) = 150;
        ( D_SRB_2 --> OCLKDIV ) = 150;
        ( D_SRB_2 --> OCLKDIVB ) = 150;
        ( GCLK[0] --> OCLK ) = 150;
        ( GCLK[0] --> OCLKDIV ) = 150;
        ( GCLK[0] --> SERCLK ) = 150;
        ( GCLK[1] --> OCLK ) = 150;
        ( GCLK[1] --> OCLKDIV ) = 150;
        ( GCLK[1] --> SERCLK ) = 150;
        ( GCLK[2] --> OCLK ) = 150;
        ( GCLK[2] --> OCLKDIV ) = 150;
        ( GCLK[2] --> SERCLK ) = 150;
        ( GCLK[3] --> OCLK ) = 150;
        ( GCLK[3] --> OCLKDIV ) = 150;
        ( GCLK[3] --> SERCLK ) = 150;
        ( GCLK[4] --> OCLK ) = 150;
        ( GCLK[4] --> OCLKDIV ) = 150;
        ( GCLK[4] --> SERCLK ) = 150;
        ( GCLK[5] --> OCLK ) = 150;
        ( GCLK[5] --> OCLKDIV ) = 150;
        ( GCLK[5] --> SERCLK ) = 150;
        ( GCLK[0] --> OCLKB ) = 150;
        ( GCLK[0] --> OCLKDIVB ) = 150;
        ( GCLK[0] --> SERCLKB ) = 150;
        ( GCLK[1] --> OCLKB ) = 150;
        ( GCLK[1] --> OCLKDIVB ) = 150;
        ( GCLK[1] --> SERCLKB ) = 150;
        ( GCLK[2] --> OCLKB ) = 150;
        ( GCLK[2] --> OCLKDIVB ) = 150;
        ( GCLK[2] --> SERCLKB ) = 150;
        ( GCLK[3] --> OCLKB ) = 150;
        ( GCLK[3] --> OCLKDIVB ) = 150;
        ( GCLK[3] --> SERCLKB ) = 150;
        ( GCLK[4] --> OCLKB ) = 150;
        ( GCLK[4] --> OCLKDIVB ) = 150;
        ( GCLK[4] --> SERCLKB ) = 150;
        ( GCLK[5] --> OCLKB ) = 150;
        ( GCLK[5] --> OCLKDIVB ) = 150;
        ( GCLK[5] --> SERCLKB ) = 150;
        ( IOCLK[0] --> OCLK ) = 150;
        ( IOCLK[0] --> SERCLK ) = 150;
        ( IOCLK[1] --> OCLK ) = 150;
        ( IOCLK[1] --> SERCLK ) = 150;
        ( IOCLK[2] --> OCLK ) = 150;
        ( IOCLK[2] --> SERCLK ) = 150;
        ( IOCLK[3] --> OCLK ) = 150;
        ( IOCLK[3] --> SERCLK ) = 150;
        ( IOCLK[0] --> OCLKB ) = 150;
        ( IOCLK[0] --> SERCLKB ) = 150;
        ( IOCLK[1] --> OCLKB ) = 150;
        ( IOCLK[1] --> SERCLKB ) = 150;
        ( IOCLK[2] --> OCLKB ) = 150;
        ( IOCLK[2] --> SERCLKB ) = 150;
        ( IOCLK[3] --> OCLKB ) = 150;
        ( IOCLK[3] --> SERCLKB ) = 150;
        ( PLLCLK0 --> SERCLK ) = 150;
        ( PLLCLK0_N --> SERCLKB ) = 150;
        ( PLLCLK1 --> OCLKDIV ) = 150;
        ( PLLCLK1 --> OCLKDIVB ) = 150;
        ( RCLK[0] --> OCLK ) = 150;
        ( RCLK[0] --> OCLKDIV ) = 150;
        ( RCLK[0] --> SERCLK ) = 150;
        ( RCLK[1] --> OCLK ) = 150;
        ( RCLK[1] --> OCLKDIV ) = 150;
        ( RCLK[1] --> SERCLK ) = 150;
        ( RCLK[2] --> OCLK ) = 150;
        ( RCLK[2] --> OCLKDIV ) = 150;
        ( RCLK[2] --> SERCLK ) = 150;
        ( RCLK[3] --> OCLK ) = 150;
        ( RCLK[3] --> OCLKDIV ) = 150;
        ( RCLK[3] --> SERCLK ) = 150;
        ( RCLK[0] --> OCLKB ) = 150;
        ( RCLK[0] --> OCLKDIVB ) = 150;
        ( RCLK[0] --> SERCLKB ) = 150;
        ( RCLK[1] --> OCLKB ) = 150;
        ( RCLK[1] --> OCLKDIVB ) = 150;
        ( RCLK[1] --> SERCLKB ) = 150;
        ( RCLK[2] --> OCLKB ) = 150;
        ( RCLK[2] --> OCLKDIVB ) = 150;
        ( RCLK[2] --> SERCLKB ) = 150;
        ( RCLK[3] --> OCLKB ) = 150;
        ( RCLK[3] --> OCLKDIVB ) = 150;
        ( RCLK[3] --> SERCLKB ) = 150;
        ( WCLK --> OCLK ) = 150;
        ( WCLK --> OCLKB ) = 150;
        ( WCLK_DELAY --> OCLK ) = 150;
        ( WCLK_DELAY --> OCLKB ) = 150;

    }
};
//grid device structure netlist end
//grid device configure body started

configuration cfg of TSERDES_MUX
{

 // assign config body begin
    SC_CB[0]  :=  CP_CB[0];
    SC_CB[1]  :=  CP_CB[1];
    SC_CB[2]  :=  CP_CB[2];
    SC_CB[3]  :=  CP_CB[3];
    SC_CC[0]  :=  CP_CC[0];
    SC_CC[1]  :=  CP_CC[1];
    SC_CC[2]  :=  CP_CC[2];
    SC_CC[3]  :=  CP_CC[3];
    SC_CE[0]  :=  CP_CE[0];
    SC_CE[1]  :=  CP_CE[1];
    SC_CE[2]  :=  CP_CE[2];
    SC_CE[3]  :=  CP_CE[3];
    SC_CF[0]  :=  CP_CF[0];
    SC_CF[1]  :=  CP_CF[1];
    SC_CF[2]  :=  CP_CF[2];
    SC_CF[3]  :=  CP_CF[3];
    SC_CI[0]  :=  CP_CI[0];
    SC_CI[1]  :=  CP_CI[1];
    SC_CL[0]  :=  CP_CL[0];
    SC_CL[1]  :=  CP_CL[1];
    SC_CJ  :=  CP_CJ;
    SC_CM  :=  CP_CM;
// assign config body end
    if ( GCLK[0] --> OCLKDIV )
    {
        SC_CC := 4'b0000;
    }

    if ( GCLK[1] --> OCLKDIV )
    {
        SC_CC := 4'b0001;
    }

    if ( GCLK[2] --> OCLKDIV )
    {
        SC_CC := 4'b0010;
    }

    if ( GCLK[3] --> OCLKDIV )
    {
        SC_CC := 4'b0011;
    }

    if ( GCLK[4] --> OCLKDIV )
    {
        SC_CC := 4'b0100;
    }

    if ( GCLK[5] --> OCLKDIV )
    {
        SC_CC := 4'b0101;
    }

    if ( RCLK[0] --> OCLKDIV )
    {
        SC_CC := 4'b0110;
    }

    if ( RCLK[1] --> OCLKDIV )
    {
        SC_CC := 4'b0111;
    }

    if ( RCLK[2] --> OCLKDIV )
    {
        SC_CC := 4'b1000;
    }

    if ( RCLK[3] --> OCLKDIV )
    {
        SC_CC := 4'b1001;
    }

    if ( D_SRB_2 --> OCLKDIV )
    {
        SC_CC := 4'b1010;
    }

    if ( PLLCLK1 --> OCLKDIV )
    {
        SC_CC := 4'b1011;
    }

    if ( GCLK[0] --> OCLKDIVB )
    {
        SC_CF := 4'b0000;
    }

    if ( GCLK[1] --> OCLKDIVB )
    {
        SC_CF := 4'b0001;
    }

    if ( GCLK[2] --> OCLKDIVB )
    {
        SC_CF := 4'b0010;
    }

    if ( GCLK[3] --> OCLKDIVB )
    {
        SC_CF := 4'b0011;
    }

    if ( GCLK[4] --> OCLKDIVB )
    {
        SC_CF := 4'b0100;
    }

    if ( GCLK[5] --> OCLKDIVB )
    {
        SC_CF := 4'b0101;
    }

    if ( RCLK[0] --> OCLKDIVB )
    {
        SC_CF := 4'b0110;
    }

    if ( RCLK[1] --> OCLKDIVB )
    {
        SC_CF := 4'b0111;
    }

    if ( RCLK[2] --> OCLKDIVB )
    {
        SC_CF := 4'b1000;
    }

    if ( RCLK[3] --> OCLKDIVB )
    {
        SC_CF := 4'b1001;
    }

    if ( D_SRB_2 --> OCLKDIVB )
    {
        SC_CF := 4'b1010;
    }

    if ( PLLCLK1 --> OCLKDIVB )
    {
        SC_CF := 4'b1011;
    }

    if ( GCLK[0] --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b0000;
    }

    if ( GCLK[1] --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b0001;
    }

    if ( GCLK[2] --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b0010;
    }

    if ( GCLK[3] --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b0011;
    }

    if ( GCLK[4] --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b0100;
    }

    if ( GCLK[5] --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b0101;
    }

    if ( RCLK[0] --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b0110;
    }

    if ( RCLK[1] --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b0111;
    }

    if ( RCLK[2] --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b1000;
    }

    if ( RCLK[3] --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b1001;
    }

    if ( IOCLK[0] --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b1010;
    }

    if ( IOCLK[1] --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b1011;
    }

    if ( IOCLK[2] --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b1100;
    }

    if ( IOCLK[3] --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b1101;
    }

    if ( D_SRB_1 --> SERCLK )
    {
        SC_CJ := 1'b0;
        SC_CB := 4'b1110;
    }

    if ( PLLCLK0 --> SERCLK )
    {
        SC_CJ := 1'b1;
    }

    if ( GCLK[0] --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b0000;
    }

    if ( GCLK[1] --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b0001;
    }

    if ( GCLK[2] --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b0010;
    }

    if ( GCLK[3] --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b0011;
    }

    if ( GCLK[4] --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b0100;
    }

    if ( GCLK[5] --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b0101;
    }

    if ( RCLK[0] --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b0110;
    }

    if ( RCLK[1] --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b0111;
    }

    if ( RCLK[2] --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b1000;
    }

    if ( RCLK[3] --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b1001;
    }

    if ( IOCLK[0] --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b1010;
    }

    if ( IOCLK[1] --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b1011;
    }

    if ( IOCLK[2] --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b1100;
    }

    if ( IOCLK[3] --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b1101;
    }

    if ( D_SRB_1 --> SERCLKB )
    {
        SC_CM := 1'b0;
        SC_CE := 4'b1110;
    }

    if ( PLLCLK0_N --> SERCLKB )
    {
        SC_CM := 1'b1;
    }

    if ( GCLK[0] --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b0000;
    }

    if ( GCLK[1] --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b0001;
    }

    if ( GCLK[2] --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b0010;
    }

    if ( GCLK[3] --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b0011;
    }

    if ( GCLK[4] --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b0100;
    }

    if ( GCLK[5] --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b0101;
    }

    if ( RCLK[0] --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b0110;
    }

    if ( RCLK[1] --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b0111;
    }

    if ( RCLK[2] --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b1000;
    }

    if ( RCLK[3] --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b1001;
    }

    if ( IOCLK[0] --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b1010;
    }

    if ( IOCLK[1] --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b1011;
    }

    if ( IOCLK[2] --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b1100;
    }

    if ( IOCLK[3] --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b1101;
    }

    if ( D_SRB_1 --> OCLK )
    {
        SC_CI := 2'b00;
        SC_CB := 4'b1110;
    }

    if ( WCLK --> OCLK )
    {
        SC_CI := 2'b01;
    }

    if ( WCLK_DELAY --> OCLK )
    {
        SC_CI := 2'b10;
    }

    if ( GCLK[0] --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b0000;
    }

    if ( GCLK[1] --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b0001;
    }

    if ( GCLK[2] --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b0010;
    }

    if ( GCLK[3] --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b0011;
    }

    if ( GCLK[4] --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b0100;
    }

    if ( GCLK[5] --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b0101;
    }

    if ( RCLK[0] --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b0110;
    }

    if ( RCLK[1] --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b0111;
    }

    if ( RCLK[2] --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b1000;
    }

    if ( RCLK[3] --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b1001;
    }

    if ( IOCLK[0] --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b1010;
    }

    if ( IOCLK[1] --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b1011;
    }

    if ( IOCLK[2] --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b1100;
    }

    if ( IOCLK[3] --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b1101;
    }

    if ( D_SRB_1 --> OCLKB )
    {
        SC_CL := 2'b00;
        SC_CE := 4'b1110;
    }

    if ( WCLK --> OCLKB )
    {
        SC_CL := 2'b01;
    }

    if ( WCLK_DELAY --> OCLKB )
    {
        SC_CL := 2'b10;
    }

};

//grid device configure body end

