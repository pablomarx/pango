tarted
grid
device SCKMUX_OUT
{
    // grid_property_def_start
    // grid_property_def_end

    parameter
    (
        config bit CP_LOCALMODE = 1'b0
    );
    port
    (
// configuration_body_def_on


    config input SC_LOCALMODE = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_LOCALMODE" */,

// configuration_body_def_end

        input CLK_TEST_P[9:0] = 10'b1111_1111_11,
        input CLK_USER_P[9:0] = 10'b1111_1111_11,
        output CLKOUT_P[9:0]
    );
};
//grid device end

//grid device structure netlist started

structure netlist of SCKMUX_OUT
{
    routing
    {
        ( CLK_TEST_P[0] --> CLKOUT_P[0] ) = 150;
        ( CLK_TEST_P[1] --> CLKOUT_P[1] ) = 150;
        ( CLK_TEST_P[2] --> CLKOUT_P[2] ) = 150;
        ( CLK_TEST_P[3] --> CLKOUT_P[3] ) = 150;
        ( CLK_TEST_P[4] --> CLKOUT_P[4] ) = 150;
        ( CLK_TEST_P[5] --> CLKOUT_P[5] ) = 150;
        ( CLK_TEST_P[6] --> CLKOUT_P[6] ) = 150;
        ( CLK_TEST_P[7] --> CLKOUT_P[7] ) = 150;
        ( CLK_TEST_P[8] --> CLKOUT_P[8] ) = 150;
        ( CLK_TEST_P[9] --> CLKOUT_P[9] ) = 150;
        ( CLK_USER_P[0] --> CLKOUT_P[0] ) = 150;
        ( CLK_USER_P[1] --> CLKOUT_P[1] ) = 150;
        ( CLK_USER_P[2] --> CLKOUT_P[2] ) = 150;
        ( CLK_USER_P[3] --> CLKOUT_P[3] ) = 150;
        ( CLK_USER_P[4] --> CLKOUT_P[4] ) = 150;
        ( CLK_USER_P[5] --> CLKOUT_P[5] ) = 150;
        ( CLK_USER_P[6] --> CLKOUT_P[6] ) = 150;
        ( CLK_USER_P[7] --> CLKOUT_P[7] ) = 150;
        ( CLK_USER_P[8] --> CLKOUT_P[8] ) = 150;
        ( CLK_USER_P[9] --> CLKOUT_P[9] ) = 150;

    }
};
//grid device structure netlist end
//grid device configure body started

configuration cfg of SCKMUX_OUT
{

 // assign config body begin
    SC_LOCALMODE   :=  CP_LOCALMODE;
// assign config body end
    if ( CLK_TEST_P[0] --> CLKOUT_P[0] )
    {
        SC_LOCALMODE := 1'b1;
    }

    if ( CLK_USER_P[0] --> CLKOUT_P[0] )
    {
        SC_LOCALMODE := 1'b0;
    }

    if ( CLK_TEST_P[1] --> CLKOUT_P[1] )
    {
        SC_LOCALMODE := 1'b1;
    }

    if ( CLK_USER_P[1] --> CLKOUT_P[1] )
    {
        SC_LOCALMODE := 1'b0;
    }

    if ( CLK_TEST_P[2] --> CLKOUT_P[2] )
    {
        SC_LOCALMODE := 1'b1;
    }

    if ( CLK_USER_P[2] --> CLKOUT_P[2] )
    {
        SC_LOCALMODE := 1'b0;
    }

    if ( CLK_TEST_P[3] --> CLKOUT_P[3] )
    {
        SC_LOCALMODE := 1'b1;
    }

    if ( CLK_USER_P[3] --> CLKOUT_P[3] )
    {
        SC_LOCALMODE := 1'b0;
    }

    if ( CLK_TEST_P[4] --> CLKOUT_P[4] )
    {
        SC_LOCALMODE := 1'b1;
    }

    if ( CLK_USER_P[4] --> CLKOUT_P[4] )
    {
        SC_LOCALMODE := 1'b0;
    }

    if ( CLK_TEST_P[5] --> CLKOUT_P[5] )
    {
        SC_LOCALMODE := 1'b1;
    }

    if ( CLK_USER_P[5] --> CLKOUT_P[5] )
    {
        SC_LOCALMODE := 1'b0;
    }

    if ( CLK_TEST_P[6] --> CLKOUT_P[6] )
    {
        SC_LOCALMODE := 1'b1;
    }

    if ( CLK_USER_P[6] --> CLKOUT_P[6] )
    {
        SC_LOCALMODE := 1'b0;
    }

    if ( CLK_TEST_P[7] --> CLKOUT_P[7] )
    {
        SC_LOCALMODE := 1'b1;
    }

    if ( CLK_USER_P[7] --> CLKOUT_P[7] )
    {
        SC_LOCALMODE := 1'b0;
    }

    if ( CLK_TEST_P[8] --> CLKOUT_P[8] )
    {
        SC_LOCALMODE := 1'b1;
    }

    if ( CLK_USER_P[8] --> CLKOUT_P[8] )
    {
        SC_LOCALMODE := 1'b0;
    }

    if ( CLK_TEST_P[9] --> CLKOUT_P[9] )
    {
        SC_LOCALMODE := 1'b1;
    }

    if ( CLK_USER_P[9] --> CLKOUT_P[9] )
    {
        SC_LOCALMODE := 1'b0;
    }

};

//grid device configure body end

