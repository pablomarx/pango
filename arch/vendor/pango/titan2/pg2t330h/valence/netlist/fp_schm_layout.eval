
USE pg2l_defs, pg2t330h_defs, pg2l_floorplan_funcs;

floorplan
schematic floorplan_view draw_logic_resource of device PG2T330H
{
    // Tile index variable
    unsigned int rx,tx, ty;
    int ty_tmp;
    int l_tx[];
     int tx_srb;  
    //clm
      foreach rx({[0:2],[5:6]})
      {
        l_tx = (rx==0) ? L_CLMS_TILES_X_R0 : (rx==1) ? L_CLMS_TILES_X_R1 : (rx==2) ? L_CLMS_TILES_X_R2 : (rx==5) ? L_CLMS_TILES_X_R5 : L_CLMS_TILES_X_R6;
        foreach tx ( l_tx )
        {
          foreach ty ( L_CLM_TILES_Y )
          {
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile_fp ( tx, ty_tmp, 1);
          } 
        }
      }


      foreach rx({3})
      {
      foreach tx ( L_CLMS_TILES_X_R3_U )
      {
          foreach ty ( {[26:50]} )
          {
              rx = 3;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile_fp ( tx, ty_tmp, 1);
          } 
      }

      foreach tx ( L_CLMS_TILES_X_R3_D )
      {
          foreach ty ( {[0:24]} )
          {
              rx = 3;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile_fp ( tx, ty_tmp, 1);
          } 
      }
      }

      foreach rx({4})
      {
      foreach tx ( L_CLMS_TILES_X_R4_U )
      {
          foreach ty ( {[26:50]} )
          {
              rx = 4;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile_fp ( tx, ty_tmp, 1);
          }
      }

      foreach tx ( L_CLMS_TILES_X_R4_D )
      {
          foreach ty ( {[0:24]} )
          {
              rx = 4;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile_fp ( tx, ty_tmp, 1);
          }
      }
      }

      foreach rx({[0:2],[5:6]})
      {

        l_tx = (rx==0) ? L_CLMA_TILES_X_R0 : (rx==1) ? L_CLMA_TILES_X_R1 : (rx==2) ? L_CLMA_TILES_X_R2 : (rx==5) ? L_CLMA_TILES_X_R5 : L_CLMA_TILES_X_R6;
        foreach tx ( l_tx )
        {
          foreach ty ( L_CLM_TILES_Y )
          {
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile_fp ( tx, ty_tmp, 0);
          } 
        }
      }

      foreach rx({3})
      {
      foreach tx ( L_CLMA_TILES_X_R3_U )
      {
          foreach ty ( {[26:50]} )
          {
              rx = 3;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile_fp ( tx, ty_tmp, 0);
          } 
      }

      foreach tx ( L_CLMA_TILES_X_R3_D )
      {
          foreach ty ( {[0:24]} )
          {
              rx = 3;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile_fp ( tx, ty_tmp, 0);
          } 
      }
      }

      foreach rx({4})
      {
      foreach tx ( L_CLMA_TILES_X_R4_U )
      {
          foreach ty ( {[26:50]} )
          {
              rx = 4;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile_fp ( tx, ty_tmp, 0);
          }
      }

      foreach tx ( L_CLMA_TILES_X_R4_D )
      {
          foreach ty ( {[0:24]} )
          {
              rx = 4;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile_fp ( tx, ty_tmp, 0);
          }
      }
      }

    //DRM
    //unsigned int rx,tx,ty;
    //unsigned int l_tx[];
    
    foreach rx( {[0:6]} )
    {
      foreach ty ( L_DRM_TILES_Y )
      {
          l_tx = (rx==0) ? L_DRM_TILES_X_R0 : 
                 (rx==1) ? L_DRM_TILES_X_R1 : 
                 (rx==2) ? L_DRM_TILES_X_R2 : 
                 (rx==5) ? L_DRM_TILES_X_R5 :
                 (rx==6) ? L_DRM_TILES_X_R6 :
                 ((rx==3)&&(ty<25)) ? L_DRM_TILES_X_R3_D :
                 ((rx==3)&&(ty>25)) ? L_DRM_TILES_X_R3_U :
                 ((rx==4)&&(ty<25)) ? L_DRM_TILES_X_R4_D : L_DRM_TILES_X_R4_U;

          foreach tx ( l_tx )
          {
             
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_drm_tile_fp( tx, ty_tmp);
          }
      } 
    } 
    //apm   
    //unsigned int rx,tx,ty;
    
    foreach rx( {[0:6]} )
    {
      foreach tx ( L_APM_TILES_X )
      {
          foreach ty ( L_APM_TILES_Y )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_apm_tile_fp( tx, ty_tmp);
          }
      } 
    }
   //IOL
   //unsigned int rx,tx,ty,ty_tmp;
   //int l_tx[];
   
   foreach rx( {[0:6]} )
   {
       l_tx = ((rx==0)||(rx==1)||(rx==2)) ? L_IOL_TILES_X_R0 : {2};
       foreach tx ( l_tx )
       {
           foreach ty ( L_IOL_TILES_Y )
           {
               int ty_tmp = rx * NUM_TILES_REGION + ty;
               draw_iol_tile_fp( tx, ty_tmp, 0);
           }
       } 
   } 
    foreach rx( {[0:2]} )
    {
      l_tx = L_IOL_HP_TILES_X_R0;
      foreach tx ( l_tx )
      {
          foreach ty ( L_IOL_HP_TILES_Y )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_iol_hp_tile_fp( tx, ty_tmp, 0);
          }
      } 
    }     
    //IOB
    //unsigned int rx,tx,ty,ty_tmp;
    //int l_tx[];
    
    foreach rx( {[0:6]} )
    {
        l_tx = ((rx==0)||(rx==1)||(rx==2)) ? L_IOB_TILES_X_R0 : L_IOB_TILES_X_R3;
        foreach tx ( l_tx )
        {
            ty = rx * NUM_TILES_REGION;
            draw_iob_tile_fp( tx, ty, 0);   
        } 
    }
     foreach rx( {[0:2]} )
    {
      l_tx = L_IOB_HP_TILES_X_R0;
      foreach tx ( l_tx )
      {
         ty = rx * NUM_TILES_REGION;
         draw_iob_hp_tile_fp( tx, ty, 0);   
      } 
    }   
    //USCM
    draw_uscm_tile_fp( USCM_TILE_X, USCM_TILE_Y);  
    //PREGMUX 
   draw_pregmuxc_tile_fp( PREGMUXC_TILE_X, PREGMUXC_TILE0_Y);
   draw_pregmuxc_tile_fp( PREGMUXC_TILE_X, PREGMUXC_TILE1_Y);
   draw_pregmuxc_tile_fp( PREGMUXC_TILE_X, PREGMUXC_TILE2_Y);
   draw_pregmuxc_tile_fp( PREGMUXC_TILE_X, PREGMUXC_TILE3_Y);
   draw_pregmuxc_tile_fp( PREGMUXC_TILE_X, PREGMUXC_TILE4_Y);    
    //PLL
   //unsigned int rx,tx,ty;
   //unsigned int l_tx[];
   
    foreach rx( {[0:6]} )
    {
      l_tx = ((rx==0)||(rx==1)||(rx==2)) ? L_PLL_330H_TILES_X_R0 : L_PLL_330H_TILES_X_R3;
      foreach tx ( l_tx )
      {
          foreach ty ( {GPLL_330H_TILE_Y} )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_pll_330h_tile_fp( tx, ty_tmp, 0);
          }
      } 
    }

    foreach rx( {[0:6]} )
    {
      l_tx = ((rx==0)||(rx==1)||(rx==2)) ? L_PLL_330H_TILES_X_R0 : L_PLL_330H_TILES_X_R3;
      foreach tx ( l_tx )
      {
          foreach ty ( {PPLL_330H_TILE_Y} )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_pll_330h_tile_fp( tx, ty_tmp, 1);
          }
      } 
    }

    foreach rx( {[0:2]} )
    {
      l_tx =  L_PLL_HP_TILES_X_R0;
      foreach tx ( l_tx )
      {
          foreach ty ( {GPLL_HP_TILE_Y} )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_pll_hp_tile_fp( tx, ty_tmp, 0);
          }
      }
    }

    foreach rx( {[0:2]} )
    {
      l_tx =  L_PLL_HP_TILES_X_R0;
      foreach tx ( l_tx )
      {
          foreach ty ( {PPLL_HP_TILE_Y} )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_pll_hp_tile_fp( tx, ty_tmp, 1);
          }
      }
    }     
    //CCS
    //unsigned int tx,ty;
     tx_srb = 25;
    //draw_ccs_tile_fp( CCS_330H_TILE_X , CCS_330H_TILE_Y, tx_srb);          
    //IOCK
    //unsigned int rx,tx,ty;
    //unsigned int l_tx[];

    foreach rx( {[0:6]} )
    {
        foreach ty ( L_IOCK_TILES_Y )
        {
            l_tx = ((rx==0)||(rx==1)||(rx==2)) ? L_IOCK_TILES_X_R0 : L_IOCK_TILES_X_R3;
            foreach tx ( l_tx )
            {             
                int ty_tmp = rx * NUM_TILES_REGION + ty;
                draw_iock_tile_fp( tx, ty_tmp);
            }
        } 
    } 
    foreach rx( {[0:2]} )
    {
        foreach ty ( L_IOCK_HP_TILES_Y )
        {
            l_tx = L_IOCK_HP_TILES_X_R0 ;

            foreach tx ( l_tx )
            {
                int ty_tmp = rx * NUM_TILES_REGION + ty;
                draw_iock_tile_fp( tx, ty_tmp);
            }
        }
    }    
   //HSSTLP
//    foreach tx ( {HSST_TILE_X} )
//    {
//        foreach ty ( {HSST_TILE0_Y,HSST_TILE1_Y,HSST_TILE2_Y,HSST_TILE3_Y} )
//        {
//            draw_hssthp_tile_fp( tx, ty, 1);
//        }
//    }      
  //PCIE
   draw_pciegen3_tile_fp( PCIEGEN3_TILE_X, PCIEGEN3_TILE_Y);
  
   //ADC
    tx_srb = 25;  
    draw_adc_tile_fp(ADC_TILE_X,ADC_TILE_Y,tx_srb);     
}; // end of schematic floorplan_view
