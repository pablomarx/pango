
use pg2l_defs, pg2l_schm_funcs, pg2t330h_defs;

schematic schm_view draw_logic_resource of device PG2T330H
{

    // Tile index variable
    unsigned int rx,tx, ty;
    int ty_tmp;
    int l_tx[];
    
    //draw srb
      foreach rx({0,1,2,5,6})
      {
        l_tx = (rx==0) ? L_SRB_TILES_X_R0 : (rx==1) ? L_SRB_TILES_X_R1 : (rx==2) ? L_SRB_TILES_X_R2 : (rx==5) ? L_SRB_TILES_X_R5 : L_SRB_TILES_X_R6;
        foreach tx ( l_tx )
        {
          foreach ty ( L_SRB_TILES_Y )
          {
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_srb_tile ( tx, ty_tmp );
          } 
        }
      }

      foreach tx ( L_SRB_TILES_X_R3_U )
      {
          foreach ty ( {[26:50]} )
          {
              rx = 3;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_srb_tile ( tx, ty_tmp );
          } 
      }

      foreach tx ( L_SRB_TILES_X_R3_D )
      {
          foreach ty ( {[0:24]} )
          {
              rx = 3;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_srb_tile ( tx, ty_tmp );
          } 
      }

      foreach tx ( L_SRB_TILES_X_R4_U )
      {
          foreach ty ( {[26:50]} )
          {
              rx = 4;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_srb_tile ( tx, ty_tmp );
          }
      }

      foreach tx ( L_SRB_TILES_X_R4_D )
      {
          foreach ty ( {[0:24]} )
          {
              rx = 4;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_srb_tile ( tx, ty_tmp );
          }
      }
      
      
      
      foreach rx({[0:2],[5:6]})
      {
        l_tx = (rx==0) ? L_CLMS_TILES_X_R0 : (rx==1) ? L_CLMS_TILES_X_R1 : (rx==2) ? L_CLMS_TILES_X_R2 : (rx==5) ? L_CLMS_TILES_X_R5 : L_CLMS_TILES_X_R6;
        foreach tx ( l_tx )
        {
          foreach ty ( L_CLM_TILES_Y )
          {
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile ( tx, ty_tmp, 1);
          } 
        }
      }


      foreach rx({3})
      {
      foreach tx ( L_CLMS_TILES_X_R3_U )
      {
          foreach ty ( {[26:50]} )
          {
              rx = 3;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile ( tx, ty_tmp, 1);
          } 
      }

      foreach tx ( L_CLMS_TILES_X_R3_D )
      {
          foreach ty ( {[0:24]} )
          {
              rx = 3;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile ( tx, ty_tmp, 1);
          } 
      }
      }

      foreach rx({4})
      {
      foreach tx ( L_CLMS_TILES_X_R4_U )
      {
          foreach ty ( {[26:50]} )
          {
              rx = 4;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile ( tx, ty_tmp, 1);
          }
      }

      foreach tx ( L_CLMS_TILES_X_R4_D )
      {
          foreach ty ( {[0:24]} )
          {
              rx = 4;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile ( tx, ty_tmp, 1);
          }
      }
      }

      foreach rx({[0:2],[5:6]})
      {

        l_tx = (rx==0) ? L_CLMA_TILES_X_R0 : (rx==1) ? L_CLMA_TILES_X_R1 : (rx==2) ? L_CLMA_TILES_X_R2 : (rx==5) ? L_CLMA_TILES_X_R5 : L_CLMA_TILES_X_R6;
        foreach tx ( l_tx )
        {
          foreach ty ( L_CLM_TILES_Y )
          {
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile ( tx, ty_tmp, 0);
          } 
        }
      }

      foreach rx({3})
      {
      foreach tx ( L_CLMA_TILES_X_R3_U )
      {
          foreach ty ( {[26:50]} )
          {
              rx = 3;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile ( tx, ty_tmp, 0);
          } 
      }

      foreach tx ( L_CLMA_TILES_X_R3_D )
      {
          foreach ty ( {[0:24]} )
          {
              rx = 3;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile ( tx, ty_tmp, 0);
          } 
      }
      }

      foreach rx({4})
      {
      foreach tx ( L_CLMA_TILES_X_R4_U )
      {
          foreach ty ( {[26:50]} )
          {
              rx = 4;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile ( tx, ty_tmp, 0);
          }
      }

      foreach tx ( L_CLMA_TILES_X_R4_D )
      {
          foreach ty ( {[0:24]} )
          {
              rx = 4;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_clm_tile ( tx, ty_tmp, 0);
          }
      }
      }
      

    draw_adc_tile(ADC_TILE_X,ADC_TILE_Y);
      
    foreach rx( {[0:6]} )
    {
      foreach ty ( L_DRM_TILES_Y )
      {
          l_tx = (rx==0) ? L_DRM_TILES_X_R0 : 
                 (rx==1) ? L_DRM_TILES_X_R1 : 
                 (rx==2) ? L_DRM_TILES_X_R2 : 
                 (rx==5) ? L_DRM_TILES_X_R5 :
                 (rx==6) ? L_DRM_TILES_X_R6 :
                 ((rx==3)&&(ty<25)) ? L_DRM_TILES_X_R3_D :
                 ((rx==3)&&(ty>25)) ? L_DRM_TILES_X_R3_U :
                 ((rx==4)&&(ty<25)) ? L_DRM_TILES_X_R4_D : L_DRM_TILES_X_R4_U;

          foreach tx ( l_tx )
          {
             
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_drm_tile( tx, ty_tmp);
          }
      } 
    } 
      
    foreach rx( {[0:6]} )
    {
        foreach ty ( L_IOCK_TILES_Y )
        {
            l_tx = ((rx==0)||(rx==1)||(rx==2)) ? L_IOCK_TILES_X_R0 : L_IOCK_TILES_X_R3;
            foreach tx ( l_tx )
            {             
                int ty_tmp = rx * NUM_TILES_REGION + ty;
                draw_iock_tile( tx, ty_tmp);
            }
        } 
    }  
    
    foreach rx( {[0:2]} )
    {
        foreach ty ( L_IOCK_HP_TILES_Y )
        {
            l_tx = L_IOCK_HP_TILES_X_R0 ;

            foreach tx ( l_tx )
            {
                int ty_tmp = rx * NUM_TILES_REGION + ty;
                draw_iock_hp_tile( tx, ty_tmp);
            }
        }
    }
    
    
    
    
    foreach rx( {[0:6]} )
    {
        foreach tx ( L_APM_TILES_X )
        {
            foreach ty ( L_APM_TILES_Y )
            {
                int ty_tmp = rx * NUM_TILES_REGION + ty;
                draw_apm_tile( tx, ty_tmp);
            }
        } 
    }  
      
    //foreach tx ( {HSST_TILE_X} )
    //{
    //    foreach ty ( {HSST_TILE0_Y,HSST_TILE1_Y,HSST_TILE2_Y,HSST_TILE3_Y} )
    //    {
    //        draw_hssthp_tile( tx, ty);
    //    }
    //} 
    draw_pciegen3_tile( PCIEGEN3_TILE_X, PCIEGEN3_TILE_Y);
      
    foreach rx( {[0:6]} )
    {
      l_tx = ((rx==0)||(rx==1)||(rx==2)) ? L_PLL_330H_TILES_X_R0 : L_PLL_330H_TILES_X_R3;
      foreach tx ( l_tx )
      {
          foreach ty ( {GPLL_330H_TILE_Y} )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_pll_330h_tile( tx, ty_tmp, 0);
          }
      } 
    }

    foreach rx( {[0:6]} )
    {
      l_tx = ((rx==0)||(rx==1)||(rx==2)) ? L_PLL_330H_TILES_X_R0 : L_PLL_330H_TILES_X_R3;
      foreach tx ( l_tx )
      {
          foreach ty ( {PPLL_330H_TILE_Y} )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_pll_330h_tile( tx, ty_tmp, 1);
          }
      } 
    }
      
    foreach rx( {[0:2]} )
    {
      l_tx =  L_PLL_HP_TILES_X_R0;
      foreach tx ( l_tx )
      {
          foreach ty ( {GPLL_HP_TILE_Y} )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_pll_hp_tile( tx, ty_tmp, 0);
          }
      }
    }

    foreach rx( {[0:2]} )
    {
      l_tx =  L_PLL_HP_TILES_X_R0;
      foreach tx ( l_tx )
      {
          foreach ty ( {PPLL_HP_TILE_Y} )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              draw_pll_hp_tile( tx, ty_tmp, 1);
          }
      }
    }
    draw_uscm_tile( USCM_TILE_X, USCM_TILE_Y); 
    
    draw_pregmuxc_tile( PREGMUXC_TILE_X, PREGMUXC_TILE0_Y);
    draw_pregmuxc_tile( PREGMUXC_TILE_X, PREGMUXC_TILE1_Y);
    draw_pregmuxc_tile( PREGMUXC_TILE_X, PREGMUXC_TILE2_Y);
    draw_pregmuxc_tile( PREGMUXC_TILE_X, PREGMUXC_TILE3_Y);
    draw_pregmuxc_tile( PREGMUXC_TILE_X, PREGMUXC_TILE4_Y);
      
    foreach rx( {[0:6]} )
    {
        l_tx = ((rx==0)||(rx==1)||(rx==2)) ? L_IOL_TILES_X_R0 : {2};
        foreach tx ( l_tx )
        {
            foreach ty ( L_IOL_TILES_Y )
            {
                int ty_tmp = rx * NUM_TILES_REGION + ty;
                draw_iol_tile( tx, ty_tmp);
            }
        } 
    } 
      
    foreach rx( {[0:2]} )
    {
        l_tx = L_IOL_HP_TILES_X_R0;
        foreach tx ( l_tx )
        {
            foreach ty ( L_IOL_HP_TILES_Y )
            {
                int ty_tmp = rx * NUM_TILES_REGION + ty;
                draw_iol_hp_tile( tx, ty_tmp);
            }
        } 
    }  
      
      
      
    foreach rx( {[0:6]} )
    {
        l_tx = ((rx==0)||(rx==1)||(rx==2)) ? L_IOB_TILES_X_R0 : L_IOB_TILES_X_R3;
        foreach tx ( l_tx )
        {
            ty = rx * NUM_TILES_REGION;
            draw_iob_tile( tx, ty);   
        } 
    } 
     

    foreach rx( {[0:2]} )
    {
        l_tx = L_IOB_HP_TILES_X_R0;
        foreach tx ( l_tx )
        {
            ty = rx * NUM_TILES_REGION;
            draw_iob_hp_tile( tx, ty);   
        } 
    }
     
    foreach rx( {[0:6]} )
    {
        l_tx = ((rx==2)||(rx==3)) ? L_CKEB_TILES_X_R2 : L_CKEB_TILES_X_R0;
        foreach tx ( l_tx )
        {
            foreach ty ( L_CKEB_TILES_Y )
            {
                int ty_tmp = rx * NUM_TILES_REGION + ty;
                draw_ckeb_tile( tx, ty_tmp);
            }
        } 
    }

    foreach rx( {[0:6]} )
    {
        foreach tx ( L_CKEB2_TILES_X )
        {
            foreach ty ( L_CKEB_TILES_Y )
            {
                int ty_tmp = rx * NUM_TILES_REGION + ty;
                draw_ckeb2_tile( tx, ty_tmp);
            }
        } 
    } 
      
    draw_ccs_330h_tile( CCS_330H_TILE_X , CCS_330H_TILE_Y);          
      
    //foreach ty ( L_SRBCCSDRV_TILE_Y )
    //{
    //  draw_srbccsdrv_tile( SRBCCSDRV_TILE_X , ty);
    //}
};


    //draw_cram_ctrl_tile( CRAM_CTRL_TILE_X , CRAM_CTRL_TILE_Y, CCS_330H_TILE_X, CCS_330H_TILE_Y);
    //foreach rx( L_CRAMSL2_TILE_REGION )
    //{
    //  foreach ty_tmp( L_CRAMSL2_TILES_Y )
    //  {
    //     ty = rx * NUM_TILES_REGION + ty_tmp;
    //     draw_cramsl2_tile(CRAMSL2_TILE_X , ty);
    //  }
    //}
    //foreach rx({[0:6]})
    //{
    //  l_tx = ((rx==0)||(rx==1)) ? L_CRAMSL0_TILES_X_R0 : (rx==2) ? L_CRAMSL0_TILES_X_R2 :
    //         (rx==3) ? L_CRAMSL0_TILES_X_R3 : L_CRAMSL0_TILES_X_R4;
    //  foreach tx ( l_tx )
    //  {
    //    foreach ty ( L_CRAMSL_TILES_Y )
    //    {
    //        ty_tmp = rx * NUM_TILES_REGION + ty;
    //        draw_cramsl0_tile ( tx, ty_tmp );
    //    } 
    //  }
    //}

    //foreach rx({[0:6]})
    //{
    //  l_tx = L_CRAMSL3_TILES_X;
    //  foreach tx ( l_tx )
    //  {
    //    foreach ty ( L_CRAMSL_TILES_Y )
    //    {
    //        ty_tmp = rx * NUM_TILES_REGION + ty;
    //        draw_cramsl3_tile ( tx, ty_tmp );
    //    } 
    //  }
    //}

    //foreach rx({[0:6]})
    //{
    //  l_tx = ((rx==2)||(rx==3)) ? L_CRAMSL1_TILES_X_R2 : L_CRAMSL1_TILES_X_R0;

    //  foreach tx ( l_tx )
    //  {
    //    foreach ty ( L_CRAMSL_TILES_Y )
    //    {
    //        ty_tmp = rx * NUM_TILES_REGION + ty;
    //        draw_cramsl1_tile ( tx, ty_tmp );
    //    } 
    //  }
    //}
    //foreach rx({[0:6]})
    //{
    //  l_tx = (rx==0) ? L_WRENHAN_TILES_X_R0 : (rx==1) ? L_WRENHAN_TILES_X_R1 :
    //         (rx==2) ? L_WRENHAN_TILES_X_R2 : (rx==3) ? L_WRENHAN_TILES_X_R3 :
    //         (rx==4) ? L_WRENHAN_TILES_X_R4 : (rx==5) ? L_WRENHAN_TILES_X_R5 : L_WRENHAN_TILES_X_R6;
    //  foreach tx ( l_tx )
    //  {
    //    foreach ty ( L_WRENHAN_TILES_Y )
    //    {
    //        ty_tmp = rx * NUM_TILES_REGION + ty;
    //        draw_wrenhan_tile ( tx, ty_tmp );
    //    } 
    //  }
    //}
    //foreach rx({4,5})
    //{
    //  foreach tx ( L_WRENHAN1_TILES_X_R4 )
    //  {
    //    foreach ty ( L_WRENHAN_TILES_Y )
    //    {
    //        ty_tmp = rx * NUM_TILES_REGION + ty;
    //        draw_wrenhan1_tile ( tx, ty_tmp );
    //    } 
    //  }
    //}
    //draw_idcode_tile( IDCODE_TILE_X, IDCODE_TILE_Y, CCS_330H_TILE_X, CCS_330H_TILE_Y);
    
    