*****************************************************************************

  Synopsis  [This file defines all the symbol of package pins.
  
             Before a package pin is bounded, it carries no functinoality. The symbol of a
             package pin indicates the functinoality of the pin under specific packaging.
             Because the symbol is common to all package pin, the functionality of package
             pin is unified. For example, circle indicates a user IO for all packages]

****************************************************************************************/

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_TRUE of package pin // pragma PAP_ARC_COLOR="191:191:191"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_COMP of package pin // pragma PAP_ARC_COLOR="255:255:255"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_D_TURE of package pin // pragma PAP_ARC_COLOR="255:255:255"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    shape ( [4,10] : [16,10] ) ;
    "D" @[10,10];  
            
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_D_COMP of package pin // pragma PAP_ARC_COLOR="191:191:191"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    shape ( [4,10] : [16,10] ) ;
    "D" @[10,10];  
            
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_RDWR_TURE of package pin // pragma PAP_ARC_COLOR="255:255:255"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    shape ( [4,10] : [16,10] ) ;
    "R" @[10,10];  
            
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_RDWR_COMP of package pin // pragma PAP_ARC_COLOR="191:191:191"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    shape ( [4,10] : [16,10] ) ;
    "R" @[10,10];  
            
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_BUSY_TURE of package pin // pragma PAP_ARC_COLOR="255:255:255"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    shape ( [4,10] : [16,10] ) ;
    "B" @[10,10];  
            
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_BUSY_COMP of package pin // pragma PAP_ARC_COLOR="191:191:191"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    shape ( [4,10] : [16,10] ) ;
    "B" @[10,10];  
            
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_CSB_TURE of package pin // pragma PAP_ARC_COLOR="255:255:255"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    shape ( [4,10] : [16,10] ) ;
    "C" @[10,10];  
            
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_CSB_COMP of package pin // pragma PAP_ARC_COLOR="191:191:191"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    shape ( [4,10] : [16,10] ) ;
    "C" @[10,10];  
            
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_FCSB_TURE of package pin // pragma PAP_ARC_COLOR="255:255:255"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    shape ( [4,10] : [16,10] ) ;
    "F" @[10,10];  
            
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_FCSB_COMP of package pin // pragma PAP_ARC_COLOR="191:191:191"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    shape ( [4,10] : [16,10] ) ;
    "F" @[10,10];  
            
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_VREF_TURE of package pin // pragma PAP_ARC_COLOR="255:255:255"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    shape ( [4,10] : [16,10] ) ;
    "V" @[10,10];  
            
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_VREF_COMP of package pin // pragma PAP_ARC_COLOR="191:191:191"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    shape ( [4,10] : [16,10] ) ;
    "V" @[10,10];  
            
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_GCLK_TURE of package pin // pragma PAP_ARC_COLOR="255:255:255"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    shape ( [4,10] : [16,10] ) ;
    "G" @[10,10];  
            
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [UIO]

  Author      []

  Abstract    [Cycle means user IO]

  Revision History:

********************************************************************************/
symbol sym_UIO_GCLK_COMP of package pin // pragma PAP_ARC_COLOR="191:191:191"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Circle description. Following the syntax of EDIF, this models a circle whose center
    // is at [10,10], and radius is 8
    
    shape ( [2,10] : [18,10] ) ;
    shape ( [4,10] : [16,10] ) ;
    "G" @[10,10];  
            
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [CFG_CLK]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_CFG_CLK of package pin // pragma PAP_ARC_COLOR="201:154:129"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "C" @[10,10];                
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [CFG_DONE]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_CFG_DONE of package pin // pragma PAP_ARC_COLOR="128:128:192"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "D" @[10,10];                
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [INIT_FLAG_N]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_INIT_FLAG_N of package pin // pragma PAP_ARC_COLOR="0:64:128"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "R" @[10,10];                
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [CONFIG_N]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_CONFIG_N of package pin // pragma PAP_ARC_COLOR="0:128:0"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "P" @[10,10];                
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [MODE_0]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_MODE_0 of package pin // pragma PAP_ARC_COLOR="109:82:104"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "0" @[10,10];                
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [MODE_1]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_MODE_1 of package pin // pragma PAP_ARC_COLOR="128:128:64"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "1" @[10,10];                
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [MODE_2]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_MODE_2 of package pin // pragma PAP_ARC_COLOR="64:128:128"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "2" @[10,10];                
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [TCK]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_TCK of package pin // pragma PAP_ARC_COLOR="255:128:128"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "K" @[10,10];                
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [TDI]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_TDI of package pin //pragma PAP_ARC_COLOR="0:255:0" 
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "I" @[10,10];                
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [TDO]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_TDO of package pin //pragma PAP_ARC_COLOR="202:214:42"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "O" @[10,10];                
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [TDS]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_TMS of package pin //pragma PAP_ARC_COLOR="250:255:29"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "S" @[10,10];                
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [GND]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_GND of package pin // pragma PAP_ARC_COLOR="168:107:222"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    line GND_0 [6,6]->[14,6];               
    line GND_1 [7,8]->[13,8]; 
    line GND_2 [8,10]->[12,10];
    line GND_3 [10,10]->[10,14];
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [VCCINT]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_VCCINT of package pin //pragma PAP_ARC_COLOR="255:0:0"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    line VCCINT_0 [6,10]->[9,10];  
    line VCCINT_1 [11,10]->[14,10];             
    line VCCINT_2 [9,7]->[9,13];
    line VCCINT_3 [11,6]->[11,14];
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [VCCAUX]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_VCCAUX of package pin //pragma PAP_ARC_COLOR="224:56:221"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    line VCCINT_0 [6,10]->[9,10];  
    line VCCINT_1 [11,10]->[14,10];             
    line VCCINT_2 [9,7]->[9,13];
    line VCCINT_3 [11,6]->[11,14];             
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [VCCO]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_VCCO of package pin // pragma PAP_ARC_COLOR="255:128:0"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2];
              
    line VCCO_0 [10,18]->[10,10];  
    line VCCO_1 [10,10]->[18,10];
    line VCCO_3 [10,14]->[18,14];  
    line VCCO_4 [14,10]->[14,18];                
    line VCCO_5 [10,18]->[18,18];
    line VCCO_6 [18,18]->[18,10];
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [VCC]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_VCC of package pin // pragma PAP_ARC_COLOR="255:128:0"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2];
              
    line VCCO_0 [10,18]->[10,10];  
    line VCCO_1 [10,10]->[18,10];
    line VCCO_3 [10,14]->[18,14];  
    line VCCO_4 [14,10]->[14,18];                
    line VCCO_5 [10,18]->[18,18];
    line VCCO_6 [18,18]->[18,10];
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [sym_VCCAUX_A]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_VCCAUX_A of package pin //pragma PAP_ARC_COLOR="224:56:221"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    line VCCINT_0 [6,10]->[9,10];  
    line VCCINT_1 [11,10]->[14,10];             
    line VCCINT_2 [9,7]->[9,13];
    line VCCINT_3 [11,6]->[11,14];             
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [sym_VSSA]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_VSSA of package pin //pragma PAP_ARC_COLOR="168:107:222"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    line GND_0 [6,6]->[14,6];               
    line GND_1 [7,8]->[13,8]; 
    line GND_2 [8,10]->[12,10];
    line GND_3 [10,10]->[10,14];          
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [VCCIO]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_VCCIO of package pin // pragma PAP_ARC_COLOR="255:128:0"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2];
              
    line VCCO_0 [10,18]->[10,10];  
    line VCCO_1 [10,10]->[18,10];
    line VCCO_3 [10,14]->[18,14];  
    line VCCO_4 [14,10]->[14,18];                
    line VCCO_5 [10,18]->[18,18];
    line VCCO_6 [18,18]->[18,10];
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [sym_VSS]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_VSS of package pin // pragma PAP_ARC_COLOR="168:107:222"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    line GND_0 [6,6]->[14,6];               
    line GND_1 [7,8]->[13,8]; 
    line GND_2 [8,10]->[12,10];
    line GND_3 [10,10]->[10,14];
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [sym_DIO_TRUE]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_DIO_TRUE of package pin // pragma PAP_ARC_COLOR="255:128:0"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2];
              
    line VCCO_0 [10,18]->[10,10];  
    line VCCO_1 [10,10]->[18,10];
    line VCCO_3 [10,14]->[18,14];  
    line VCCO_4 [14,10]->[14,18];                
    line VCCO_5 [10,18]->[18,18];
    line VCCO_6 [18,18]->[18,10];
              
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [sym_VCCEFUSE]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_VCCEFUSE of package pin // pragma PAP_ARC_COLOR="255:128:0"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2];
              
    line VCCO_0 [10,18]->[10,10];  
    line VCCO_1 [10,10]->[18,10];
    line VCCO_3 [10,14]->[18,14];  
    line VCCO_4 [14,10]->[14,18];                
    line VCCO_5 [10,18]->[18,18];
    line VCCO_6 [18,18]->[18,10];
              
};

library work;
use PinSym_defs;


/*******************************************************************************

  Package Pin [NC]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_NC of package pin // pragma PAP_ARC_COLOR="72:72:72"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "n" @[10,10];                
              
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [REXT]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_REXT of package pin // pragma PAP_ARC_COLOR="39:182:132"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "E" @[10,10];                
              
};

library work;
use PinSym_defs;

/*******************************************************************************

  Package Pin [FORCE_RELEASE_PROBE]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_FORCE_RELEASE_PROBE of package pin // pragma PAP_ARC_COLOR="139:82:103"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "F" @[10,10];                
              
};

library work;
use PinSym_defs;
/*******************************************************************************

  Package Pin [DO NOT USE]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_DONOT_USE of package pin // pragma PAP_ARC_COLOR="255:255:255"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );              
    
};

library work;
use PinSym_defs;
/*******************************************************************************

  Package Pin [EXCLUSIVE_USE]

  Author      []

  Abstract    []

  Revision History:

********************************************************************************/
symbol sym_EXCLUSIVE_USE of package pin // pragma PAP_ARC_COLOR="139:82:103"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "U" @[10,10];                
              
};

library work;
use PinSym_defs;
/*******************************************************************************

  Package Pin [HSST]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_HSST_Q0 of package pin // pragma PAP_ARC_COLOR="128:255:255"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "Q0" @[10,10];                         
};

library work;
use PinSym_defs;
/*******************************************************************************

  Package Pin [HSST]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_HSST_Q1 of package pin // pragma PAP_ARC_COLOR="255:128:255"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "Q1" @[10,10];                         
};

library work;
use PinSym_defs;
/*******************************************************************************

  Package Pin [HSST]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_HSST_Q2 of package pin // pragma PAP_ARC_COLOR="255:255:128"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "Q2" @[10,10];                         
};

library work;
use PinSym_defs;
/*******************************************************************************

  Package Pin [VCCA_LANE]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_VCCA_LANE of package pin // pragma PAP_ARC_COLOR="255:255:128"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "A" @[10,10];                         
};

library work;
use PinSym_defs;
/*******************************************************************************

  Package Pin [VCCA_PLL0]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_VCCA_PLL0 of package pin // pragma PAP_ARC_COLOR="255:255:128"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "P0" @[10,10];                         
};

library work;
use PinSym_defs;
/*******************************************************************************

  Package Pin [VCCA_PLL1]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_VCCA_PLL1 of package pin // pragma PAP_ARC_COLOR="255:255:128"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "P1" @[10,10];                         
};

library work;
use PinSym_defs;
/*******************************************************************************

  Package Pin [VCCA25_PL]

  Author      []

  Abstract    [Depending on the color, square symbol represents several types of 
               package pin]

  Revision History:

********************************************************************************/
symbol sym_VCCA25_PLL of package pin // pragma PAP_ARC_COLOR="255:255:128"
{
    // The bounding box
    generate ( PIN_NUM_GUI_GRID_X # PIN_NUM_GUI_GRID_Y );

    // Polygon description
    shape
    [ 2, 2 ]  ->  [  , 18] 
              ->  [18,   ]
              ->  [  ,  2]
              ->  [ 2,  2]; 
              
    "P" @[10,10];                         
};
