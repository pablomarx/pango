
use pgc_defs, pgc_schm_funcs, pgc7km_defs;

schematic schm_view draw_logic_resource of device devPGC7KM
{

    // Tile index variable
    unsigned int tx, ty;


    // draw srb tile
    foreach tx ( L_SRB_TILES_X )
    {
        foreach ty ( L_TILES_Y )
        {
           draw_srb_tile(tx, ty);

        } 
    }
    
    

//      foreach tx ( {SFB_TILE_X_L} )
//      {
//          foreach ty ( L_SFB_TILES_Y_L )
//          {
//             draw_sfb_tile ( tx, ty, 0);

//          } 
//      }

//      foreach tx ( {SFB_TILE_X_R} )
//      {
//          foreach ty ( L_SFB_TILES_Y_R )
//          {
//             draw_sfb_tile ( tx, ty, 0);

//          } 
//      }


    // draw clms tile
    foreach tx ( L_CLMS_TILES_X )
    {
        foreach ty ( L_TILES_Y )
        {
           draw_clm_tile ( tx, ty );

        } 
    }

    foreach tx ( L_CLMSS_TILES_X )
    {
        foreach ty ( L_TILES_Y )
        {
           draw_clmss_tile ( tx, ty );

        } 
    }
    
    
    // draw drm tile
    foreach tx ( L_DRM_TILES_X )
    {
        foreach ty ( L_DRM_TILES_Y )
        {
            draw_drm_tile( tx, ty );
        }      
    } 
    
    
    
    //draw_pll_tile_7km( PLL_TILE_X, PLL_TILE_Y );
        
    //tx_srb = USCM_TILE_X - 1;
    //ty_srb = USCM_TILE_Y - 2;

     draw_uscm_7km_tile( USCM_TILE_X, USCM_TILE_Y);
    
    foreach tx ( L_CKEB_TILES_X )
    {
        foreach ty ( {CKEB_TILE_Y} )
        {
            draw_ckeb_tile( tx, ty);
        }      
    } 
    
    
    
    foreach tx ( L_CKEB2_TILES_X )
    {
        draw_ckeb2_tile( tx, CKEB_TILE_Y);
    } 
    
    
    
//      foreach tx ( {IOL_TILE_X_L} )
//      {
//          foreach ty ( L_IOL_TILES_Y_L )
//          {
//              draw_iol_tile( tx, ty, 2);
//          }      
//      }

//      foreach tx ( {IOL_TILE_X_R} )
//      {
//          foreach ty ( L_IOL_TILES_Y_R )
//          {
//              draw_iol_tile( tx, ty, 3);
//          }      
//      }
    
    draw_dll_tile( DLL_TILE_X_L, DLL_TILE_Y_L );

    draw_dll_tile( DLL_TILE_X_R, DLL_TILE_Y_R );
        
    
    
    //draw_cram_ctrl_tile( CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, CCS_TILE_X, CCS_TILE_Y, ANALOG_TILE_X, ANALOG_TILE_Y);
    
    
    foreach tx ( L_CKEBD_TILES_X )
    {
        foreach ty ( {CKEB_TILE_Y} )
        {
            draw_ckebd_tile( tx, ty);
        }      
    } 
    
    
//     draw_analog_tile( ANALOG_TILE_X, ANALOG_TILE_Y, CCS_TILE_Y, PLL_TILE_Y);
    
    //draw_idcode_tile(IDCODE_TILE_X, IDCODE_TILE_Y, CCS_TILE_X, CCS_TILE_Y);
   draw_iock_7km1_tile( IOCK_TILE_X_R, IOCK_TILE_Y );

   draw_iock_7km_tile( IOCK_TILE_X_L, IOCK_TILE_Y );
//      foreach ty( {ESD_TILE_Y} )
//      {
//          foreach tx ( {ESD_TILE_X} )
//          {
//             draw_esd_tile( tx, ty, CCS_TILE_X, CCS_TILE_Y, IOB0_TILE_X, IOB0_TILE_Y, ANALOG_TILE_X, ANALOG_TILE_Y);
//          }
//      }
//      foreach ty ( L_CLKBUF_TILES_Y )
//      {
//          foreach tx ( {CLKBUF_TILE_X} )
//          {
//              draw_clkbuf_tile( tx, ty);
//          }
//      } 
//      foreach ty( L_MIPI_DPHY_TILES_Y )
//      {
//          foreach tx( {MIPI_DPHY_TILE_X} )
//          {
//              draw_mipi_dphy_7km_tile(tx, ty);
//          }
//      }
    
    
//  //  draw_mipi_dphy_7km_tile( MIPI_DPHY_TILE_X, MIPI_DPHY0_TILE_Y);
//  //  draw_mipi_dphy_7km_tile( MIPI_DPHY_TILE_X, MIPI_DPHY1_TILE_Y);
    
//  //      draw_ccs_7k_tile(CCS_TILE_X, CCS_TILE_Y, PLL_TILE_X, PLL_TILE_Y);
};