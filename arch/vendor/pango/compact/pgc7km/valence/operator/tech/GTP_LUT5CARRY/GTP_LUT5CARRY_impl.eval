*****************************************************************

  Operator   [GTP_LUT5CARRY]

  Author      []

  Abstract    []

  Copyright 2014 (c). SHENZHEN PANGO MICROSYSTEMS CO.,LTD.
  All Right Reserved.

  Revision History:
     06/18/14 - Initial version.

********************************************************************************/
implementation impl of GTP_LUT5CARRY
{
    bit INIT_B[31:0] = INIT;
    string MODE      = "WAND";
   
    if (I4_TO_LUT == "TRUE" && I4_TO_CARRY == "FALSE" && CIN_TO_LUT == "FALSE" && ID_TO_LUT == "FALSE")
    {
         MODE = "WAND";
    }
    else if (I4_TO_LUT == "TRUE" && I4_TO_CARRY == "TRUE" && CIN_TO_LUT == "FALSE" && ID_TO_LUT == "TRUE")
    {
         MODE = "MUX4";
    }
    else if (I4_TO_LUT == "FALSE" && I4_TO_CARRY == "TRUE" && CIN_TO_LUT == "TRUE" && ID_TO_LUT == "FALSE")
    {
         MODE = "ARITH";
    }
    else if (I4_TO_LUT == "FALSE" && I4_TO_CARRY == "FALSE" && CIN_TO_LUT == "TRUE" && ID_TO_LUT == "FALSE")
    {
         MODE = "XOR";
    }
    else if (I4_TO_LUT == "TRUE" && I4_TO_CARRY == "TRUE" && CIN_TO_LUT == "FALSE" && ID_TO_LUT == "FALSE")
    {
         MODE = "COMP";
    }
    else if (I4_TO_LUT == "TRUE" && I4_TO_CARRY == "TRUE" && CIN_TO_LUT == "TRUE" && ID_TO_LUT == "FALSE")
    {
         MODE = "ARITH1";
    }
    else if (I4_TO_LUT == "TRUE" && I4_TO_CARRY == "TRUE" && CIN_TO_LUT == "TRUE" && ID_TO_LUT == "TRUE")
    {
         MODE = "ARITH2";
    }
    else if (I4_TO_LUT == "TRUE" && I4_TO_CARRY == "FALSE" && CIN_TO_LUT == "FALSE" && ID_TO_LUT == "TRUE")
    {
         MODE = "ARITH3";
    }
    else if (I4_TO_LUT == "TRUE" && I4_TO_CARRY == "FALSE" && CIN_TO_LUT == "TRUE" && ID_TO_LUT == "FALSE")
    {
         MODE = "ARITH4";
    }
    else if (I4_TO_LUT == "TRUE" && I4_TO_CARRY == "FALSE" && CIN_TO_LUT == "TRUE" && ID_TO_LUT == "TRUE")
    {
         MODE = "ARITH5";
    }
    else if (I4_TO_LUT == "FALSE" && I4_TO_CARRY == "TRUE" && CIN_TO_LUT == "FALSE" && ID_TO_LUT == "FALSE")
    {
         MODE = "ARITH6";
    }
    else if (I4_TO_LUT == "FALSE" && I4_TO_CARRY == "TRUE" && CIN_TO_LUT == "FALSE" && ID_TO_LUT == "TRUE")
    {
         MODE = "ARITH7";
    }
    else if (I4_TO_LUT == "FALSE" && I4_TO_CARRY == "TRUE" && CIN_TO_LUT == "TRUE" && ID_TO_LUT == "TRUE")
    {
         MODE = "ARITH8";
    }
    else if (I4_TO_LUT == "FALSE" && I4_TO_CARRY == "FALSE" && CIN_TO_LUT == "FALSE" && ID_TO_LUT == "FALSE")
    {
         MODE = "ARITH9";
    }
    else if (I4_TO_LUT == "FALSE" && I4_TO_CARRY == "FALSE" && CIN_TO_LUT == "FALSE" && ID_TO_LUT == "TRUE")
    {
         MODE = "ARITH10";
    }
    else if (I4_TO_LUT == "FALSE" && I4_TO_CARRY == "FALSE" && CIN_TO_LUT == "TRUE" && ID_TO_LUT == "TRUE")
    {
         MODE = "ARITH11";
    }
   
    operator gopA gateop
    parameter map 
    ( 
        INIT      => INIT_B,
        MODE      => MODE
    )
    port map
    (
        I0       => I0, 
        I1       => I1, 
        I2       => I2, 
        I3       => I3, 
        I4       => I4, 
        I0X      => ID,
        Cin      => CIN,
        Cout     => COUT,   
        Y        => Z
    );
};
