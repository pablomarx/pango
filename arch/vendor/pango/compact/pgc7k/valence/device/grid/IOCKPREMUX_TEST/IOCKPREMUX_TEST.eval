tarted
grid
device IOCKPREMUX_TEST
{
    // grid_property_def_start
    // grid_property_def_end

    parameter
    (

    );
    port
    (
// configuration_body_def_on
// configuration_body_def_end

        input SIG_FR_SRB[3:0] = 4'b1111,
        input CLKOS_PLL0_T = 1'b1,
        input CLKOP_PLL0_T = 1'b1,
        input CLKOS_PLL1_T = 1'b1,
        input CLKOP_PLL1_T = 1'b1,
        input PCLKTB_0_T = 1'b1,
        input PCLKTB_1_T = 1'b1,
        input PCLKTB_2_T = 1'b1,
        input PCLKLR_0_T = 1'b1,
        input PCLKLR_1_T = 1'b1,
        input SRB_T = 1'b1,
        output CLK_TEST
    );
};
//grid device end

//grid device structure netlist started
structure netlist of IOCKPREMUX_TEST
{

};
//grid device structure netlist end

timing iockpremux_test_tnl of IOCKPREMUX_TEST
{
    wire nt_mux4_0_z;
    wire nt_mux4_1_z;
    wire nt_mux4_2_z;
    wire nt_mux4_3_z;

    operator V_MUX4 V_MUX4_0
        port map
        (
            I0    => 1'b1       ,
            I1    => CLKOS_PLL0_T,
            I2    => CLKOP_PLL0_T,
            I3    => CLKOS_PLL1_T,
            S0    => SIG_FR_SRB[0],
            S1    => SIG_FR_SRB[1],
            Z     => nt_mux4_0_z 
        );
    operator V_MUX4 V_MUX4_1
        port map
        (
            I0    => CLKOP_PLL1_T,
            I1    => PCLKTB_0_T,
            I2    => PCLKTB_1_T,
            I3    => PCLKTB_2_T,
            S0    => SIG_FR_SRB[0],
            S1    => SIG_FR_SRB[1],
            Z     => nt_mux4_1_z 
        );
    operator V_MUX4 V_MUX4_2
        port map
        (
            I0    => PCLKLR_0_T,
            I1    => PCLKLR_1_T,
            I2    => 1'b1,
            I3    => 1'b1,
            S0    => SIG_FR_SRB[0],
            S1    => SIG_FR_SRB[1],
            Z     => nt_mux4_2_z 
        );
    operator V_MUX4 V_MUX4_3
        port map
        (
            I0    => 1'b1,
            I1    => 1'b1,
            I2    => SRB_T,
            I3    => 1'b1,
            S0    => SIG_FR_SRB[0],
            S1    => SIG_FR_SRB[1],
            Z     => nt_mux4_3_z 
        );

    operator V_MUX4 V_MUX4_4
        port map
        (
            I0    => nt_mux4_0_z,
            I1    => nt_mux4_1_z,
            I2    => nt_mux4_2_z,
            I3    => nt_mux4_3_z,
            S0    => SIG_FR_SRB[2],
            S1    => SIG_FR_SRB[3],
            Z     => CLK_TEST 
        );
};
