*************************************************************************
                                functions for DATA
****************************************************************************************/
library work;
use pgc_defs,pgc7km_defs,pgc_funcs_place,pgc7km_funcs_place;
use pgc7km_funcs_connect_wl_bl;
use pgc_funcs_connect_logic;

structure arch_nl connect_bl of devPGC7KM
{

    unsigned int tx,ty;

    int tx_bl = CRAM_CTRL_TILE_X;
    int ty_bl = CRAM_CTRL_TILE_Y;

    string device_bl = "CRAM_CTRL_7KM_TILE";

    string data, datan;


//connect_core_bl_input for SRB_TILE, CLM_TILE 

    foreach tx( L_SRB_TILES_X )
    {
        data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
               (tx > RPT_X_R) ? "DATA_R_NEXT" :
                                "DATA" ;
        datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
                (tx > RPT_X_R) ? "DATAN_R_NEXT" :
                                 "DATAN" ;

        connect_core_bl_input( tx, tx_bl, ty_bl, data, datan, device_bl, "SRB_TILE");
    }

    foreach tx( L_CLMS_TILES_X )
    {
        data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
               (tx > RPT_X_R) ? "DATA_R_NEXT" :
                                "DATA" ;
        datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
                (tx > RPT_X_R) ? "DATAN_R_NEXT" :
                                 "DATAN" ;

        connect_core_bl_input( tx, tx_bl, ty_bl, data, datan, device_bl, "CLMS_TILE");
    }

    foreach tx( L_CLMSS_TILES_X )
    {
        data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
               (tx > RPT_X_R) ? "DATA_R_NEXT" :
                                "DATA" ;
        datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
                (tx > RPT_X_R) ? "DATAN_R_NEXT" :
                                 "DATAN" ;

        connect_core_bl_input( tx, tx_bl, ty_bl, data, datan, device_bl, "CLMSS_TILE");
    }

//connect_sfb_bl_input

//  foreach tx( {SFB_TILE_X_L} )
//  {
//      data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
//             (tx > RPT_X_R) ? "DATA_R_NEXT" :
//                              "DATA" ;
//      datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
//              (tx > RPT_X_R) ? "DATAN_R_NEXT" :
//                               "DATAN" ;

//      connect_sfb_bl_input(tx, tx_bl, ty_bl, data, datan, device_bl, "SFB_TILE");
//  }

//  foreach tx( {SFB_TILE_X_R} )
//  {
//      data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
//             (tx > RPT_X_R) ? "DATA_R_NEXT" :
//                              "DATA" ;
//      datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
//              (tx > RPT_X_R) ? "DATAN_R_NEXT" :
//                               "DATAN" ;

//      connect_sfb_bl_input(tx, tx_bl, ty_bl, data, datan, device_bl, "SFB_TILE");
//  }


//connect_mid_region_bl_input  for CKEB_TILE, USCM_TILE

    foreach tx( L_CKEB_TILES_X )
    {
        data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
               (tx > RPT_X_R) ? "DATA_R_NEXT" :
                                "DATA" ;
        datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
                (tx > RPT_X_R) ? "DATAN_R_NEXT" :
                                 "DATAN" ;
         connect_mid_region_bl_input(tx, CKEB_TILE_Y, tx_bl, ty_bl, data, datan, device_bl, "CKEB_TILE");
    }


    foreach tx( L_CKEBD_TILES_X )
    {
        data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
               (tx > RPT_X_R) ? "DATA_R_NEXT" :
                                "DATA" ;
        datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
                (tx > RPT_X_R) ? "DATAN_R_NEXT" :
                                 "DATAN" ;
         connect_mid_region_bl_input(tx, CKEB_TILE_Y, tx_bl, ty_bl, data, datan, device_bl, "CKEBD_TILE");
    }


    foreach tx( L_CKEB2_TILES_X )
    {
        data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
               (tx > RPT_X_R) ? "DATA_R_NEXT" :
                                "DATA" ;
        datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
                (tx > RPT_X_R) ? "DATAN_R_NEXT" :
                                 "DATAN" ;
         connect_mid_region_bl_input(tx, CKEB_TILE_Y, tx_bl, ty_bl, data, datan, device_bl, "CKEB2_TILE");
    }


    connect_mid_region_bl_input(USCM_TILE_X, USCM_TILE_Y, tx_bl, ty_bl, "DATA", "DATAN", device_bl, "USCM_7KM_TILE");

//connect_iock_bl_input_7km

    foreach tx( {IOCK_TILE_X_L} )
    {
        data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
               (tx > RPT_X_R) ? "DATA_R_NEXT" :
                                "DATA" ;
        datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
                (tx > RPT_X_R) ? "DATAN_R_NEXT" :
                                 "DATAN" ;
        connect_iock_bl_input_7km(tx, IOCK_TILE_Y, tx_bl, ty_bl, data, datan, device_bl, "IOCK_7KM_TILE");
    }
  
    foreach tx( {IOCK_TILE_X_R} )
    {
        data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
               (tx > RPT_X_R) ? "DATA_R_NEXT" :
                                "DATA" ;
        datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
                (tx > RPT_X_R) ? "DATAN_R_NEXT" :
                                 "DATAN" ;
        connect_iock_bl_input_7km(tx, IOCK_TILE_Y, tx_bl, ty_bl, data, datan, device_bl, "IOCK_7KM1_TILE");
    }
  
//connect_iol_bl_input


//connect_drm_apm_bl_input_7km

    foreach tx( L_DRM_TILES_X )
    {
        data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
               (tx > RPT_X_R) ? "DATA_R_NEXT" :
                                "DATA" ;
        datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
                (tx > RPT_X_R) ? "DATAN_R_NEXT" :
                                 "DATAN" ;

        connect_drm_apm_bl_input_7km(tx, tx_bl, ty_bl, data, datan, device_bl, "DRM_TILE");
    }

//connect_pll_bl_input_7km

    connect_pll_bl_input_7km(PLL_TILE_X, PLL_TILE_Y, tx_bl, ty_bl, "DATA_L_NEXT", "DATAN_L_NEXT", device_bl, "PLL_TILE");

//connect_dll_bl_input_7km

    foreach tx( {DLL_TILE_X_L} )
    {
        data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
               (tx > RPT_X_R) ? "DATA_R_NEXT" :
                                "DATA" ;
        datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
                (tx > RPT_X_R) ? "DATAN_R_NEXT" :
                                 "DATAN" ;
         connect_dll_bl_input_7km(tx, DLL_TILE_Y_L, tx_bl, ty_bl, data, datan, device_bl, "DLL_TILE");       
    }

    foreach tx( {DLL_TILE_X_R} )
    {
        data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
               (tx > RPT_X_R) ? "DATA_R_NEXT" :
                                "DATA" ;
        datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
                (tx > RPT_X_R) ? "DATAN_R_NEXT" :
                                 "DATAN" ;
         connect_dll_bl_input_7km(tx, DLL_TILE_Y_R, tx_bl, ty_bl, data, datan, device_bl, "DLL_TILE");       
    }

//connect_iob_bl_input_7km

//  foreach tx( IOB_TILE_X_L )
//  {
//      data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
//             (tx > RPT_X_R) ? "DATA_R_NEXT" :
//                              "DATA" ;
//      datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
//              (tx > RPT_X_R) ? "DATAN_R_NEXT" :
//                               "DATAN" ;
//      connect_iob_bl_input_7km(tx, IOB0_TILE_Y, tx_bl, ty_bl, data, datan, device_bl, "IOB0_7KM_TILE" );
//  }

//  foreach tx( IOB_TILE_X_R )
//  {
//      data = (tx < RPT_X_L) ? "DATA_L_NEXT" :
//             (tx > RPT_X_R) ? "DATA_R_NEXT" :
//                              "DATA" ;
//      datan = (tx < RPT_X_L) ? "DATAN_L_NEXT" :
//              (tx > RPT_X_R) ? "DATAN_R_NEXT" :
//                               "DATAN" ;

//      connect_iob_bl_input_7km(tx, IOB1_TILE_Y, tx_bl, ty_bl, data, datan, device_bl. "IOB1_7KM_TILE");        
//      connect_iob_bl_input_7km(tx, IOB2_TILE_Y, tx_bl, ty_bl, data, datan, device_bl. "IOB2_7KM_TILE");        
//  }



//  //  int ty;
//  //  foreach tx( L_DRM_TILES_X )
//  //  {
//  //    foreach ty( L_DRM_TILES_Y )
//  //    {
//  //      connect_drm_mask_input( tx, ty, CCS_TILE_X, CCS_TILE_Y, "CCS_7K_TILE");
//  //    }
//  //  }
//      


};//end of structure arch_nl connect_bl of devPGC7KM
/***************************************************************************************
                                functions for ADDR
****************************************************************************************/
library work;
use pgc_defs,pgc7km_defs,pgc_funcs_place,pgc7km_funcs_place;
use pgc7km_funcs_connect_wl_bl;
use pgc_funcs_connect_logic;

structure arch_nl connect_wl of devPGC7KM
{
    unsigned int ty;

    int tx_wl = CRAM_CTRL_TILE_X;
    int ty_wl = CRAM_CTRL_TILE_Y;

    string device_wl = "CRAM_CTRL_7KM_TILE";
    string tile_name;


//connect_srb_wl_input_7km

    foreach ty( L_TILES_Y )
    {
        connect_srb_wl_input_7km(ty, tx_wl, ty_wl, device_wl, "SRB_TILE");
    }

//connect_clms_wl_input_7km & connect_clmss_wl_input_7km

    foreach ty(L_TILES_Y)
    {
        connect_clms_wl_input_7km(ty, tx_wl, ty_wl, device_wl, "CLMS_TILE");
    }

    foreach ty(L_TILES_Y)
    {
        connect_clmss_wl_input_7km(ty, tx_wl, ty_wl, device_wl, "CLMSS_TILE");
    }

//connect_iol_wl_input_7km

//  foreach ty( L_IOL_TILES_X_L )
//  {
//      connect_iol_wl_input_7km(IOL_TILE_X_L, ty, tx_wl, ty_wl, device_wl, "IOL_7KM_TILE");
//  }

//  foreach ty( L_IOL_TILES_X_R )
//  {
//      connect_iol_wl_input_7km(IOL_TILE_X_R, ty, tx_wl, ty_wl, device_wl, "IOL_7KM_TILE");
//  }

//  foreach ty( L_SFB_TILES_Y_L )
//  {
//      connect_iol_wl_input_7km(SFB_TILE_X_L, ty, tx_wl, ty_wl, device_wl, "SFB_TILE");
//  }

//  foreach ty( L_SFB_TILES_Y_R )
//  {
//      connect_iol_wl_input_7km(SFB_TILE_X_R, ty, tx_wl, ty_wl, device_wl, "SFB_TILE");
//  }

    connect_iol_wl_input_7km(PLL_TILE_X, PLL_TILE_Y, tx_wl, ty_wl, device_wl, "PLL_TILE");

    connect_iol_wl_input_7km(DLL_TILE_X_L, DLL_TILE_Y_L, tx_wl, ty_wl, device_wl, "DLL_TILE");

    connect_iol_wl_input_7km(DLL_TILE_X_R, DLL_TILE_Y_R, tx_wl, ty_wl, device_wl, "DLL_TILE");

//  connect_iol_wl_input_7km(CCS_TILE_X, CCS_TILE_Y, tx_wl, ty_wl, device_wl, "CCS_TILE");
//  connect_iol_wl_input_7km(ANALOG_TILE_X, ANALOG_TILE_Y, tx_wl, ty_wl, device_wl, "ANALOG_7KM_TILE");

//connect_drm_wl_input_7km

    foreach ty( L_DRM_TILES_Y )
    {
        connect_drm_wl_input_7km(ty, tx_wl, ty_wl, device_wl, "DRM_TILE");
    }  

//connect_uscm_wl_input_7km

    connect_uscm_wl_input_7km(USCM_TILE_X, USCM_TILE_Y, tx_wl, ty_wl, device_wl, "USCM_7KM_TILE");

//connect_iock_wl_input_7km & connect_iock_wl_input_7km1

    connect_iock_wl_input_7km(IOCK_TILE_X_L, IOCK_TILE_Y, tx_wl, ty_wl, device_wl, "IOCK_7KM_TILE");

    connect_iock_wl_input_7km1(IOCK_TILE_X_R, IOCK_TILE_Y, tx_wl, ty_wl, device_wl, "IOCK_7KM1_TILE");

//connect_ckeb_wl_input_7km

    connect_ckeb_wl_input_7km(CKEB_TILE_Y, tx_wl, ty_wl, device_wl, "CKEB_TILE");

//connect_ckebd_wl_input_7km

    connect_ckebd_wl_input_7km(CKEB_TILE_Y, tx_wl, ty_wl, device_wl, "CKEBD_TILE");

//connect_ckeb2_wl_input_7km

    connect_ckeb2_wl_input_7km(CKEB_TILE_Y, tx_wl, ty_wl, device_wl, "CKEB2_TILE");

};//end of structure arch_nl connect_wl of devPGC7KM
/***************************************************************************************
                                functions for Global Signal
****************************************************************************************/
library work;
use pgc_defs,pgc7km_defs,pgc_funcs_place,pgc7km_funcs_place;
use pgc7km_funcs_connect_wl_bl;
use pgc_funcs_connect_logic;

structure arch_nl connect_gs of devPGC7KM
{
    unsigned int tx, ty;

    int tx_wl = CRAM_CTRL_TILE_X;
    int ty_wl = CRAM_CTRL_TILE_Y;

    string device_wl = "CRAM_CTRL_7KM_TILE";

//connect_clms_mask_data   for clm cloumn which nearst to cram_ctrl
//connection: TIELO->[MASK_DATA_CIN MASK_DATA_COUT]->...->[MASK_DATA_CIN MAKS_DATA_COUT]->[MASK_DATA_L (cram_ctrl) MASK_DATA_R]<-[MASK_DATA_COUT MASK_DATA_CIN]<-...<-[MASK_DATA_COUT MASK_DATA_CIN]<-TIELO

    connect_clm_mask_data2cram(15, tx_wl, ty_wl, device_wl, "CLMS_TILE");

    connect_clm_mask_data2cram(12, tx_wl, ty_wl, device_wl, "CLMS_TILE");

    foreach tx( {L_CLMS_TILES_X, L_CLMSS_TILES_X} )
    {
        foreach ty( L_TILES_Y )
        {
            connect_clm_mask_data_7km(tx, ty, tx_wl);
        }
    }

//connect_drm_mask_input_7km

    foreach ty( L_DRM_TILES_Y )
    {
        connect_drm_mask_input_7km(ty, tx_wl, ty_wl, device_wl, "DRM_TILE");
    }

};//end of structure arch_nl connect_gs of devPGC7KM

