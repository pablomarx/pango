*************************************************************************
****************************************************************************************/
library work;
use pgc_defs,pgc10k_defs,pgc_funcs_place;//pgc_funcs_connect_gs_wl;
use pgc10k_funcs_connect_wl_bl;

structure arch_nl connect_gs_wl of devPGC10K
{   
    unsigned int tx,ty;

    string data,datan ;

    foreach ty( L_SRB_TILES_Y)
    {
      connect_srb_wl_input(ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
    }

    foreach ty( L_CLMS_TILES_Y )
    {
      connect_clm_wl_input(ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
    }

      foreach ty( L_DRM_TILES_Y )
      {
        connect_drm_wl_input(ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
      }

    foreach tx( L_SFBUDC_TILES_X )
    {

        data = (tx <= RPT_L_X) ? "DATA_L_NEXT" :
               (tx >= RPT_R_X) ? "DATA_R_NEXT" :
                                 "DATA" ;
        datan = (tx <= RPT_L_X) ? "DATAN_L_NEXT" :
                (tx >= RPT_R_X) ? "DATAN_R_NEXT" :
                                  "DATAN" ;

      foreach ty( L_SFBUDC_TILES_Y )
      {
        connect_sfbudc_wl_input(tx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, USCM_TILE_Y);
        connect_sfbudc_bl_input(tx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, USCM_TILE_Y, data, datan);
      }
    }

    foreach tx( {SFBBT_TILE_X} )
    {
        foreach ty( L_SFBBT_TILES_Y )
          {
            connect_sfbbt_wl_input(tx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, USCM_TILE_Y);
            connect_sfbbt_bl_input(tx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, USCM_TILE_Y);
          }
    }

    connect_ckeb_wl_input(CRAM_CTRL_TILE_Y, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);

  foreach tx( L_IOLL_TILES_X )
  {
    foreach ty( L_IOLL_TILES_Y)
    {
      connect_iollr_wl_input(tx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y,CCS_TILE_Y,ANALOG_TILE_Y);
    }
  }

  foreach tx( L_IOLR_TILES_X )
  {
    foreach ty( L_IOLR_TILES_Y)
    {
      connect_iollr_wl_input(tx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y,CCS_TILE_Y,ANALOG_TILE_Y);
    }
  }

    foreach ty( L_IOL_TILES_Y)
    {
      connect_iol_wl_input(ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
    }

    connect_dll_wl_input(DLL_TILE1_Y, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
    connect_dll_wl_input(DLL_TILE0_Y, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);

  foreach tx( {SFB_R_TILE_X} )
  {
    foreach ty( L_SFB_R_TILES_Y )
    {
      connect_sfb_wl_input( tx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y,USCM_TILE_X);
    }
  }
  foreach tx( {SFB_L_TILE_X} )
  {
    foreach ty( L_SFB_L_TILES_Y )
    {
      connect_sfb_wl_input( tx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y,USCM_TILE_X);
    }
  }
  foreach tx( {PLL_TILE_X} )
  {
    foreach ty( L_PLL_TILES_Y )
    {
      connect_iollr_wl_input(tx,ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y,CCS_TILE_Y,ANALOG_TILE_Y);
    }
  }

    connect_iollr_wl_input(CCS_TILE_X, CCS_TILE_Y, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y,CCS_TILE_Y,ANALOG_TILE_Y);
    connect_iollr_wl_input(ANALOG_TILE_X, ANALOG_TILE_Y, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y,CCS_TILE_Y,ANALOG_TILE_Y);

    connect_clkdly_wl_input(CLKDLY_TILE_X,CLKDLYB_TILE_Y,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y);
    connect_clkdly_wl_input(CLKDLY_TILE_X,CLKDLYT_TILE_Y,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y);


};//end of structure arch_nl connect_global_sig of devPGC10K

/***************************************************************************************
****************************************************************************************/
library work;
use pgc_defs,pgc10k_defs,pgc_funcs_place;//pgc_funcs_connect_gs_wl;
use pgc10k_funcs_connect_wl_bl;
use pgc_funcs_connect_logic;

structure arch_nl connect_bl of devPGC10K
{

    unsigned int l_tx_srb[] = L_SRB_TILES_X;  
    unsigned int tx;
    string data,datan;

    foreach tx( l_tx_srb )
    {
        data = (tx <= RPT_L_X) ? "DATA_L_NEXT" :
               (tx >= RPT_R_X) ? "DATA_R_NEXT" :
                                 "DATA" ;
        datan = (tx <= RPT_L_X) ? "DATAN_L_NEXT" :
                (tx >= RPT_R_X) ? "DATAN_R_NEXT" :
                                  "DATAN" ;

      connect_srb_bl_input( tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, data, datan);
    }

    foreach tx( L_CLMS_TILES_X )
    {
        data = (tx <= RPT_L_X) ? "DATA_L_NEXT" :
               (tx >= RPT_R_X) ? "DATA_R_NEXT" :
                                 "DATA" ;
        datan = (tx <= RPT_L_X) ? "DATAN_L_NEXT" :
                (tx >= RPT_R_X) ? "DATAN_R_NEXT" :
                                  "DATAN" ;

      connect_clm_bl_input( tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, data, datan,"CLMS_TILE");
    }
    foreach tx( L_CLMSS_TILES_X )
    {
        data = (tx <= RPT_L_X) ? "DATA_L_NEXT" :
               (tx >= RPT_R_X) ? "DATA_R_NEXT" :
                                 "DATA" ;
        datan = (tx <= RPT_L_X) ? "DATAN_L_NEXT" :
                (tx >= RPT_R_X) ? "DATAN_R_NEXT" :
                                  "DATAN" ;

      connect_clm_bl_input( tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, data, datan,"CLMSS_TILE");
    }

    foreach tx( L_DRM_TILES_X )
    {
        data = (tx <= RPT_L_X) ? "DATA_L_NEXT" :
               (tx >= RPT_R_X) ? "DATA_R_NEXT" :
                                 "DATA" ;
        datan = (tx <= RPT_L_X) ? "DATAN_L_NEXT" :
                (tx >= RPT_R_X) ? "DATAN_R_NEXT" :
                                  "DATAN" ;

      connect_drm_bl_input( tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, data, datan);
    }


    foreach tx( L_CKEB_TILES_X )
    {
        data = (tx <= RPT_L_X) ? "DATA_L_NEXT" :
               (tx >= RPT_R_X) ? "DATA_R_NEXT" :
                                 "DATA" ;
        datan = (tx <= RPT_L_X) ? "DATAN_L_NEXT" :
                (tx >= RPT_R_X) ? "DATAN_R_NEXT" :
                                  "DATAN" ;

      connect_ckeb_bl_input( tx, CKEB2_TILE_Y, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, data, datan);
    }

      connect_ckeb_bl_input( CKEB2_TILE_X, CKEB2_TILE_Y, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, "DATA", "DATAN");
      connect_ckeb_bl_input( CKEB2D_TILE_X, CKEB2D_TILE_Y, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, "DATA_R_NEXT", "DATAN_R_NEXT");

    foreach tx( L_CKEBD_TILES_X )
    {
        data = (tx <= RPT_L_X) ? "DATA_L_NEXT" :
               (tx >= RPT_R_X) ? "DATA_R_NEXT" :
                                 "DATA" ;
        datan = (tx <= RPT_L_X) ? "DATAN_L_NEXT" :
                (tx >= RPT_R_X) ? "DATAN_R_NEXT" :
                                  "DATAN" ;

      connect_ckeb_bl_input( tx, CKEBD_TILE_Y, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, data, datan);
    }

      
        connect_uscm_bl_input( USCM_TILE_X, USCM_TILE_Y, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
    
   
    foreach tx( L_IOL_TILES_X )
    {
        data = (tx <= RPT_L_X) ? "DATA_L_NEXT" :
               (tx >= RPT_R_X) ? "DATA_R_NEXT" :
                                 "DATA" ;
        datan = (tx <= RPT_L_X) ? "DATAN_L_NEXT" :
                (tx >= RPT_R_X) ? "DATAN_R_NEXT" :
                                  "DATAN" ;

      connect_iol_bl_input( tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, data, datan);
    }

    foreach tx( L_IOLC_TILES_X )
    {
        data = (tx <= RPT_L_X) ? "DATA_L_NEXT" :
               (tx >= RPT_R_X) ? "DATA_R_NEXT" :
                                 "DATA" ;
        datan = (tx <= RPT_L_X) ? "DATAN_L_NEXT" :
                (tx >= RPT_R_X) ? "DATAN_R_NEXT" :
                                  "DATAN" ;

      connect_iolc_bl_input( tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, data, datan);
    }

    foreach tx( L_IOLL_TILES_X )
    {
        data = (tx <= RPT_L_X) ? "DATA_L_NEXT" :
               (tx >= RPT_R_X) ? "DATA_R_NEXT" :
                                 "DATA" ;
        datan = (tx <= RPT_L_X) ? "DATAN_L_NEXT" :
                (tx >= RPT_R_X) ? "DATAN_R_NEXT" :
                                  "DATAN" ;

      connect_iollr_bl_input( tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, data, datan);
    }

    foreach tx( L_IOLR_TILES_X )
    {
        data = (tx <= RPT_L_X) ? "DATA_L_NEXT" :
               (tx >= RPT_R_X) ? "DATA_R_NEXT" :
                                 "DATA" ;
        datan = (tx <= RPT_L_X) ? "DATAN_L_NEXT" :
                (tx >= RPT_R_X) ? "DATAN_R_NEXT" :
                                  "DATAN" ;

      connect_iollr_bl_input( tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, data, datan);
    }

     connect_clkdly_bl_input( CLKDLY_TILE_X, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, "DATA", "DATAN");
    
//  int ty;
//  foreach tx( L_DRM_TILES_X )
//  {
//      foreach ty( L_DRM_TILES_Y )
//      {
//          connect_drm_mask_input( tx, ty, CCS_TILE_X, CCS_TILE_Y, "CCS_10K_TILE");
//      }
//  }

};//end of structure arch_nl connect_bl of devPGC10K
/***************************************************************************************
****************************************************************************************/
library work;
use pgc_defs,pgc10k_defs;
use pgc_funcs_place;//pgc_funcs_connect_gs_wl;
use pgc10k_funcs_connect_wl_bl;
structure arch_nl connect_bscan of devPGC10K
{

    connect_iob_gs(CCS_TILE_X, CCS_TILE_Y, ANALOG_TILE_X, ANALOG_TILE_Y, IOB0_TILE_X, IOB0_TILE_Y, IOB1_TILE_X, IOB1_TILE_Y, IOB2_TILE_X, IOB2_TILE_Y, IOB3_TILE_X, IOB3_TILE_Y, IOB4_TILE_X, IOB4_TILE_Y, IOB5_TILE_X, IOB5_TILE_Y);

};//end of structure arch_nl connect_bias of devPGC10K

/***************************************************************************************
****************************************************************************************/
library work;
use pgc_defs,pgc10k_defs;
use pgc_funcs_place;//pgc_funcs_connect_gs_wl;
use pgc10k_funcs_connect_wl_bl;
structure arch_nl connect_iob_wl_bl of devPGC10K
{

    connect_iobb_wl(IOB3_TILE_X,IOB3_TILE_Y,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y,0);
    connect_iobb_wl(IOB4_TILE_X,IOB4_TILE_Y,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y,1);
    connect_iobb_wl(IOB5_TILE_X,IOB5_TILE_Y,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y,2);

    connect_ioblr_wl(IOB0_TILE_X,IOB0_TILE_Y,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y);
    connect_ioblr_wl(IOB2_TILE_X,IOB2_TILE_Y,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y);

    connect_iobt_wl(IOB1_TILE_X,IOB1_TILE_Y,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y);

    connect_iobb_bl(IOB3_TILE_X,IOB3_TILE_Y,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y,0);
    connect_iobb_bl(IOB4_TILE_X,IOB4_TILE_Y,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y,1);
    connect_iobb_bl(IOB5_TILE_X,IOB5_TILE_Y,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y,2);

    connect_ioblr_bl(IOB0_TILE_X,IOB0_TILE_Y,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y);
    connect_ioblr_bl(IOB2_TILE_X,IOB2_TILE_Y,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y);

    connect_iobt_bl(IOB1_TILE_X,IOB1_TILE_Y,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y);


};//end of structure arch_nl connect_iobb_wl_bl of devPGC10K
/***************************************************************************************
****************************************************************************************/
library work;
use pgc_defs,pgc10k_defs;
use pgc_funcs_place;
use pgc10k_funcs_connect_wl_bl;
structure arch_nl connect_cram0622_wl_bl of devPGC10K
{
    int tx,ty; 
    string data,datan;

  foreach tx( {CRAM0622_TILE_X} )
  {
        
    foreach ty( L_CRAM0622_TILES_Y )
    {
        data = (ty==2) ? "DATA_L_NEXT" :
               (ty==45) ? "DATA_L_NEXT" :
                            "DATA_R_NEXT" ;
        datan = (ty==2) ? "DATAN_L_NEXT" :
                (ty==45) ? "DATAN_L_NEXT" :
                            "DATAN_R_NEXT" ;

    connect_cram0622_bl(tx,ty,CRAM_CTRL_TILE_X,CRAM_CTRL_TILE_Y,data,datan);
    connect_cram0622_wl(CRAM0622_TILE_X, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
    }
  }
};//end of structure arch_nl connect_cram0622_wl_bl of devPGC10K

