use pgc_defs,pgc2k_defs,pgc_ANALOG_SRB_inc;
use pgc_CCS_SRB_inc;

package pgc2k_funcs_place
{
/********************************************************************************
********************************************************************************/
function place_ccs_tile(unsigned int tx,ty,tx_pll0,ty_pll0,tx_pll1,ty_pll1)
{   
    unsigned int sx, sy;
    
    sx = tx * NUM_GRID_X + 3;
    sy = ty * NUM_GRID_Y;
   
    string strVar;
   

    sprintf(strVar,"ntGRS_N_%d_%d",sx,sy);
    &wire ntRef_ntGRS_N = wire *strVar;

    sprintf(strVar,"ntGLOGEN_%d_%d",sx,sy);
    &wire ntRef_ntGLOGEN = wire *strVar;

    sprintf(strVar,"ntGOUTEN_%d_%d",sx,sy);
    &wire ntRef_ntGOUTEN = wire *strVar;

    sprintf(strVar,"ntGWEN_%d_%d",sx,sy);
    &wire ntRef_ntGWEN = wire *strVar;

    sprintf(strVar,"ntCFGMOD_JEN_%d_%d",sx,sy);
    &wire ntRef_ntCFGMOD_JEN = wire *strVar;

    sprintf(strVar,"ntCFGMOD_JTAG_%d_%d",sx,sy);
    &wire ntRef_ntCFGMOD_JTAG = wire *strVar;

    sprintf(strVar,"ntCFGMOD_RST_%d_%d",sx,sy);
    &wire ntRef_ntCFGMOD_RST = wire *strVar;

    sprintf(strVar,"ntCFGMOD_INIT_%d_%d",sx,sy);
    &wire ntRef_ntCFGMOD_INIT = wire *strVar;

    sprintf(strVar,"ntCFGMOD_DONE_%d_%d",sx,sy);
    &wire ntRef_ntCFGMOD_DONE = wire *strVar;

    sprintf(strVar,"ntCFGMOD_SPI_%d_%d",sx,sy);
    &wire ntRef_ntCFGMOD_SPI = wire *strVar;

    sprintf(strVar,"ntCFGMOD_MS_%d_%d",sx,sy);
    &wire ntRef_ntCFGMOD_MS = wire *strVar;

    sprintf(strVar,"ntCFGMOD_I2C_%d_%d",sx,sy);
    &wire ntRef_ntCFGMOD_I2C = wire *strVar;

    sprintf(strVar,"ntCFGMOD_SPAL_%d_%d",sx,sy);
    &wire ntRef_ntCFGMOD_SPAL = wire *strVar;

    sprintf(strVar,"ntCFGMOD_EFB_%d_%d",sx,sy);
    &wire ntRef_ntCFGMOD_EFB = wire *strVar;

    sprintf(strVar,"ntCFGMOD_SS_%d_%d",sx,sy);
    &wire ntRef_ntCFGMOD_SS = wire *strVar;

    sprintf(strVar,"ntJRST_%d_%d",sx,sy);
    &wire ntRef_ntJRST = wire *strVar            /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntCLOCKDR_%d_%d",sx,sy);
    &wire ntRef_ntCLOCKDR = wire *strVar         /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntSHIFTDR_%d_%d",sx,sy);
    &wire ntRef_ntSHIFTDR = wire *strVar         /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntUPDATEDR_%d_%d",sx,sy);
    &wire ntRef_ntUPDATEDR = wire *strVar        /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntMODE_1_%d_%d",sx,sy);
    &wire ntRef_ntMODE_1 = wire *strVar;

    sprintf(strVar,"ntMODE_2_%d_%d",sx,sy);
    &wire ntRef_ntMODE_2 = wire *strVar;

    sprintf(strVar,"ntMODE_3_%d_%d",sx,sy);
    &wire ntRef_ntMODE_3 = wire *strVar;

    sprintf(strVar,"ntPUP_SEL_N_%d_%d",sx,sy);
    &wire ntRef_ntPUP_SEL_N = wire *strVar;

    sprintf(strVar,"ntTDI_CCS_%d_%d",sx,sy);
    &wire ntRef_ntTDI_CCS = wire *strVar;

    sprintf(strVar,"ntBLSRIN_%d_%d",sx,sy);
    &wire ntRef_ntBLSRIN[31:0] = wire *strVar[31:0];

    sprintf(strVar,"ntCLK_CRAM_%d_%d",sx,sy);
    &wire ntRef_ntCLK_CRAM = wire *strVar;

    sprintf(strVar,"ntCMEM_TYPE_%d_%d",sx,sy);
    &wire ntRef_ntCMEM_TYPE[1:0] = wire *strVar[1:0];

    sprintf(strVar,"ntERASE_EN_%d_%d",sx,sy);
    &wire ntRef_ntERASE_EN = wire *strVar;

    sprintf(strVar,"ntWL_ON_%d_%d",sx,sy);
    &wire ntRef_ntWL_ON = wire *strVar;

    sprintf(strVar,"ntCOLUMN_%d_%d",sx,sy);
    &wire ntRef_ntCOLUMN[7:0] = wire *strVar[7:0];

    sprintf(strVar,"ntFRAME_ADDR_%d_%d",sx,sy);
    &wire ntRef_ntFRAME_ADDR[7:0] = wire *strVar[7:0];

    sprintf(strVar,"ntPROG_ON_%d_%d",sx,sy);
    &wire ntRef_ntPROG_ON = wire *strVar;

    sprintf(strVar,"ntPROG_CAP_%d_%d",sx,sy);
    &wire ntRef_ntPROG_CAP = wire *strVar;

    sprintf(strVar,"ntREGION_RW_EN_%d_%d",sx,sy);
    &wire ntRef_ntREGION_RW_EN = wire *strVar;

    sprintf(strVar,"ntPRECHGE_%d_%d",sx,sy);
    &wire ntRef_ntPRECHGE = wire *strVar;

    sprintf(strVar,"ntREAD_%d_%d",sx,sy);
    &wire ntRef_ntREAD = wire *strVar;

    sprintf(strVar,"ntRDBK_CAP_%d_%d",sx,sy);
    &wire ntRef_ntRDBK_CAP = wire *strVar;

    sprintf(strVar,"ntPRECHGNN_DRM_OUT_%d_%d",sx,sy);
    &wire ntRef_ntPRECHGNN_DRM_OUT = wire *strVar;

    sprintf(strVar,"ntCLK_DRM_%d_%d",sx,sy);
    &wire ntRef_ntCLK_DRM = wire *strVar;

    sprintf(strVar,"ntMCE_%d_%d",sx,sy);
    &wire ntRef_ntMCE = wire *strVar;

    sprintf(strVar,"ntMWR_%d_%d",sx,sy);
    &wire ntRef_ntMWR = wire *strVar;

    sprintf(strVar,"ntTRIM_VREF1_%d_%d",sx,sy);
    &wire ntRef_ntTRIM_VREF1[4:0] = wire *strVar[4:0];

    sprintf(strVar,"ntTRIM_VREF2_%d_%d",sx,sy);
    &wire ntRef_ntTRIM_VREF2[4:0] = wire *strVar[4:0];

    sprintf(strVar,"ntTRIM_LDO_VREF_%d_%d",sx,sy);
    &wire ntRef_ntTRIM_LDO_VREF[4:0] = wire *strVar[4:0];

    sprintf(strVar,"ntTRIM_ICONST_%d_%d",sx,sy);
    &wire ntRef_ntTRIM_ICONST[5:0] = wire *strVar[5:0];

    sprintf(strVar,"ntFREQ_TRIM_%d_%d",sx,sy);
    &wire ntRef_ntFREQ_TRIM[4:0] = wire *strVar[4:0];

    sprintf(strVar,"ntINIT_COMPLETE_%d_%d",sx,sy);
    &wire ntRef_ntINIT_COMPLETE = wire *strVar;

    sprintf(strVar,"ntINIT_N_OE_%d_%d",sx,sy);
    &wire ntRef_ntINIT_N_OE = wire *strVar;

    sprintf(strVar,"ntDONE_%d_%d",sx,sy);
    &wire ntRef_ntDONE = wire *strVar;

    sprintf(strVar,"ntDONE_OE_%d_%d",sx,sy);
    &wire ntRef_ntDONE_OE = wire *strVar;

    sprintf(strVar,"ntTDO_%d_%d",sx,sy);
    &wire ntRef_ntTDO = wire *strVar;

    sprintf(strVar,"ntTDO_OE_%d_%d",sx,sy);
    &wire ntRef_ntTDO_OE = wire *strVar;

    sprintf(strVar,"ntMS_N_%d_%d",sx,sy);
    &wire ntRef_ntMS_N = wire *strVar;

    sprintf(strVar,"ntMS_N_OE_%d_%d",sx,sy);
    &wire ntRef_ntMS_N_OE = wire *strVar;

    sprintf(strVar,"ntSCK_%d_%d",sx,sy);
    &wire ntRef_ntSCK = wire *strVar;

    sprintf(strVar,"ntSCK_OE_%d_%d",sx,sy);
    &wire ntRef_ntSCK_OE = wire *strVar;

    sprintf(strVar,"ntMISO_O_%d_%d",sx,sy);
    &wire ntRef_ntMISO_O = wire *strVar;

    sprintf(strVar,"ntMISO_OE_%d_%d",sx,sy);
    &wire ntRef_ntMISO_OE = wire *strVar;

    sprintf(strVar,"ntMOSI_O_%d_%d",sx,sy);
    &wire ntRef_ntMOSI_O = wire *strVar;

    sprintf(strVar,"ntMOSI_OE_%d_%d",sx,sy);
    &wire ntRef_ntMOSI_OE = wire *strVar;

    sprintf(strVar,"ntSDA_O_%d_%d",sx,sy);
    &wire ntRef_ntSDA_O = wire *strVar;

    sprintf(strVar,"ntSDA_OE_%d_%d",sx,sy);
    &wire ntRef_ntSDA_OE = wire *strVar;

    sprintf(strVar,"ntTEST_A_Y6AB_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y6AB_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y6CD_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y6CD_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y0_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y0_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y1_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y1_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y2_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y2_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y3_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y3_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Q0_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Q0_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Q1_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Q1_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Q2_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Q2_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Q3_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Q3_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y6AB_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y6AB_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y6CD_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y6CD_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y0_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y0_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y1_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y1_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y2_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y2_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y3_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y3_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Q0_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Q0_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Q1_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Q1_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Q2_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Q2_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Q3_S0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Q3_S0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y6AB_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y6AB_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y6CD_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y6CD_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y0_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y0_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y1_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y1_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y2_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y2_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y3_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y3_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Q0_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Q0_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Q1_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Q1_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Q2_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Q2_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Q3_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Q3_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y6AB_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y6AB_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y6CD_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y6CD_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y0_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y0_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y1_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y1_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y2_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y2_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y3_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y3_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Q0_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Q0_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Q1_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Q1_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Q2_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Q2_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Q3_S1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Q3_S1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntOSC_EN_%d_%d",sx,sy);
    &wire ntRef_ntOSC_EN = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntMCLK_EN_%d_%d",sx,sy);
    &wire ntRef_ntMCLK_EN = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntRBCRC_CLK_EN_%d_%d",sx,sy);
    &wire ntRef_ntRBCRC_CLK_EN = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntOSCFSEL_%d_%d",sx,sy);
    &wire ntRef_ntOSCFSEL[6:0] = wire *strVar[6:0]       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntOSCFSEL_RBCRC_%d_%d",sx,sy);
    &wire ntRef_ntOSCFSEL_RBCRC[6:0] = wire *strVar[6:0]       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntOSC_TR_%d_%d",sx,sy);
    &wire ntRef_ntOSC_TR = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntOSC_TR_RBCRC_%d_%d",sx,sy);
    &wire ntRef_ntOSC_TR_RBCRC = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntPCTLR_POR_OFF_%d_%d",sx,sy);
    &wire ntRef_ntPCTLR_POR_OFF = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntPCTLR_BG_OFF_%d_%d",sx,sy);
    &wire ntRef_ntPCTLR_BG_OFF = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntMFG_SRAM_RETENTION_%d_%d",sx,sy);
    &wire ntRef_ntMFG_SRAM_RETENTION = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntJRTI_%d_%d",sx,sy);
    &wire ntRef_ntJRTI = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntCAPTUREDR_%d_%d",sx,sy);
    &wire ntRef_ntCAPTUREDR = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntFLG_USER1_%d_%d",sx,sy);
    &wire ntRef_ntFLG_USER1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntCLOCKDR1_%d_%d",sx,sy);
    &wire ntRef_ntCLOCKDR1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntFLG_USER2_%d_%d",sx,sy);
    &wire ntRef_ntFLG_USER2 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntCLOCKDR2_%d_%d",sx,sy);
    &wire ntRef_ntCLOCKDR2 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntUID_DOUT_%d_%d",sx,sy);
    &wire ntRef_ntUID_DOUT = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntPCTLR_STOP_%d_%d",sx,sy);
    &wire ntRef_ntPCTLR_STOP = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntPCTLR_STDBY_%d_%d",sx,sy);
    &wire ntRef_ntPCTLR_STDBY = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntPCTLR_STDBY_FLG_%d_%d",sx,sy);
    &wire ntRef_ntPCTLR_STDBY_FLG = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntWAKEUP_OVER_N_%d_%d",sx,sy);
    &wire ntRef_ntWAKEUP_OVER_N = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntPRDATA_%d_%d",sx,sy);
    &wire ntRef_ntPRDATA[7:0] = wire *strVar[7:0]       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntPREADY_%d_%d",sx,sy);
    &wire ntRef_ntPREADY = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntMFG_TRIM_BIT_%d_%d",sx,sy);
    &wire ntRef_ntMFG_TRIM_BIT[2:0] = wire *strVar[2:0];

    sprintf(strVar,"ntSPAL_DOUT_%d_%d",sx,sy);
    &wire ntRef_ntSPAL_DOUT[15:0] = wire *strVar[15:0];

    sprintf(strVar,"ntSPAL_D_OE_%d_%d",sx,sy);
    &wire ntRef_ntSPAL_D_OE = wire *strVar;

    sprintf(strVar,"ntEFB_TDO_%d_%d",sx,sy);
    &wire ntRef_ntEFB_TDO = wire *strVar;

    sprintf(strVar,"ntEFB_TOE_%d_%d",sx,sy);
    &wire ntRef_ntEFB_TOE = wire *strVar;

    sprintf(strVar,"ntEFB_TP_BIAS_%d_%d",sx,sy);
    &wire ntRef_ntEFB_TP_BIAS = wire *strVar;

    sprintf(strVar,"ntSPAL_BUSY_%d_%d",sx,sy);
    &wire ntRef_ntSPAL_BUSY = wire *strVar;

    sprintf(strVar,"ntMASK_EN_%d_%d",sx,sy);
    &wire ntRef_ntMASK_EN = wire *strVar;

    sprintf(strVar,"ntCP_SD_%d_%d",sx,sy);
    &wire ntRef_ntCP_SD = wire *strVar;

    sprintf(strVar,"ntTIEHI_%d_%d",sx,sy);
    &wire ntRef_ntTIEHI = wire *strVar;

    sprintf(strVar,"ntTIELO_%d_%d",sx,sy);
    &wire ntRef_ntTIELO = wire *strVar;


    sprintf(strVar, "CCS_TILE_%d_%d", sx, sy);
    device CCS_TILE *strVar
          port map (
                     CFGMOD_JEN      => ntRef_ntCFGMOD_JEN,
                     CFGMOD_JTAG     => ntRef_ntCFGMOD_JTAG,
                     CFGMOD_RST      => ntRef_ntCFGMOD_RST,
                     CFGMOD_INIT     => ntRef_ntCFGMOD_INIT,
                     CFGMOD_DONE     => ntRef_ntCFGMOD_DONE,
                     CFGMOD_SPI      => ntRef_ntCFGMOD_SPI,
                     CFGMOD_MS       => ntRef_ntCFGMOD_MS,
                     CFGMOD_I2C      => ntRef_ntCFGMOD_I2C,
                     CFGMOD_SPAL     => ntRef_ntCFGMOD_SPAL,
                     CFGMOD_EFB      => ntRef_ntCFGMOD_EFB,
                     CFGMOD_SS       => ntRef_ntCFGMOD_SS,

                     TRIM_VREF1      => ntRef_ntTRIM_VREF1,
                     TRIM_VREF2      => ntRef_ntTRIM_VREF2,
                     TRIM_LDO_VREF   => ntRef_ntTRIM_LDO_VREF,
                     TRIM_ICONST     => ntRef_ntTRIM_ICONST,
                     FREQ_TRIM       => ntRef_ntFREQ_TRIM,
                     MODE_1          => ntRef_ntMODE_1,
                     MODE_2          => ntRef_ntMODE_2,
                     MODE_3          => ntRef_ntMODE_3,
                     JRST            => ntRef_ntJRST,
                     CLOCKDR         => ntRef_ntCLOCKDR,
                     SHIFTDR         => ntRef_ntSHIFTDR,
                     UPDATEDR        => ntRef_ntUPDATEDR,

                     BLSRIN          => ntRef_ntBLSRIN,
                     CLK_CRAM        => ntRef_ntCLK_CRAM,
                     CMEM_TYPE       => ntRef_ntCMEM_TYPE,
                     ERASE_EN        => ntRef_ntERASE_EN,
                     WL_ON           => ntRef_ntWL_ON,
                     FRAME_ADDR      => ntRef_ntFRAME_ADDR,
                     COLUMN          => ntRef_ntCOLUMN,
                     PROG_ON         => ntRef_ntPROG_ON,
                     PROG_CAP        => ntRef_ntPROG_CAP,
                     REGION_RW_EN    => ntRef_ntREGION_RW_EN,
                     PRECHGE         => ntRef_ntPRECHGE,
                     READ            => ntRef_ntREAD,
                     RDBK_CAP        => ntRef_ntRDBK_CAP,

                     GRS_N            => ntRef_ntGRS_N,
                     GLOGEN           => ntRef_ntGLOGEN,
                     GOUTEN           => ntRef_ntGOUTEN,
                     GWEN             => ntRef_ntGWEN,
                     PUP_SEL_N        => ntRef_ntPUP_SEL_N,
                     MCE              => ntRef_ntMCE,
                     MWR              => ntRef_ntMWR,
                     CLK_DRM          => ntRef_ntCLK_DRM,

                     TDO              => ntRef_ntTDO,
                     TDO_OE           => ntRef_ntTDO_OE,
                     MS_N             => ntRef_ntMS_N,
                     MS_N_OE          => ntRef_ntMS_N_OE,
                     SCK              => ntRef_ntSCK,
                     SCK_OE           => ntRef_ntSCK_OE,
                     MISO_O           => ntRef_ntMISO_O,
                     MISO_OE          => ntRef_ntMISO_OE,
                     MOSI_O           => ntRef_ntMOSI_O,
                     MOSI_OE          => ntRef_ntMOSI_OE,
                     SDA_O            => ntRef_ntSDA_O,
//                     SDA_OE           => ntRef_ntSDA_OE,
                     INIT_COMPLETE    => ntRef_ntINIT_COMPLETE,
                     DONE             => ntRef_ntDONE,
                     DONE_OE          => ntRef_ntDONE_OE,
                     INIT_N_OE        => ntRef_ntINIT_N_OE,
                     MASK_EN          => ntRef_ntMASK_EN,

                     SPAL_BUSY        => ntRef_ntSPAL_BUSY,
                     SPAL_DOUT        => ntRef_ntSPAL_DOUT,
                     SPAL_D_OE        => ntRef_ntSPAL_D_OE,
                     EFB_TDO          => ntRef_ntEFB_TDO,
                     EFB_TOE          => ntRef_ntEFB_TOE,

                     OSC_EN             => ntRef_ntOSC_EN,
                     OSCFSEL            => ntRef_ntOSCFSEL,
                     OSCFSEL_RBCRC      => ntRef_ntOSCFSEL_RBCRC,
                     OSC_TR             => ntRef_ntOSC_TR,
                     OSC_TR_RBCRC       => ntRef_ntOSC_TR_RBCRC,
                     MCLK_EN            => ntRef_ntMCLK_EN,
                     RBCRC_CLK_EN       => ntRef_ntRBCRC_CLK_EN,
                     PCTLR_POR_OFF      => ntRef_ntPCTLR_POR_OFF,
                     PCTLR_BG_OFF       => ntRef_ntPCTLR_BG_OFF,
                     MFG_SRAM_RETENTION => ntRef_ntMFG_SRAM_RETENTION,
                     EFB_TP_BIAS        => ntRef_ntEFB_TP_BIAS,
                     MFG_TRIM_BIT       => ntRef_ntMFG_TRIM_BIT,
                     CP_SD              => ntRef_ntCP_SD,

                    TEST_A_Y0_S0       => ntRef_ntTEST_A_Y0_S0,
                    TEST_A_Y1_S0       => ntRef_ntTEST_A_Y1_S0,
                    TEST_A_Y2_S0       => ntRef_ntTEST_A_Y2_S0,
                    TEST_A_Y3_S0       => ntRef_ntTEST_A_Y3_S0,
                    TEST_A_Q0_S0       => ntRef_ntTEST_A_Q0_S0,
                    TEST_A_Q1_S0       => ntRef_ntTEST_A_Q1_S0,
                    TEST_A_Q2_S0       => ntRef_ntTEST_A_Q2_S0,
                    TEST_A_Q3_S0       => ntRef_ntTEST_A_Q3_S0,
                    TEST_A_Y6AB_S0     => ntRef_ntTEST_A_Y6AB_S0,
                    TEST_A_Y6CD_S0     => ntRef_ntTEST_A_Y6CD_S0,
                    TEST_S_Y0_S0       => ntRef_ntTEST_S_Y0_S0,
                    TEST_S_Y1_S0       => ntRef_ntTEST_S_Y1_S0,
                    TEST_S_Y2_S0       => ntRef_ntTEST_S_Y2_S0,
                    TEST_S_Y3_S0       => ntRef_ntTEST_S_Y3_S0,
                    TEST_S_Q0_S0       => ntRef_ntTEST_S_Q0_S0,
                    TEST_S_Q1_S0       => ntRef_ntTEST_S_Q1_S0,
                    TEST_S_Q2_S0       => ntRef_ntTEST_S_Q2_S0,
                    TEST_S_Q3_S0       => ntRef_ntTEST_S_Q3_S0,
                    TEST_S_Y6AB_S0     => ntRef_ntTEST_S_Y6AB_S0,
                    TEST_S_Y6CD_S0     => ntRef_ntTEST_S_Y6CD_S0,
                    TEST_A_Y0_S1       => ntRef_ntTEST_A_Y0_S1,
                    TEST_A_Y1_S1       => ntRef_ntTEST_A_Y1_S1,
                    TEST_A_Y2_S1       => ntRef_ntTEST_A_Y2_S1,
                    TEST_A_Y3_S1       => ntRef_ntTEST_A_Y3_S1,
                    TEST_A_Q0_S1       => ntRef_ntTEST_A_Q0_S1,
                    TEST_A_Q1_S1       => ntRef_ntTEST_A_Q1_S1,
                    TEST_A_Q2_S1       => ntRef_ntTEST_A_Q2_S1,
                    TEST_A_Q3_S1       => ntRef_ntTEST_A_Q3_S1,
                    TEST_A_Y6AB_S1     => ntRef_ntTEST_A_Y6AB_S1,
                    TEST_A_Y6CD_S1     => ntRef_ntTEST_A_Y6CD_S1,
                    TEST_S_Y0_S1       => ntRef_ntTEST_S_Y0_S1,
                    TEST_S_Y1_S1       => ntRef_ntTEST_S_Y1_S1,
                    TEST_S_Y2_S1       => ntRef_ntTEST_S_Y2_S1,
                    TEST_S_Y3_S1       => ntRef_ntTEST_S_Y3_S1,
                    TEST_S_Q0_S1       => ntRef_ntTEST_S_Q0_S1,
                    TEST_S_Q1_S1       => ntRef_ntTEST_S_Q1_S1,
                    TEST_S_Q2_S1       => ntRef_ntTEST_S_Q2_S1,
                    TEST_S_Q3_S1       => ntRef_ntTEST_S_Q3_S1,
                    TEST_S_Y6AB_S1     => ntRef_ntTEST_S_Y6AB_S1,
                    TEST_S_Y6CD_S1     => ntRef_ntTEST_S_Y6CD_S1,

                     JRTI              => ntRef_ntJRTI,
                     CAPTUREDR         => ntRef_ntCAPTUREDR,
                     FLG_USER1         => ntRef_ntFLG_USER1,
                     CLOCKDR1          => ntRef_ntCLOCKDR1,
                     FLG_USER2         => ntRef_ntFLG_USER2,
                     CLOCKDR2          => ntRef_ntCLOCKDR2,
                     UID_DOUT          => ntRef_ntUID_DOUT,
                     PCTLR_STOP        => ntRef_ntPCTLR_STOP,
                     PCTLR_STDBY       => ntRef_ntPCTLR_STDBY,
                     PCTLR_STDBY_FLG   => ntRef_ntPCTLR_STDBY_FLG,
                     WAKEUP_OVER_N     => ntRef_ntWAKEUP_OVER_N,
                     PRDATA            => ntRef_ntPRDATA,
                     PREADY            => ntRef_ntPREADY,

                     TIEHI             => ntRef_ntTIEHI,
                     TIELO             => ntRef_ntTIELO
                    )
        @([sx,sy]);

        STRUCT inc_spec_CCS incVar;
        string pin_SRB;
        string pin_logic_device;
        string attribute_IO;
        int loc_SRB;
        int sy_SRB;
  
        foreach incVar(inc_CCS_SRB_spec)
        {
            pin_SRB = incVar.port_name_SRB;
            pin_logic_device = incVar.port_name_device;
            attribute_IO = incVar.attribute_IO;
            loc_SRB = incVar.loc_SRB;
           
            if(loc_SRB==0)
            {
              sy_SRB = sy;
            }
            else
            {
              sy_SRB = sy + loc_SRB*NUM_GRID_Y; 
            }
            
            if(attribute_IO =="I")
            { 
             
               connect(<pin *pin_logic_device of <device CCS_TILE @[sx,sy]>> => <wire *pin_SRB of <device SRB_TILE@[sx-3,sy_SRB]>>);
            }
            else
            {
              connect(<pin *pin_SRB of<device SRB_TILE@[sx-3,sy_SRB]>> =>  <wire *pin_logic_device of <device CCS_TILE @[sx,sy]>>); 
            }
        }

    if(!((tx_pll0==0)&&(ty_pll0==0)))
    {
      int sx_pll0 = tx_pll0 * NUM_GRID_X + 3;
      int sy_pll0 = ty_pll0 * NUM_GRID_Y;

      connect
        (
          <pin PLL0_PRDATA of <device CCS_TILE @[sx,sy]>> => <wire PRDATA of <device PLL_TILE @[sx_pll0,sy_pll0]>>,
          <pin PLL0_PREADY of <device CCS_TILE @[sx,sy]>> => <wire PREADY of <device PLL_TILE @[sx_pll0,sy_pll0]>>
        );
    }
    else
    {
      connect
        (
          <pin PLL0_PRDATA[0] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL0_PRDATA[1] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL0_PRDATA[2] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL0_PRDATA[3] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL0_PRDATA[4] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL0_PRDATA[5] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL0_PRDATA[6] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL0_PRDATA[7] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL0_PREADY of <device CCS_TILE @[sx,sy]>>    => <wire TIELO of <device CCS_TILE @[sx,sy]>>
        );
    }

    

    if(!((tx_pll1==0)&&(ty_pll1==0)))
    {
      int sx_pll1 = tx_pll1 * NUM_GRID_X + 3;
      int sy_pll1 = ty_pll1 * NUM_GRID_Y;

      connect
        (
          <pin PLL1_PRDATA of <device CCS_TILE @[sx,sy]>> => <wire PRDATA of <device PLL_TILE @[sx_pll1,sy_pll1]>>,
          <pin PLL1_PREADY of <device CCS_TILE @[sx,sy]>> => <wire PREADY of <device PLL_TILE @[sx_pll1,sy_pll1]>>
        );
    }
    else
    {
      connect
        (
          <pin PLL1_PRDATA[0] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL1_PRDATA[1] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL1_PRDATA[2] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL1_PRDATA[3] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL1_PRDATA[4] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL1_PRDATA[5] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL1_PRDATA[6] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL1_PRDATA[7] of <device CCS_TILE @[sx,sy]>> => <wire TIELO of <device CCS_TILE @[sx,sy]>>,
          <pin PLL1_PREADY of <device CCS_TILE @[sx,sy]>>    => <wire TIELO of <device CCS_TILE @[sx,sy]>>
        );
    }

                 
}// end of function place_ccs_tile

/********************************************************************************
********************************************************************************/
function place_cram_ctrl_tile(unsigned int tx,ty,tx_ccs,ty_ccs,tx_analog,ty_analog)
{   
    unsigned int sx, sy;
    
    sx = tx * NUM_GRID_X;
    sy = ty * NUM_GRID_Y;
    
    string strVar;

    sprintf(strVar,"ntPOR_N_OUTL_%d_%d",sx,sy);
    &wire ntRef_ntPOR_N_OUTL[7:0] = wire *strVar[7:0];

    sprintf(strVar,"ntPOR_N_OUTR_%d_%d",sx,sy);
    &wire ntRef_ntPOR_N_OUTR[5:0] = wire *strVar[5:0];

    sprintf(strVar,"ntGLOGEN_OUTL_%d_%d",sx,sy);
    &wire ntRef_ntGLOGEN_OUTL[7:0] = wire *strVar[7:0];

    sprintf(strVar,"ntGLOGEN_OUTR_%d_%d",sx,sy);
    &wire ntRef_ntGLOGEN_OUTR[5:0] = wire *strVar[5:0];

    sprintf(strVar,"ntGWEN_OUTL_%d_%d",sx,sy);
    &wire ntRef_ntGWEN_OUTL[7:0] = wire *strVar[7:0];

    sprintf(strVar,"ntGWEN_OUTR_%d_%d",sx,sy);
    &wire ntRef_ntGWEN_OUTR[5:0] = wire *strVar[5:0];

    sprintf(strVar,"ntGRS_N_OUTL_%d_%d",sx,sy);
    &wire ntRef_ntGRS_N_OUTL[7:0] = wire *strVar[7:0];

    sprintf(strVar,"ntGRS_N_OUTR_%d_%d",sx,sy);
    &wire ntRef_ntGRS_N_OUTR[5:0] = wire *strVar[5:0];

    sprintf(strVar,"ntPUP_REL_N_OUTL_%d_%d",sx,sy);
    &wire ntRef_ntPUP_REL_N_OUTL[7:0] = wire *strVar[7:0];

    sprintf(strVar,"ntPUP_REL_N_OUTR_%d_%d",sx,sy);
    &wire ntRef_ntPUP_REL_N_OUTR[5:0] = wire *strVar[5:0];

    sprintf(strVar,"ntADDR_%d_%d",sx,sy);
    &wire ntRef_ntADDR[359:0] = wire *strVar[359:0];

    sprintf(strVar,"ntDATA_%d_%d",sx,sy);
    &wire ntRef_ntDATA[1631:0] = wire *strVar[1631:0];

    sprintf(strVar,"ntDATAN_%d_%d",sx,sy);
    &wire ntRef_ntDATAN[1631:0] = wire *strVar[1631:0];

    sprintf(strVar,"ntDATA_BACK_%d_%d",sx,sy);
    &wire ntRef_ntDATA_BACK[31:0] = wire *strVar[31:0];

    sprintf(strVar,"ntTIEL1_%d_%d",sx,sy);
    &wire ntRef_ntTIEL1 = wire *strVar;

    sprintf(strVar,"ntTIEL2_%d_%d",sx,sy);
    &wire ntRef_ntTIEL2 = wire *strVar;

    sprintf(strVar,"ntMCLKB_OU_%d_%d",sx,sy);
    &wire ntRef_ntMCLKB_OU = wire *strVar;

    sprintf(strVar,"ntMCLKB_OD_%d_%d",sx,sy);
    &wire ntRef_ntMCLKB_OD = wire *strVar;

    sprintf(strVar,"ntMCE_OU_%d_%d",sx,sy);
    &wire ntRef_ntMCE_OU = wire *strVar;

    sprintf(strVar,"ntMCE_OD_%d_%d",sx,sy);
    &wire ntRef_ntMCE_OD = wire *strVar;

    sprintf(strVar,"ntMWR_OU_%d_%d",sx,sy);
    &wire ntRef_ntMWR_OU = wire *strVar;

    sprintf(strVar,"ntMWR_OD_%d_%d",sx,sy);
    &wire ntRef_ntMWR_OD = wire *strVar;

    sprintf(strVar,"ntCOLUMN_INC_%d_%d",sx,sy);
    &wire ntRef_ntCOLUMN_INC = wire *strVar;

    sprintf(strVar,"ntNONDRM_END_%d_%d",sx,sy);
    &wire ntRef_ntNONDRM_END = wire *strVar;

    sprintf(strVar,"ntMASK_N_%d_%d",sx,sy);
    &wire ntRef_ntMASK_N[10:0] = wire *strVar[10:0];

    sprintf(strVar,"ntREAD2T_%d_%d",sx,sy);
    &wire ntRef_ntREAD2T[10:0] = wire *strVar[10:0];

    sprintf(strVar, "CRAM_CTRL_2K_TILE_%d_%d", sx, sy);
      device CRAM_CTRL_2K_TILE *strVar
        port map(
                  GLOGEN_OUTL    => ntRef_ntGLOGEN_OUTL,
                  GLOGEN_OUTR    => ntRef_ntGLOGEN_OUTR,
                  GWEN_OUTL      => ntRef_ntGWEN_OUTL,
                  GWEN_OUTR      => ntRef_ntGWEN_OUTR,
                  GRS_N_OUTL     => ntRef_ntGRS_N_OUTL,
                  GRS_N_OUTR     => ntRef_ntGRS_N_OUTR,
                  POR_N_OUTL     => ntRef_ntPOR_N_OUTL,
                  POR_N_OUTR     => ntRef_ntPOR_N_OUTR,
                  PUP_REL_N_OUTL => ntRef_ntPUP_REL_N_OUTL,
                  PUP_REL_N_OUTR => ntRef_ntPUP_REL_N_OUTR,
                  DATA_BACK      => ntRef_ntDATA_BACK,
                  ADDR           => ntRef_ntADDR,
                  COLUMN_INC     => ntRef_ntCOLUMN_INC,
                  NONDRM_END     => ntRef_ntNONDRM_END,
                  MCE_OU         => ntRef_ntMCE_OU,
                  MCE_OD         => ntRef_ntMCE_OD,
                  MWR_OU         => ntRef_ntMWR_OU,
                  MWR_OD         => ntRef_ntMWR_OD,
                  MCLKB_OU       => ntRef_ntMCLKB_OU,
                  MCLKB_OD       => ntRef_ntMCLKB_OD,
                  MASK_N         => ntRef_ntMASK_N,
                  READ2T         => ntRef_ntREAD2T,
                  DATA           => ntRef_ntDATA,
                  DATAN          => ntRef_ntDATAN
                )
        @([sx,sy]);  

    int sx_ccs = tx_ccs * NUM_GRID_X + 3;
    int sy_ccs = ty_ccs * NUM_GRID_Y;

    int sx_analog = tx_analog * NUM_GRID_X + 3;
    int sy_analog = ty_analog * NUM_GRID_Y;

    connect
      (
        <pin POR_N of <device CRAM_CTRL_2K_TILE @[sx,sy]>>         => <wire POR_N of <device ANALOG_2K_TILE @[sx_analog,sy_analog]>>,

        <pin WL_ON of <device CRAM_CTRL_2K_TILE @[sx,sy]>>         => <wire WL_ON of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin READ of <device CRAM_CTRL_2K_TILE @[sx,sy]>>          => <wire READ of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin RDBK_CAP of <device CRAM_CTRL_2K_TILE @[sx,sy]>>      => <wire RDBK_CAP of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin ERASE_EN of <device CRAM_CTRL_2K_TILE @[sx,sy]>>      => <wire ERASE_EN of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin PROG_CAP of <device CRAM_CTRL_2K_TILE @[sx,sy]>>      => <wire PROG_CAP of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin PROG_ON of <device CRAM_CTRL_2K_TILE @[sx,sy]>>       => <wire PROG_ON of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin FRAME_ADDR of <device CRAM_CTRL_2K_TILE @[sx,sy]>>    => <wire FRAME_ADDR[5:0] of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin COLUMN_ADDR of <device CRAM_CTRL_2K_TILE @[sx,sy]>>   => <wire COLUMN[5:0] of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin PRECHG of <device CRAM_CTRL_2K_TILE @[sx,sy]>>        => <wire PRECHGE of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin REGION_RW_EN of <device CRAM_CTRL_2K_TILE @[sx,sy]>>  => <wire REGION_RW_EN of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin DATA_IN of <device CRAM_CTRL_2K_TILE @[sx,sy]>>       => <wire BLSRIN of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin MCLK of <device CRAM_CTRL_2K_TILE @[sx,sy]>>          => <wire CLK_CRAM of <device CCS_TILE @[sx_ccs,sy_ccs]>>,

        <pin MCLKB of <device CRAM_CTRL_2K_TILE @[sx,sy]>>         => <wire CLK_DRM of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin MWR of <device CRAM_CTRL_2K_TILE @[sx,sy]>>           => <wire MWR of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin MCE of <device CRAM_CTRL_2K_TILE @[sx,sy]>>           => <wire MCE of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin MASK of <device CRAM_CTRL_2K_TILE @[sx,sy]>>          => <wire MASK_EN of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin GLOGEN_IN of <device CRAM_CTRL_2K_TILE @[sx,sy]>>     => <wire GLOGEN of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin GRS_N_IN of <device CRAM_CTRL_2K_TILE @[sx,sy]>>      => <wire GRS_N of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin GWEN_IN of <device CRAM_CTRL_2K_TILE @[sx,sy]>>       => <wire GWEN of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin PUP_REL_N_IN of <device CRAM_CTRL_2K_TILE @[sx,sy]>>  => <wire PUP_SEL_N of <device CCS_TILE @[sx_ccs,sy_ccs]>>, 
        <pin TYPE of <device CRAM_CTRL_2K_TILE @[sx,sy]>>          => <wire CMEM_TYPE[0] of <device CCS_TILE @[sx_ccs,sy_ccs]>>,

        <pin IREF of <device CRAM_CTRL_2K_TILE @[sx,sy]>>       => <wire ICONST_3U[8] of <device ANALOG_2K_TILE @[sx_analog,sy_analog]>>,

        <pin DATABACK of <device CCS_TILE @[sx_ccs,sy_ccs]>>        => <wire DATA_BACK of <device CRAM_CTRL_2K_TILE @[sx,sy]>>,
        <pin NDRM_REGION_END of <device CCS_TILE @[sx_ccs,sy_ccs]>> => <wire NONDRM_END of <device CRAM_CTRL_2K_TILE @[sx,sy]>>,
        <pin NDRM_COLUMN_INC of <device CCS_TILE @[sx_ccs,sy_ccs]>> => <wire COLUMN_INC of <device CRAM_CTRL_2K_TILE @[sx,sy]>>,
        <pin GLOGEN_FB of <device CCS_TILE @[sx_ccs,sy_ccs]>>       => <wire GLOGEN_OUTL[0] of <device CRAM_CTRL_2K_TILE @[sx,sy]>>

      );

    string cram_ctrl = "CRAM_CTRL_2K_TILE";
    string clm = "CLMS_TILE";

    int sx_l = sx - 2*NUM_GRID_X + 3; 
       connect
      (
        <pin MASK_DATA_L[0]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,2*NUM_GRID_Y]>>, 
        <pin MASK_DATA_L[1]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,3*NUM_GRID_Y]>>, 
        <pin MASK_DATA_L[2]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,4*NUM_GRID_Y]>>, 
        <pin MASK_DATA_L[3]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,5*NUM_GRID_Y]>>, 
        <pin MASK_DATA_L[4]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,6*NUM_GRID_Y]>>, 
        <pin MASK_DATA_L[5]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,7*NUM_GRID_Y]>>, 
        <pin MASK_DATA_L[6]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,8*NUM_GRID_Y]>>, 
        <pin MASK_DATA_L[7]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,9*NUM_GRID_Y]>>, 
        <pin MASK_DATA_L[8]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,10*NUM_GRID_Y]>>,
        <pin MASK_DATA_L[9]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,11*NUM_GRID_Y]>>,
        <pin MASK_DATA_L[10] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,12*NUM_GRID_Y]>>,
        <pin MASK_DATA_L[11] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,13*NUM_GRID_Y]>>,
        <pin MASK_DATA_L[12] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,15*NUM_GRID_Y]>>,
        <pin MASK_DATA_L[13] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,16*NUM_GRID_Y]>>,
        <pin MASK_DATA_L[14] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,17*NUM_GRID_Y]>>,
        <pin MASK_DATA_L[15] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,18*NUM_GRID_Y]>>,
        <pin MASK_DATA_L[16] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,19*NUM_GRID_Y]>>,
        <pin MASK_DATA_L[17] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,20*NUM_GRID_Y]>>,
        <pin MASK_DATA_L[18] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,21*NUM_GRID_Y]>>,
        <pin MASK_DATA_L[19] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,22*NUM_GRID_Y]>>,
        <pin MASK_DATA_L[20] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,23*NUM_GRID_Y]>>,
        <pin MASK_DATA_L[21] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,24*NUM_GRID_Y]>>,
        <pin MASK_DATA_L[22] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_l,25*NUM_GRID_Y]>>
      );
 
    int sx_r = sx + NUM_GRID_X + 3; 
       connect
      (
        <pin MASK_DATA_R[0]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,2*NUM_GRID_Y]>>, 
        <pin MASK_DATA_R[1]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,3*NUM_GRID_Y]>>, 
        <pin MASK_DATA_R[2]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,4*NUM_GRID_Y]>>, 
        <pin MASK_DATA_R[3]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,5*NUM_GRID_Y]>>, 
        <pin MASK_DATA_R[4]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,6*NUM_GRID_Y]>>, 
        <pin MASK_DATA_R[5]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,7*NUM_GRID_Y]>>, 
        <pin MASK_DATA_R[6]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,8*NUM_GRID_Y]>>, 
        <pin MASK_DATA_R[7]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,9*NUM_GRID_Y]>>, 
        <pin MASK_DATA_R[8]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,10*NUM_GRID_Y]>>,
        <pin MASK_DATA_R[9]  of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,11*NUM_GRID_Y]>>,
        <pin MASK_DATA_R[10] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,12*NUM_GRID_Y]>>,
        <pin MASK_DATA_R[11] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,13*NUM_GRID_Y]>>,
        <pin MASK_DATA_R[12] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,15*NUM_GRID_Y]>>,
        <pin MASK_DATA_R[13] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,16*NUM_GRID_Y]>>,
        <pin MASK_DATA_R[14] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,17*NUM_GRID_Y]>>,
        <pin MASK_DATA_R[15] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,18*NUM_GRID_Y]>>,
        <pin MASK_DATA_R[16] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,19*NUM_GRID_Y]>>,
        <pin MASK_DATA_R[17] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,20*NUM_GRID_Y]>>,
        <pin MASK_DATA_R[18] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,21*NUM_GRID_Y]>>,
        <pin MASK_DATA_R[19] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,22*NUM_GRID_Y]>>,
        <pin MASK_DATA_R[20] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,23*NUM_GRID_Y]>>,
        <pin MASK_DATA_R[21] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,24*NUM_GRID_Y]>>,
        <pin MASK_DATA_R[22] of <device *cram_ctrl @ [sx,sy]>> => <wire MASK_DATA_COUT of <device *clm @ [sx_r,25*NUM_GRID_Y]>>
      );


    
      
}// end of function place_cram_ctrl_tile
/********************************************************************************
********************************************************************************/
function place_ioblr_tile(unsigned int tx,ty)
{
    unsigned int sx, sy; 
    sx = tx * NUM_GRID_X;
    sy = ty * NUM_GRID_Y;

    int sx_bl = CRAM_CTRL_TILE_X * NUM_GRID_X;
    int sy_bl = CRAM_CTRL_TILE_Y * NUM_GRID_Y;
    int sx_ccs = CCS_TILE_X * NUM_GRID_X + 3;
    int sy_ccs = CCS_TILE_Y * NUM_GRID_Y;
    int sx_analog = ANALOG_2K_TILE_X * NUM_GRID_X + 3;
    int sy_analog = ANALOG_2K_TILE_Y * NUM_GRID_Y;


    string strVar;
    sprintf(strVar,"ntDIN_%d_%d",sx,sy);
    &wire ntRef_ntDIN[55:0] = wire *strVar[55:0]                   /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntDONE_DIN_%d_%d",sx,sy);
    &wire ntRef_ntDONE_DIN = wire *strVar;

    sprintf(strVar,"ntINITN_DIN_%d_%d",sx,sy);
    &wire ntRef_ntINITN_DIN = wire *strVar;

    sprintf(strVar,"ntJTAGEN_%d_%d",sx,sy);
    &wire ntRef_ntJTAGEN = wire *strVar;

    sprintf(strVar,"ntRSTN_%d_%d",sx,sy);
    &wire ntRef_ntRSTN = wire *strVar;

    sprintf(strVar,"ntSCL_DIN_%d_%d",sx,sy);
    &wire ntRef_ntSCL_DIN = wire *strVar;

    sprintf(strVar,"ntSDA_DIN_%d_%d",sx,sy);
    &wire ntRef_ntSDA_DIN = wire *strVar;

    sprintf(strVar,"ntTCK_DIN_%d_%d",sx,sy);
    &wire ntRef_ntTCK_DIN = wire *strVar;

    sprintf(strVar,"ntTDI_DIN_%d_%d",sx,sy);
    &wire ntRef_ntTDI_DIN = wire *strVar;

    sprintf(strVar,"ntTMS_DIN_%d_%d",sx,sy);
    &wire ntRef_ntTMS_DIN = wire *strVar;

    sprintf(strVar,"ntTDO_CCS_%d_%d",sx,sy);
    &wire ntRef_ntTDO_CCS = wire *strVar;

    sprintf(strVar,"ntTDO_INT_%d_%d",sx,sy);
    &wire ntRef_ntTDO_INT = wire *strVar;

    sprintf(strVar,"ntTCK_BUF_%d_%d",sx,sy);
    &wire ntRef_ntTCK_BUF = wire *strVar;

    sprintf(strVar,"ntTCK_BUF_O_%d_%d",sx,sy);
    &wire ntRef_ntTCK_BUF_O = wire *strVar;

    sprintf(strVar,"ntSS_N_%d_%d",sx,sy);
    &wire ntRef_ntSS_N = wire *strVar;

    sprintf(strVar,"ntMOSI_I_%d_%d",sx,sy);
    &wire ntRef_ntMOSI_I = wire *strVar;

    sprintf(strVar,"ntMISO_I_%d_%d",sx,sy);
    &wire ntRef_ntMISO_I = wire *strVar;

    sprintf(strVar,"ntSCLK_%d_%d",sx,sy);
    &wire ntRef_ntSCLK = wire *strVar;

    sprintf(strVar,"ntGOUTEN_BUF_%d_%d",sx,sy);
    &wire ntRef_ntGOUTEN_BUF = wire *strVar;

    sprintf(strVar,"ntMODE1_BUF_%d_%d",sx,sy);
    &wire ntRef_ntMODE1_BUF = wire *strVar;

    sprintf(strVar,"ntMODE2_BUF_%d_%d",sx,sy);
    &wire ntRef_ntMODE2_BUF = wire *strVar;

    sprintf(strVar,"ntMODE3_BUF_%d_%d",sx,sy);
    &wire ntRef_ntMODE3_BUF = wire *strVar;

    sprintf(strVar,"ntS12_RST_BUF_%d_%d",sx,sy);
    &wire ntRef_ntS12_RST_BUF = wire *strVar;

    sprintf(strVar,"ntUPDATE_DR_BUF_%d_%d",sx,sy);
    &wire ntRef_ntUPDATE_DR_BUF = wire *strVar;

    sprintf(strVar,"ntSHIFT_DR_BUF_%d_%d",sx,sy);
    &wire ntRef_ntSHIFT_DR_BUF = wire *strVar;

    sprintf(strVar,"ntPOR_N_O_%d_%d",sx,sy);
    &wire ntRef_ntPOR_N_O = wire *strVar;

    sprintf(strVar,"ntSPAL_CS_N_%d_%d",sx,sy);
    &wire ntRef_ntSPAL_CS_N = wire *strVar;

    sprintf(strVar,"ntSPAL_RDWR_N_%d_%d",sx,sy);
    &wire ntRef_ntSPAL_RDWR_N = wire *strVar;

    sprintf(strVar,"ntSPAL_CLK_%d_%d",sx,sy);
    &wire ntRef_ntSPAL_CLK = wire *strVar;

    sprintf(strVar,"ntSPAL_DIN_%d_%d",sx,sy);
    &wire ntRef_ntSPAL_DIN[15:0] = wire *strVar[15:0];

    sprintf(strVar,"ntEFB_DIN_%d_%d",sx,sy);
    &wire ntRef_ntEFB_DIN = wire *strVar;

    sprintf(strVar,"ntEFB_CLK_%d_%d",sx,sy);
    &wire ntRef_ntEFB_CLK = wire *strVar;

    sprintf(strVar,"ntEFB_STR_%d_%d",sx,sy);
    &wire ntRef_ntEFB_STR = wire *strVar;

    sprintf(strVar,"ntSIO_VDDIO_DET_N_T_%d_%d",sx,sy);
    &wire ntRef_ntSIO_VDDIO_DET_N_T = wire *strVar;

    sprintf(strVar,"ntVH_%d_%d",sx,sy);
    &wire ntRef_ntVH = wire *strVar                   /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntVL_%d_%d",sx,sy);
    &wire ntRef_ntVL = wire *strVar                   /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntVREF_TEST_%d_%d",sx,sy);
    &wire ntRef_ntVREF_TEST = wire *strVar                   /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntDIN_MIPI_LP_%d_%d",sx,sy);
    &wire ntRef_ntDIN_MIPI_LP[27:0] = wire *strVar[27:0]     /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;


    if(tx==0)
    {
      sprintf(strVar, "IOB0_2K_TILE_%d_%d", sx, sy);
      device IOB0_2K_TILE *strVar
        port map(
                  DIN        => ntRef_ntDIN,
                  DONE_DIN   => ntRef_ntDONE_DIN,
                  INITN_DIN  => ntRef_ntINITN_DIN,
                  JTAGEN     => ntRef_ntJTAGEN,
                  RSTN       => ntRef_ntRSTN,
                  SCL_DIN    => ntRef_ntSCL_DIN,
                  SDA_DIN    => ntRef_ntSDA_DIN,
                  TCK_DIN    => ntRef_ntTCK_DIN,
                  TMS_DIN    => ntRef_ntTMS_DIN,
                  TDI_DIN    => ntRef_ntTDI_DIN,
                  TCK_BUF_O  => ntRef_ntTCK_BUF_O,
                  TDO_CCS    => ntRef_ntTDO_CCS,
                  TDO_INT    => ntRef_ntTDO_INT,
                  GOUTEN_BUF => ntRef_ntGOUTEN_BUF,
                  MODE1_BUF  => ntRef_ntMODE1_BUF,
                  MODE2_BUF  => ntRef_ntMODE2_BUF,
                  MODE3_BUF  => ntRef_ntMODE3_BUF,
                  S12_RST_BUF   => ntRef_ntS12_RST_BUF,
                  UPDATE_DR_BUF => ntRef_ntUPDATE_DR_BUF,
                  SHIFT_DR_BUF  => ntRef_ntSHIFT_DR_BUF,
                  POR_N_O       => ntRef_ntPOR_N_O,

                  SPAL_CS_N     => ntRef_ntSPAL_CS_N,
                  SPAL_RDWR_N   => ntRef_ntSPAL_RDWR_N,
                  SPAL_CLK      => ntRef_ntSPAL_CLK,
                  SPAL_DIN      => ntRef_ntSPAL_DIN,
                  EFB_DIN       => ntRef_ntEFB_DIN,
                  EFB_CLK       => ntRef_ntEFB_CLK,
                  EFB_STR       => ntRef_ntEFB_STR,
                  VH            => ntRef_ntVH,
                  VL            => ntRef_ntVL,
                  VREF_TEST     => ntRef_ntVREF_TEST,

                  SIO_VDDIO_DET_N_T   => ntRef_ntSIO_VDDIO_DET_N_T
                )
        @([sx,sy]);

    int ty_srb = ty + 12;
    int sy_srb = ty_srb * NUM_GRID_Y;
    int sx_srb = (tx+1)*NUM_GRID_X;

      connect
        (
           <pin ADDR of <device IOB0_2K_TILE @[sx,sy]>>        => <wire ADDR[1:0] of <device CRAM_CTRL_2K_TILE @ [sx_bl,sy_bl]>>,
           <pin IPOLY10U of <device IOB0_2K_TILE @[sx,sy]>>    => <wire IPOLY_10U[0] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>,
           <pin ICONST3U[0] of <device IOB0_2K_TILE @[sx,sy]>> => <wire ICONST_3U[0] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>,
           <pin ICONST3U[1] of <device IOB0_2K_TILE @[sx,sy]>> => <wire ICONST_3U[12] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>,
           <pin VBG_V0P5 of <device IOB0_2K_TILE @[sx,sy]>>    => <wire VBG_0P5V of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>,

           <pin LVDS_VCM[1] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>  => <wire VL of <device IOB0_2K_TILE @[sx,sy]>>,
           <pin LVDS_VCM[0] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>  => <wire VH of <device IOB0_2K_TILE @[sx,sy]>>,
           <pin VREF of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>         => <wire VREF_TEST of <device IOB0_2K_TILE @[sx,sy]>>,

           <pin DIFFIN_DYN_EN_N of <device IOB0_2K_TILE @[sx,sy]>>  => <wire A_A3 of <device SRB_TILE @ [sx_srb,sy_srb]>>,
           <pin DIFFOUT_DYN_EN_N of <device IOB0_2K_TILE @[sx,sy]>> => <wire S_A3 of <device SRB_TILE @ [sx_srb,sy_srb]>>
        );   


    connect
      (
        <pin CFGMOD_DONE of <device IOB0_2K_TILE @[sx,sy]>>  => <wire CFGMOD_DONE of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin CFGMOD_I2C of <device IOB0_2K_TILE @[sx,sy]>>   => <wire CFGMOD_I2C of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin CFGMOD_INITN of <device IOB0_2K_TILE @[sx,sy]>> => <wire CFGMOD_INIT of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin CFGMOD_JEN of <device IOB0_2K_TILE @[sx,sy]>>   => <wire CFGMOD_JEN of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin CFGMOD_JTAG of <device IOB0_2K_TILE @[sx,sy]>>  => <wire CFGMOD_JTAG of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin CFGMOD_RST of <device IOB0_2K_TILE @[sx,sy]>>   => <wire CFGMOD_RST of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin CFGMOD_EFB of <device IOB0_2K_TILE @[sx,sy]>>   => <wire CFGMOD_EFB of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin CFGMOD_SPAL of <device IOB0_2K_TILE @[sx,sy]>>  => <wire CFGMOD_SPAL of <device CCS_TILE @[sx_ccs,sy_ccs]>>,

        <pin TDO_PAD of <device IOB0_2K_TILE @[sx,sy]>>   => <wire TDO of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin TDO_TS of <device IOB0_2K_TILE @[sx,sy]>>    => <wire TDO_OE of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin TDI of <device CCS_TILE @[sx_ccs,sy_ccs]>>   => <wire TDI_DIN of <device IOB0_2K_TILE @[sx,sy]>>,
        <pin TCK of <device CCS_TILE @[sx_ccs,sy_ccs]>>   => <wire TCK_DIN of <device IOB0_2K_TILE @[sx,sy]>>,
        <pin TMS of <device CCS_TILE @[sx_ccs,sy_ccs]>>   => <wire TMS_DIN of <device IOB0_2K_TILE @[sx,sy]>>,

        <pin DONE of <device IOB0_2K_TILE @[sx,sy]>>       => <wire DONE of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin DONE_OE of <device IOB0_2K_TILE @[sx,sy]>>    => <wire DONE_OE of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin DONE_I of <device CCS_TILE @[sx_ccs,sy_ccs]>> => <wire DONE_DIN of <device IOB0_2K_TILE @[sx,sy]>>,
        <pin INIT_N of <device IOB0_2K_TILE @[sx,sy]>>     => <wire INIT_COMPLETE of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin INIT_N_OE of <device IOB0_2K_TILE @[sx,sy]>>  => <wire INIT_N_OE of <device CCS_TILE @[sx_ccs,sy_ccs]>>,

        <pin INIT_N of <device CCS_TILE @[sx_ccs,sy_ccs]>> => <wire INITN_DIN of <device IOB0_2K_TILE @[sx,sy]>>,
        <pin RST_N of <device CCS_TILE @[sx_ccs,sy_ccs]>>  => <wire RSTN of <device IOB0_2K_TILE @[sx,sy]>>,
        <pin JEN of <device CCS_TILE @[sx_ccs,sy_ccs]>>    => <wire JTAGEN of <device IOB0_2K_TILE @[sx,sy]>>,

        <pin SPAL_BUSY of <device IOB0_2K_TILE @[sx,sy]>>       => <wire SPAL_BUSY of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin SPAL_DOUT of <device IOB0_2K_TILE @[sx,sy]>>       => <wire SPAL_DOUT of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin SPAL_D_OE of <device IOB0_2K_TILE @[sx,sy]>>       => <wire SPAL_D_OE of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin SPAL_CLK of <device CCS_TILE @[sx_ccs,sy_ccs]>>    => <wire SPAL_CLK of <device IOB0_2K_TILE @[sx,sy]>>,
        <pin SPAL_DIN of <device CCS_TILE @[sx_ccs,sy_ccs]>>    => <wire SPAL_DIN of <device IOB0_2K_TILE @[sx,sy]>>,
        <pin SPAL_CS_N of <device CCS_TILE @[sx_ccs,sy_ccs]>>   => <wire SPAL_CS_N of <device IOB0_2K_TILE @[sx,sy]>>,
        <pin SPAL_RDWR_N of <device CCS_TILE @[sx_ccs,sy_ccs]>> => <wire SPAL_RDWR_N of <device IOB0_2K_TILE @[sx,sy]>>,

        <pin EFB_DOUT of <device IOB0_2K_TILE @[sx,sy]>>     => <wire EFB_TDO of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin TOE of <device IOB0_2K_TILE @[sx,sy]>>          => <wire EFB_TOE of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin EFB_TCK of <device CCS_TILE @[sx_ccs,sy_ccs]>>  => <wire EFB_CLK of <device IOB0_2K_TILE @[sx,sy]>>,
        <pin EFB_TDI of <device CCS_TILE @[sx_ccs,sy_ccs]>>  => <wire EFB_DIN of <device IOB0_2K_TILE @[sx,sy]>>,
        <pin EFB_TSTR of <device CCS_TILE @[sx_ccs,sy_ccs]>> => <wire EFB_STR of <device IOB0_2K_TILE @[sx,sy]>>,

        <pin SCL of <device CCS_TILE @[sx_ccs,sy_ccs]>>    => <wire SCL_DIN of <device IOB0_2K_TILE @[sx,sy]>>,
        <pin SDA_I of <device CCS_TILE @[sx_ccs,sy_ccs]>>  => <wire SDA_DIN of <device IOB0_2K_TILE @[sx,sy]>>,
        <pin SDA_CCS of <device IOB0_2K_TILE @[sx,sy]>>    => <wire SDA_O of <device CCS_TILE @[sx_ccs,sy_ccs]>>
//        <pin SCL_CCS of <device IOB0_2K_TILE @[sx,sy]>>    => <wire JTAGEN of <device IOB0_2K_TILE @[sx,sy]>>,

      );
    }
    else
    {
      sprintf(strVar, "IOB2_2K_TILE_%d_%d", sx, sy);
      device IOB2_2K_TILE *strVar 
        port map(
                  DIN           => ntRef_ntDIN,
                  MOSI_I        => ntRef_ntMOSI_I,
                  MISO_I        => ntRef_ntMISO_I,
                  SS_N          => ntRef_ntSS_N,
                  SCLK          => ntRef_ntSCLK,
                  TDO_INT       => ntRef_ntTDO_INT,
                  TCK_BUF_O     => ntRef_ntTCK_BUF_O,
                  DIN_MIPI_LP   => ntRef_ntDIN_MIPI_LP,
                  VREF_TEST     => ntRef_ntVREF_TEST
                )
        @([sx,sy]);

    int ty_srb = ty + 12;
    int sy_srb = ty_srb * NUM_GRID_Y;
    int sx_srb = (tx-1)*NUM_GRID_X;


      connect
        (
          <pin ADDR of <device IOB2_2K_TILE @[sx,sy]>>   => <wire ADDR[358:357] of <device CRAM_CTRL_2K_TILE @ [sx_bl,sy_bl]>>,
          <pin ICONST3U of <device IOB2_2K_TILE @[sx,sy]>> => <wire ICONST_3U[2] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>,

 //         <pin VREF_IN[1] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>  => <wire VREF_TEST of <device IOB2_2K_TILE @[sx,sy]>>,

           <pin DIFFIN_DYN_EN_N of <device IOB2_2K_TILE @[sx,sy]>>  => <wire A_A3 of <device SRB_TILE @ [sx_srb,sy_srb]>>,
           <pin DIFFOUT_DYN_EN_N of <device IOB2_2K_TILE @[sx,sy]>> => <wire S_A3 of <device SRB_TILE @ [sx_srb,sy_srb]>>

        );  

    connect
      (
        <pin CFGMOD_MS of <device IOB2_2K_TILE @[sx,sy]>>  => <wire CFGMOD_MS of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin CFGMOD_SS of <device IOB2_2K_TILE @[sx,sy]>>  => <wire CFGMOD_SS of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin CFGMOD_SPI of <device IOB2_2K_TILE @[sx,sy]>> => <wire CFGMOD_SPI of <device CCS_TILE @[sx_ccs,sy_ccs]>>,

        <pin SS_N of <device CCS_TILE @[sx_ccs,sy_ccs]>>   => <wire SS_N of <device IOB2_2K_TILE @[sx,sy]>>,
        <pin SCLK of <device CCS_TILE @[sx_ccs,sy_ccs]>>   => <wire SCLK of <device IOB2_2K_TILE @[sx,sy]>>,
        <pin MISO_I of <device CCS_TILE @[sx_ccs,sy_ccs]>> => <wire MISO_I of <device IOB2_2K_TILE @[sx,sy]>>,
        <pin MOSI_I of <device CCS_TILE @[sx_ccs,sy_ccs]>> => <wire MOSI_I of <device IOB2_2K_TILE @[sx,sy]>>,
        <pin MS_N of <device IOB2_2K_TILE @[sx,sy]>>       => <wire MS_N of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin MS_N_OE of <device IOB2_2K_TILE @[sx,sy]>>    => <wire MS_N_OE of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin MCLK of <device IOB2_2K_TILE @[sx,sy]>>       => <wire SCK of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin MCLK_OE of <device IOB2_2K_TILE @[sx,sy]>>    => <wire SCK_OE of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin MISO_O of <device IOB2_2K_TILE @[sx,sy]>>     => <wire MISO_O of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin MISO_OE of <device IOB2_2K_TILE @[sx,sy]>>    => <wire MISO_OE of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin MOSI_O of <device IOB2_2K_TILE @[sx,sy]>>     => <wire MOSI_O of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin MOSI_OE of <device IOB2_2K_TILE @[sx,sy]>>    => <wire MOSI_OE of <device CCS_TILE @[sx_ccs,sy_ccs]>>
      );
    }


    int ty_iol0 = 24;
    int ty_iol1 = 23;
    int ty_iol2 = 22;
    int ty_iol3 = 21;
    int ty_iol4 = 17;
    int ty_iol5 = 16;
    int ty_iol6 = 12;
    int ty_iol7 = 11;
    int ty_iol8 = 10;
    int ty_iol9 = 9;
    int ty_iol10 = 8;
    int ty_iol11 = 6;
    int ty_iol12 = 5;
    int ty_iol13 = 4;

    int sx_iol = (tx==0) ? (tx+1)*NUM_GRID_X + 3 :  (tx-1)*NUM_GRID_X + 3;

    string iob = (tx==0) ? "IOB0_2K_TILE" : "IOB2_2K_TILE";
    string iol = (tx==0) ? "IOLL_TILE" : "IOLR_TILE";

    if(tx!=0)
    {
      connect
        (

          <pin DIN_MIPI_A of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>   => <wire DIN_MIPI_LP[1] of <device *iob @[sx,sy]>>,
          <pin DIN_MIPI_A of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>   => <wire DIN_MIPI_LP[3] of <device *iob @[sx,sy]>>,
          <pin DIN_MIPI_A of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>   => <wire DIN_MIPI_LP[5] of <device *iob @[sx,sy]>>,
          <pin DIN_MIPI_A of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>   => <wire DIN_MIPI_LP[7] of <device *iob @[sx,sy]>>,
          <pin DIN_MIPI_A of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>   => <wire DIN_MIPI_LP[9] of <device *iob @[sx,sy]>>,
          <pin DIN_MIPI_A of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>   => <wire DIN_MIPI_LP[11] of <device *iob @[sx,sy]>>,
          <pin DIN_MIPI_A of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>   => <wire DIN_MIPI_LP[13] of <device *iob @[sx,sy]>>,
          <pin DIN_MIPI_A of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>   => <wire DIN_MIPI_LP[15] of <device *iob @[sx,sy]>>,
          <pin DIN_MIPI_A of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>   => <wire DIN_MIPI_LP[17] of <device *iob @[sx,sy]>>,
          <pin DIN_MIPI_A of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>   => <wire DIN_MIPI_LP[19] of <device *iob @[sx,sy]>>,
          <pin DIN_MIPI_A of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>  => <wire DIN_MIPI_LP[21] of <device *iob @[sx,sy]>>,
          <pin DIN_MIPI_A of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>  => <wire DIN_MIPI_LP[23] of <device *iob @[sx,sy]>>,
          <pin DIN_MIPI_A of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>  => <wire DIN_MIPI_LP[25] of <device *iob @[sx,sy]>>,
          <pin DIN_MIPI_A of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>  => <wire DIN_MIPI_LP[27] of <device *iob @[sx,sy]>>
        );
    }


    connect
      (
         <pin DO[0] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin DO[1] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin DO[2] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin DO[3] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin DO[4] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin DO[5] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin DO[6] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin DO[7] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin DO[8] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin DO[9] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin DO[10] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin DO[11] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin DO[12] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin DO[13] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin DO[14] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin DO[15] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin DO[16] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin DO[17] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin DO[18] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin DO[19] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin DO[20] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin DO[21] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin DO[22] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin DO[23] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin DO[24] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin DO[25] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin DO[26] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin DO[27] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin DO[28] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin DO[29] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin DO[30] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin DO[31] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin DO[32] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin DO[33] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin DO[34] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin DO[35] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin DO[36] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin DO[37] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin DO[38] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin DO[39] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin DO[40] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin DO[41] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin DO[42] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin DO[43] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin DO[44] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin DO[45] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin DO[46] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin DO[47] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin DO[48] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin DO[49] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin DO[50] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin DO[51] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin DO[52] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,
         <pin DO[53] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,
         <pin DO[54] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,
         <pin DO[55] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,

         <pin TS[0] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin TS[1] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin TS[2] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin TS[3] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin TS[4] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin TS[5] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin TS[6] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin TS[7] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin TS[8] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin TS[9] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin TS[10] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin TS[11] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin TS[12] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin TS[13] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin TS[14] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin TS[15] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin TS[16] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin TS[17] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin TS[18] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin TS[19] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin TS[20] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin TS[21] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin TS[22] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin TS[23] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin TS[24] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin TS[25] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin TS[26] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin TS[27] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin TS[28] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin TS[29] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin TS[30] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin TS[31] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin TS[32] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin TS[33] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin TS[34] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin TS[35] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin TS[36] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin TS[37] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin TS[38] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin TS[39] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin TS[40] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin TS[41] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin TS[42] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin TS[43] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin TS[44] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin TS[45] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin TS[46] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin TS[47] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin TS[48] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin TS[49] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin TS[50] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin TS[51] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin TS[52] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,
         <pin TS[53] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,
         <pin TS[54] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,
         <pin TS[55] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,

         <pin MIPI_SW_DYN[0] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[1] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[2] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[3] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[4] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[5] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[6] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[7] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[8] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[9] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[10] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[11] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[12] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[13] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[14] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[15] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[16] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[17] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[18] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[19] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[20] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[21] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[22] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[23] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[24] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[25] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[26] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[27] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[28] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[29] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[30] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[31] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[32] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[33] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[34] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[35] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[36] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[37] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[38] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[39] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[40] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[41] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[42] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[43] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[44] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[45] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[46] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[47] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[48] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[49] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[50] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[51] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[52] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[53] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[54] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,
         <pin MIPI_SW_DYN[55] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,

         <pin INBUF_DYN_DIS_N[0] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[1] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[2] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[3] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[4] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[5] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[6] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[7] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[8] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[9] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[10] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[11] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[12] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[13] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[14] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[15] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[16] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[17] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[18] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[19] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[20] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[21] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[22] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[23] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[24] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[25] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[26] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[27] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[28] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[29] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[30] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[31] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[32] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[33] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[34] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[35] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[36] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[37] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[38] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[39] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[40] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[41] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[42] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[43] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[44] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[45] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[46] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[47] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[48] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[49] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[50] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[51] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[52] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[53] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[54] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,
         <pin INBUF_DYN_DIS_N[55] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>,

         <pin DIN_D of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>  => <wire DIN[0] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>  => <wire DIN[1] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>  => <wire DIN[2] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device *iol @ [sx_iol,ty_iol0*NUM_GRID_Y]>>  => <wire DIN[3] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>  => <wire DIN[4] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>  => <wire DIN[5] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>  => <wire DIN[6] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device *iol @ [sx_iol,ty_iol1*NUM_GRID_Y]>>  => <wire DIN[7] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>  => <wire DIN[8] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>  => <wire DIN[9] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>  => <wire DIN[10] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device *iol @ [sx_iol,ty_iol2*NUM_GRID_Y]>>  => <wire DIN[11] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>  => <wire DIN[12] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>  => <wire DIN[13] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>  => <wire DIN[14] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device *iol @ [sx_iol,ty_iol3*NUM_GRID_Y]>>  => <wire DIN[15] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>  => <wire DIN[16] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>  => <wire DIN[17] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>  => <wire DIN[18] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device *iol @ [sx_iol,ty_iol4*NUM_GRID_Y]>>  => <wire DIN[19] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>  => <wire DIN[20] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>  => <wire DIN[21] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>  => <wire DIN[22] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device *iol @ [sx_iol,ty_iol5*NUM_GRID_Y]>>  => <wire DIN[23] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>  => <wire DIN[24] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>  => <wire DIN[25] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>  => <wire DIN[26] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device *iol @ [sx_iol,ty_iol6*NUM_GRID_Y]>>  => <wire DIN[27] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>  => <wire DIN[28] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>  => <wire DIN[29] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>  => <wire DIN[30] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device *iol @ [sx_iol,ty_iol7*NUM_GRID_Y]>>  => <wire DIN[31] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>  => <wire DIN[32] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>  => <wire DIN[33] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>  => <wire DIN[34] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device *iol @ [sx_iol,ty_iol8*NUM_GRID_Y]>>  => <wire DIN[35] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>  => <wire DIN[36] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>  => <wire DIN[37] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>  => <wire DIN[38] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device *iol @ [sx_iol,ty_iol9*NUM_GRID_Y]>>  => <wire DIN[39] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>  => <wire DIN[40] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>  => <wire DIN[41] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>  => <wire DIN[42] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device *iol @ [sx_iol,ty_iol10*NUM_GRID_Y]>>  => <wire DIN[43] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>  => <wire DIN[44] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>  => <wire DIN[45] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>  => <wire DIN[46] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device *iol @ [sx_iol,ty_iol11*NUM_GRID_Y]>>  => <wire DIN[47] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>  => <wire DIN[48] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>  => <wire DIN[49] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>  => <wire DIN[50] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device *iol @ [sx_iol,ty_iol12*NUM_GRID_Y]>>  => <wire DIN[51] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>  => <wire DIN[52] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>  => <wire DIN[53] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>  => <wire DIN[54] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device *iol @ [sx_iol,ty_iol13*NUM_GRID_Y]>>  => <wire DIN[55] of <device *iob @[sx,sy]>>
      );


    connect
      (
        <pin DATA of  <device *iob @[sx,sy]>>  => <wire DATA[1625:6] of <device CRAM_CTRL_2K_TILE @ [sx_bl,sy_bl]>>,
        <pin DATAN of  <device *iob @[sx,sy]>> => <wire DATAN[1625:6] of <device CRAM_CTRL_2K_TILE @ [sx_bl,sy_bl]>>

      );



}//end of place_iob0_tile
/********************************************************************************
********************************************************************************/
function place_iobt_tile(unsigned int tx,ty)
{
    unsigned int sx, sy; 
    sx = tx * NUM_GRID_X;
    sy = ty * NUM_GRID_Y;

    string strVar;
    sprintf(strVar,"ntDIN_%d_%d",sx,sy);
    &wire ntRef_ntDIN[51:0] = wire *strVar[51:0]                   /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTDO_INT_%d_%d",sx,sy);
    &wire ntRef_ntTDO_INT = wire *strVar;

    sprintf(strVar,"ntTCK_BUF_O_%d_%d",sx,sy);
    &wire ntRef_ntTCK_BUF_O = wire *strVar;

    sprintf(strVar,"ntGOUTEN_O_%d_%d",sx,sy);
    &wire ntRef_ntGOUTEN_O = wire *strVar;

    sprintf(strVar,"ntMODE1_O_%d_%d",sx,sy);
    &wire ntRef_ntMODE1_O = wire *strVar;

    sprintf(strVar,"ntMODE2_O_%d_%d",sx,sy);
    &wire ntRef_ntMODE2_O = wire *strVar;

    sprintf(strVar,"ntMODE3_O_%d_%d",sx,sy);
    &wire ntRef_ntMODE3_O = wire *strVar;

    sprintf(strVar,"ntS12_RST_O_%d_%d",sx,sy);
    &wire ntRef_ntS12_RST_O = wire *strVar;

    sprintf(strVar,"ntUPDATE_DR_O_%d_%d",sx,sy);
    &wire ntRef_ntUPDATE_DR_O = wire *strVar;

    sprintf(strVar,"ntSHIFT_DR_O_%d_%d",sx,sy);
    &wire ntRef_ntSHIFT_DR_O = wire *strVar;

    sprintf(strVar,"ntPOR_N_O_%d_%d",sx,sy);
    &wire ntRef_ntPOR_N_O = wire *strVar;

    sprintf(strVar,"ntVREF_TEST_%d_%d",sx,sy);
    &wire ntRef_ntVREF_TEST = wire *strVar                   /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;


    sprintf(strVar, "IOB1_2K_TILE_%d_%d", sx, sy);
    device IOB1_2K_TILE *strVar
      port map(
                DIN         => ntRef_ntDIN,
                TCK_BUF_O   => ntRef_ntTCK_BUF_O,
                TDO_INT     => ntRef_ntTDO_INT,
                GOUTEN_O    => ntRef_ntGOUTEN_O,
                MODE1_O     => ntRef_ntMODE1_O,
                MODE2_O     => ntRef_ntMODE2_O,
                MODE3_O     => ntRef_ntMODE3_O,
                S12_RST_O   => ntRef_ntS12_RST_O,
                UPDATE_DR_O => ntRef_ntUPDATE_DR_O,
                SHIFT_DR_O  => ntRef_ntSHIFT_DR_O,
                POR_N_O     => ntRef_ntPOR_N_O,
                VREF_TEST     => ntRef_ntVREF_TEST
              )
      @([sx,sy]);

    int tx_iol0 = tx;
    int tx_iol1 = tx + 1;
    int tx_iol2 = tx + 2;
    int tx_iol3 = tx + 3;
    int tx_iol4 = tx + 4;
    int tx_iol5 = tx + 5;
    int tx_iol6 = tx + 6;
    int tx_iol7 = tx + 9;
    int tx_iol8 = tx + 10;
    int tx_iol9 = tx + 11;
    int tx_iol10 = tx + 12;
    int tx_iol11 = tx + 13;
    int tx_iol12 = tx + 14;

    int sx_iol0 = tx_iol0*NUM_GRID_X+3;
    int sx_iol1 = tx_iol1*NUM_GRID_X+3;
    int sx_iol2 = tx_iol2*NUM_GRID_X+3;
    int sx_iol3 = tx_iol3*NUM_GRID_X+3;
    int sx_iol4 = tx_iol4*NUM_GRID_X+3;
    int sx_iol5 = tx_iol5*NUM_GRID_X+3;
    int sx_iol6 = tx_iol6*NUM_GRID_X+3;
    int sx_iol7 = tx_iol7*NUM_GRID_X+3;
    int sx_iol8 = tx_iol8*NUM_GRID_X+3;
    int sx_iol9 = tx_iol9*NUM_GRID_X+3;
    int sx_iol10 = tx_iol10*NUM_GRID_X+3;
    int sx_iol11 = tx_iol11*NUM_GRID_X+3;
    int sx_iol12 = tx_iol12*NUM_GRID_X+3;


    int sy_iol = (ty-1)*NUM_GRID_Y;
    string iob = "IOB1_2K_TILE";

    connect
      (
         <pin DO[0] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin DO[1] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin DO[2] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin DO[3] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin DO[4] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin DO[5] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin DO[6] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin DO[7] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin DO[8] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin DO[9] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin DO[10] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin DO[11] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin DO[12] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin DO[13] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin DO[14] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin DO[15] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin DO[16] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin DO[17] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin DO[18] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin DO[19] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin DO[20] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin DO[21] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin DO[22] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin DO[23] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin DO[24] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin DO[25] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin DO[26] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin DO[27] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin DO[28] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin DO[29] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin DO[30] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin DO[31] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin DO[32] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin DO[33] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin DO[34] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin DO[35] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin DO[36] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin DO[37] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin DO[38] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin DO[39] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin DO[40] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin DO[41] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin DO[42] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin DO[43] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin DO[44] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin DO[45] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin DO[46] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin DO[47] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin DO[48] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,
         <pin DO[49] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,
         <pin DO[50] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,
         <pin DO[51] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,

         <pin TS[0] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin TS[1] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin TS[2] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin TS[3] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin TS[4] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin TS[5] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin TS[6] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin TS[7] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin TS[8] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin TS[9] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin TS[10] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin TS[11] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin TS[12] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin TS[13] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin TS[14] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin TS[15] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin TS[16] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin TS[17] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin TS[18] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin TS[19] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin TS[20] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin TS[21] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin TS[22] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin TS[23] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin TS[24] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin TS[25] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin TS[26] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin TS[27] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin TS[28] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin TS[29] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin TS[30] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin TS[31] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin TS[32] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin TS[33] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin TS[34] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin TS[35] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin TS[36] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin TS[37] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin TS[38] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin TS[39] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin TS[40] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin TS[41] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin TS[42] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin TS[43] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin TS[44] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin TS[45] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin TS[46] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin TS[47] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin TS[48] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,
         <pin TS[49] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,
         <pin TS[50] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,
         <pin TS[51] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,

         <pin MIPI_SW_DYN[0] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin MIPI_SW_DYN[1] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin MIPI_SW_DYN[2] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin MIPI_SW_DYN[3] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin MIPI_SW_DYN[4] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin MIPI_SW_DYN[5] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin MIPI_SW_DYN[6] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin MIPI_SW_DYN[7] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin MIPI_SW_DYN[8] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin MIPI_SW_DYN[9] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin MIPI_SW_DYN[10] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin MIPI_SW_DYN[11] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin MIPI_SW_DYN[12] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin MIPI_SW_DYN[13] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin MIPI_SW_DYN[14] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin MIPI_SW_DYN[15] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin MIPI_SW_DYN[16] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin MIPI_SW_DYN[17] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin MIPI_SW_DYN[18] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin MIPI_SW_DYN[19] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin MIPI_SW_DYN[20] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin MIPI_SW_DYN[21] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin MIPI_SW_DYN[22] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin MIPI_SW_DYN[23] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin MIPI_SW_DYN[24] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin MIPI_SW_DYN[25] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin MIPI_SW_DYN[26] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin MIPI_SW_DYN[27] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin MIPI_SW_DYN[28] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin MIPI_SW_DYN[29] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin MIPI_SW_DYN[30] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin MIPI_SW_DYN[31] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin MIPI_SW_DYN[32] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin MIPI_SW_DYN[33] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin MIPI_SW_DYN[34] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin MIPI_SW_DYN[35] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin MIPI_SW_DYN[36] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin MIPI_SW_DYN[37] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin MIPI_SW_DYN[38] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin MIPI_SW_DYN[39] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin MIPI_SW_DYN[40] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin MIPI_SW_DYN[41] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin MIPI_SW_DYN[42] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin MIPI_SW_DYN[43] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin MIPI_SW_DYN[44] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin MIPI_SW_DYN[45] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin MIPI_SW_DYN[46] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin MIPI_SW_DYN[47] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin MIPI_SW_DYN[48] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,
         <pin MIPI_SW_DYN[49] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,
         <pin MIPI_SW_DYN[50] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,
         <pin MIPI_SW_DYN[51] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,

         <pin INBUF_DYN_DIS_N[0] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[1] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[2] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[3] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[4] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[5] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[6] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[7] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLT_TILE @ [sx_iol1,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[8] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[9] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[10] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[11] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLT_TILE @ [sx_iol2,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[12] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[13] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[14] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[15] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLT_TILE @ [sx_iol3,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[16] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[17] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[18] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[19] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLT_TILE @ [sx_iol4,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[20] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[21] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[22] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[23] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLT_TILE @ [sx_iol5,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[24] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[25] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[26] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[27] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLT_TILE @ [sx_iol6,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[28] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[29] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[30] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[31] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLT_TILE @ [sx_iol7,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[32] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[33] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[34] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[35] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLT_TILE @ [sx_iol8,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[36] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[37] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[38] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[39] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLT_TILE @ [sx_iol9,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[40] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[41] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[42] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[43] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLT_TILE @ [sx_iol10,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[44] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[45] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[46] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[47] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLT_TILE @ [sx_iol11,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[48] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[49] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[50] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[51] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>,

         <pin DIN_A of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>  => <wire DIN[0] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>  => <wire DIN[1] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>  => <wire DIN[2] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLTC_TILE @ [sx_iol0,sy_iol]>>  => <wire DIN[3] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device IOLT_TILE @ [sx_iol1,sy_iol]>>  => <wire DIN[4] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLT_TILE @ [sx_iol1,sy_iol]>>  => <wire DIN[5] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLT_TILE @ [sx_iol1,sy_iol]>>  => <wire DIN[6] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLT_TILE @ [sx_iol1,sy_iol]>>  => <wire DIN[7] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device IOLT_TILE @ [sx_iol2,sy_iol]>>  => <wire DIN[8] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLT_TILE @ [sx_iol2,sy_iol]>>  => <wire DIN[9] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLT_TILE @ [sx_iol2,sy_iol]>>  => <wire DIN[10] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLT_TILE @ [sx_iol2,sy_iol]>>  => <wire DIN[11] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device IOLT_TILE @ [sx_iol3,sy_iol]>>  => <wire DIN[12] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLT_TILE @ [sx_iol3,sy_iol]>>  => <wire DIN[13] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLT_TILE @ [sx_iol3,sy_iol]>>  => <wire DIN[14] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLT_TILE @ [sx_iol3,sy_iol]>>  => <wire DIN[15] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device IOLT_TILE @ [sx_iol4,sy_iol]>>  => <wire DIN[16] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLT_TILE @ [sx_iol4,sy_iol]>>  => <wire DIN[17] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLT_TILE @ [sx_iol4,sy_iol]>>  => <wire DIN[18] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLT_TILE @ [sx_iol4,sy_iol]>>  => <wire DIN[19] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device IOLT_TILE @ [sx_iol5,sy_iol]>>  => <wire DIN[20] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLT_TILE @ [sx_iol5,sy_iol]>>  => <wire DIN[21] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLT_TILE @ [sx_iol5,sy_iol]>>  => <wire DIN[22] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLT_TILE @ [sx_iol5,sy_iol]>>  => <wire DIN[23] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device IOLT_TILE @ [sx_iol6,sy_iol]>>  => <wire DIN[24] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLT_TILE @ [sx_iol6,sy_iol]>>  => <wire DIN[25] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLT_TILE @ [sx_iol6,sy_iol]>>  => <wire DIN[26] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLT_TILE @ [sx_iol6,sy_iol]>>  => <wire DIN[27] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device IOLT_TILE @ [sx_iol7,sy_iol]>>  => <wire DIN[28] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLT_TILE @ [sx_iol7,sy_iol]>>  => <wire DIN[29] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLT_TILE @ [sx_iol7,sy_iol]>>  => <wire DIN[30] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLT_TILE @ [sx_iol7,sy_iol]>>  => <wire DIN[31] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device IOLT_TILE @ [sx_iol8,sy_iol]>>  => <wire DIN[32] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLT_TILE @ [sx_iol8,sy_iol]>>  => <wire DIN[33] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLT_TILE @ [sx_iol8,sy_iol]>>  => <wire DIN[34] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLT_TILE @ [sx_iol8,sy_iol]>>  => <wire DIN[35] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device IOLT_TILE @ [sx_iol9,sy_iol]>>  => <wire DIN[36] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLT_TILE @ [sx_iol9,sy_iol]>>  => <wire DIN[37] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLT_TILE @ [sx_iol9,sy_iol]>>  => <wire DIN[38] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLT_TILE @ [sx_iol9,sy_iol]>>  => <wire DIN[39] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device IOLT_TILE @ [sx_iol10,sy_iol]>>  => <wire DIN[40] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLT_TILE @ [sx_iol10,sy_iol]>>  => <wire DIN[41] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLT_TILE @ [sx_iol10,sy_iol]>>  => <wire DIN[42] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLT_TILE @ [sx_iol10,sy_iol]>>  => <wire DIN[43] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device IOLT_TILE @ [sx_iol11,sy_iol]>>  => <wire DIN[44] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLT_TILE @ [sx_iol11,sy_iol]>>  => <wire DIN[45] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLT_TILE @ [sx_iol11,sy_iol]>>  => <wire DIN[46] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLT_TILE @ [sx_iol11,sy_iol]>>  => <wire DIN[47] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>  => <wire DIN[48] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>  => <wire DIN[49] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>  => <wire DIN[50] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLTC_TILE @ [sx_iol12,sy_iol]>>  => <wire DIN[51] of <device *iob @[sx,sy]>>
      );

    int sx_bl = CRAM_CTRL_TILE_X * NUM_GRID_X;
    int sy_bl = CRAM_CTRL_TILE_Y * NUM_GRID_Y;

    int sx_ccs = CCS_TILE_X * NUM_GRID_X + 3;
    int sy_ccs = CCS_TILE_Y * NUM_GRID_Y;

    int sx_analog = ANALOG_2K_TILE_X * NUM_GRID_X + 3;
    int sy_analog = ANALOG_2K_TILE_Y * NUM_GRID_Y;

    int sx_srb = (tx+7) * NUM_GRID_X;
    int sy_srb = (ty-1) * NUM_GRID_Y;

    connect
      (
         <pin DATA of  <device IOB1_2K_TILE @[sx,sy]>>         => <wire DATA[1631:1626] of <device CRAM_CTRL_2K_TILE @ [sx_bl,sy_bl]>>,
         <pin DATAN of  <device IOB1_2K_TILE @[sx,sy]>>        => <wire DATAN[1631:1626] of <device CRAM_CTRL_2K_TILE @ [sx_bl,sy_bl]>>,
         <pin ADDR[202:0] of <device IOB1_2K_TILE @[sx,sy]>>   => <wire ADDR[202:0] of <device CRAM_CTRL_2K_TILE @ [sx_bl,sy_bl]>>,
         <pin ADDR[203] of <device IOB1_2K_TILE @[sx,sy]>>     => <wire ADDR[359] of <device CRAM_CTRL_2K_TILE @ [sx_bl,sy_bl]>>,
         <pin ADDR[359:204] of <device IOB1_2K_TILE @[sx,sy]>> => <wire ADDR[358:203] of <device CRAM_CTRL_2K_TILE @ [sx_bl,sy_bl]>>,
         <pin ICONST3U of <device IOB1_2K_TILE @[sx,sy]>>      => <wire ICONST_3U[1] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>,
         <pin MFG_TEST of <device IOB1_2K_TILE @[sx,sy]>>      => <wire MFG_TEST_O of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>,
         <pin DUMMY of <device IOB1_2K_TILE @[sx,sy]>>      => <wire DUMMY of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>,

         <pin DIFFIN_DYN_EN_N of <device IOB1_2K_TILE @[sx,sy]>>  => <wire S_A2 of <device SRB_TILE @ [sx_srb,sy_srb]>>,
         <pin DIFFOUT_DYN_EN_N of <device IOB1_2K_TILE @[sx,sy]>> => <wire S_D0 of <device SRB_TILE @ [sx_srb,sy_srb]>>,

          <pin VREF_IN of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>  => <wire VREF_TEST of <device IOB1_2K_TILE @[sx,sy]>>


      );

}//end of place_iobt_tile
/********************************************************************************
********************************************************************************/
function place_iobb_tile(unsigned int tx, ty, flag)
{
    unsigned int sx, sy; 
    sx = tx * NUM_GRID_X;
    sy = ty * NUM_GRID_Y;

    string strVar;

    int sx_bl = CRAM_CTRL_TILE_X * NUM_GRID_X;
    int sy_bl = CRAM_CTRL_TILE_Y * NUM_GRID_Y;

    int sx_ccs = CCS_TILE_X * NUM_GRID_X + 3;
    int sy_ccs = CCS_TILE_Y * NUM_GRID_Y;

    int sx_analog = ANALOG_2K_TILE_X * NUM_GRID_X + 3;
    int sy_analog = ANALOG_2K_TILE_Y * NUM_GRID_Y;

    if(flag==0)
    {
      sprintf(strVar,"ntDIN_%d_%d",sx,sy);
      &wire ntRef_ntDIN[15:0] = wire *strVar[15:0]                   /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

      sprintf(strVar,"ntTDO_INT_%d_%d",sx,sy);
      &wire ntRef_ntTDO_INT = wire *strVar;

      sprintf(strVar,"ntTCK_BUF_%d_%d",sx,sy);
      &wire ntRef_ntTCK_BUF = wire *strVar;

      sprintf(strVar,"ntVREF_TEST_%d_%d",sx,sy);
      &wire ntRef_ntVREF_TEST = wire *strVar                   /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

      sprintf(strVar, "IOB3_2K_TILE_%d_%d", sx, sy);
      device IOB3_2K_TILE *strVar
        port map(
                  DIN        => ntRef_ntDIN,
                  TCK_BUF    => ntRef_ntTCK_BUF,
                  TDO_INT    => ntRef_ntTDO_INT,
                  VREF_TEST     => ntRef_ntVREF_TEST
                )
        @([sx,sy]);

      connect
        (
          <pin ADDR[103] of <device IOB3_2K_TILE @[sx,sy]>> => <wire ADDR[358] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[102] of <device IOB3_2K_TILE @[sx,sy]>> => <wire ADDR[357] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[101] of <device IOB3_2K_TILE @[sx,sy]>> => <wire ADDR[356] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[100] of <device IOB3_2K_TILE @[sx,sy]>> => <wire ADDR[355] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[99] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[354] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[98] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[353] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[97] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[352] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[96] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[351] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[95] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[350] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[94] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[349] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[93] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[348] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[92] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[347] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[91] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[346] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[90] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[345] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[89] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[344] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[88] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[343] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[87] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[342] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[86] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[341] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[85] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[340] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[84] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[339] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[83] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[338] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[82] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[337] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[81] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[336] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[80] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[335] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[79] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[334] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[78] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[333] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[77] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[332] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[76] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[331] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[75] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[330] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[74] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[329] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[73] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[328] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[72] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[327] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[71] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[326] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[70] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[325] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[69] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[324] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[68] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[323] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[67] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[322] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[66] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[321] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[65] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[320] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[64] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[319] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[63] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[318] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[62] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[317] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[61] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[316] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[60] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[315] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[59] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[314] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[58] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[313] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[57] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[312] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[56] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[311] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[55] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[310] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[54] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[309] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[53] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[308] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[52] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[307] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[51] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[306] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[50] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[305] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[49] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[304] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[48] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[303] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[47] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[302] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[46] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[301] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[45] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[300] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[44] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[299] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[43] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[298] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[42] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[297] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[41] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[296] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[40] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[295] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[39] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[294] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[38] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[293] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[37] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[292] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[36] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[291] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[35] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[290] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[34] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[289] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[33] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[288] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[32] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[287] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[31] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[286] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[30] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[285] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[29] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[284] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[28] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[283] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[27] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[282] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[26] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[281] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[25] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[280] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[24] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[279] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[23] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[278] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[22] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[277] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[21] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[276] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[20] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[275] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[19] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[274] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[18] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[273] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[17] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[272] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[16] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[271] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[15] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[270] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[14] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[269] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[13] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[268] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[12] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[267] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[11] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[266] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[10] of <device IOB3_2K_TILE @[sx,sy]>>  => <wire ADDR[265] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[9] of <device IOB3_2K_TILE @[sx,sy]>>   => <wire ADDR[264] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[8] of <device IOB3_2K_TILE @[sx,sy]>>   => <wire ADDR[263] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[7] of <device IOB3_2K_TILE @[sx,sy]>>   => <wire ADDR[262] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[6] of <device IOB3_2K_TILE @[sx,sy]>>   => <wire ADDR[261] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[5] of <device IOB3_2K_TILE @[sx,sy]>>   => <wire ADDR[260] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[4] of <device IOB3_2K_TILE @[sx,sy]>>   => <wire ADDR[259] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[3] of <device IOB3_2K_TILE @[sx,sy]>>   => <wire ADDR[258] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[2] of <device IOB3_2K_TILE @[sx,sy]>>   => <wire ADDR[257] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[1] of <device IOB3_2K_TILE @[sx,sy]>>   => <wire ADDR[256] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[0] of <device IOB3_2K_TILE @[sx,sy]>>   => <wire ADDR[255] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>

        );

    int sx_srb = (tx+1) * NUM_GRID_X;
    int sy_srb = (ty+1) * NUM_GRID_Y;

    connect
      (
         <pin DIFFIN_DYN_EN_N of <device IOB3_2K_TILE @[sx,sy]>>  => <wire A_A0 of <device SRB_TILE @ [sx_srb,sy_srb]>>,
         <pin DIFFOUT_DYN_EN_N of <device IOB3_2K_TILE @[sx,sy]>> => <wire A_A1 of <device SRB_TILE @ [sx_srb,sy_srb]>>,
//         <pin IPOLY10U of <device IOB3_2K_TILE @[sx,sy]>>         => <wire IPOLY_10U[5] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>,
         <pin ICONST3U of <device IOB3_2K_TILE @[sx,sy]>>         => <wire ICONST_3U[3] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>
//         <pin VREF_IN[2] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>  => <wire VREF_TEST of <device IOB3_2K_TILE @[sx,sy]>>

      );

    }
    else if(flag==1)
    {
      sprintf(strVar,"ntDIN_%d_%d",sx,sy);
      &wire ntRef_ntDIN[15:0] = wire *strVar[15:0]                   /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

      sprintf(strVar,"ntGOUTEN_BUF_%d_%d",sx,sy);
      &wire ntRef_ntGOUTEN_BUF = wire *strVar;
  
      sprintf(strVar,"ntMODE1_BUF_%d_%d",sx,sy);
      &wire ntRef_ntMODE1_BUF = wire *strVar;
  
      sprintf(strVar,"ntMODE2_BUF_%d_%d",sx,sy);
      &wire ntRef_ntMODE2_BUF = wire *strVar;
  
      sprintf(strVar,"ntMODE3_BUF_%d_%d",sx,sy);
      &wire ntRef_ntMODE3_BUF = wire *strVar;
  
      sprintf(strVar,"ntS12_RST_BUF_%d_%d",sx,sy);
      &wire ntRef_ntS12_RST_BUF = wire *strVar;
  
      sprintf(strVar,"ntUPDATE_DR_BUF_%d_%d",sx,sy);
      &wire ntRef_ntUPDATE_DR_BUF = wire *strVar;
  
      sprintf(strVar,"ntSHIFT_DR_BUF_%d_%d",sx,sy);
      &wire ntRef_ntSHIFT_DR_BUF = wire *strVar;

      sprintf(strVar,"ntTCK_BUF_%d_%d",sx,sy);
      &wire ntRef_ntTCK_BUF = wire *strVar;

      sprintf(strVar,"ntTDO_INIT_%d_%d",sx,sy);
      &wire ntRef_ntTDO_INIT = wire *strVar;

      sprintf(strVar,"ntPOR_N_O_%d_%d",sx,sy);
      &wire ntRef_ntPOR_N_O = wire *strVar;

      sprintf(strVar,"ntVREF_TEST_%d_%d",sx,sy);
      &wire ntRef_ntVREF_TEST = wire *strVar                   /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

      sprintf(strVar, "IOB4_2K_TILE_%d_%d", sx, sy);
      device IOB4_2K_TILE *strVar
        port map(
                  DIN        => ntRef_ntDIN,
                  TCK_BUF    => ntRef_ntTCK_BUF,
                  TDO_INIT   => ntRef_ntTDO_INIT,
                  GOUTEN_BUF => ntRef_ntGOUTEN_BUF,
                  MODE1_BUF  => ntRef_ntMODE1_BUF,
                  MODE2_BUF  => ntRef_ntMODE2_BUF,
                  MODE3_BUF  => ntRef_ntMODE3_BUF,
                  S12_RST_BUF   => ntRef_ntS12_RST_BUF,
                  UPDATE_DR_BUF => ntRef_ntUPDATE_DR_BUF,
                  SHIFT_DR_BUF  => ntRef_ntSHIFT_DR_BUF,
                  POR_N_O       => ntRef_ntPOR_N_O,
                  VREF_TEST     => ntRef_ntVREF_TEST

                )
        @([sx,sy]);

      connect
        (
          <pin ADDR[72:0] of <device IOB4_2K_TILE @[sx,sy]>>   => <wire ADDR[202:130] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[73] of <device IOB4_2K_TILE @[sx,sy]>>     => <wire ADDR[359] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ADDR[125:74] of <device IOB4_2K_TILE @[sx,sy]>> => <wire ADDR[254:203] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,

//          <pin IPOLY10U of <device IOB4_2K_TILE @[sx,sy]>>         => <wire IPOLY_10U[6] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>,
          <pin ICONST3U of <device IOB4_2K_TILE @[sx,sy]>>         => <wire ICONST_3U[4] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>
//          <pin VREF_IN[3] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>  => <wire VREF_TEST of <device IOB4_2K_TILE @[sx,sy]>>

        );

    int sx_srb = tx * NUM_GRID_X;
    int sy_srb = (ty+1) * NUM_GRID_Y;

    connect
      (
         <pin DIFFIN_DYN_EN_N of <device IOB4_2K_TILE @[sx,sy]>>  => <wire A_A0 of <device SRB_TILE @ [sx_srb,sy_srb]>>,
         <pin DIFFOUT_DYN_EN_N of <device IOB4_2K_TILE @[sx,sy]>> => <wire A_A1 of <device SRB_TILE @ [sx_srb,sy_srb]>>

      );
    }
    else
    {
      sprintf(strVar,"ntDIN_%d_%d",sx,sy);
      &wire ntRef_ntDIN[19:0] = wire *strVar[19:0]                   /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

      sprintf(strVar,"ntTDO_INIT_%d_%d",sx,sy);
      &wire ntRef_ntTDO_INIT = wire *strVar;
  
      sprintf(strVar,"ntTCK_O_%d_%d",sx,sy);
      &wire ntRef_ntTCK_O = wire *strVar;
  
      sprintf(strVar,"ntGOUTEN_O_%d_%d",sx,sy);
      &wire ntRef_ntGOUTEN_O = wire *strVar;
  
      sprintf(strVar,"ntMODE1_O_%d_%d",sx,sy);
      &wire ntRef_ntMODE1_O = wire *strVar;
  
      sprintf(strVar,"ntMODE2_O_%d_%d",sx,sy);
      &wire ntRef_ntMODE2_O = wire *strVar;
  
      sprintf(strVar,"ntMODE3_O_%d_%d",sx,sy);
      &wire ntRef_ntMODE3_O = wire *strVar;
  
      sprintf(strVar,"ntS12_RST_O_%d_%d",sx,sy);
      &wire ntRef_ntS12_RST_O = wire *strVar;
  
      sprintf(strVar,"ntUPDATE_DR_O_%d_%d",sx,sy);
      &wire ntRef_ntUPDATE_DR_O = wire *strVar;
  
      sprintf(strVar,"ntSHIFT_DR_O_%d_%d",sx,sy);
      &wire ntRef_ntSHIFT_DR_O = wire *strVar;
  
      sprintf(strVar,"ntPOR_N_O_%d_%d",sx,sy);
      &wire ntRef_ntPOR_N_O = wire *strVar;

      sprintf(strVar,"ntVREF_TEST_%d_%d",sx,sy);
      &wire ntRef_ntVREF_TEST = wire *strVar                   /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

      sprintf(strVar, "IOB5_2K_TILE_%d_%d", sx, sy);
      device IOB5_2K_TILE *strVar
        port map(
                  DIN        => ntRef_ntDIN,
                  TCK_O      => ntRef_ntTCK_O,
                  TDO_INIT    => ntRef_ntTDO_INIT,
                  GOUTEN_O   => ntRef_ntGOUTEN_O,
                  MODE1_O    => ntRef_ntMODE1_O,
                  MODE2_O    => ntRef_ntMODE2_O,
                  MODE3_O    => ntRef_ntMODE3_O,
                  S12_RST_O  => ntRef_ntS12_RST_O,
                  UPDATE_DR_O => ntRef_ntUPDATE_DR_O,
                  SHIFT_DR_O  => ntRef_ntSHIFT_DR_O,
                  POR_N_O     => ntRef_ntPOR_N_O,
                  VREF_TEST     => ntRef_ntVREF_TEST
                )
        @([sx,sy]);

      connect
        (
          <pin ADDR of <device IOB5_2K_TILE @[sx,sy]>>             => <wire ADDR[129:0] of <device CRAM_CTRL_2K_TILE @[sx_bl,sy_bl]>>,
          <pin ICONST3U of <device IOB5_2K_TILE @[sx,sy]>>         => <wire ICONST_3U[5] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>
//          <pin VREF_IN[4] of <device ANALOG_2K_TILE @ [sx_analog,sy_analog]>>  => <wire VREF_TEST of <device IOB5_2K_TILE @[sx,sy]>>
        );

    int sx_srb = tx * NUM_GRID_X;
    int sy_srb = (ty+1) * NUM_GRID_Y;

    connect
      (
         <pin DIFFIN_DYN_EN_N of <device IOB5_2K_TILE @[sx,sy]>>  => <wire A_A0 of <device SRB_TILE @ [sx_srb,sy_srb]>>,
         <pin DIFFOUT_DYN_EN_N of <device IOB5_2K_TILE @[sx,sy]>> => <wire A_A1 of <device SRB_TILE @ [sx_srb,sy_srb]>>

      );
    }

    string iob = (flag==0) ? "IOB3_2K_TILE" : (flag==1) ? "IOB4_2K_TILE" : "IOB5_2K_TILE";

    connect
      (
         <pin DATA of  <device *iob @[sx,sy]>>  => <wire DATA[5:0] of <device CRAM_CTRL_2K_TILE @ [sx_bl,sy_bl]>>,
         <pin DATAN of  <device *iob @[sx,sy]>> => <wire DATAN[5:0] of <device CRAM_CTRL_2K_TILE @ [sx_bl,sy_bl]>>
      );

    int tx_iol0 = tx;
    int tx_iol1 = tx + 1;
    int tx_iol2 = (flag==1)? tx + 4 : tx + 2;
    int tx_iol3 = (flag==1)? tx + 5 : tx + 3;
    int tx_iol4 = tx + 4;

    int sx_iol0 = tx_iol0 * NUM_GRID_X + 3;
    int sx_iol1 = tx_iol1 * NUM_GRID_X + 3;
    int sx_iol2 = tx_iol2 * NUM_GRID_X + 3;
    int sx_iol3 = tx_iol3 * NUM_GRID_X + 3;
    int sx_iol4 = tx_iol4 * NUM_GRID_X + 3;

    int sy_iol = (ty+1)*NUM_GRID_Y;

    connect
      (
         <pin DO[0] of <device *iob @[sx,sy]>>  => (flag==2) ? <wire DQ_A of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                             : <wire DQ_A of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin DO[1] of <device *iob @[sx,sy]>>  => (flag==2) ? <wire DQ_B of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                             : <wire DQ_B of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin DO[2] of <device *iob @[sx,sy]>>  => (flag==2) ? <wire DQ_C of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                             : <wire DQ_C of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin DO[3] of <device *iob @[sx,sy]>>  => (flag==2) ? <wire DQ_D of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                             : <wire DQ_D of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin DO[4] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin DO[5] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin DO[6] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin DO[7] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin DO[8] of <device *iob @[sx,sy]>>  => <wire DQ_A of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin DO[9] of <device *iob @[sx,sy]>>  => <wire DQ_B of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin DO[10] of <device *iob @[sx,sy]>>  => <wire DQ_C of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin DO[11] of <device *iob @[sx,sy]>>  => <wire DQ_D of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin DO[12] of <device *iob @[sx,sy]>>  => (flag==0) ? <wire DQ_A of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                              : <wire DQ_A of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,
         <pin DO[13] of <device *iob @[sx,sy]>>  => (flag==0) ? <wire DQ_B of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                              : <wire DQ_B of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,
         <pin DO[14] of <device *iob @[sx,sy]>>  => (flag==0) ? <wire DQ_C of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                              : <wire DQ_C of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,
         <pin DO[15] of <device *iob @[sx,sy]>>  => (flag==0) ? <wire DQ_D of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                              : <wire DQ_D of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,

         <pin TS[0] of <device *iob @[sx,sy]>>  => (flag==2) ? <wire TQ_A of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                             : <wire TQ_A of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin TS[1] of <device *iob @[sx,sy]>>  => (flag==2) ? <wire TQ_B of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                             : <wire TQ_B of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin TS[2] of <device *iob @[sx,sy]>>  => (flag==2) ? <wire TQ_C of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                             : <wire TQ_C of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin TS[3] of <device *iob @[sx,sy]>>  => (flag==2) ? <wire TQ_D of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                             : <wire TQ_D of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin TS[4] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin TS[5] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin TS[6] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin TS[7] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin TS[8] of <device *iob @[sx,sy]>>  => <wire TQ_A of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin TS[9] of <device *iob @[sx,sy]>>  => <wire TQ_B of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin TS[10] of <device *iob @[sx,sy]>>  => <wire TQ_C of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin TS[11] of <device *iob @[sx,sy]>>  => <wire TQ_D of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin TS[12] of <device *iob @[sx,sy]>>  => (flag==0) ? <wire TQ_A of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                              : <wire TQ_A of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,
         <pin TS[13] of <device *iob @[sx,sy]>>  => (flag==0) ? <wire TQ_B of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                              : <wire TQ_B of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,
         <pin TS[14] of <device *iob @[sx,sy]>>  => (flag==0) ? <wire TQ_C of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                              : <wire TQ_C of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,
         <pin TS[15] of <device *iob @[sx,sy]>>  => (flag==0) ? <wire TQ_D of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                              : <wire TQ_D of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,

         <pin MIPI_SW_DYN[0] of <device *iob @[sx,sy]>> => (flag==2) ? <wire MIPI_SW_DYN_O_A of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                                     : <wire MIPI_SW_DYN_O_A of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin MIPI_SW_DYN[1] of <device *iob @[sx,sy]>> => (flag==2) ? <wire MIPI_SW_DYN_O_B of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                                     : <wire MIPI_SW_DYN_O_B of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin MIPI_SW_DYN[2] of <device *iob @[sx,sy]>> => (flag==2) ? <wire MIPI_SW_DYN_O_C of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                                     : <wire MIPI_SW_DYN_O_C of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin MIPI_SW_DYN[3] of <device *iob @[sx,sy]>> => (flag==2) ? <wire MIPI_SW_DYN_O_D of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                                     : <wire MIPI_SW_DYN_O_D of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin MIPI_SW_DYN[4] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin MIPI_SW_DYN[5] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin MIPI_SW_DYN[6] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin MIPI_SW_DYN[7] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin MIPI_SW_DYN[8] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin MIPI_SW_DYN[9] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin MIPI_SW_DYN[10] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin MIPI_SW_DYN[11] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin MIPI_SW_DYN[12] of <device *iob @[sx,sy]>> => (flag==0) ? <wire MIPI_SW_DYN_O_A of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                                      : <wire MIPI_SW_DYN_O_A of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,
         <pin MIPI_SW_DYN[13] of <device *iob @[sx,sy]>> => (flag==0) ? <wire MIPI_SW_DYN_O_B of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                                      : <wire MIPI_SW_DYN_O_B of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,
         <pin MIPI_SW_DYN[14] of <device *iob @[sx,sy]>> => (flag==0) ? <wire MIPI_SW_DYN_O_C of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                                      : <wire MIPI_SW_DYN_O_C of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,
         <pin MIPI_SW_DYN[15] of <device *iob @[sx,sy]>> => (flag==0) ? <wire MIPI_SW_DYN_O_D of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                                      : <wire MIPI_SW_DYN_O_D of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,

         <pin INBUF_DYN_DIS_N[0] of <device *iob @[sx,sy]>> => (flag==2) ? <wire INBUF_DYN_DIS_N_O_A of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                                     : <wire INBUF_DYN_DIS_N_O_A of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[1] of <device *iob @[sx,sy]>> => (flag==2) ? <wire INBUF_DYN_DIS_N_O_B of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                                     : <wire INBUF_DYN_DIS_N_O_B of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[2] of <device *iob @[sx,sy]>> => (flag==2) ? <wire INBUF_DYN_DIS_N_O_C of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                                     : <wire INBUF_DYN_DIS_N_O_C of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[3] of <device *iob @[sx,sy]>> => (flag==2) ? <wire INBUF_DYN_DIS_N_O_D of <device IOLBC_TILE @ [sx_iol0,sy_iol]>>
                                                                     : <wire INBUF_DYN_DIS_N_O_D of <device IOLB_TILE @ [sx_iol0,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[4] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[5] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[6] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[7] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLB_TILE @ [sx_iol1,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[8] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[9] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[10] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[11] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLB_TILE @ [sx_iol2,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[12] of <device *iob @[sx,sy]>> => (flag==0) ? <wire INBUF_DYN_DIS_N_O_A of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                                      : <wire INBUF_DYN_DIS_N_O_A of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[13] of <device *iob @[sx,sy]>> => (flag==0) ? <wire INBUF_DYN_DIS_N_O_B of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                                      : <wire INBUF_DYN_DIS_N_O_B of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[14] of <device *iob @[sx,sy]>> => (flag==0) ? <wire INBUF_DYN_DIS_N_O_C of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                                      : <wire INBUF_DYN_DIS_N_O_C of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,
         <pin INBUF_DYN_DIS_N[15] of <device *iob @[sx,sy]>> => (flag==0) ? <wire INBUF_DYN_DIS_N_O_D of <device IOLBC_TILE @ [sx_iol3,sy_iol]>>
                                                                      : <wire INBUF_DYN_DIS_N_O_D of <device IOLB_TILE @ [sx_iol3,sy_iol]>>,

         <pin DIN_A of <device IOLB_TILE @ [sx_iol1,sy_iol]>>  => <wire DIN[4] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLB_TILE @ [sx_iol1,sy_iol]>>  => <wire DIN[5] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLB_TILE @ [sx_iol1,sy_iol]>>  => <wire DIN[6] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLB_TILE @ [sx_iol1,sy_iol]>>  => <wire DIN[7] of <device *iob @[sx,sy]>>,
         <pin DIN_A of <device IOLB_TILE @ [sx_iol2,sy_iol]>>  => <wire DIN[8] of <device *iob @[sx,sy]>>,
         <pin DIN_B of <device IOLB_TILE @ [sx_iol2,sy_iol]>>  => <wire DIN[9] of <device *iob @[sx,sy]>>,
         <pin DIN_C of <device IOLB_TILE @ [sx_iol2,sy_iol]>>  => <wire DIN[10] of <device *iob @[sx,sy]>>,
         <pin DIN_D of <device IOLB_TILE @ [sx_iol2,sy_iol]>>  => <wire DIN[11] of <device *iob @[sx,sy]>>
      );

    string iol = (flag==2) ? "IOLBC_TILE" : "IOLB_TILE";
    connect
      (
        <pin DIN_A of <device *iol @ [sx_iol0,sy_iol]>>  => <wire DIN[0] of <device *iob @[sx,sy]>>,
        <pin DIN_B of <device *iol @ [sx_iol0,sy_iol]>>  => <wire DIN[1] of <device *iob @[sx,sy]>>,
        <pin DIN_C of <device *iol @ [sx_iol0,sy_iol]>>  => <wire DIN[2] of <device *iob @[sx,sy]>>,
        <pin DIN_D of <device *iol @ [sx_iol0,sy_iol]>>  => <wire DIN[3] of <device *iob @[sx,sy]>>
      );

    string iol1 = (flag==0) ? "IOLBC_TILE" : "IOLB_TILE";
    connect
      (
        <pin DIN_A of <device *iol1 @ [sx_iol3,sy_iol]>>  => <wire DIN[12] of <device *iob @[sx,sy]>>,
        <pin DIN_B of <device *iol1 @ [sx_iol3,sy_iol]>>  => <wire DIN[13] of <device *iob @[sx,sy]>>,
        <pin DIN_C of <device *iol1 @ [sx_iol3,sy_iol]>>  => <wire DIN[14] of <device *iob @[sx,sy]>>,
        <pin DIN_D of <device *iol1 @ [sx_iol3,sy_iol]>>  => <wire DIN[15] of <device *iob @[sx,sy]>>
      );

    if(flag==2)
    {
      connect
        (
          <pin DO[16] of <device *iob @[sx,sy]>>          => <wire DQ_A of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin DO[17] of <device *iob @[sx,sy]>>          => <wire DQ_B of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin DO[18] of <device *iob @[sx,sy]>>          => <wire DQ_C of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin DO[19] of <device *iob @[sx,sy]>>          => <wire DQ_D of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin TS[16] of <device *iob @[sx,sy]>>          => <wire TQ_A of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin TS[17] of <device *iob @[sx,sy]>>          => <wire TQ_B of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin TS[18] of <device *iob @[sx,sy]>>          => <wire TQ_C of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin TS[19] of <device *iob @[sx,sy]>>          => <wire TQ_D of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin MIPI_SW_DYN[16] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_A of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin MIPI_SW_DYN[17] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_B of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin MIPI_SW_DYN[18] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_C of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin MIPI_SW_DYN[19] of <device *iob @[sx,sy]>> => <wire MIPI_SW_DYN_O_D of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin INBUF_DYN_DIS_N[16] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_A of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin INBUF_DYN_DIS_N[17] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_B of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin INBUF_DYN_DIS_N[18] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_C of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin INBUF_DYN_DIS_N[19] of <device *iob @[sx,sy]>> => <wire INBUF_DYN_DIS_N_O_D of <device IOLB_TILE @ [sx_iol4,sy_iol]>>,
          <pin DIN_A of <device IOLB_TILE @ [sx_iol4,sy_iol]>>  => <wire DIN[16] of <device *iob @[sx,sy]>>,
          <pin DIN_B of <device IOLB_TILE @ [sx_iol4,sy_iol]>>  => <wire DIN[17] of <device *iob @[sx,sy]>>,
          <pin DIN_C of <device IOLB_TILE @ [sx_iol4,sy_iol]>>  => <wire DIN[18] of <device *iob @[sx,sy]>>,
          <pin DIN_D of <device IOLB_TILE @ [sx_iol4,sy_iol]>>  => <wire DIN[19] of <device *iob @[sx,sy]>>
        );
    }


}//end of place_iobb_tile
/********************************************************************************
********************************************************************************/
function place_analog_tile
(
    unsigned int tx,
    unsigned int ty, 
    unsigned int ty_ccs,
    unsigned int ty_pll
)
{   
    unsigned int sx, sy;
    
    sx = tx * NUM_GRID_X + 3;
    sy = ty * NUM_GRID_Y;
    
    string strVar;
    sprintf(strVar,"ntPOR_N_%d_%d",sx,sy);
    &wire ntRef_ntPOR_N = wire *strVar;

//    sprintf(strVar,"ntPOR_N_1P06_%d_%d",sx,sy);
//    &wire ntRef_ntPOR_N_1P06 = wire *strVar;

    sprintf(strVar,"ntPOR_OSC_N_%d_%d",sx,sy);
    &wire ntRef_ntPOR_OSC_N = wire *strVar;

    sprintf(strVar,"ntCLK_USER_O_%d_%d",sx,sy);
    &wire ntRef_ntCLK_USER_O = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntMFG_TEST_O_%d_%d",sx,sy);
    &wire ntRef_ntMFG_TEST_O = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y6AB_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y6AB = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y6CD_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y6CD = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y2_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y2 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Y3_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Y3 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Q0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Q0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Q1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Q1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Q2_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Q2 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_A_Q3_%d_%d",sx,sy);
    &wire ntRef_ntTEST_A_Q3 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y6AB_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y6AB = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y6CD_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y6CD = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y2_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y2 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Y3_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Y3 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Q0_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Q0 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Q1_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Q1 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Q2_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Q2 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntTEST_S_Q3_%d_%d",sx,sy);
    &wire ntRef_ntTEST_S_Q3 = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntBGSTABLE_%d_%d",sx,sy);
    &wire ntRef_ntBGSTABLE = wire *strVar       /*pragma PAP_ARC_ITC_TYPE = "LOCAL"*/;

    sprintf(strVar,"ntCLK_CFGM_%d_%d",sx,sy);
    &wire ntRef_ntCLK_CFGM = wire *strVar;

    sprintf(strVar,"ntCLK_EFLASH_%d_%d",sx,sy);
    &wire ntRef_ntCLK_EFLASH = wire *strVar;

    sprintf(strVar,"ntLDO_OUT_%d_%d",sx,sy);
    &wire ntRef_ntLDO_OUT = wire *strVar;

    sprintf(strVar,"ntCLK_CFGS_%d_%d",sx,sy);
    &wire ntRef_ntCLK_CFGS = wire *strVar;

    sprintf(strVar,"ntCLK_SED_%d_%d",sx,sy);
    &wire ntRef_ntCLK_SED = wire *strVar;

    sprintf(strVar,"ntIPOLY_10U_%d_%d",sx,sy);
    &wire ntRef_ntIPOLY_10U[13:0] = wire *strVar[13:0];

    sprintf(strVar,"ntICONST_3U_%d_%d",sx,sy);
    &wire ntRef_ntICONST_3U[12:0] = wire *strVar[12:0];

    sprintf(strVar,"ntVBG_0P75V_%d_%d",sx,sy);
    &wire ntRef_ntVBG_0P75V = wire *strVar;

    sprintf(strVar,"ntVBG_0P5V_%d_%d",sx,sy);
    &wire ntRef_ntVBG_0P5V = wire *strVar;

    sprintf(strVar,"ntDUMMY_%d_%d",sx,sy);
    &wire ntRef_ntDUMMY = wire *strVar;

    sprintf(strVar,"ntTIEHI_%d_%d",sx,sy);
    &wire ntRef_ntTIEHI = wire *strVar;


    sprintf(strVar, "ANALOG_2K_TILE_%d_%d", sx, sy);
      device ANALOG_2K_TILE *strVar
        port map(
                  POR_N         => ntRef_ntPOR_N,
//                  POR_N_1P06    => ntRef_ntPOR_N_1P06,
                  CLK_USER_O    => ntRef_ntCLK_USER_O,
                  MFG_TEST_O    => ntRef_ntMFG_TEST_O,
                  CLK_CFGM      => ntRef_ntCLK_CFGM,
                  CLK_CFGS      => ntRef_ntCLK_CFGS,
                  CLK_SED       => ntRef_ntCLK_SED,
                  CLK_EFLASH    => ntRef_ntCLK_EFLASH,
                  BGSTABLE      => ntRef_ntBGSTABLE,

                  IPOLY_10U     => ntRef_ntIPOLY_10U,
                  ICONST_3U     => ntRef_ntICONST_3U,
                  VBG_0P75V     => ntRef_ntVBG_0P75V,
                  VBG_0P5V      => ntRef_ntVBG_0P5V,
                  DUMMY         => ntRef_ntDUMMY,
                  LDO_OUT       => ntRef_ntLDO_OUT,

                  TEST_A_Y0       => ntRef_ntTEST_A_Y0,
                  TEST_A_Y1       => ntRef_ntTEST_A_Y1,
                  TEST_A_Y2       => ntRef_ntTEST_A_Y2,
                  TEST_A_Y3       => ntRef_ntTEST_A_Y3,
                  TEST_A_Q0       => ntRef_ntTEST_A_Q0,
                  TEST_A_Q1       => ntRef_ntTEST_A_Q1,
                  TEST_A_Q2       => ntRef_ntTEST_A_Q2,
                  TEST_A_Q3       => ntRef_ntTEST_A_Q3,
                  TEST_A_Y6AB     => ntRef_ntTEST_A_Y6AB,
                  TEST_A_Y6CD     => ntRef_ntTEST_A_Y6CD,
                  TEST_S_Y0       => ntRef_ntTEST_S_Y0,
                  TEST_S_Y1       => ntRef_ntTEST_S_Y1,
                  TEST_S_Y2       => ntRef_ntTEST_S_Y2,
                  TEST_S_Y3       => ntRef_ntTEST_S_Y3,
                  TEST_S_Q0       => ntRef_ntTEST_S_Q0,
                  TEST_S_Q1       => ntRef_ntTEST_S_Q1,
                  TEST_S_Q2       => ntRef_ntTEST_S_Q2,
                  TEST_S_Q3       => ntRef_ntTEST_S_Q3,
                  TEST_S_Y6AB     => ntRef_ntTEST_S_Y6AB,
                  TEST_S_Y6CD     => ntRef_ntTEST_S_Y6CD,

                  TIEHI           => ntRef_ntTIEHI
                )
        @([sx,sy]);  

    int sy_ccs = ty_ccs * NUM_GRID_Y;
    int sy_pll = ty_pll * NUM_GRID_Y;

    connect
      (
        <pin NM_DATA[19] of <device ANALOG_2K_TILE @[sx,sy]>>    => <wire JRTI of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[18] of <device ANALOG_2K_TILE @[sx,sy]>>    => <wire CAPTUREDR of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[17] of <device ANALOG_2K_TILE @[sx,sy]>>    => <wire FLG_USER1 of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[16] of <device ANALOG_2K_TILE @[sx,sy]>>    => <wire CLOCKDR1 of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[15] of <device ANALOG_2K_TILE @[sx,sy]>>    => <wire FLG_USER2 of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[14] of <device ANALOG_2K_TILE @[sx,sy]>>    => <wire CLOCKDR2 of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[13] of <device ANALOG_2K_TILE @[sx,sy]>>    => <wire UID_DOUT of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[12] of <device ANALOG_2K_TILE @[sx,sy]>>    => <wire PCTLR_STOP of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[11] of <device ANALOG_2K_TILE @[sx,sy]>>    => <wire PCTLR_STDBY of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[10] of <device ANALOG_2K_TILE @[sx,sy]>>    => <wire PCTLR_STDBY_FLG of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[9] of <device ANALOG_2K_TILE @[sx,sy]>>     => <wire WAKEUP_OVER_N of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[8] of <device ANALOG_2K_TILE @[sx,sy]>>     => <wire PRDATA[7] of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[7] of <device ANALOG_2K_TILE @[sx,sy]>>     => <wire PRDATA[6] of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[6] of <device ANALOG_2K_TILE @[sx,sy]>>     => <wire PRDATA[5] of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[5] of <device ANALOG_2K_TILE @[sx,sy]>>     => <wire PRDATA[4] of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[4] of <device ANALOG_2K_TILE @[sx,sy]>>     => <wire PRDATA[3] of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[3] of <device ANALOG_2K_TILE @[sx,sy]>>     => <wire PRDATA[2] of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[2] of <device ANALOG_2K_TILE @[sx,sy]>>     => <wire PRDATA[1] of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[1] of <device ANALOG_2K_TILE @[sx,sy]>>     => <wire PRDATA[0] of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin NM_DATA[0] of <device ANALOG_2K_TILE @[sx,sy]>>     => <wire PREADY of <device CCS_TILE @[sx,sy_ccs]>>,

        <pin FREQ_TRIM[4:0] of <device ANALOG_2K_TILE @[sx,sy]>>      => <wire FREQ_TRIM of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin TRIM_ICONST of <device ANALOG_2K_TILE @[sx,sy]>>    => <wire TRIM_ICONST of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin TRIM_VREF1 of <device ANALOG_2K_TILE @[sx,sy]>>     => <wire TRIM_VREF1 of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin TRIM_VREF2 of <device ANALOG_2K_TILE @[sx,sy]>>     => <wire TRIM_VREF2 of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin TRIM_LDO_VREF of <device ANALOG_2K_TILE @[sx,sy]>>  => <wire TRIM_LDO_VREF of <device CCS_TILE @[sx,sy_ccs]>>,

        <pin CLK_CFGM_DIV of <device ANALOG_2K_TILE @[sx,sy]>>    => <wire OSCFSEL of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin CLK_SED_DIV of <device ANALOG_2K_TILE @[sx,sy]>>     => <wire OSCFSEL_RBCRC of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin CFGM_RATIO_FLAG of <device ANALOG_2K_TILE @[sx,sy]>> => <wire OSC_TR of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin SED_RATIO_FLAG of <device ANALOG_2K_TILE @[sx,sy]>>  => <wire OSC_TR_RBCRC of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin CFGM_DIV_EN of <device ANALOG_2K_TILE @[sx,sy]>>     => <wire MCLK_EN of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin SED_DIV_EN of <device ANALOG_2K_TILE @[sx,sy]>>      => <wire RBCRC_CLK_EN of <device CCS_TILE @[sx,sy_ccs]>>,

        <pin MFG_POR_OFF of <device ANALOG_2K_TILE @[sx,sy]>>        => <wire PCTLR_POR_OFF of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin BGOFF of <device ANALOG_2K_TILE @[sx,sy]>>              => <wire PCTLR_BG_OFF of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin SEL_VREF of <device ANALOG_2K_TILE @[sx,sy]>>           => <wire TIEHI of <device ANALOG_2K_TILE @[sx,sy]>>,
        <pin OSC_EN of <device ANALOG_2K_TILE @[sx,sy]>>             => <wire OSC_EN of <device CCS_TILE @[sx,sy_ccs]>>,
        <pin MFG_SRAM_RETENTION of <device ANALOG_2K_TILE @[sx,sy]>> => <wire MFG_SRAM_RETENTION of <device CCS_TILE @[sx,sy_ccs]>>,

 //       <pin STDBY of <device ANALOG_2K_TILE @[sx,sy]>>         => <wire OSC_OFF of <device CCS_TILE @[sx,sy_ccs]>>,

        <pin PCTLR_BG_STABLE of <device CCS_TILE @[sx,sy_ccs]>>  => <wire BGSTABLE of <device ANALOG_2K_TILE @[sx,sy]>>,
        <pin RBCRC_CLK of <device CCS_TILE @[sx,sy_ccs]>>        => <wire CLK_SED of <device ANALOG_2K_TILE @[sx,sy]>>,
        <pin MCLK of <device CCS_TILE @[sx,sy_ccs]>>             => <wire CLK_CFGM of <device ANALOG_2K_TILE @[sx,sy]>>,
        <pin CLK of <device CCS_TILE @[sx,sy_ccs]>>              => <wire CLK_CFGS of <device ANALOG_2K_TILE @[sx,sy]>>,
        <pin EFB_PCLK of <device CCS_TILE @[sx,sy_ccs]>>         => <wire CLK_EFLASH of <device ANALOG_2K_TILE @[sx,sy]>>,
        <pin POR_N of <device CCS_TILE @[sx,sy_ccs]>>            => <wire POR_N of <device ANALOG_2K_TILE @[sx,sy]>>,
//        <pin POR1P06_N of <device CCS_TILE @[sx,sy_ccs]>>        => <wire POR_N_1P06 of <device ANALOG_2K_TILE @[sx,sy]>>,
        <pin EFB_IREF of <device CCS_TILE @[sx,sy_ccs]>>         => <wire ICONST_3U[11] of <device ANALOG_2K_TILE @[sx,sy]>>,
        <pin EFB_VREF of <device CCS_TILE @[sx,sy_ccs]>>         => <wire VBG_0P75V of <device ANALOG_2K_TILE @[sx,sy]>>,

        <pin PLL_LDO_I[0] of <device ANALOG_2K_TILE @[sx,sy]>>   => <wire LDO_TEST_OUT of <device PLL_TILE @[sx,sy_pll]>>,
        <pin PLL_LDO_I[1] of <device ANALOG_2K_TILE @[sx,sy]>>   => <wire TIEHI of <device  ANALOG_2K_TILE @[sx,sy]>>,
        <pin IPOLY10U[1:0] of <device PLL_TILE @[sx,sy_pll]>>    => <wire IPOLY_10U[9:8] of <device ANALOG_2K_TILE @[sx,sy]>>,
        <pin IPOLY10U[2] of <device PLL_TILE @[sx,sy_pll]>>      => <wire IPOLY_10U[10] of <device ANALOG_2K_TILE @[sx,sy]>>
      );

    STRUCT inc_spec_ANALOG incVar;
    string pin_SRB;
    string pin_logic_device;
    string attribute_IO;
    string dir_srb;
    int loc_SRB;
    int sy_SRB;

    foreach incVar(inc_ANALOG_SRB_spec)
    {
        pin_SRB = incVar.port_name_SRB;
        pin_logic_device = incVar.port_name_device;
        attribute_IO = incVar.attribute_IO;
        loc_SRB = incVar.loc_SRB;
        dir_srb = incVar.dir_SRB;
       
        if(!loc_SRB)
        {
          sy_SRB = sy;
        }
        else if(dir_srb=="up")
        {
          sy_SRB = sy + loc_SRB*NUM_GRID_Y; 
        }
        else if(dir_srb=="dn")
        {
          sy_SRB = sy - loc_SRB*NUM_GRID_Y; 
        }

        
        if(attribute_IO =="I")
        { 
          
           connect(<pin *pin_logic_device of <device ANALOG_2K_TILE @[sx,sy]>> => <wire *pin_SRB of <device SRB_TILE@[sx-3,sy_SRB]>>);
        }
        else
        {
          connect(<pin *pin_SRB of<device SRB_TILE@[sx-3,sy_SRB]>> => <wire *pin_logic_device of <device ANALOG_2K_TILE @[sx,sy]>>); 
        }
    }   


}//end of place_analog_tile
/********************************************************************************
********************************************************************************/
function place_idcode_tile
(
    unsigned int tx,
    unsigned int ty,
    unsigned int tx_ccs,
    unsigned int ty_ccs
)
{   
    unsigned int sx, sy;
    
    sx = tx * NUM_GRID_X;
    sy = ty * NUM_GRID_Y;
    
    string strVar;
    sprintf(strVar,"ntIDCODE_H12_%d_%d",sx,sy);
    &wire ntRef_ntIDCODE_H12[11:0] = wire *strVar[11:0];

    sprintf(strVar,"ntIDCODE_L18_%d_%d",sx,sy);
    &wire ntRef_ntIDCODE_L18[17:0] = wire *strVar[17:0];

    sprintf(strVar,"ntDRM_COLUMN_NUM_%d_%d",sx,sy);
    &wire ntRef_ntDRM_COLUMN_NUM[7:0] = wire *strVar[7:0];


    sprintf(strVar, "IDCODE_2K_TILE_%d_%d", sx, sy);
      device IDCODE_2K_TILE *strVar
        port map(
                  IDCODE_H12     => ntRef_ntIDCODE_H12,
                  IDCODE_L18     => ntRef_ntIDCODE_L18,
                  DRM_COLUMN_NUM => ntRef_ntDRM_COLUMN_NUM
                )
        @([sx,sy]);  

    int sx_ccs = tx_ccs * NUM_GRID_X + 3;
    int sy_ccs = ty_ccs * NUM_GRID_Y;
    connect
      (
        <pin IDCODE_H12 of <device CCS_TILE @[sx_ccs,sy_ccs]>>     => <wire IDCODE_H12 of <device IDCODE_2K_TILE @[sx,sy]>>,
        <pin IDCODE_L18 of <device CCS_TILE @[sx_ccs,sy_ccs]>>     => <wire IDCODE_L18 of <device IDCODE_2K_TILE @[sx,sy]>>,
        <pin DRM_COLUMN_NUM of <device CCS_TILE @[sx_ccs,sy_ccs]>> => <wire DRM_COLUMN_NUM of <device IDCODE_2K_TILE @[sx,sy]>>
      );

}//end of place_idcode_tile
/********************************************************************************
********************************************************************************/
function place_esd_tile
(
    unsigned int tx,
    unsigned int ty,
    unsigned int tx_ccs,
    unsigned int ty_ccs,
    unsigned int tx_iob0,
    unsigned int ty_iob0,
    unsigned int tx_analog,
    unsigned int ty_analog
)
{   
    unsigned int sx, sy;
    
    sx = tx * NUM_GRID_X;
    sy = ty * NUM_GRID_Y;
    
    string strVar;
    sprintf(strVar,"ntTP_%d_%d",sx,sy);
    &wire ntRef_ntTP = wire *strVar;

    sprintf(strVar,"ntCP_EN_%d_%d",sx,sy);
    &wire ntRef_ntCP_EN = wire *strVar;


    sprintf(strVar, "ESD_2K_TILE_%d_%d", sx, sy);
      device ESD_2K_TILE *strVar
        port map(
                  TP     => ntRef_ntTP,
                  CP_EN  => ntRef_ntCP_EN
                )
        @([sx,sy]);  

    int sx_ccs = tx_ccs * NUM_GRID_X + 3;
    int sy_ccs = ty_ccs * NUM_GRID_Y;

    int sx_analog = tx_analog * NUM_GRID_X + 3;
    int sy_analog = ty_analog * NUM_GRID_Y;

    int sx_iob0 = tx_iob0 * NUM_GRID_X;
    int sy_iob0 = ty_iob0 * NUM_GRID_Y;


    connect
      (
        <pin CLK of <device ESD_2K_TILE @[sx,sy]>>             => <wire CLK_CFGM of <device ANALOG_2K_TILE @[sx_analog,sy_analog]>>,
        <pin VREF_BG of <device ESD_2K_TILE @[sx,sy]>>         => <wire VBG_0P75V of <device ANALOG_2K_TILE @[sx_analog,sy_analog]>>,
        <pin ICONST of <device ESD_2K_TILE @[sx,sy]>>          => <wire ICONST_3U[10] of <device ANALOG_2K_TILE @[sx_analog,sy_analog]>>,
        <pin ICONST_BG of <device ESD_2K_TILE @[sx,sy]>>       => <wire ICONST_3U[9] of <device ANALOG_2K_TILE @[sx_analog,sy_analog]>>,
        <pin LDO_OUT of <device ESD_2K_TILE @[sx,sy]>>         => <wire LDO_OUT of <device ANALOG_2K_TILE @[sx_analog,sy_analog]>>,

        <pin SIO_VDDIO_DET_N of <device ESD_2K_TILE @[sx,sy]>> => <wire SIO_VDDIO_DET_N_T of <device IOB0_2K_TILE @[sx_iob0,sy_iob0]>>,
        <pin MFG_TRIM_BIT of <device ESD_2K_TILE @[sx,sy]>>    => <wire MFG_TRIM_BIT of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin VNEG of <device ESD_2K_TILE @[sx,sy]>>            => <wire EFB_TP_BIAS of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
        <pin CP_DIS of <device ESD_2K_TILE @[sx,sy]>>          => <wire CP_SD of <device CCS_TILE @[sx_ccs,sy_ccs]>>,

        <pin EFB_TP of <device CCS_TILE @[sx_ccs,sy_ccs]>>     => <wire TP of <device ESD_2K_TILE @[sx,sy]>>,
        <pin EFB_EN of <device CCS_TILE @[sx_ccs,sy_ccs]>>     => <wire CP_EN of <device ESD_2K_TILE @[sx,sy]>>
      );

}//end of place_idcode_tile



}; // end of package pgc2k_funcs_place
