use pgc_defs;

package pgc7km_funcs_connect_io
{
/********************************************************************************
********************************************************************************/
function connect_pad_lrt(unsigned int tx,ty)
{
    unsigned int sx, sy; 
    sx = tx * NUM_GRID_X;
    sy = ty * NUM_GRID_Y;

    string bank = (ty!=1) ? "B1" : (tx==0) ? "B0" : "B2";

    string strVar;
    sprintf(strVar,"nt%s_PAD0",bank);
    &wire ntRef_ntPAD0 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD1",bank);
    &wire ntRef_ntPAD1 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD2",bank);
    &wire ntRef_ntPAD2 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD3",bank);
    &wire ntRef_ntPAD3 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD4",bank);
    &wire ntRef_ntPAD4 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD5",bank);
    &wire ntRef_ntPAD5 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD6",bank);
    &wire ntRef_ntPAD6 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD7",bank);
    &wire ntRef_ntPAD7 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD8",bank);
    &wire ntRef_ntPAD8 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD9",bank);
    &wire ntRef_ntPAD9 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD10",bank);
    &wire ntRef_ntPAD10 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD11",bank);
    &wire ntRef_ntPAD11 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD12",bank);
    &wire ntRef_ntPAD12 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD13",bank);
    &wire ntRef_ntPAD13 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD14",bank);
    &wire ntRef_ntPAD14 = <wire *strVar>;
    
    sprintf(strVar,"nt%s_PAD15",bank);
    &wire ntRef_ntPAD15 = <wire *strVar>;
    
   
    string pin_iob = (ty!=1) ? "PAD_BK1" : (tx==0) ? "PAD_BK0" : "PAD_BK2";
    string iob = (ty!=1) ? "IOB1_7KM_TILE" : (tx==0) ? "IOB0_7KM_TILE" : "IOB2_7KM_TILE";

    connect
      (
       <pin *pin_iob[0] of <device *iob @[sx,sy]>> => ntRef_ntPAD0,
       <pin *pin_iob[1] of <device *iob @[sx,sy]>> => ntRef_ntPAD1,
       <pin *pin_iob[2] of <device *iob @[sx,sy]>> => ntRef_ntPAD2,
       <pin *pin_iob[3] of <device *iob @[sx,sy]>> => ntRef_ntPAD3,
       <pin *pin_iob[4] of <device *iob @[sx,sy]>> => ntRef_ntPAD4,
       <pin *pin_iob[5] of <device *iob @[sx,sy]>> => ntRef_ntPAD5,
       <pin *pin_iob[6] of <device *iob @[sx,sy]>> => ntRef_ntPAD6,
       <pin *pin_iob[7] of <device *iob @[sx,sy]>> => ntRef_ntPAD7,
       <pin *pin_iob[8] of <device *iob @[sx,sy]>> => ntRef_ntPAD8,
       <pin *pin_iob[9] of <device *iob @[sx,sy]>> => ntRef_ntPAD9,
       <pin *pin_iob[10] of <device *iob @[sx,sy]>> => ntRef_ntPAD10,
       <pin *pin_iob[11] of <device *iob @[sx,sy]>> => ntRef_ntPAD11,
       <pin *pin_iob[12] of <device *iob @[sx,sy]>> => ntRef_ntPAD12,
       <pin *pin_iob[13] of <device *iob @[sx,sy]>> => ntRef_ntPAD13,
       <pin *pin_iob[14] of <device *iob @[sx,sy]>> => ntRef_ntPAD14,
       <pin *pin_iob[15] of <device *iob @[sx,sy]>> => ntRef_ntPAD15

    )

    if(tx==0 || ty==0)
    {
        sprintf(strVar,"nt%s_PAD16",bank);
        &wire ntRef_ntPAD16 = <wire *strVar>;

        sprintf(strVar,"nt%s_PAD17",bank);
        &wire ntRef_ntPAD17 = <wire *strVar>;
        
        sprintf(strVar,"nt%s_PAD18",bank);
        &wire ntRef_ntPAD18 = <wire *strVar>;
        
        sprintf(strVar,"nt%s_PAD19",bank);
        &wire ntRef_ntPAD19 = <wire *strVar>;
        
        sprintf(strVar,"nt%s_PAD20",bank);
        &wire ntRef_ntPAD20 = <wire *strVar>;

        connect
        (
             <pin *pin_iob[16] of <device *iob @[sx,sy]>> => ntRef_ntPAD16,
             <pin *pin_iob[17] of <device *iob @[sx,sy]>> => ntRef_ntPAD17,
             <pin *pin_iob[18] of <device *iob @[sx,sy]>> => ntRef_ntPAD18,
             <pin *pin_iob[19] of <device *iob @[sx,sy]>> => ntRef_ntPAD19
        );
    }

}

}//end of package pgc7km_funcs_connect_io
