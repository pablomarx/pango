use pgc_defs;
//use pgc_IOB_TILES_input_inc,pgc_WLSR2_input_inc,pgc_PLL_input_inc;
use pgc_USCM_input_inc,pgc_IOCK_input_inc,pgc_PLL_input_inc;
use pgc_CLKDLYT_input_inc,pgc_CLKDLYB_input_inc;


package pgc_funcs_connect_clk
{

/****************************************************************************************************
*****************************************************************************************************/
function connect_USCM_input()
{
      STRUCT inc_spec_USCM_input incVar;
      int tx,ty;
      int tx_con,ty_con;
      string pin_uscm;
      string pin_con;
      string device_con;
      int sx,sy;   
      unsigned int temp_ty;

      int sx_con,sy_con;

      foreach incVar(inc_USCM_input_spec)
      {        
        tx = incVar.tx_uscm;
        ty = incVar.ty_uscm;
        sx = tx * NUM_GRID_X;
        sy = ty * NUM_GRID_Y;


        pin_uscm = incVar.port_name_uscm;
        pin_con = incVar.port_name_con;

        if(pin_con!="TBD")
        {
            device_con = incVar.device_name_con;
            tx_con = incVar.tx_con;
            ty_con = incVar.ty_con;
            sx_con = ((incVar.device_name_con=="USCM_TILE")||(incVar.device_name_con=="CKEB2_TILE")) ? tx_con*NUM_GRID_X : tx_con*NUM_GRID_X+3;
            sy_con = ty_con * NUM_GRID_Y;

            connect
              (
                <pin *pin_uscm of <device USCM_TILE @ [sx,sy]>> => <wire *pin_con of <device *device_con @ [sx_con,sy_con]>>
              );
        }
      }    

}//end of function connect_USCM_input
/****************************************************************************************************
*****************************************************************************************************/
function connect_PLL_input()
{
      STRUCT inc_spec_PLL_input incVar;
      int tx,ty;
      int tx_con,ty_con;
      string pin_pll;
      string pin_con;
      string device_con;
      int sx,sy;   
      unsigned int temp_ty;

      int sx_con,sy_con;

      foreach incVar(inc_PLL_input_spec)
      {        
        tx = incVar.tx_pll;
        ty = incVar.ty_pll;
        sx = tx * NUM_GRID_X + 3;
        sy = ty * NUM_GRID_Y;

        pin_pll = incVar.port_name_pll;
        pin_con = incVar.port_name_con;

        if(pin_con!="TBD")
        {
            device_con = incVar.device_name_con;
            tx_con = incVar.tx_con;
            ty_con = incVar.ty_con;
            sx_con = ((incVar.device_name_con=="SRB_TILE")||(incVar.device_name_con=="USCM_TILE")) ? tx_con*NUM_GRID_X : tx_con * NUM_GRID_X + 3;
            sy_con = ty_con * NUM_GRID_Y;

            connect
              (
                <pin *pin_pll of <device PLL_TILE @ [sx,sy]>> => <wire *pin_con of <device *device_con @ [sx_con,sy_con]>>
              );
        }
      }    

}//end of function connect_PLL_input
/****************************************************************************************************
*****************************************************************************************************/
function connect_CLKDLYB_input()
{
      STRUCT inc_spec_CLKDLYB_input incVar;
      int tx,ty;
      int tx_con,ty_con;
      string pin_clkdlyb;
      string pin_con;
      string device_con;
      int sx,sy;   
      unsigned int temp_ty;

      int sx_con,sy_con;

      foreach incVar(inc_CLKDLYB_input_spec)
      {        
        tx = incVar.tx;
        ty = incVar.ty;
        sx = tx * NUM_GRID_X;
        sy = ty * NUM_GRID_Y;

        pin_clkdlyb = incVar.port_name;
        pin_con = incVar.port_name_con;

        if(pin_con!="TBD")
        {
            device_con = incVar.device_name_con;
            tx_con = incVar.tx_con;
            ty_con = incVar.ty_con;
            sx_con = (incVar.device_name_con=="SRB_TILE") ? tx_con*NUM_GRID_X : tx_con * NUM_GRID_X + 3;
            sy_con = ty_con * NUM_GRID_Y;

            connect
              (
                <pin *pin_clkdlyb of <device CLKDLYB_TILE @ [sx,sy]>> => <wire *pin_con of <device *device_con @ [sx_con,sy_con]>>
              );
        }
      }    

}//end of function connect_CLKDLYB_input
/****************************************************************************************************
*****************************************************************************************************/
function connect_CLKDLYT_input()
{
      STRUCT inc_spec_CLKDLYT_input incVar;
      int tx,ty;
      int tx_con,ty_con;
      string pin_clkdlyt;
      string pin_con;
      string device_con;
      int sx,sy;   
      unsigned int temp_ty;

      int sx_con,sy_con;

      foreach incVar(inc_CLKDLYT_input_spec)
      {        
        tx = incVar.tx;
        ty = incVar.ty;
        sx = tx * NUM_GRID_X;
        sy = ty * NUM_GRID_Y;

        pin_clkdlyt = incVar.port_name;
        pin_con = incVar.port_name_con;

        if(pin_con!="TBD")
        {
            device_con = incVar.device_name_con;
            tx_con = incVar.tx_con;
            ty_con = incVar.ty_con;
            sx_con = (incVar.device_name_con=="SRB_TILE") ? tx_con*NUM_GRID_X : tx_con * NUM_GRID_X + 3;
            sy_con = ty_con * NUM_GRID_Y;

            connect
              (
                <pin *pin_clkdlyt of <device CLKDLYT_TILE @ [sx,sy]>> => <wire *pin_con of <device *device_con @ [sx_con,sy_con]>>
              );
        }
      }    

}//end of function connect_CLKDLYT_input


/****************************************************************************************************
*****************************************************************************************************/
function connect_IOLCLK_input
(
    int tx,
    int ty, 
    int ty_u,
    int ty_d,
    int ty_iock
)
{
    string iol = (tx==1) ? "IOLL_TILE" : "IOLR_TILE";
    int sx = tx * NUM_GRID_X + 3;
    int sy = ty * NUM_GRID_Y;
    int sy_iock = ty_iock * NUM_GRID_Y;
    connect
      (
        <pin CLK_IN of <device *iol@[sx,sy]>> => (ty>=ty_u) ? <wire CLK_IOL_UU of <device IOCK_TILE @[sx,sy_iock]>> :
                                                 (ty<=ty_d) ? <wire CLK_IOL_DD of <device IOCK_TILE @[sx,sy_iock]>> :
                                                 ((ty<ty_u)&&(ty>ty_iock)) ? <wire CLK_IOL_UD of <device IOCK_TILE @[sx,sy_iock]>> :
                                                                             <wire CLK_IOL_DU of <device IOCK_TILE @[sx,sy_iock]>>
      );

    

}//end of function connect_IOCLK_input
/****************************************************************************************************
*****************************************************************************************************/
function connect_DLLCLK_input
(
    int tx,
    int ty, 
    int ty_iock
)
{

    int sx = tx * NUM_GRID_X + 3;
    int sy = ty * NUM_GRID_Y;
    int sy_iock = ty_iock * NUM_GRID_Y;
    connect
      (
        <pin CLK_IO of <device DLL_TILE@[sx,sy]>> => (ty>ty_iock) ? <wire CLK_IOL_UU of <device IOCK_TILE @[sx,sy_iock]>>
                                                                  : <wire CLK_IOL_DD of <device IOCK_TILE @[sx,sy_iock]>>
      );

    

}//end of function connect_IOCLK_input

/****************************************************************************************************
*****************************************************************************************************/
function connect_iock_input()
{
      STRUCT inc_spec_IOCK_input incVar;
      int tx,ty;
      int tx_con,ty_con;
      string pin_iock;
      string pin_con;
      string device_con;
      int sx,sy;   
      unsigned int temp_ty;

      int sx_con,sy_con;

      foreach incVar(inc_IOCK_input_spec)
      {        
        tx = incVar.tx;
        ty = incVar.ty;
        sx = tx * NUM_GRID_X + 3;
        sy = ty * NUM_GRID_Y;


        pin_iock = incVar.port_name;
        pin_con = incVar.port_name_con;

        if(pin_con!="TBD")
        {
            device_con = incVar.device_name_con;
            tx_con = incVar.tx_con;
            ty_con = incVar.ty_con;
            sx_con = ((incVar.device_name_con=="USCM_TILE")||(incVar.device_name_con=="CKEB2_TILE")) ? tx_con*NUM_GRID_X : tx_con*NUM_GRID_X+3;
            sy_con = ty_con * NUM_GRID_Y;

            connect
              (
                <pin *pin_iock of <device IOCK_TILE @ [sx,sy]>> => <wire *pin_con of <device *device_con @ [sx_con,sy_con]>>
              );
        }
      }  
}
/****************************************************************************************************
*****************************************************************************************************/
function connect_CKEB_input
(
    unsigned int tx,
    unsigned int ty,
    unsigned int tx_ckeb2l,
    unsigned int tx_ckeb2r,
    unsigned int tx_uscm,
    unsigned int ty_uscm,
    unsigned int num_tx
)
{
    unsigned int sx, sy;

    sx = tx * NUM_GRID_X;
    sy = ty * NUM_GRID_Y;

    int sx_uscm = tx_uscm * NUM_GRID_X;
    int sy_uscm = ty_uscm * NUM_GRID_Y;

    int sx_ckeb2l = tx_ckeb2l * NUM_GRID_X;
    int sx_ckeb2r = tx_ckeb2r * NUM_GRID_X;

    string ckeb = "CKEB_TILE";
    

    if((tx==1)||(tx==num_tx-2)) 
    {   
      ckeb = "IOCK_TILE";
      connect 
        (
           <pin CLK_CKEB_IN[15:8] of <device *ckeb @ [sx+3,sy-NUM_GRID_Y]>> => (tx<tx_uscm) ? <wire CLK_GLOBAL_OUTL of <device CKEB2_TILE @ [sx_ckeb2l,sy]>>
                                                                                            : <wire CLK_GLOBAL_OUTR of <device CKEB2_TILE @ [sx_ckeb2r,sy]>>,

           <pin CLK_CKEB_IN[7:0] of <device *ckeb @ [sx+3,sy-NUM_GRID_Y]>> => (tx<tx_uscm) ? <wire SIG_GLOBAL_OUTL of <device CKEB2_TILE @ [sx_ckeb2l,sy]>>
                                                                                           : <wire SIG_GLOBAL_OUTR of <device CKEB2_TILE @ [sx_ckeb2r,sy]>>
      );        
    }
    else if(tx==tx_uscm) 
    {   
      ckeb = "USCM_TILE";
      connect 
        (
           <pin CLK_IN_CKEB[15:8] of <device *ckeb @ [sx,sy_uscm]>> =>  <wire CLK_GLOBAL_OUTR of <device CKEB2_TILE @ [sx_ckeb2l,sy]>>,
           <pin CLK_IN_CKEB[7:0] of <device *ckeb @ [sx,sy_uscm]>>  =>  <wire SIG_GLOBAL_OUTR of <device CKEB2_TILE @ [sx_ckeb2l,sy]>>
      );        
    }
    else if((tx<tx_ckeb2l))
    {   
      ckeb = "CKEB_TILE";
      connect 
        (
           <pin CLK_IN[15:8] of <device *ckeb @ [sx,sy]>> =>  <wire CLK_GLOBAL_OUTL of <device CKEB2_TILE @ [sx_ckeb2l,sy]>>,
           <pin CLK_IN[7:0] of <device *ckeb @ [sx,sy]>>  =>  <wire SIG_GLOBAL_OUTL of <device CKEB2_TILE @ [sx_ckeb2l,sy]>>
        );        
    }
    else if((tx>=tx_ckeb2l)&&(tx<tx_uscm))
    {   
      ckeb = (tx==tx_ckeb2l) ? "CKEB2_TILE" : "CKEB_TILE";
      connect 
        (
           <pin CLK_IN[15:8] of <device *ckeb @ [sx,sy]>> =>  <wire CLK_GLOBAL_OUTR of <device CKEB2_TILE @ [sx_ckeb2l,sy]>>,
           <pin CLK_IN[7:0] of <device *ckeb @ [sx,sy]>>  =>  <wire SIG_GLOBAL_OUTR of <device CKEB2_TILE @ [sx_ckeb2l,sy]>>
        );        
    }
    else if((tx>tx_uscm)&&(tx<tx_ckeb2r))
    {   
      ckeb = "CKEB_TILE";
      connect 
        (
           <pin CLK_IN[15:8] of <device *ckeb @ [sx,sy]>> =>  <wire CLK_GLOBAL_OUTL of <device CKEB2_TILE @ [sx_ckeb2r,sy]>>,
           <pin CLK_IN[7:0] of <device *ckeb @ [sx,sy]>>  =>  <wire SIG_GLOBAL_OUTL of <device CKEB2_TILE @ [sx_ckeb2r,sy]>>
        );        
    }
    else if(tx>=tx_ckeb2r)
    {   
      ckeb = (tx==tx_ckeb2r) ? "CKEB2_TILE" : "CKEB_TILE";
      connect 
        (
           <pin CLK_IN[15:8] of <device *ckeb @ [sx,sy]>> =>  <wire CLK_GLOBAL_OUTR of <device CKEB2_TILE @ [sx_ckeb2r,sy]>>,
           <pin CLK_IN[7:0] of <device *ckeb @ [sx,sy]>>  =>  <wire SIG_GLOBAL_OUTR of <device CKEB2_TILE @ [sx_ckeb2r,sy]>>
        );        
    }
}
/****************************************************************************************************
*****************************************************************************************************/
function connect_clk_buf
(
    int ty,
    int tx_ckebl,
    int tx_ckebr,
    int tx_uscm,
    int num_tx
)
{  
    int sx_ckebl = tx_ckebl * NUM_GRID_X;
    int sx_ckebr = tx_ckebr * NUM_GRID_X;
    int sy = ty * NUM_GRID_Y;

    int sx_iockl = NUM_GRID_X + 3;
    int sx_iockr = (num_tx - 2)*NUM_GRID_X + 3;
    int sy_iock = sy - NUM_GRID_Y;

    int sx_uscm = tx_uscm * NUM_GRID_X;
    int sy_uscm = sy + NUM_GRID_Y;

    connect
    (
      <pin CLKOP_PLL0_IN of <device CKEB2_TILE @[sx_ckebl,sy]>>  => <wire CLKOP_PLLD_BUF of <device IOCK_TILE @[sx_iockl,sy_iock]>>,
      <pin CLKOS_PLL0_IN of <device CKEB2_TILE @[sx_ckebl,sy]>>  => <wire CLKOS_PLLD_BUF of <device IOCK_TILE @[sx_iockl,sy_iock]>>,
      <pin CLKOS2_PLL0_IN of <device CKEB2_TILE @[sx_ckebl,sy]>> => <wire CLKOS2_PLLD_BUF of <device IOCK_TILE @[sx_iockl,sy_iock]>>,
      <pin CLKOS3_PLL0_IN of <device CKEB2_TILE @[sx_ckebl,sy]>> => <wire CLKOS3_PLLD_BUF of <device IOCK_TILE @[sx_iockl,sy_iock]>>,
      <pin CLKOP_PLL1_IN of <device CKEB2_TILE @[sx_ckebl,sy]>>  => <wire CLKOP_PLLU_BUF of <device IOCK_TILE @[sx_iockl,sy_iock]>>,
      <pin CLKOS_PLL1_IN of <device CKEB2_TILE @[sx_ckebl,sy]>>  => <wire CLKOS_PLLU_BUF of <device IOCK_TILE @[sx_iockl,sy_iock]>>,
      <pin CLKOS2_PLL1_IN of <device CKEB2_TILE @[sx_ckebl,sy]>> => <wire CLKOS2_PLLU_BUF of <device IOCK_TILE @[sx_iockl,sy_iock]>>,
      <pin CLKOS3_PLL1_IN of <device CKEB2_TILE @[sx_ckebl,sy]>> => <wire CLKOS3_PLLU_BUF of <device IOCK_TILE @[sx_iockl,sy_iock]>>,
      <pin CLK_CFGS_IN of <device CKEB2_TILE @[sx_ckebl,sy]>>    => <wire CLK_CFGS_BUF of <device IOCK_TILE @[sx_iockl,sy_iock]>>,

      <pin CLKOP_PLL0_IN of <device CKEB2_TILE @[sx_ckebr,sy]>>  => <wire CLKOP_PLL_D_BUF of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLKOS_PLL0_IN of <device CKEB2_TILE @[sx_ckebr,sy]>>  => <wire CLKOS_PLL_D_BUF of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLKOS2_PLL0_IN of <device CKEB2_TILE @[sx_ckebr,sy]>> => <wire TIEHI of <device CKEB2_TILE @[sx_ckebr,sy]>>,
      <pin CLKOS3_PLL0_IN of <device CKEB2_TILE @[sx_ckebr,sy]>> => <wire TIEHI of <device CKEB2_TILE @[sx_ckebr,sy]>>,
      <pin CLKOP_PLL1_IN of <device CKEB2_TILE @[sx_ckebr,sy]>>  => <wire CLKOP_PLL_U_BUF of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLKOS_PLL1_IN of <device CKEB2_TILE @[sx_ckebr,sy]>>  => <wire CLKOS_PLL_U_BUF of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLKOS2_PLL1_IN of <device CKEB2_TILE @[sx_ckebr,sy]>> => <wire TIEHI of <device CKEB2_TILE @[sx_ckebr,sy]>>,
      <pin CLKOS3_PLL1_IN of <device CKEB2_TILE @[sx_ckebr,sy]>> => <wire TIEHI of <device CKEB2_TILE @[sx_ckebr,sy]>>,
      <pin CLK_CFGS_IN of <device CKEB2_TILE @[sx_ckebr,sy]>>    => <wire TIEHI of <device CKEB2_TILE @[sx_ckebr,sy]>>,

      <pin CLK_IOMUX2PLL_I of <device CKEB2_TILE @[sx_ckebr,sy]>>   => <wire CLK_IOMUX2PLL_BUF of <device IOCK_TILE @[sx_iockr,sy_iock]>>,
      <pin CLK_PIO2PLL_IN[0] of <device CKEB2_TILE @[sx_ckebr,sy]>> => <wire TIEHI of <device CKEB2_TILE @[sx_ckebr,sy]>>,
      <pin CLK_PIO2PLL_IN[1] of <device CKEB2_TILE @[sx_ckebr,sy]>> => <wire TIEHI of <device CKEB2_TILE @[sx_ckebr,sy]>>,
      <pin CLK_IOMUX2PLL_I of <device CKEB2_TILE @[sx_ckebl,sy]>>   => <wire CLK_IOMUX2PLL_R_BUF of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLK_PIO2PLL_IN of <device CKEB2_TILE @[sx_ckebl,sy]>>    => <wire CLK_PIO2PLL_R of <device USCM_TILE @[sx_uscm,sy_uscm]>>
    ); 

    connect
    (
      <pin CLK_DIV0_IN of <device CKEB2_TILE @[sx_ckebl,sy]>>     => <wire CLK_DIV_0 of <device IOCK_TILE @[sx_iockl,sy_iock]>>,
      <pin CLK_DIV1_IN of <device CKEB2_TILE @[sx_ckebl,sy]>>     => <wire CLK_DIV_1 of <device IOCK_TILE @[sx_iockl,sy_iock]>>,
      <pin CLK_PIO_IN of <device CKEB2_TILE @[sx_ckebl,sy]>>      => <wire CLK_OUT of <device IOCK_TILE @[sx_iockl,sy_iock]>>,
      <pin CLK_IOPRE2BRG_I of <device CKEB2_TILE @[sx_ckebl,sy]>> => <wire CLK_IOPRE2BRGMUX of <device IOCK_TILE @[sx_iockl,sy_iock]>>,

      <pin CLK_DIV0_IN of <device CKEB2_TILE @[sx_ckebr,sy]>>     => <wire CLK_DIV_0 of <device IOCK_TILE @[sx_iockr,sy_iock]>>,
      <pin CLK_DIV1_IN of <device CKEB2_TILE @[sx_ckebr,sy]>>     => <wire CLK_DIV_1 of <device IOCK_TILE @[sx_iockr,sy_iock]>>,
      <pin CLK_PIO_IN of <device CKEB2_TILE @[sx_ckebr,sy]>>      => <wire CLK_OUT of <device IOCK_TILE @[sx_iockr,sy_iock]>>,
      <pin CLK_IOPRE2BRG_I of <device CKEB2_TILE @[sx_ckebr,sy]>> => <wire CLK_IOPRE2BRGMUX of <device IOCK_TILE @[sx_iockr,sy_iock]>>,

      <pin CLK_GLOBAL_IN of <device CKEB2_TILE @[sx_ckebl,sy]>>    => <wire CLK_GLOBAL_L of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin SIG_GLOBAL_IN of <device CKEB2_TILE @[sx_ckebl,sy]>>    => <wire SIG_GLOBAL_L of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLK_GLOBAL_IN of <device CKEB2_TILE @[sx_ckebr,sy]>>    => <wire CLK_GLOBAL_R of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin SIG_GLOBAL_IN of <device CKEB2_TILE @[sx_ckebr,sy]>>    => <wire SIG_GLOBAL_R of <device USCM_TILE @[sx_uscm,sy_uscm]>>,

      <pin CLK_BRG_IN[0] of <device CKEB2_TILE @[sx_ckebl,sy]>>    => <wire CLK_BRG_L0 of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLK_BRG_IN[1] of <device CKEB2_TILE @[sx_ckebl,sy]>>    => <wire CLK_BRG_L1 of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLK_DLY_L_IN of <device CKEB2_TILE @[sx_ckebl,sy]>>     => <wire CLK_P_TL_BUF of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLK_DLY_M_IN of <device CKEB2_TILE @[sx_ckebl,sy]>>     => <wire CLK_P_TM_BUF of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLK_DLY_R_IN of <device CKEB2_TILE @[sx_ckebl,sy]>>     => <wire CLK_P_TR_BUF of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLK_BRG_IN[0] of <device CKEB2_TILE @[sx_ckebr,sy]>>    => <wire CLK_BRG_R0 of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLK_BRG_IN[1] of <device CKEB2_TILE @[sx_ckebr,sy]>>    => <wire CLK_BRG_R1 of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLK_DLY_L_IN of <device CKEB2_TILE @[sx_ckebr,sy]>>     => <wire CLK_P_BL_BUF of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLK_DLY_M_IN of <device CKEB2_TILE @[sx_ckebr,sy]>>     => <wire CLK_P_BM_BUF of <device USCM_TILE @[sx_uscm,sy_uscm]>>,
      <pin CLK_DLY_R_IN of <device CKEB2_TILE @[sx_ckebr,sy]>>     => <wire CLK_P_BR_BUF of <device USCM_TILE @[sx_uscm,sy_uscm]>>
    );
  
}
/****************************************************************************************************
*****************************************************************************************************/

function connect_SRB_CLK_input
(
    unsigned int tx,
    unsigned int ty,
    unsigned int tx_ckebl,
    unsigned int tx_ckebr,
    unsigned int tx_uscm,
    unsigned int ty_uscm,
    unsigned int ty_blank,
    unsigned int num_tx
)
{
    int sx,sy;
    sx = tx * NUM_GRID_X;
    sy = ty * NUM_GRID_Y;

    int sx_uscm,sy_uscm;
    sx_uscm = tx_uscm * NUM_GRID_X;
    sy_uscm = ty_uscm * NUM_GRID_Y;

    string ckeb;
    ckeb = ((tx==1)||(tx==num_tx-2)) ? "IOCK_TILE" : (tx==tx_uscm-1) ? "USCM_TILE" : ((tx==tx_ckebl)||(tx==tx_ckebr)) ? "CKEB2_TILE" : "CKEB_TILE";
    int sx_ckeb = ((tx==1)||(tx==num_tx-2)) ? sx+3 : (tx==tx_uscm-1) ? sx_uscm : sx;
    int sy_ckeb = ((tx==1)||(tx==num_tx-2)) ? (ty_blank-1)*NUM_GRID_Y : (tx==tx_uscm-1) ? sy_uscm : ty_blank*NUM_GRID_Y;

    connect
      (
          <pin G0 of <device SRB_TILE @ [sx,sy]>>   => (ty>ty_blank) ? <wire CLK_OUTT[0] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[0] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,
          <pin G1 of <device SRB_TILE @ [sx,sy]>>   => (ty>ty_blank) ? <wire CLK_OUTT[1] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[1] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,
          <pin G2 of <device SRB_TILE @ [sx,sy]>>   => (ty>ty_blank) ? <wire CLK_OUTT[2] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[2] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,
          <pin G3 of <device SRB_TILE @ [sx,sy]>>   => (ty>ty_blank) ? <wire CLK_OUTT[3] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[3] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,
          <pin G4 of <device SRB_TILE @ [sx,sy]>>   => (ty>ty_blank) ? <wire CLK_OUTT[4] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[4] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,
          <pin G5 of <device SRB_TILE @ [sx,sy]>>   => (ty>ty_blank) ? <wire CLK_OUTT[5] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[5] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,
          <pin G6 of <device SRB_TILE @ [sx,sy]>>   => (ty>ty_blank) ? <wire CLK_OUTT[6] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[6] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,
          <pin G7 of <device SRB_TILE @ [sx,sy]>>   => (ty>ty_blank) ? <wire CLK_OUTT[7] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[7] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,

          <pin G8 of <device SRB_TILE @ [sx,sy]>>   => (ty>ty_blank) ? <wire CLK_OUTT[8] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[8] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,
          <pin G9 of <device SRB_TILE @ [sx,sy]>>   => (ty>ty_blank) ? <wire CLK_OUTT[9] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[9] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,
          <pin G10 of <device SRB_TILE @ [sx,sy]>>  => (ty>ty_blank) ? <wire CLK_OUTT[10] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[10] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,
          <pin G11 of <device SRB_TILE @ [sx,sy]>>  => (ty>ty_blank) ? <wire CLK_OUTT[11] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[11] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,
          <pin G12 of <device SRB_TILE @ [sx,sy]>>  => (ty>ty_blank) ? <wire CLK_OUTT[12] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[12] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,
          <pin G13 of <device SRB_TILE @ [sx,sy]>>  => (ty>ty_blank) ? <wire CLK_OUTT[13] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[13] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,
          <pin G14 of <device SRB_TILE @ [sx,sy]>>  => (ty>ty_blank) ? <wire CLK_OUTT[14] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[14] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>,
          <pin G15 of <device SRB_TILE @ [sx,sy]>>  => (ty>ty_blank) ? <wire CLK_OUTT[15] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
                                                                     : <wire CLK_OUTB[15] of <device *ckeb @ [sx_ckeb,sy_ckeb]>>
      );   
 
}//end of function connect_SRB_CLK_input

}//end of package pgc_funcs_connect_clk

