*******************************************************************

  Operator    [gopSFB]

  Abstract  []

  Revision History:

 ********************************************************************************/
gate
operator gopSFB
{
    parameter
    (
        bit CP_TEST_LUT[1:0] = 2'b00,
        bit CP_TEST = 1'b0
    );

    port
    (
        input NM_DATA[19:0],
        input A_A0,
        input A_A1,
        input A_A2,
        input A_A3,
        input A_A4,
        input A_AD,
        input A_B0,
        input A_B1,
        input A_B2,
        input A_B3,
        input A_B4,
        input A_BD,
        input A_C0,
        input A_C1,
        input A_C2,
        input A_C3,
        input A_C4,
        input A_CD,
        input A_D0,
        input A_D1,
        input A_D2,
        input A_D3,
        input A_D4,
        input A_DD,
        input S_A0,
        input S_A1,
        input S_A2,
        input S_A3,
        input S_A4,
        input S_AD,
        input S_B0,
        input S_B1,
        input S_B2,
        input S_B3,
        input S_B4,
        input S_BD,
        input S_C0,
        input S_C1,
        input S_C2,
        input S_C3,
        input S_C4,
        input S_CD,
        input S_D0,
        input S_D1,
        input S_D2,
        input S_D3,
        input S_D4,
        input S_DD,
        input A_CLK,
        input S_CLK,
        input A_RS,
        input S_RS,
        input A_CE,
        input S_CE,
        input IOLA_CLK,
        input IOLB_CLK,
        input IOLA_RS,
        input IOLB_RS,
        input IOLA_CE,
        input IOLB_CE,
        input ZM_1,
        input ZM_5,
        input ZM_9,
        input ZM_13,
        input ZM_2,
        input ZM_6,
        input ZM_10,
        input ZM_14,
        output TEST_A_Y6AB,
        output TEST_A_Y6CD,
        output TEST_S_Y6AB,
        output TEST_S_Y6CD,
        output TEST_A_Y0,
        output TEST_A_Y1,
        output TEST_A_Y2,
        output TEST_A_Y3,
        output TEST_S_Y0,
        output TEST_S_Y1,
        output TEST_S_Y2,
        output TEST_S_Y3,
        output TEST_A_Q0,
        output TEST_A_Q1,
        output TEST_A_Q2,
        output TEST_A_Q3,
        output TEST_S_Q0,
        output TEST_S_Q1,
        output TEST_S_Q2,
        output TEST_S_Q3
    );
};

/**Implementation Body*******************************************************************

  Author    []

  Abstract  []

  Revision History:

 *****************************************************************************************/
implementation impl of gopSFB
{
    device SFB sfb
        parameter map
        (
           CP_TEST_LUT => CP_TEST_LUT,
           CP_TEST     => CP_TEST
        )
        port map
        (
            NM_DATA   =>   NM_DATA, 
            A_A0      =>   A_A0,
            A_A1      =>   A_A1,         
            A_A2      =>   A_A2,         
            A_A3      =>   A_A3,         
            A_A4      =>   A_A4,         
            A_AD      =>   A_AD,         
            A_B0      =>   A_B0,         
            A_B1      =>   A_B1,         
            A_B2      =>   A_B2,         
            A_B3      =>   A_B3,         
            A_B4      =>   A_B4,         
            A_BD      =>   A_BD,         
            A_C0      =>   A_C0,         
            A_C1      =>   A_C1,         
            A_C2      =>   A_C2,         
            A_C3      =>   A_C3,         
            A_C4      =>   A_C4,         
            A_CD      =>   A_CD,         
            A_D0      =>   A_D0,         
            A_D1      =>   A_D1,         
            A_D2      =>   A_D2,         
            A_D3      =>   A_D3,         
            A_D4      =>   A_D4,         
            A_DD      =>   A_DD,         
            S_A0      =>   S_A0,         
            S_A1      =>   S_A1,         
            S_A2      =>   S_A2,         
            S_A3      =>   S_A3,         
            S_A4      =>   S_A4,         
            S_AD      =>   S_AD,         
            S_B0      =>   S_B0,         
            S_B1      =>   S_B1,         
            S_B2      =>   S_B2,         
            S_B3      =>   S_B3,         
            S_B4      =>   S_B4,         
            S_BD      =>   S_BD,         
            S_C0      =>   S_C0,         
            S_C1      =>   S_C1,         
            S_C2      =>   S_C2,         
            S_C3      =>   S_C3,         
            S_C4      =>   S_C4,         
            S_CD      =>   S_CD,         
            S_D0      =>   S_D0,         
            S_D1      =>   S_D1,         
            S_D2      =>   S_D2,         
            S_D3      =>   S_D3,         
            S_D4      =>   S_D4,         
            S_DD      =>   S_DD,         
            IOLA_CLK  =>   IOLA_CLK,    
            IOLB_CLK  =>   IOLB_CLK,    
            IOLA_RS   =>   IOLA_RS,     
            IOLB_RS   =>   IOLB_RS,     
            IOLA_CE   =>   IOLA_CE,     
            IOLB_CE   =>   IOLB_CE,     
            ZM_1      =>   ZM_1,        
            ZM_5      =>   ZM_5,        
            ZM_9      =>   ZM_9,        
            ZM_13     =>   ZM_13,    
            ZM_2      =>   ZM_2,    
            ZM_6      =>   ZM_6,    
            ZM_10     =>   ZM_10,       
            ZM_14     =>   ZM_14,       
            TEST_A_Y6AB     =>      TEST_A_Y6AB, 
            TEST_A_Y6CD     =>      TEST_A_Y6CD, 
            TEST_S_Y6AB     =>      TEST_S_Y6AB, 
            TEST_S_Y6CD     =>      TEST_S_Y6CD, 
            TEST_A_Y0       =>      TEST_A_Y0,   
            TEST_A_Y1       =>      TEST_A_Y1,   
            TEST_A_Y2       =>      TEST_A_Y2,   
            TEST_A_Y3       =>      TEST_A_Y3,   
            TEST_S_Y0       =>      TEST_S_Y0,   
            TEST_S_Y1       =>      TEST_S_Y1,   
            TEST_S_Y2       =>      TEST_S_Y2,   
            TEST_S_Y3       =>      TEST_S_Y3,   
            TEST_A_Q0       =>      TEST_A_Q0,   
            TEST_A_Q1       =>      TEST_A_Q1,   
            TEST_A_Q2       =>      TEST_A_Q2,   
            TEST_A_Q3       =>      TEST_A_Q3,   
            TEST_S_Q0       =>      TEST_S_Q0,   
            TEST_S_Q1       =>      TEST_S_Q1,   
            TEST_S_Q2       =>      TEST_S_Q2,   
            TEST_S_Q3       =>      TEST_S_Q3    
        );

}; // end of implementation impl_uscm of gopSFB


