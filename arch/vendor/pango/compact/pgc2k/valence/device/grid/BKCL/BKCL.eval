tarted
grid
device BKCL
{
    // grid_property_def_start
    // grid_property_def_end

    parameter
    (
        config string CP_DIFFOUT_EN = "FALSE",
        config string CP_DIFFOUT_DYN_EN = "FALSE",
        config string CP_DIFFIN_EN = "FALSE",
        config string CP_DIFFIN_DYN_EN = "FALSE",
        config string CP_DIFF_DRV_STRENGTH = "3.5",
        config string CP_OD_CTRL = "LVDS",
        config string CP_VREF = "HIGHZ",
        config string CP_VREFPD_N = "FALSE",
        config string CP_PU2_B = "FALSE",
        config string CP_PU3_B = "FALSE",
        config string CP_PD2 = "FALSE",
        config string CP_PD3 = "FALSE"
    );
    port
    (
// configuration_body_def_on


    config input SC_DIFFOUT_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DIFFOUT_EN" */,

    config input SC_DIFFOUT_DYN_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DIFFOUT_DYN_EN" */,

    config input SC_VREFPD_N = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_VREFPD_N" */,

    config input SC_DIFFIN_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DIFFIN_EN" */,

    config input SC_DIFFIN_DYN_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DIFFIN_DYN_EN" */,

    config input SC_RCON_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_RCON_EN" */,

    config input SC_PULLDW[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PULLDW[1],SC_PULLDW[0]" */,

    config input SC_PULLUP[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PULLUP[1],SC_PULLUP[0]" */,

    config input SC_VREF_TEST = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_VREF_TEST" */,

    config input SC_LVDS_TEST = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_LVDS_TEST" */,

    config input SC_DRV[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DRV[2],SC_DRV[1],SC_DRV[0]" */,

    config input SC_OD_CTRL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_OD_CTRL[1],SC_OD_CTRL[0]" */,

    config input SC_VREF[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_VREF[1],SC_VREF[0]" */,

// configuration_body_def_end

        input DIFFOUT_DYN_EN_N = 1'b1,
        input DIFFIN_DYN_EN_N = 1'b1,
        output VREF,
        output S12_DIFFIN_DYN_EN
    );
};
//grid device end

//grid device structure netlist started
structure netlist of BKCL
{

};
//grid device structure netlist end

//grid device configure body started

configuration cfg of BKCL
{

 // assign config body begin
    SC_DIFFOUT_EN  :=  (CP_DIFFOUT_EN == "TRUE") ? 1'b1 : 1'b0;
    SC_DIFFOUT_DYN_EN  :=  (CP_DIFFOUT_DYN_EN == "TRUE") ? 1'b1 : 1'b0;
    SC_VREFPD_N  :=  (CP_VREFPD_N == "TRUE") ? 1'b0 : 1'b1;
    SC_DIFFIN_EN  :=  (CP_DIFFIN_EN == "TRUE") ? 1'b1 : 1'b0;
    SC_DIFFIN_DYN_EN  :=  (CP_DIFFIN_DYN_EN == "TRUE") ? 1'b1 : 1'b0;
    SC_PULLDW[0]      :=  (CP_PD2 == "TRUE") ? 1'b1 : 1'b0;
    SC_PULLDW[1]      :=  (CP_PD3 == "TRUE") ? 1'b1 : 1'b0;
    SC_PULLUP[0]      :=  (CP_PU2_B == "TRUE") ? 1'b1 : 1'b0;
    SC_PULLUP[1]      :=  (CP_PU3_B == "TRUE") ? 1'b1 : 1'b0;
    SC_RCON_EN  :=  (CP_DIFFOUT_EN == "TRUE") ? 1'b1 : 1'b0;
    SC_VREF_TEST  :=  1'b0;
    // for test only
    SC_LVDS_TEST  :=  1'b0;
    // for test only;
// assign config body end

//initial config body0 begin
    if(CP_DIFF_DRV_STRENGTH == "3.5")
    {
        SC_DRV  :=  3'b000;
    }
    else if(CP_DIFF_DRV_STRENGTH == "4")
    {
        SC_DRV  :=  3'b001;
    }
    else if(CP_DIFF_DRV_STRENGTH == "4.5")
    {
        SC_DRV  :=  3'b010;
    }
    else if(CP_DIFF_DRV_STRENGTH == "3")
    {
        SC_DRV  :=  3'b011;
    }
    else if(CP_DIFF_DRV_STRENGTH == "2.5")
    {
        SC_DRV  :=  3'b100;
    }
    else if(CP_DIFF_DRV_STRENGTH == "2")
    {
        SC_DRV  :=  3'b101;
    }
    else if(CP_DIFF_DRV_STRENGTH == "2.2")
    {
        SC_DRV  :=  3'b110;
    }
    else if(CP_DIFF_DRV_STRENGTH == "1.8")
    {
        SC_DRV  :=  3'b111;
    }
    else
    {
        error("golden-error: illegal setting for CP_DIFF_DRV_STRENGTH := %s", CP_DIFF_DRV_STRENGTH);
    }
    if(CP_OD_CTRL == "LVDS")
    {
        SC_OD_CTRL  :=  2'b00;
    }
    else if(CP_OD_CTRL == "MIPI")
    {
        SC_OD_CTRL  :=  2'b01;
    }
    else
    {
        error("golden-error: illegal setting for CP_OD_CTRL := %s", CP_OD_CTRL);
    }
    if(CP_VREF == "HIGHZ")
    {
        SC_VREF  :=  2'b00;
    }
    else if(CP_VREF == "0.45")
    {
        SC_VREF  :=  2'b01;
    }
    else if(CP_VREF == "0.5")
    {
        SC_VREF  :=  2'b10;
    }
    else if(CP_VREF == "0.55")
    {
        SC_VREF  :=  2'b11;
    }
    else
    {
        error("golden_bkcl error: illegal setting for CP_VREF := %s", CP_VREF);
    }
    if((CP_DIFFOUT_EN == "TRUE") || (CP_DIFFOUT_EN == "FALSE"))
    {

    }
    else
    {
        error (" golden_bkcl error: illegal setting for CP_DIFFOUT_EN := %s",CP_DIFFOUT_EN);
    }
    if((CP_VREFPD_N == "TRUE") || (CP_VREFPD_N == "FALSE"))
    {

    }
    else
    {
        error (" golden_bkcl error: illegal setting for CP_VREFPD_N := %s",CP_VREFPD_N);
    }
    if((CP_DIFFIN_EN == "TRUE") || (CP_DIFFIN_EN == "FALSE"))
    {

    }
    else
    {
        error (" golden_bkcl error: illegal setting for CP_DIFFIN_EN := %s",CP_DIFFIN_EN);
    }
    if((CP_PD2 == "TRUE") || (CP_PD2 == "FALSE"))
    {

    }
    else
    {
        error (" golden_bkcl error: illegal setting for CP_PD2 := %s",CP_PD2);
    }
    if((CP_PD3 == "TRUE") || (CP_PD3 == "FALSE"))
    {

    }
    else
    {
        error (" golden_bkcl error: illegal setting for CP_PD3 := %s",CP_PD3);
    }
    if((CP_PU2_B == "TRUE") || (CP_PU2_B == "FALSE"))
    {

    }
    else
    {
        error (" golden_bkcl error: illegal setting for CP_PU2_B := %s",CP_PU2_B);
    }
    if((CP_PU3_B == "TRUE") || (CP_PU3_B == "FALSE"))
    {

    }
    else
    {
        error (" golden_bkcl error: illegal setting for CP_PU3_B := %s",CP_PU3_B);
    }

//initial config body0 end

};

//grid device configure body end

