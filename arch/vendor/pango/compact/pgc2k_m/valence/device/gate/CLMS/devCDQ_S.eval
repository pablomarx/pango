*******************************************************************

  Device    [devCDQ_S]

  Author    [guoxi]

  Abstract  [FF WITH PORT CD AND DD OF CLMS]

  Revision History:

********************************************************************************/
gate
device devCDQ_S : device CLMS
{
    parameter
    (
        config string  CP_GRS_EN     = "FALSE",  
        config string  CP_Y2MUX_SEL  := "MF",        //"FX":F2 "CYX":CYC "MF":QP1
        config string  CP_RSMUX_SEL  = "LOCAL",     //"LOCAL":RS; "CHAIN":RSIN
        config string  CP_CEMUX_SEL  = "LOCAL",     //"LOCAL":CE; "CHAIN":CEIN
        config string  CP_LRS_EN     = "TRUE",     //"Disable"; "Enable"
        config string  CP_LRS_POL    = "FALSE",     //"RS"; "Invert RS" - CLMS Global
        config string  CP_LCE_EN     = "TRUE",     // "Disable"; "Enable"
        config string  CP_LCE_POL    = "FALSE",     // "CE";  "Invert CE" - CLMS Global
        config string  CP_CLK_POL    = "FALSE",     //"CLK"; "Invert CLK" - CLMS Global
        config string  CP_CDPMUX_SEL = "X1D",       //"X0D":CD "X1D":DD
        config string  CP_QCDMUX_SEL := "PY",        //"Y6":Y6CD "PY":CDP "SRQ":Q2
        config string  CP_RS_MODE    = "ASYNC",     //"SYNC" "ASYNC" - CLMS Global
        config string  CP_FFCD_RS    = "SET"        //"RESET" "SET"
    );
    port
    (        
        input    CD, DD,
        output   Y2,
        input    RS,
        input    CE,
        input    CLK,
        input    RSCI,
        input    CECI,
        output   RSCO,
        output   CECO

    );

}// end of device devCDQ_S

/*******************************************************************************

  Device    [devCDQ_S]

  Author    [guoxi]

  Abstract  [The structure netlist of devCDQ_S is described in the similar fashion 
             as in HDL. In unit instantiation statement, the formal pin may be 
             connected to net which is declared explicitly. 
             
             In Valence, the connection can also be made from formal pin to other 
             pin or port, in which case Valence compiler shall create the net to 
             fulfil the connection. The built-in naming convention is kicked in 
             to name the automatically created net. However, the objects (net, instance)
             of this netlist are going to mapped from schematic. The compiler-generated
             names cause trouble for the mapping. Therefore, all wires are declared
             explicitly in the following description]

  Revision History:

********************************************************************************/
structure netlist of devCDQ_S
{
    // Wires for input ports
    wire ntDD; 
    wire ntCD; 

    wire ntRS;
    wire ntCE;
    wire ntCLK;

    wire ntRSCI;
    wire ntCECI;

    // Wires connecting to output ports
    wire ntY2;
    wire ntCECO;
    wire ntRSCO;

    // Internal wires
    wire ntDP1_DI;
    wire ntDP1;
    wire ntQP1;
    wire ntCLKCO;
    wire ntRS_P;
    wire ntCE_P;

    //
    // Connection to ports
    //
    ntCD      <= CD;
    ntDD      <= DD;

    ntRS      <= RS;
    ntCE      <= CE;
    ntCLK     <= CLK;
    
    ntRSCI    <= RSCI;
    ntCECI    <= CECI;

    Y2        <= ntY2;    
    RSCO      <= ntRSCO;
    CECO      <= ntCECO;

    //
    // Instances. FGC section
    //

    device YMUX  Y2MUX
        parameter map
        (
            CP_OUT_SEL => CP_Y2MUX_SEL
        )
        port map
        (
            Y    => ntY2,
            MF   => ntQP1
        );
    
    device PMUX  CDPMUX
        parameter map
        (
            CP_OUT_SEL => CP_CDPMUX_SEL
        )
        port map
        (
            Y   => ntDP1_DI,
            X1D => ntDD,
            X0D => ntCD
        );    
    
    device APPQMUX  QCDMUX
        parameter map
        (
            CP_OUT_SEL => CP_QCDMUX_SEL
        )
        port map
        (
            Q   => ntDP1,
            PY  => ntDP1_DI
        );    

    device FF FFCD
        parameter map
        (
            CP_GRS_EN  => CP_GRS_EN,
            CP_RS_MODE => CP_RS_MODE,
            CP_FF_RS   => CP_FFCD_RS
        )
        port map
        (
            Q   => ntQP1,
            D   => ntDP1,
            CE  => ntCECO,
            CLK => ntCLKCO,
            RS  => ntRSCO
        );

    device MUX2_P  CEMUX
        parameter map
        (
            SEL => CP_CEMUX_SEL
        )
        port map
        (
            DOUT  => ntCECO,
            DI1   => ntCECI,
            DI0   => ntCE_P
        );
    
    device MUX2_P  RSMUX
        parameter map
        (
            SEL => CP_RSMUX_SEL
        )
        port map
        (
            DOUT  => ntRSCO,
            DI1   => ntRSCI,
            DI0   => ntRS_P
        );

    device CLK_POLMUX  CLKPOLMUX
        parameter map
        (
            CP_CLK_POL => CP_CLK_POL
        )
        port map
        (
            Y  => ntCLKCO,
            IN => ntCLK
        );
        
    device LCE_POLMUX  LCEPOLMUX
        parameter map
        (
            CP_LCE_EN  => CP_LCE_EN,
            CP_LCE_POL => CP_LCE_POL
        )
        port map
        (
            Y  => ntCE_P,
            IN => ntCE
        );
        
    device LRS_POLMUX  LRSPOLMUX
        parameter map
        (
            CP_LRS_EN  => CP_LRS_EN,
            CP_LRS_POL => CP_LRS_POL
        )
        port map
        (
            Y  => ntRS_P,
            IN => ntRS
        );
}; // end of structure netlist of devCDQ_S

