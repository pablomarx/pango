*****************************************************************

Copyright (c) 2014 by SHENZHEN PANGO MICROSYSTEMS CO.,LTD
ALL RIGHTS RESERVED.

THE SOURCE CODE CONTAINED HEREIN IS PROPRIETARY TO PANGO MICROSYSTEMS, INC.
IT SHALL NOT BE REPRODUCED OR DISCLOSED IN WHOLE OR IN PART OR USED BY
PARTIES WITHOUT WRITTEN AUTHORIZATION FROM THE OWNER.

  Operator  [GTP_IOBUF_RX_MIPI]

  Author    [liu jiao]

  Abstract  []

  Revision History:

  IMPORTANT [SCRIPT GENERATED, DO NOT EDIT MANUALLY!]

*******************************************************************************/

fabric
implementation impl of GTP_IOBUF_RX_MIPI @ (4,0 # 4,0)
{
    wire ntI1, ntO_HS, ntT1;
    wire ntI2, ntOB_LP, ntT2;
    wire ntM1, ntM2;
    wire ntDIFFIN;
    wire ntDIFFO;
    wire ntDIFF1;
    wire ntO_LP;
    
    operator gopIOMIPIB
        parameter map
        (
            IOSTANDARD     => IOSTANDARD == "DEFAULT" ? "MIPI" : IOSTANDARD,
            //MIPI_MODE      => "TRUE",
            DIFF_IN_TERM_MODE  => TERM_DIFF,
            SLEW_MODE      => (SLEW_RATE == "SLOW") ? "S" : "F",
            DRV_CURR_VAL   => DRIVE_STRENGTH,
            IOB_MODE       => "IOBUF"
        )     
        port map
        (
            I        => ntOB_LP,
            T        => ntT2,
            O        => ntI2,
            MI       => ntM2,
            IO       => IOB,
            //DIFFO_IN   => ntDIFFO,
            DIFFI_OUT  => ntDIFFIN,
            DIFFI_IN   => ntDIFF1
        )@[1,1];
    
    operator gopIOMIPIAR
        parameter map
        (
            IOSTANDARD      => IOSTANDARD == "DEFAULT" ? "MIPI" : IOSTANDARD,
            //MIPI_MODE       => "TRUE",
            DIFF_IN_TERM_MODE   => TERM_DIFF,
            SLEW_MODE       => (SLEW_RATE == "SLOW") ? "S" : "F",
            DRV_CURR_VAL    => DRIVE_STRENGTH,
            IOB_MODE        => "IOBUF_MIPI"
        )     
        port map
        (
            I        => ntO_HS,
            T        => ntT1,
            O        => ntI1,
            MI       => ntM1,
            IO       => IO,
            //DIFFO_OUT => ntDIFFO,
            DIFFI_OUT => ntDIFF1,
            DIFFI_IN  => ntDIFFIN,
            
            DIN_MIPI_LP  => ntO_LP
        )@[1,0];
        
    operator gopIOBUFIOL
        parameter map
        (
            CP_MIPI_EN  => "DISABLE"
        )
        port map
        (
            IN =>  IB_LP,
            TS    =>  TB,
            OUT   =>  OB_LP,
            MI    =>  M,
            MO    => ntM2,

            T     =>  ntT2,
            I     =>  ntI2,
            O     =>  ntOB_LP
        )@[0,1];
        
    operator gopIOBUFIOL
        parameter map
        (
            CP_MIPI_EN  => "ENABLE"
        )
        port map
        (
            IN    =>  I_LP,
            TS    =>  T,
            OUT   =>  O_LP,
            MI    =>  M,
            MO    => ntM1,

            T     =>  ntT1,
            I     =>  ntI1,
            O     =>  ntO_HS,
            
            DIN_MIPI       => ntO_LP,
            DIN_ISERDES    => O_HS
        )@[0,0];

};

