tarted
grid
device PLLROUTE
{
    // grid_property_def_start
    // grid_property_def_end

    parameter
    (
        config bit CP_SEL0[2:0] = 3'b000,
        config bit CP_SEL1[2:0] = 3'b000,
        config bit CP_SEL2[2:0] = 3'b000,
        config bit CP_SEL3[2:0] = 3'b000
    );
    port
    (
// configuration_body_def_on


    config input SC_SEL0[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_SEL0[2],SC_SEL0[1],SC_SEL0[0]" */,

    config input SC_SEL1[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_SEL1[2],SC_SEL1[1],SC_SEL1[0]" */,

    config input SC_SEL2[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_SEL2[2],SC_SEL2[1],SC_SEL2[0]" */,

    config input SC_SEL3[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_SEL3[2],SC_SEL3[1],SC_SEL3[0]" */,

// configuration_body_def_end

        input CLK_M_P[3:0] = 4'b1111,
        inout CLK_U_P[3:0],
        inout CLK_D_P[3:0]
    );
};
//grid device end

//grid device structure netlist started
structure netlist of PLLROUTE
{
    routing
    {
        ( CLK_D_P[0] --> CLK_U_P[0] ) = 150;
        ( CLK_D_P[1] --> CLK_U_P[1] ) = 150;
        ( CLK_D_P[2] --> CLK_U_P[2] ) = 150;
        ( CLK_D_P[3] --> CLK_U_P[3] ) = 150;
        ( CLK_U_P[0] --> CLK_D_P[0] ) = 150;
        ( CLK_U_P[1] --> CLK_D_P[1] ) = 150;
        ( CLK_U_P[2] --> CLK_D_P[2] ) = 150;
        ( CLK_U_P[3] --> CLK_D_P[3] ) = 150;
        ( CLK_M_P[0] --> CLK_U_P[0] ) = 150;
        ( CLK_M_P[1] --> CLK_U_P[1] ) = 150;
        ( CLK_M_P[2] --> CLK_U_P[2] ) = 150;
        ( CLK_M_P[3] --> CLK_U_P[3] ) = 150;
        ( CLK_M_P[0] --> CLK_D_P[0] ) = 150;
        ( CLK_M_P[1] --> CLK_D_P[1] ) = 150;
        ( CLK_M_P[2] --> CLK_D_P[2] ) = 150;
        ( CLK_M_P[3] --> CLK_D_P[3] ) = 150;

    }
};
//grid device structure netlist end
//grid device configure body started

configuration cfg of PLLROUTE
{

 // assign config body begin
    SC_SEL0   :=  CP_SEL0;
    SC_SEL1   :=  CP_SEL1;
    SC_SEL2   :=  CP_SEL2;
    SC_SEL3   :=  CP_SEL3;
// assign config body end

    if ( CLK_D_P[0] --> CLK_U_P[0] )
    {
        SC_SEL0 := 3'b001;
    }

    if ( CLK_U_P[0] --> CLK_D_P[0] )
    {
        SC_SEL0 := 3'b010;
    }
    
    if ( CLK_M_P[0] --> CLK_U_P[0] )
    {
        SC_SEL0 := 3'b101;
    }
    
    if ( CLK_M_P[0] --> CLK_D_P[0] )
    {
        SC_SEL0 := 3'b110;
    }
    
    if ( CLK_M_P[0] --> CLK_U_P[0] && CLK_M_P[0] --> CLK_D_P[0] )
    {
        SC_SEL0 := 3'b111;
    }

    if ( CLK_D_P[1] --> CLK_U_P[1] )
    {
        SC_SEL1 := 3'b001;
    }

    if ( CLK_U_P[1] --> CLK_D_P[1] )
    {
        SC_SEL1 := 3'b010;
    }

    if ( CLK_M_P[1] --> CLK_U_P[1] )
    {
        SC_SEL1 := 3'b101;
    }

    if ( CLK_M_P[1] --> CLK_D_P[1] )
    {
        SC_SEL1 := 3'b110;
    }

    if ( CLK_M_P[1] --> CLK_U_P[1] && CLK_M_P[1] --> CLK_D_P[1] )
    {
        SC_SEL1 := 3'b111;
    }

    if ( CLK_D_P[2] --> CLK_U_P[2] )
    {
        SC_SEL2 := 3'b001;
    }

    if ( CLK_U_P[2] --> CLK_D_P[2] )
    {
        SC_SEL2 := 3'b010;
    }

    if ( CLK_M_P[2] --> CLK_U_P[2] )
    {
        SC_SEL2 := 3'b101;
    }

    if ( CLK_M_P[2] --> CLK_D_P[2] )
    {
        SC_SEL2 := 3'b110;
    }

    if ( CLK_M_P[2] --> CLK_U_P[2] && CLK_M_P[2] --> CLK_D_P[2] )
    {
        SC_SEL2 := 3'b111;
    }

    if ( CLK_D_P[3] --> CLK_U_P[3] )
    {
        SC_SEL3 := 3'b001;
    }

    if ( CLK_U_P[3] --> CLK_D_P[3] )
    {
        SC_SEL3 := 3'b010;
    }

    if ( CLK_M_P[3] --> CLK_U_P[3] )
    {
        SC_SEL3 := 3'b101;
    }

    if ( CLK_M_P[3] --> CLK_D_P[3] )
    {
        SC_SEL3 := 3'b110;
    }

    if ( CLK_M_P[3] --> CLK_U_P[3] && CLK_M_P[3] --> CLK_D_P[3] )
    {
        SC_SEL3 := 3'b111;
    }

};

//grid device configure body end

timing pllroute_tnl of PLLROUTE
{
    if (CP_SEL0 == 3'b000)
    {
        operator V_BUF CLK_U_P_0  port map (Z => CLK_U_P[0],  I => 1'bz);
        operator V_BUF CLK_D_P_0  port map (Z => CLK_D_P[0],  I => 1'bz);
    }
    else if (CP_SEL0 == 3'b001)
    {
        operator V_BUF CLK_U_P_0  port map (Z => CLK_U_P[0],  I => CLK_D_P[0]);
        operator V_BUF CLK_D_P_0  port map (Z => CLK_D_P[0],  I => 1'bz      );
    }
    else if (CP_SEL0 == 3'b010)
    {
        operator V_BUF CLK_U_P_0  port map (Z => CLK_U_P[0],  I => 1'bz      );
        operator V_BUF CLK_D_P_0  port map (Z => CLK_D_P[0],  I => CLK_U_P[0]);
    }
    else if (CP_SEL0 == 3'b011)
    {
        operator V_BUF CLK_U_P_0  port map (Z => CLK_U_P[0],  I => 1'bz);
        operator V_BUF CLK_D_P_0  port map (Z => CLK_D_P[0],  I => 1'bz);
    }
    else if (CP_SEL0 == 3'b100)
    {
        operator V_BUF CLK_U_P_0  port map (Z => CLK_U_P[0],  I => 1'bz);
        operator V_BUF CLK_D_P_0  port map (Z => CLK_D_P[0],  I => 1'bz);
    }
    else if (CP_SEL0 == 3'b101)
    {
        operator V_BUF CLK_U_P_0  port map (Z => CLK_U_P[0],  I => CLK_M_P[0]);
        operator V_BUF CLK_D_P_0  port map (Z => CLK_D_P[0],  I => 1'bz  );
    }
    else if (CP_SEL0 == 3'b110)
    {
        operator V_BUF CLK_U_P_0  port map (Z => CLK_U_P[0],  I => 1'bz      );
        operator V_BUF CLK_D_P_0  port map (Z => CLK_D_P[0],  I => CLK_M_P[0]);
    }
    else if (CP_SEL0 == 3'b111)
    {
        operator V_BUF CLK_U_P_0  port map (Z => CLK_U_P[0],  I => CLK_M_P[0]);
        operator V_BUF CLK_D_P_0  port map (Z => CLK_D_P[0],  I => CLK_M_P[0]);
    }
    else
    {
        operator V_BUF CLK_U_P_0  port map (Z => CLK_U_P[0],  I => 1'bz);
        operator V_BUF CLK_D_P_0  port map (Z => CLK_D_P[0],  I => 1'bz);
    }

    if (CP_SEL1 == 3'b000)
    {
        operator V_BUF CLK_U_P_1  port map (Z => CLK_U_P[1],  I => 1'bz);
        operator V_BUF CLK_D_P_1  port map (Z => CLK_D_P[1],  I => 1'bz);
    }
    else if (CP_SEL1 == 3'b001)
    {
        operator V_BUF CLK_U_P_1  port map (Z => CLK_U_P[1],  I => CLK_D_P[1]);
        operator V_BUF CLK_D_P_1  port map (Z => CLK_D_P[1],  I => 1'bz      );
    }
    else if (CP_SEL1 == 3'b010)
    {
        operator V_BUF CLK_U_P_1  port map (Z => CLK_U_P[1],  I => 1'bz      );
        operator V_BUF CLK_D_P_1  port map (Z => CLK_D_P[1],  I => CLK_U_P[1]);
    }
    else if (CP_SEL1 == 3'b011)
    {
        operator V_BUF CLK_U_P_1  port map (Z => CLK_U_P[1],  I => 1'bz);
        operator V_BUF CLK_D_P_1  port map (Z => CLK_D_P[1],  I => 1'bz);
    }
    else if (CP_SEL1 == 3'b100)
    {
        operator V_BUF CLK_U_P_1  port map (Z => CLK_U_P[1],  I => 1'bz);
        operator V_BUF CLK_D_P_1  port map (Z => CLK_D_P[1],  I => 1'bz);
    }
    else if (CP_SEL1 == 3'b101)
    {
        operator V_BUF CLK_U_P_1  port map (Z => CLK_U_P[1],  I => CLK_M_P[1]);
        operator V_BUF CLK_D_P_1  port map (Z => CLK_D_P[1],  I => 1'bz      );
    }
    else if (CP_SEL1 == 3'b110)
    {
        operator V_BUF CLK_U_P_1  port map (Z => CLK_U_P[1],  I => 1'bz      );
        operator V_BUF CLK_D_P_1  port map (Z => CLK_D_P[1],  I => CLK_M_P[1]);
    }
    else if (CP_SEL1 == 3'b111)
    {
        operator V_BUF CLK_U_P_1  port map (Z => CLK_U_P[1],  I => CLK_M_P[1]);
        operator V_BUF CLK_D_P_1  port map (Z => CLK_D_P[1],  I => CLK_M_P[1]);
    }
    else
    {
        operator V_BUF CLK_U_P_1  port map (Z => CLK_U_P[1],  I => 1'bz);
        operator V_BUF CLK_D_P_1  port map (Z => CLK_D_P[1],  I => 1'bz);
    }

    if (CP_SEL2 == 3'b000)
    {
        operator V_BUF CLK_U_P_2  port map (Z => CLK_U_P[2],  I => 1'bz);
        operator V_BUF CLK_D_P_2  port map (Z => CLK_D_P[2],  I => 1'bz);
    }
    else if (CP_SEL2 == 3'b001)
    {
        operator V_BUF CLK_U_P_2  port map (Z => CLK_U_P[2],  I => CLK_D_P[2]);
        operator V_BUF CLK_D_P_2  port map (Z => CLK_D_P[2],  I => 1'bz      );
    }
    else if (CP_SEL2 == 3'b010)
    {
        operator V_BUF CLK_U_P_2  port map (Z => CLK_U_P[2],  I => 1'bz      );
        operator V_BUF CLK_D_P_2  port map (Z => CLK_D_P[2],  I => CLK_U_P[2]);
    }
    else if (CP_SEL2 == 3'b011)
    {
        operator V_BUF CLK_U_P_2  port map (Z => CLK_U_P[2],  I => 1'bz);
        operator V_BUF CLK_D_P_2  port map (Z => CLK_D_P[2],  I => 1'bz);
    }
    else if (CP_SEL2 == 3'b100)
    {
        operator V_BUF CLK_U_P_2  port map (Z => CLK_U_P[2],  I => 1'bz);
        operator V_BUF CLK_D_P_2  port map (Z => CLK_D_P[2],  I => 1'bz);
    }
    else if (CP_SEL2 == 3'b101)
    {
        operator V_BUF CLK_U_P_2  port map (Z => CLK_U_P[2],  I => CLK_M_P[2]);
        operator V_BUF CLK_D_P_2  port map (Z => CLK_D_P[2],  I => 1'bz      );
    }
    else if (CP_SEL2 == 3'b110)
    {
        operator V_BUF CLK_U_P_2  port map (Z => CLK_U_P[2],  I => 1'bz      );
        operator V_BUF CLK_D_P_2  port map (Z => CLK_D_P[2],  I => CLK_M_P[2]);
    }
    else if (CP_SEL2 == 3'b111)
    {
        operator V_BUF CLK_U_P_2  port map (Z => CLK_U_P[2],  I => CLK_M_P[2]);
        operator V_BUF CLK_D_P_2  port map (Z => CLK_D_P[2],  I => CLK_M_P[2]);
    }
    else
    {
        operator V_BUF CLK_U_P_2  port map (Z => CLK_U_P[2],  I => 1'bz);
        operator V_BUF CLK_D_P_2  port map (Z => CLK_D_P[2],  I => 1'bz);
    }

    if (CP_SEL3 == 3'b000)
    {
        operator V_BUF CLK_U_P_3  port map (Z => CLK_U_P[3],  I => 1'bz);
        operator V_BUF CLK_D_P_3  port map (Z => CLK_D_P[3],  I => 1'bz);
    }
    else if (CP_SEL3 == 3'b001)
    {
        operator V_BUF CLK_U_P_3  port map (Z => CLK_U_P[3],  I => CLK_D_P[3]);
        operator V_BUF CLK_D_P_3  port map (Z => CLK_D_P[3],  I => 1'bz      );
    }
    else if (CP_SEL3 == 3'b010)
    {
        operator V_BUF CLK_U_P_3  port map (Z => CLK_U_P[3],  I => 1'bz      );
        operator V_BUF CLK_D_P_3  port map (Z => CLK_D_P[3],  I => CLK_U_P[3]);
    }
    else if (CP_SEL3 == 3'b011)
    {
        operator V_BUF CLK_U_P_3  port map (Z => CLK_U_P[3],  I => 1'bz);
        operator V_BUF CLK_D_P_3  port map (Z => CLK_D_P[3],  I => 1'bz);
    }
    else if (CP_SEL3 == 3'b100)
    {
        operator V_BUF CLK_U_P_3  port map (Z => CLK_U_P[3],  I => 1'bz);
        operator V_BUF CLK_D_P_3  port map (Z => CLK_D_P[3],  I => 1'bz);
    }
    else if (CP_SEL3 == 3'b101)
    {
        operator V_BUF CLK_U_P_3  port map (Z => CLK_U_P[3],  I => CLK_M_P[3]);
        operator V_BUF CLK_D_P_3  port map (Z => CLK_D_P[3],  I => 1'bz      );
    }
    else if (CP_SEL3 == 3'b110)
    {
        operator V_BUF CLK_U_P_3  port map (Z => CLK_U_P[3],  I => 1'bz      );
        operator V_BUF CLK_D_P_3  port map (Z => CLK_D_P[3],  I => CLK_M_P[3]);
    }
    else if (CP_SEL3 == 3'b111)
    {
        operator V_BUF CLK_U_P_3  port map (Z => CLK_U_P[3],  I => CLK_M_P[3]);
        operator V_BUF CLK_D_P_3  port map (Z => CLK_D_P[3],  I => CLK_M_P[3]);
    }
    else
    {
        operator V_BUF CLK_U_P_3  port map (Z => CLK_U_P[3],  I => 1'bz);
        operator V_BUF CLK_D_P_3  port map (Z => CLK_D_P[3],  I => 1'bz);
    }
};
