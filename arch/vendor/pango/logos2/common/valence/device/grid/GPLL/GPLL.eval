tarted
grid
device GPLL
{
    // grid_property_def_start
    // grid_property_def_end

    parameter
    (
        config bit CP_CLKIN_STASEL = 1'b0,
        config string CP_DYNSEL_ENABLE = "FALSE",
        config int CP_FEEDBK_SEL = 0,
        config int CP_CLKINORFB_DLYSEL = 0,
        config int CP_CLKINORFB_DLYSET = 0,
        config int CP_IDIV_RATIO = 1,
        config int CP_MDIV_RATIO = 1,
        config int CP_ODIV0_RATIO = 1,
        config int CP_ODIV1_RATIO = 1,
        config int CP_ODIV2_RATIO = 1,
        config int CP_ODIV3_RATIO = 1,
        config int CP_ODIV4_RATIO = 1,
        config int CP_ODIV5_RATIO = 1,
        config int CP_ODIV6_RATIO = 1,
        config int CP_FDIV_RATIO = 1,
        config int CP_ODIV0_DUTY = 2,
        config int CP_ODIV1_DUTY = 2,
        config int CP_ODIV2_DUTY = 2,
        config int CP_ODIV3_DUTY = 2,
        config int CP_ODIV4_DUTY = 2,
        config int CP_ODIV5_DUTY = 2,
        config int CP_ODIV6_DUTY = 2,
        config int CP_FDIV_DUTY = 2,
        config int CP_ODIV0_FPHASE = 0,
        config int CP_ODIV1_FPHASE = 0,
        config int CP_ODIV2_FPHASE = 0,
        config int CP_ODIV3_FPHASE = 0,
        config int CP_ODIV4_FPHASE = 0,
        config int CP_ODIV5_FPHASE = 0,
        config int CP_ODIV6_FPHASE = 0,
        config int CP_FDIV_FPHASE = 0,
        config int CP_ODIV0_CPHASE = 0,
        config int CP_ODIV1_CPHASE = 0,
        config int CP_ODIV2_CPHASE = 0,
        config int CP_ODIV3_CPHASE = 0,
        config int CP_ODIV4_CPHASE = 0,
        config int CP_ODIV5_CPHASE = 0,
        config int CP_ODIV6_CPHASE = 0,
        config int CP_FDIV_CPHASE = 0,
        config int CP_ODIV0_DPSORCAS_SEL = 0,
        config int CP_ODIV1_DPSORCAS_SEL = 0,
        config int CP_ODIV2_DPSORCAS_SEL = 0,
        config int CP_ODIV3_DPSORCAS_SEL = 0,
        config int CP_ODIV4_DPSORCAS_SEL = 0,
        config int CP_ODIV5_DPSORCAS_SEL = 0,
        config int CP_ODIV6_DPSORCAS_SEL = 0,
        config int CP_FDIV_DPSORCAS_SEL = 0,
        config string CP_ODIV0_MUXSEL_EN = "TRUE",
        config string CP_ODIV1_MUXSEL_EN = "TRUE",
        config string CP_ODIV2_MUXSEL_EN = "TRUE",
        config string CP_ODIV3_MUXSEL_EN = "TRUE",
        config string CP_ODIV4_MUXSEL_EN = "TRUE",
        config string CP_ODIV5_MUXSEL_EN = "TRUE",
        config string CP_ODIV6_MUXSEL_EN = "TRUE",
        config string CP_FDIV_MUXSEL_EN = "TRUE",
        config string CP_ODIV0_FRACDIV_EN = "TRUE",
        config int CP_ODIV0_FRACDIV_RATIO = 0,
        config int CP_ODIV0_FRACDIV_PSOFFSET = 0,
        config int CP_ODIV0_ADJUST = 0,
        config string CP_FDIV_FRACDIV_EN = "FALSE",
        config int CP_FDIV_FRACDIV_RATIO = 0,
        config int CP_FDIV_FRACDIV_PSOFFSET = 0,
        config int CP_FDIV_ADJUST = 0,
        config string CP_SSC_MODE_EN = "FALSE",
        config int CP_SSC_CLKGEN_EN = 0,
        config int CP_SSC_DIV_RATIO = 0,
        config int CP_SSC_DIV_DELAY = 0,
        config string CP_CLKOUT0_GATE_EN = "FALSE",
        config string CP_CLKOUT1_GATE_EN = "FALSE",
        config string CP_CLKOUT2_GATE_EN = "FALSE",
        config string CP_CLKOUT3_GATE_EN = "FALSE",
        config string CP_CLKOUT4_GATE_EN = "FALSE",
        config string CP_CLKOUT5_GATE_EN = "FALSE",
        config string CP_CLKOUT6_GATE_EN = "FALSE",
        config string CP_CLKFBOUT_GATE_EN = "FALSE",
        config string CP_PLL_USE_APB = "FALSE",
        config string CP_PFDEN_ENABLE = "FALSE",
        config int CP_PFD_DEADZONE = 0,
        config string CP_FREQDETECT_EN = "TRUE",
        config bit CP_FREQDETECT_BYPASSR_EXT = 1'b0,
        config string CP_FREQDETECT_BYPASSREXT_EN = "FALSE",
        config bit CP_FREQ_LOCKDET_RSTNCTRL = 1'b1,
        config int CP_FREQ_LOCKDET_SET = 0,
        config bit CP_FREQ_LOCKDET_MODE_SEL = 1'b0,
        config string CP_LOCK_FILTER_PD = "TRUE",
        config int CP_PFDTOP_LSTEST_SEL = 0,
        config bit CP_PFDTOP_CLKTEST_SEL = 1'b0,
        config string CP_PFDTOP_CLKTEST_EN = "FALSE",
        config string CP_GLOGEN_ENABLE = "TRUE",
        config string CP_PLL_PWD_ENABLE = "FALSE",
        config string CP_PLL_RST_ENABLE = "FALSE",
        config string CP_LDO_R_BYPASS_ENABLE = "FALSE",
        config int CP_DLDO_VREF_ADJ = 0,
        config int CP_DLDO_VREF_SEL = 10,
        config bit CP_DLDO_LOAD_CTRL = 1'b0,
        config int CP_DLDO_TEST = 0,
        config string CP_DLDO_TEST_EN = "FALSE",
        config int CP_ALDO_VREF_ADJ = 0,
        config int CP_ALDO_VREF_SEL = 10,
        config bit CP_ALDO_LOAD_CTRL = 1'b0,
        config int CP_ALDO_LPF_ADJ = 0,
        config int CP_ALDO_TEST = 0,
        config string CP_ALDO_TEST_EN = "FALSE",
        config int CP_CP_SELFBIAS_SEL = 0,
        config int CP_ICP_BASE_SEL = 0,
        config int CP_CP_CUR_SEL = 0,
        config int CP_LPF_R = 0,
        config bit CP_LPF_C = 1'b0,
        config int CP_VCTRL_INIT = 0,
        config string CP_GPLL_VCTRL_TEST_EN = "FALSE",
        config int CP_QPS_PI_EN = 15,
        config int CP_DPS_PI_EN = 15,
        config int CP_PI_CTL_INIT = 0,
        config int CP_DPS_SEL_INIT = 0,
        config int CP_GPLL_DCTEST_SEL = 0
    );
    port
    (
// configuration_body_def_on


    config input SC_CLKIN_STASEL = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CLKIN_STASEL" */,

    config input SC_DYNSEL_ENABLE = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DYNSEL_ENABLE" */,

    config input SC_FEEDBK_SEL[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FEEDBK_SEL[3],SC_FEEDBK_SEL[2],SC_FEEDBK_SEL[1],SC_FEEDBK_SEL[0]" */,

    config input SC_CLKINORFB_DLYSEL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CLKINORFB_DLYSEL[1],SC_CLKINORFB_DLYSEL[0]" */,

    config input SC_CLKINORFB_DLYSET[5:0] = 6'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CLKINORFB_DLYSET[5],SC_CLKINORFB_DLYSET[4],SC_CLKINORFB_DLYSET[3],SC_CLKINORFB_DLYSET[2],SC_CLKINORFB_DLYSET[1],SC_CLKINORFB_DLYSET[0]" */,

    config input SC_IDIV_RATIO[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_IDIV_RATIO[7],SC_IDIV_RATIO[6],SC_IDIV_RATIO[5],SC_IDIV_RATIO[4],SC_IDIV_RATIO[3],SC_IDIV_RATIO[2],SC_IDIV_RATIO[1],SC_IDIV_RATIO[0]" */,

    config input SC_MDIV_RATIO[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_MDIV_RATIO[7],SC_MDIV_RATIO[6],SC_MDIV_RATIO[5],SC_MDIV_RATIO[4],SC_MDIV_RATIO[3],SC_MDIV_RATIO[2],SC_MDIV_RATIO[1],SC_MDIV_RATIO[0]" */,

    config input SC_ODIV0_RATIO[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV0_RATIO[7],SC_ODIV0_RATIO[6],SC_ODIV0_RATIO[5],SC_ODIV0_RATIO[4],SC_ODIV0_RATIO[3],SC_ODIV0_RATIO[2],SC_ODIV0_RATIO[1],SC_ODIV0_RATIO[0]" */,

    config input SC_ODIV1_RATIO[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV1_RATIO[7],SC_ODIV1_RATIO[6],SC_ODIV1_RATIO[5],SC_ODIV1_RATIO[4],SC_ODIV1_RATIO[3],SC_ODIV1_RATIO[2],SC_ODIV1_RATIO[1],SC_ODIV1_RATIO[0]" */,

    config input SC_ODIV2_RATIO[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV2_RATIO[7],SC_ODIV2_RATIO[6],SC_ODIV2_RATIO[5],SC_ODIV2_RATIO[4],SC_ODIV2_RATIO[3],SC_ODIV2_RATIO[2],SC_ODIV2_RATIO[1],SC_ODIV2_RATIO[0]" */,

    config input SC_ODIV3_RATIO[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV3_RATIO[7],SC_ODIV3_RATIO[6],SC_ODIV3_RATIO[5],SC_ODIV3_RATIO[4],SC_ODIV3_RATIO[3],SC_ODIV3_RATIO[2],SC_ODIV3_RATIO[1],SC_ODIV3_RATIO[0]" */,

    config input SC_ODIV4_RATIO[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV4_RATIO[7],SC_ODIV4_RATIO[6],SC_ODIV4_RATIO[5],SC_ODIV4_RATIO[4],SC_ODIV4_RATIO[3],SC_ODIV4_RATIO[2],SC_ODIV4_RATIO[1],SC_ODIV4_RATIO[0]" */,

    config input SC_ODIV5_RATIO[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV5_RATIO[7],SC_ODIV5_RATIO[6],SC_ODIV5_RATIO[5],SC_ODIV5_RATIO[4],SC_ODIV5_RATIO[3],SC_ODIV5_RATIO[2],SC_ODIV5_RATIO[1],SC_ODIV5_RATIO[0]" */,

    config input SC_ODIV6_RATIO[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV6_RATIO[7],SC_ODIV6_RATIO[6],SC_ODIV6_RATIO[5],SC_ODIV6_RATIO[4],SC_ODIV6_RATIO[3],SC_ODIV6_RATIO[2],SC_ODIV6_RATIO[1],SC_ODIV6_RATIO[0]" */,

    config input SC_FDIV_RATIO[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FDIV_RATIO[7],SC_FDIV_RATIO[6],SC_FDIV_RATIO[5],SC_FDIV_RATIO[4],SC_FDIV_RATIO[3],SC_FDIV_RATIO[2],SC_FDIV_RATIO[1],SC_FDIV_RATIO[0]" */,

    config input SC_ODIV0_DUTY[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV0_DUTY[7],SC_ODIV0_DUTY[6],SC_ODIV0_DUTY[5],SC_ODIV0_DUTY[4],SC_ODIV0_DUTY[3],SC_ODIV0_DUTY[2],SC_ODIV0_DUTY[1],SC_ODIV0_DUTY[0]" */,

    config input SC_ODIV1_DUTY[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV1_DUTY[7],SC_ODIV1_DUTY[6],SC_ODIV1_DUTY[5],SC_ODIV1_DUTY[4],SC_ODIV1_DUTY[3],SC_ODIV1_DUTY[2],SC_ODIV1_DUTY[1],SC_ODIV1_DUTY[0]" */,

    config input SC_ODIV2_DUTY[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV2_DUTY[7],SC_ODIV2_DUTY[6],SC_ODIV2_DUTY[5],SC_ODIV2_DUTY[4],SC_ODIV2_DUTY[3],SC_ODIV2_DUTY[2],SC_ODIV2_DUTY[1],SC_ODIV2_DUTY[0]" */,

    config input SC_ODIV3_DUTY[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV3_DUTY[7],SC_ODIV3_DUTY[6],SC_ODIV3_DUTY[5],SC_ODIV3_DUTY[4],SC_ODIV3_DUTY[3],SC_ODIV3_DUTY[2],SC_ODIV3_DUTY[1],SC_ODIV3_DUTY[0]" */,

    config input SC_ODIV4_DUTY[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV4_DUTY[7],SC_ODIV4_DUTY[6],SC_ODIV4_DUTY[5],SC_ODIV4_DUTY[4],SC_ODIV4_DUTY[3],SC_ODIV4_DUTY[2],SC_ODIV4_DUTY[1],SC_ODIV4_DUTY[0]" */,

    config input SC_ODIV5_DUTY[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV5_DUTY[7],SC_ODIV5_DUTY[6],SC_ODIV5_DUTY[5],SC_ODIV5_DUTY[4],SC_ODIV5_DUTY[3],SC_ODIV5_DUTY[2],SC_ODIV5_DUTY[1],SC_ODIV5_DUTY[0]" */,

    config input SC_ODIV6_DUTY[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV6_DUTY[7],SC_ODIV6_DUTY[6],SC_ODIV6_DUTY[5],SC_ODIV6_DUTY[4],SC_ODIV6_DUTY[3],SC_ODIV6_DUTY[2],SC_ODIV6_DUTY[1],SC_ODIV6_DUTY[0]" */,

    config input SC_FDIV_DUTY[7:0] = 8'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FDIV_DUTY[7],SC_FDIV_DUTY[6],SC_FDIV_DUTY[5],SC_FDIV_DUTY[4],SC_FDIV_DUTY[3],SC_FDIV_DUTY[2],SC_FDIV_DUTY[1],SC_FDIV_DUTY[0]" */,

    config input SC_ODIV0_FPHASE[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV0_FPHASE[2],SC_ODIV0_FPHASE[1],SC_ODIV0_FPHASE[0]" */,

    config input SC_ODIV1_FPHASE[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV1_FPHASE[2],SC_ODIV1_FPHASE[1],SC_ODIV1_FPHASE[0]" */,

    config input SC_ODIV2_FPHASE[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV2_FPHASE[2],SC_ODIV2_FPHASE[1],SC_ODIV2_FPHASE[0]" */,

    config input SC_ODIV3_FPHASE[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV3_FPHASE[2],SC_ODIV3_FPHASE[1],SC_ODIV3_FPHASE[0]" */,

    config input SC_ODIV4_FPHASE[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV4_FPHASE[2],SC_ODIV4_FPHASE[1],SC_ODIV4_FPHASE[0]" */,

    config input SC_ODIV5_FPHASE[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV5_FPHASE[2],SC_ODIV5_FPHASE[1],SC_ODIV5_FPHASE[0]" */,

    config input SC_ODIV6_FPHASE[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV6_FPHASE[2],SC_ODIV6_FPHASE[1],SC_ODIV6_FPHASE[0]" */,

    config input SC_FDIV_FPHASE[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FDIV_FPHASE[2],SC_FDIV_FPHASE[1],SC_FDIV_FPHASE[0]" */,

    config input SC_ODIV0_CPHASE[6:0] = 7'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV0_CPHASE[6],SC_ODIV0_CPHASE[5],SC_ODIV0_CPHASE[4],SC_ODIV0_CPHASE[3],SC_ODIV0_CPHASE[2],SC_ODIV0_CPHASE[1],SC_ODIV0_CPHASE[0]" */,

    config input SC_ODIV1_CPHASE[6:0] = 7'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV1_CPHASE[6],SC_ODIV1_CPHASE[5],SC_ODIV1_CPHASE[4],SC_ODIV1_CPHASE[3],SC_ODIV1_CPHASE[2],SC_ODIV1_CPHASE[1],SC_ODIV1_CPHASE[0]" */,

    config input SC_ODIV2_CPHASE[6:0] = 7'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV2_CPHASE[6],SC_ODIV2_CPHASE[5],SC_ODIV2_CPHASE[4],SC_ODIV2_CPHASE[3],SC_ODIV2_CPHASE[2],SC_ODIV2_CPHASE[1],SC_ODIV2_CPHASE[0]" */,

    config input SC_ODIV3_CPHASE[6:0] = 7'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV3_CPHASE[6],SC_ODIV3_CPHASE[5],SC_ODIV3_CPHASE[4],SC_ODIV3_CPHASE[3],SC_ODIV3_CPHASE[2],SC_ODIV3_CPHASE[1],SC_ODIV3_CPHASE[0]" */,

    config input SC_ODIV4_CPHASE[6:0] = 7'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV4_CPHASE[6],SC_ODIV4_CPHASE[5],SC_ODIV4_CPHASE[4],SC_ODIV4_CPHASE[3],SC_ODIV4_CPHASE[2],SC_ODIV4_CPHASE[1],SC_ODIV4_CPHASE[0]" */,

    config input SC_ODIV5_CPHASE[6:0] = 7'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV5_CPHASE[6],SC_ODIV5_CPHASE[5],SC_ODIV5_CPHASE[4],SC_ODIV5_CPHASE[3],SC_ODIV5_CPHASE[2],SC_ODIV5_CPHASE[1],SC_ODIV5_CPHASE[0]" */,

    config input SC_ODIV6_CPHASE[6:0] = 7'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV6_CPHASE[6],SC_ODIV6_CPHASE[5],SC_ODIV6_CPHASE[4],SC_ODIV6_CPHASE[3],SC_ODIV6_CPHASE[2],SC_ODIV6_CPHASE[1],SC_ODIV6_CPHASE[0]" */,

    config input SC_FDIV_CPHASE[6:0] = 7'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FDIV_CPHASE[6],SC_FDIV_CPHASE[5],SC_FDIV_CPHASE[4],SC_FDIV_CPHASE[3],SC_FDIV_CPHASE[2],SC_FDIV_CPHASE[1],SC_FDIV_CPHASE[0]" */,

    config input SC_ODIV0_DPSORCAS_SEL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV0_DPSORCAS_SEL[1],SC_ODIV0_DPSORCAS_SEL[0]" */,

    config input SC_ODIV1_DPSORCAS_SEL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV1_DPSORCAS_SEL[1],SC_ODIV1_DPSORCAS_SEL[0]" */,

    config input SC_ODIV2_DPSORCAS_SEL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV2_DPSORCAS_SEL[1],SC_ODIV2_DPSORCAS_SEL[0]" */,

    config input SC_ODIV3_DPSORCAS_SEL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV3_DPSORCAS_SEL[1],SC_ODIV3_DPSORCAS_SEL[0]" */,

    config input SC_ODIV4_DPSORCAS_SEL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV4_DPSORCAS_SEL[1],SC_ODIV4_DPSORCAS_SEL[0]" */,

    config input SC_ODIV5_DPSORCAS_SEL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV5_DPSORCAS_SEL[1],SC_ODIV5_DPSORCAS_SEL[0]" */,

    config input SC_ODIV6_DPSORCAS_SEL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV6_DPSORCAS_SEL[1],SC_ODIV6_DPSORCAS_SEL[0]" */,

    config input SC_FDIV_DPSORCAS_SEL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FDIV_DPSORCAS_SEL[1],SC_FDIV_DPSORCAS_SEL[0]" */,

    config input SC_ODIV0_MUXSEL_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV0_MUXSEL_EN" */,

    config input SC_ODIV1_MUXSEL_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV1_MUXSEL_EN" */,

    config input SC_ODIV2_MUXSEL_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV2_MUXSEL_EN" */,

    config input SC_ODIV3_MUXSEL_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV3_MUXSEL_EN" */,

    config input SC_ODIV4_MUXSEL_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV4_MUXSEL_EN" */,

    config input SC_ODIV5_MUXSEL_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV5_MUXSEL_EN" */,

    config input SC_ODIV6_MUXSEL_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV6_MUXSEL_EN" */,

    config input SC_FDIV_MUXSEL_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FDIV_MUXSEL_EN" */,

    config input SC_ODIV0_FRACDIV_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV0_FRACDIV_EN" */,

    config input SC_ODIV0_FRACDIV_RATIO[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV0_FRACDIV_RATIO[2],SC_ODIV0_FRACDIV_RATIO[1],SC_ODIV0_FRACDIV_RATIO[0]" */,

    config input SC_ODIV0_FRACDIV_PSOFFSET[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV0_FRACDIV_PSOFFSET[2],SC_ODIV0_FRACDIV_PSOFFSET[1],SC_ODIV0_FRACDIV_PSOFFSET[0]" */,

    config input SC_ODIV0_ADJUST[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ODIV0_ADJUST[1],SC_ODIV0_ADJUST[0]" */,

    config input SC_FDIV_FRACDIV_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FDIV_FRACDIV_EN" */,

    config input SC_FDIV_FRACDIV_RATIO[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FDIV_FRACDIV_RATIO[2],SC_FDIV_FRACDIV_RATIO[1],SC_FDIV_FRACDIV_RATIO[0]" */,

    config input SC_FDIV_FRACDIV_PSOFFSET[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FDIV_FRACDIV_PSOFFSET[2],SC_FDIV_FRACDIV_PSOFFSET[1],SC_FDIV_FRACDIV_PSOFFSET[0]" */,

    config input SC_FDIV_ADJUST[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FDIV_ADJUST[1],SC_FDIV_ADJUST[0]" */,

    config input SC_SSC_MODE_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_SSC_MODE_EN" */,

    config input SC_SSC_CLKGEN_EN[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_SSC_CLKGEN_EN[1],SC_SSC_CLKGEN_EN[0]" */,

    config input SC_SSC_DIV_RATIO[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_SSC_DIV_RATIO[2],SC_SSC_DIV_RATIO[1],SC_SSC_DIV_RATIO[0]" */,

    config input SC_SSC_DIV_DELAY[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_SSC_DIV_DELAY[2],SC_SSC_DIV_DELAY[1],SC_SSC_DIV_DELAY[0]" */,

    config input SC_CLKOUT0_GATE_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CLKOUT0_GATE_EN" */,

    config input SC_CLKOUT1_GATE_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CLKOUT1_GATE_EN" */,

    config input SC_CLKOUT2_GATE_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CLKOUT2_GATE_EN" */,

    config input SC_CLKOUT3_GATE_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CLKOUT3_GATE_EN" */,

    config input SC_CLKOUT4_GATE_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CLKOUT4_GATE_EN" */,

    config input SC_CLKOUT5_GATE_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CLKOUT5_GATE_EN" */,

    config input SC_CLKOUT6_GATE_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CLKOUT6_GATE_EN" */,

    config input SC_CLKFBOUT_GATE_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CLKFBOUT_GATE_EN" */,

    config input SC_PLL_USE_APB = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PLL_USE_APB" */,

    config input SC_PFDEN_ENABLE = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PFDEN_ENABLE" */,

    config input SC_PFD_DEADZONE[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PFD_DEADZONE[1],SC_PFD_DEADZONE[0]" */,

    config input SC_FREQDETECT_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FREQDETECT_EN" */,

    config input SC_FREQDETECT_BYPASSR_EXT = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FREQDETECT_BYPASSR_EXT" */,

    config input SC_FREQDETECT_BYPASSREXT_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FREQDETECT_BYPASSREXT_EN" */,

    config input SC_FREQ_LOCKDET_RSTNCTRL = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FREQ_LOCKDET_RSTNCTRL" */,

    config input SC_FREQ_LOCKDET_SET[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FREQ_LOCKDET_SET[4],SC_FREQ_LOCKDET_SET[3],SC_FREQ_LOCKDET_SET[2],SC_FREQ_LOCKDET_SET[1],SC_FREQ_LOCKDET_SET[0]" */,

    config input SC_LOCK_FILTER_PD = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_LOCK_FILTER_PD" */,

    config input SC_FREQ_LOCKDET_MODE_SEL = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_FREQ_LOCKDET_MODE_SEL" */,

    config input SC_PFDTOP_LSTEST_SEL[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PFDTOP_LSTEST_SEL[2],SC_PFDTOP_LSTEST_SEL[1],SC_PFDTOP_LSTEST_SEL[0]" */,

    config input SC_PFDTOP_CLKTEST_SEL = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PFDTOP_CLKTEST_SEL" */,

    config input SC_PFDTOP_CLKTEST_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PFDTOP_CLKTEST_EN" */,

    config input SC_GLOGEN_ENABLE = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_GLOGEN_ENABLE" */,

    config input SC_PLL_PWD_ENABLE = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PLL_PWD_ENABLE" */,

    config input SC_PLL_RST_ENABLE = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PLL_RST_ENABLE" */,

    config input SC_LDO_R_BYPASS_ENABLE = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_LDO_R_BYPASS_ENABLE" */,

    config input SC_DLDO_VREF_ADJ[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DLDO_VREF_ADJ[2],SC_DLDO_VREF_ADJ[1],SC_DLDO_VREF_ADJ[0]" */,

    config input SC_DLDO_VREF_SEL[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DLDO_VREF_SEL[3],SC_DLDO_VREF_SEL[2],SC_DLDO_VREF_SEL[1],SC_DLDO_VREF_SEL[0]" */,

    config input SC_DLDO_LOAD_CTRL = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DLDO_LOAD_CTRL" */,

    config input SC_DLDO_TEST[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DLDO_TEST[1],SC_DLDO_TEST[0]" */,

    config input SC_DLDO_TEST_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DLDO_TEST_EN" */,

    config input SC_ALDO_VREF_ADJ[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ALDO_VREF_ADJ[2],SC_ALDO_VREF_ADJ[1],SC_ALDO_VREF_ADJ[0]" */,

    config input SC_ALDO_VREF_SEL[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ALDO_VREF_SEL[3],SC_ALDO_VREF_SEL[2],SC_ALDO_VREF_SEL[1],SC_ALDO_VREF_SEL[0]" */,

    config input SC_ALDO_LOAD_CTRL = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ALDO_LOAD_CTRL" */,

    config input SC_ALDO_LPF_ADJ[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ALDO_LPF_ADJ[1],SC_ALDO_LPF_ADJ[0]" */,

    config input SC_ALDO_TEST[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ALDO_TEST[1],SC_ALDO_TEST[0]" */,

    config input SC_ALDO_TEST_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ALDO_TEST_EN" */,

    config input SC_CP_SELFBIAS_SEL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CP_SELFBIAS_SEL[1],SC_CP_SELFBIAS_SEL[0]" */,

    config input SC_ICP_BASE_SEL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_ICP_BASE_SEL[1],SC_ICP_BASE_SEL[0]" */,

    config input SC_CP_CUR_SEL[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CP_CUR_SEL[3],SC_CP_CUR_SEL[2],SC_CP_CUR_SEL[1],SC_CP_CUR_SEL[0]" */,

    config input SC_LPF_R[2:0] = 3'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_LPF_R[2],SC_LPF_R[1],SC_LPF_R[0]" */,

    config input SC_LPF_C = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_LPF_C" */,

    config input SC_VCTRL_INIT[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_VCTRL_INIT[1],SC_VCTRL_INIT[0]" */,

    config input SC_GPLL_VCTRL_TEST_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_GPLL_VCTRL_TEST_EN" */,

    config input SC_QPS_PI_EN[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_QPS_PI_EN[3],SC_QPS_PI_EN[2],SC_QPS_PI_EN[1],SC_QPS_PI_EN[0]" */,

    config input SC_DPS_PI_EN[3:0] = 4'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DPS_PI_EN[3],SC_DPS_PI_EN[2],SC_DPS_PI_EN[1],SC_DPS_PI_EN[0]" */,

    config input SC_PI_CTL_INIT[6:0] = 7'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_PI_CTL_INIT[6],SC_PI_CTL_INIT[5],SC_PI_CTL_INIT[4],SC_PI_CTL_INIT[3],SC_PI_CTL_INIT[2],SC_PI_CTL_INIT[1],SC_PI_CTL_INIT[0]" */,

    config input SC_DPS_SEL_INIT[4:0] = 5'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_DPS_SEL_INIT[4],SC_DPS_SEL_INIT[3],SC_DPS_SEL_INIT[2],SC_DPS_SEL_INIT[1],SC_DPS_SEL_INIT[0]" */,

    config input SC_GPLL_DCTEST_SEL[1:0] = 2'h0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_GPLL_DCTEST_SEL[1],SC_GPLL_DCTEST_SEL[0]" */,

// configuration_body_def_end

        input PADDR[4:0] = 5'b1111_1,
        input PWDATA[15:0] = 16'b1111_1111_1111_1111,
        input CLK_IN0 = 1'b1,
        input CLK_IN1 = 1'b1,
        input DYNSEL_CLKIN = 1'b1,
        input CLK_FB = 1'b1,
        input DPS_CLK = 1'b1,
        input DPS_EN = 1'b1,
        input DPS_DIR = 1'b1,
        input PLL_PWD = 1'b1,
        input PLL_RST = 1'b1,
        input PFDEN = 1'b1,
        input LOCKIN_CAS = 1'b1,
        input CLKOUT0_GATE = 1'b1,
        input CLKOUT1_GATE = 1'b1,
        input CLKOUT2_GATE = 1'b1,
        input CLKOUT3_GATE = 1'b1,
        input CLKOUT4_GATE = 1'b1,
        input CLKOUT5_GATE = 1'b1,
        input CLKOUT6_GATE = 1'b1,
        input CLKFBOUT_GATE = 1'b1,
        input PCLK = 1'b1,
        input PRESETN = 1'b1,
        input PSEL = 1'b1,
        input PENABLE = 1'b1,
        input PWRITE = 1'b1,
        input TEST_MODE_N = 1'b1,
        input TEST_CLK = 1'b1,
        input TEST_SE_N = 1'b1,
        input TEST_RSTN = 1'b1,
        input TEST_SI = 1'b1,
        output PRDATA[15:0],
        output CLKOUT0,
        output CLKOUT0N,
        output CLKOUT1,
        output CLKOUT1N,
        output CLKOUT2,
        output CLKOUT2N,
        output CLKOUT3,
        output CLKOUT3N,
        output CLKOUT4,
        output CLKOUT5,
        output CLKOUT6,
        output CLKFBOUT,
        output CLKFBOUTN,
        output PLL_LOCK,
        output LOCKOUT_CAS,
        output DPS_DONE,
        output PLL_LS_TEST,
        output PFDTOP_CLK_TEST,
        output PREADY,
        output TEST_SO
    );
};
//grid device end

//grid device structure netlist started
structure netlist of GPLL
{
};
//grid device structure netlist end
//grid device configure body started

configuration cfg of GPLL
{

 // assign config body begin
    SC_CLKIN_STASEL  :=  CP_CLKIN_STASEL;
    SC_FEEDBK_SEL          :=  CP_FEEDBK_SEL;
    SC_CLKINORFB_DLYSEL    :=  CP_CLKINORFB_DLYSEL;
    SC_CLKINORFB_DLYSET    :=  CP_CLKINORFB_DLYSET;
    SC_IDIV_RATIO          :=  CP_IDIV_RATIO;
    SC_MDIV_RATIO          :=  CP_MDIV_RATIO;
    SC_ODIV0_RATIO         :=  CP_ODIV0_RATIO;
    SC_ODIV1_RATIO         :=  CP_ODIV1_RATIO;
    SC_ODIV2_RATIO         :=  CP_ODIV2_RATIO;
    SC_ODIV3_RATIO         :=  CP_ODIV3_RATIO;
    SC_ODIV4_RATIO         :=  CP_ODIV4_RATIO;
    SC_ODIV5_RATIO         :=  CP_ODIV5_RATIO;
    SC_ODIV6_RATIO         :=  CP_ODIV6_RATIO;
    SC_FDIV_RATIO          :=  CP_FDIV_RATIO;
    SC_ODIV0_DUTY          :=  CP_ODIV0_DUTY;
    SC_ODIV1_DUTY          :=  CP_ODIV1_DUTY;
    SC_ODIV2_DUTY          :=  CP_ODIV2_DUTY;
    SC_ODIV3_DUTY          :=  CP_ODIV3_DUTY;
    SC_ODIV4_DUTY          :=  CP_ODIV4_DUTY;
    SC_ODIV5_DUTY          :=  CP_ODIV5_DUTY;
    SC_ODIV6_DUTY          :=  CP_ODIV6_DUTY;
    SC_FDIV_DUTY           :=  CP_FDIV_DUTY;
    SC_ODIV0_FPHASE        :=  CP_ODIV0_FPHASE;
    SC_ODIV1_FPHASE        :=  CP_ODIV1_FPHASE;
    SC_ODIV2_FPHASE        :=  CP_ODIV2_FPHASE;
    SC_ODIV3_FPHASE        :=  CP_ODIV3_FPHASE;
    SC_ODIV4_FPHASE        :=  CP_ODIV4_FPHASE;
    SC_ODIV5_FPHASE        :=  CP_ODIV5_FPHASE;
    SC_ODIV6_FPHASE        :=  CP_ODIV6_FPHASE;
    SC_FDIV_FPHASE         :=  CP_FDIV_FPHASE;
    SC_ODIV0_CPHASE        :=  CP_ODIV0_CPHASE;
    SC_ODIV1_CPHASE        :=  CP_ODIV1_CPHASE;
    SC_ODIV2_CPHASE        :=  CP_ODIV2_CPHASE;
    SC_ODIV3_CPHASE        :=  CP_ODIV3_CPHASE;
    SC_ODIV4_CPHASE        :=  CP_ODIV4_CPHASE;
    SC_ODIV5_CPHASE        :=  CP_ODIV5_CPHASE;
    SC_ODIV6_CPHASE        :=  CP_ODIV6_CPHASE;
    SC_FDIV_CPHASE         :=  CP_FDIV_CPHASE;
    SC_ODIV0_DPSORCAS_SEL  :=  CP_ODIV0_DPSORCAS_SEL;
    SC_ODIV1_DPSORCAS_SEL  :=  CP_ODIV1_DPSORCAS_SEL;
    SC_ODIV2_DPSORCAS_SEL  :=  CP_ODIV2_DPSORCAS_SEL;
    SC_ODIV3_DPSORCAS_SEL  :=  CP_ODIV3_DPSORCAS_SEL;
    SC_ODIV4_DPSORCAS_SEL  :=  CP_ODIV4_DPSORCAS_SEL;
    SC_ODIV5_DPSORCAS_SEL  :=  CP_ODIV5_DPSORCAS_SEL;
    SC_ODIV6_DPSORCAS_SEL  :=  CP_ODIV6_DPSORCAS_SEL;
    SC_FDIV_DPSORCAS_SEL   :=  CP_FDIV_DPSORCAS_SEL;
    SC_ODIV0_FRACDIV_RATIO     :=  CP_ODIV0_FRACDIV_RATIO;
    SC_ODIV0_FRACDIV_PSOFFSET  :=  CP_ODIV0_FRACDIV_PSOFFSET;
    SC_ODIV0_ADJUST            :=  CP_ODIV0_ADJUST;
    SC_FDIV_FRACDIV_RATIO     :=  CP_FDIV_FRACDIV_RATIO;
    SC_FDIV_FRACDIV_PSOFFSET  :=  CP_FDIV_FRACDIV_PSOFFSET;
    SC_FDIV_ADJUST            :=  CP_FDIV_ADJUST;
    SC_SSC_CLKGEN_EN  :=  CP_SSC_CLKGEN_EN;
    SC_SSC_DIV_RATIO  :=  CP_SSC_DIV_RATIO;
    SC_SSC_DIV_DELAY  :=  CP_SSC_DIV_DELAY;
    SC_PFD_DEADZONE  :=  CP_PFD_DEADZONE;
    SC_FREQDETECT_BYPASSR_EXT  :=  CP_FREQDETECT_BYPASSR_EXT;
    SC_FREQ_LOCKDET_RSTNCTRL  :=  CP_FREQ_LOCKDET_RSTNCTRL;
    SC_FREQ_LOCKDET_SET       :=  CP_FREQ_LOCKDET_SET;
    SC_FREQ_LOCKDET_MODE_SEL  :=  CP_FREQ_LOCKDET_MODE_SEL;
    SC_PFDTOP_LSTEST_SEL      :=  CP_PFDTOP_LSTEST_SEL;
    SC_PFDTOP_CLKTEST_SEL     :=  CP_PFDTOP_CLKTEST_SEL;
    SC_DLDO_VREF_ADJ   :=  CP_DLDO_VREF_ADJ;
    SC_DLDO_VREF_SEL   :=  CP_DLDO_VREF_SEL;
    SC_DLDO_LOAD_CTRL  :=  CP_DLDO_LOAD_CTRL;
    SC_DLDO_TEST       :=  CP_DLDO_TEST;
    SC_ALDO_VREF_ADJ   :=  CP_ALDO_VREF_ADJ;
    SC_ALDO_VREF_SEL   :=  CP_ALDO_VREF_SEL;
    SC_ALDO_LOAD_CTRL  :=  CP_ALDO_LOAD_CTRL;
    SC_ALDO_LPF_ADJ    :=  CP_ALDO_LPF_ADJ;
    SC_ALDO_TEST       :=  CP_ALDO_TEST;
    SC_CP_SELFBIAS_SEL  :=  CP_CP_SELFBIAS_SEL;
    SC_ICP_BASE_SEL     :=  CP_ICP_BASE_SEL;
    SC_CP_CUR_SEL       :=  CP_CP_CUR_SEL;
    SC_LPF_R            :=  CP_LPF_R;
    SC_LPF_C            :=  CP_LPF_C;
    SC_VCTRL_INIT       :=  CP_VCTRL_INIT;
    SC_QPS_PI_EN        :=  CP_QPS_PI_EN;
    SC_DPS_PI_EN        :=  CP_DPS_PI_EN;
    SC_PI_CTL_INIT      :=  CP_PI_CTL_INIT;
    SC_DPS_SEL_INIT     :=  CP_DPS_SEL_INIT;
    SC_GPLL_DCTEST_SEL  :=  CP_GPLL_DCTEST_SEL;
// assign config body end

//initial config body0 begin
    if(CP_DYNSEL_ENABLE == "FALSE")
    {
        SC_DYNSEL_ENABLE  :=  1'b0;
    }
    else if(CP_DYNSEL_ENABLE == "TRUE")
    {
        SC_DYNSEL_ENABLE  :=  1'b1;
    }
    else
    {
        SC_DYNSEL_ENABLE  :=  1'bx;
        error("illegal setting for CP_DYNSEL_ENABLE  :=  %s",CP_DYNSEL_ENABLE);
    }

//initial config body0 end


//initial config body1 begin
    if(CP_ODIV0_MUXSEL_EN == "FALSE")
    {
        SC_ODIV0_MUXSEL_EN  :=  1'b0;
    }
    else if(CP_ODIV0_MUXSEL_EN == "TRUE")
    {
        SC_ODIV0_MUXSEL_EN  :=  1'b1;
    }
    else
    {
        SC_ODIV0_MUXSEL_EN  :=  1'bx;
        error("illegal setting for CP_ODIV0_MUXSEL_EN  :=  %s",CP_ODIV0_MUXSEL_EN);
    }

//initial config body1 end


//initial config body2 begin
    if(CP_ODIV1_MUXSEL_EN == "FALSE")
    {
        SC_ODIV1_MUXSEL_EN  :=  1'b0;
    }
    else if(CP_ODIV1_MUXSEL_EN == "TRUE")
    {
        SC_ODIV1_MUXSEL_EN  :=  1'b1;
    }
    else
    {
        SC_ODIV1_MUXSEL_EN  :=  1'bx;
        error("illegal setting for CP_ODIV1_MUXSEL_EN  :=  %s",CP_ODIV1_MUXSEL_EN);
    }

//initial config body2 end


//initial config body3 begin
    if(CP_ODIV2_MUXSEL_EN == "FALSE")
    {
        SC_ODIV2_MUXSEL_EN  :=  1'b0;
    }
    else if(CP_ODIV2_MUXSEL_EN == "TRUE")
    {
        SC_ODIV2_MUXSEL_EN  :=  1'b1;
    }
    else
    {
        SC_ODIV2_MUXSEL_EN  :=  1'bx;
        error("illegal setting for CP_ODIV2_MUXSEL_EN  :=  %s",CP_ODIV2_MUXSEL_EN);
    }

//initial config body3 end


//initial config body4 begin
    if(CP_ODIV3_MUXSEL_EN == "FALSE")
    {
        SC_ODIV3_MUXSEL_EN  :=  1'b0;
    }
    else if(CP_ODIV3_MUXSEL_EN == "TRUE")
    {
        SC_ODIV3_MUXSEL_EN  :=  1'b1;
    }
    else
    {
        SC_ODIV3_MUXSEL_EN  :=  1'bx;
        error("illegal setting for CP_ODIV3_MUXSEL_EN  :=  %s",CP_ODIV3_MUXSEL_EN);
    }

//initial config body4 end


//initial config body5 begin
    if(CP_ODIV4_MUXSEL_EN == "FALSE")
    {
        SC_ODIV4_MUXSEL_EN  :=  1'b0;
    }
    else if(CP_ODIV4_MUXSEL_EN == "TRUE")
    {
        SC_ODIV4_MUXSEL_EN  :=  1'b1;
    }
    else
    {
        SC_ODIV4_MUXSEL_EN  :=  1'bx;
        error("illegal setting for CP_ODIV4_MUXSEL_EN  :=  %s",CP_ODIV4_MUXSEL_EN);
    }

//initial config body5 end


//initial config body6 begin
    if(CP_ODIV5_MUXSEL_EN == "FALSE")
    {
        SC_ODIV5_MUXSEL_EN  :=  1'b0;
    }
    else if(CP_ODIV5_MUXSEL_EN == "TRUE")
    {
        SC_ODIV5_MUXSEL_EN  :=  1'b1;
    }
    else
    {
        SC_ODIV5_MUXSEL_EN  :=  1'bx;
        error("illegal setting for CP_ODIV5_MUXSEL_EN  :=  %s",CP_ODIV5_MUXSEL_EN);
    }

//initial config body6 end


//initial config body7 begin
    if(CP_ODIV6_MUXSEL_EN == "FALSE")
    {
        SC_ODIV6_MUXSEL_EN  :=  1'b0;
    }
    else if(CP_ODIV6_MUXSEL_EN == "TRUE")
    {
        SC_ODIV6_MUXSEL_EN  :=  1'b1;
    }
    else
    {
        SC_ODIV6_MUXSEL_EN  :=  1'bx;
        error("illegal setting for CP_ODIV6_MUXSEL_EN  :=  %s",CP_ODIV6_MUXSEL_EN);
    }

//initial config body7 end


//initial config body8 begin
    if(CP_FDIV_MUXSEL_EN == "FALSE")
    {
        SC_FDIV_MUXSEL_EN  :=  1'b0;
    }
    else if(CP_FDIV_MUXSEL_EN == "TRUE")
    {
        SC_FDIV_MUXSEL_EN  :=  1'b1;
    }
    else
    {
        SC_FDIV_MUXSEL_EN  :=  1'bx;
        error("illegal setting for CP_FDIV_MUXSEL_EN  :=  %s",CP_FDIV_MUXSEL_EN);
    }

//initial config body8 end


//initial config body9 begin
    if(CP_ODIV0_FRACDIV_EN == "FALSE")
    {
        SC_ODIV0_FRACDIV_EN  :=  1'b0;
    }
    else if(CP_ODIV0_FRACDIV_EN == "TRUE")
    {
        SC_ODIV0_FRACDIV_EN  :=  1'b1;
    }
    else
    {
        SC_ODIV0_FRACDIV_EN  :=  1'bx;
        error("illegal setting for CP_ODIV0_FRACDIV_EN  :=  %s",CP_ODIV0_FRACDIV_EN);
    }

//initial config body9 end


//initial config body10 begin
    if(CP_FDIV_FRACDIV_EN == "FALSE")
    {
        SC_FDIV_FRACDIV_EN  :=  1'b0;
    }
    else if(CP_FDIV_FRACDIV_EN == "TRUE")
    {
        SC_FDIV_FRACDIV_EN  :=  1'b1;
    }
    else
    {
        SC_FDIV_FRACDIV_EN  :=  1'bx;
        error("illegal setting for CP_FDIV_FRACDIV_EN  :=  %s",CP_FDIV_FRACDIV_EN);
    }

//initial config body10 end


//initial config body11 begin
    if(CP_SSC_MODE_EN == "FALSE")
    {
        SC_SSC_MODE_EN  :=  1'b0;
    }
    else if(CP_SSC_MODE_EN == "TRUE")
    {
        SC_SSC_MODE_EN  :=  1'b1;
    }
    else
    {
        SC_SSC_MODE_EN  :=  1'bx;
        error("illegal setting for CP_SSC_MODE_EN  :=  %s",CP_SSC_MODE_EN);
    }

//initial config body11 end


//initial config body12 begin
    if(CP_CLKOUT0_GATE_EN == "FALSE")
    {
        SC_CLKOUT0_GATE_EN  :=  1'b0;
    }
    else if(CP_CLKOUT0_GATE_EN == "TRUE")
    {
        SC_CLKOUT0_GATE_EN  :=  1'b1;
    }
    else
    {
        SC_CLKOUT0_GATE_EN  :=  1'bx;
        error("illegal setting for CP_CLKOUT0_GATE_EN  :=  %s",CP_CLKOUT0_GATE_EN);
    }

//initial config body12 end


//initial config body13 begin
    if(CP_CLKOUT1_GATE_EN == "FALSE")
    {
        SC_CLKOUT1_GATE_EN  :=  1'b0;
    }
    else if(CP_CLKOUT1_GATE_EN == "TRUE")
    {
        SC_CLKOUT1_GATE_EN  :=  1'b1;
    }
    else
    {
        SC_CLKOUT1_GATE_EN  :=  1'bx;
        error("illegal setting for CP_CLKOUT1_GATE_EN  :=  %s",CP_CLKOUT1_GATE_EN);
    }

//initial config body13 end


//initial config body14 begin
    if(CP_CLKOUT2_GATE_EN == "FALSE")
    {
        SC_CLKOUT2_GATE_EN  :=  1'b0;
    }
    else if(CP_CLKOUT2_GATE_EN == "TRUE")
    {
        SC_CLKOUT2_GATE_EN  :=  1'b1;
    }
    else
    {
        SC_CLKOUT2_GATE_EN  :=  1'bx;
        error("illegal setting for CP_CLKOUT2_GATE_EN  :=  %s",CP_CLKOUT2_GATE_EN);
    }

//initial config body14 end


//initial config body15 begin
    if(CP_CLKOUT3_GATE_EN == "FALSE")
    {
        SC_CLKOUT3_GATE_EN  :=  1'b0;
    }
    else if(CP_CLKOUT3_GATE_EN == "TRUE")
    {
        SC_CLKOUT3_GATE_EN  :=  1'b1;
    }
    else
    {
        SC_CLKOUT3_GATE_EN  :=  1'bx;
        error("illegal setting for CP_CLKOUT3_GATE_EN  :=  %s",CP_CLKOUT3_GATE_EN);
    }

//initial config body15 end


//initial config body16 begin
    if(CP_CLKOUT4_GATE_EN == "FALSE")
    {
        SC_CLKOUT4_GATE_EN  :=  1'b0;
    }
    else if(CP_CLKOUT4_GATE_EN == "TRUE")
    {
        SC_CLKOUT4_GATE_EN  :=  1'b1;
    }
    else
    {
        SC_CLKOUT4_GATE_EN  :=  1'bx;
        error("illegal setting for CP_CLKOUT4_GATE_EN  :=  %s",CP_CLKOUT4_GATE_EN);
    }

//initial config body16 end


//initial config body17 begin
    if(CP_CLKOUT5_GATE_EN == "FALSE")
    {
        SC_CLKOUT5_GATE_EN  :=  1'b0;
    }
    else if(CP_CLKOUT5_GATE_EN == "TRUE")
    {
        SC_CLKOUT5_GATE_EN  :=  1'b1;
    }
    else
    {
        SC_CLKOUT5_GATE_EN  :=  1'bx;
        error("illegal setting for CP_CLKOUT5_GATE_EN  :=  %s",CP_CLKOUT5_GATE_EN);
    }

//initial config body17 end


//initial config body18 begin
    if(CP_CLKOUT6_GATE_EN == "FALSE")
    {
        SC_CLKOUT6_GATE_EN  :=  1'b0;
    }
    else if(CP_CLKOUT6_GATE_EN == "TRUE")
    {
        SC_CLKOUT6_GATE_EN  :=  1'b1;
    }
    else
    {
        SC_CLKOUT6_GATE_EN  :=  1'bx;
        error("illegal setting for CP_CLKOUT6_GATE_EN  :=  %s",CP_CLKOUT6_GATE_EN);
    }

//initial config body18 end


//initial config body19 begin
    if(CP_CLKFBOUT_GATE_EN == "FALSE")
    {
        SC_CLKFBOUT_GATE_EN  :=  1'b0;
    }
    else if(CP_CLKFBOUT_GATE_EN == "TRUE")
    {
        SC_CLKFBOUT_GATE_EN  :=  1'b1;
    }
    else
    {
        SC_CLKFBOUT_GATE_EN  :=  1'bx;
        error("illegal setting for CP_CLKFBOUT_GATE_EN  :=  %s",CP_CLKFBOUT_GATE_EN);
    }

//initial config body19 end


//initial config body20 begin
    if(CP_PLL_USE_APB == "FALSE")
    {
        SC_PLL_USE_APB  :=  1'b0;
    }
    else if(CP_PLL_USE_APB == "TRUE")
    {
        SC_PLL_USE_APB  :=  1'b1;
    }
    else
    {
        SC_PLL_USE_APB  :=  1'bx;
        error("illegal setting for CP_PLL_USE_APB  :=  %s",CP_PLL_USE_APB);
    }

//initial config body20 end


//initial config body21 begin
    if(CP_PFDEN_ENABLE == "FALSE")
    {
        SC_PFDEN_ENABLE  :=  1'b0;
    }
    else if(CP_PFDEN_ENABLE == "TRUE")
    {
        SC_PFDEN_ENABLE  :=  1'b1;
    }
    else
    {
        SC_PFDEN_ENABLE  :=  1'bx;
        error("illegal setting for CP_PFDEN_ENABLE  :=  %s",CP_PFDEN_ENABLE);
    }

//initial config body21 end


//initial config body22 begin
    if(CP_FREQDETECT_EN == "FALSE")
    {
        SC_FREQDETECT_EN  :=  1'b0;
    }
    else if(CP_FREQDETECT_EN == "TRUE")
    {
        SC_FREQDETECT_EN  :=  1'b1;
    }
    else
    {
        SC_FREQDETECT_EN  :=  1'bx;
        error("illegal setting for CP_FREQDETECT_EN  :=  %s",CP_FREQDETECT_EN);
    }

//initial config body22 end


//initial config body23 begin
    if(CP_FREQDETECT_BYPASSREXT_EN == "FALSE")
    {
        SC_FREQDETECT_BYPASSREXT_EN  :=  1'b0;
    }
    else if(CP_FREQDETECT_BYPASSREXT_EN == "TRUE")
    {
        SC_FREQDETECT_BYPASSREXT_EN  :=  1'b1;
    }
    else
    {
        SC_FREQDETECT_BYPASSREXT_EN  :=  1'bx;
        error("illegal setting for CP_FREQDETECT_BYPASSREXT_EN  :=  %s",CP_FREQDETECT_BYPASSREXT_EN);
    }

//initial config body23 end


//initial config body24 begin
    if(CP_LOCK_FILTER_PD == "FALSE")
    {
        SC_LOCK_FILTER_PD  :=  1'b0;
    }
    else if(CP_LOCK_FILTER_PD == "TRUE")
    {
        SC_LOCK_FILTER_PD  :=  1'b1;
    }
    else
    {
        SC_LOCK_FILTER_PD  :=  1'bx;
        error("illegal setting for CP_LOCK_FILTER_PD  :=  %s",CP_LOCK_FILTER_PD);
    }

//initial config body24 end


//initial config body25 begin
    if(CP_PFDTOP_CLKTEST_EN == "FALSE")
    {
        SC_PFDTOP_CLKTEST_EN  :=  1'b0;
    }
    else if(CP_PFDTOP_CLKTEST_EN == "TRUE")
    {
        SC_PFDTOP_CLKTEST_EN  :=  1'b1;
    }
    else
    {
        SC_PFDTOP_CLKTEST_EN  :=  1'bx;
        error("illegal setting for CP_PFDTOP_CLKTEST_EN  :=  %s",CP_PFDTOP_CLKTEST_EN);
    }

//initial config body25 end


//initial config body26 begin
    if(CP_GLOGEN_ENABLE == "FALSE")
    {
        SC_GLOGEN_ENABLE  :=  1'b0;
    }
    else if(CP_GLOGEN_ENABLE == "TRUE")
    {
        SC_GLOGEN_ENABLE  :=  1'b1;
    }
    else
    {
        SC_GLOGEN_ENABLE  :=  1'bx;
        error("illegal setting for CP_GLOGEN_ENABLE  :=  %s",CP_GLOGEN_ENABLE);
    }

//initial config body26 end


//initial config body27 begin
    if(CP_PLL_PWD_ENABLE == "FALSE")
    {
        SC_PLL_PWD_ENABLE  :=  1'b0;
    }
    else if(CP_PLL_PWD_ENABLE == "TRUE")
    {
        SC_PLL_PWD_ENABLE  :=  1'b1;
    }
    else
    {
        SC_PLL_PWD_ENABLE  :=  1'bx;
        error("illegal setting for CP_PLL_PWD_ENABLE  :=  %s",CP_PLL_PWD_ENABLE);
    }

//initial config body27 end


//initial config body28 begin
    if(CP_PLL_RST_ENABLE == "FALSE")
    {
        SC_PLL_RST_ENABLE  :=  1'b0;
    }
    else if(CP_PLL_RST_ENABLE == "TRUE")
    {
        SC_PLL_RST_ENABLE  :=  1'b1;
    }
    else
    {
        SC_PLL_RST_ENABLE  :=  1'bx;
        error("illegal setting for CP_PLL_RST_ENABLE  :=  %s",CP_PLL_RST_ENABLE);
    }

//initial config body28 end


//initial config body29 begin
    if(CP_LDO_R_BYPASS_ENABLE == "FALSE")
    {
        SC_LDO_R_BYPASS_ENABLE  :=  1'b0;
    }
    else if(CP_LDO_R_BYPASS_ENABLE == "TRUE")
    {
        SC_LDO_R_BYPASS_ENABLE  :=  1'b1;
    }
    else
    {
        SC_LDO_R_BYPASS_ENABLE  :=  1'bx;
        error("illegal setting for CP_LDO_R_BYPASS_ENABLE  :=  %s",CP_LDO_R_BYPASS_ENABLE);
    }

//initial config body29 end


//initial config body30 begin
    if(CP_DLDO_TEST_EN == "FALSE")
    {
        SC_DLDO_TEST_EN  :=  1'b0;
    }
    else if(CP_DLDO_TEST_EN == "TRUE")
    {
        SC_DLDO_TEST_EN  :=  1'b1;
    }
    else
    {
        SC_DLDO_TEST_EN  :=  1'bx;
        error("illegal setting for CP_DLDO_TEST_EN  :=  %s",CP_DLDO_TEST_EN);
    }

//initial config body30 end


//initial config body31 begin
    if(CP_ALDO_TEST_EN == "FALSE")
    {
        SC_ALDO_TEST_EN  :=  1'b0;
    }
    else if(CP_ALDO_TEST_EN == "TRUE")
    {
        SC_ALDO_TEST_EN  :=  1'b1;
    }
    else
    {
        SC_ALDO_TEST_EN  :=  1'bx;
        error("illegal setting for CP_ALDO_TEST_EN  :=  %s",CP_ALDO_TEST_EN);
    }

//initial config body31 end


//initial config body32 begin
    if(CP_GPLL_VCTRL_TEST_EN == "FALSE")
    {
        SC_GPLL_VCTRL_TEST_EN  :=  1'b0;
    }
    else if(CP_GPLL_VCTRL_TEST_EN == "TRUE")
    {
        SC_GPLL_VCTRL_TEST_EN  :=  1'b1;
    }
    else
    {
        SC_GPLL_VCTRL_TEST_EN  :=  1'bx;
        error("illegal setting for CP_GPLL_VCTRL_TEST_EN  :=  %s",CP_GPLL_VCTRL_TEST_EN);
    }

//initial config body32 end

};

//grid device configure body end


timing gpll_tnl of GPLL
{
    
    int STATIC_PHASE_REMAINDER = (CP_PI_CTL_INIT == 0)   ? 0 :
                                 (CP_PI_CTL_INIT == 64)  ? 1 :
                                 (CP_PI_CTL_INIT == 96)  ? 2 :
                                 (CP_PI_CTL_INIT == 112) ? 3 :
                                 (CP_PI_CTL_INIT == 120) ? 4 :
                                 (CP_PI_CTL_INIT == 124) ? 5 :
                                 (CP_PI_CTL_INIT == 126) ? 6 :
                                 (CP_PI_CTL_INIT == 127) ? 7 : 0;
                                 
    int STATIC_PHASE_DEVIDER =   (CP_DPS_SEL_INIT == 30)  ? 0 :
                                 (CP_DPS_SEL_INIT == 29)  ? 1 :
                                 (CP_DPS_SEL_INIT == 20)  ? 2 :
                                 (CP_DPS_SEL_INIT == 17)  ? 3 :
                                 (CP_DPS_SEL_INIT == 0)   ? 4 :
                                 (CP_DPS_SEL_INIT == 3)   ? 5 :
                                 (CP_DPS_SEL_INIT == 10)  ? 6 :
                                 (CP_DPS_SEL_INIT == 15)  ? 7 : 0;

    int STATIC_PHASE = STATIC_PHASE_DEVIDER * 8 + STATIC_PHASE_REMAINDER;

    int SRATIO0 = CP_ODIV0_RATIO * 8 + ((CP_ODIV0_FRACDIV_EN == "TRUE") ? CP_ODIV0_FRACDIV_RATIO : 0);
    int SRATIOF = CP_FDIV_RATIO * 8 + ((CP_FDIV_FRACDIV_EN == "TRUE") ? CP_FDIV_FRACDIV_RATIO : 0);

    operator V_GPLL GPLL
    parameter map
    (
      //CLKIN_FREQ     =>    ,
      //PFDEN_EN       =>    CP_PFDEN_ENABLE,
        LOCK_MODE      =>    CP_FREQ_LOCKDET_MODE_SEL,
        STATIC_RATIOI  =>    CP_IDIV_RATIO,  
        STATIC_RATIOM  =>    CP_MDIV_RATIO,  
        STATIC_RATIO0  =>      (SRATIO0 ==    1) ?   0.125 : (SRATIO0 ==    2) ?   0.250 : (SRATIO0 ==    3) ?   0.375 : (SRATIO0 ==    4) ?   0.500 : (SRATIO0 ==    5) ?   0.625 : (SRATIO0 ==    6) ?   0.750 : (SRATIO0 ==    7) ?   0.875 : (SRATIO0 ==    8) ?   1.000 :
                               (SRATIO0 ==    9) ?   1.125 : (SRATIO0 ==   10) ?   1.250 : (SRATIO0 ==   11) ?   1.375 : (SRATIO0 ==   12) ?   1.500 : (SRATIO0 ==   13) ?   1.625 : (SRATIO0 ==   14) ?   1.750 : (SRATIO0 ==   15) ?   1.875 : (SRATIO0 ==   16) ?   2.000 :
                               (SRATIO0 ==   17) ?   2.125 : (SRATIO0 ==   18) ?   2.250 : (SRATIO0 ==   19) ?   2.375 : (SRATIO0 ==   20) ?   2.500 : (SRATIO0 ==   21) ?   2.625 : (SRATIO0 ==   22) ?   2.750 : (SRATIO0 ==   23) ?   2.875 : (SRATIO0 ==   24) ?   3.000 :
                               (SRATIO0 ==   25) ?   3.125 : (SRATIO0 ==   26) ?   3.250 : (SRATIO0 ==   27) ?   3.375 : (SRATIO0 ==   28) ?   3.500 : (SRATIO0 ==   29) ?   3.625 : (SRATIO0 ==   30) ?   3.750 : (SRATIO0 ==   31) ?   3.875 : (SRATIO0 ==   32) ?   4.000 :
                               (SRATIO0 ==   33) ?   4.125 : (SRATIO0 ==   34) ?   4.250 : (SRATIO0 ==   35) ?   4.375 : (SRATIO0 ==   36) ?   4.500 : (SRATIO0 ==   37) ?   4.625 : (SRATIO0 ==   38) ?   4.750 : (SRATIO0 ==   39) ?   4.875 : (SRATIO0 ==   40) ?   5.000 :
                               (SRATIO0 ==   41) ?   5.125 : (SRATIO0 ==   42) ?   5.250 : (SRATIO0 ==   43) ?   5.375 : (SRATIO0 ==   44) ?   5.500 : (SRATIO0 ==   45) ?   5.625 : (SRATIO0 ==   46) ?   5.750 : (SRATIO0 ==   47) ?   5.875 : (SRATIO0 ==   48) ?   6.000 :
                               (SRATIO0 ==   49) ?   6.125 : (SRATIO0 ==   50) ?   6.250 : (SRATIO0 ==   51) ?   6.375 : (SRATIO0 ==   52) ?   6.500 : (SRATIO0 ==   53) ?   6.625 : (SRATIO0 ==   54) ?   6.750 : (SRATIO0 ==   55) ?   6.875 : (SRATIO0 ==   56) ?   7.000 :
                               (SRATIO0 ==   57) ?   7.125 : (SRATIO0 ==   58) ?   7.250 : (SRATIO0 ==   59) ?   7.375 : (SRATIO0 ==   60) ?   7.500 : (SRATIO0 ==   61) ?   7.625 : (SRATIO0 ==   62) ?   7.750 : (SRATIO0 ==   63) ?   7.875 : (SRATIO0 ==   64) ?   8.000 :
                               (SRATIO0 ==   65) ?   8.125 : (SRATIO0 ==   66) ?   8.250 : (SRATIO0 ==   67) ?   8.375 : (SRATIO0 ==   68) ?   8.500 : (SRATIO0 ==   69) ?   8.625 : (SRATIO0 ==   70) ?   8.750 : (SRATIO0 ==   71) ?   8.875 : (SRATIO0 ==   72) ?   9.000 :
                               (SRATIO0 ==   73) ?   9.125 : (SRATIO0 ==   74) ?   9.250 : (SRATIO0 ==   75) ?   9.375 : (SRATIO0 ==   76) ?   9.500 : (SRATIO0 ==   77) ?   9.625 : (SRATIO0 ==   78) ?   9.750 : (SRATIO0 ==   79) ?   9.875 : (SRATIO0 ==   80) ?  10.000 :
                               (SRATIO0 ==   81) ?  10.125 : (SRATIO0 ==   82) ?  10.250 : (SRATIO0 ==   83) ?  10.375 : (SRATIO0 ==   84) ?  10.500 : (SRATIO0 ==   85) ?  10.625 : (SRATIO0 ==   86) ?  10.750 : (SRATIO0 ==   87) ?  10.875 : (SRATIO0 ==   88) ?  11.000 :
                               (SRATIO0 ==   89) ?  11.125 : (SRATIO0 ==   90) ?  11.250 : (SRATIO0 ==   91) ?  11.375 : (SRATIO0 ==   92) ?  11.500 : (SRATIO0 ==   93) ?  11.625 : (SRATIO0 ==   94) ?  11.750 : (SRATIO0 ==   95) ?  11.875 : (SRATIO0 ==   96) ?  12.000 :
                               (SRATIO0 ==   97) ?  12.125 : (SRATIO0 ==   98) ?  12.250 : (SRATIO0 ==   99) ?  12.375 : (SRATIO0 ==  100) ?  12.500 : (SRATIO0 ==  101) ?  12.625 : (SRATIO0 ==  102) ?  12.750 : (SRATIO0 ==  103) ?  12.875 : (SRATIO0 ==  104) ?  13.000 :
                               (SRATIO0 ==  105) ?  13.125 : (SRATIO0 ==  106) ?  13.250 : (SRATIO0 ==  107) ?  13.375 : (SRATIO0 ==  108) ?  13.500 : (SRATIO0 ==  109) ?  13.625 : (SRATIO0 ==  110) ?  13.750 : (SRATIO0 ==  111) ?  13.875 : (SRATIO0 ==  112) ?  14.000 :
                               (SRATIO0 ==  113) ?  14.125 : (SRATIO0 ==  114) ?  14.250 : (SRATIO0 ==  115) ?  14.375 : (SRATIO0 ==  116) ?  14.500 : (SRATIO0 ==  117) ?  14.625 : (SRATIO0 ==  118) ?  14.750 : (SRATIO0 ==  119) ?  14.875 : (SRATIO0 ==  120) ?  15.000 :
                               (SRATIO0 ==  121) ?  15.125 : (SRATIO0 ==  122) ?  15.250 : (SRATIO0 ==  123) ?  15.375 : (SRATIO0 ==  124) ?  15.500 : (SRATIO0 ==  125) ?  15.625 : (SRATIO0 ==  126) ?  15.750 : (SRATIO0 ==  127) ?  15.875 : (SRATIO0 ==  128) ?  16.000 :
                               (SRATIO0 ==  129) ?  16.125 : (SRATIO0 ==  130) ?  16.250 : (SRATIO0 ==  131) ?  16.375 : (SRATIO0 ==  132) ?  16.500 : (SRATIO0 ==  133) ?  16.625 : (SRATIO0 ==  134) ?  16.750 : (SRATIO0 ==  135) ?  16.875 : (SRATIO0 ==  136) ?  17.000 :
                               (SRATIO0 ==  137) ?  17.125 : (SRATIO0 ==  138) ?  17.250 : (SRATIO0 ==  139) ?  17.375 : (SRATIO0 ==  140) ?  17.500 : (SRATIO0 ==  141) ?  17.625 : (SRATIO0 ==  142) ?  17.750 : (SRATIO0 ==  143) ?  17.875 : (SRATIO0 ==  144) ?  18.000 :
                               (SRATIO0 ==  145) ?  18.125 : (SRATIO0 ==  146) ?  18.250 : (SRATIO0 ==  147) ?  18.375 : (SRATIO0 ==  148) ?  18.500 : (SRATIO0 ==  149) ?  18.625 : (SRATIO0 ==  150) ?  18.750 : (SRATIO0 ==  151) ?  18.875 : (SRATIO0 ==  152) ?  19.000 :
                               (SRATIO0 ==  153) ?  19.125 : (SRATIO0 ==  154) ?  19.250 : (SRATIO0 ==  155) ?  19.375 : (SRATIO0 ==  156) ?  19.500 : (SRATIO0 ==  157) ?  19.625 : (SRATIO0 ==  158) ?  19.750 : (SRATIO0 ==  159) ?  19.875 : (SRATIO0 ==  160) ?  20.000 :
                               (SRATIO0 ==  161) ?  20.125 : (SRATIO0 ==  162) ?  20.250 : (SRATIO0 ==  163) ?  20.375 : (SRATIO0 ==  164) ?  20.500 : (SRATIO0 ==  165) ?  20.625 : (SRATIO0 ==  166) ?  20.750 : (SRATIO0 ==  167) ?  20.875 : (SRATIO0 ==  168) ?  21.000 :
                               (SRATIO0 ==  169) ?  21.125 : (SRATIO0 ==  170) ?  21.250 : (SRATIO0 ==  171) ?  21.375 : (SRATIO0 ==  172) ?  21.500 : (SRATIO0 ==  173) ?  21.625 : (SRATIO0 ==  174) ?  21.750 : (SRATIO0 ==  175) ?  21.875 : (SRATIO0 ==  176) ?  22.000 :
                               (SRATIO0 ==  177) ?  22.125 : (SRATIO0 ==  178) ?  22.250 : (SRATIO0 ==  179) ?  22.375 : (SRATIO0 ==  180) ?  22.500 : (SRATIO0 ==  181) ?  22.625 : (SRATIO0 ==  182) ?  22.750 : (SRATIO0 ==  183) ?  22.875 : (SRATIO0 ==  184) ?  23.000 :
                               (SRATIO0 ==  185) ?  23.125 : (SRATIO0 ==  186) ?  23.250 : (SRATIO0 ==  187) ?  23.375 : (SRATIO0 ==  188) ?  23.500 : (SRATIO0 ==  189) ?  23.625 : (SRATIO0 ==  190) ?  23.750 : (SRATIO0 ==  191) ?  23.875 : (SRATIO0 ==  192) ?  24.000 :
                               (SRATIO0 ==  193) ?  24.125 : (SRATIO0 ==  194) ?  24.250 : (SRATIO0 ==  195) ?  24.375 : (SRATIO0 ==  196) ?  24.500 : (SRATIO0 ==  197) ?  24.625 : (SRATIO0 ==  198) ?  24.750 : (SRATIO0 ==  199) ?  24.875 : (SRATIO0 ==  200) ?  25.000 :
                               (SRATIO0 ==  201) ?  25.125 : (SRATIO0 ==  202) ?  25.250 : (SRATIO0 ==  203) ?  25.375 : (SRATIO0 ==  204) ?  25.500 : (SRATIO0 ==  205) ?  25.625 : (SRATIO0 ==  206) ?  25.750 : (SRATIO0 ==  207) ?  25.875 : (SRATIO0 ==  208) ?  26.000 :
                               (SRATIO0 ==  209) ?  26.125 : (SRATIO0 ==  210) ?  26.250 : (SRATIO0 ==  211) ?  26.375 : (SRATIO0 ==  212) ?  26.500 : (SRATIO0 ==  213) ?  26.625 : (SRATIO0 ==  214) ?  26.750 : (SRATIO0 ==  215) ?  26.875 : (SRATIO0 ==  216) ?  27.000 :
                               (SRATIO0 ==  217) ?  27.125 : (SRATIO0 ==  218) ?  27.250 : (SRATIO0 ==  219) ?  27.375 : (SRATIO0 ==  220) ?  27.500 : (SRATIO0 ==  221) ?  27.625 : (SRATIO0 ==  222) ?  27.750 : (SRATIO0 ==  223) ?  27.875 : (SRATIO0 ==  224) ?  28.000 :
                               (SRATIO0 ==  225) ?  28.125 : (SRATIO0 ==  226) ?  28.250 : (SRATIO0 ==  227) ?  28.375 : (SRATIO0 ==  228) ?  28.500 : (SRATIO0 ==  229) ?  28.625 : (SRATIO0 ==  230) ?  28.750 : (SRATIO0 ==  231) ?  28.875 : (SRATIO0 ==  232) ?  29.000 :
                               (SRATIO0 ==  233) ?  29.125 : (SRATIO0 ==  234) ?  29.250 : (SRATIO0 ==  235) ?  29.375 : (SRATIO0 ==  236) ?  29.500 : (SRATIO0 ==  237) ?  29.625 : (SRATIO0 ==  238) ?  29.750 : (SRATIO0 ==  239) ?  29.875 : (SRATIO0 ==  240) ?  30.000 :
                               (SRATIO0 ==  241) ?  30.125 : (SRATIO0 ==  242) ?  30.250 : (SRATIO0 ==  243) ?  30.375 : (SRATIO0 ==  244) ?  30.500 : (SRATIO0 ==  245) ?  30.625 : (SRATIO0 ==  246) ?  30.750 : (SRATIO0 ==  247) ?  30.875 : (SRATIO0 ==  248) ?  31.000 :
                               (SRATIO0 ==  249) ?  31.125 : (SRATIO0 ==  250) ?  31.250 : (SRATIO0 ==  251) ?  31.375 : (SRATIO0 ==  252) ?  31.500 : (SRATIO0 ==  253) ?  31.625 : (SRATIO0 ==  254) ?  31.750 : (SRATIO0 ==  255) ?  31.875 : (SRATIO0 ==  256) ?  32.000 :
                               (SRATIO0 ==  257) ?  32.125 : (SRATIO0 ==  258) ?  32.250 : (SRATIO0 ==  259) ?  32.375 : (SRATIO0 ==  260) ?  32.500 : (SRATIO0 ==  261) ?  32.625 : (SRATIO0 ==  262) ?  32.750 : (SRATIO0 ==  263) ?  32.875 : (SRATIO0 ==  264) ?  33.000 :
                               (SRATIO0 ==  265) ?  33.125 : (SRATIO0 ==  266) ?  33.250 : (SRATIO0 ==  267) ?  33.375 : (SRATIO0 ==  268) ?  33.500 : (SRATIO0 ==  269) ?  33.625 : (SRATIO0 ==  270) ?  33.750 : (SRATIO0 ==  271) ?  33.875 : (SRATIO0 ==  272) ?  34.000 :
                               (SRATIO0 ==  273) ?  34.125 : (SRATIO0 ==  274) ?  34.250 : (SRATIO0 ==  275) ?  34.375 : (SRATIO0 ==  276) ?  34.500 : (SRATIO0 ==  277) ?  34.625 : (SRATIO0 ==  278) ?  34.750 : (SRATIO0 ==  279) ?  34.875 : (SRATIO0 ==  280) ?  35.000 :
                               (SRATIO0 ==  281) ?  35.125 : (SRATIO0 ==  282) ?  35.250 : (SRATIO0 ==  283) ?  35.375 : (SRATIO0 ==  284) ?  35.500 : (SRATIO0 ==  285) ?  35.625 : (SRATIO0 ==  286) ?  35.750 : (SRATIO0 ==  287) ?  35.875 : (SRATIO0 ==  288) ?  36.000 :
                               (SRATIO0 ==  289) ?  36.125 : (SRATIO0 ==  290) ?  36.250 : (SRATIO0 ==  291) ?  36.375 : (SRATIO0 ==  292) ?  36.500 : (SRATIO0 ==  293) ?  36.625 : (SRATIO0 ==  294) ?  36.750 : (SRATIO0 ==  295) ?  36.875 : (SRATIO0 ==  296) ?  37.000 :
                               (SRATIO0 ==  297) ?  37.125 : (SRATIO0 ==  298) ?  37.250 : (SRATIO0 ==  299) ?  37.375 : (SRATIO0 ==  300) ?  37.500 : (SRATIO0 ==  301) ?  37.625 : (SRATIO0 ==  302) ?  37.750 : (SRATIO0 ==  303) ?  37.875 : (SRATIO0 ==  304) ?  38.000 :
                               (SRATIO0 ==  305) ?  38.125 : (SRATIO0 ==  306) ?  38.250 : (SRATIO0 ==  307) ?  38.375 : (SRATIO0 ==  308) ?  38.500 : (SRATIO0 ==  309) ?  38.625 : (SRATIO0 ==  310) ?  38.750 : (SRATIO0 ==  311) ?  38.875 : (SRATIO0 ==  312) ?  39.000 :
                               (SRATIO0 ==  313) ?  39.125 : (SRATIO0 ==  314) ?  39.250 : (SRATIO0 ==  315) ?  39.375 : (SRATIO0 ==  316) ?  39.500 : (SRATIO0 ==  317) ?  39.625 : (SRATIO0 ==  318) ?  39.750 : (SRATIO0 ==  319) ?  39.875 : (SRATIO0 ==  320) ?  40.000 :
                               (SRATIO0 ==  321) ?  40.125 : (SRATIO0 ==  322) ?  40.250 : (SRATIO0 ==  323) ?  40.375 : (SRATIO0 ==  324) ?  40.500 : (SRATIO0 ==  325) ?  40.625 : (SRATIO0 ==  326) ?  40.750 : (SRATIO0 ==  327) ?  40.875 : (SRATIO0 ==  328) ?  41.000 :
                               (SRATIO0 ==  329) ?  41.125 : (SRATIO0 ==  330) ?  41.250 : (SRATIO0 ==  331) ?  41.375 : (SRATIO0 ==  332) ?  41.500 : (SRATIO0 ==  333) ?  41.625 : (SRATIO0 ==  334) ?  41.750 : (SRATIO0 ==  335) ?  41.875 : (SRATIO0 ==  336) ?  42.000 :
                               (SRATIO0 ==  337) ?  42.125 : (SRATIO0 ==  338) ?  42.250 : (SRATIO0 ==  339) ?  42.375 : (SRATIO0 ==  340) ?  42.500 : (SRATIO0 ==  341) ?  42.625 : (SRATIO0 ==  342) ?  42.750 : (SRATIO0 ==  343) ?  42.875 : (SRATIO0 ==  344) ?  43.000 :
                               (SRATIO0 ==  345) ?  43.125 : (SRATIO0 ==  346) ?  43.250 : (SRATIO0 ==  347) ?  43.375 : (SRATIO0 ==  348) ?  43.500 : (SRATIO0 ==  349) ?  43.625 : (SRATIO0 ==  350) ?  43.750 : (SRATIO0 ==  351) ?  43.875 : (SRATIO0 ==  352) ?  44.000 :
                               (SRATIO0 ==  353) ?  44.125 : (SRATIO0 ==  354) ?  44.250 : (SRATIO0 ==  355) ?  44.375 : (SRATIO0 ==  356) ?  44.500 : (SRATIO0 ==  357) ?  44.625 : (SRATIO0 ==  358) ?  44.750 : (SRATIO0 ==  359) ?  44.875 : (SRATIO0 ==  360) ?  45.000 :
                               (SRATIO0 ==  361) ?  45.125 : (SRATIO0 ==  362) ?  45.250 : (SRATIO0 ==  363) ?  45.375 : (SRATIO0 ==  364) ?  45.500 : (SRATIO0 ==  365) ?  45.625 : (SRATIO0 ==  366) ?  45.750 : (SRATIO0 ==  367) ?  45.875 : (SRATIO0 ==  368) ?  46.000 :
                               (SRATIO0 ==  369) ?  46.125 : (SRATIO0 ==  370) ?  46.250 : (SRATIO0 ==  371) ?  46.375 : (SRATIO0 ==  372) ?  46.500 : (SRATIO0 ==  373) ?  46.625 : (SRATIO0 ==  374) ?  46.750 : (SRATIO0 ==  375) ?  46.875 : (SRATIO0 ==  376) ?  47.000 :
                               (SRATIO0 ==  377) ?  47.125 : (SRATIO0 ==  378) ?  47.250 : (SRATIO0 ==  379) ?  47.375 : (SRATIO0 ==  380) ?  47.500 : (SRATIO0 ==  381) ?  47.625 : (SRATIO0 ==  382) ?  47.750 : (SRATIO0 ==  383) ?  47.875 : (SRATIO0 ==  384) ?  48.000 :
                               (SRATIO0 ==  385) ?  48.125 : (SRATIO0 ==  386) ?  48.250 : (SRATIO0 ==  387) ?  48.375 : (SRATIO0 ==  388) ?  48.500 : (SRATIO0 ==  389) ?  48.625 : (SRATIO0 ==  390) ?  48.750 : (SRATIO0 ==  391) ?  48.875 : (SRATIO0 ==  392) ?  49.000 :
                               (SRATIO0 ==  393) ?  49.125 : (SRATIO0 ==  394) ?  49.250 : (SRATIO0 ==  395) ?  49.375 : (SRATIO0 ==  396) ?  49.500 : (SRATIO0 ==  397) ?  49.625 : (SRATIO0 ==  398) ?  49.750 : (SRATIO0 ==  399) ?  49.875 : (SRATIO0 ==  400) ?  50.000 :
                               (SRATIO0 ==  401) ?  50.125 : (SRATIO0 ==  402) ?  50.250 : (SRATIO0 ==  403) ?  50.375 : (SRATIO0 ==  404) ?  50.500 : (SRATIO0 ==  405) ?  50.625 : (SRATIO0 ==  406) ?  50.750 : (SRATIO0 ==  407) ?  50.875 : (SRATIO0 ==  408) ?  51.000 :
                               (SRATIO0 ==  409) ?  51.125 : (SRATIO0 ==  410) ?  51.250 : (SRATIO0 ==  411) ?  51.375 : (SRATIO0 ==  412) ?  51.500 : (SRATIO0 ==  413) ?  51.625 : (SRATIO0 ==  414) ?  51.750 : (SRATIO0 ==  415) ?  51.875 : (SRATIO0 ==  416) ?  52.000 :
                               (SRATIO0 ==  417) ?  52.125 : (SRATIO0 ==  418) ?  52.250 : (SRATIO0 ==  419) ?  52.375 : (SRATIO0 ==  420) ?  52.500 : (SRATIO0 ==  421) ?  52.625 : (SRATIO0 ==  422) ?  52.750 : (SRATIO0 ==  423) ?  52.875 : (SRATIO0 ==  424) ?  53.000 :
                               (SRATIO0 ==  425) ?  53.125 : (SRATIO0 ==  426) ?  53.250 : (SRATIO0 ==  427) ?  53.375 : (SRATIO0 ==  428) ?  53.500 : (SRATIO0 ==  429) ?  53.625 : (SRATIO0 ==  430) ?  53.750 : (SRATIO0 ==  431) ?  53.875 : (SRATIO0 ==  432) ?  54.000 :
                               (SRATIO0 ==  433) ?  54.125 : (SRATIO0 ==  434) ?  54.250 : (SRATIO0 ==  435) ?  54.375 : (SRATIO0 ==  436) ?  54.500 : (SRATIO0 ==  437) ?  54.625 : (SRATIO0 ==  438) ?  54.750 : (SRATIO0 ==  439) ?  54.875 : (SRATIO0 ==  440) ?  55.000 :
                               (SRATIO0 ==  441) ?  55.125 : (SRATIO0 ==  442) ?  55.250 : (SRATIO0 ==  443) ?  55.375 : (SRATIO0 ==  444) ?  55.500 : (SRATIO0 ==  445) ?  55.625 : (SRATIO0 ==  446) ?  55.750 : (SRATIO0 ==  447) ?  55.875 : (SRATIO0 ==  448) ?  56.000 :
                               (SRATIO0 ==  449) ?  56.125 : (SRATIO0 ==  450) ?  56.250 : (SRATIO0 ==  451) ?  56.375 : (SRATIO0 ==  452) ?  56.500 : (SRATIO0 ==  453) ?  56.625 : (SRATIO0 ==  454) ?  56.750 : (SRATIO0 ==  455) ?  56.875 : (SRATIO0 ==  456) ?  57.000 :
                               (SRATIO0 ==  457) ?  57.125 : (SRATIO0 ==  458) ?  57.250 : (SRATIO0 ==  459) ?  57.375 : (SRATIO0 ==  460) ?  57.500 : (SRATIO0 ==  461) ?  57.625 : (SRATIO0 ==  462) ?  57.750 : (SRATIO0 ==  463) ?  57.875 : (SRATIO0 ==  464) ?  58.000 :
                               (SRATIO0 ==  465) ?  58.125 : (SRATIO0 ==  466) ?  58.250 : (SRATIO0 ==  467) ?  58.375 : (SRATIO0 ==  468) ?  58.500 : (SRATIO0 ==  469) ?  58.625 : (SRATIO0 ==  470) ?  58.750 : (SRATIO0 ==  471) ?  58.875 : (SRATIO0 ==  472) ?  59.000 :
                               (SRATIO0 ==  473) ?  59.125 : (SRATIO0 ==  474) ?  59.250 : (SRATIO0 ==  475) ?  59.375 : (SRATIO0 ==  476) ?  59.500 : (SRATIO0 ==  477) ?  59.625 : (SRATIO0 ==  478) ?  59.750 : (SRATIO0 ==  479) ?  59.875 : (SRATIO0 ==  480) ?  60.000 :
                               (SRATIO0 ==  481) ?  60.125 : (SRATIO0 ==  482) ?  60.250 : (SRATIO0 ==  483) ?  60.375 : (SRATIO0 ==  484) ?  60.500 : (SRATIO0 ==  485) ?  60.625 : (SRATIO0 ==  486) ?  60.750 : (SRATIO0 ==  487) ?  60.875 : (SRATIO0 ==  488) ?  61.000 :
                               (SRATIO0 ==  489) ?  61.125 : (SRATIO0 ==  490) ?  61.250 : (SRATIO0 ==  491) ?  61.375 : (SRATIO0 ==  492) ?  61.500 : (SRATIO0 ==  493) ?  61.625 : (SRATIO0 ==  494) ?  61.750 : (SRATIO0 ==  495) ?  61.875 : (SRATIO0 ==  496) ?  62.000 :
                               (SRATIO0 ==  497) ?  62.125 : (SRATIO0 ==  498) ?  62.250 : (SRATIO0 ==  499) ?  62.375 : (SRATIO0 ==  500) ?  62.500 : (SRATIO0 ==  501) ?  62.625 : (SRATIO0 ==  502) ?  62.750 : (SRATIO0 ==  503) ?  62.875 : (SRATIO0 ==  504) ?  63.000 :
                               (SRATIO0 ==  505) ?  63.125 : (SRATIO0 ==  506) ?  63.250 : (SRATIO0 ==  507) ?  63.375 : (SRATIO0 ==  508) ?  63.500 : (SRATIO0 ==  509) ?  63.625 : (SRATIO0 ==  510) ?  63.750 : (SRATIO0 ==  511) ?  63.875 : (SRATIO0 ==  512) ?  64.000 :
                               (SRATIO0 ==  513) ?  64.125 : (SRATIO0 ==  514) ?  64.250 : (SRATIO0 ==  515) ?  64.375 : (SRATIO0 ==  516) ?  64.500 : (SRATIO0 ==  517) ?  64.625 : (SRATIO0 ==  518) ?  64.750 : (SRATIO0 ==  519) ?  64.875 : (SRATIO0 ==  520) ?  65.000 :
                               (SRATIO0 ==  521) ?  65.125 : (SRATIO0 ==  522) ?  65.250 : (SRATIO0 ==  523) ?  65.375 : (SRATIO0 ==  524) ?  65.500 : (SRATIO0 ==  525) ?  65.625 : (SRATIO0 ==  526) ?  65.750 : (SRATIO0 ==  527) ?  65.875 : (SRATIO0 ==  528) ?  66.000 :
                               (SRATIO0 ==  529) ?  66.125 : (SRATIO0 ==  530) ?  66.250 : (SRATIO0 ==  531) ?  66.375 : (SRATIO0 ==  532) ?  66.500 : (SRATIO0 ==  533) ?  66.625 : (SRATIO0 ==  534) ?  66.750 : (SRATIO0 ==  535) ?  66.875 : (SRATIO0 ==  536) ?  67.000 :
                               (SRATIO0 ==  537) ?  67.125 : (SRATIO0 ==  538) ?  67.250 : (SRATIO0 ==  539) ?  67.375 : (SRATIO0 ==  540) ?  67.500 : (SRATIO0 ==  541) ?  67.625 : (SRATIO0 ==  542) ?  67.750 : (SRATIO0 ==  543) ?  67.875 : (SRATIO0 ==  544) ?  68.000 :
                               (SRATIO0 ==  545) ?  68.125 : (SRATIO0 ==  546) ?  68.250 : (SRATIO0 ==  547) ?  68.375 : (SRATIO0 ==  548) ?  68.500 : (SRATIO0 ==  549) ?  68.625 : (SRATIO0 ==  550) ?  68.750 : (SRATIO0 ==  551) ?  68.875 : (SRATIO0 ==  552) ?  69.000 :
                               (SRATIO0 ==  553) ?  69.125 : (SRATIO0 ==  554) ?  69.250 : (SRATIO0 ==  555) ?  69.375 : (SRATIO0 ==  556) ?  69.500 : (SRATIO0 ==  557) ?  69.625 : (SRATIO0 ==  558) ?  69.750 : (SRATIO0 ==  559) ?  69.875 : (SRATIO0 ==  560) ?  70.000 :
                               (SRATIO0 ==  561) ?  70.125 : (SRATIO0 ==  562) ?  70.250 : (SRATIO0 ==  563) ?  70.375 : (SRATIO0 ==  564) ?  70.500 : (SRATIO0 ==  565) ?  70.625 : (SRATIO0 ==  566) ?  70.750 : (SRATIO0 ==  567) ?  70.875 : (SRATIO0 ==  568) ?  71.000 :
                               (SRATIO0 ==  569) ?  71.125 : (SRATIO0 ==  570) ?  71.250 : (SRATIO0 ==  571) ?  71.375 : (SRATIO0 ==  572) ?  71.500 : (SRATIO0 ==  573) ?  71.625 : (SRATIO0 ==  574) ?  71.750 : (SRATIO0 ==  575) ?  71.875 : (SRATIO0 ==  576) ?  72.000 :
                               (SRATIO0 ==  577) ?  72.125 : (SRATIO0 ==  578) ?  72.250 : (SRATIO0 ==  579) ?  72.375 : (SRATIO0 ==  580) ?  72.500 : (SRATIO0 ==  581) ?  72.625 : (SRATIO0 ==  582) ?  72.750 : (SRATIO0 ==  583) ?  72.875 : (SRATIO0 ==  584) ?  73.000 :
                               (SRATIO0 ==  585) ?  73.125 : (SRATIO0 ==  586) ?  73.250 : (SRATIO0 ==  587) ?  73.375 : (SRATIO0 ==  588) ?  73.500 : (SRATIO0 ==  589) ?  73.625 : (SRATIO0 ==  590) ?  73.750 : (SRATIO0 ==  591) ?  73.875 : (SRATIO0 ==  592) ?  74.000 :
                               (SRATIO0 ==  593) ?  74.125 : (SRATIO0 ==  594) ?  74.250 : (SRATIO0 ==  595) ?  74.375 : (SRATIO0 ==  596) ?  74.500 : (SRATIO0 ==  597) ?  74.625 : (SRATIO0 ==  598) ?  74.750 : (SRATIO0 ==  599) ?  74.875 : (SRATIO0 ==  600) ?  75.000 :
                               (SRATIO0 ==  601) ?  75.125 : (SRATIO0 ==  602) ?  75.250 : (SRATIO0 ==  603) ?  75.375 : (SRATIO0 ==  604) ?  75.500 : (SRATIO0 ==  605) ?  75.625 : (SRATIO0 ==  606) ?  75.750 : (SRATIO0 ==  607) ?  75.875 : (SRATIO0 ==  608) ?  76.000 :
                               (SRATIO0 ==  609) ?  76.125 : (SRATIO0 ==  610) ?  76.250 : (SRATIO0 ==  611) ?  76.375 : (SRATIO0 ==  612) ?  76.500 : (SRATIO0 ==  613) ?  76.625 : (SRATIO0 ==  614) ?  76.750 : (SRATIO0 ==  615) ?  76.875 : (SRATIO0 ==  616) ?  77.000 :
                               (SRATIO0 ==  617) ?  77.125 : (SRATIO0 ==  618) ?  77.250 : (SRATIO0 ==  619) ?  77.375 : (SRATIO0 ==  620) ?  77.500 : (SRATIO0 ==  621) ?  77.625 : (SRATIO0 ==  622) ?  77.750 : (SRATIO0 ==  623) ?  77.875 : (SRATIO0 ==  624) ?  78.000 :
                               (SRATIO0 ==  625) ?  78.125 : (SRATIO0 ==  626) ?  78.250 : (SRATIO0 ==  627) ?  78.375 : (SRATIO0 ==  628) ?  78.500 : (SRATIO0 ==  629) ?  78.625 : (SRATIO0 ==  630) ?  78.750 : (SRATIO0 ==  631) ?  78.875 : (SRATIO0 ==  632) ?  79.000 :
                               (SRATIO0 ==  633) ?  79.125 : (SRATIO0 ==  634) ?  79.250 : (SRATIO0 ==  635) ?  79.375 : (SRATIO0 ==  636) ?  79.500 : (SRATIO0 ==  637) ?  79.625 : (SRATIO0 ==  638) ?  79.750 : (SRATIO0 ==  639) ?  79.875 : (SRATIO0 ==  640) ?  80.000 :
                               (SRATIO0 ==  641) ?  80.125 : (SRATIO0 ==  642) ?  80.250 : (SRATIO0 ==  643) ?  80.375 : (SRATIO0 ==  644) ?  80.500 : (SRATIO0 ==  645) ?  80.625 : (SRATIO0 ==  646) ?  80.750 : (SRATIO0 ==  647) ?  80.875 : (SRATIO0 ==  648) ?  81.000 :
                               (SRATIO0 ==  649) ?  81.125 : (SRATIO0 ==  650) ?  81.250 : (SRATIO0 ==  651) ?  81.375 : (SRATIO0 ==  652) ?  81.500 : (SRATIO0 ==  653) ?  81.625 : (SRATIO0 ==  654) ?  81.750 : (SRATIO0 ==  655) ?  81.875 : (SRATIO0 ==  656) ?  82.000 :
                               (SRATIO0 ==  657) ?  82.125 : (SRATIO0 ==  658) ?  82.250 : (SRATIO0 ==  659) ?  82.375 : (SRATIO0 ==  660) ?  82.500 : (SRATIO0 ==  661) ?  82.625 : (SRATIO0 ==  662) ?  82.750 : (SRATIO0 ==  663) ?  82.875 : (SRATIO0 ==  664) ?  83.000 :
                               (SRATIO0 ==  665) ?  83.125 : (SRATIO0 ==  666) ?  83.250 : (SRATIO0 ==  667) ?  83.375 : (SRATIO0 ==  668) ?  83.500 : (SRATIO0 ==  669) ?  83.625 : (SRATIO0 ==  670) ?  83.750 : (SRATIO0 ==  671) ?  83.875 : (SRATIO0 ==  672) ?  84.000 :
                               (SRATIO0 ==  673) ?  84.125 : (SRATIO0 ==  674) ?  84.250 : (SRATIO0 ==  675) ?  84.375 : (SRATIO0 ==  676) ?  84.500 : (SRATIO0 ==  677) ?  84.625 : (SRATIO0 ==  678) ?  84.750 : (SRATIO0 ==  679) ?  84.875 : (SRATIO0 ==  680) ?  85.000 :
                               (SRATIO0 ==  681) ?  85.125 : (SRATIO0 ==  682) ?  85.250 : (SRATIO0 ==  683) ?  85.375 : (SRATIO0 ==  684) ?  85.500 : (SRATIO0 ==  685) ?  85.625 : (SRATIO0 ==  686) ?  85.750 : (SRATIO0 ==  687) ?  85.875 : (SRATIO0 ==  688) ?  86.000 :
                               (SRATIO0 ==  689) ?  86.125 : (SRATIO0 ==  690) ?  86.250 : (SRATIO0 ==  691) ?  86.375 : (SRATIO0 ==  692) ?  86.500 : (SRATIO0 ==  693) ?  86.625 : (SRATIO0 ==  694) ?  86.750 : (SRATIO0 ==  695) ?  86.875 : (SRATIO0 ==  696) ?  87.000 :
                               (SRATIO0 ==  697) ?  87.125 : (SRATIO0 ==  698) ?  87.250 : (SRATIO0 ==  699) ?  87.375 : (SRATIO0 ==  700) ?  87.500 : (SRATIO0 ==  701) ?  87.625 : (SRATIO0 ==  702) ?  87.750 : (SRATIO0 ==  703) ?  87.875 : (SRATIO0 ==  704) ?  88.000 :
                               (SRATIO0 ==  705) ?  88.125 : (SRATIO0 ==  706) ?  88.250 : (SRATIO0 ==  707) ?  88.375 : (SRATIO0 ==  708) ?  88.500 : (SRATIO0 ==  709) ?  88.625 : (SRATIO0 ==  710) ?  88.750 : (SRATIO0 ==  711) ?  88.875 : (SRATIO0 ==  712) ?  89.000 :
                               (SRATIO0 ==  713) ?  89.125 : (SRATIO0 ==  714) ?  89.250 : (SRATIO0 ==  715) ?  89.375 : (SRATIO0 ==  716) ?  89.500 : (SRATIO0 ==  717) ?  89.625 : (SRATIO0 ==  718) ?  89.750 : (SRATIO0 ==  719) ?  89.875 : (SRATIO0 ==  720) ?  90.000 :
                               (SRATIO0 ==  721) ?  90.125 : (SRATIO0 ==  722) ?  90.250 : (SRATIO0 ==  723) ?  90.375 : (SRATIO0 ==  724) ?  90.500 : (SRATIO0 ==  725) ?  90.625 : (SRATIO0 ==  726) ?  90.750 : (SRATIO0 ==  727) ?  90.875 : (SRATIO0 ==  728) ?  91.000 :
                               (SRATIO0 ==  729) ?  91.125 : (SRATIO0 ==  730) ?  91.250 : (SRATIO0 ==  731) ?  91.375 : (SRATIO0 ==  732) ?  91.500 : (SRATIO0 ==  733) ?  91.625 : (SRATIO0 ==  734) ?  91.750 : (SRATIO0 ==  735) ?  91.875 : (SRATIO0 ==  736) ?  92.000 :
                               (SRATIO0 ==  737) ?  92.125 : (SRATIO0 ==  738) ?  92.250 : (SRATIO0 ==  739) ?  92.375 : (SRATIO0 ==  740) ?  92.500 : (SRATIO0 ==  741) ?  92.625 : (SRATIO0 ==  742) ?  92.750 : (SRATIO0 ==  743) ?  92.875 : (SRATIO0 ==  744) ?  93.000 :
                               (SRATIO0 ==  745) ?  93.125 : (SRATIO0 ==  746) ?  93.250 : (SRATIO0 ==  747) ?  93.375 : (SRATIO0 ==  748) ?  93.500 : (SRATIO0 ==  749) ?  93.625 : (SRATIO0 ==  750) ?  93.750 : (SRATIO0 ==  751) ?  93.875 : (SRATIO0 ==  752) ?  94.000 :
                               (SRATIO0 ==  753) ?  94.125 : (SRATIO0 ==  754) ?  94.250 : (SRATIO0 ==  755) ?  94.375 : (SRATIO0 ==  756) ?  94.500 : (SRATIO0 ==  757) ?  94.625 : (SRATIO0 ==  758) ?  94.750 : (SRATIO0 ==  759) ?  94.875 : (SRATIO0 ==  760) ?  95.000 :
                               (SRATIO0 ==  761) ?  95.125 : (SRATIO0 ==  762) ?  95.250 : (SRATIO0 ==  763) ?  95.375 : (SRATIO0 ==  764) ?  95.500 : (SRATIO0 ==  765) ?  95.625 : (SRATIO0 ==  766) ?  95.750 : (SRATIO0 ==  767) ?  95.875 : (SRATIO0 ==  768) ?  96.000 :
                               (SRATIO0 ==  769) ?  96.125 : (SRATIO0 ==  770) ?  96.250 : (SRATIO0 ==  771) ?  96.375 : (SRATIO0 ==  772) ?  96.500 : (SRATIO0 ==  773) ?  96.625 : (SRATIO0 ==  774) ?  96.750 : (SRATIO0 ==  775) ?  96.875 : (SRATIO0 ==  776) ?  97.000 :
                               (SRATIO0 ==  777) ?  97.125 : (SRATIO0 ==  778) ?  97.250 : (SRATIO0 ==  779) ?  97.375 : (SRATIO0 ==  780) ?  97.500 : (SRATIO0 ==  781) ?  97.625 : (SRATIO0 ==  782) ?  97.750 : (SRATIO0 ==  783) ?  97.875 : (SRATIO0 ==  784) ?  98.000 :
                               (SRATIO0 ==  785) ?  98.125 : (SRATIO0 ==  786) ?  98.250 : (SRATIO0 ==  787) ?  98.375 : (SRATIO0 ==  788) ?  98.500 : (SRATIO0 ==  789) ?  98.625 : (SRATIO0 ==  790) ?  98.750 : (SRATIO0 ==  791) ?  98.875 : (SRATIO0 ==  792) ?  99.000 :
                               (SRATIO0 ==  793) ?  99.125 : (SRATIO0 ==  794) ?  99.250 : (SRATIO0 ==  795) ?  99.375 : (SRATIO0 ==  796) ?  99.500 : (SRATIO0 ==  797) ?  99.625 : (SRATIO0 ==  798) ?  99.750 : (SRATIO0 ==  799) ?  99.875 : (SRATIO0 ==  800) ? 100.000 :
                               (SRATIO0 ==  801) ? 100.125 : (SRATIO0 ==  802) ? 100.250 : (SRATIO0 ==  803) ? 100.375 : (SRATIO0 ==  804) ? 100.500 : (SRATIO0 ==  805) ? 100.625 : (SRATIO0 ==  806) ? 100.750 : (SRATIO0 ==  807) ? 100.875 : (SRATIO0 ==  808) ? 101.000 :
                               (SRATIO0 ==  809) ? 101.125 : (SRATIO0 ==  810) ? 101.250 : (SRATIO0 ==  811) ? 101.375 : (SRATIO0 ==  812) ? 101.500 : (SRATIO0 ==  813) ? 101.625 : (SRATIO0 ==  814) ? 101.750 : (SRATIO0 ==  815) ? 101.875 : (SRATIO0 ==  816) ? 102.000 :
                               (SRATIO0 ==  817) ? 102.125 : (SRATIO0 ==  818) ? 102.250 : (SRATIO0 ==  819) ? 102.375 : (SRATIO0 ==  820) ? 102.500 : (SRATIO0 ==  821) ? 102.625 : (SRATIO0 ==  822) ? 102.750 : (SRATIO0 ==  823) ? 102.875 : (SRATIO0 ==  824) ? 103.000 :
                               (SRATIO0 ==  825) ? 103.125 : (SRATIO0 ==  826) ? 103.250 : (SRATIO0 ==  827) ? 103.375 : (SRATIO0 ==  828) ? 103.500 : (SRATIO0 ==  829) ? 103.625 : (SRATIO0 ==  830) ? 103.750 : (SRATIO0 ==  831) ? 103.875 : (SRATIO0 ==  832) ? 104.000 :
                               (SRATIO0 ==  833) ? 104.125 : (SRATIO0 ==  834) ? 104.250 : (SRATIO0 ==  835) ? 104.375 : (SRATIO0 ==  836) ? 104.500 : (SRATIO0 ==  837) ? 104.625 : (SRATIO0 ==  838) ? 104.750 : (SRATIO0 ==  839) ? 104.875 : (SRATIO0 ==  840) ? 105.000 :
                               (SRATIO0 ==  841) ? 105.125 : (SRATIO0 ==  842) ? 105.250 : (SRATIO0 ==  843) ? 105.375 : (SRATIO0 ==  844) ? 105.500 : (SRATIO0 ==  845) ? 105.625 : (SRATIO0 ==  846) ? 105.750 : (SRATIO0 ==  847) ? 105.875 : (SRATIO0 ==  848) ? 106.000 :
                               (SRATIO0 ==  849) ? 106.125 : (SRATIO0 ==  850) ? 106.250 : (SRATIO0 ==  851) ? 106.375 : (SRATIO0 ==  852) ? 106.500 : (SRATIO0 ==  853) ? 106.625 : (SRATIO0 ==  854) ? 106.750 : (SRATIO0 ==  855) ? 106.875 : (SRATIO0 ==  856) ? 107.000 :
                               (SRATIO0 ==  857) ? 107.125 : (SRATIO0 ==  858) ? 107.250 : (SRATIO0 ==  859) ? 107.375 : (SRATIO0 ==  860) ? 107.500 : (SRATIO0 ==  861) ? 107.625 : (SRATIO0 ==  862) ? 107.750 : (SRATIO0 ==  863) ? 107.875 : (SRATIO0 ==  864) ? 108.000 :
                               (SRATIO0 ==  865) ? 108.125 : (SRATIO0 ==  866) ? 108.250 : (SRATIO0 ==  867) ? 108.375 : (SRATIO0 ==  868) ? 108.500 : (SRATIO0 ==  869) ? 108.625 : (SRATIO0 ==  870) ? 108.750 : (SRATIO0 ==  871) ? 108.875 : (SRATIO0 ==  872) ? 109.000 :
                               (SRATIO0 ==  873) ? 109.125 : (SRATIO0 ==  874) ? 109.250 : (SRATIO0 ==  875) ? 109.375 : (SRATIO0 ==  876) ? 109.500 : (SRATIO0 ==  877) ? 109.625 : (SRATIO0 ==  878) ? 109.750 : (SRATIO0 ==  879) ? 109.875 : (SRATIO0 ==  880) ? 110.000 :
                               (SRATIO0 ==  881) ? 110.125 : (SRATIO0 ==  882) ? 110.250 : (SRATIO0 ==  883) ? 110.375 : (SRATIO0 ==  884) ? 110.500 : (SRATIO0 ==  885) ? 110.625 : (SRATIO0 ==  886) ? 110.750 : (SRATIO0 ==  887) ? 110.875 : (SRATIO0 ==  888) ? 111.000 :
                               (SRATIO0 ==  889) ? 111.125 : (SRATIO0 ==  890) ? 111.250 : (SRATIO0 ==  891) ? 111.375 : (SRATIO0 ==  892) ? 111.500 : (SRATIO0 ==  893) ? 111.625 : (SRATIO0 ==  894) ? 111.750 : (SRATIO0 ==  895) ? 111.875 : (SRATIO0 ==  896) ? 112.000 :
                               (SRATIO0 ==  897) ? 112.125 : (SRATIO0 ==  898) ? 112.250 : (SRATIO0 ==  899) ? 112.375 : (SRATIO0 ==  900) ? 112.500 : (SRATIO0 ==  901) ? 112.625 : (SRATIO0 ==  902) ? 112.750 : (SRATIO0 ==  903) ? 112.875 : (SRATIO0 ==  904) ? 113.000 :
                               (SRATIO0 ==  905) ? 113.125 : (SRATIO0 ==  906) ? 113.250 : (SRATIO0 ==  907) ? 113.375 : (SRATIO0 ==  908) ? 113.500 : (SRATIO0 ==  909) ? 113.625 : (SRATIO0 ==  910) ? 113.750 : (SRATIO0 ==  911) ? 113.875 : (SRATIO0 ==  912) ? 114.000 :
                               (SRATIO0 ==  913) ? 114.125 : (SRATIO0 ==  914) ? 114.250 : (SRATIO0 ==  915) ? 114.375 : (SRATIO0 ==  916) ? 114.500 : (SRATIO0 ==  917) ? 114.625 : (SRATIO0 ==  918) ? 114.750 : (SRATIO0 ==  919) ? 114.875 : (SRATIO0 ==  920) ? 115.000 :
                               (SRATIO0 ==  921) ? 115.125 : (SRATIO0 ==  922) ? 115.250 : (SRATIO0 ==  923) ? 115.375 : (SRATIO0 ==  924) ? 115.500 : (SRATIO0 ==  925) ? 115.625 : (SRATIO0 ==  926) ? 115.750 : (SRATIO0 ==  927) ? 115.875 : (SRATIO0 ==  928) ? 116.000 :
                               (SRATIO0 ==  929) ? 116.125 : (SRATIO0 ==  930) ? 116.250 : (SRATIO0 ==  931) ? 116.375 : (SRATIO0 ==  932) ? 116.500 : (SRATIO0 ==  933) ? 116.625 : (SRATIO0 ==  934) ? 116.750 : (SRATIO0 ==  935) ? 116.875 : (SRATIO0 ==  936) ? 117.000 :
                               (SRATIO0 ==  937) ? 117.125 : (SRATIO0 ==  938) ? 117.250 : (SRATIO0 ==  939) ? 117.375 : (SRATIO0 ==  940) ? 117.500 : (SRATIO0 ==  941) ? 117.625 : (SRATIO0 ==  942) ? 117.750 : (SRATIO0 ==  943) ? 117.875 : (SRATIO0 ==  944) ? 118.000 :
                               (SRATIO0 ==  945) ? 118.125 : (SRATIO0 ==  946) ? 118.250 : (SRATIO0 ==  947) ? 118.375 : (SRATIO0 ==  948) ? 118.500 : (SRATIO0 ==  949) ? 118.625 : (SRATIO0 ==  950) ? 118.750 : (SRATIO0 ==  951) ? 118.875 : (SRATIO0 ==  952) ? 119.000 :
                               (SRATIO0 ==  953) ? 119.125 : (SRATIO0 ==  954) ? 119.250 : (SRATIO0 ==  955) ? 119.375 : (SRATIO0 ==  956) ? 119.500 : (SRATIO0 ==  957) ? 119.625 : (SRATIO0 ==  958) ? 119.750 : (SRATIO0 ==  959) ? 119.875 : (SRATIO0 ==  960) ? 120.000 :
                               (SRATIO0 ==  961) ? 120.125 : (SRATIO0 ==  962) ? 120.250 : (SRATIO0 ==  963) ? 120.375 : (SRATIO0 ==  964) ? 120.500 : (SRATIO0 ==  965) ? 120.625 : (SRATIO0 ==  966) ? 120.750 : (SRATIO0 ==  967) ? 120.875 : (SRATIO0 ==  968) ? 121.000 :
                               (SRATIO0 ==  969) ? 121.125 : (SRATIO0 ==  970) ? 121.250 : (SRATIO0 ==  971) ? 121.375 : (SRATIO0 ==  972) ? 121.500 : (SRATIO0 ==  973) ? 121.625 : (SRATIO0 ==  974) ? 121.750 : (SRATIO0 ==  975) ? 121.875 : (SRATIO0 ==  976) ? 122.000 :
                               (SRATIO0 ==  977) ? 122.125 : (SRATIO0 ==  978) ? 122.250 : (SRATIO0 ==  979) ? 122.375 : (SRATIO0 ==  980) ? 122.500 : (SRATIO0 ==  981) ? 122.625 : (SRATIO0 ==  982) ? 122.750 : (SRATIO0 ==  983) ? 122.875 : (SRATIO0 ==  984) ? 123.000 :
                               (SRATIO0 ==  985) ? 123.125 : (SRATIO0 ==  986) ? 123.250 : (SRATIO0 ==  987) ? 123.375 : (SRATIO0 ==  988) ? 123.500 : (SRATIO0 ==  989) ? 123.625 : (SRATIO0 ==  990) ? 123.750 : (SRATIO0 ==  991) ? 123.875 : (SRATIO0 ==  992) ? 124.000 :
                               (SRATIO0 ==  993) ? 124.125 : (SRATIO0 ==  994) ? 124.250 : (SRATIO0 ==  995) ? 124.375 : (SRATIO0 ==  996) ? 124.500 : (SRATIO0 ==  997) ? 124.625 : (SRATIO0 ==  998) ? 124.750 : (SRATIO0 ==  999) ? 124.875 : (SRATIO0 == 1000) ? 125.000 :
                               (SRATIO0 == 1001) ? 125.125 : (SRATIO0 == 1002) ? 125.250 : (SRATIO0 == 1003) ? 125.375 : (SRATIO0 == 1004) ? 125.500 : (SRATIO0 == 1005) ? 125.625 : (SRATIO0 == 1006) ? 125.750 : (SRATIO0 == 1007) ? 125.875 : (SRATIO0 == 1008) ? 126.000 :
                               (SRATIO0 == 1009) ? 126.125 : (SRATIO0 == 1010) ? 126.250 : (SRATIO0 == 1011) ? 126.375 : (SRATIO0 == 1012) ? 126.500 : (SRATIO0 == 1013) ? 126.625 : (SRATIO0 == 1014) ? 126.750 : (SRATIO0 == 1015) ? 126.875 : (SRATIO0 == 1016) ? 127.000 :
                               (SRATIO0 == 1017) ? 127.125 : (SRATIO0 == 1018) ? 127.250 : (SRATIO0 == 1019) ? 127.375 : (SRATIO0 == 1020) ? 127.500 : (SRATIO0 == 1021) ? 127.625 : (SRATIO0 == 1022) ? 127.750 : (SRATIO0 == 1023) ? 127.875 : (SRATIO0 == 1024) ? 128.000 : 0.000,
        STATIC_RATIO1  =>    CP_ODIV1_RATIO, 
        STATIC_RATIO2  =>    CP_ODIV2_RATIO, 
        STATIC_RATIO3  =>    CP_ODIV3_RATIO, 
        STATIC_RATIO4  =>    CP_ODIV4_RATIO, 
        STATIC_RATIO5  =>    CP_ODIV5_RATIO, 
        STATIC_RATIO6  =>    CP_ODIV6_RATIO, 
        STATIC_RATIOF  =>      (SRATIOF ==    1) ?   0.125 : (SRATIOF ==    2) ?   0.250 : (SRATIOF ==    3) ?   0.375 : (SRATIOF ==    4) ?   0.500 : (SRATIOF ==    5) ?   0.625 : (SRATIOF ==    6) ?   0.750 : (SRATIOF ==    7) ?   0.875 : (SRATIOF ==    8) ?   1.000 :
                               (SRATIOF ==    9) ?   1.125 : (SRATIOF ==   10) ?   1.250 : (SRATIOF ==   11) ?   1.375 : (SRATIOF ==   12) ?   1.500 : (SRATIOF ==   13) ?   1.625 : (SRATIOF ==   14) ?   1.750 : (SRATIOF ==   15) ?   1.875 : (SRATIOF ==   16) ?   2.000 :
                               (SRATIOF ==   17) ?   2.125 : (SRATIOF ==   18) ?   2.250 : (SRATIOF ==   19) ?   2.375 : (SRATIOF ==   20) ?   2.500 : (SRATIOF ==   21) ?   2.625 : (SRATIOF ==   22) ?   2.750 : (SRATIOF ==   23) ?   2.875 : (SRATIOF ==   24) ?   3.000 :
                               (SRATIOF ==   25) ?   3.125 : (SRATIOF ==   26) ?   3.250 : (SRATIOF ==   27) ?   3.375 : (SRATIOF ==   28) ?   3.500 : (SRATIOF ==   29) ?   3.625 : (SRATIOF ==   30) ?   3.750 : (SRATIOF ==   31) ?   3.875 : (SRATIOF ==   32) ?   4.000 :
                               (SRATIOF ==   33) ?   4.125 : (SRATIOF ==   34) ?   4.250 : (SRATIOF ==   35) ?   4.375 : (SRATIOF ==   36) ?   4.500 : (SRATIOF ==   37) ?   4.625 : (SRATIOF ==   38) ?   4.750 : (SRATIOF ==   39) ?   4.875 : (SRATIOF ==   40) ?   5.000 :
                               (SRATIOF ==   41) ?   5.125 : (SRATIOF ==   42) ?   5.250 : (SRATIOF ==   43) ?   5.375 : (SRATIOF ==   44) ?   5.500 : (SRATIOF ==   45) ?   5.625 : (SRATIOF ==   46) ?   5.750 : (SRATIOF ==   47) ?   5.875 : (SRATIOF ==   48) ?   6.000 :
                               (SRATIOF ==   49) ?   6.125 : (SRATIOF ==   50) ?   6.250 : (SRATIOF ==   51) ?   6.375 : (SRATIOF ==   52) ?   6.500 : (SRATIOF ==   53) ?   6.625 : (SRATIOF ==   54) ?   6.750 : (SRATIOF ==   55) ?   6.875 : (SRATIOF ==   56) ?   7.000 :
                               (SRATIOF ==   57) ?   7.125 : (SRATIOF ==   58) ?   7.250 : (SRATIOF ==   59) ?   7.375 : (SRATIOF ==   60) ?   7.500 : (SRATIOF ==   61) ?   7.625 : (SRATIOF ==   62) ?   7.750 : (SRATIOF ==   63) ?   7.875 : (SRATIOF ==   64) ?   8.000 :
                               (SRATIOF ==   65) ?   8.125 : (SRATIOF ==   66) ?   8.250 : (SRATIOF ==   67) ?   8.375 : (SRATIOF ==   68) ?   8.500 : (SRATIOF ==   69) ?   8.625 : (SRATIOF ==   70) ?   8.750 : (SRATIOF ==   71) ?   8.875 : (SRATIOF ==   72) ?   9.000 :
                               (SRATIOF ==   73) ?   9.125 : (SRATIOF ==   74) ?   9.250 : (SRATIOF ==   75) ?   9.375 : (SRATIOF ==   76) ?   9.500 : (SRATIOF ==   77) ?   9.625 : (SRATIOF ==   78) ?   9.750 : (SRATIOF ==   79) ?   9.875 : (SRATIOF ==   80) ?  10.000 :
                               (SRATIOF ==   81) ?  10.125 : (SRATIOF ==   82) ?  10.250 : (SRATIOF ==   83) ?  10.375 : (SRATIOF ==   84) ?  10.500 : (SRATIOF ==   85) ?  10.625 : (SRATIOF ==   86) ?  10.750 : (SRATIOF ==   87) ?  10.875 : (SRATIOF ==   88) ?  11.000 :
                               (SRATIOF ==   89) ?  11.125 : (SRATIOF ==   90) ?  11.250 : (SRATIOF ==   91) ?  11.375 : (SRATIOF ==   92) ?  11.500 : (SRATIOF ==   93) ?  11.625 : (SRATIOF ==   94) ?  11.750 : (SRATIOF ==   95) ?  11.875 : (SRATIOF ==   96) ?  12.000 :
                               (SRATIOF ==   97) ?  12.125 : (SRATIOF ==   98) ?  12.250 : (SRATIOF ==   99) ?  12.375 : (SRATIOF ==  100) ?  12.500 : (SRATIOF ==  101) ?  12.625 : (SRATIOF ==  102) ?  12.750 : (SRATIOF ==  103) ?  12.875 : (SRATIOF ==  104) ?  13.000 :
                               (SRATIOF ==  105) ?  13.125 : (SRATIOF ==  106) ?  13.250 : (SRATIOF ==  107) ?  13.375 : (SRATIOF ==  108) ?  13.500 : (SRATIOF ==  109) ?  13.625 : (SRATIOF ==  110) ?  13.750 : (SRATIOF ==  111) ?  13.875 : (SRATIOF ==  112) ?  14.000 :
                               (SRATIOF ==  113) ?  14.125 : (SRATIOF ==  114) ?  14.250 : (SRATIOF ==  115) ?  14.375 : (SRATIOF ==  116) ?  14.500 : (SRATIOF ==  117) ?  14.625 : (SRATIOF ==  118) ?  14.750 : (SRATIOF ==  119) ?  14.875 : (SRATIOF ==  120) ?  15.000 :
                               (SRATIOF ==  121) ?  15.125 : (SRATIOF ==  122) ?  15.250 : (SRATIOF ==  123) ?  15.375 : (SRATIOF ==  124) ?  15.500 : (SRATIOF ==  125) ?  15.625 : (SRATIOF ==  126) ?  15.750 : (SRATIOF ==  127) ?  15.875 : (SRATIOF ==  128) ?  16.000 :
                               (SRATIOF ==  129) ?  16.125 : (SRATIOF ==  130) ?  16.250 : (SRATIOF ==  131) ?  16.375 : (SRATIOF ==  132) ?  16.500 : (SRATIOF ==  133) ?  16.625 : (SRATIOF ==  134) ?  16.750 : (SRATIOF ==  135) ?  16.875 : (SRATIOF ==  136) ?  17.000 :
                               (SRATIOF ==  137) ?  17.125 : (SRATIOF ==  138) ?  17.250 : (SRATIOF ==  139) ?  17.375 : (SRATIOF ==  140) ?  17.500 : (SRATIOF ==  141) ?  17.625 : (SRATIOF ==  142) ?  17.750 : (SRATIOF ==  143) ?  17.875 : (SRATIOF ==  144) ?  18.000 :
                               (SRATIOF ==  145) ?  18.125 : (SRATIOF ==  146) ?  18.250 : (SRATIOF ==  147) ?  18.375 : (SRATIOF ==  148) ?  18.500 : (SRATIOF ==  149) ?  18.625 : (SRATIOF ==  150) ?  18.750 : (SRATIOF ==  151) ?  18.875 : (SRATIOF ==  152) ?  19.000 :
                               (SRATIOF ==  153) ?  19.125 : (SRATIOF ==  154) ?  19.250 : (SRATIOF ==  155) ?  19.375 : (SRATIOF ==  156) ?  19.500 : (SRATIOF ==  157) ?  19.625 : (SRATIOF ==  158) ?  19.750 : (SRATIOF ==  159) ?  19.875 : (SRATIOF ==  160) ?  20.000 :
                               (SRATIOF ==  161) ?  20.125 : (SRATIOF ==  162) ?  20.250 : (SRATIOF ==  163) ?  20.375 : (SRATIOF ==  164) ?  20.500 : (SRATIOF ==  165) ?  20.625 : (SRATIOF ==  166) ?  20.750 : (SRATIOF ==  167) ?  20.875 : (SRATIOF ==  168) ?  21.000 :
                               (SRATIOF ==  169) ?  21.125 : (SRATIOF ==  170) ?  21.250 : (SRATIOF ==  171) ?  21.375 : (SRATIOF ==  172) ?  21.500 : (SRATIOF ==  173) ?  21.625 : (SRATIOF ==  174) ?  21.750 : (SRATIOF ==  175) ?  21.875 : (SRATIOF ==  176) ?  22.000 :
                               (SRATIOF ==  177) ?  22.125 : (SRATIOF ==  178) ?  22.250 : (SRATIOF ==  179) ?  22.375 : (SRATIOF ==  180) ?  22.500 : (SRATIOF ==  181) ?  22.625 : (SRATIOF ==  182) ?  22.750 : (SRATIOF ==  183) ?  22.875 : (SRATIOF ==  184) ?  23.000 :
                               (SRATIOF ==  185) ?  23.125 : (SRATIOF ==  186) ?  23.250 : (SRATIOF ==  187) ?  23.375 : (SRATIOF ==  188) ?  23.500 : (SRATIOF ==  189) ?  23.625 : (SRATIOF ==  190) ?  23.750 : (SRATIOF ==  191) ?  23.875 : (SRATIOF ==  192) ?  24.000 :
                               (SRATIOF ==  193) ?  24.125 : (SRATIOF ==  194) ?  24.250 : (SRATIOF ==  195) ?  24.375 : (SRATIOF ==  196) ?  24.500 : (SRATIOF ==  197) ?  24.625 : (SRATIOF ==  198) ?  24.750 : (SRATIOF ==  199) ?  24.875 : (SRATIOF ==  200) ?  25.000 :
                               (SRATIOF ==  201) ?  25.125 : (SRATIOF ==  202) ?  25.250 : (SRATIOF ==  203) ?  25.375 : (SRATIOF ==  204) ?  25.500 : (SRATIOF ==  205) ?  25.625 : (SRATIOF ==  206) ?  25.750 : (SRATIOF ==  207) ?  25.875 : (SRATIOF ==  208) ?  26.000 :
                               (SRATIOF ==  209) ?  26.125 : (SRATIOF ==  210) ?  26.250 : (SRATIOF ==  211) ?  26.375 : (SRATIOF ==  212) ?  26.500 : (SRATIOF ==  213) ?  26.625 : (SRATIOF ==  214) ?  26.750 : (SRATIOF ==  215) ?  26.875 : (SRATIOF ==  216) ?  27.000 :
                               (SRATIOF ==  217) ?  27.125 : (SRATIOF ==  218) ?  27.250 : (SRATIOF ==  219) ?  27.375 : (SRATIOF ==  220) ?  27.500 : (SRATIOF ==  221) ?  27.625 : (SRATIOF ==  222) ?  27.750 : (SRATIOF ==  223) ?  27.875 : (SRATIOF ==  224) ?  28.000 :
                               (SRATIOF ==  225) ?  28.125 : (SRATIOF ==  226) ?  28.250 : (SRATIOF ==  227) ?  28.375 : (SRATIOF ==  228) ?  28.500 : (SRATIOF ==  229) ?  28.625 : (SRATIOF ==  230) ?  28.750 : (SRATIOF ==  231) ?  28.875 : (SRATIOF ==  232) ?  29.000 :
                               (SRATIOF ==  233) ?  29.125 : (SRATIOF ==  234) ?  29.250 : (SRATIOF ==  235) ?  29.375 : (SRATIOF ==  236) ?  29.500 : (SRATIOF ==  237) ?  29.625 : (SRATIOF ==  238) ?  29.750 : (SRATIOF ==  239) ?  29.875 : (SRATIOF ==  240) ?  30.000 :
                               (SRATIOF ==  241) ?  30.125 : (SRATIOF ==  242) ?  30.250 : (SRATIOF ==  243) ?  30.375 : (SRATIOF ==  244) ?  30.500 : (SRATIOF ==  245) ?  30.625 : (SRATIOF ==  246) ?  30.750 : (SRATIOF ==  247) ?  30.875 : (SRATIOF ==  248) ?  31.000 :
                               (SRATIOF ==  249) ?  31.125 : (SRATIOF ==  250) ?  31.250 : (SRATIOF ==  251) ?  31.375 : (SRATIOF ==  252) ?  31.500 : (SRATIOF ==  253) ?  31.625 : (SRATIOF ==  254) ?  31.750 : (SRATIOF ==  255) ?  31.875 : (SRATIOF ==  256) ?  32.000 :
                               (SRATIOF ==  257) ?  32.125 : (SRATIOF ==  258) ?  32.250 : (SRATIOF ==  259) ?  32.375 : (SRATIOF ==  260) ?  32.500 : (SRATIOF ==  261) ?  32.625 : (SRATIOF ==  262) ?  32.750 : (SRATIOF ==  263) ?  32.875 : (SRATIOF ==  264) ?  33.000 :
                               (SRATIOF ==  265) ?  33.125 : (SRATIOF ==  266) ?  33.250 : (SRATIOF ==  267) ?  33.375 : (SRATIOF ==  268) ?  33.500 : (SRATIOF ==  269) ?  33.625 : (SRATIOF ==  270) ?  33.750 : (SRATIOF ==  271) ?  33.875 : (SRATIOF ==  272) ?  34.000 :
                               (SRATIOF ==  273) ?  34.125 : (SRATIOF ==  274) ?  34.250 : (SRATIOF ==  275) ?  34.375 : (SRATIOF ==  276) ?  34.500 : (SRATIOF ==  277) ?  34.625 : (SRATIOF ==  278) ?  34.750 : (SRATIOF ==  279) ?  34.875 : (SRATIOF ==  280) ?  35.000 :
                               (SRATIOF ==  281) ?  35.125 : (SRATIOF ==  282) ?  35.250 : (SRATIOF ==  283) ?  35.375 : (SRATIOF ==  284) ?  35.500 : (SRATIOF ==  285) ?  35.625 : (SRATIOF ==  286) ?  35.750 : (SRATIOF ==  287) ?  35.875 : (SRATIOF ==  288) ?  36.000 :
                               (SRATIOF ==  289) ?  36.125 : (SRATIOF ==  290) ?  36.250 : (SRATIOF ==  291) ?  36.375 : (SRATIOF ==  292) ?  36.500 : (SRATIOF ==  293) ?  36.625 : (SRATIOF ==  294) ?  36.750 : (SRATIOF ==  295) ?  36.875 : (SRATIOF ==  296) ?  37.000 :
                               (SRATIOF ==  297) ?  37.125 : (SRATIOF ==  298) ?  37.250 : (SRATIOF ==  299) ?  37.375 : (SRATIOF ==  300) ?  37.500 : (SRATIOF ==  301) ?  37.625 : (SRATIOF ==  302) ?  37.750 : (SRATIOF ==  303) ?  37.875 : (SRATIOF ==  304) ?  38.000 :
                               (SRATIOF ==  305) ?  38.125 : (SRATIOF ==  306) ?  38.250 : (SRATIOF ==  307) ?  38.375 : (SRATIOF ==  308) ?  38.500 : (SRATIOF ==  309) ?  38.625 : (SRATIOF ==  310) ?  38.750 : (SRATIOF ==  311) ?  38.875 : (SRATIOF ==  312) ?  39.000 :
                               (SRATIOF ==  313) ?  39.125 : (SRATIOF ==  314) ?  39.250 : (SRATIOF ==  315) ?  39.375 : (SRATIOF ==  316) ?  39.500 : (SRATIOF ==  317) ?  39.625 : (SRATIOF ==  318) ?  39.750 : (SRATIOF ==  319) ?  39.875 : (SRATIOF ==  320) ?  40.000 :
                               (SRATIOF ==  321) ?  40.125 : (SRATIOF ==  322) ?  40.250 : (SRATIOF ==  323) ?  40.375 : (SRATIOF ==  324) ?  40.500 : (SRATIOF ==  325) ?  40.625 : (SRATIOF ==  326) ?  40.750 : (SRATIOF ==  327) ?  40.875 : (SRATIOF ==  328) ?  41.000 :
                               (SRATIOF ==  329) ?  41.125 : (SRATIOF ==  330) ?  41.250 : (SRATIOF ==  331) ?  41.375 : (SRATIOF ==  332) ?  41.500 : (SRATIOF ==  333) ?  41.625 : (SRATIOF ==  334) ?  41.750 : (SRATIOF ==  335) ?  41.875 : (SRATIOF ==  336) ?  42.000 :
                               (SRATIOF ==  337) ?  42.125 : (SRATIOF ==  338) ?  42.250 : (SRATIOF ==  339) ?  42.375 : (SRATIOF ==  340) ?  42.500 : (SRATIOF ==  341) ?  42.625 : (SRATIOF ==  342) ?  42.750 : (SRATIOF ==  343) ?  42.875 : (SRATIOF ==  344) ?  43.000 :
                               (SRATIOF ==  345) ?  43.125 : (SRATIOF ==  346) ?  43.250 : (SRATIOF ==  347) ?  43.375 : (SRATIOF ==  348) ?  43.500 : (SRATIOF ==  349) ?  43.625 : (SRATIOF ==  350) ?  43.750 : (SRATIOF ==  351) ?  43.875 : (SRATIOF ==  352) ?  44.000 :
                               (SRATIOF ==  353) ?  44.125 : (SRATIOF ==  354) ?  44.250 : (SRATIOF ==  355) ?  44.375 : (SRATIOF ==  356) ?  44.500 : (SRATIOF ==  357) ?  44.625 : (SRATIOF ==  358) ?  44.750 : (SRATIOF ==  359) ?  44.875 : (SRATIOF ==  360) ?  45.000 :
                               (SRATIOF ==  361) ?  45.125 : (SRATIOF ==  362) ?  45.250 : (SRATIOF ==  363) ?  45.375 : (SRATIOF ==  364) ?  45.500 : (SRATIOF ==  365) ?  45.625 : (SRATIOF ==  366) ?  45.750 : (SRATIOF ==  367) ?  45.875 : (SRATIOF ==  368) ?  46.000 :
                               (SRATIOF ==  369) ?  46.125 : (SRATIOF ==  370) ?  46.250 : (SRATIOF ==  371) ?  46.375 : (SRATIOF ==  372) ?  46.500 : (SRATIOF ==  373) ?  46.625 : (SRATIOF ==  374) ?  46.750 : (SRATIOF ==  375) ?  46.875 : (SRATIOF ==  376) ?  47.000 :
                               (SRATIOF ==  377) ?  47.125 : (SRATIOF ==  378) ?  47.250 : (SRATIOF ==  379) ?  47.375 : (SRATIOF ==  380) ?  47.500 : (SRATIOF ==  381) ?  47.625 : (SRATIOF ==  382) ?  47.750 : (SRATIOF ==  383) ?  47.875 : (SRATIOF ==  384) ?  48.000 :
                               (SRATIOF ==  385) ?  48.125 : (SRATIOF ==  386) ?  48.250 : (SRATIOF ==  387) ?  48.375 : (SRATIOF ==  388) ?  48.500 : (SRATIOF ==  389) ?  48.625 : (SRATIOF ==  390) ?  48.750 : (SRATIOF ==  391) ?  48.875 : (SRATIOF ==  392) ?  49.000 :
                               (SRATIOF ==  393) ?  49.125 : (SRATIOF ==  394) ?  49.250 : (SRATIOF ==  395) ?  49.375 : (SRATIOF ==  396) ?  49.500 : (SRATIOF ==  397) ?  49.625 : (SRATIOF ==  398) ?  49.750 : (SRATIOF ==  399) ?  49.875 : (SRATIOF ==  400) ?  50.000 :
                               (SRATIOF ==  401) ?  50.125 : (SRATIOF ==  402) ?  50.250 : (SRATIOF ==  403) ?  50.375 : (SRATIOF ==  404) ?  50.500 : (SRATIOF ==  405) ?  50.625 : (SRATIOF ==  406) ?  50.750 : (SRATIOF ==  407) ?  50.875 : (SRATIOF ==  408) ?  51.000 :
                               (SRATIOF ==  409) ?  51.125 : (SRATIOF ==  410) ?  51.250 : (SRATIOF ==  411) ?  51.375 : (SRATIOF ==  412) ?  51.500 : (SRATIOF ==  413) ?  51.625 : (SRATIOF ==  414) ?  51.750 : (SRATIOF ==  415) ?  51.875 : (SRATIOF ==  416) ?  52.000 :
                               (SRATIOF ==  417) ?  52.125 : (SRATIOF ==  418) ?  52.250 : (SRATIOF ==  419) ?  52.375 : (SRATIOF ==  420) ?  52.500 : (SRATIOF ==  421) ?  52.625 : (SRATIOF ==  422) ?  52.750 : (SRATIOF ==  423) ?  52.875 : (SRATIOF ==  424) ?  53.000 :
                               (SRATIOF ==  425) ?  53.125 : (SRATIOF ==  426) ?  53.250 : (SRATIOF ==  427) ?  53.375 : (SRATIOF ==  428) ?  53.500 : (SRATIOF ==  429) ?  53.625 : (SRATIOF ==  430) ?  53.750 : (SRATIOF ==  431) ?  53.875 : (SRATIOF ==  432) ?  54.000 :
                               (SRATIOF ==  433) ?  54.125 : (SRATIOF ==  434) ?  54.250 : (SRATIOF ==  435) ?  54.375 : (SRATIOF ==  436) ?  54.500 : (SRATIOF ==  437) ?  54.625 : (SRATIOF ==  438) ?  54.750 : (SRATIOF ==  439) ?  54.875 : (SRATIOF ==  440) ?  55.000 :
                               (SRATIOF ==  441) ?  55.125 : (SRATIOF ==  442) ?  55.250 : (SRATIOF ==  443) ?  55.375 : (SRATIOF ==  444) ?  55.500 : (SRATIOF ==  445) ?  55.625 : (SRATIOF ==  446) ?  55.750 : (SRATIOF ==  447) ?  55.875 : (SRATIOF ==  448) ?  56.000 :
                               (SRATIOF ==  449) ?  56.125 : (SRATIOF ==  450) ?  56.250 : (SRATIOF ==  451) ?  56.375 : (SRATIOF ==  452) ?  56.500 : (SRATIOF ==  453) ?  56.625 : (SRATIOF ==  454) ?  56.750 : (SRATIOF ==  455) ?  56.875 : (SRATIOF ==  456) ?  57.000 :
                               (SRATIOF ==  457) ?  57.125 : (SRATIOF ==  458) ?  57.250 : (SRATIOF ==  459) ?  57.375 : (SRATIOF ==  460) ?  57.500 : (SRATIOF ==  461) ?  57.625 : (SRATIOF ==  462) ?  57.750 : (SRATIOF ==  463) ?  57.875 : (SRATIOF ==  464) ?  58.000 :
                               (SRATIOF ==  465) ?  58.125 : (SRATIOF ==  466) ?  58.250 : (SRATIOF ==  467) ?  58.375 : (SRATIOF ==  468) ?  58.500 : (SRATIOF ==  469) ?  58.625 : (SRATIOF ==  470) ?  58.750 : (SRATIOF ==  471) ?  58.875 : (SRATIOF ==  472) ?  59.000 :
                               (SRATIOF ==  473) ?  59.125 : (SRATIOF ==  474) ?  59.250 : (SRATIOF ==  475) ?  59.375 : (SRATIOF ==  476) ?  59.500 : (SRATIOF ==  477) ?  59.625 : (SRATIOF ==  478) ?  59.750 : (SRATIOF ==  479) ?  59.875 : (SRATIOF ==  480) ?  60.000 :
                               (SRATIOF ==  481) ?  60.125 : (SRATIOF ==  482) ?  60.250 : (SRATIOF ==  483) ?  60.375 : (SRATIOF ==  484) ?  60.500 : (SRATIOF ==  485) ?  60.625 : (SRATIOF ==  486) ?  60.750 : (SRATIOF ==  487) ?  60.875 : (SRATIOF ==  488) ?  61.000 :
                               (SRATIOF ==  489) ?  61.125 : (SRATIOF ==  490) ?  61.250 : (SRATIOF ==  491) ?  61.375 : (SRATIOF ==  492) ?  61.500 : (SRATIOF ==  493) ?  61.625 : (SRATIOF ==  494) ?  61.750 : (SRATIOF ==  495) ?  61.875 : (SRATIOF ==  496) ?  62.000 :
                               (SRATIOF ==  497) ?  62.125 : (SRATIOF ==  498) ?  62.250 : (SRATIOF ==  499) ?  62.375 : (SRATIOF ==  500) ?  62.500 : (SRATIOF ==  501) ?  62.625 : (SRATIOF ==  502) ?  62.750 : (SRATIOF ==  503) ?  62.875 : (SRATIOF ==  504) ?  63.000 :
                               (SRATIOF ==  505) ?  63.125 : (SRATIOF ==  506) ?  63.250 : (SRATIOF ==  507) ?  63.375 : (SRATIOF ==  508) ?  63.500 : (SRATIOF ==  509) ?  63.625 : (SRATIOF ==  510) ?  63.750 : (SRATIOF ==  511) ?  63.875 : (SRATIOF ==  512) ?  64.000 :
                               (SRATIOF ==  513) ?  64.125 : (SRATIOF ==  514) ?  64.250 : (SRATIOF ==  515) ?  64.375 : (SRATIOF ==  516) ?  64.500 : (SRATIOF ==  517) ?  64.625 : (SRATIOF ==  518) ?  64.750 : (SRATIOF ==  519) ?  64.875 : (SRATIOF ==  520) ?  65.000 :
                               (SRATIOF ==  521) ?  65.125 : (SRATIOF ==  522) ?  65.250 : (SRATIOF ==  523) ?  65.375 : (SRATIOF ==  524) ?  65.500 : (SRATIOF ==  525) ?  65.625 : (SRATIOF ==  526) ?  65.750 : (SRATIOF ==  527) ?  65.875 : (SRATIOF ==  528) ?  66.000 :
                               (SRATIOF ==  529) ?  66.125 : (SRATIOF ==  530) ?  66.250 : (SRATIOF ==  531) ?  66.375 : (SRATIOF ==  532) ?  66.500 : (SRATIOF ==  533) ?  66.625 : (SRATIOF ==  534) ?  66.750 : (SRATIOF ==  535) ?  66.875 : (SRATIOF ==  536) ?  67.000 :
                               (SRATIOF ==  537) ?  67.125 : (SRATIOF ==  538) ?  67.250 : (SRATIOF ==  539) ?  67.375 : (SRATIOF ==  540) ?  67.500 : (SRATIOF ==  541) ?  67.625 : (SRATIOF ==  542) ?  67.750 : (SRATIOF ==  543) ?  67.875 : (SRATIOF ==  544) ?  68.000 :
                               (SRATIOF ==  545) ?  68.125 : (SRATIOF ==  546) ?  68.250 : (SRATIOF ==  547) ?  68.375 : (SRATIOF ==  548) ?  68.500 : (SRATIOF ==  549) ?  68.625 : (SRATIOF ==  550) ?  68.750 : (SRATIOF ==  551) ?  68.875 : (SRATIOF ==  552) ?  69.000 :
                               (SRATIOF ==  553) ?  69.125 : (SRATIOF ==  554) ?  69.250 : (SRATIOF ==  555) ?  69.375 : (SRATIOF ==  556) ?  69.500 : (SRATIOF ==  557) ?  69.625 : (SRATIOF ==  558) ?  69.750 : (SRATIOF ==  559) ?  69.875 : (SRATIOF ==  560) ?  70.000 :
                               (SRATIOF ==  561) ?  70.125 : (SRATIOF ==  562) ?  70.250 : (SRATIOF ==  563) ?  70.375 : (SRATIOF ==  564) ?  70.500 : (SRATIOF ==  565) ?  70.625 : (SRATIOF ==  566) ?  70.750 : (SRATIOF ==  567) ?  70.875 : (SRATIOF ==  568) ?  71.000 :
                               (SRATIOF ==  569) ?  71.125 : (SRATIOF ==  570) ?  71.250 : (SRATIOF ==  571) ?  71.375 : (SRATIOF ==  572) ?  71.500 : (SRATIOF ==  573) ?  71.625 : (SRATIOF ==  574) ?  71.750 : (SRATIOF ==  575) ?  71.875 : (SRATIOF ==  576) ?  72.000 :
                               (SRATIOF ==  577) ?  72.125 : (SRATIOF ==  578) ?  72.250 : (SRATIOF ==  579) ?  72.375 : (SRATIOF ==  580) ?  72.500 : (SRATIOF ==  581) ?  72.625 : (SRATIOF ==  582) ?  72.750 : (SRATIOF ==  583) ?  72.875 : (SRATIOF ==  584) ?  73.000 :
                               (SRATIOF ==  585) ?  73.125 : (SRATIOF ==  586) ?  73.250 : (SRATIOF ==  587) ?  73.375 : (SRATIOF ==  588) ?  73.500 : (SRATIOF ==  589) ?  73.625 : (SRATIOF ==  590) ?  73.750 : (SRATIOF ==  591) ?  73.875 : (SRATIOF ==  592) ?  74.000 :
                               (SRATIOF ==  593) ?  74.125 : (SRATIOF ==  594) ?  74.250 : (SRATIOF ==  595) ?  74.375 : (SRATIOF ==  596) ?  74.500 : (SRATIOF ==  597) ?  74.625 : (SRATIOF ==  598) ?  74.750 : (SRATIOF ==  599) ?  74.875 : (SRATIOF ==  600) ?  75.000 :
                               (SRATIOF ==  601) ?  75.125 : (SRATIOF ==  602) ?  75.250 : (SRATIOF ==  603) ?  75.375 : (SRATIOF ==  604) ?  75.500 : (SRATIOF ==  605) ?  75.625 : (SRATIOF ==  606) ?  75.750 : (SRATIOF ==  607) ?  75.875 : (SRATIOF ==  608) ?  76.000 :
                               (SRATIOF ==  609) ?  76.125 : (SRATIOF ==  610) ?  76.250 : (SRATIOF ==  611) ?  76.375 : (SRATIOF ==  612) ?  76.500 : (SRATIOF ==  613) ?  76.625 : (SRATIOF ==  614) ?  76.750 : (SRATIOF ==  615) ?  76.875 : (SRATIOF ==  616) ?  77.000 :
                               (SRATIOF ==  617) ?  77.125 : (SRATIOF ==  618) ?  77.250 : (SRATIOF ==  619) ?  77.375 : (SRATIOF ==  620) ?  77.500 : (SRATIOF ==  621) ?  77.625 : (SRATIOF ==  622) ?  77.750 : (SRATIOF ==  623) ?  77.875 : (SRATIOF ==  624) ?  78.000 :
                               (SRATIOF ==  625) ?  78.125 : (SRATIOF ==  626) ?  78.250 : (SRATIOF ==  627) ?  78.375 : (SRATIOF ==  628) ?  78.500 : (SRATIOF ==  629) ?  78.625 : (SRATIOF ==  630) ?  78.750 : (SRATIOF ==  631) ?  78.875 : (SRATIOF ==  632) ?  79.000 :
                               (SRATIOF ==  633) ?  79.125 : (SRATIOF ==  634) ?  79.250 : (SRATIOF ==  635) ?  79.375 : (SRATIOF ==  636) ?  79.500 : (SRATIOF ==  637) ?  79.625 : (SRATIOF ==  638) ?  79.750 : (SRATIOF ==  639) ?  79.875 : (SRATIOF ==  640) ?  80.000 :
                               (SRATIOF ==  641) ?  80.125 : (SRATIOF ==  642) ?  80.250 : (SRATIOF ==  643) ?  80.375 : (SRATIOF ==  644) ?  80.500 : (SRATIOF ==  645) ?  80.625 : (SRATIOF ==  646) ?  80.750 : (SRATIOF ==  647) ?  80.875 : (SRATIOF ==  648) ?  81.000 :
                               (SRATIOF ==  649) ?  81.125 : (SRATIOF ==  650) ?  81.250 : (SRATIOF ==  651) ?  81.375 : (SRATIOF ==  652) ?  81.500 : (SRATIOF ==  653) ?  81.625 : (SRATIOF ==  654) ?  81.750 : (SRATIOF ==  655) ?  81.875 : (SRATIOF ==  656) ?  82.000 :
                               (SRATIOF ==  657) ?  82.125 : (SRATIOF ==  658) ?  82.250 : (SRATIOF ==  659) ?  82.375 : (SRATIOF ==  660) ?  82.500 : (SRATIOF ==  661) ?  82.625 : (SRATIOF ==  662) ?  82.750 : (SRATIOF ==  663) ?  82.875 : (SRATIOF ==  664) ?  83.000 :
                               (SRATIOF ==  665) ?  83.125 : (SRATIOF ==  666) ?  83.250 : (SRATIOF ==  667) ?  83.375 : (SRATIOF ==  668) ?  83.500 : (SRATIOF ==  669) ?  83.625 : (SRATIOF ==  670) ?  83.750 : (SRATIOF ==  671) ?  83.875 : (SRATIOF ==  672) ?  84.000 :
                               (SRATIOF ==  673) ?  84.125 : (SRATIOF ==  674) ?  84.250 : (SRATIOF ==  675) ?  84.375 : (SRATIOF ==  676) ?  84.500 : (SRATIOF ==  677) ?  84.625 : (SRATIOF ==  678) ?  84.750 : (SRATIOF ==  679) ?  84.875 : (SRATIOF ==  680) ?  85.000 :
                               (SRATIOF ==  681) ?  85.125 : (SRATIOF ==  682) ?  85.250 : (SRATIOF ==  683) ?  85.375 : (SRATIOF ==  684) ?  85.500 : (SRATIOF ==  685) ?  85.625 : (SRATIOF ==  686) ?  85.750 : (SRATIOF ==  687) ?  85.875 : (SRATIOF ==  688) ?  86.000 :
                               (SRATIOF ==  689) ?  86.125 : (SRATIOF ==  690) ?  86.250 : (SRATIOF ==  691) ?  86.375 : (SRATIOF ==  692) ?  86.500 : (SRATIOF ==  693) ?  86.625 : (SRATIOF ==  694) ?  86.750 : (SRATIOF ==  695) ?  86.875 : (SRATIOF ==  696) ?  87.000 :
                               (SRATIOF ==  697) ?  87.125 : (SRATIOF ==  698) ?  87.250 : (SRATIOF ==  699) ?  87.375 : (SRATIOF ==  700) ?  87.500 : (SRATIOF ==  701) ?  87.625 : (SRATIOF ==  702) ?  87.750 : (SRATIOF ==  703) ?  87.875 : (SRATIOF ==  704) ?  88.000 :
                               (SRATIOF ==  705) ?  88.125 : (SRATIOF ==  706) ?  88.250 : (SRATIOF ==  707) ?  88.375 : (SRATIOF ==  708) ?  88.500 : (SRATIOF ==  709) ?  88.625 : (SRATIOF ==  710) ?  88.750 : (SRATIOF ==  711) ?  88.875 : (SRATIOF ==  712) ?  89.000 :
                               (SRATIOF ==  713) ?  89.125 : (SRATIOF ==  714) ?  89.250 : (SRATIOF ==  715) ?  89.375 : (SRATIOF ==  716) ?  89.500 : (SRATIOF ==  717) ?  89.625 : (SRATIOF ==  718) ?  89.750 : (SRATIOF ==  719) ?  89.875 : (SRATIOF ==  720) ?  90.000 :
                               (SRATIOF ==  721) ?  90.125 : (SRATIOF ==  722) ?  90.250 : (SRATIOF ==  723) ?  90.375 : (SRATIOF ==  724) ?  90.500 : (SRATIOF ==  725) ?  90.625 : (SRATIOF ==  726) ?  90.750 : (SRATIOF ==  727) ?  90.875 : (SRATIOF ==  728) ?  91.000 :
                               (SRATIOF ==  729) ?  91.125 : (SRATIOF ==  730) ?  91.250 : (SRATIOF ==  731) ?  91.375 : (SRATIOF ==  732) ?  91.500 : (SRATIOF ==  733) ?  91.625 : (SRATIOF ==  734) ?  91.750 : (SRATIOF ==  735) ?  91.875 : (SRATIOF ==  736) ?  92.000 :
                               (SRATIOF ==  737) ?  92.125 : (SRATIOF ==  738) ?  92.250 : (SRATIOF ==  739) ?  92.375 : (SRATIOF ==  740) ?  92.500 : (SRATIOF ==  741) ?  92.625 : (SRATIOF ==  742) ?  92.750 : (SRATIOF ==  743) ?  92.875 : (SRATIOF ==  744) ?  93.000 :
                               (SRATIOF ==  745) ?  93.125 : (SRATIOF ==  746) ?  93.250 : (SRATIOF ==  747) ?  93.375 : (SRATIOF ==  748) ?  93.500 : (SRATIOF ==  749) ?  93.625 : (SRATIOF ==  750) ?  93.750 : (SRATIOF ==  751) ?  93.875 : (SRATIOF ==  752) ?  94.000 :
                               (SRATIOF ==  753) ?  94.125 : (SRATIOF ==  754) ?  94.250 : (SRATIOF ==  755) ?  94.375 : (SRATIOF ==  756) ?  94.500 : (SRATIOF ==  757) ?  94.625 : (SRATIOF ==  758) ?  94.750 : (SRATIOF ==  759) ?  94.875 : (SRATIOF ==  760) ?  95.000 :
                               (SRATIOF ==  761) ?  95.125 : (SRATIOF ==  762) ?  95.250 : (SRATIOF ==  763) ?  95.375 : (SRATIOF ==  764) ?  95.500 : (SRATIOF ==  765) ?  95.625 : (SRATIOF ==  766) ?  95.750 : (SRATIOF ==  767) ?  95.875 : (SRATIOF ==  768) ?  96.000 :
                               (SRATIOF ==  769) ?  96.125 : (SRATIOF ==  770) ?  96.250 : (SRATIOF ==  771) ?  96.375 : (SRATIOF ==  772) ?  96.500 : (SRATIOF ==  773) ?  96.625 : (SRATIOF ==  774) ?  96.750 : (SRATIOF ==  775) ?  96.875 : (SRATIOF ==  776) ?  97.000 :
                               (SRATIOF ==  777) ?  97.125 : (SRATIOF ==  778) ?  97.250 : (SRATIOF ==  779) ?  97.375 : (SRATIOF ==  780) ?  97.500 : (SRATIOF ==  781) ?  97.625 : (SRATIOF ==  782) ?  97.750 : (SRATIOF ==  783) ?  97.875 : (SRATIOF ==  784) ?  98.000 :
                               (SRATIOF ==  785) ?  98.125 : (SRATIOF ==  786) ?  98.250 : (SRATIOF ==  787) ?  98.375 : (SRATIOF ==  788) ?  98.500 : (SRATIOF ==  789) ?  98.625 : (SRATIOF ==  790) ?  98.750 : (SRATIOF ==  791) ?  98.875 : (SRATIOF ==  792) ?  99.000 :
                               (SRATIOF ==  793) ?  99.125 : (SRATIOF ==  794) ?  99.250 : (SRATIOF ==  795) ?  99.375 : (SRATIOF ==  796) ?  99.500 : (SRATIOF ==  797) ?  99.625 : (SRATIOF ==  798) ?  99.750 : (SRATIOF ==  799) ?  99.875 : (SRATIOF ==  800) ? 100.000 :
                               (SRATIOF ==  801) ? 100.125 : (SRATIOF ==  802) ? 100.250 : (SRATIOF ==  803) ? 100.375 : (SRATIOF ==  804) ? 100.500 : (SRATIOF ==  805) ? 100.625 : (SRATIOF ==  806) ? 100.750 : (SRATIOF ==  807) ? 100.875 : (SRATIOF ==  808) ? 101.000 :
                               (SRATIOF ==  809) ? 101.125 : (SRATIOF ==  810) ? 101.250 : (SRATIOF ==  811) ? 101.375 : (SRATIOF ==  812) ? 101.500 : (SRATIOF ==  813) ? 101.625 : (SRATIOF ==  814) ? 101.750 : (SRATIOF ==  815) ? 101.875 : (SRATIOF ==  816) ? 102.000 :
                               (SRATIOF ==  817) ? 102.125 : (SRATIOF ==  818) ? 102.250 : (SRATIOF ==  819) ? 102.375 : (SRATIOF ==  820) ? 102.500 : (SRATIOF ==  821) ? 102.625 : (SRATIOF ==  822) ? 102.750 : (SRATIOF ==  823) ? 102.875 : (SRATIOF ==  824) ? 103.000 :
                               (SRATIOF ==  825) ? 103.125 : (SRATIOF ==  826) ? 103.250 : (SRATIOF ==  827) ? 103.375 : (SRATIOF ==  828) ? 103.500 : (SRATIOF ==  829) ? 103.625 : (SRATIOF ==  830) ? 103.750 : (SRATIOF ==  831) ? 103.875 : (SRATIOF ==  832) ? 104.000 :
                               (SRATIOF ==  833) ? 104.125 : (SRATIOF ==  834) ? 104.250 : (SRATIOF ==  835) ? 104.375 : (SRATIOF ==  836) ? 104.500 : (SRATIOF ==  837) ? 104.625 : (SRATIOF ==  838) ? 104.750 : (SRATIOF ==  839) ? 104.875 : (SRATIOF ==  840) ? 105.000 :
                               (SRATIOF ==  841) ? 105.125 : (SRATIOF ==  842) ? 105.250 : (SRATIOF ==  843) ? 105.375 : (SRATIOF ==  844) ? 105.500 : (SRATIOF ==  845) ? 105.625 : (SRATIOF ==  846) ? 105.750 : (SRATIOF ==  847) ? 105.875 : (SRATIOF ==  848) ? 106.000 :
                               (SRATIOF ==  849) ? 106.125 : (SRATIOF ==  850) ? 106.250 : (SRATIOF ==  851) ? 106.375 : (SRATIOF ==  852) ? 106.500 : (SRATIOF ==  853) ? 106.625 : (SRATIOF ==  854) ? 106.750 : (SRATIOF ==  855) ? 106.875 : (SRATIOF ==  856) ? 107.000 :
                               (SRATIOF ==  857) ? 107.125 : (SRATIOF ==  858) ? 107.250 : (SRATIOF ==  859) ? 107.375 : (SRATIOF ==  860) ? 107.500 : (SRATIOF ==  861) ? 107.625 : (SRATIOF ==  862) ? 107.750 : (SRATIOF ==  863) ? 107.875 : (SRATIOF ==  864) ? 108.000 :
                               (SRATIOF ==  865) ? 108.125 : (SRATIOF ==  866) ? 108.250 : (SRATIOF ==  867) ? 108.375 : (SRATIOF ==  868) ? 108.500 : (SRATIOF ==  869) ? 108.625 : (SRATIOF ==  870) ? 108.750 : (SRATIOF ==  871) ? 108.875 : (SRATIOF ==  872) ? 109.000 :
                               (SRATIOF ==  873) ? 109.125 : (SRATIOF ==  874) ? 109.250 : (SRATIOF ==  875) ? 109.375 : (SRATIOF ==  876) ? 109.500 : (SRATIOF ==  877) ? 109.625 : (SRATIOF ==  878) ? 109.750 : (SRATIOF ==  879) ? 109.875 : (SRATIOF ==  880) ? 110.000 :
                               (SRATIOF ==  881) ? 110.125 : (SRATIOF ==  882) ? 110.250 : (SRATIOF ==  883) ? 110.375 : (SRATIOF ==  884) ? 110.500 : (SRATIOF ==  885) ? 110.625 : (SRATIOF ==  886) ? 110.750 : (SRATIOF ==  887) ? 110.875 : (SRATIOF ==  888) ? 111.000 :
                               (SRATIOF ==  889) ? 111.125 : (SRATIOF ==  890) ? 111.250 : (SRATIOF ==  891) ? 111.375 : (SRATIOF ==  892) ? 111.500 : (SRATIOF ==  893) ? 111.625 : (SRATIOF ==  894) ? 111.750 : (SRATIOF ==  895) ? 111.875 : (SRATIOF ==  896) ? 112.000 :
                               (SRATIOF ==  897) ? 112.125 : (SRATIOF ==  898) ? 112.250 : (SRATIOF ==  899) ? 112.375 : (SRATIOF ==  900) ? 112.500 : (SRATIOF ==  901) ? 112.625 : (SRATIOF ==  902) ? 112.750 : (SRATIOF ==  903) ? 112.875 : (SRATIOF ==  904) ? 113.000 :
                               (SRATIOF ==  905) ? 113.125 : (SRATIOF ==  906) ? 113.250 : (SRATIOF ==  907) ? 113.375 : (SRATIOF ==  908) ? 113.500 : (SRATIOF ==  909) ? 113.625 : (SRATIOF ==  910) ? 113.750 : (SRATIOF ==  911) ? 113.875 : (SRATIOF ==  912) ? 114.000 :
                               (SRATIOF ==  913) ? 114.125 : (SRATIOF ==  914) ? 114.250 : (SRATIOF ==  915) ? 114.375 : (SRATIOF ==  916) ? 114.500 : (SRATIOF ==  917) ? 114.625 : (SRATIOF ==  918) ? 114.750 : (SRATIOF ==  919) ? 114.875 : (SRATIOF ==  920) ? 115.000 :
                               (SRATIOF ==  921) ? 115.125 : (SRATIOF ==  922) ? 115.250 : (SRATIOF ==  923) ? 115.375 : (SRATIOF ==  924) ? 115.500 : (SRATIOF ==  925) ? 115.625 : (SRATIOF ==  926) ? 115.750 : (SRATIOF ==  927) ? 115.875 : (SRATIOF ==  928) ? 116.000 :
                               (SRATIOF ==  929) ? 116.125 : (SRATIOF ==  930) ? 116.250 : (SRATIOF ==  931) ? 116.375 : (SRATIOF ==  932) ? 116.500 : (SRATIOF ==  933) ? 116.625 : (SRATIOF ==  934) ? 116.750 : (SRATIOF ==  935) ? 116.875 : (SRATIOF ==  936) ? 117.000 :
                               (SRATIOF ==  937) ? 117.125 : (SRATIOF ==  938) ? 117.250 : (SRATIOF ==  939) ? 117.375 : (SRATIOF ==  940) ? 117.500 : (SRATIOF ==  941) ? 117.625 : (SRATIOF ==  942) ? 117.750 : (SRATIOF ==  943) ? 117.875 : (SRATIOF ==  944) ? 118.000 :
                               (SRATIOF ==  945) ? 118.125 : (SRATIOF ==  946) ? 118.250 : (SRATIOF ==  947) ? 118.375 : (SRATIOF ==  948) ? 118.500 : (SRATIOF ==  949) ? 118.625 : (SRATIOF ==  950) ? 118.750 : (SRATIOF ==  951) ? 118.875 : (SRATIOF ==  952) ? 119.000 :
                               (SRATIOF ==  953) ? 119.125 : (SRATIOF ==  954) ? 119.250 : (SRATIOF ==  955) ? 119.375 : (SRATIOF ==  956) ? 119.500 : (SRATIOF ==  957) ? 119.625 : (SRATIOF ==  958) ? 119.750 : (SRATIOF ==  959) ? 119.875 : (SRATIOF ==  960) ? 120.000 :
                               (SRATIOF ==  961) ? 120.125 : (SRATIOF ==  962) ? 120.250 : (SRATIOF ==  963) ? 120.375 : (SRATIOF ==  964) ? 120.500 : (SRATIOF ==  965) ? 120.625 : (SRATIOF ==  966) ? 120.750 : (SRATIOF ==  967) ? 120.875 : (SRATIOF ==  968) ? 121.000 :
                               (SRATIOF ==  969) ? 121.125 : (SRATIOF ==  970) ? 121.250 : (SRATIOF ==  971) ? 121.375 : (SRATIOF ==  972) ? 121.500 : (SRATIOF ==  973) ? 121.625 : (SRATIOF ==  974) ? 121.750 : (SRATIOF ==  975) ? 121.875 : (SRATIOF ==  976) ? 122.000 :
                               (SRATIOF ==  977) ? 122.125 : (SRATIOF ==  978) ? 122.250 : (SRATIOF ==  979) ? 122.375 : (SRATIOF ==  980) ? 122.500 : (SRATIOF ==  981) ? 122.625 : (SRATIOF ==  982) ? 122.750 : (SRATIOF ==  983) ? 122.875 : (SRATIOF ==  984) ? 123.000 :
                               (SRATIOF ==  985) ? 123.125 : (SRATIOF ==  986) ? 123.250 : (SRATIOF ==  987) ? 123.375 : (SRATIOF ==  988) ? 123.500 : (SRATIOF ==  989) ? 123.625 : (SRATIOF ==  990) ? 123.750 : (SRATIOF ==  991) ? 123.875 : (SRATIOF ==  992) ? 124.000 :
                               (SRATIOF ==  993) ? 124.125 : (SRATIOF ==  994) ? 124.250 : (SRATIOF ==  995) ? 124.375 : (SRATIOF ==  996) ? 124.500 : (SRATIOF ==  997) ? 124.625 : (SRATIOF ==  998) ? 124.750 : (SRATIOF ==  999) ? 124.875 : (SRATIOF == 1000) ? 125.000 :
                               (SRATIOF == 1001) ? 125.125 : (SRATIOF == 1002) ? 125.250 : (SRATIOF == 1003) ? 125.375 : (SRATIOF == 1004) ? 125.500 : (SRATIOF == 1005) ? 125.625 : (SRATIOF == 1006) ? 125.750 : (SRATIOF == 1007) ? 125.875 : (SRATIOF == 1008) ? 126.000 :
                               (SRATIOF == 1009) ? 126.125 : (SRATIOF == 1010) ? 126.250 : (SRATIOF == 1011) ? 126.375 : (SRATIOF == 1012) ? 126.500 : (SRATIOF == 1013) ? 126.625 : (SRATIOF == 1014) ? 126.750 : (SRATIOF == 1015) ? 126.875 : (SRATIOF == 1016) ? 127.000 :
                               (SRATIOF == 1017) ? 127.125 : (SRATIOF == 1018) ? 127.250 : (SRATIOF == 1019) ? 127.375 : (SRATIOF == 1020) ? 127.500 : (SRATIOF == 1021) ? 127.625 : (SRATIOF == 1022) ? 127.750 : (SRATIOF == 1023) ? 127.875 : (SRATIOF == 1024) ? 128.000 : 0.000,
        STATIC_DUTY0   =>    CP_ODIV0_DUTY,  
        STATIC_DUTY1   =>    CP_ODIV1_DUTY,  
        STATIC_DUTY2   =>    CP_ODIV2_DUTY,  
        STATIC_DUTY3   =>    CP_ODIV3_DUTY,  
        STATIC_DUTY4   =>    CP_ODIV4_DUTY,  
        STATIC_DUTY5   =>    CP_ODIV5_DUTY,  
        STATIC_DUTY6   =>    CP_ODIV6_DUTY,  
        STATIC_DUTYF   =>    CP_FDIV_DUTY,   
        STATIC_PHASE   =>    STATIC_PHASE,
        STATIC_PHASE0  =>    CP_ODIV0_FPHASE,
        STATIC_PHASE1  =>    CP_ODIV1_FPHASE,
        STATIC_PHASE2  =>    CP_ODIV2_FPHASE,
        STATIC_PHASE3  =>    CP_ODIV3_FPHASE,
        STATIC_PHASE4  =>    CP_ODIV4_FPHASE,
        STATIC_PHASE5  =>    CP_ODIV5_FPHASE,
        STATIC_PHASE6  =>    CP_ODIV6_FPHASE,
        STATIC_PHASEF  =>    CP_FDIV_FPHASE ,
        STATIC_CPHASE0 =>    CP_ODIV0_CPHASE,
        STATIC_CPHASE1 =>    CP_ODIV1_CPHASE,
        STATIC_CPHASE2 =>    CP_ODIV2_CPHASE,
        STATIC_CPHASE3 =>    CP_ODIV3_CPHASE,
        STATIC_CPHASE4 =>    CP_ODIV4_CPHASE,
        STATIC_CPHASE5 =>    CP_ODIV5_CPHASE,
        STATIC_CPHASE6 =>    CP_ODIV6_CPHASE,
        STATIC_CPHASEF =>    CP_FDIV_CPHASE ,
        CLK_DPS0_EN    =>   (CP_ODIV0_DPSORCAS_SEL == 0) ? "FALSE" : "TRUE",
        CLK_DPS1_EN    =>   (CP_ODIV1_DPSORCAS_SEL == 0) ? "FALSE" : "TRUE",
        CLK_DPS2_EN    =>   (CP_ODIV2_DPSORCAS_SEL == 0) ? "FALSE" : "TRUE",
        CLK_DPS3_EN    =>   (CP_ODIV3_DPSORCAS_SEL == 0) ? "FALSE" : "TRUE",
        CLK_DPS4_EN    =>   (CP_ODIV4_DPSORCAS_SEL == 0) ? "FALSE" : "TRUE",
        CLK_DPS5_EN    =>   (CP_ODIV5_DPSORCAS_SEL == 1) ? "TRUE" : "FALSE",
        CLK_DPS6_EN    =>   (CP_ODIV6_DPSORCAS_SEL == 0) ? "FALSE" : "TRUE",
        CLK_DPSF_EN    =>   (CP_FDIV_DPSORCAS_SEL  == 0) ? "FALSE" : "TRUE",
        CLK_CAS5_EN    =>   (CP_ODIV5_DPSORCAS_SEL == 2) ? "TRUE" : "FALSE",
        CLKOUT0_SYN_EN =>    CP_CLKOUT0_GATE_EN , 
        CLKOUT1_SYN_EN =>    CP_CLKOUT1_GATE_EN , 
        CLKOUT2_SYN_EN =>    CP_CLKOUT2_GATE_EN , 
        CLKOUT3_SYN_EN =>    CP_CLKOUT3_GATE_EN , 
        CLKOUT4_SYN_EN =>    CP_CLKOUT4_GATE_EN , 
        CLKOUT5_SYN_EN =>    CP_CLKOUT5_GATE_EN , 
        CLKOUT6_SYN_EN =>    CP_CLKOUT6_GATE_EN , 
        CLKOUTF_SYN_EN =>    CP_CLKFBOUT_GATE_EN, 
      //SSC_MODE       =>    , 
      //SSC_FREQ       =>    , 
        INTERNAL_FB    =>   (CP_FEEDBK_SEL == 1)  ? "CLKOUT0" :
                            (CP_FEEDBK_SEL == 2)  ? "CLKOUT1" :
                            (CP_FEEDBK_SEL == 3)  ? "CLKOUT2" :
                            (CP_FEEDBK_SEL == 4)  ? "CLKOUT3" :
                            (CP_FEEDBK_SEL == 5)  ? "CLKOUT4" :
                            (CP_FEEDBK_SEL == 6)  ? "CLKOUT5" : 
                            (CP_FEEDBK_SEL == 7)  ? "CLKOUT6" :
                            (CP_FEEDBK_SEL == 0)  ? "CLKOUTF" : "DISABLE", 
        EXTERNAL_FB    =>   (CP_FEEDBK_SEL == 9)  ? "CLKOUT0" :
                            (CP_FEEDBK_SEL == 10) ? "CLKOUT1" :
                            (CP_FEEDBK_SEL == 11) ? "CLKOUT2" :
                            (CP_FEEDBK_SEL == 12) ? "CLKOUT3" :
                            (CP_FEEDBK_SEL == 13) ? "CLKOUT4" :
                            (CP_FEEDBK_SEL == 14) ? "CLKOUT5" : 
                            (CP_FEEDBK_SEL == 15) ? "CLKOUT6" :
                            (CP_FEEDBK_SEL == 8)  ? "CLKOUTF" : "DISABLE"
                            //,
      //BANDWIDTH      =>      // "OPTIMIZED" /* pragma PAP_ARC_ALTERNATIVE_PMT_VALUE = "OPTIMIZED | LOW | HIGH" */
    )
    port map
    (
        CLKOUT0     =>     CLKOUT0,
        CLKOUT0N    =>     CLKOUT0N,
        CLKOUT1     =>     CLKOUT1,
        CLKOUT1N    =>     CLKOUT1N,
        CLKOUT2     =>     CLKOUT2,
        CLKOUT2N    =>     CLKOUT2N,
        CLKOUT3     =>     CLKOUT3,
        CLKOUT3N    =>     CLKOUT3N,
        CLKOUT4     =>     CLKOUT4,
        CLKOUT5     =>     CLKOUT5,
        CLKOUT6     =>     CLKOUT6,
        CLKOUTF     =>     CLKFBOUT,
        CLKOUTFN    =>     CLKFBOUTN,
        LOCK        =>     PLL_LOCK,
        DPS_DONE    =>     DPS_DONE,
        APB_RDATA   =>     PRDATA,
        APB_READY   =>     PREADY,
        CLKIN1      =>     CLK_IN0,
        CLKIN2      =>     CLK_IN1,
        CLKFB       =>     CLK_FB,
        CLKIN_SEL   => (CP_DYNSEL_ENABLE == "TRUE") ? DYNSEL_CLKIN : 
                       (CP_CLKIN_STASEL == 1'b0) ? 1'b0 : 1'b1,
      //PFDEN       =>     PFDEN,
        DPS_CLK     =>     DPS_CLK,
        DPS_EN      =>     DPS_EN,
        DPS_DIR     =>     DPS_DIR,
        CLKOUT0_SYN =>     CLKOUT0_GATE,
        CLKOUT1_SYN =>     CLKOUT1_GATE,
        CLKOUT2_SYN =>     CLKOUT2_GATE,
        CLKOUT3_SYN =>     CLKOUT3_GATE,
        CLKOUT4_SYN =>     CLKOUT4_GATE,
        CLKOUT5_SYN =>     CLKOUT5_GATE,
        CLKOUT6_SYN =>     CLKOUT6_GATE,
        CLKOUTF_SYN =>     CLKFBOUT_GATE,
        PLL_PWD     =>     PLL_PWD,
        RST         =>     PLL_RST,
        APB_CLK     =>     PCLK,
        APB_RST_N   =>     PRESETN,
        APB_ADDR    =>     PADDR,
        APB_SEL     =>     PSEL,
        APB_EN      =>     PENABLE,
        APB_WRITE   =>     PWRITE,
        APB_WDATA   =>     PWDATA
    );
};
