tarted
grid
device HSSTLP
{
    // grid_property_def_start
    // grid_property_def_end

    parameter
    (
        config string CP_GRSN_DIS = "FALSE",
        config string CP_HSST_EN = "TRUE",
        config string CP_CFG_RSTN_0 = "TRUE",
        config string CP_CFG_RSTN_1 = "TRUE",
        config string CP_CFG_RSTN_2 = "TRUE",
        config string CP_CFG_RSTN_3 = "TRUE",
        config string CP_CFG_RSTN_PLL_0 = "TRUE",
        config string CP_CFG_RSTN_PLL_1 = "TRUE",
        config int CP_LANE0_MUX_BIAS = 2,
        config int CP_LANE0_PD_CLK = 0,
        config int CP_LANE1_MUX_BIAS = 2,
        config int CP_LANE1_PD_CLK = 0,
        config int CP_LANE2_MUX_BIAS = 2,
        config int CP_LANE2_PD_CLK = 0,
        config int CP_LANE3_MUX_BIAS = 2,
        config int CP_LANE3_PD_CLK = 0,
        config int CP_LANE0_REG_SYNC = 0,
        config int CP_LANE0_REG_SYNC_OW = 0,
        config int CP_LANE1_REG_SYNC = 0,
        config int CP_LANE1_REG_SYNC_OW = 0,
        config int CP_LANE2_REG_SYNC = 0,
        config int CP_LANE2_REG_SYNC_OW = 0,
        config int CP_LANE3_REG_SYNC = 0,
        config int CP_LANE3_REG_SYNC_OW = 0,
        config int CP_LANE0_PLL_LOCK_OW = 0,
        config int CP_LANE0_PLL_LOCK_OW_EN = 0,
        config int CP_LANE1_PLL_LOCK_OW = 0,
        config int CP_LANE1_PLL_LOCK_OW_EN = 0,
        config int CP_LANE2_PLL_LOCK_OW = 0,
        config int CP_LANE2_PLL_LOCK_OW_EN = 0,
        config int CP_LANE3_PLL_LOCK_OW = 0,
        config int CP_LANE3_PLL_LOCK_OW_EN = 0,
        config int CP_PLL0_TX_SYNCK_SEL = 0,
        config int CP_PLL1_TX_SYNCK_SEL = 0,
        config int CP_PLL0_TX_SYNCK_PD = 0,
        config int CP_PLL1_TX_SYNCK_PD = 0,
        config int CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_235_232 = 0,
        config int CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_231_224 = 0,
        config int CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_223_216 = 0,
        config int CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_215_208 = 0,
        config int CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_207_200 = 0,
        config int CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_196_192 = 0,
        config int CP_PMA_PLL_REG_BG_TRIM = 2,
        config int CP_PMA_PLL_REG_IBUP_A1 = 262143,
        config int CP_PMA_PLL_REG_IBUP_A2 = 0,
        config int CP_PMA_PLL_REG_IBUP_PD = 0,
        config string CP_PMA_PLL_REG_V2I_BIAS_SEL = "FALSE",
        config string CP_PMA_PLL_REG_V2I_EN = "TRUE",
        config int CP_PMA_PLL_REG_V2I_TB_SEL = 0,
        config string CP_PMA_PLL_REG_V2I_RCALTEST_PD = "FALSE",
        config int CP_PMA_PLL_REG_RES_CAL_TEST = 0,
        config int CP_PMA_RES_CAL_DIV = 0,
        config string CP_PMA_RES_CAL_CLK_SEL = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL = "TRUE",
        config string CP_PLL1_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL = "TRUE",
        config int CP_LANE0_PCS_SLAVE = 0,
        config string CP_LANE0_PCS_BYPASS_WORD_ALIGN = "FALSE",
        config string CP_LANE0_PCS_BYPASS_DENC = "FALSE",
        config string CP_LANE0_PCS_BYPASS_BONDING = "FALSE",
        config string CP_LANE0_PCS_BYPASS_CTC = "FALSE",
        config string CP_LANE0_PCS_BYPASS_GEAR = "FALSE",
        config string CP_LANE0_PCS_BYPASS_BRIDGE = "FALSE",
        config string CP_LANE0_PCS_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_LANE0_PCS_DATA_MODE = "X8",
        config string CP_LANE0_PCS_RX_POLARITY_INV = "DELAY",
        config string CP_LANE0_PCS_ALIGN_MODE = "1GB",
        config string CP_LANE0_PCS_SAMP_16B = "X20",
        config string CP_LANE0_PCS_FARLP_PWR_REDUCTION = "FALSE",
        config int CP_LANE0_PCS_COMMA_REG0 = 0,
        config int CP_LANE0_PCS_COMMA_MASK = 0,
        config string CP_LANE0_PCS_CEB_MODE = "10GB",
        config string CP_LANE0_PCS_CTC_MODE = "1SKIP",
        config int CP_LANE0_PCS_A_REG = 0,
        config string CP_LANE0_PCS_GE_AUTO_EN = "FALSE",
        config int CP_LANE0_PCS_SKIP_REG0 = 0,
        config int CP_LANE0_PCS_SKIP_REG1 = 0,
        config int CP_LANE0_PCS_SKIP_REG2 = 0,
        config int CP_LANE0_PCS_SKIP_REG3 = 0,
        config string CP_LANE0_PCS_DEC_DUAL = "FALSE",
        config string CP_LANE0_PCS_SPLIT = "FALSE",
        config string CP_LANE0_PCS_FIFOFLAG_CTC = "FALSE",
        config string CP_LANE0_PCS_COMMA_DET_MODE = "COMMA_PATTERN",
        config string CP_LANE0_PCS_ERRDETECT_SILENCE = "FALSE",
        config string CP_LANE0_PCS_PMA_RCLK_POLINV = "PMA_RCLK",
        config string CP_LANE0_PCS_PCS_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE0_PCS_CB_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE0_PCS_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE0_PCS_RCLK_POLINV = "RCLK",
        config string CP_LANE0_PCS_BRIDGE_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE0_PCS_PCS_RCLK_EN = "FALSE",
        config string CP_LANE0_PCS_CB_RCLK_EN = "FALSE",
        config string CP_LANE0_PCS_AFTER_CTC_RCLK_EN = "FALSE",
        config string CP_LANE0_PCS_AFTER_CTC_RCLK_EN_GB = "FALSE",
        config string CP_LANE0_PCS_PCS_RX_RSTN = "FALSE",
        config string CP_LANE0_PCS_PCIE_SLAVE = "MASTER",
        config string CP_LANE0_PCS_RX_64B66B_67B = "NORMAL",
        config string CP_LANE0_PCS_RX_BRIDGE_CLK_POLINV = "RX_BRIDGE_CLK",
        config string CP_LANE0_PCS_PCS_CB_RSTN = "FALSE",
        config string CP_LANE0_PCS_TX_BRIDGE_GEAR_SEL = "FALSE",
        config string CP_LANE0_PCS_TX_BYPASS_BRIDGE_UINT = "FALSE",
        config string CP_LANE0_PCS_TX_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_LANE0_PCS_TX_BYPASS_GEAR = "FALSE",
        config string CP_LANE0_PCS_TX_BYPASS_ENC = "FALSE",
        config string CP_LANE0_PCS_TX_BYPASS_BIT_SLIP = "FALSE",
        config string CP_LANE0_PCS_TX_GEAR_SPLIT = "FALSE",
        config string CP_LANE0_PCS_TX_DRIVE_REG_MODE = "NO_CHANGE",
        config int CP_LANE0_PCS_TX_BIT_SLIP_CYCLES = 0,
        config string CP_LANE0_PCS_INT_TX_MASK_0 = "FALSE",
        config string CP_LANE0_PCS_INT_TX_MASK_1 = "FALSE",
        config string CP_LANE0_PCS_INT_TX_MASK_2 = "FALSE",
        config string CP_LANE0_PCS_INT_TX_CLR_0 = "FALSE",
        config string CP_LANE0_PCS_INT_TX_CLR_1 = "FALSE",
        config string CP_LANE0_PCS_INT_TX_CLR_2 = "FALSE",
        config string CP_LANE0_PCS_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        config string CP_LANE0_PCS_TX_PCS_CLK_EN_SEL = "FALSE",
        config string CP_LANE0_PCS_TX_BRIDGE_TCLK_SEL = "TCLK",
        config string CP_LANE0_PCS_TX_TCLK_POLINV = "TCLK",
        config string CP_LANE0_PCS_PCS_TCLK_SEL = "PMA_TCLK",
        config string CP_LANE0_PCS_TX_PCS_TX_RSTN = "FALSE",
        config string CP_LANE0_PCS_TX_SLAVE = "MASTER",
        config string CP_LANE0_PCS_TX_GEAR_CLK_EN_SEL = "FALSE",
        config string CP_LANE0_PCS_DATA_WIDTH_MODE = "X20",
        config string CP_LANE0_PCS_TX_64B66B_67B = "NORMAL",
        config string CP_LANE0_PCS_GEAR_TCLK_SEL = "PMA_TCLK",
        config string CP_LANE0_PCS_TX_TCLK2FABRIC_SEL = "FALSE",
        config string CP_LANE0_PCS_TX_OUTZZ = "FALSE",
        config string CP_LANE0_PCS_ENC_DUAL = "FALSE",
        config string CP_LANE0_PCS_TX_BITSLIP_DATA_MODE = "X10",
        config string CP_LANE0_PCS_TX_BRIDGE_CLK_POLINV = "TX_BRIDGE_CLK",
        config int CP_LANE0_PCS_COMMA_REG1 = 0,
        config int CP_LANE0_PCS_RAPID_IMAX = 0,
        config int CP_LANE0_PCS_RAPID_VMIN_1 = 0,
        config int CP_LANE0_PCS_RAPID_VMIN_2 = 0,
        config string CP_LANE0_PCS_RX_PRBS_MODE = "DISABLE",
        config string CP_LANE0_PCS_RX_ERRCNT_CLR = "FALSE",
        config string CP_LANE0_PCS_PRBS_ERR_LPBK = "FALSE",
        config string CP_LANE0_PCS_TX_PRBS_MODE = "DISABLE",
        config string CP_LANE0_PCS_TX_INSERT_ER = "FALSE",
        config string CP_LANE0_PCS_ENABLE_PRBS_GEN = "FALSE",
        config int CP_LANE0_PCS_DEFAULT_RADDR = 0,
        config int CP_LANE0_PCS_MASTER_CHECK_OFFSET = 0,
        config int CP_LANE0_PCS_DELAY_SET = 0,
        config string CP_LANE0_PCS_SEACH_OFFSET = "20BIT",
        config int CP_LANE0_PCS_CEB_RAPIDLS_MMAX = 0,
        config int CP_LANE0_PCS_CTC_AFULL = 20,
        config int CP_LANE0_PCS_CTC_AEMPTY = 12,
        config int CP_LANE0_PCS_CTC_CONTI_SKP_SET = 0,
        config string CP_LANE0_PCS_FAR_LOOP = "FALSE",
        config string CP_LANE0_PCS_NEAR_LOOP = "FALSE",
        config string CP_LANE0_PCS_PMA_TX2RX_PLOOP_EN = "FALSE",
        config string CP_LANE0_PCS_PMA_TX2RX_SLOOP_EN = "FALSE",
        config string CP_LANE0_PCS_PMA_RX2TX_PLOOP_EN = "FALSE",
        config string CP_LANE0_PCS_INT_RX_MASK_0 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_MASK_1 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_MASK_2 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_MASK_3 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_MASK_4 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_MASK_5 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_MASK_6 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_MASK_7 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_CLR_0 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_CLR_1 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_CLR_2 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_CLR_3 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_CLR_4 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_CLR_5 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_CLR_6 = "FALSE",
        config string CP_LANE0_PCS_INT_RX_CLR_7 = "FALSE",
        config string CP_LANE0_PCS_CA_RSTN_RX = "FALSE",
        config string CP_LANE0_PCS_CA_DYN_DLY_EN_RX = "FALSE",
        config string CP_LANE0_PCS_CA_DYN_DLY_SEL_RX = "FALSE",
        config int CP_LANE0_PCS_CA_RX = 0,
        config string CP_LANE0_PCS_CA_RSTN_TX = "FALSE",
        config string CP_LANE0_PCS_CA_DYN_DLY_EN_TX = "FALSE",
        config string CP_LANE0_PCS_CA_DYN_DLY_SEL_TX = "FALSE",
        config int CP_LANE0_PCS_CA_TX = 0,
        config string CP_LANE0_PCS_RXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_LANE0_PCS_WDALIGN_PWR_REDUCTION = "NORMAL",
        config string CP_LANE0_PCS_RXDEC_PWR_REDUCTION = "NORMAL",
        config string CP_LANE0_PCS_RXCB_PWR_REDUCTION = "NORMAL",
        config string CP_LANE0_PCS_RXCTC_PWR_REDUCTION = "NORMAL",
        config string CP_LANE0_PCS_RXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_LANE0_PCS_RXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_LANE0_PCS_RXTEST_PWR_REDUCTION = "NORMAL",
        config string CP_LANE0_PCS_TXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_LANE0_PCS_TXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_LANE0_PCS_TXENC_PWR_REDUCTION = "NORMAL",
        config string CP_LANE0_PCS_TXBSLP_PWR_REDUCTION = "NORMAL",
        config string CP_LANE0_PCS_TXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_LANE0_PMA_REG_RX_PD = "ON",
        config string CP_LANE0_PMA_REG_RX_PD_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RX_RESERVED_2 = "FALSE",
        config string CP_LANE0_PMA_REG_RX_RESERVED_3 = "FALSE",
        config string CP_LANE0_PMA_REG_RX_DATAPATH_PD = "ON",
        config string CP_LANE0_PMA_REG_RX_DATAPATH_PD_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RX_SIGDET_PD = "ON",
        config string CP_LANE0_PMA_REG_RX_SIGDET_PD_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RX_DCC_RST_N = "TRUE",
        config string CP_LANE0_PMA_REG_RX_DCC_RST_N_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RX_CDR_RST_N = "TRUE",
        config string CP_LANE0_PMA_REG_RX_CDR_RST_N_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RX_SIGDET_RST_N = "TRUE",
        config string CP_LANE0_PMA_REG_RX_SIGDET_RST_N_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RXPCLK_SLIP = "FALSE",
        config string CP_LANE0_PMA_REG_RXPCLK_SLIP_OW = "FALSE",
        config string CP_LANE0_PMA_REG_RX_PCLKSWITCH_RST_N = "TRUE",
        config string CP_LANE0_PMA_REG_RX_PCLKSWITCH_RST_N_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RX_PCLKSWITCH = "FALSE",
        config string CP_LANE0_PMA_REG_RX_PCLKSWITCH_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RX_HIGHZ = "FALSE",
        config string CP_LANE0_PMA_REG_RX_HIGHZ_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RX_SIGDET_CLK_WINDOW = "FALSE",
        config string CP_LANE0_PMA_REG_RX_SIGDET_CLK_WINDOW_OW = "FALSE",
        config string CP_LANE0_PMA_REG_RX_PD_BIAS_RX = "FALSE",
        config string CP_LANE0_PMA_REG_RX_PD_BIAS_RX_OW = "FALSE",
        config string CP_LANE0_PMA_REG_RX_RESET_N = "FALSE",
        config string CP_LANE0_PMA_REG_RX_RESET_N_OW = "FALSE",
        config int CP_LANE0_PMA_REG_RX_RESERVED_29_28 = 0,
        config string CP_LANE0_PMA_REG_RX_BUSWIDTH = "20BIT",
        config string CP_LANE0_PMA_REG_RX_BUSWIDTH_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RX_RATE = "DIV1",
        config string CP_LANE0_PMA_REG_RX_RESERVED_36 = "FALSE",
        config string CP_LANE0_PMA_REG_RX_RATE_EN = "FALSE",
        config int CP_LANE0_PMA_REG_RX_RES_TRIM = 46,
        config string CP_LANE0_PMA_REG_RX_RESERVED_44 = "FALSE",
        config string CP_LANE0_PMA_REG_RX_RESERVED_45 = "FALSE",
        config string CP_LANE0_PMA_REG_RX_SIGDET_STATUS_EN = "FALSE",
        config int CP_LANE0_PMA_REG_RX_RESERVED_48_47 = 0,
        config int CP_LANE0_PMA_REG_RX_ICTRL_SIGDET = 5,
        config int CP_LANE0_PMA_REG_CDR_READY_THD = 2734,
        config string CP_LANE0_PMA_REG_RX_RESERVED_65 = "FALSE",
        config string CP_LANE0_PMA_REG_RX_PCLK_EDGE_SEL = "POS_EDGE",
        config int CP_LANE0_PMA_REG_RX_PIBUF_IC = 1,
        config string CP_LANE0_PMA_REG_RX_RESERVED_69 = "FALSE",
        config int CP_LANE0_PMA_REG_RX_DCC_IC_RX = 1,
        config int CP_LANE0_PMA_REG_CDR_READY_CHECK_CTRL = 0,
        config string CP_LANE0_PMA_REG_RX_ICTRL_TRX = "100PCT",
        config int CP_LANE0_PMA_REG_RX_RESERVED_77_76 = 0,
        config int CP_LANE0_PMA_REG_RX_RESERVED_79_78 = 1,
        config int CP_LANE0_PMA_REG_RX_RESERVED_81_80 = 1,
        config string CP_LANE0_PMA_REG_RX_ICTRL_PIBUF = "100PCT",
        config string CP_LANE0_PMA_REG_RX_ICTRL_PI = "100PCT",
        config string CP_LANE0_PMA_REG_RX_ICTRL_DCC = "100PCT",
        config int CP_LANE0_PMA_REG_RX_RESERVED_89_88 = 1,
        config string CP_LANE0_PMA_REG_TX_RATE = "DIV1",
        config string CP_LANE0_PMA_REG_RX_RESERVED_92 = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RATE_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_RST_N = "TRUE",
        config string CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_EN = "FALSE",
        config string CP_LANE0_PMA_REG_TXCLK_SEL = "PLL",
        config string CP_LANE0_PMA_REG_RX_DATA_POLARITY = "NORMAL",
        config string CP_LANE0_PMA_REG_RX_ERR_INSERT = "FALSE",
        config string CP_LANE0_PMA_REG_UDP_CHK_EN = "FALSE",
        config string CP_LANE0_PMA_REG_PRBS_SEL = "PRBS7",
        config string CP_LANE0_PMA_REG_PRBS_CHK_EN = "FALSE",
        config string CP_LANE0_PMA_REG_PRBS_CHK_WIDTH_SEL = "20BIT",
        config string CP_LANE0_PMA_REG_BIST_CHK_PAT_SEL = "PRBS",
        config string CP_LANE0_PMA_REG_LOAD_ERR_CNT = "FALSE",
        config string CP_LANE0_PMA_REG_CHK_COUNTER_EN = "FALSE",
        config int CP_LANE0_PMA_REG_CDR_PROP_GAIN = 7,
        config int CP_LANE0_PMA_REG_CDR_PROP_TURBO_GAIN = 5,
        config int CP_LANE0_PMA_REG_CDR_INT_GAIN = 7,
        config int CP_LANE0_PMA_REG_CDR_INT_TURBO_GAIN = 5,
        config int CP_LANE0_PMA_REG_CDR_INT_SAT_MAX = 768,
        config int CP_LANE0_PMA_REG_CDR_INT_SAT_MIN = 255,
        config string CP_LANE0_PMA_REG_CDR_INT_RST = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_INT_RST_OW = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_PROP_RST = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_PROP_RST_OW = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_LOCK_RST = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_LOCK_RST_OW = "FALSE",
        config int CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_SEL = 0,
        config int CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_D = 0,
        config string CP_LANE0_PMA_REG_CDR_LOCK_TIMER = "1_2U",
        config int CP_LANE0_PMA_REG_CDR_TURBO_MODE_TIMER = 1,
        config string CP_LANE0_PMA_REG_CDR_LOCK_VAL = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_LOCK_OW = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_INT_SAT_DET_EN = "TRUE",
        config string CP_LANE0_PMA_REG_CDR_SAT_AUTO_DIS = "TRUE",
        config string CP_LANE0_PMA_REG_CDR_GAIN_AUTO = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_TURBO_GAIN_AUTO = "FALSE",
        config int CP_LANE0_PMA_REG_RX_RESERVED_171_167 = 0,
        config int CP_LANE0_PMA_REG_RX_RESERVED_175_172 = 0,
        config string CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_EN = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_PI_CTRL_RST = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_PI_CTRL_RST_OW = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_SAT_DET_RST = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_SAT_DET_RST_OW = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_SAT_DET_STICKY_RST = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_SAT_DET_STICKY_RST_OW = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_SIGDET_STATUS_DIS = "FALSE",
        config int CP_LANE0_PMA_REG_CDR_SAT_DET_TIMER = 2,
        config string CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_VAL = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_OW = "FALSE",
        config string CP_LANE0_PMA_REG_CDR_TURBO_MODE_EN = "TRUE",
        config string CP_LANE0_PMA_REG_RX_RESERVED_190 = "FALSE",
        config int CP_LANE0_PMA_REG_RX_RESERVED_193_191 = 0,
        config string CP_LANE0_PMA_REG_CDR_STATUS_FIFO_EN = "TRUE",
        config int CP_LANE0_PMA_REG_PMA_TEST_SEL = 0,
        config int CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MIN = 3,
        config int CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MAX = 11,
        config int CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MIN = 15,
        config int CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MAX = 35,
        config int CP_LANE0_PMA_REG_RX_RESERVED_227_226 = 1,
        config int CP_LANE0_PMA_REG_COMWAKE_STATUS_CLEAR = 0,
        config int CP_LANE0_PMA_REG_COMINIT_STATUS_CLEAR = 0,
        config string CP_LANE0_PMA_REG_RX_SYNC_RST_N_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RX_SYNC_RST_N = "TRUE",
        config int CP_LANE0_PMA_REG_RX_RESERVED_233_232 = 0,
        config int CP_LANE0_PMA_REG_RX_RESERVED_235_234 = 0,
        config string CP_LANE0_PMA_REG_RX_SATA_COMINIT_OW = "FALSE",
        config string CP_LANE0_PMA_REG_RX_SATA_COMINIT = "FALSE",
        config string CP_LANE0_PMA_REG_RX_SATA_COMWAKE_OW = "FALSE",
        config string CP_LANE0_PMA_REG_RX_SATA_COMWAKE = "FALSE",
        config int CP_LANE0_PMA_REG_RX_RESERVED_241_240 = 0,
        config string CP_LANE0_PMA_REG_RX_DCC_DISABLE = "FALSE",
        config string CP_LANE0_PMA_REG_RX_RESERVED_243 = "FALSE",
        config string CP_LANE0_PMA_REG_RX_SLIP_SEL_EN = "FALSE",
        config int CP_LANE0_PMA_REG_RX_SLIP_SEL = 0,
        config string CP_LANE0_PMA_REG_RX_SLIP_EN = "FALSE",
        config int CP_LANE0_PMA_REG_RX_SIGDET_STATUS_SEL = 5,
        config string CP_LANE0_PMA_REG_RX_SIGDET_FSM_RST_N = "TRUE",
        config string CP_LANE0_PMA_REG_RX_RESERVED_254 = "FALSE",
        config string CP_LANE0_PMA_REG_RX_SIGDET_STATUS = "FALSE",
        config string CP_LANE0_PMA_REG_RX_SIGDET_VTH = "27MV",
        config int CP_LANE0_PMA_REG_RX_SIGDET_GRM = 0,
        config string CP_LANE0_PMA_REG_RX_SIGDET_PULSE_EXT = "FALSE",
        config int CP_LANE0_PMA_REG_RX_SIGDET_CH2_SEL = 0,
        config int CP_LANE0_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW = 3,
        config string CP_LANE0_PMA_REG_RX_SIGDET_CHK_WINDOW_EN = "TRUE",
        config int CP_LANE0_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING = 4,
        config string CP_LANE0_PMA_REG_SLIP_FIFO_INV_EN = "FALSE",
        config string CP_LANE0_PMA_REG_SLIP_FIFO_INV = "POS_EDGE",
        config int CP_LANE0_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL = 0,
        config int CP_LANE0_PMA_REG_RX_SIGDET_4OOB_DET_SEL = 7,
        config int CP_LANE0_PMA_REG_RX_RESERVED_285_283 = 0,
        config string CP_LANE0_PMA_REG_RX_RESERVED_286 = "FALSE",
        config int CP_LANE0_PMA_REG_RX_SIGDET_IC_I = 10,
        config string CP_LANE0_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW = "FALSE",
        config string CP_LANE0_PMA_REG_RX_OOB_DETECTOR_RESET_N = "FALSE",
        config string CP_LANE0_PMA_REG_RX_OOB_DETECTOR_PD_OW = "FALSE",
        config string CP_LANE0_PMA_REG_RX_OOB_DETECTOR_PD = "ON",
        config string CP_LANE0_PMA_REG_RX_LS_MODE_EN = "FALSE",
        config string CP_LANE0_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL = "FALSE",
        config string CP_LANE0_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL = "FALSE",
        config int CP_LANE0_PMA_REG_RX_EQ1_R_SET_TOP = 0,
        config int CP_LANE0_PMA_REG_RX_EQ1_R_SET_FB = 0,
        config int CP_LANE0_PMA_REG_RX_EQ1_C_SET_FB = 0,
        config string CP_LANE0_PMA_REG_RX_EQ1_OFF = "FALSE",
        config int CP_LANE0_PMA_REG_RX_EQ2_R_SET_TOP = 0,
        config int CP_LANE0_PMA_REG_RX_EQ2_R_SET_FB = 0,
        config int CP_LANE0_PMA_REG_RX_EQ2_C_SET_FB = 0,
        config string CP_LANE0_PMA_REG_RX_EQ2_OFF = "FALSE",
        config int CP_LANE0_PMA_REG_EQ_DAC = 0,
        config int CP_LANE0_PMA_REG_RX_ICTRL_EQ = 2,
        config string CP_LANE0_PMA_REG_EQ_DC_CALIB_EN = "FALSE",
        config string CP_LANE0_PMA_REG_EQ_DC_CALIB_SEL = "FALSE",
        config int CP_LANE0_PMA_REG_RX_RESERVED_337_330 = 0,
        config int CP_LANE0_PMA_REG_RX_RESERVED_345_338 = 0,
        config int CP_LANE0_PMA_REG_RX_RESERVED_353_346 = 0,
        config int CP_LANE0_PMA_REG_RX_RESERVED_361_354 = 0,
        config int CP_LANE0_PMA_CTLE_CTRL_REG_I = 0,
        config string CP_LANE0_PMA_CTLE_REG_FORCE_SEL_I = "FALSE",
        config string CP_LANE0_PMA_CTLE_REG_HOLD_I = "FALSE",
        config int CP_LANE0_PMA_CTLE_REG_INIT_DAC_I = 0,
        config string CP_LANE0_PMA_CTLE_REG_POLARITY_I = "FALSE",
        config int CP_LANE0_PMA_CTLE_REG_SHIFTER_GAIN_I = 0,
        config int CP_LANE0_PMA_CTLE_REG_THRESHOLD_I = 0,
        config string CP_LANE0_PMA_REG_RX_RES_TRIM_EN = "FALSE",
        config int CP_LANE0_PMA_REG_RX_RESERVED_393_389 = 0,
        config string CP_LANE0_PMA_CFG_RX_LANE_POWERUP = "OFF",
        config string CP_LANE0_PMA_CFG_RX_PMA_RSTN = "FALSE",
        config string CP_LANE0_PMA_INT_PMA_RX_MASK_0 = "FALSE",
        config string CP_LANE0_PMA_INT_PMA_RX_CLR_0 = "FALSE",
        config string CP_LANE0_PMA_CFG_CTLE_ADP_RSTN = "TRUE",
        config string CP_LANE0_PMA_REG_TX_PD = "ON",
        config string CP_LANE0_PMA_REG_TX_PD_OW = "TRUE",
        config string CP_LANE0_PMA_REG_TX_MAIN_PRE_Z = "FALSE",
        config string CP_LANE0_PMA_REG_TX_MAIN_PRE_Z_OW = "FALSE",
        config int CP_LANE0_PMA_REG_TX_BEACON_TIMER_SEL = 0,
        config string CP_LANE0_PMA_REG_TX_RXDET_REQ_OW = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RXDET_REQ = "FALSE",
        config string CP_LANE0_PMA_REG_TX_BEACON_EN_OW = "FALSE",
        config string CP_LANE0_PMA_REG_TX_BEACON_EN = "FALSE",
        config string CP_LANE0_PMA_REG_TX_EI_EN_OW = "FALSE",
        config string CP_LANE0_PMA_REG_TX_EI_EN = "FALSE",
        config string CP_LANE0_PMA_REG_TX_BIT_CONV = "FALSE",
        config int CP_LANE0_PMA_REG_TX_RES_CAL = 50,
        config string CP_LANE0_PMA_REG_TX_RESERVED_19 = "FALSE",
        config int CP_LANE0_PMA_REG_TX_RESERVED_25_20 = 32,
        config int CP_LANE0_PMA_REG_TX_RESERVED_33_26 = 0,
        config int CP_LANE0_PMA_REG_TX_RESERVED_41_34 = 0,
        config int CP_LANE0_PMA_REG_TX_RESERVED_49_42 = 0,
        config int CP_LANE0_PMA_REG_TX_RESERVED_57_50 = 0,
        config string CP_LANE0_PMA_REG_TX_SYNC_OW = "FALSE",
        config string CP_LANE0_PMA_REG_TX_SYNC = "FALSE",
        config string CP_LANE0_PMA_REG_TX_PD_POST = "OFF",
        config string CP_LANE0_PMA_REG_TX_PD_POST_OW = "TRUE",
        config string CP_LANE0_PMA_REG_TX_RESET_N_OW = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RESET_N = "TRUE",
        config string CP_LANE0_PMA_REG_TX_RESERVED_64 = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RESERVED_65 = "TRUE",
        config string CP_LANE0_PMA_REG_TX_BUSWIDTH_OW = "FALSE",
        config string CP_LANE0_PMA_REG_TX_BUSWIDTH = "20BIT",
        config string CP_LANE0_PMA_REG_PLL_READY_OW = "FALSE",
        config string CP_LANE0_PMA_REG_PLL_READY = "TRUE",
        config string CP_LANE0_PMA_REG_TX_RESERVED_72 = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RESERVED_73 = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RESERVED_74 = "FALSE",
        config int CP_LANE0_PMA_REG_EI_PCLK_DELAY_SEL = 0,
        config string CP_LANE0_PMA_REG_TX_RESERVED_77 = "FALSE",
        config int CP_LANE0_PMA_REG_TX_RESERVED_83_78 = 0,
        config int CP_LANE0_PMA_REG_TX_RESERVED_89_84 = 0,
        config int CP_LANE0_PMA_REG_TX_RESERVED_95_90 = 0,
        config int CP_LANE0_PMA_REG_TX_RESERVED_101_96 = 0,
        config int CP_LANE0_PMA_REG_TX_RESERVED_107_102 = 0,
        config int CP_LANE0_PMA_REG_TX_RESERVED_113_108 = 0,
        config int CP_LANE0_PMA_REG_TX_AMP_DAC0 = 25,
        config int CP_LANE0_PMA_REG_TX_AMP_DAC1 = 19,
        config int CP_LANE0_PMA_REG_TX_AMP_DAC2 = 14,
        config int CP_LANE0_PMA_REG_TX_AMP_DAC3 = 9,
        config int CP_LANE0_PMA_REG_TX_RESERVED_143_138 = 5,
        config int CP_LANE0_PMA_REG_TX_MARGIN = 0,
        config string CP_LANE0_PMA_REG_TX_MARGIN_OW = "FALSE",
        config int CP_LANE0_PMA_REG_TX_RESERVED_149_148 = 0,
        config string CP_LANE0_PMA_REG_TX_RESERVED_150 = "FALSE",
        config string CP_LANE0_PMA_REG_TX_SWING = "FALSE",
        config string CP_LANE0_PMA_REG_TX_SWING_OW = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RESERVED_153 = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RXDET_THRESHOLD = "84MV",
        config int CP_LANE0_PMA_REG_TX_RESERVED_157_156 = 0,
        config string CP_LANE0_PMA_REG_TX_BEACON_OSC_CTRL = "FALSE",
        config int CP_LANE0_PMA_REG_TX_RESERVED_160_159 = 0,
        config int CP_LANE0_PMA_REG_TX_RESERVED_162_161 = 0,
        config string CP_LANE0_PMA_REG_TX_TX2RX_SLPBACK_EN = "FALSE",
        config string CP_LANE0_PMA_REG_TX_PCLK_EDGE_SEL = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RXDET_STATUS_OW = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RXDET_STATUS = "TRUE",
        config string CP_LANE0_PMA_REG_TX_PRBS_GEN_EN = "FALSE",
        config string CP_LANE0_PMA_REG_TX_PRBS_GEN_WIDTH_SEL = "20BIT",
        config string CP_LANE0_PMA_REG_TX_PRBS_SEL = "PRBS7",
        config int CP_LANE0_PMA_REG_TX_UDP_DATA_7_TO_0 = 5,
        config int CP_LANE0_PMA_REG_TX_UDP_DATA_15_TO_8 = 235,
        config int CP_LANE0_PMA_REG_TX_UDP_DATA_19_TO_16 = 3,
        config string CP_LANE0_PMA_REG_TX_RESERVED_192 = "FALSE",
        config int CP_LANE0_PMA_REG_TX_FIFO_WP_CTRL = 4,
        config string CP_LANE0_PMA_REG_TX_FIFO_EN = "FALSE",
        config int CP_LANE0_PMA_REG_TX_DATA_MUX_SEL = 0,
        config string CP_LANE0_PMA_REG_TX_ERR_INSERT = "FALSE",
        config int CP_LANE0_PMA_REG_TX_RESERVED_203_200 = 0,
        config string CP_LANE0_PMA_REG_TX_RESERVED_204 = "FALSE",
        config string CP_LANE0_PMA_REG_TX_SATA_EN = "FALSE",
        config int CP_LANE0_PMA_REG_TX_RESERVED_207_206 = 0,
        config string CP_LANE0_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW = "FALSE",
        config string CP_LANE0_PMA_REG_RATE_CHANGE_TXPCLK_ON = "TRUE",
        config int CP_LANE0_PMA_REG_TX_CFG_POST1 = 0,
        config int CP_LANE0_PMA_REG_TX_CFG_POST2 = 0,
        config int CP_LANE0_PMA_REG_TX_DEEMP = 0,
        config string CP_LANE0_PMA_REG_TX_DEEMP_OW = "FALSE",
        config int CP_LANE0_PMA_REG_TX_RESERVED_224_223 = 0,
        config string CP_LANE0_PMA_REG_TX_RESERVED_225 = "FALSE",
        config int CP_LANE0_PMA_REG_TX_RESERVED_229_226 = 0,
        config int CP_LANE0_PMA_REG_TX_OOB_DELAY_SEL = 0,
        config string CP_LANE0_PMA_REG_TX_POLARITY = "NORMAL",
        config string CP_LANE0_PMA_REG_ANA_TX_JTAG_DATA_O_SEL = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RESERVED_236 = "FALSE",
        config string CP_LANE0_PMA_REG_TX_LS_MODE_EN = "FALSE",
        config string CP_LANE0_PMA_REG_TX_JTAG_MODE_EN_OW = "FALSE",
        config string CP_LANE0_PMA_REG_TX_JTAG_MODE_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RX_JTAG_MODE_EN_OW = "FALSE",
        config string CP_LANE0_PMA_REG_RX_JTAG_MODE_EN = "FALSE",
        config string CP_LANE0_PMA_REG_RX_JTAG_OE = "TRUE",
        config int CP_LANE0_PMA_REG_RX_ACJTAG_VHYSTSEL = 0,
        config string CP_LANE0_PMA_REG_TX_RES_CAL_EN = "FALSE",
        config int CP_LANE0_PMA_REG_RX_TERM_MODE_CTRL = 4,
        config int CP_LANE0_PMA_REG_TX_RESERVED_251_250 = 0,
        config string CP_LANE0_PMA_REG_PLPBK_TXPCLK_EN = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RESERVED_253 = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RESERVED_254 = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RESERVED_255 = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RESERVED_256 = "FALSE",
        config string CP_LANE0_PMA_REG_TX_RESERVED_257 = "FALSE",
        config int CP_LANE0_PMA_REG_TX_PH_SEL = 1,
        config int CP_LANE0_PMA_REG_TX_CFG_PRE = 0,
        config int CP_LANE0_PMA_REG_TX_CFG_MAIN = 0,
        config int CP_LANE0_PMA_REG_CFG_POST = 0,
        config string CP_LANE0_PMA_REG_PD_MAIN = "TRUE",
        config string CP_LANE0_PMA_REG_PD_PRE = "TRUE",
        config string CP_LANE0_PMA_REG_TX_LS_DATA = "FALSE",
        config int CP_LANE0_PMA_REG_TX_DCC_BUF_SZ_SEL = 0,
        config int CP_LANE0_PMA_REG_TX_DCC_CAL_CUR_TUNE = 0,
        config string CP_LANE0_PMA_REG_TX_DCC_CAL_EN = "FALSE",
        config int CP_LANE0_PMA_REG_TX_DCC_CUR_SS = 0,
        config string CP_LANE0_PMA_REG_TX_DCC_FA_CTRL = "FALSE",
        config string CP_LANE0_PMA_REG_TX_DCC_RI_CTRL = "FALSE",
        config int CP_LANE0_PMA_REG_ATB_SEL_2_TO_0 = 0,
        config int CP_LANE0_PMA_REG_ATB_SEL_9_TO_3 = 0,
        config int CP_LANE0_PMA_REG_TX_CFG_7_TO_0 = 0,
        config int CP_LANE0_PMA_REG_TX_CFG_15_TO_8 = 0,
        config int CP_LANE0_PMA_REG_TX_CFG_23_TO_16 = 0,
        config int CP_LANE0_PMA_REG_TX_CFG_31_TO_24 = 0,
        config string CP_LANE0_PMA_REG_TX_OOB_EI_EN = "FALSE",
        config string CP_LANE0_PMA_REG_TX_OOB_EI_EN_OW = "FALSE",
        config string CP_LANE0_PMA_REG_TX_BEACON_EN_DELAYED = "FALSE",
        config string CP_LANE0_PMA_REG_TX_BEACON_EN_DELAYED_OW = "FALSE",
        config string CP_LANE0_PMA_REG_TX_JTAG_DATA = "FALSE",
        config int CP_LANE0_PMA_REG_TX_RXDET_TIMER_SEL = 87,
        config int CP_LANE0_PMA_REG_TX_CFG1_7_0 = 0,
        config int CP_LANE0_PMA_REG_TX_CFG1_15_8 = 0,
        config int CP_LANE0_PMA_REG_TX_CFG1_23_16 = 0,
        config int CP_LANE0_PMA_REG_TX_CFG1_31_24 = 0,
        config string CP_LANE0_PMA_REG_CFG_LANE_POWERUP = "OFF",
        config string CP_LANE0_PMA_REG_CFG_PMA_POR_N = "TRUE",
        config string CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH = "FALSE",
        config string CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_PISO = "FALSE",
        config string CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER = "FALSE",
        config string CP_LANE0_PMA_REG_CFG_TX_PMA_RSTN = "TRUE",
        config int CP_LANE1_PCS_SLAVE = 0,
        config string CP_LANE1_PCS_BYPASS_WORD_ALIGN = "FALSE",
        config string CP_LANE1_PCS_BYPASS_DENC = "FALSE",
        config string CP_LANE1_PCS_BYPASS_BONDING = "FALSE",
        config string CP_LANE1_PCS_BYPASS_CTC = "FALSE",
        config string CP_LANE1_PCS_BYPASS_GEAR = "FALSE",
        config string CP_LANE1_PCS_BYPASS_BRIDGE = "FALSE",
        config string CP_LANE1_PCS_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_LANE1_PCS_DATA_MODE = "X8",
        config string CP_LANE1_PCS_RX_POLARITY_INV = "DELAY",
        config string CP_LANE1_PCS_ALIGN_MODE = "1GB",
        config string CP_LANE1_PCS_SAMP_16B = "X20",
        config string CP_LANE1_PCS_FARLP_PWR_REDUCTION = "FALSE",
        config int CP_LANE1_PCS_COMMA_REG0 = 0,
        config int CP_LANE1_PCS_COMMA_MASK = 0,
        config string CP_LANE1_PCS_CEB_MODE = "10GB",
        config string CP_LANE1_PCS_CTC_MODE = "1SKIP",
        config int CP_LANE1_PCS_A_REG = 0,
        config string CP_LANE1_PCS_GE_AUTO_EN = "FALSE",
        config int CP_LANE1_PCS_SKIP_REG0 = 0,
        config int CP_LANE1_PCS_SKIP_REG1 = 0,
        config int CP_LANE1_PCS_SKIP_REG2 = 0,
        config int CP_LANE1_PCS_SKIP_REG3 = 0,
        config string CP_LANE1_PCS_DEC_DUAL = "FALSE",
        config string CP_LANE1_PCS_SPLIT = "FALSE",
        config string CP_LANE1_PCS_FIFOFLAG_CTC = "FALSE",
        config string CP_LANE1_PCS_COMMA_DET_MODE = "COMMA_PATTERN",
        config string CP_LANE1_PCS_ERRDETECT_SILENCE = "FALSE",
        config string CP_LANE1_PCS_PMA_RCLK_POLINV = "PMA_RCLK",
        config string CP_LANE1_PCS_PCS_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE1_PCS_CB_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE1_PCS_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE1_PCS_RCLK_POLINV = "RCLK",
        config string CP_LANE1_PCS_BRIDGE_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE1_PCS_PCS_RCLK_EN = "FALSE",
        config string CP_LANE1_PCS_CB_RCLK_EN = "FALSE",
        config string CP_LANE1_PCS_AFTER_CTC_RCLK_EN = "FALSE",
        config string CP_LANE1_PCS_AFTER_CTC_RCLK_EN_GB = "FALSE",
        config string CP_LANE1_PCS_PCS_RX_RSTN = "FALSE",
        config string CP_LANE1_PCS_PCIE_SLAVE = "MASTER",
        config string CP_LANE1_PCS_RX_64B66B_67B = "NORMAL",
        config string CP_LANE1_PCS_RX_BRIDGE_CLK_POLINV = "RX_BRIDGE_CLK",
        config string CP_LANE1_PCS_PCS_CB_RSTN = "FALSE",
        config string CP_LANE1_PCS_TX_BRIDGE_GEAR_SEL = "FALSE",
        config string CP_LANE1_PCS_TX_BYPASS_BRIDGE_UINT = "FALSE",
        config string CP_LANE1_PCS_TX_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_LANE1_PCS_TX_BYPASS_GEAR = "FALSE",
        config string CP_LANE1_PCS_TX_BYPASS_ENC = "FALSE",
        config string CP_LANE1_PCS_TX_BYPASS_BIT_SLIP = "FALSE",
        config string CP_LANE1_PCS_TX_GEAR_SPLIT = "FALSE",
        config string CP_LANE1_PCS_TX_DRIVE_REG_MODE = "NO_CHANGE",
        config int CP_LANE1_PCS_TX_BIT_SLIP_CYCLES = 0,
        config string CP_LANE1_PCS_INT_TX_MASK_0 = "FALSE",
        config string CP_LANE1_PCS_INT_TX_MASK_1 = "FALSE",
        config string CP_LANE1_PCS_INT_TX_MASK_2 = "FALSE",
        config string CP_LANE1_PCS_INT_TX_CLR_0 = "FALSE",
        config string CP_LANE1_PCS_INT_TX_CLR_1 = "FALSE",
        config string CP_LANE1_PCS_INT_TX_CLR_2 = "FALSE",
        config string CP_LANE1_PCS_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        config string CP_LANE1_PCS_TX_PCS_CLK_EN_SEL = "FALSE",
        config string CP_LANE1_PCS_TX_BRIDGE_TCLK_SEL = "TCLK",
        config string CP_LANE1_PCS_TX_TCLK_POLINV = "TCLK",
        config string CP_LANE1_PCS_PCS_TCLK_SEL = "PMA_TCLK",
        config string CP_LANE1_PCS_TX_PCS_TX_RSTN = "FALSE",
        config string CP_LANE1_PCS_TX_SLAVE = "MASTER",
        config string CP_LANE1_PCS_TX_GEAR_CLK_EN_SEL = "FALSE",
        config string CP_LANE1_PCS_DATA_WIDTH_MODE = "X20",
        config string CP_LANE1_PCS_TX_64B66B_67B = "NORMAL",
        config string CP_LANE1_PCS_GEAR_TCLK_SEL = "PMA_TCLK",
        config string CP_LANE1_PCS_TX_TCLK2FABRIC_SEL = "FALSE",
        config string CP_LANE1_PCS_TX_OUTZZ = "FALSE",
        config string CP_LANE1_PCS_ENC_DUAL = "FALSE",
        config string CP_LANE1_PCS_TX_BITSLIP_DATA_MODE = "X10",
        config string CP_LANE1_PCS_TX_BRIDGE_CLK_POLINV = "TX_BRIDGE_CLK",
        config int CP_LANE1_PCS_COMMA_REG1 = 0,
        config int CP_LANE1_PCS_RAPID_IMAX = 0,
        config int CP_LANE1_PCS_RAPID_VMIN_1 = 0,
        config int CP_LANE1_PCS_RAPID_VMIN_2 = 0,
        config string CP_LANE1_PCS_RX_PRBS_MODE = "DISABLE",
        config string CP_LANE1_PCS_RX_ERRCNT_CLR = "FALSE",
        config string CP_LANE1_PCS_PRBS_ERR_LPBK = "FALSE",
        config string CP_LANE1_PCS_TX_PRBS_MODE = "DISABLE",
        config string CP_LANE1_PCS_TX_INSERT_ER = "FALSE",
        config string CP_LANE1_PCS_ENABLE_PRBS_GEN = "FALSE",
        config int CP_LANE1_PCS_DEFAULT_RADDR = 0,
        config int CP_LANE1_PCS_MASTER_CHECK_OFFSET = 0,
        config int CP_LANE1_PCS_DELAY_SET = 0,
        config string CP_LANE1_PCS_SEACH_OFFSET = "20BIT",
        config int CP_LANE1_PCS_CEB_RAPIDLS_MMAX = 0,
        config int CP_LANE1_PCS_CTC_AFULL = 20,
        config int CP_LANE1_PCS_CTC_AEMPTY = 12,
        config int CP_LANE1_PCS_CTC_CONTI_SKP_SET = 0,
        config string CP_LANE1_PCS_FAR_LOOP = "FALSE",
        config string CP_LANE1_PCS_NEAR_LOOP = "FALSE",
        config string CP_LANE1_PCS_PMA_TX2RX_PLOOP_EN = "FALSE",
        config string CP_LANE1_PCS_PMA_TX2RX_SLOOP_EN = "FALSE",
        config string CP_LANE1_PCS_PMA_RX2TX_PLOOP_EN = "FALSE",
        config string CP_LANE1_PCS_INT_RX_MASK_0 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_MASK_1 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_MASK_2 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_MASK_3 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_MASK_4 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_MASK_5 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_MASK_6 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_MASK_7 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_CLR_0 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_CLR_1 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_CLR_2 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_CLR_3 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_CLR_4 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_CLR_5 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_CLR_6 = "FALSE",
        config string CP_LANE1_PCS_INT_RX_CLR_7 = "FALSE",
        config string CP_LANE1_PCS_CA_RSTN_RX = "FALSE",
        config string CP_LANE1_PCS_CA_DYN_DLY_EN_RX = "FALSE",
        config string CP_LANE1_PCS_CA_DYN_DLY_SEL_RX = "FALSE",
        config int CP_LANE1_PCS_CA_RX = 0,
        config string CP_LANE1_PCS_CA_RSTN_TX = "FALSE",
        config string CP_LANE1_PCS_CA_DYN_DLY_EN_TX = "FALSE",
        config string CP_LANE1_PCS_CA_DYN_DLY_SEL_TX = "FALSE",
        config int CP_LANE1_PCS_CA_TX = 0,
        config string CP_LANE1_PCS_RXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_LANE1_PCS_WDALIGN_PWR_REDUCTION = "NORMAL",
        config string CP_LANE1_PCS_RXDEC_PWR_REDUCTION = "NORMAL",
        config string CP_LANE1_PCS_RXCB_PWR_REDUCTION = "NORMAL",
        config string CP_LANE1_PCS_RXCTC_PWR_REDUCTION = "NORMAL",
        config string CP_LANE1_PCS_RXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_LANE1_PCS_RXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_LANE1_PCS_RXTEST_PWR_REDUCTION = "NORMAL",
        config string CP_LANE1_PCS_TXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_LANE1_PCS_TXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_LANE1_PCS_TXENC_PWR_REDUCTION = "NORMAL",
        config string CP_LANE1_PCS_TXBSLP_PWR_REDUCTION = "NORMAL",
        config string CP_LANE1_PCS_TXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_LANE1_PMA_REG_RX_PD = "ON",
        config string CP_LANE1_PMA_REG_RX_PD_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RX_RESERVED_2 = "FALSE",
        config string CP_LANE1_PMA_REG_RX_RESERVED_3 = "FALSE",
        config string CP_LANE1_PMA_REG_RX_DATAPATH_PD = "ON",
        config string CP_LANE1_PMA_REG_RX_DATAPATH_PD_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RX_SIGDET_PD = "ON",
        config string CP_LANE1_PMA_REG_RX_SIGDET_PD_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RX_DCC_RST_N = "TRUE",
        config string CP_LANE1_PMA_REG_RX_DCC_RST_N_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RX_CDR_RST_N = "TRUE",
        config string CP_LANE1_PMA_REG_RX_CDR_RST_N_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RX_SIGDET_RST_N = "TRUE",
        config string CP_LANE1_PMA_REG_RX_SIGDET_RST_N_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RXPCLK_SLIP = "FALSE",
        config string CP_LANE1_PMA_REG_RXPCLK_SLIP_OW = "FALSE",
        config string CP_LANE1_PMA_REG_RX_PCLKSWITCH_RST_N = "TRUE",
        config string CP_LANE1_PMA_REG_RX_PCLKSWITCH_RST_N_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RX_PCLKSWITCH = "FALSE",
        config string CP_LANE1_PMA_REG_RX_PCLKSWITCH_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RX_HIGHZ = "FALSE",
        config string CP_LANE1_PMA_REG_RX_HIGHZ_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RX_SIGDET_CLK_WINDOW = "FALSE",
        config string CP_LANE1_PMA_REG_RX_SIGDET_CLK_WINDOW_OW = "FALSE",
        config string CP_LANE1_PMA_REG_RX_PD_BIAS_RX = "FALSE",
        config string CP_LANE1_PMA_REG_RX_PD_BIAS_RX_OW = "FALSE",
        config string CP_LANE1_PMA_REG_RX_RESET_N = "FALSE",
        config string CP_LANE1_PMA_REG_RX_RESET_N_OW = "FALSE",
        config int CP_LANE1_PMA_REG_RX_RESERVED_29_28 = 0,
        config string CP_LANE1_PMA_REG_RX_BUSWIDTH = "20BIT",
        config string CP_LANE1_PMA_REG_RX_BUSWIDTH_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RX_RATE = "DIV1",
        config string CP_LANE1_PMA_REG_RX_RESERVED_36 = "FALSE",
        config string CP_LANE1_PMA_REG_RX_RATE_EN = "FALSE",
        config int CP_LANE1_PMA_REG_RX_RES_TRIM = 46,
        config string CP_LANE1_PMA_REG_RX_RESERVED_44 = "FALSE",
        config string CP_LANE1_PMA_REG_RX_RESERVED_45 = "FALSE",
        config string CP_LANE1_PMA_REG_RX_SIGDET_STATUS_EN = "FALSE",
        config int CP_LANE1_PMA_REG_RX_RESERVED_48_47 = 0,
        config int CP_LANE1_PMA_REG_RX_ICTRL_SIGDET = 5,
        config int CP_LANE1_PMA_REG_CDR_READY_THD = 2734,
        config string CP_LANE1_PMA_REG_RX_RESERVED_65 = "FALSE",
        config string CP_LANE1_PMA_REG_RX_PCLK_EDGE_SEL = "POS_EDGE",
        config int CP_LANE1_PMA_REG_RX_PIBUF_IC = 1,
        config string CP_LANE1_PMA_REG_RX_RESERVED_69 = "FALSE",
        config int CP_LANE1_PMA_REG_RX_DCC_IC_RX = 1,
        config int CP_LANE1_PMA_REG_CDR_READY_CHECK_CTRL = 0,
        config string CP_LANE1_PMA_REG_RX_ICTRL_TRX = "100PCT",
        config int CP_LANE1_PMA_REG_RX_RESERVED_77_76 = 0,
        config int CP_LANE1_PMA_REG_RX_RESERVED_79_78 = 1,
        config int CP_LANE1_PMA_REG_RX_RESERVED_81_80 = 1,
        config string CP_LANE1_PMA_REG_RX_ICTRL_PIBUF = "100PCT",
        config string CP_LANE1_PMA_REG_RX_ICTRL_PI = "100PCT",
        config string CP_LANE1_PMA_REG_RX_ICTRL_DCC = "100PCT",
        config int CP_LANE1_PMA_REG_RX_RESERVED_89_88 = 1,
        config string CP_LANE1_PMA_REG_TX_RATE = "DIV1",
        config string CP_LANE1_PMA_REG_RX_RESERVED_92 = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RATE_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_RST_N = "TRUE",
        config string CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_EN = "FALSE",
        config string CP_LANE1_PMA_REG_TXCLK_SEL = "PLL",
        config string CP_LANE1_PMA_REG_RX_DATA_POLARITY = "NORMAL",
        config string CP_LANE1_PMA_REG_RX_ERR_INSERT = "FALSE",
        config string CP_LANE1_PMA_REG_UDP_CHK_EN = "FALSE",
        config string CP_LANE1_PMA_REG_PRBS_SEL = "PRBS7",
        config string CP_LANE1_PMA_REG_PRBS_CHK_EN = "FALSE",
        config string CP_LANE1_PMA_REG_PRBS_CHK_WIDTH_SEL = "20BIT",
        config string CP_LANE1_PMA_REG_BIST_CHK_PAT_SEL = "PRBS",
        config string CP_LANE1_PMA_REG_LOAD_ERR_CNT = "FALSE",
        config string CP_LANE1_PMA_REG_CHK_COUNTER_EN = "FALSE",
        config int CP_LANE1_PMA_REG_CDR_PROP_GAIN = 7,
        config int CP_LANE1_PMA_REG_CDR_PROP_TURBO_GAIN = 5,
        config int CP_LANE1_PMA_REG_CDR_INT_GAIN = 7,
        config int CP_LANE1_PMA_REG_CDR_INT_TURBO_GAIN = 5,
        config int CP_LANE1_PMA_REG_CDR_INT_SAT_MAX = 768,
        config int CP_LANE1_PMA_REG_CDR_INT_SAT_MIN = 255,
        config string CP_LANE1_PMA_REG_CDR_INT_RST = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_INT_RST_OW = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_PROP_RST = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_PROP_RST_OW = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_LOCK_RST = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_LOCK_RST_OW = "FALSE",
        config int CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_SEL = 0,
        config int CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_D = 0,
        config string CP_LANE1_PMA_REG_CDR_LOCK_TIMER = "1_2U",
        config int CP_LANE1_PMA_REG_CDR_TURBO_MODE_TIMER = 1,
        config string CP_LANE1_PMA_REG_CDR_LOCK_VAL = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_LOCK_OW = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_INT_SAT_DET_EN = "TRUE",
        config string CP_LANE1_PMA_REG_CDR_SAT_AUTO_DIS = "TRUE",
        config string CP_LANE1_PMA_REG_CDR_GAIN_AUTO = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_TURBO_GAIN_AUTO = "FALSE",
        config int CP_LANE1_PMA_REG_RX_RESERVED_171_167 = 0,
        config int CP_LANE1_PMA_REG_RX_RESERVED_175_172 = 0,
        config string CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_EN = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_PI_CTRL_RST = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_PI_CTRL_RST_OW = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_SAT_DET_RST = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_SAT_DET_RST_OW = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_SAT_DET_STICKY_RST = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_SAT_DET_STICKY_RST_OW = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_SIGDET_STATUS_DIS = "FALSE",
        config int CP_LANE1_PMA_REG_CDR_SAT_DET_TIMER = 2,
        config string CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_VAL = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_OW = "FALSE",
        config string CP_LANE1_PMA_REG_CDR_TURBO_MODE_EN = "TRUE",
        config string CP_LANE1_PMA_REG_RX_RESERVED_190 = "FALSE",
        config int CP_LANE1_PMA_REG_RX_RESERVED_193_191 = 0,
        config string CP_LANE1_PMA_REG_CDR_STATUS_FIFO_EN = "TRUE",
        config int CP_LANE1_PMA_REG_PMA_TEST_SEL = 0,
        config int CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MIN = 3,
        config int CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MAX = 11,
        config int CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MIN = 15,
        config int CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MAX = 35,
        config int CP_LANE1_PMA_REG_RX_RESERVED_227_226 = 1,
        config int CP_LANE1_PMA_REG_COMWAKE_STATUS_CLEAR = 0,
        config int CP_LANE1_PMA_REG_COMINIT_STATUS_CLEAR = 0,
        config string CP_LANE1_PMA_REG_RX_SYNC_RST_N_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RX_SYNC_RST_N = "TRUE",
        config int CP_LANE1_PMA_REG_RX_RESERVED_233_232 = 0,
        config int CP_LANE1_PMA_REG_RX_RESERVED_235_234 = 0,
        config string CP_LANE1_PMA_REG_RX_SATA_COMINIT_OW = "FALSE",
        config string CP_LANE1_PMA_REG_RX_SATA_COMINIT = "FALSE",
        config string CP_LANE1_PMA_REG_RX_SATA_COMWAKE_OW = "FALSE",
        config string CP_LANE1_PMA_REG_RX_SATA_COMWAKE = "FALSE",
        config int CP_LANE1_PMA_REG_RX_RESERVED_241_240 = 0,
        config string CP_LANE1_PMA_REG_RX_DCC_DISABLE = "FALSE",
        config string CP_LANE1_PMA_REG_RX_RESERVED_243 = "FALSE",
        config string CP_LANE1_PMA_REG_RX_SLIP_SEL_EN = "FALSE",
        config int CP_LANE1_PMA_REG_RX_SLIP_SEL = 0,
        config string CP_LANE1_PMA_REG_RX_SLIP_EN = "FALSE",
        config int CP_LANE1_PMA_REG_RX_SIGDET_STATUS_SEL = 5,
        config string CP_LANE1_PMA_REG_RX_SIGDET_FSM_RST_N = "TRUE",
        config string CP_LANE1_PMA_REG_RX_RESERVED_254 = "FALSE",
        config string CP_LANE1_PMA_REG_RX_SIGDET_STATUS = "FALSE",
        config string CP_LANE1_PMA_REG_RX_SIGDET_VTH = "27MV",
        config int CP_LANE1_PMA_REG_RX_SIGDET_GRM = 0,
        config string CP_LANE1_PMA_REG_RX_SIGDET_PULSE_EXT = "FALSE",
        config int CP_LANE1_PMA_REG_RX_SIGDET_CH2_SEL = 0,
        config int CP_LANE1_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW = 3,
        config string CP_LANE1_PMA_REG_RX_SIGDET_CHK_WINDOW_EN = "TRUE",
        config int CP_LANE1_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING = 4,
        config string CP_LANE1_PMA_REG_SLIP_FIFO_INV_EN = "FALSE",
        config string CP_LANE1_PMA_REG_SLIP_FIFO_INV = "POS_EDGE",
        config int CP_LANE1_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL = 0,
        config int CP_LANE1_PMA_REG_RX_SIGDET_4OOB_DET_SEL = 7,
        config int CP_LANE1_PMA_REG_RX_RESERVED_285_283 = 0,
        config string CP_LANE1_PMA_REG_RX_RESERVED_286 = "FALSE",
        config int CP_LANE1_PMA_REG_RX_SIGDET_IC_I = 10,
        config string CP_LANE1_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW = "FALSE",
        config string CP_LANE1_PMA_REG_RX_OOB_DETECTOR_RESET_N = "FALSE",
        config string CP_LANE1_PMA_REG_RX_OOB_DETECTOR_PD_OW = "FALSE",
        config string CP_LANE1_PMA_REG_RX_OOB_DETECTOR_PD = "ON",
        config string CP_LANE1_PMA_REG_RX_LS_MODE_EN = "FALSE",
        config string CP_LANE1_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL = "FALSE",
        config string CP_LANE1_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL = "FALSE",
        config int CP_LANE1_PMA_REG_RX_EQ1_R_SET_TOP = 0,
        config int CP_LANE1_PMA_REG_RX_EQ1_R_SET_FB = 0,
        config int CP_LANE1_PMA_REG_RX_EQ1_C_SET_FB = 0,
        config string CP_LANE1_PMA_REG_RX_EQ1_OFF = "FALSE",
        config int CP_LANE1_PMA_REG_RX_EQ2_R_SET_TOP = 0,
        config int CP_LANE1_PMA_REG_RX_EQ2_R_SET_FB = 0,
        config int CP_LANE1_PMA_REG_RX_EQ2_C_SET_FB = 0,
        config string CP_LANE1_PMA_REG_RX_EQ2_OFF = "FALSE",
        config int CP_LANE1_PMA_REG_EQ_DAC = 0,
        config int CP_LANE1_PMA_REG_RX_ICTRL_EQ = 2,
        config string CP_LANE1_PMA_REG_EQ_DC_CALIB_EN = "FALSE",
        config string CP_LANE1_PMA_REG_EQ_DC_CALIB_SEL = "FALSE",
        config int CP_LANE1_PMA_REG_RX_RESERVED_337_330 = 0,
        config int CP_LANE1_PMA_REG_RX_RESERVED_345_338 = 0,
        config int CP_LANE1_PMA_REG_RX_RESERVED_353_346 = 0,
        config int CP_LANE1_PMA_REG_RX_RESERVED_361_354 = 0,
        config int CP_LANE1_PMA_CTLE_CTRL_REG_I = 0,
        config string CP_LANE1_PMA_CTLE_REG_FORCE_SEL_I = "FALSE",
        config string CP_LANE1_PMA_CTLE_REG_HOLD_I = "FALSE",
        config int CP_LANE1_PMA_CTLE_REG_INIT_DAC_I = 0,
        config string CP_LANE1_PMA_CTLE_REG_POLARITY_I = "FALSE",
        config int CP_LANE1_PMA_CTLE_REG_SHIFTER_GAIN_I = 0,
        config int CP_LANE1_PMA_CTLE_REG_THRESHOLD_I = 0,
        config string CP_LANE1_PMA_REG_RX_RES_TRIM_EN = "FALSE",
        config int CP_LANE1_PMA_REG_RX_RESERVED_393_389 = 0,
        config string CP_LANE1_PMA_CFG_RX_LANE_POWERUP = "OFF",
        config string CP_LANE1_PMA_CFG_RX_PMA_RSTN = "FALSE",
        config string CP_LANE1_PMA_INT_PMA_RX_MASK_0 = "FALSE",
        config string CP_LANE1_PMA_INT_PMA_RX_CLR_0 = "FALSE",
        config string CP_LANE1_PMA_CFG_CTLE_ADP_RSTN = "TRUE",
        config string CP_LANE1_PMA_REG_TX_PD = "ON",
        config string CP_LANE1_PMA_REG_TX_PD_OW = "TRUE",
        config string CP_LANE1_PMA_REG_TX_MAIN_PRE_Z = "FALSE",
        config string CP_LANE1_PMA_REG_TX_MAIN_PRE_Z_OW = "FALSE",
        config int CP_LANE1_PMA_REG_TX_BEACON_TIMER_SEL = 0,
        config string CP_LANE1_PMA_REG_TX_RXDET_REQ_OW = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RXDET_REQ = "FALSE",
        config string CP_LANE1_PMA_REG_TX_BEACON_EN_OW = "FALSE",
        config string CP_LANE1_PMA_REG_TX_BEACON_EN = "FALSE",
        config string CP_LANE1_PMA_REG_TX_EI_EN_OW = "FALSE",
        config string CP_LANE1_PMA_REG_TX_EI_EN = "FALSE",
        config string CP_LANE1_PMA_REG_TX_BIT_CONV = "FALSE",
        config int CP_LANE1_PMA_REG_TX_RES_CAL = 50,
        config string CP_LANE1_PMA_REG_TX_RESERVED_19 = "FALSE",
        config int CP_LANE1_PMA_REG_TX_RESERVED_25_20 = 32,
        config int CP_LANE1_PMA_REG_TX_RESERVED_33_26 = 0,
        config int CP_LANE1_PMA_REG_TX_RESERVED_41_34 = 0,
        config int CP_LANE1_PMA_REG_TX_RESERVED_49_42 = 0,
        config int CP_LANE1_PMA_REG_TX_RESERVED_57_50 = 0,
        config string CP_LANE1_PMA_REG_TX_SYNC_OW = "FALSE",
        config string CP_LANE1_PMA_REG_TX_SYNC = "FALSE",
        config string CP_LANE1_PMA_REG_TX_PD_POST = "OFF",
        config string CP_LANE1_PMA_REG_TX_PD_POST_OW = "TRUE",
        config string CP_LANE1_PMA_REG_TX_RESET_N_OW = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RESET_N = "TRUE",
        config string CP_LANE1_PMA_REG_TX_RESERVED_64 = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RESERVED_65 = "TRUE",
        config string CP_LANE1_PMA_REG_TX_BUSWIDTH_OW = "FALSE",
        config string CP_LANE1_PMA_REG_TX_BUSWIDTH = "20BIT",
        config string CP_LANE1_PMA_REG_PLL_READY_OW = "FALSE",
        config string CP_LANE1_PMA_REG_PLL_READY = "TRUE",
        config string CP_LANE1_PMA_REG_TX_RESERVED_72 = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RESERVED_73 = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RESERVED_74 = "FALSE",
        config int CP_LANE1_PMA_REG_EI_PCLK_DELAY_SEL = 0,
        config string CP_LANE1_PMA_REG_TX_RESERVED_77 = "FALSE",
        config int CP_LANE1_PMA_REG_TX_RESERVED_83_78 = 0,
        config int CP_LANE1_PMA_REG_TX_RESERVED_89_84 = 0,
        config int CP_LANE1_PMA_REG_TX_RESERVED_95_90 = 0,
        config int CP_LANE1_PMA_REG_TX_RESERVED_101_96 = 0,
        config int CP_LANE1_PMA_REG_TX_RESERVED_107_102 = 0,
        config int CP_LANE1_PMA_REG_TX_RESERVED_113_108 = 0,
        config int CP_LANE1_PMA_REG_TX_AMP_DAC0 = 25,
        config int CP_LANE1_PMA_REG_TX_AMP_DAC1 = 19,
        config int CP_LANE1_PMA_REG_TX_AMP_DAC2 = 14,
        config int CP_LANE1_PMA_REG_TX_AMP_DAC3 = 9,
        config int CP_LANE1_PMA_REG_TX_RESERVED_143_138 = 5,
        config int CP_LANE1_PMA_REG_TX_MARGIN = 0,
        config string CP_LANE1_PMA_REG_TX_MARGIN_OW = "FALSE",
        config int CP_LANE1_PMA_REG_TX_RESERVED_149_148 = 0,
        config string CP_LANE1_PMA_REG_TX_RESERVED_150 = "FALSE",
        config string CP_LANE1_PMA_REG_TX_SWING = "FALSE",
        config string CP_LANE1_PMA_REG_TX_SWING_OW = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RESERVED_153 = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RXDET_THRESHOLD = "84MV",
        config int CP_LANE1_PMA_REG_TX_RESERVED_157_156 = 0,
        config string CP_LANE1_PMA_REG_TX_BEACON_OSC_CTRL = "FALSE",
        config int CP_LANE1_PMA_REG_TX_RESERVED_160_159 = 0,
        config int CP_LANE1_PMA_REG_TX_RESERVED_162_161 = 0,
        config string CP_LANE1_PMA_REG_TX_TX2RX_SLPBACK_EN = "FALSE",
        config string CP_LANE1_PMA_REG_TX_PCLK_EDGE_SEL = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RXDET_STATUS_OW = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RXDET_STATUS = "TRUE",
        config string CP_LANE1_PMA_REG_TX_PRBS_GEN_EN = "FALSE",
        config string CP_LANE1_PMA_REG_TX_PRBS_GEN_WIDTH_SEL = "20BIT",
        config string CP_LANE1_PMA_REG_TX_PRBS_SEL = "PRBS7",
        config int CP_LANE1_PMA_REG_TX_UDP_DATA_7_TO_0 = 5,
        config int CP_LANE1_PMA_REG_TX_UDP_DATA_15_TO_8 = 235,
        config int CP_LANE1_PMA_REG_TX_UDP_DATA_19_TO_16 = 3,
        config string CP_LANE1_PMA_REG_TX_RESERVED_192 = "FALSE",
        config int CP_LANE1_PMA_REG_TX_FIFO_WP_CTRL = 4,
        config string CP_LANE1_PMA_REG_TX_FIFO_EN = "FALSE",
        config int CP_LANE1_PMA_REG_TX_DATA_MUX_SEL = 0,
        config string CP_LANE1_PMA_REG_TX_ERR_INSERT = "FALSE",
        config int CP_LANE1_PMA_REG_TX_RESERVED_203_200 = 0,
        config string CP_LANE1_PMA_REG_TX_RESERVED_204 = "FALSE",
        config string CP_LANE1_PMA_REG_TX_SATA_EN = "FALSE",
        config int CP_LANE1_PMA_REG_TX_RESERVED_207_206 = 0,
        config string CP_LANE1_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW = "FALSE",
        config string CP_LANE1_PMA_REG_RATE_CHANGE_TXPCLK_ON = "TRUE",
        config int CP_LANE1_PMA_REG_TX_CFG_POST1 = 0,
        config int CP_LANE1_PMA_REG_TX_CFG_POST2 = 0,
        config int CP_LANE1_PMA_REG_TX_DEEMP = 0,
        config string CP_LANE1_PMA_REG_TX_DEEMP_OW = "FALSE",
        config int CP_LANE1_PMA_REG_TX_RESERVED_224_223 = 0,
        config string CP_LANE1_PMA_REG_TX_RESERVED_225 = "FALSE",
        config int CP_LANE1_PMA_REG_TX_RESERVED_229_226 = 0,
        config int CP_LANE1_PMA_REG_TX_OOB_DELAY_SEL = 0,
        config string CP_LANE1_PMA_REG_TX_POLARITY = "NORMAL",
        config string CP_LANE1_PMA_REG_ANA_TX_JTAG_DATA_O_SEL = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RESERVED_236 = "FALSE",
        config string CP_LANE1_PMA_REG_TX_LS_MODE_EN = "FALSE",
        config string CP_LANE1_PMA_REG_TX_JTAG_MODE_EN_OW = "FALSE",
        config string CP_LANE1_PMA_REG_TX_JTAG_MODE_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RX_JTAG_MODE_EN_OW = "FALSE",
        config string CP_LANE1_PMA_REG_RX_JTAG_MODE_EN = "FALSE",
        config string CP_LANE1_PMA_REG_RX_JTAG_OE = "TRUE",
        config int CP_LANE1_PMA_REG_RX_ACJTAG_VHYSTSEL = 0,
        config string CP_LANE1_PMA_REG_TX_RES_CAL_EN = "FALSE",
        config int CP_LANE1_PMA_REG_RX_TERM_MODE_CTRL = 4,
        config int CP_LANE1_PMA_REG_TX_RESERVED_251_250 = 0,
        config string CP_LANE1_PMA_REG_PLPBK_TXPCLK_EN = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RESERVED_253 = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RESERVED_254 = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RESERVED_255 = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RESERVED_256 = "FALSE",
        config string CP_LANE1_PMA_REG_TX_RESERVED_257 = "FALSE",
        config int CP_LANE1_PMA_REG_TX_PH_SEL = 1,
        config int CP_LANE1_PMA_REG_TX_CFG_PRE = 0,
        config int CP_LANE1_PMA_REG_TX_CFG_MAIN = 0,
        config int CP_LANE1_PMA_REG_CFG_POST = 0,
        config string CP_LANE1_PMA_REG_PD_MAIN = "TRUE",
        config string CP_LANE1_PMA_REG_PD_PRE = "TRUE",
        config string CP_LANE1_PMA_REG_TX_LS_DATA = "FALSE",
        config int CP_LANE1_PMA_REG_TX_DCC_BUF_SZ_SEL = 0,
        config int CP_LANE1_PMA_REG_TX_DCC_CAL_CUR_TUNE = 0,
        config string CP_LANE1_PMA_REG_TX_DCC_CAL_EN = "FALSE",
        config int CP_LANE1_PMA_REG_TX_DCC_CUR_SS = 0,
        config string CP_LANE1_PMA_REG_TX_DCC_FA_CTRL = "FALSE",
        config string CP_LANE1_PMA_REG_TX_DCC_RI_CTRL = "FALSE",
        config int CP_LANE1_PMA_REG_ATB_SEL_2_TO_0 = 0,
        config int CP_LANE1_PMA_REG_ATB_SEL_9_TO_3 = 0,
        config int CP_LANE1_PMA_REG_TX_CFG_7_TO_0 = 0,
        config int CP_LANE1_PMA_REG_TX_CFG_15_TO_8 = 0,
        config int CP_LANE1_PMA_REG_TX_CFG_23_TO_16 = 0,
        config int CP_LANE1_PMA_REG_TX_CFG_31_TO_24 = 0,
        config string CP_LANE1_PMA_REG_TX_OOB_EI_EN = "FALSE",
        config string CP_LANE1_PMA_REG_TX_OOB_EI_EN_OW = "FALSE",
        config string CP_LANE1_PMA_REG_TX_BEACON_EN_DELAYED = "FALSE",
        config string CP_LANE1_PMA_REG_TX_BEACON_EN_DELAYED_OW = "FALSE",
        config string CP_LANE1_PMA_REG_TX_JTAG_DATA = "FALSE",
        config int CP_LANE1_PMA_REG_TX_RXDET_TIMER_SEL = 87,
        config int CP_LANE1_PMA_REG_TX_CFG1_7_0 = 0,
        config int CP_LANE1_PMA_REG_TX_CFG1_15_8 = 0,
        config int CP_LANE1_PMA_REG_TX_CFG1_23_16 = 0,
        config int CP_LANE1_PMA_REG_TX_CFG1_31_24 = 0,
        config string CP_LANE1_PMA_REG_CFG_LANE_POWERUP = "OFF",
        config string CP_LANE1_PMA_REG_CFG_PMA_POR_N = "TRUE",
        config string CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH = "FALSE",
        config string CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_PISO = "FALSE",
        config string CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER = "FALSE",
        config string CP_LANE1_PMA_REG_CFG_TX_PMA_RSTN = "TRUE",
        config int CP_LANE2_PCS_SLAVE = 0,
        config string CP_LANE2_PCS_BYPASS_WORD_ALIGN = "FALSE",
        config string CP_LANE2_PCS_BYPASS_DENC = "FALSE",
        config string CP_LANE2_PCS_BYPASS_BONDING = "FALSE",
        config string CP_LANE2_PCS_BYPASS_CTC = "FALSE",
        config string CP_LANE2_PCS_BYPASS_GEAR = "FALSE",
        config string CP_LANE2_PCS_BYPASS_BRIDGE = "FALSE",
        config string CP_LANE2_PCS_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_LANE2_PCS_DATA_MODE = "X8",
        config string CP_LANE2_PCS_RX_POLARITY_INV = "DELAY",
        config string CP_LANE2_PCS_ALIGN_MODE = "1GB",
        config string CP_LANE2_PCS_SAMP_16B = "X20",
        config string CP_LANE2_PCS_FARLP_PWR_REDUCTION = "FALSE",
        config int CP_LANE2_PCS_COMMA_REG0 = 0,
        config int CP_LANE2_PCS_COMMA_MASK = 0,
        config string CP_LANE2_PCS_CEB_MODE = "10GB",
        config string CP_LANE2_PCS_CTC_MODE = "1SKIP",
        config int CP_LANE2_PCS_A_REG = 0,
        config string CP_LANE2_PCS_GE_AUTO_EN = "FALSE",
        config int CP_LANE2_PCS_SKIP_REG0 = 0,
        config int CP_LANE2_PCS_SKIP_REG1 = 0,
        config int CP_LANE2_PCS_SKIP_REG2 = 0,
        config int CP_LANE2_PCS_SKIP_REG3 = 0,
        config string CP_LANE2_PCS_DEC_DUAL = "FALSE",
        config string CP_LANE2_PCS_SPLIT = "FALSE",
        config string CP_LANE2_PCS_FIFOFLAG_CTC = "FALSE",
        config string CP_LANE2_PCS_COMMA_DET_MODE = "COMMA_PATTERN",
        config string CP_LANE2_PCS_ERRDETECT_SILENCE = "FALSE",
        config string CP_LANE2_PCS_PMA_RCLK_POLINV = "PMA_RCLK",
        config string CP_LANE2_PCS_PCS_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE2_PCS_CB_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE2_PCS_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE2_PCS_RCLK_POLINV = "RCLK",
        config string CP_LANE2_PCS_BRIDGE_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE2_PCS_PCS_RCLK_EN = "FALSE",
        config string CP_LANE2_PCS_CB_RCLK_EN = "FALSE",
        config string CP_LANE2_PCS_AFTER_CTC_RCLK_EN = "FALSE",
        config string CP_LANE2_PCS_AFTER_CTC_RCLK_EN_GB = "FALSE",
        config string CP_LANE2_PCS_PCS_RX_RSTN = "FALSE",
        config string CP_LANE2_PCS_PCIE_SLAVE = "MASTER",
        config string CP_LANE2_PCS_RX_64B66B_67B = "NORMAL",
        config string CP_LANE2_PCS_RX_BRIDGE_CLK_POLINV = "RX_BRIDGE_CLK",
        config string CP_LANE2_PCS_PCS_CB_RSTN = "FALSE",
        config string CP_LANE2_PCS_TX_BRIDGE_GEAR_SEL = "FALSE",
        config string CP_LANE2_PCS_TX_BYPASS_BRIDGE_UINT = "FALSE",
        config string CP_LANE2_PCS_TX_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_LANE2_PCS_TX_BYPASS_GEAR = "FALSE",
        config string CP_LANE2_PCS_TX_BYPASS_ENC = "FALSE",
        config string CP_LANE2_PCS_TX_BYPASS_BIT_SLIP = "FALSE",
        config string CP_LANE2_PCS_TX_GEAR_SPLIT = "FALSE",
        config string CP_LANE2_PCS_TX_DRIVE_REG_MODE = "NO_CHANGE",
        config int CP_LANE2_PCS_TX_BIT_SLIP_CYCLES = 0,
        config string CP_LANE2_PCS_INT_TX_MASK_0 = "FALSE",
        config string CP_LANE2_PCS_INT_TX_MASK_1 = "FALSE",
        config string CP_LANE2_PCS_INT_TX_MASK_2 = "FALSE",
        config string CP_LANE2_PCS_INT_TX_CLR_0 = "FALSE",
        config string CP_LANE2_PCS_INT_TX_CLR_1 = "FALSE",
        config string CP_LANE2_PCS_INT_TX_CLR_2 = "FALSE",
        config string CP_LANE2_PCS_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        config string CP_LANE2_PCS_TX_PCS_CLK_EN_SEL = "FALSE",
        config string CP_LANE2_PCS_TX_BRIDGE_TCLK_SEL = "TCLK",
        config string CP_LANE2_PCS_TX_TCLK_POLINV = "TCLK",
        config string CP_LANE2_PCS_PCS_TCLK_SEL = "PMA_TCLK",
        config string CP_LANE2_PCS_TX_PCS_TX_RSTN = "FALSE",
        config string CP_LANE2_PCS_TX_SLAVE = "MASTER",
        config string CP_LANE2_PCS_TX_GEAR_CLK_EN_SEL = "FALSE",
        config string CP_LANE2_PCS_DATA_WIDTH_MODE = "X20",
        config string CP_LANE2_PCS_TX_64B66B_67B = "NORMAL",
        config string CP_LANE2_PCS_GEAR_TCLK_SEL = "PMA_TCLK",
        config string CP_LANE2_PCS_TX_TCLK2FABRIC_SEL = "FALSE",
        config string CP_LANE2_PCS_TX_OUTZZ = "FALSE",
        config string CP_LANE2_PCS_ENC_DUAL = "FALSE",
        config string CP_LANE2_PCS_TX_BITSLIP_DATA_MODE = "X10",
        config string CP_LANE2_PCS_TX_BRIDGE_CLK_POLINV = "TX_BRIDGE_CLK",
        config int CP_LANE2_PCS_COMMA_REG1 = 0,
        config int CP_LANE2_PCS_RAPID_IMAX = 0,
        config int CP_LANE2_PCS_RAPID_VMIN_1 = 0,
        config int CP_LANE2_PCS_RAPID_VMIN_2 = 0,
        config string CP_LANE2_PCS_RX_PRBS_MODE = "DISABLE",
        config string CP_LANE2_PCS_RX_ERRCNT_CLR = "FALSE",
        config string CP_LANE2_PCS_PRBS_ERR_LPBK = "FALSE",
        config string CP_LANE2_PCS_TX_PRBS_MODE = "DISABLE",
        config string CP_LANE2_PCS_TX_INSERT_ER = "FALSE",
        config string CP_LANE2_PCS_ENABLE_PRBS_GEN = "FALSE",
        config int CP_LANE2_PCS_DEFAULT_RADDR = 0,
        config int CP_LANE2_PCS_MASTER_CHECK_OFFSET = 0,
        config int CP_LANE2_PCS_DELAY_SET = 0,
        config string CP_LANE2_PCS_SEACH_OFFSET = "20BIT",
        config int CP_LANE2_PCS_CEB_RAPIDLS_MMAX = 0,
        config int CP_LANE2_PCS_CTC_AFULL = 20,
        config int CP_LANE2_PCS_CTC_AEMPTY = 12,
        config int CP_LANE2_PCS_CTC_CONTI_SKP_SET = 0,
        config string CP_LANE2_PCS_FAR_LOOP = "FALSE",
        config string CP_LANE2_PCS_NEAR_LOOP = "FALSE",
        config string CP_LANE2_PCS_PMA_TX2RX_PLOOP_EN = "FALSE",
        config string CP_LANE2_PCS_PMA_TX2RX_SLOOP_EN = "FALSE",
        config string CP_LANE2_PCS_PMA_RX2TX_PLOOP_EN = "FALSE",
        config string CP_LANE2_PCS_INT_RX_MASK_0 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_MASK_1 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_MASK_2 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_MASK_3 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_MASK_4 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_MASK_5 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_MASK_6 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_MASK_7 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_CLR_0 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_CLR_1 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_CLR_2 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_CLR_3 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_CLR_4 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_CLR_5 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_CLR_6 = "FALSE",
        config string CP_LANE2_PCS_INT_RX_CLR_7 = "FALSE",
        config string CP_LANE2_PCS_CA_RSTN_RX = "FALSE",
        config string CP_LANE2_PCS_CA_DYN_DLY_EN_RX = "FALSE",
        config string CP_LANE2_PCS_CA_DYN_DLY_SEL_RX = "FALSE",
        config int CP_LANE2_PCS_CA_RX = 0,
        config string CP_LANE2_PCS_CA_RSTN_TX = "FALSE",
        config string CP_LANE2_PCS_CA_DYN_DLY_EN_TX = "FALSE",
        config string CP_LANE2_PCS_CA_DYN_DLY_SEL_TX = "FALSE",
        config int CP_LANE2_PCS_CA_TX = 0,
        config string CP_LANE2_PCS_RXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_LANE2_PCS_WDALIGN_PWR_REDUCTION = "NORMAL",
        config string CP_LANE2_PCS_RXDEC_PWR_REDUCTION = "NORMAL",
        config string CP_LANE2_PCS_RXCB_PWR_REDUCTION = "NORMAL",
        config string CP_LANE2_PCS_RXCTC_PWR_REDUCTION = "NORMAL",
        config string CP_LANE2_PCS_RXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_LANE2_PCS_RXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_LANE2_PCS_RXTEST_PWR_REDUCTION = "NORMAL",
        config string CP_LANE2_PCS_TXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_LANE2_PCS_TXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_LANE2_PCS_TXENC_PWR_REDUCTION = "NORMAL",
        config string CP_LANE2_PCS_TXBSLP_PWR_REDUCTION = "NORMAL",
        config string CP_LANE2_PCS_TXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_LANE2_PMA_REG_RX_PD = "ON",
        config string CP_LANE2_PMA_REG_RX_PD_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RX_RESERVED_2 = "FALSE",
        config string CP_LANE2_PMA_REG_RX_RESERVED_3 = "FALSE",
        config string CP_LANE2_PMA_REG_RX_DATAPATH_PD = "ON",
        config string CP_LANE2_PMA_REG_RX_DATAPATH_PD_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RX_SIGDET_PD = "ON",
        config string CP_LANE2_PMA_REG_RX_SIGDET_PD_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RX_DCC_RST_N = "TRUE",
        config string CP_LANE2_PMA_REG_RX_DCC_RST_N_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RX_CDR_RST_N = "TRUE",
        config string CP_LANE2_PMA_REG_RX_CDR_RST_N_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RX_SIGDET_RST_N = "TRUE",
        config string CP_LANE2_PMA_REG_RX_SIGDET_RST_N_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RXPCLK_SLIP = "FALSE",
        config string CP_LANE2_PMA_REG_RXPCLK_SLIP_OW = "FALSE",
        config string CP_LANE2_PMA_REG_RX_PCLKSWITCH_RST_N = "TRUE",
        config string CP_LANE2_PMA_REG_RX_PCLKSWITCH_RST_N_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RX_PCLKSWITCH = "FALSE",
        config string CP_LANE2_PMA_REG_RX_PCLKSWITCH_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RX_HIGHZ = "FALSE",
        config string CP_LANE2_PMA_REG_RX_HIGHZ_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RX_SIGDET_CLK_WINDOW = "FALSE",
        config string CP_LANE2_PMA_REG_RX_SIGDET_CLK_WINDOW_OW = "FALSE",
        config string CP_LANE2_PMA_REG_RX_PD_BIAS_RX = "FALSE",
        config string CP_LANE2_PMA_REG_RX_PD_BIAS_RX_OW = "FALSE",
        config string CP_LANE2_PMA_REG_RX_RESET_N = "FALSE",
        config string CP_LANE2_PMA_REG_RX_RESET_N_OW = "FALSE",
        config int CP_LANE2_PMA_REG_RX_RESERVED_29_28 = 0,
        config string CP_LANE2_PMA_REG_RX_BUSWIDTH = "20BIT",
        config string CP_LANE2_PMA_REG_RX_BUSWIDTH_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RX_RATE = "DIV1",
        config string CP_LANE2_PMA_REG_RX_RESERVED_36 = "FALSE",
        config string CP_LANE2_PMA_REG_RX_RATE_EN = "FALSE",
        config int CP_LANE2_PMA_REG_RX_RES_TRIM = 46,
        config string CP_LANE2_PMA_REG_RX_RESERVED_44 = "FALSE",
        config string CP_LANE2_PMA_REG_RX_RESERVED_45 = "FALSE",
        config string CP_LANE2_PMA_REG_RX_SIGDET_STATUS_EN = "FALSE",
        config int CP_LANE2_PMA_REG_RX_RESERVED_48_47 = 0,
        config int CP_LANE2_PMA_REG_RX_ICTRL_SIGDET = 5,
        config int CP_LANE2_PMA_REG_CDR_READY_THD = 2734,
        config string CP_LANE2_PMA_REG_RX_RESERVED_65 = "FALSE",
        config string CP_LANE2_PMA_REG_RX_PCLK_EDGE_SEL = "POS_EDGE",
        config int CP_LANE2_PMA_REG_RX_PIBUF_IC = 1,
        config string CP_LANE2_PMA_REG_RX_RESERVED_69 = "FALSE",
        config int CP_LANE2_PMA_REG_RX_DCC_IC_RX = 1,
        config int CP_LANE2_PMA_REG_CDR_READY_CHECK_CTRL = 0,
        config string CP_LANE2_PMA_REG_RX_ICTRL_TRX = "100PCT",
        config int CP_LANE2_PMA_REG_RX_RESERVED_77_76 = 0,
        config int CP_LANE2_PMA_REG_RX_RESERVED_79_78 = 1,
        config int CP_LANE2_PMA_REG_RX_RESERVED_81_80 = 1,
        config string CP_LANE2_PMA_REG_RX_ICTRL_PIBUF = "100PCT",
        config string CP_LANE2_PMA_REG_RX_ICTRL_PI = "100PCT",
        config string CP_LANE2_PMA_REG_RX_ICTRL_DCC = "100PCT",
        config int CP_LANE2_PMA_REG_RX_RESERVED_89_88 = 1,
        config string CP_LANE2_PMA_REG_TX_RATE = "DIV1",
        config string CP_LANE2_PMA_REG_RX_RESERVED_92 = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RATE_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_RST_N = "TRUE",
        config string CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_EN = "FALSE",
        config string CP_LANE2_PMA_REG_TXCLK_SEL = "PLL",
        config string CP_LANE2_PMA_REG_RX_DATA_POLARITY = "NORMAL",
        config string CP_LANE2_PMA_REG_RX_ERR_INSERT = "FALSE",
        config string CP_LANE2_PMA_REG_UDP_CHK_EN = "FALSE",
        config string CP_LANE2_PMA_REG_PRBS_SEL = "PRBS7",
        config string CP_LANE2_PMA_REG_PRBS_CHK_EN = "FALSE",
        config string CP_LANE2_PMA_REG_PRBS_CHK_WIDTH_SEL = "20BIT",
        config string CP_LANE2_PMA_REG_BIST_CHK_PAT_SEL = "PRBS",
        config string CP_LANE2_PMA_REG_LOAD_ERR_CNT = "FALSE",
        config string CP_LANE2_PMA_REG_CHK_COUNTER_EN = "FALSE",
        config int CP_LANE2_PMA_REG_CDR_PROP_GAIN = 7,
        config int CP_LANE2_PMA_REG_CDR_PROP_TURBO_GAIN = 5,
        config int CP_LANE2_PMA_REG_CDR_INT_GAIN = 7,
        config int CP_LANE2_PMA_REG_CDR_INT_TURBO_GAIN = 5,
        config int CP_LANE2_PMA_REG_CDR_INT_SAT_MAX = 768,
        config int CP_LANE2_PMA_REG_CDR_INT_SAT_MIN = 255,
        config string CP_LANE2_PMA_REG_CDR_INT_RST = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_INT_RST_OW = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_PROP_RST = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_PROP_RST_OW = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_LOCK_RST = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_LOCK_RST_OW = "FALSE",
        config int CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_SEL = 0,
        config int CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_D = 0,
        config string CP_LANE2_PMA_REG_CDR_LOCK_TIMER = "1_2U",
        config int CP_LANE2_PMA_REG_CDR_TURBO_MODE_TIMER = 1,
        config string CP_LANE2_PMA_REG_CDR_LOCK_VAL = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_LOCK_OW = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_INT_SAT_DET_EN = "TRUE",
        config string CP_LANE2_PMA_REG_CDR_SAT_AUTO_DIS = "TRUE",
        config string CP_LANE2_PMA_REG_CDR_GAIN_AUTO = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_TURBO_GAIN_AUTO = "FALSE",
        config int CP_LANE2_PMA_REG_RX_RESERVED_171_167 = 0,
        config int CP_LANE2_PMA_REG_RX_RESERVED_175_172 = 0,
        config string CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_EN = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_PI_CTRL_RST = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_PI_CTRL_RST_OW = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_SAT_DET_RST = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_SAT_DET_RST_OW = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_SAT_DET_STICKY_RST = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_SAT_DET_STICKY_RST_OW = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_SIGDET_STATUS_DIS = "FALSE",
        config int CP_LANE2_PMA_REG_CDR_SAT_DET_TIMER = 2,
        config string CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_VAL = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_OW = "FALSE",
        config string CP_LANE2_PMA_REG_CDR_TURBO_MODE_EN = "TRUE",
        config string CP_LANE2_PMA_REG_RX_RESERVED_190 = "FALSE",
        config int CP_LANE2_PMA_REG_RX_RESERVED_193_191 = 0,
        config string CP_LANE2_PMA_REG_CDR_STATUS_FIFO_EN = "TRUE",
        config int CP_LANE2_PMA_REG_PMA_TEST_SEL = 0,
        config int CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MIN = 3,
        config int CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MAX = 11,
        config int CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MIN = 15,
        config int CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MAX = 35,
        config int CP_LANE2_PMA_REG_RX_RESERVED_227_226 = 1,
        config int CP_LANE2_PMA_REG_COMWAKE_STATUS_CLEAR = 0,
        config int CP_LANE2_PMA_REG_COMINIT_STATUS_CLEAR = 0,
        config string CP_LANE2_PMA_REG_RX_SYNC_RST_N_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RX_SYNC_RST_N = "TRUE",
        config int CP_LANE2_PMA_REG_RX_RESERVED_233_232 = 0,
        config int CP_LANE2_PMA_REG_RX_RESERVED_235_234 = 0,
        config string CP_LANE2_PMA_REG_RX_SATA_COMINIT_OW = "FALSE",
        config string CP_LANE2_PMA_REG_RX_SATA_COMINIT = "FALSE",
        config string CP_LANE2_PMA_REG_RX_SATA_COMWAKE_OW = "FALSE",
        config string CP_LANE2_PMA_REG_RX_SATA_COMWAKE = "FALSE",
        config int CP_LANE2_PMA_REG_RX_RESERVED_241_240 = 0,
        config string CP_LANE2_PMA_REG_RX_DCC_DISABLE = "FALSE",
        config string CP_LANE2_PMA_REG_RX_RESERVED_243 = "FALSE",
        config string CP_LANE2_PMA_REG_RX_SLIP_SEL_EN = "FALSE",
        config int CP_LANE2_PMA_REG_RX_SLIP_SEL = 0,
        config string CP_LANE2_PMA_REG_RX_SLIP_EN = "FALSE",
        config int CP_LANE2_PMA_REG_RX_SIGDET_STATUS_SEL = 5,
        config string CP_LANE2_PMA_REG_RX_SIGDET_FSM_RST_N = "TRUE",
        config string CP_LANE2_PMA_REG_RX_RESERVED_254 = "FALSE",
        config string CP_LANE2_PMA_REG_RX_SIGDET_STATUS = "FALSE",
        config string CP_LANE2_PMA_REG_RX_SIGDET_VTH = "27MV",
        config int CP_LANE2_PMA_REG_RX_SIGDET_GRM = 0,
        config string CP_LANE2_PMA_REG_RX_SIGDET_PULSE_EXT = "FALSE",
        config int CP_LANE2_PMA_REG_RX_SIGDET_CH2_SEL = 0,
        config int CP_LANE2_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW = 3,
        config string CP_LANE2_PMA_REG_RX_SIGDET_CHK_WINDOW_EN = "TRUE",
        config int CP_LANE2_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING = 4,
        config string CP_LANE2_PMA_REG_SLIP_FIFO_INV_EN = "FALSE",
        config string CP_LANE2_PMA_REG_SLIP_FIFO_INV = "POS_EDGE",
        config int CP_LANE2_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL = 0,
        config int CP_LANE2_PMA_REG_RX_SIGDET_4OOB_DET_SEL = 7,
        config int CP_LANE2_PMA_REG_RX_RESERVED_285_283 = 0,
        config string CP_LANE2_PMA_REG_RX_RESERVED_286 = "FALSE",
        config int CP_LANE2_PMA_REG_RX_SIGDET_IC_I = 10,
        config string CP_LANE2_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW = "FALSE",
        config string CP_LANE2_PMA_REG_RX_OOB_DETECTOR_RESET_N = "FALSE",
        config string CP_LANE2_PMA_REG_RX_OOB_DETECTOR_PD_OW = "FALSE",
        config string CP_LANE2_PMA_REG_RX_OOB_DETECTOR_PD = "ON",
        config string CP_LANE2_PMA_REG_RX_LS_MODE_EN = "FALSE",
        config string CP_LANE2_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL = "FALSE",
        config string CP_LANE2_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL = "FALSE",
        config int CP_LANE2_PMA_REG_RX_EQ1_R_SET_TOP = 0,
        config int CP_LANE2_PMA_REG_RX_EQ1_R_SET_FB = 0,
        config int CP_LANE2_PMA_REG_RX_EQ1_C_SET_FB = 0,
        config string CP_LANE2_PMA_REG_RX_EQ1_OFF = "FALSE",
        config int CP_LANE2_PMA_REG_RX_EQ2_R_SET_TOP = 0,
        config int CP_LANE2_PMA_REG_RX_EQ2_R_SET_FB = 0,
        config int CP_LANE2_PMA_REG_RX_EQ2_C_SET_FB = 0,
        config string CP_LANE2_PMA_REG_RX_EQ2_OFF = "FALSE",
        config int CP_LANE2_PMA_REG_EQ_DAC = 0,
        config int CP_LANE2_PMA_REG_RX_ICTRL_EQ = 2,
        config string CP_LANE2_PMA_REG_EQ_DC_CALIB_EN = "FALSE",
        config string CP_LANE2_PMA_REG_EQ_DC_CALIB_SEL = "FALSE",
        config int CP_LANE2_PMA_REG_RX_RESERVED_337_330 = 0,
        config int CP_LANE2_PMA_REG_RX_RESERVED_345_338 = 0,
        config int CP_LANE2_PMA_REG_RX_RESERVED_353_346 = 0,
        config int CP_LANE2_PMA_REG_RX_RESERVED_361_354 = 0,
        config int CP_LANE2_PMA_CTLE_CTRL_REG_I = 0,
        config string CP_LANE2_PMA_CTLE_REG_FORCE_SEL_I = "FALSE",
        config string CP_LANE2_PMA_CTLE_REG_HOLD_I = "FALSE",
        config int CP_LANE2_PMA_CTLE_REG_INIT_DAC_I = 0,
        config string CP_LANE2_PMA_CTLE_REG_POLARITY_I = "FALSE",
        config int CP_LANE2_PMA_CTLE_REG_SHIFTER_GAIN_I = 0,
        config int CP_LANE2_PMA_CTLE_REG_THRESHOLD_I = 0,
        config string CP_LANE2_PMA_REG_RX_RES_TRIM_EN = "FALSE",
        config int CP_LANE2_PMA_REG_RX_RESERVED_393_389 = 0,
        config string CP_LANE2_PMA_CFG_RX_LANE_POWERUP = "OFF",
        config string CP_LANE2_PMA_CFG_RX_PMA_RSTN = "FALSE",
        config string CP_LANE2_PMA_INT_PMA_RX_MASK_0 = "FALSE",
        config string CP_LANE2_PMA_INT_PMA_RX_CLR_0 = "FALSE",
        config string CP_LANE2_PMA_CFG_CTLE_ADP_RSTN = "TRUE",
        config string CP_LANE2_PMA_REG_TX_PD = "ON",
        config string CP_LANE2_PMA_REG_TX_PD_OW = "TRUE",
        config string CP_LANE2_PMA_REG_TX_MAIN_PRE_Z = "FALSE",
        config string CP_LANE2_PMA_REG_TX_MAIN_PRE_Z_OW = "FALSE",
        config int CP_LANE2_PMA_REG_TX_BEACON_TIMER_SEL = 0,
        config string CP_LANE2_PMA_REG_TX_RXDET_REQ_OW = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RXDET_REQ = "FALSE",
        config string CP_LANE2_PMA_REG_TX_BEACON_EN_OW = "FALSE",
        config string CP_LANE2_PMA_REG_TX_BEACON_EN = "FALSE",
        config string CP_LANE2_PMA_REG_TX_EI_EN_OW = "FALSE",
        config string CP_LANE2_PMA_REG_TX_EI_EN = "FALSE",
        config string CP_LANE2_PMA_REG_TX_BIT_CONV = "FALSE",
        config int CP_LANE2_PMA_REG_TX_RES_CAL = 50,
        config string CP_LANE2_PMA_REG_TX_RESERVED_19 = "FALSE",
        config int CP_LANE2_PMA_REG_TX_RESERVED_25_20 = 32,
        config int CP_LANE2_PMA_REG_TX_RESERVED_33_26 = 0,
        config int CP_LANE2_PMA_REG_TX_RESERVED_41_34 = 0,
        config int CP_LANE2_PMA_REG_TX_RESERVED_49_42 = 0,
        config int CP_LANE2_PMA_REG_TX_RESERVED_57_50 = 0,
        config string CP_LANE2_PMA_REG_TX_SYNC_OW = "FALSE",
        config string CP_LANE2_PMA_REG_TX_SYNC = "FALSE",
        config string CP_LANE2_PMA_REG_TX_PD_POST = "OFF",
        config string CP_LANE2_PMA_REG_TX_PD_POST_OW = "TRUE",
        config string CP_LANE2_PMA_REG_TX_RESET_N_OW = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RESET_N = "TRUE",
        config string CP_LANE2_PMA_REG_TX_RESERVED_64 = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RESERVED_65 = "TRUE",
        config string CP_LANE2_PMA_REG_TX_BUSWIDTH_OW = "FALSE",
        config string CP_LANE2_PMA_REG_TX_BUSWIDTH = "20BIT",
        config string CP_LANE2_PMA_REG_PLL_READY_OW = "FALSE",
        config string CP_LANE2_PMA_REG_PLL_READY = "TRUE",
        config string CP_LANE2_PMA_REG_TX_RESERVED_72 = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RESERVED_73 = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RESERVED_74 = "FALSE",
        config int CP_LANE2_PMA_REG_EI_PCLK_DELAY_SEL = 0,
        config string CP_LANE2_PMA_REG_TX_RESERVED_77 = "FALSE",
        config int CP_LANE2_PMA_REG_TX_RESERVED_83_78 = 0,
        config int CP_LANE2_PMA_REG_TX_RESERVED_89_84 = 0,
        config int CP_LANE2_PMA_REG_TX_RESERVED_95_90 = 0,
        config int CP_LANE2_PMA_REG_TX_RESERVED_101_96 = 0,
        config int CP_LANE2_PMA_REG_TX_RESERVED_107_102 = 0,
        config int CP_LANE2_PMA_REG_TX_RESERVED_113_108 = 0,
        config int CP_LANE2_PMA_REG_TX_AMP_DAC0 = 25,
        config int CP_LANE2_PMA_REG_TX_AMP_DAC1 = 19,
        config int CP_LANE2_PMA_REG_TX_AMP_DAC2 = 14,
        config int CP_LANE2_PMA_REG_TX_AMP_DAC3 = 9,
        config int CP_LANE2_PMA_REG_TX_RESERVED_143_138 = 5,
        config int CP_LANE2_PMA_REG_TX_MARGIN = 0,
        config string CP_LANE2_PMA_REG_TX_MARGIN_OW = "FALSE",
        config int CP_LANE2_PMA_REG_TX_RESERVED_149_148 = 0,
        config string CP_LANE2_PMA_REG_TX_RESERVED_150 = "FALSE",
        config string CP_LANE2_PMA_REG_TX_SWING = "FALSE",
        config string CP_LANE2_PMA_REG_TX_SWING_OW = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RESERVED_153 = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RXDET_THRESHOLD = "84MV",
        config int CP_LANE2_PMA_REG_TX_RESERVED_157_156 = 0,
        config string CP_LANE2_PMA_REG_TX_BEACON_OSC_CTRL = "FALSE",
        config int CP_LANE2_PMA_REG_TX_RESERVED_160_159 = 0,
        config int CP_LANE2_PMA_REG_TX_RESERVED_162_161 = 0,
        config string CP_LANE2_PMA_REG_TX_TX2RX_SLPBACK_EN = "FALSE",
        config string CP_LANE2_PMA_REG_TX_PCLK_EDGE_SEL = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RXDET_STATUS_OW = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RXDET_STATUS = "TRUE",
        config string CP_LANE2_PMA_REG_TX_PRBS_GEN_EN = "FALSE",
        config string CP_LANE2_PMA_REG_TX_PRBS_GEN_WIDTH_SEL = "20BIT",
        config string CP_LANE2_PMA_REG_TX_PRBS_SEL = "PRBS7",
        config int CP_LANE2_PMA_REG_TX_UDP_DATA_7_TO_0 = 5,
        config int CP_LANE2_PMA_REG_TX_UDP_DATA_15_TO_8 = 235,
        config int CP_LANE2_PMA_REG_TX_UDP_DATA_19_TO_16 = 3,
        config string CP_LANE2_PMA_REG_TX_RESERVED_192 = "FALSE",
        config int CP_LANE2_PMA_REG_TX_FIFO_WP_CTRL = 4,
        config string CP_LANE2_PMA_REG_TX_FIFO_EN = "FALSE",
        config int CP_LANE2_PMA_REG_TX_DATA_MUX_SEL = 0,
        config string CP_LANE2_PMA_REG_TX_ERR_INSERT = "FALSE",
        config int CP_LANE2_PMA_REG_TX_RESERVED_203_200 = 0,
        config string CP_LANE2_PMA_REG_TX_RESERVED_204 = "FALSE",
        config string CP_LANE2_PMA_REG_TX_SATA_EN = "FALSE",
        config int CP_LANE2_PMA_REG_TX_RESERVED_207_206 = 0,
        config string CP_LANE2_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW = "FALSE",
        config string CP_LANE2_PMA_REG_RATE_CHANGE_TXPCLK_ON = "TRUE",
        config int CP_LANE2_PMA_REG_TX_CFG_POST1 = 0,
        config int CP_LANE2_PMA_REG_TX_CFG_POST2 = 0,
        config int CP_LANE2_PMA_REG_TX_DEEMP = 0,
        config string CP_LANE2_PMA_REG_TX_DEEMP_OW = "FALSE",
        config int CP_LANE2_PMA_REG_TX_RESERVED_224_223 = 0,
        config string CP_LANE2_PMA_REG_TX_RESERVED_225 = "FALSE",
        config int CP_LANE2_PMA_REG_TX_RESERVED_229_226 = 0,
        config int CP_LANE2_PMA_REG_TX_OOB_DELAY_SEL = 0,
        config string CP_LANE2_PMA_REG_TX_POLARITY = "NORMAL",
        config string CP_LANE2_PMA_REG_ANA_TX_JTAG_DATA_O_SEL = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RESERVED_236 = "FALSE",
        config string CP_LANE2_PMA_REG_TX_LS_MODE_EN = "FALSE",
        config string CP_LANE2_PMA_REG_TX_JTAG_MODE_EN_OW = "FALSE",
        config string CP_LANE2_PMA_REG_TX_JTAG_MODE_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RX_JTAG_MODE_EN_OW = "FALSE",
        config string CP_LANE2_PMA_REG_RX_JTAG_MODE_EN = "FALSE",
        config string CP_LANE2_PMA_REG_RX_JTAG_OE = "TRUE",
        config int CP_LANE2_PMA_REG_RX_ACJTAG_VHYSTSEL = 0,
        config string CP_LANE2_PMA_REG_TX_RES_CAL_EN = "FALSE",
        config int CP_LANE2_PMA_REG_RX_TERM_MODE_CTRL = 4,
        config int CP_LANE2_PMA_REG_TX_RESERVED_251_250 = 0,
        config string CP_LANE2_PMA_REG_PLPBK_TXPCLK_EN = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RESERVED_253 = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RESERVED_254 = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RESERVED_255 = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RESERVED_256 = "FALSE",
        config string CP_LANE2_PMA_REG_TX_RESERVED_257 = "FALSE",
        config int CP_LANE2_PMA_REG_TX_PH_SEL = 1,
        config int CP_LANE2_PMA_REG_TX_CFG_PRE = 0,
        config int CP_LANE2_PMA_REG_TX_CFG_MAIN = 0,
        config int CP_LANE2_PMA_REG_CFG_POST = 0,
        config string CP_LANE2_PMA_REG_PD_MAIN = "TRUE",
        config string CP_LANE2_PMA_REG_PD_PRE = "TRUE",
        config string CP_LANE2_PMA_REG_TX_LS_DATA = "FALSE",
        config int CP_LANE2_PMA_REG_TX_DCC_BUF_SZ_SEL = 0,
        config int CP_LANE2_PMA_REG_TX_DCC_CAL_CUR_TUNE = 0,
        config string CP_LANE2_PMA_REG_TX_DCC_CAL_EN = "FALSE",
        config int CP_LANE2_PMA_REG_TX_DCC_CUR_SS = 0,
        config string CP_LANE2_PMA_REG_TX_DCC_FA_CTRL = "FALSE",
        config string CP_LANE2_PMA_REG_TX_DCC_RI_CTRL = "FALSE",
        config int CP_LANE2_PMA_REG_ATB_SEL_2_TO_0 = 0,
        config int CP_LANE2_PMA_REG_ATB_SEL_9_TO_3 = 0,
        config int CP_LANE2_PMA_REG_TX_CFG_7_TO_0 = 0,
        config int CP_LANE2_PMA_REG_TX_CFG_15_TO_8 = 0,
        config int CP_LANE2_PMA_REG_TX_CFG_23_TO_16 = 0,
        config int CP_LANE2_PMA_REG_TX_CFG_31_TO_24 = 0,
        config string CP_LANE2_PMA_REG_TX_OOB_EI_EN = "FALSE",
        config string CP_LANE2_PMA_REG_TX_OOB_EI_EN_OW = "FALSE",
        config string CP_LANE2_PMA_REG_TX_BEACON_EN_DELAYED = "FALSE",
        config string CP_LANE2_PMA_REG_TX_BEACON_EN_DELAYED_OW = "FALSE",
        config string CP_LANE2_PMA_REG_TX_JTAG_DATA = "FALSE",
        config int CP_LANE2_PMA_REG_TX_RXDET_TIMER_SEL = 87,
        config int CP_LANE2_PMA_REG_TX_CFG1_7_0 = 0,
        config int CP_LANE2_PMA_REG_TX_CFG1_15_8 = 0,
        config int CP_LANE2_PMA_REG_TX_CFG1_23_16 = 0,
        config int CP_LANE2_PMA_REG_TX_CFG1_31_24 = 0,
        config string CP_LANE2_PMA_REG_CFG_LANE_POWERUP = "OFF",
        config string CP_LANE2_PMA_REG_CFG_PMA_POR_N = "TRUE",
        config string CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH = "FALSE",
        config string CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_PISO = "FALSE",
        config string CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER = "FALSE",
        config string CP_LANE2_PMA_REG_CFG_TX_PMA_RSTN = "TRUE",
        config int CP_LANE3_PCS_SLAVE = 0,
        config string CP_LANE3_PCS_BYPASS_WORD_ALIGN = "FALSE",
        config string CP_LANE3_PCS_BYPASS_DENC = "FALSE",
        config string CP_LANE3_PCS_BYPASS_BONDING = "FALSE",
        config string CP_LANE3_PCS_BYPASS_CTC = "FALSE",
        config string CP_LANE3_PCS_BYPASS_GEAR = "FALSE",
        config string CP_LANE3_PCS_BYPASS_BRIDGE = "FALSE",
        config string CP_LANE3_PCS_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_LANE3_PCS_DATA_MODE = "X8",
        config string CP_LANE3_PCS_RX_POLARITY_INV = "DELAY",
        config string CP_LANE3_PCS_ALIGN_MODE = "1GB",
        config string CP_LANE3_PCS_SAMP_16B = "X20",
        config string CP_LANE3_PCS_FARLP_PWR_REDUCTION = "FALSE",
        config int CP_LANE3_PCS_COMMA_REG0 = 0,
        config int CP_LANE3_PCS_COMMA_MASK = 0,
        config string CP_LANE3_PCS_CEB_MODE = "10GB",
        config string CP_LANE3_PCS_CTC_MODE = "1SKIP",
        config int CP_LANE3_PCS_A_REG = 0,
        config string CP_LANE3_PCS_GE_AUTO_EN = "FALSE",
        config int CP_LANE3_PCS_SKIP_REG0 = 0,
        config int CP_LANE3_PCS_SKIP_REG1 = 0,
        config int CP_LANE3_PCS_SKIP_REG2 = 0,
        config int CP_LANE3_PCS_SKIP_REG3 = 0,
        config string CP_LANE3_PCS_DEC_DUAL = "FALSE",
        config string CP_LANE3_PCS_SPLIT = "FALSE",
        config string CP_LANE3_PCS_FIFOFLAG_CTC = "FALSE",
        config string CP_LANE3_PCS_COMMA_DET_MODE = "COMMA_PATTERN",
        config string CP_LANE3_PCS_ERRDETECT_SILENCE = "FALSE",
        config string CP_LANE3_PCS_PMA_RCLK_POLINV = "PMA_RCLK",
        config string CP_LANE3_PCS_PCS_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE3_PCS_CB_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE3_PCS_AFTER_CTC_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE3_PCS_RCLK_POLINV = "RCLK",
        config string CP_LANE3_PCS_BRIDGE_RCLK_SEL = "PMA_RCLK",
        config string CP_LANE3_PCS_PCS_RCLK_EN = "FALSE",
        config string CP_LANE3_PCS_CB_RCLK_EN = "FALSE",
        config string CP_LANE3_PCS_AFTER_CTC_RCLK_EN = "FALSE",
        config string CP_LANE3_PCS_AFTER_CTC_RCLK_EN_GB = "FALSE",
        config string CP_LANE3_PCS_PCS_RX_RSTN = "FALSE",
        config string CP_LANE3_PCS_PCIE_SLAVE = "MASTER",
        config string CP_LANE3_PCS_RX_64B66B_67B = "NORMAL",
        config string CP_LANE3_PCS_RX_BRIDGE_CLK_POLINV = "RX_BRIDGE_CLK",
        config string CP_LANE3_PCS_PCS_CB_RSTN = "FALSE",
        config string CP_LANE3_PCS_TX_BRIDGE_GEAR_SEL = "FALSE",
        config string CP_LANE3_PCS_TX_BYPASS_BRIDGE_UINT = "FALSE",
        config string CP_LANE3_PCS_TX_BYPASS_BRIDGE_FIFO = "FALSE",
        config string CP_LANE3_PCS_TX_BYPASS_GEAR = "FALSE",
        config string CP_LANE3_PCS_TX_BYPASS_ENC = "FALSE",
        config string CP_LANE3_PCS_TX_BYPASS_BIT_SLIP = "FALSE",
        config string CP_LANE3_PCS_TX_GEAR_SPLIT = "FALSE",
        config string CP_LANE3_PCS_TX_DRIVE_REG_MODE = "NO_CHANGE",
        config int CP_LANE3_PCS_TX_BIT_SLIP_CYCLES = 0,
        config string CP_LANE3_PCS_INT_TX_MASK_0 = "FALSE",
        config string CP_LANE3_PCS_INT_TX_MASK_1 = "FALSE",
        config string CP_LANE3_PCS_INT_TX_MASK_2 = "FALSE",
        config string CP_LANE3_PCS_INT_TX_CLR_0 = "FALSE",
        config string CP_LANE3_PCS_INT_TX_CLR_1 = "FALSE",
        config string CP_LANE3_PCS_INT_TX_CLR_2 = "FALSE",
        config string CP_LANE3_PCS_TX_PMA_TCLK_POLINV = "PMA_TCLK",
        config string CP_LANE3_PCS_TX_PCS_CLK_EN_SEL = "FALSE",
        config string CP_LANE3_PCS_TX_BRIDGE_TCLK_SEL = "TCLK",
        config string CP_LANE3_PCS_TX_TCLK_POLINV = "TCLK",
        config string CP_LANE3_PCS_PCS_TCLK_SEL = "PMA_TCLK",
        config string CP_LANE3_PCS_TX_PCS_TX_RSTN = "FALSE",
        config string CP_LANE3_PCS_TX_SLAVE = "MASTER",
        config string CP_LANE3_PCS_TX_GEAR_CLK_EN_SEL = "FALSE",
        config string CP_LANE3_PCS_DATA_WIDTH_MODE = "X20",
        config string CP_LANE3_PCS_TX_64B66B_67B = "NORMAL",
        config string CP_LANE3_PCS_GEAR_TCLK_SEL = "PMA_TCLK",
        config string CP_LANE3_PCS_TX_TCLK2FABRIC_SEL = "FALSE",
        config string CP_LANE3_PCS_TX_OUTZZ = "FALSE",
        config string CP_LANE3_PCS_ENC_DUAL = "FALSE",
        config string CP_LANE3_PCS_TX_BITSLIP_DATA_MODE = "X10",
        config string CP_LANE3_PCS_TX_BRIDGE_CLK_POLINV = "TX_BRIDGE_CLK",
        config int CP_LANE3_PCS_COMMA_REG1 = 0,
        config int CP_LANE3_PCS_RAPID_IMAX = 0,
        config int CP_LANE3_PCS_RAPID_VMIN_1 = 0,
        config int CP_LANE3_PCS_RAPID_VMIN_2 = 0,
        config string CP_LANE3_PCS_RX_PRBS_MODE = "DISABLE",
        config string CP_LANE3_PCS_RX_ERRCNT_CLR = "FALSE",
        config string CP_LANE3_PCS_PRBS_ERR_LPBK = "FALSE",
        config string CP_LANE3_PCS_TX_PRBS_MODE = "DISABLE",
        config string CP_LANE3_PCS_TX_INSERT_ER = "FALSE",
        config string CP_LANE3_PCS_ENABLE_PRBS_GEN = "FALSE",
        config int CP_LANE3_PCS_DEFAULT_RADDR = 0,
        config int CP_LANE3_PCS_MASTER_CHECK_OFFSET = 0,
        config int CP_LANE3_PCS_DELAY_SET = 0,
        config string CP_LANE3_PCS_SEACH_OFFSET = "20BIT",
        config int CP_LANE3_PCS_CEB_RAPIDLS_MMAX = 0,
        config int CP_LANE3_PCS_CTC_AFULL = 20,
        config int CP_LANE3_PCS_CTC_AEMPTY = 12,
        config int CP_LANE3_PCS_CTC_CONTI_SKP_SET = 0,
        config string CP_LANE3_PCS_FAR_LOOP = "FALSE",
        config string CP_LANE3_PCS_NEAR_LOOP = "FALSE",
        config string CP_LANE3_PCS_PMA_TX2RX_PLOOP_EN = "FALSE",
        config string CP_LANE3_PCS_PMA_TX2RX_SLOOP_EN = "FALSE",
        config string CP_LANE3_PCS_PMA_RX2TX_PLOOP_EN = "FALSE",
        config string CP_LANE3_PCS_INT_RX_MASK_0 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_MASK_1 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_MASK_2 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_MASK_3 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_MASK_4 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_MASK_5 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_MASK_6 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_MASK_7 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_CLR_0 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_CLR_1 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_CLR_2 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_CLR_3 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_CLR_4 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_CLR_5 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_CLR_6 = "FALSE",
        config string CP_LANE3_PCS_INT_RX_CLR_7 = "FALSE",
        config string CP_LANE3_PCS_CA_RSTN_RX = "FALSE",
        config string CP_LANE3_PCS_CA_DYN_DLY_EN_RX = "FALSE",
        config string CP_LANE3_PCS_CA_DYN_DLY_SEL_RX = "FALSE",
        config int CP_LANE3_PCS_CA_RX = 0,
        config string CP_LANE3_PCS_CA_RSTN_TX = "FALSE",
        config string CP_LANE3_PCS_CA_DYN_DLY_EN_TX = "FALSE",
        config string CP_LANE3_PCS_CA_DYN_DLY_SEL_TX = "FALSE",
        config int CP_LANE3_PCS_CA_TX = 0,
        config string CP_LANE3_PCS_RXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_LANE3_PCS_WDALIGN_PWR_REDUCTION = "NORMAL",
        config string CP_LANE3_PCS_RXDEC_PWR_REDUCTION = "NORMAL",
        config string CP_LANE3_PCS_RXCB_PWR_REDUCTION = "NORMAL",
        config string CP_LANE3_PCS_RXCTC_PWR_REDUCTION = "NORMAL",
        config string CP_LANE3_PCS_RXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_LANE3_PCS_RXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_LANE3_PCS_RXTEST_PWR_REDUCTION = "NORMAL",
        config string CP_LANE3_PCS_TXBRG_PWR_REDUCTION = "NORMAL",
        config string CP_LANE3_PCS_TXGEAR_PWR_REDUCTION = "NORMAL",
        config string CP_LANE3_PCS_TXENC_PWR_REDUCTION = "NORMAL",
        config string CP_LANE3_PCS_TXBSLP_PWR_REDUCTION = "NORMAL",
        config string CP_LANE3_PCS_TXPRBS_PWR_REDUCTION = "NORMAL",
        config string CP_LANE3_PMA_REG_RX_PD = "ON",
        config string CP_LANE3_PMA_REG_RX_PD_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RX_RESERVED_2 = "FALSE",
        config string CP_LANE3_PMA_REG_RX_RESERVED_3 = "FALSE",
        config string CP_LANE3_PMA_REG_RX_DATAPATH_PD = "ON",
        config string CP_LANE3_PMA_REG_RX_DATAPATH_PD_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RX_SIGDET_PD = "ON",
        config string CP_LANE3_PMA_REG_RX_SIGDET_PD_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RX_DCC_RST_N = "TRUE",
        config string CP_LANE3_PMA_REG_RX_DCC_RST_N_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RX_CDR_RST_N = "TRUE",
        config string CP_LANE3_PMA_REG_RX_CDR_RST_N_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RX_SIGDET_RST_N = "TRUE",
        config string CP_LANE3_PMA_REG_RX_SIGDET_RST_N_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RXPCLK_SLIP = "FALSE",
        config string CP_LANE3_PMA_REG_RXPCLK_SLIP_OW = "FALSE",
        config string CP_LANE3_PMA_REG_RX_PCLKSWITCH_RST_N = "TRUE",
        config string CP_LANE3_PMA_REG_RX_PCLKSWITCH_RST_N_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RX_PCLKSWITCH = "FALSE",
        config string CP_LANE3_PMA_REG_RX_PCLKSWITCH_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RX_HIGHZ = "FALSE",
        config string CP_LANE3_PMA_REG_RX_HIGHZ_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RX_SIGDET_CLK_WINDOW = "FALSE",
        config string CP_LANE3_PMA_REG_RX_SIGDET_CLK_WINDOW_OW = "FALSE",
        config string CP_LANE3_PMA_REG_RX_PD_BIAS_RX = "FALSE",
        config string CP_LANE3_PMA_REG_RX_PD_BIAS_RX_OW = "FALSE",
        config string CP_LANE3_PMA_REG_RX_RESET_N = "FALSE",
        config string CP_LANE3_PMA_REG_RX_RESET_N_OW = "FALSE",
        config int CP_LANE3_PMA_REG_RX_RESERVED_29_28 = 0,
        config string CP_LANE3_PMA_REG_RX_BUSWIDTH = "20BIT",
        config string CP_LANE3_PMA_REG_RX_BUSWIDTH_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RX_RATE = "DIV1",
        config string CP_LANE3_PMA_REG_RX_RESERVED_36 = "FALSE",
        config string CP_LANE3_PMA_REG_RX_RATE_EN = "FALSE",
        config int CP_LANE3_PMA_REG_RX_RES_TRIM = 46,
        config string CP_LANE3_PMA_REG_RX_RESERVED_44 = "FALSE",
        config string CP_LANE3_PMA_REG_RX_RESERVED_45 = "FALSE",
        config string CP_LANE3_PMA_REG_RX_SIGDET_STATUS_EN = "FALSE",
        config int CP_LANE3_PMA_REG_RX_RESERVED_48_47 = 0,
        config int CP_LANE3_PMA_REG_RX_ICTRL_SIGDET = 5,
        config int CP_LANE3_PMA_REG_CDR_READY_THD = 2734,
        config string CP_LANE3_PMA_REG_RX_RESERVED_65 = "FALSE",
        config string CP_LANE3_PMA_REG_RX_PCLK_EDGE_SEL = "POS_EDGE",
        config int CP_LANE3_PMA_REG_RX_PIBUF_IC = 1,
        config string CP_LANE3_PMA_REG_RX_RESERVED_69 = "FALSE",
        config int CP_LANE3_PMA_REG_RX_DCC_IC_RX = 1,
        config int CP_LANE3_PMA_REG_CDR_READY_CHECK_CTRL = 0,
        config string CP_LANE3_PMA_REG_RX_ICTRL_TRX = "100PCT",
        config int CP_LANE3_PMA_REG_RX_RESERVED_77_76 = 0,
        config int CP_LANE3_PMA_REG_RX_RESERVED_79_78 = 1,
        config int CP_LANE3_PMA_REG_RX_RESERVED_81_80 = 1,
        config string CP_LANE3_PMA_REG_RX_ICTRL_PIBUF = "100PCT",
        config string CP_LANE3_PMA_REG_RX_ICTRL_PI = "100PCT",
        config string CP_LANE3_PMA_REG_RX_ICTRL_DCC = "100PCT",
        config int CP_LANE3_PMA_REG_RX_RESERVED_89_88 = 1,
        config string CP_LANE3_PMA_REG_TX_RATE = "DIV1",
        config string CP_LANE3_PMA_REG_RX_RESERVED_92 = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RATE_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_RST_N = "TRUE",
        config string CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_EN = "FALSE",
        config string CP_LANE3_PMA_REG_TXCLK_SEL = "PLL",
        config string CP_LANE3_PMA_REG_RX_DATA_POLARITY = "NORMAL",
        config string CP_LANE3_PMA_REG_RX_ERR_INSERT = "FALSE",
        config string CP_LANE3_PMA_REG_UDP_CHK_EN = "FALSE",
        config string CP_LANE3_PMA_REG_PRBS_SEL = "PRBS7",
        config string CP_LANE3_PMA_REG_PRBS_CHK_EN = "FALSE",
        config string CP_LANE3_PMA_REG_PRBS_CHK_WIDTH_SEL = "20BIT",
        config string CP_LANE3_PMA_REG_BIST_CHK_PAT_SEL = "PRBS",
        config string CP_LANE3_PMA_REG_LOAD_ERR_CNT = "FALSE",
        config string CP_LANE3_PMA_REG_CHK_COUNTER_EN = "FALSE",
        config int CP_LANE3_PMA_REG_CDR_PROP_GAIN = 7,
        config int CP_LANE3_PMA_REG_CDR_PROP_TURBO_GAIN = 5,
        config int CP_LANE3_PMA_REG_CDR_INT_GAIN = 7,
        config int CP_LANE3_PMA_REG_CDR_INT_TURBO_GAIN = 5,
        config int CP_LANE3_PMA_REG_CDR_INT_SAT_MAX = 768,
        config int CP_LANE3_PMA_REG_CDR_INT_SAT_MIN = 255,
        config string CP_LANE3_PMA_REG_CDR_INT_RST = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_INT_RST_OW = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_PROP_RST = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_PROP_RST_OW = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_LOCK_RST = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_LOCK_RST_OW = "FALSE",
        config int CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_SEL = 0,
        config int CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_D = 0,
        config string CP_LANE3_PMA_REG_CDR_LOCK_TIMER = "1_2U",
        config int CP_LANE3_PMA_REG_CDR_TURBO_MODE_TIMER = 1,
        config string CP_LANE3_PMA_REG_CDR_LOCK_VAL = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_LOCK_OW = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_INT_SAT_DET_EN = "TRUE",
        config string CP_LANE3_PMA_REG_CDR_SAT_AUTO_DIS = "TRUE",
        config string CP_LANE3_PMA_REG_CDR_GAIN_AUTO = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_TURBO_GAIN_AUTO = "FALSE",
        config int CP_LANE3_PMA_REG_RX_RESERVED_171_167 = 0,
        config int CP_LANE3_PMA_REG_RX_RESERVED_175_172 = 0,
        config string CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_EN = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_PI_CTRL_RST = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_PI_CTRL_RST_OW = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_SAT_DET_RST = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_SAT_DET_RST_OW = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_SAT_DET_STICKY_RST = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_SAT_DET_STICKY_RST_OW = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_SIGDET_STATUS_DIS = "FALSE",
        config int CP_LANE3_PMA_REG_CDR_SAT_DET_TIMER = 2,
        config string CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_VAL = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_OW = "FALSE",
        config string CP_LANE3_PMA_REG_CDR_TURBO_MODE_EN = "TRUE",
        config string CP_LANE3_PMA_REG_RX_RESERVED_190 = "FALSE",
        config int CP_LANE3_PMA_REG_RX_RESERVED_193_191 = 0,
        config string CP_LANE3_PMA_REG_CDR_STATUS_FIFO_EN = "TRUE",
        config int CP_LANE3_PMA_REG_PMA_TEST_SEL = 0,
        config int CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MIN = 3,
        config int CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MAX = 11,
        config int CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MIN = 15,
        config int CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MAX = 35,
        config int CP_LANE3_PMA_REG_RX_RESERVED_227_226 = 1,
        config int CP_LANE3_PMA_REG_COMWAKE_STATUS_CLEAR = 0,
        config int CP_LANE3_PMA_REG_COMINIT_STATUS_CLEAR = 0,
        config string CP_LANE3_PMA_REG_RX_SYNC_RST_N_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RX_SYNC_RST_N = "TRUE",
        config int CP_LANE3_PMA_REG_RX_RESERVED_233_232 = 0,
        config int CP_LANE3_PMA_REG_RX_RESERVED_235_234 = 0,
        config string CP_LANE3_PMA_REG_RX_SATA_COMINIT_OW = "FALSE",
        config string CP_LANE3_PMA_REG_RX_SATA_COMINIT = "FALSE",
        config string CP_LANE3_PMA_REG_RX_SATA_COMWAKE_OW = "FALSE",
        config string CP_LANE3_PMA_REG_RX_SATA_COMWAKE = "FALSE",
        config int CP_LANE3_PMA_REG_RX_RESERVED_241_240 = 0,
        config string CP_LANE3_PMA_REG_RX_DCC_DISABLE = "FALSE",
        config string CP_LANE3_PMA_REG_RX_RESERVED_243 = "FALSE",
        config string CP_LANE3_PMA_REG_RX_SLIP_SEL_EN = "FALSE",
        config int CP_LANE3_PMA_REG_RX_SLIP_SEL = 0,
        config string CP_LANE3_PMA_REG_RX_SLIP_EN = "FALSE",
        config int CP_LANE3_PMA_REG_RX_SIGDET_STATUS_SEL = 5,
        config string CP_LANE3_PMA_REG_RX_SIGDET_FSM_RST_N = "TRUE",
        config string CP_LANE3_PMA_REG_RX_RESERVED_254 = "FALSE",
        config string CP_LANE3_PMA_REG_RX_SIGDET_STATUS = "FALSE",
        config string CP_LANE3_PMA_REG_RX_SIGDET_VTH = "27MV",
        config int CP_LANE3_PMA_REG_RX_SIGDET_GRM = 0,
        config string CP_LANE3_PMA_REG_RX_SIGDET_PULSE_EXT = "FALSE",
        config int CP_LANE3_PMA_REG_RX_SIGDET_CH2_SEL = 0,
        config int CP_LANE3_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW = 3,
        config string CP_LANE3_PMA_REG_RX_SIGDET_CHK_WINDOW_EN = "TRUE",
        config int CP_LANE3_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING = 4,
        config string CP_LANE3_PMA_REG_SLIP_FIFO_INV_EN = "FALSE",
        config string CP_LANE3_PMA_REG_SLIP_FIFO_INV = "POS_EDGE",
        config int CP_LANE3_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL = 0,
        config int CP_LANE3_PMA_REG_RX_SIGDET_4OOB_DET_SEL = 7,
        config int CP_LANE3_PMA_REG_RX_RESERVED_285_283 = 0,
        config string CP_LANE3_PMA_REG_RX_RESERVED_286 = "FALSE",
        config int CP_LANE3_PMA_REG_RX_SIGDET_IC_I = 10,
        config string CP_LANE3_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW = "FALSE",
        config string CP_LANE3_PMA_REG_RX_OOB_DETECTOR_RESET_N = "FALSE",
        config string CP_LANE3_PMA_REG_RX_OOB_DETECTOR_PD_OW = "FALSE",
        config string CP_LANE3_PMA_REG_RX_OOB_DETECTOR_PD = "ON",
        config string CP_LANE3_PMA_REG_RX_LS_MODE_EN = "FALSE",
        config string CP_LANE3_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL = "FALSE",
        config string CP_LANE3_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL = "FALSE",
        config int CP_LANE3_PMA_REG_RX_EQ1_R_SET_TOP = 0,
        config int CP_LANE3_PMA_REG_RX_EQ1_R_SET_FB = 0,
        config int CP_LANE3_PMA_REG_RX_EQ1_C_SET_FB = 0,
        config string CP_LANE3_PMA_REG_RX_EQ1_OFF = "FALSE",
        config int CP_LANE3_PMA_REG_RX_EQ2_R_SET_TOP = 0,
        config int CP_LANE3_PMA_REG_RX_EQ2_R_SET_FB = 0,
        config int CP_LANE3_PMA_REG_RX_EQ2_C_SET_FB = 0,
        config string CP_LANE3_PMA_REG_RX_EQ2_OFF = "FALSE",
        config int CP_LANE3_PMA_REG_EQ_DAC = 0,
        config int CP_LANE3_PMA_REG_RX_ICTRL_EQ = 2,
        config string CP_LANE3_PMA_REG_EQ_DC_CALIB_EN = "FALSE",
        config string CP_LANE3_PMA_REG_EQ_DC_CALIB_SEL = "FALSE",
        config int CP_LANE3_PMA_REG_RX_RESERVED_337_330 = 0,
        config int CP_LANE3_PMA_REG_RX_RESERVED_345_338 = 0,
        config int CP_LANE3_PMA_REG_RX_RESERVED_353_346 = 0,
        config int CP_LANE3_PMA_REG_RX_RESERVED_361_354 = 0,
        config int CP_LANE3_PMA_CTLE_CTRL_REG_I = 0,
        config string CP_LANE3_PMA_CTLE_REG_FORCE_SEL_I = "FALSE",
        config string CP_LANE3_PMA_CTLE_REG_HOLD_I = "FALSE",
        config int CP_LANE3_PMA_CTLE_REG_INIT_DAC_I = 0,
        config string CP_LANE3_PMA_CTLE_REG_POLARITY_I = "FALSE",
        config int CP_LANE3_PMA_CTLE_REG_SHIFTER_GAIN_I = 0,
        config int CP_LANE3_PMA_CTLE_REG_THRESHOLD_I = 0,
        config string CP_LANE3_PMA_REG_RX_RES_TRIM_EN = "FALSE",
        config int CP_LANE3_PMA_REG_RX_RESERVED_393_389 = 0,
        config string CP_LANE3_PMA_CFG_RX_LANE_POWERUP = "OFF",
        config string CP_LANE3_PMA_CFG_RX_PMA_RSTN = "FALSE",
        config string CP_LANE3_PMA_INT_PMA_RX_MASK_0 = "FALSE",
        config string CP_LANE3_PMA_INT_PMA_RX_CLR_0 = "FALSE",
        config string CP_LANE3_PMA_CFG_CTLE_ADP_RSTN = "TRUE",
        config string CP_LANE3_PMA_REG_TX_PD = "ON",
        config string CP_LANE3_PMA_REG_TX_PD_OW = "TRUE",
        config string CP_LANE3_PMA_REG_TX_MAIN_PRE_Z = "FALSE",
        config string CP_LANE3_PMA_REG_TX_MAIN_PRE_Z_OW = "FALSE",
        config int CP_LANE3_PMA_REG_TX_BEACON_TIMER_SEL = 0,
        config string CP_LANE3_PMA_REG_TX_RXDET_REQ_OW = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RXDET_REQ = "FALSE",
        config string CP_LANE3_PMA_REG_TX_BEACON_EN_OW = "FALSE",
        config string CP_LANE3_PMA_REG_TX_BEACON_EN = "FALSE",
        config string CP_LANE3_PMA_REG_TX_EI_EN_OW = "FALSE",
        config string CP_LANE3_PMA_REG_TX_EI_EN = "FALSE",
        config string CP_LANE3_PMA_REG_TX_BIT_CONV = "FALSE",
        config int CP_LANE3_PMA_REG_TX_RES_CAL = 50,
        config string CP_LANE3_PMA_REG_TX_RESERVED_19 = "FALSE",
        config int CP_LANE3_PMA_REG_TX_RESERVED_25_20 = 32,
        config int CP_LANE3_PMA_REG_TX_RESERVED_33_26 = 0,
        config int CP_LANE3_PMA_REG_TX_RESERVED_41_34 = 0,
        config int CP_LANE3_PMA_REG_TX_RESERVED_49_42 = 0,
        config int CP_LANE3_PMA_REG_TX_RESERVED_57_50 = 0,
        config string CP_LANE3_PMA_REG_TX_SYNC_OW = "FALSE",
        config string CP_LANE3_PMA_REG_TX_SYNC = "FALSE",
        config string CP_LANE3_PMA_REG_TX_PD_POST = "OFF",
        config string CP_LANE3_PMA_REG_TX_PD_POST_OW = "TRUE",
        config string CP_LANE3_PMA_REG_TX_RESET_N_OW = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RESET_N = "TRUE",
        config string CP_LANE3_PMA_REG_TX_RESERVED_64 = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RESERVED_65 = "TRUE",
        config string CP_LANE3_PMA_REG_TX_BUSWIDTH_OW = "FALSE",
        config string CP_LANE3_PMA_REG_TX_BUSWIDTH = "20BIT",
        config string CP_LANE3_PMA_REG_PLL_READY_OW = "FALSE",
        config string CP_LANE3_PMA_REG_PLL_READY = "TRUE",
        config string CP_LANE3_PMA_REG_TX_RESERVED_72 = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RESERVED_73 = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RESERVED_74 = "FALSE",
        config int CP_LANE3_PMA_REG_EI_PCLK_DELAY_SEL = 0,
        config string CP_LANE3_PMA_REG_TX_RESERVED_77 = "FALSE",
        config int CP_LANE3_PMA_REG_TX_RESERVED_83_78 = 0,
        config int CP_LANE3_PMA_REG_TX_RESERVED_89_84 = 0,
        config int CP_LANE3_PMA_REG_TX_RESERVED_95_90 = 0,
        config int CP_LANE3_PMA_REG_TX_RESERVED_101_96 = 0,
        config int CP_LANE3_PMA_REG_TX_RESERVED_107_102 = 0,
        config int CP_LANE3_PMA_REG_TX_RESERVED_113_108 = 0,
        config int CP_LANE3_PMA_REG_TX_AMP_DAC0 = 25,
        config int CP_LANE3_PMA_REG_TX_AMP_DAC1 = 19,
        config int CP_LANE3_PMA_REG_TX_AMP_DAC2 = 14,
        config int CP_LANE3_PMA_REG_TX_AMP_DAC3 = 9,
        config int CP_LANE3_PMA_REG_TX_RESERVED_143_138 = 5,
        config int CP_LANE3_PMA_REG_TX_MARGIN = 0,
        config string CP_LANE3_PMA_REG_TX_MARGIN_OW = "FALSE",
        config int CP_LANE3_PMA_REG_TX_RESERVED_149_148 = 0,
        config string CP_LANE3_PMA_REG_TX_RESERVED_150 = "FALSE",
        config string CP_LANE3_PMA_REG_TX_SWING = "FALSE",
        config string CP_LANE3_PMA_REG_TX_SWING_OW = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RESERVED_153 = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RXDET_THRESHOLD = "84MV",
        config int CP_LANE3_PMA_REG_TX_RESERVED_157_156 = 0,
        config string CP_LANE3_PMA_REG_TX_BEACON_OSC_CTRL = "FALSE",
        config int CP_LANE3_PMA_REG_TX_RESERVED_160_159 = 0,
        config int CP_LANE3_PMA_REG_TX_RESERVED_162_161 = 0,
        config string CP_LANE3_PMA_REG_TX_TX2RX_SLPBACK_EN = "FALSE",
        config string CP_LANE3_PMA_REG_TX_PCLK_EDGE_SEL = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RXDET_STATUS_OW = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RXDET_STATUS = "TRUE",
        config string CP_LANE3_PMA_REG_TX_PRBS_GEN_EN = "FALSE",
        config string CP_LANE3_PMA_REG_TX_PRBS_GEN_WIDTH_SEL = "20BIT",
        config string CP_LANE3_PMA_REG_TX_PRBS_SEL = "PRBS7",
        config int CP_LANE3_PMA_REG_TX_UDP_DATA_7_TO_0 = 5,
        config int CP_LANE3_PMA_REG_TX_UDP_DATA_15_TO_8 = 235,
        config int CP_LANE3_PMA_REG_TX_UDP_DATA_19_TO_16 = 3,
        config string CP_LANE3_PMA_REG_TX_RESERVED_192 = "FALSE",
        config int CP_LANE3_PMA_REG_TX_FIFO_WP_CTRL = 4,
        config string CP_LANE3_PMA_REG_TX_FIFO_EN = "FALSE",
        config int CP_LANE3_PMA_REG_TX_DATA_MUX_SEL = 0,
        config string CP_LANE3_PMA_REG_TX_ERR_INSERT = "FALSE",
        config int CP_LANE3_PMA_REG_TX_RESERVED_203_200 = 0,
        config string CP_LANE3_PMA_REG_TX_RESERVED_204 = "FALSE",
        config string CP_LANE3_PMA_REG_TX_SATA_EN = "FALSE",
        config int CP_LANE3_PMA_REG_TX_RESERVED_207_206 = 0,
        config string CP_LANE3_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW = "FALSE",
        config string CP_LANE3_PMA_REG_RATE_CHANGE_TXPCLK_ON = "TRUE",
        config int CP_LANE3_PMA_REG_TX_CFG_POST1 = 0,
        config int CP_LANE3_PMA_REG_TX_CFG_POST2 = 0,
        config int CP_LANE3_PMA_REG_TX_DEEMP = 0,
        config string CP_LANE3_PMA_REG_TX_DEEMP_OW = "FALSE",
        config int CP_LANE3_PMA_REG_TX_RESERVED_224_223 = 0,
        config string CP_LANE3_PMA_REG_TX_RESERVED_225 = "FALSE",
        config int CP_LANE3_PMA_REG_TX_RESERVED_229_226 = 0,
        config int CP_LANE3_PMA_REG_TX_OOB_DELAY_SEL = 0,
        config string CP_LANE3_PMA_REG_TX_POLARITY = "NORMAL",
        config string CP_LANE3_PMA_REG_ANA_TX_JTAG_DATA_O_SEL = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RESERVED_236 = "FALSE",
        config string CP_LANE3_PMA_REG_TX_LS_MODE_EN = "FALSE",
        config string CP_LANE3_PMA_REG_TX_JTAG_MODE_EN_OW = "FALSE",
        config string CP_LANE3_PMA_REG_TX_JTAG_MODE_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RX_JTAG_MODE_EN_OW = "FALSE",
        config string CP_LANE3_PMA_REG_RX_JTAG_MODE_EN = "FALSE",
        config string CP_LANE3_PMA_REG_RX_JTAG_OE = "TRUE",
        config int CP_LANE3_PMA_REG_RX_ACJTAG_VHYSTSEL = 0,
        config string CP_LANE3_PMA_REG_TX_RES_CAL_EN = "FALSE",
        config int CP_LANE3_PMA_REG_RX_TERM_MODE_CTRL = 4,
        config int CP_LANE3_PMA_REG_TX_RESERVED_251_250 = 0,
        config string CP_LANE3_PMA_REG_PLPBK_TXPCLK_EN = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RESERVED_253 = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RESERVED_254 = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RESERVED_255 = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RESERVED_256 = "FALSE",
        config string CP_LANE3_PMA_REG_TX_RESERVED_257 = "FALSE",
        config int CP_LANE3_PMA_REG_TX_PH_SEL = 1,
        config int CP_LANE3_PMA_REG_TX_CFG_PRE = 0,
        config int CP_LANE3_PMA_REG_TX_CFG_MAIN = 0,
        config int CP_LANE3_PMA_REG_CFG_POST = 0,
        config string CP_LANE3_PMA_REG_PD_MAIN = "TRUE",
        config string CP_LANE3_PMA_REG_PD_PRE = "TRUE",
        config string CP_LANE3_PMA_REG_TX_LS_DATA = "FALSE",
        config int CP_LANE3_PMA_REG_TX_DCC_BUF_SZ_SEL = 0,
        config int CP_LANE3_PMA_REG_TX_DCC_CAL_CUR_TUNE = 0,
        config string CP_LANE3_PMA_REG_TX_DCC_CAL_EN = "FALSE",
        config int CP_LANE3_PMA_REG_TX_DCC_CUR_SS = 0,
        config string CP_LANE3_PMA_REG_TX_DCC_FA_CTRL = "FALSE",
        config string CP_LANE3_PMA_REG_TX_DCC_RI_CTRL = "FALSE",
        config int CP_LANE3_PMA_REG_ATB_SEL_2_TO_0 = 0,
        config int CP_LANE3_PMA_REG_ATB_SEL_9_TO_3 = 0,
        config int CP_LANE3_PMA_REG_TX_CFG_7_TO_0 = 0,
        config int CP_LANE3_PMA_REG_TX_CFG_15_TO_8 = 0,
        config int CP_LANE3_PMA_REG_TX_CFG_23_TO_16 = 0,
        config int CP_LANE3_PMA_REG_TX_CFG_31_TO_24 = 0,
        config string CP_LANE3_PMA_REG_TX_OOB_EI_EN = "FALSE",
        config string CP_LANE3_PMA_REG_TX_OOB_EI_EN_OW = "FALSE",
        config string CP_LANE3_PMA_REG_TX_BEACON_EN_DELAYED = "FALSE",
        config string CP_LANE3_PMA_REG_TX_BEACON_EN_DELAYED_OW = "FALSE",
        config string CP_LANE3_PMA_REG_TX_JTAG_DATA = "FALSE",
        config int CP_LANE3_PMA_REG_TX_RXDET_TIMER_SEL = 87,
        config int CP_LANE3_PMA_REG_TX_CFG1_7_0 = 0,
        config int CP_LANE3_PMA_REG_TX_CFG1_15_8 = 0,
        config int CP_LANE3_PMA_REG_TX_CFG1_23_16 = 0,
        config int CP_LANE3_PMA_REG_TX_CFG1_31_24 = 0,
        config string CP_LANE3_PMA_REG_CFG_LANE_POWERUP = "OFF",
        config string CP_LANE3_PMA_REG_CFG_PMA_POR_N = "TRUE",
        config string CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH = "FALSE",
        config string CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_PISO = "FALSE",
        config string CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER = "FALSE",
        config string CP_LANE3_PMA_REG_CFG_TX_PMA_RSTN = "TRUE",
        config string CP_PLL0_PMA_PLL_REG_PLL_PFDDELAY_EN = "TRUE",
        config int CP_PLL0_PMA_PLL_REG_PFDDELAYSEL = 1,
        config int CP_PLL0_PMA_PLL_REG_PLL_VCTRL_SET = 0,
        config string CP_PLL0_PMA_PLL_REG_READY_OR_LOCK = "FALSE",
        config int CP_PLL0_PMA_PLL_REG_PLL_CP = 31,
        config int CP_PLL0_PMA_PLL_REG_PLL_REFDIV = 16,
        config string CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_PLL_READY = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_PLL_READY_OW = "FALSE",
        config int CP_PLL0_PMA_PLL_REG_PLL_FBDIV = 36,
        config int CP_PLL0_PMA_PLL_REG_LPF_RES = 1,
        config string CP_PLL0_PMA_PLL_REG_JTAG_OE = "FALSE",
        config int CP_PLL0_PMA_PLL_REG_JTAG_VHYSTSEL = 0,
        config string CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN_OW = "FALSE",
        config int CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_FBCT = 7,
        config int CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_ITER = 3,
        config string CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_MODE = "FALSE",
        config int CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_LOCKCT = 4,
        config int CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_REFCT = 7,
        config string CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N = "TRUE",
        config string CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_PLL_LOCKED = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_PLL_LOCKED_OW = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED = "FALSE",
        config int CP_PLL0_PMA_PLL_REG_PLL_UNLOCKDET_ITER = 2,
        config string CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_OW = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR = "FALSE",
        config int CP_PLL0_PMA_PLL_REG_I_CTRL_MAX = 63,
        config string CP_PLL0_PMA_PLL_REG_REFCLK_TEST_EN = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_RESCAL_EN = "FALSE",
        config int CP_PLL0_PMA_PLL_REG_I_CTRL_MIN = 0,
        config string CP_PLL0_PMA_PLL_REG_RESCAL_DONE_OW = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_RESCAL_DONE_VAL = "FALSE",
        config int CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE = 46,
        config string CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_OW = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_PMA = "FALSE",
        config int CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_VAL = 46,
        config string CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL = "FALSE",
        config int CP_PLL0_PMA_PLL_REG_RESCAL_ITER_VALID_SEL = 0,
        config string CP_PLL0_PMA_PLL_REG_RESCAL_RESET_N_OW = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_RESCAL_RST_N_VAL = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_RESCAL_WAIT_SEL = "TRUE",
        config string CP_PLL0_PMA_PLL_REFCLK2LANE_PD_L = "FALSE",
        config string CP_PLL0_PMA_PLL_REFCLK2LANE_PD_R = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_LOCKDET_REPEAT = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR = "FALSE",
        config int CP_PLL0_PMA_PLL_REG_TEST_SEL = 0,
        config string CP_PLL0_PMA_PLL_REG_TEST_V_EN = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_TEST_SIG_HALF_EN = "FALSE",
        config string CP_PLL0_PMA_PLL_REG_REFCLK_PAD_SEL = "FALSE",
        config string CP_PLL0_PARM_CFG_HSST_RSTN = "TRUE",
        config string CP_PLL0_PARM_PLL_POWERUP = "OFF",
        config string CP_PLL0_PARM_PLL_RSTN = "TRUE",
        config string CP_PLL1_PMA_PLL_REG_PLL_PFDDELAY_EN = "TRUE",
        config int CP_PLL1_PMA_PLL_REG_PFDDELAYSEL = 1,
        config int CP_PLL1_PMA_PLL_REG_PLL_VCTRL_SET = 0,
        config string CP_PLL1_PMA_PLL_REG_READY_OR_LOCK = "FALSE",
        config int CP_PLL1_PMA_PLL_REG_PLL_CP = 31,
        config int CP_PLL1_PMA_PLL_REG_PLL_REFDIV = 16,
        config string CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_EN = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_PLL_READY = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_PLL_READY_OW = "FALSE",
        config int CP_PLL1_PMA_PLL_REG_PLL_FBDIV = 36,
        config int CP_PLL1_PMA_PLL_REG_LPF_RES = 1,
        config string CP_PLL1_PMA_PLL_REG_JTAG_OE = "FALSE",
        config int CP_PLL1_PMA_PLL_REG_JTAG_VHYSTSEL = 0,
        config string CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_EN_OW = "FALSE",
        config int CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_FBCT = 7,
        config int CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_ITER = 3,
        config string CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_MODE = "FALSE",
        config int CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_LOCKCT = 4,
        config int CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_REFCT = 7,
        config string CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_RESET_N = "TRUE",
        config string CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_PLL_LOCKED = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_PLL_LOCKED_OW = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED = "FALSE",
        config int CP_PLL1_PMA_PLL_REG_PLL_UNLOCKDET_ITER = 2,
        config string CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED_OW = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR = "FALSE",
        config int CP_PLL1_PMA_PLL_REG_I_CTRL_MAX = 63,
        config string CP_PLL1_PMA_PLL_REG_REFCLK_TEST_EN = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_RESCAL_EN = "FALSE",
        config int CP_PLL1_PMA_PLL_REG_I_CTRL_MIN = 0,
        config string CP_PLL1_PMA_PLL_REG_RESCAL_DONE_OW = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_RESCAL_DONE_VAL = "FALSE",
        config int CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE = 46,
        config string CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_OW = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_PMA = "FALSE",
        config int CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_VAL = 46,
        config string CP_PLL1_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL = "FALSE",
        config int CP_PLL1_PMA_PLL_REG_RESCAL_ITER_VALID_SEL = 0,
        config string CP_PLL1_PMA_PLL_REG_RESCAL_RESET_N_OW = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_RESCAL_RST_N_VAL = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_RESCAL_WAIT_SEL = "TRUE",
        config string CP_PLL1_PMA_PLL_REFCLK2LANE_PD_L = "FALSE",
        config string CP_PLL1_PMA_PLL_REFCLK2LANE_PD_R = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_LOCKDET_REPEAT = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR = "FALSE",
        config int CP_PLL1_PMA_PLL_REG_TEST_SEL = 0,
        config string CP_PLL1_PMA_PLL_REG_TEST_V_EN = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_TEST_SIG_HALF_EN = "FALSE",
        config string CP_PLL1_PMA_PLL_REG_REFCLK_PAD_SEL = "FALSE",
        config string CP_PLL1_PARM_CFG_HSST_RSTN = "TRUE",
        config string CP_PLL1_PARM_PLL_POWERUP = "OFF",
        config string CP_PLL1_PARM_PLL_RSTN = "TRUE"
    );
    port
    (
// configuration_body_def_on


    config input SC_GRSN_DIS = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_GRSN_DIS" */,

    config input SC_HSST_EN = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_HSST_EN" */,

    config input SC_CFG_RSTN_0 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CFG_RSTN_0" */,

    config input SC_CFG_RSTN_1 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CFG_RSTN_1" */,

    config input SC_CFG_RSTN_2 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CFG_RSTN_2" */,

    config input SC_CFG_RSTN_3 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CFG_RSTN_3" */,

    config input SC_CFG_RSTN_PLL_0 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CFG_RSTN_PLL_0" */,

    config input SC_CFG_RSTN_PLL_1 = 1'b0
    /* pragma  PAP_CFG_BIT_NAME  = "SC_CFG_RSTN_PLL_1" */,

    config input SC_PCS_CH_INT_0[346:0] = 347'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH_INT_0[346],SC_PCS_CH_INT_0[345],SC_PCS_CH_INT_0[344],SC_PCS_CH_INT_0[343],SC_PCS_CH_INT_0[342],SC_PCS_CH_INT_0[341],SC_PCS_CH_INT_0[340],SC_PCS_CH_INT_0[339],SC_PCS_CH_INT_0[338],SC_PCS_CH_INT_0[337],SC_PCS_CH_INT_0[336],SC_PCS_CH_INT_0[335],SC_PCS_CH_INT_0[334],SC_PCS_CH_INT_0[333],SC_PCS_CH_INT_0[332],SC_PCS_CH_INT_0[331],SC_PCS_CH_INT_0[330],SC_PCS_CH_INT_0[329],SC_PCS_CH_INT_0[328],SC_PCS_CH_INT_0[327],SC_PCS_CH_INT_0[326],SC_PCS_CH_INT_0[325],SC_PCS_CH_INT_0[324],SC_PCS_CH_INT_0[323],SC_PCS_CH_INT_0[322],SC_PCS_CH_INT_0[321],SC_PCS_CH_INT_0[320],SC_PCS_CH_INT_0[319],SC_PCS_CH_INT_0[318],SC_PCS_CH_INT_0[317],SC_PCS_CH_INT_0[316],SC_PCS_CH_INT_0[315],SC_PCS_CH_INT_0[314],SC_PCS_CH_INT_0[313],SC_PCS_CH_INT_0[312],SC_PCS_CH_INT_0[311],SC_PCS_CH_INT_0[310],SC_PCS_CH_INT_0[309],SC_PCS_CH_INT_0[308],SC_PCS_CH_INT_0[307],SC_PCS_CH_INT_0[306],SC_PCS_CH_INT_0[305],SC_PCS_CH_INT_0[304],SC_PCS_CH_INT_0[303],SC_PCS_CH_INT_0[302],SC_PCS_CH_INT_0[301],SC_PCS_CH_INT_0[300],SC_PCS_CH_INT_0[299],SC_PCS_CH_INT_0[298],SC_PCS_CH_INT_0[297],SC_PCS_CH_INT_0[296],SC_PCS_CH_INT_0[295],SC_PCS_CH_INT_0[294],SC_PCS_CH_INT_0[293],SC_PCS_CH_INT_0[292],SC_PCS_CH_INT_0[291],SC_PCS_CH_INT_0[290],SC_PCS_CH_INT_0[289],SC_PCS_CH_INT_0[288],SC_PCS_CH_INT_0[287],SC_PCS_CH_INT_0[286],SC_PCS_CH_INT_0[285],SC_PCS_CH_INT_0[284],SC_PCS_CH_INT_0[283],SC_PCS_CH_INT_0[282],SC_PCS_CH_INT_0[281],SC_PCS_CH_INT_0[280],SC_PCS_CH_INT_0[279],SC_PCS_CH_INT_0[278],SC_PCS_CH_INT_0[277],SC_PCS_CH_INT_0[276],SC_PCS_CH_INT_0[275],SC_PCS_CH_INT_0[274],SC_PCS_CH_INT_0[273],SC_PCS_CH_INT_0[272],SC_PCS_CH_INT_0[271],SC_PCS_CH_INT_0[270],SC_PCS_CH_INT_0[269],SC_PCS_CH_INT_0[268],SC_PCS_CH_INT_0[267],SC_PCS_CH_INT_0[266],SC_PCS_CH_INT_0[265],SC_PCS_CH_INT_0[264],SC_PCS_CH_INT_0[263],SC_PCS_CH_INT_0[262],SC_PCS_CH_INT_0[261],SC_PCS_CH_INT_0[260],SC_PCS_CH_INT_0[259],SC_PCS_CH_INT_0[258],SC_PCS_CH_INT_0[257],SC_PCS_CH_INT_0[256],SC_PCS_CH_INT_0[255],SC_PCS_CH_INT_0[254],SC_PCS_CH_INT_0[253],SC_PCS_CH_INT_0[252],SC_PCS_CH_INT_0[251],SC_PCS_CH_INT_0[250],SC_PCS_CH_INT_0[249],SC_PCS_CH_INT_0[248],SC_PCS_CH_INT_0[247],SC_PCS_CH_INT_0[246],SC_PCS_CH_INT_0[245],SC_PCS_CH_INT_0[244],SC_PCS_CH_INT_0[243],SC_PCS_CH_INT_0[242],SC_PCS_CH_INT_0[241],SC_PCS_CH_INT_0[240],SC_PCS_CH_INT_0[239],SC_PCS_CH_INT_0[238],SC_PCS_CH_INT_0[237],SC_PCS_CH_INT_0[236],SC_PCS_CH_INT_0[235],SC_PCS_CH_INT_0[234],SC_PCS_CH_INT_0[233],SC_PCS_CH_INT_0[232],SC_PCS_CH_INT_0[231],SC_PCS_CH_INT_0[230],SC_PCS_CH_INT_0[229],SC_PCS_CH_INT_0[228],SC_PCS_CH_INT_0[227],SC_PCS_CH_INT_0[226],SC_PCS_CH_INT_0[225],SC_PCS_CH_INT_0[224],SC_PCS_CH_INT_0[223],SC_PCS_CH_INT_0[222],SC_PCS_CH_INT_0[221],SC_PCS_CH_INT_0[220],SC_PCS_CH_INT_0[219],SC_PCS_CH_INT_0[218],SC_PCS_CH_INT_0[217],SC_PCS_CH_INT_0[216],SC_PCS_CH_INT_0[215],SC_PCS_CH_INT_0[214],SC_PCS_CH_INT_0[213],SC_PCS_CH_INT_0[212],SC_PCS_CH_INT_0[211],SC_PCS_CH_INT_0[210],SC_PCS_CH_INT_0[209],SC_PCS_CH_INT_0[208],SC_PCS_CH_INT_0[207],SC_PCS_CH_INT_0[206],SC_PCS_CH_INT_0[205],SC_PCS_CH_INT_0[204],SC_PCS_CH_INT_0[203],SC_PCS_CH_INT_0[202],SC_PCS_CH_INT_0[201],SC_PCS_CH_INT_0[200],SC_PCS_CH_INT_0[199],SC_PCS_CH_INT_0[198],SC_PCS_CH_INT_0[197],SC_PCS_CH_INT_0[196],SC_PCS_CH_INT_0[195],SC_PCS_CH_INT_0[194],SC_PCS_CH_INT_0[193],SC_PCS_CH_INT_0[192],SC_PCS_CH_INT_0[191],SC_PCS_CH_INT_0[190],SC_PCS_CH_INT_0[189],SC_PCS_CH_INT_0[188],SC_PCS_CH_INT_0[187],SC_PCS_CH_INT_0[186],SC_PCS_CH_INT_0[185],SC_PCS_CH_INT_0[184],SC_PCS_CH_INT_0[183],SC_PCS_CH_INT_0[182],SC_PCS_CH_INT_0[181],SC_PCS_CH_INT_0[180],SC_PCS_CH_INT_0[179],SC_PCS_CH_INT_0[178],SC_PCS_CH_INT_0[177],SC_PCS_CH_INT_0[176],SC_PCS_CH_INT_0[175],SC_PCS_CH_INT_0[174],SC_PCS_CH_INT_0[173],SC_PCS_CH_INT_0[172],SC_PCS_CH_INT_0[171],SC_PCS_CH_INT_0[170],SC_PCS_CH_INT_0[169],SC_PCS_CH_INT_0[168],SC_PCS_CH_INT_0[167],SC_PCS_CH_INT_0[166],SC_PCS_CH_INT_0[165],SC_PCS_CH_INT_0[164],SC_PCS_CH_INT_0[163],SC_PCS_CH_INT_0[162],SC_PCS_CH_INT_0[161],SC_PCS_CH_INT_0[160],SC_PCS_CH_INT_0[159],SC_PCS_CH_INT_0[158],SC_PCS_CH_INT_0[157],SC_PCS_CH_INT_0[156],SC_PCS_CH_INT_0[155],SC_PCS_CH_INT_0[154],SC_PCS_CH_INT_0[153],SC_PCS_CH_INT_0[152],SC_PCS_CH_INT_0[151],SC_PCS_CH_INT_0[150],SC_PCS_CH_INT_0[149],SC_PCS_CH_INT_0[148],SC_PCS_CH_INT_0[147],SC_PCS_CH_INT_0[146],SC_PCS_CH_INT_0[145],SC_PCS_CH_INT_0[144],SC_PCS_CH_INT_0[143],SC_PCS_CH_INT_0[142],SC_PCS_CH_INT_0[141],SC_PCS_CH_INT_0[140],SC_PCS_CH_INT_0[139],SC_PCS_CH_INT_0[138],SC_PCS_CH_INT_0[137],SC_PCS_CH_INT_0[136],SC_PCS_CH_INT_0[135],SC_PCS_CH_INT_0[134],SC_PCS_CH_INT_0[133],SC_PCS_CH_INT_0[132],SC_PCS_CH_INT_0[131],SC_PCS_CH_INT_0[130],SC_PCS_CH_INT_0[129],SC_PCS_CH_INT_0[128],SC_PCS_CH_INT_0[127],SC_PCS_CH_INT_0[126],SC_PCS_CH_INT_0[125],SC_PCS_CH_INT_0[124],SC_PCS_CH_INT_0[123],SC_PCS_CH_INT_0[122],SC_PCS_CH_INT_0[121],SC_PCS_CH_INT_0[120],SC_PCS_CH_INT_0[119],SC_PCS_CH_INT_0[118],SC_PCS_CH_INT_0[117],SC_PCS_CH_INT_0[116],SC_PCS_CH_INT_0[115],SC_PCS_CH_INT_0[114],SC_PCS_CH_INT_0[113],SC_PCS_CH_INT_0[112],SC_PCS_CH_INT_0[111],SC_PCS_CH_INT_0[110],SC_PCS_CH_INT_0[109],SC_PCS_CH_INT_0[108],SC_PCS_CH_INT_0[107],SC_PCS_CH_INT_0[106],SC_PCS_CH_INT_0[105],SC_PCS_CH_INT_0[104],SC_PCS_CH_INT_0[103],SC_PCS_CH_INT_0[102],SC_PCS_CH_INT_0[101],SC_PCS_CH_INT_0[100],SC_PCS_CH_INT_0[99],SC_PCS_CH_INT_0[98],SC_PCS_CH_INT_0[97],SC_PCS_CH_INT_0[96],SC_PCS_CH_INT_0[95],SC_PCS_CH_INT_0[94],SC_PCS_CH_INT_0[93],SC_PCS_CH_INT_0[92],SC_PCS_CH_INT_0[91],SC_PCS_CH_INT_0[90],SC_PCS_CH_INT_0[89],SC_PCS_CH_INT_0[88],SC_PCS_CH_INT_0[87],SC_PCS_CH_INT_0[86],SC_PCS_CH_INT_0[85],SC_PCS_CH_INT_0[84],SC_PCS_CH_INT_0[83],SC_PCS_CH_INT_0[82],SC_PCS_CH_INT_0[81],SC_PCS_CH_INT_0[80],SC_PCS_CH_INT_0[79],SC_PCS_CH_INT_0[78],SC_PCS_CH_INT_0[77],SC_PCS_CH_INT_0[76],SC_PCS_CH_INT_0[75],SC_PCS_CH_INT_0[74],SC_PCS_CH_INT_0[73],SC_PCS_CH_INT_0[72],SC_PCS_CH_INT_0[71],SC_PCS_CH_INT_0[70],SC_PCS_CH_INT_0[69],SC_PCS_CH_INT_0[68],SC_PCS_CH_INT_0[67],SC_PCS_CH_INT_0[66],SC_PCS_CH_INT_0[65],SC_PCS_CH_INT_0[64],SC_PCS_CH_INT_0[63],SC_PCS_CH_INT_0[62],SC_PCS_CH_INT_0[61],SC_PCS_CH_INT_0[60],SC_PCS_CH_INT_0[59],SC_PCS_CH_INT_0[58],SC_PCS_CH_INT_0[57],SC_PCS_CH_INT_0[56],SC_PCS_CH_INT_0[55],SC_PCS_CH_INT_0[54],SC_PCS_CH_INT_0[53],SC_PCS_CH_INT_0[52],SC_PCS_CH_INT_0[51],SC_PCS_CH_INT_0[50],SC_PCS_CH_INT_0[49],SC_PCS_CH_INT_0[48],SC_PCS_CH_INT_0[47],SC_PCS_CH_INT_0[46],SC_PCS_CH_INT_0[45],SC_PCS_CH_INT_0[44],SC_PCS_CH_INT_0[43],SC_PCS_CH_INT_0[42],SC_PCS_CH_INT_0[41],SC_PCS_CH_INT_0[40],SC_PCS_CH_INT_0[39],SC_PCS_CH_INT_0[38],SC_PCS_CH_INT_0[37],SC_PCS_CH_INT_0[36],SC_PCS_CH_INT_0[35],SC_PCS_CH_INT_0[34],SC_PCS_CH_INT_0[33],SC_PCS_CH_INT_0[32],SC_PCS_CH_INT_0[31],SC_PCS_CH_INT_0[30],SC_PCS_CH_INT_0[29],SC_PCS_CH_INT_0[28],SC_PCS_CH_INT_0[27],SC_PCS_CH_INT_0[26],SC_PCS_CH_INT_0[25],SC_PCS_CH_INT_0[24],SC_PCS_CH_INT_0[23],SC_PCS_CH_INT_0[22],SC_PCS_CH_INT_0[21],SC_PCS_CH_INT_0[20],SC_PCS_CH_INT_0[19],SC_PCS_CH_INT_0[18],SC_PCS_CH_INT_0[17],SC_PCS_CH_INT_0[16],SC_PCS_CH_INT_0[15],SC_PCS_CH_INT_0[14],SC_PCS_CH_INT_0[13],SC_PCS_CH_INT_0[12],SC_PCS_CH_INT_0[11],SC_PCS_CH_INT_0[10],SC_PCS_CH_INT_0[9],SC_PCS_CH_INT_0[8],SC_PCS_CH_INT_0[7],SC_PCS_CH_INT_0[6],SC_PCS_CH_INT_0[5],SC_PCS_CH_INT_0[4],SC_PCS_CH_INT_0[3],SC_PCS_CH_INT_0[2],SC_PCS_CH_INT_0[1],SC_PCS_CH_INT_0[0]" */,

    config input SC_PCS_CH_INT_1[346:0] = 347'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH_INT_1[346],SC_PCS_CH_INT_1[345],SC_PCS_CH_INT_1[344],SC_PCS_CH_INT_1[343],SC_PCS_CH_INT_1[342],SC_PCS_CH_INT_1[341],SC_PCS_CH_INT_1[340],SC_PCS_CH_INT_1[339],SC_PCS_CH_INT_1[338],SC_PCS_CH_INT_1[337],SC_PCS_CH_INT_1[336],SC_PCS_CH_INT_1[335],SC_PCS_CH_INT_1[334],SC_PCS_CH_INT_1[333],SC_PCS_CH_INT_1[332],SC_PCS_CH_INT_1[331],SC_PCS_CH_INT_1[330],SC_PCS_CH_INT_1[329],SC_PCS_CH_INT_1[328],SC_PCS_CH_INT_1[327],SC_PCS_CH_INT_1[326],SC_PCS_CH_INT_1[325],SC_PCS_CH_INT_1[324],SC_PCS_CH_INT_1[323],SC_PCS_CH_INT_1[322],SC_PCS_CH_INT_1[321],SC_PCS_CH_INT_1[320],SC_PCS_CH_INT_1[319],SC_PCS_CH_INT_1[318],SC_PCS_CH_INT_1[317],SC_PCS_CH_INT_1[316],SC_PCS_CH_INT_1[315],SC_PCS_CH_INT_1[314],SC_PCS_CH_INT_1[313],SC_PCS_CH_INT_1[312],SC_PCS_CH_INT_1[311],SC_PCS_CH_INT_1[310],SC_PCS_CH_INT_1[309],SC_PCS_CH_INT_1[308],SC_PCS_CH_INT_1[307],SC_PCS_CH_INT_1[306],SC_PCS_CH_INT_1[305],SC_PCS_CH_INT_1[304],SC_PCS_CH_INT_1[303],SC_PCS_CH_INT_1[302],SC_PCS_CH_INT_1[301],SC_PCS_CH_INT_1[300],SC_PCS_CH_INT_1[299],SC_PCS_CH_INT_1[298],SC_PCS_CH_INT_1[297],SC_PCS_CH_INT_1[296],SC_PCS_CH_INT_1[295],SC_PCS_CH_INT_1[294],SC_PCS_CH_INT_1[293],SC_PCS_CH_INT_1[292],SC_PCS_CH_INT_1[291],SC_PCS_CH_INT_1[290],SC_PCS_CH_INT_1[289],SC_PCS_CH_INT_1[288],SC_PCS_CH_INT_1[287],SC_PCS_CH_INT_1[286],SC_PCS_CH_INT_1[285],SC_PCS_CH_INT_1[284],SC_PCS_CH_INT_1[283],SC_PCS_CH_INT_1[282],SC_PCS_CH_INT_1[281],SC_PCS_CH_INT_1[280],SC_PCS_CH_INT_1[279],SC_PCS_CH_INT_1[278],SC_PCS_CH_INT_1[277],SC_PCS_CH_INT_1[276],SC_PCS_CH_INT_1[275],SC_PCS_CH_INT_1[274],SC_PCS_CH_INT_1[273],SC_PCS_CH_INT_1[272],SC_PCS_CH_INT_1[271],SC_PCS_CH_INT_1[270],SC_PCS_CH_INT_1[269],SC_PCS_CH_INT_1[268],SC_PCS_CH_INT_1[267],SC_PCS_CH_INT_1[266],SC_PCS_CH_INT_1[265],SC_PCS_CH_INT_1[264],SC_PCS_CH_INT_1[263],SC_PCS_CH_INT_1[262],SC_PCS_CH_INT_1[261],SC_PCS_CH_INT_1[260],SC_PCS_CH_INT_1[259],SC_PCS_CH_INT_1[258],SC_PCS_CH_INT_1[257],SC_PCS_CH_INT_1[256],SC_PCS_CH_INT_1[255],SC_PCS_CH_INT_1[254],SC_PCS_CH_INT_1[253],SC_PCS_CH_INT_1[252],SC_PCS_CH_INT_1[251],SC_PCS_CH_INT_1[250],SC_PCS_CH_INT_1[249],SC_PCS_CH_INT_1[248],SC_PCS_CH_INT_1[247],SC_PCS_CH_INT_1[246],SC_PCS_CH_INT_1[245],SC_PCS_CH_INT_1[244],SC_PCS_CH_INT_1[243],SC_PCS_CH_INT_1[242],SC_PCS_CH_INT_1[241],SC_PCS_CH_INT_1[240],SC_PCS_CH_INT_1[239],SC_PCS_CH_INT_1[238],SC_PCS_CH_INT_1[237],SC_PCS_CH_INT_1[236],SC_PCS_CH_INT_1[235],SC_PCS_CH_INT_1[234],SC_PCS_CH_INT_1[233],SC_PCS_CH_INT_1[232],SC_PCS_CH_INT_1[231],SC_PCS_CH_INT_1[230],SC_PCS_CH_INT_1[229],SC_PCS_CH_INT_1[228],SC_PCS_CH_INT_1[227],SC_PCS_CH_INT_1[226],SC_PCS_CH_INT_1[225],SC_PCS_CH_INT_1[224],SC_PCS_CH_INT_1[223],SC_PCS_CH_INT_1[222],SC_PCS_CH_INT_1[221],SC_PCS_CH_INT_1[220],SC_PCS_CH_INT_1[219],SC_PCS_CH_INT_1[218],SC_PCS_CH_INT_1[217],SC_PCS_CH_INT_1[216],SC_PCS_CH_INT_1[215],SC_PCS_CH_INT_1[214],SC_PCS_CH_INT_1[213],SC_PCS_CH_INT_1[212],SC_PCS_CH_INT_1[211],SC_PCS_CH_INT_1[210],SC_PCS_CH_INT_1[209],SC_PCS_CH_INT_1[208],SC_PCS_CH_INT_1[207],SC_PCS_CH_INT_1[206],SC_PCS_CH_INT_1[205],SC_PCS_CH_INT_1[204],SC_PCS_CH_INT_1[203],SC_PCS_CH_INT_1[202],SC_PCS_CH_INT_1[201],SC_PCS_CH_INT_1[200],SC_PCS_CH_INT_1[199],SC_PCS_CH_INT_1[198],SC_PCS_CH_INT_1[197],SC_PCS_CH_INT_1[196],SC_PCS_CH_INT_1[195],SC_PCS_CH_INT_1[194],SC_PCS_CH_INT_1[193],SC_PCS_CH_INT_1[192],SC_PCS_CH_INT_1[191],SC_PCS_CH_INT_1[190],SC_PCS_CH_INT_1[189],SC_PCS_CH_INT_1[188],SC_PCS_CH_INT_1[187],SC_PCS_CH_INT_1[186],SC_PCS_CH_INT_1[185],SC_PCS_CH_INT_1[184],SC_PCS_CH_INT_1[183],SC_PCS_CH_INT_1[182],SC_PCS_CH_INT_1[181],SC_PCS_CH_INT_1[180],SC_PCS_CH_INT_1[179],SC_PCS_CH_INT_1[178],SC_PCS_CH_INT_1[177],SC_PCS_CH_INT_1[176],SC_PCS_CH_INT_1[175],SC_PCS_CH_INT_1[174],SC_PCS_CH_INT_1[173],SC_PCS_CH_INT_1[172],SC_PCS_CH_INT_1[171],SC_PCS_CH_INT_1[170],SC_PCS_CH_INT_1[169],SC_PCS_CH_INT_1[168],SC_PCS_CH_INT_1[167],SC_PCS_CH_INT_1[166],SC_PCS_CH_INT_1[165],SC_PCS_CH_INT_1[164],SC_PCS_CH_INT_1[163],SC_PCS_CH_INT_1[162],SC_PCS_CH_INT_1[161],SC_PCS_CH_INT_1[160],SC_PCS_CH_INT_1[159],SC_PCS_CH_INT_1[158],SC_PCS_CH_INT_1[157],SC_PCS_CH_INT_1[156],SC_PCS_CH_INT_1[155],SC_PCS_CH_INT_1[154],SC_PCS_CH_INT_1[153],SC_PCS_CH_INT_1[152],SC_PCS_CH_INT_1[151],SC_PCS_CH_INT_1[150],SC_PCS_CH_INT_1[149],SC_PCS_CH_INT_1[148],SC_PCS_CH_INT_1[147],SC_PCS_CH_INT_1[146],SC_PCS_CH_INT_1[145],SC_PCS_CH_INT_1[144],SC_PCS_CH_INT_1[143],SC_PCS_CH_INT_1[142],SC_PCS_CH_INT_1[141],SC_PCS_CH_INT_1[140],SC_PCS_CH_INT_1[139],SC_PCS_CH_INT_1[138],SC_PCS_CH_INT_1[137],SC_PCS_CH_INT_1[136],SC_PCS_CH_INT_1[135],SC_PCS_CH_INT_1[134],SC_PCS_CH_INT_1[133],SC_PCS_CH_INT_1[132],SC_PCS_CH_INT_1[131],SC_PCS_CH_INT_1[130],SC_PCS_CH_INT_1[129],SC_PCS_CH_INT_1[128],SC_PCS_CH_INT_1[127],SC_PCS_CH_INT_1[126],SC_PCS_CH_INT_1[125],SC_PCS_CH_INT_1[124],SC_PCS_CH_INT_1[123],SC_PCS_CH_INT_1[122],SC_PCS_CH_INT_1[121],SC_PCS_CH_INT_1[120],SC_PCS_CH_INT_1[119],SC_PCS_CH_INT_1[118],SC_PCS_CH_INT_1[117],SC_PCS_CH_INT_1[116],SC_PCS_CH_INT_1[115],SC_PCS_CH_INT_1[114],SC_PCS_CH_INT_1[113],SC_PCS_CH_INT_1[112],SC_PCS_CH_INT_1[111],SC_PCS_CH_INT_1[110],SC_PCS_CH_INT_1[109],SC_PCS_CH_INT_1[108],SC_PCS_CH_INT_1[107],SC_PCS_CH_INT_1[106],SC_PCS_CH_INT_1[105],SC_PCS_CH_INT_1[104],SC_PCS_CH_INT_1[103],SC_PCS_CH_INT_1[102],SC_PCS_CH_INT_1[101],SC_PCS_CH_INT_1[100],SC_PCS_CH_INT_1[99],SC_PCS_CH_INT_1[98],SC_PCS_CH_INT_1[97],SC_PCS_CH_INT_1[96],SC_PCS_CH_INT_1[95],SC_PCS_CH_INT_1[94],SC_PCS_CH_INT_1[93],SC_PCS_CH_INT_1[92],SC_PCS_CH_INT_1[91],SC_PCS_CH_INT_1[90],SC_PCS_CH_INT_1[89],SC_PCS_CH_INT_1[88],SC_PCS_CH_INT_1[87],SC_PCS_CH_INT_1[86],SC_PCS_CH_INT_1[85],SC_PCS_CH_INT_1[84],SC_PCS_CH_INT_1[83],SC_PCS_CH_INT_1[82],SC_PCS_CH_INT_1[81],SC_PCS_CH_INT_1[80],SC_PCS_CH_INT_1[79],SC_PCS_CH_INT_1[78],SC_PCS_CH_INT_1[77],SC_PCS_CH_INT_1[76],SC_PCS_CH_INT_1[75],SC_PCS_CH_INT_1[74],SC_PCS_CH_INT_1[73],SC_PCS_CH_INT_1[72],SC_PCS_CH_INT_1[71],SC_PCS_CH_INT_1[70],SC_PCS_CH_INT_1[69],SC_PCS_CH_INT_1[68],SC_PCS_CH_INT_1[67],SC_PCS_CH_INT_1[66],SC_PCS_CH_INT_1[65],SC_PCS_CH_INT_1[64],SC_PCS_CH_INT_1[63],SC_PCS_CH_INT_1[62],SC_PCS_CH_INT_1[61],SC_PCS_CH_INT_1[60],SC_PCS_CH_INT_1[59],SC_PCS_CH_INT_1[58],SC_PCS_CH_INT_1[57],SC_PCS_CH_INT_1[56],SC_PCS_CH_INT_1[55],SC_PCS_CH_INT_1[54],SC_PCS_CH_INT_1[53],SC_PCS_CH_INT_1[52],SC_PCS_CH_INT_1[51],SC_PCS_CH_INT_1[50],SC_PCS_CH_INT_1[49],SC_PCS_CH_INT_1[48],SC_PCS_CH_INT_1[47],SC_PCS_CH_INT_1[46],SC_PCS_CH_INT_1[45],SC_PCS_CH_INT_1[44],SC_PCS_CH_INT_1[43],SC_PCS_CH_INT_1[42],SC_PCS_CH_INT_1[41],SC_PCS_CH_INT_1[40],SC_PCS_CH_INT_1[39],SC_PCS_CH_INT_1[38],SC_PCS_CH_INT_1[37],SC_PCS_CH_INT_1[36],SC_PCS_CH_INT_1[35],SC_PCS_CH_INT_1[34],SC_PCS_CH_INT_1[33],SC_PCS_CH_INT_1[32],SC_PCS_CH_INT_1[31],SC_PCS_CH_INT_1[30],SC_PCS_CH_INT_1[29],SC_PCS_CH_INT_1[28],SC_PCS_CH_INT_1[27],SC_PCS_CH_INT_1[26],SC_PCS_CH_INT_1[25],SC_PCS_CH_INT_1[24],SC_PCS_CH_INT_1[23],SC_PCS_CH_INT_1[22],SC_PCS_CH_INT_1[21],SC_PCS_CH_INT_1[20],SC_PCS_CH_INT_1[19],SC_PCS_CH_INT_1[18],SC_PCS_CH_INT_1[17],SC_PCS_CH_INT_1[16],SC_PCS_CH_INT_1[15],SC_PCS_CH_INT_1[14],SC_PCS_CH_INT_1[13],SC_PCS_CH_INT_1[12],SC_PCS_CH_INT_1[11],SC_PCS_CH_INT_1[10],SC_PCS_CH_INT_1[9],SC_PCS_CH_INT_1[8],SC_PCS_CH_INT_1[7],SC_PCS_CH_INT_1[6],SC_PCS_CH_INT_1[5],SC_PCS_CH_INT_1[4],SC_PCS_CH_INT_1[3],SC_PCS_CH_INT_1[2],SC_PCS_CH_INT_1[1],SC_PCS_CH_INT_1[0]" */,

    config input SC_PCS_CH_INT_2[346:0] = 347'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH_INT_2[346],SC_PCS_CH_INT_2[345],SC_PCS_CH_INT_2[344],SC_PCS_CH_INT_2[343],SC_PCS_CH_INT_2[342],SC_PCS_CH_INT_2[341],SC_PCS_CH_INT_2[340],SC_PCS_CH_INT_2[339],SC_PCS_CH_INT_2[338],SC_PCS_CH_INT_2[337],SC_PCS_CH_INT_2[336],SC_PCS_CH_INT_2[335],SC_PCS_CH_INT_2[334],SC_PCS_CH_INT_2[333],SC_PCS_CH_INT_2[332],SC_PCS_CH_INT_2[331],SC_PCS_CH_INT_2[330],SC_PCS_CH_INT_2[329],SC_PCS_CH_INT_2[328],SC_PCS_CH_INT_2[327],SC_PCS_CH_INT_2[326],SC_PCS_CH_INT_2[325],SC_PCS_CH_INT_2[324],SC_PCS_CH_INT_2[323],SC_PCS_CH_INT_2[322],SC_PCS_CH_INT_2[321],SC_PCS_CH_INT_2[320],SC_PCS_CH_INT_2[319],SC_PCS_CH_INT_2[318],SC_PCS_CH_INT_2[317],SC_PCS_CH_INT_2[316],SC_PCS_CH_INT_2[315],SC_PCS_CH_INT_2[314],SC_PCS_CH_INT_2[313],SC_PCS_CH_INT_2[312],SC_PCS_CH_INT_2[311],SC_PCS_CH_INT_2[310],SC_PCS_CH_INT_2[309],SC_PCS_CH_INT_2[308],SC_PCS_CH_INT_2[307],SC_PCS_CH_INT_2[306],SC_PCS_CH_INT_2[305],SC_PCS_CH_INT_2[304],SC_PCS_CH_INT_2[303],SC_PCS_CH_INT_2[302],SC_PCS_CH_INT_2[301],SC_PCS_CH_INT_2[300],SC_PCS_CH_INT_2[299],SC_PCS_CH_INT_2[298],SC_PCS_CH_INT_2[297],SC_PCS_CH_INT_2[296],SC_PCS_CH_INT_2[295],SC_PCS_CH_INT_2[294],SC_PCS_CH_INT_2[293],SC_PCS_CH_INT_2[292],SC_PCS_CH_INT_2[291],SC_PCS_CH_INT_2[290],SC_PCS_CH_INT_2[289],SC_PCS_CH_INT_2[288],SC_PCS_CH_INT_2[287],SC_PCS_CH_INT_2[286],SC_PCS_CH_INT_2[285],SC_PCS_CH_INT_2[284],SC_PCS_CH_INT_2[283],SC_PCS_CH_INT_2[282],SC_PCS_CH_INT_2[281],SC_PCS_CH_INT_2[280],SC_PCS_CH_INT_2[279],SC_PCS_CH_INT_2[278],SC_PCS_CH_INT_2[277],SC_PCS_CH_INT_2[276],SC_PCS_CH_INT_2[275],SC_PCS_CH_INT_2[274],SC_PCS_CH_INT_2[273],SC_PCS_CH_INT_2[272],SC_PCS_CH_INT_2[271],SC_PCS_CH_INT_2[270],SC_PCS_CH_INT_2[269],SC_PCS_CH_INT_2[268],SC_PCS_CH_INT_2[267],SC_PCS_CH_INT_2[266],SC_PCS_CH_INT_2[265],SC_PCS_CH_INT_2[264],SC_PCS_CH_INT_2[263],SC_PCS_CH_INT_2[262],SC_PCS_CH_INT_2[261],SC_PCS_CH_INT_2[260],SC_PCS_CH_INT_2[259],SC_PCS_CH_INT_2[258],SC_PCS_CH_INT_2[257],SC_PCS_CH_INT_2[256],SC_PCS_CH_INT_2[255],SC_PCS_CH_INT_2[254],SC_PCS_CH_INT_2[253],SC_PCS_CH_INT_2[252],SC_PCS_CH_INT_2[251],SC_PCS_CH_INT_2[250],SC_PCS_CH_INT_2[249],SC_PCS_CH_INT_2[248],SC_PCS_CH_INT_2[247],SC_PCS_CH_INT_2[246],SC_PCS_CH_INT_2[245],SC_PCS_CH_INT_2[244],SC_PCS_CH_INT_2[243],SC_PCS_CH_INT_2[242],SC_PCS_CH_INT_2[241],SC_PCS_CH_INT_2[240],SC_PCS_CH_INT_2[239],SC_PCS_CH_INT_2[238],SC_PCS_CH_INT_2[237],SC_PCS_CH_INT_2[236],SC_PCS_CH_INT_2[235],SC_PCS_CH_INT_2[234],SC_PCS_CH_INT_2[233],SC_PCS_CH_INT_2[232],SC_PCS_CH_INT_2[231],SC_PCS_CH_INT_2[230],SC_PCS_CH_INT_2[229],SC_PCS_CH_INT_2[228],SC_PCS_CH_INT_2[227],SC_PCS_CH_INT_2[226],SC_PCS_CH_INT_2[225],SC_PCS_CH_INT_2[224],SC_PCS_CH_INT_2[223],SC_PCS_CH_INT_2[222],SC_PCS_CH_INT_2[221],SC_PCS_CH_INT_2[220],SC_PCS_CH_INT_2[219],SC_PCS_CH_INT_2[218],SC_PCS_CH_INT_2[217],SC_PCS_CH_INT_2[216],SC_PCS_CH_INT_2[215],SC_PCS_CH_INT_2[214],SC_PCS_CH_INT_2[213],SC_PCS_CH_INT_2[212],SC_PCS_CH_INT_2[211],SC_PCS_CH_INT_2[210],SC_PCS_CH_INT_2[209],SC_PCS_CH_INT_2[208],SC_PCS_CH_INT_2[207],SC_PCS_CH_INT_2[206],SC_PCS_CH_INT_2[205],SC_PCS_CH_INT_2[204],SC_PCS_CH_INT_2[203],SC_PCS_CH_INT_2[202],SC_PCS_CH_INT_2[201],SC_PCS_CH_INT_2[200],SC_PCS_CH_INT_2[199],SC_PCS_CH_INT_2[198],SC_PCS_CH_INT_2[197],SC_PCS_CH_INT_2[196],SC_PCS_CH_INT_2[195],SC_PCS_CH_INT_2[194],SC_PCS_CH_INT_2[193],SC_PCS_CH_INT_2[192],SC_PCS_CH_INT_2[191],SC_PCS_CH_INT_2[190],SC_PCS_CH_INT_2[189],SC_PCS_CH_INT_2[188],SC_PCS_CH_INT_2[187],SC_PCS_CH_INT_2[186],SC_PCS_CH_INT_2[185],SC_PCS_CH_INT_2[184],SC_PCS_CH_INT_2[183],SC_PCS_CH_INT_2[182],SC_PCS_CH_INT_2[181],SC_PCS_CH_INT_2[180],SC_PCS_CH_INT_2[179],SC_PCS_CH_INT_2[178],SC_PCS_CH_INT_2[177],SC_PCS_CH_INT_2[176],SC_PCS_CH_INT_2[175],SC_PCS_CH_INT_2[174],SC_PCS_CH_INT_2[173],SC_PCS_CH_INT_2[172],SC_PCS_CH_INT_2[171],SC_PCS_CH_INT_2[170],SC_PCS_CH_INT_2[169],SC_PCS_CH_INT_2[168],SC_PCS_CH_INT_2[167],SC_PCS_CH_INT_2[166],SC_PCS_CH_INT_2[165],SC_PCS_CH_INT_2[164],SC_PCS_CH_INT_2[163],SC_PCS_CH_INT_2[162],SC_PCS_CH_INT_2[161],SC_PCS_CH_INT_2[160],SC_PCS_CH_INT_2[159],SC_PCS_CH_INT_2[158],SC_PCS_CH_INT_2[157],SC_PCS_CH_INT_2[156],SC_PCS_CH_INT_2[155],SC_PCS_CH_INT_2[154],SC_PCS_CH_INT_2[153],SC_PCS_CH_INT_2[152],SC_PCS_CH_INT_2[151],SC_PCS_CH_INT_2[150],SC_PCS_CH_INT_2[149],SC_PCS_CH_INT_2[148],SC_PCS_CH_INT_2[147],SC_PCS_CH_INT_2[146],SC_PCS_CH_INT_2[145],SC_PCS_CH_INT_2[144],SC_PCS_CH_INT_2[143],SC_PCS_CH_INT_2[142],SC_PCS_CH_INT_2[141],SC_PCS_CH_INT_2[140],SC_PCS_CH_INT_2[139],SC_PCS_CH_INT_2[138],SC_PCS_CH_INT_2[137],SC_PCS_CH_INT_2[136],SC_PCS_CH_INT_2[135],SC_PCS_CH_INT_2[134],SC_PCS_CH_INT_2[133],SC_PCS_CH_INT_2[132],SC_PCS_CH_INT_2[131],SC_PCS_CH_INT_2[130],SC_PCS_CH_INT_2[129],SC_PCS_CH_INT_2[128],SC_PCS_CH_INT_2[127],SC_PCS_CH_INT_2[126],SC_PCS_CH_INT_2[125],SC_PCS_CH_INT_2[124],SC_PCS_CH_INT_2[123],SC_PCS_CH_INT_2[122],SC_PCS_CH_INT_2[121],SC_PCS_CH_INT_2[120],SC_PCS_CH_INT_2[119],SC_PCS_CH_INT_2[118],SC_PCS_CH_INT_2[117],SC_PCS_CH_INT_2[116],SC_PCS_CH_INT_2[115],SC_PCS_CH_INT_2[114],SC_PCS_CH_INT_2[113],SC_PCS_CH_INT_2[112],SC_PCS_CH_INT_2[111],SC_PCS_CH_INT_2[110],SC_PCS_CH_INT_2[109],SC_PCS_CH_INT_2[108],SC_PCS_CH_INT_2[107],SC_PCS_CH_INT_2[106],SC_PCS_CH_INT_2[105],SC_PCS_CH_INT_2[104],SC_PCS_CH_INT_2[103],SC_PCS_CH_INT_2[102],SC_PCS_CH_INT_2[101],SC_PCS_CH_INT_2[100],SC_PCS_CH_INT_2[99],SC_PCS_CH_INT_2[98],SC_PCS_CH_INT_2[97],SC_PCS_CH_INT_2[96],SC_PCS_CH_INT_2[95],SC_PCS_CH_INT_2[94],SC_PCS_CH_INT_2[93],SC_PCS_CH_INT_2[92],SC_PCS_CH_INT_2[91],SC_PCS_CH_INT_2[90],SC_PCS_CH_INT_2[89],SC_PCS_CH_INT_2[88],SC_PCS_CH_INT_2[87],SC_PCS_CH_INT_2[86],SC_PCS_CH_INT_2[85],SC_PCS_CH_INT_2[84],SC_PCS_CH_INT_2[83],SC_PCS_CH_INT_2[82],SC_PCS_CH_INT_2[81],SC_PCS_CH_INT_2[80],SC_PCS_CH_INT_2[79],SC_PCS_CH_INT_2[78],SC_PCS_CH_INT_2[77],SC_PCS_CH_INT_2[76],SC_PCS_CH_INT_2[75],SC_PCS_CH_INT_2[74],SC_PCS_CH_INT_2[73],SC_PCS_CH_INT_2[72],SC_PCS_CH_INT_2[71],SC_PCS_CH_INT_2[70],SC_PCS_CH_INT_2[69],SC_PCS_CH_INT_2[68],SC_PCS_CH_INT_2[67],SC_PCS_CH_INT_2[66],SC_PCS_CH_INT_2[65],SC_PCS_CH_INT_2[64],SC_PCS_CH_INT_2[63],SC_PCS_CH_INT_2[62],SC_PCS_CH_INT_2[61],SC_PCS_CH_INT_2[60],SC_PCS_CH_INT_2[59],SC_PCS_CH_INT_2[58],SC_PCS_CH_INT_2[57],SC_PCS_CH_INT_2[56],SC_PCS_CH_INT_2[55],SC_PCS_CH_INT_2[54],SC_PCS_CH_INT_2[53],SC_PCS_CH_INT_2[52],SC_PCS_CH_INT_2[51],SC_PCS_CH_INT_2[50],SC_PCS_CH_INT_2[49],SC_PCS_CH_INT_2[48],SC_PCS_CH_INT_2[47],SC_PCS_CH_INT_2[46],SC_PCS_CH_INT_2[45],SC_PCS_CH_INT_2[44],SC_PCS_CH_INT_2[43],SC_PCS_CH_INT_2[42],SC_PCS_CH_INT_2[41],SC_PCS_CH_INT_2[40],SC_PCS_CH_INT_2[39],SC_PCS_CH_INT_2[38],SC_PCS_CH_INT_2[37],SC_PCS_CH_INT_2[36],SC_PCS_CH_INT_2[35],SC_PCS_CH_INT_2[34],SC_PCS_CH_INT_2[33],SC_PCS_CH_INT_2[32],SC_PCS_CH_INT_2[31],SC_PCS_CH_INT_2[30],SC_PCS_CH_INT_2[29],SC_PCS_CH_INT_2[28],SC_PCS_CH_INT_2[27],SC_PCS_CH_INT_2[26],SC_PCS_CH_INT_2[25],SC_PCS_CH_INT_2[24],SC_PCS_CH_INT_2[23],SC_PCS_CH_INT_2[22],SC_PCS_CH_INT_2[21],SC_PCS_CH_INT_2[20],SC_PCS_CH_INT_2[19],SC_PCS_CH_INT_2[18],SC_PCS_CH_INT_2[17],SC_PCS_CH_INT_2[16],SC_PCS_CH_INT_2[15],SC_PCS_CH_INT_2[14],SC_PCS_CH_INT_2[13],SC_PCS_CH_INT_2[12],SC_PCS_CH_INT_2[11],SC_PCS_CH_INT_2[10],SC_PCS_CH_INT_2[9],SC_PCS_CH_INT_2[8],SC_PCS_CH_INT_2[7],SC_PCS_CH_INT_2[6],SC_PCS_CH_INT_2[5],SC_PCS_CH_INT_2[4],SC_PCS_CH_INT_2[3],SC_PCS_CH_INT_2[2],SC_PCS_CH_INT_2[1],SC_PCS_CH_INT_2[0]" */,

    config input SC_PCS_CH_INT_3[346:0] = 347'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PCS_CH_INT_3[346],SC_PCS_CH_INT_3[345],SC_PCS_CH_INT_3[344],SC_PCS_CH_INT_3[343],SC_PCS_CH_INT_3[342],SC_PCS_CH_INT_3[341],SC_PCS_CH_INT_3[340],SC_PCS_CH_INT_3[339],SC_PCS_CH_INT_3[338],SC_PCS_CH_INT_3[337],SC_PCS_CH_INT_3[336],SC_PCS_CH_INT_3[335],SC_PCS_CH_INT_3[334],SC_PCS_CH_INT_3[333],SC_PCS_CH_INT_3[332],SC_PCS_CH_INT_3[331],SC_PCS_CH_INT_3[330],SC_PCS_CH_INT_3[329],SC_PCS_CH_INT_3[328],SC_PCS_CH_INT_3[327],SC_PCS_CH_INT_3[326],SC_PCS_CH_INT_3[325],SC_PCS_CH_INT_3[324],SC_PCS_CH_INT_3[323],SC_PCS_CH_INT_3[322],SC_PCS_CH_INT_3[321],SC_PCS_CH_INT_3[320],SC_PCS_CH_INT_3[319],SC_PCS_CH_INT_3[318],SC_PCS_CH_INT_3[317],SC_PCS_CH_INT_3[316],SC_PCS_CH_INT_3[315],SC_PCS_CH_INT_3[314],SC_PCS_CH_INT_3[313],SC_PCS_CH_INT_3[312],SC_PCS_CH_INT_3[311],SC_PCS_CH_INT_3[310],SC_PCS_CH_INT_3[309],SC_PCS_CH_INT_3[308],SC_PCS_CH_INT_3[307],SC_PCS_CH_INT_3[306],SC_PCS_CH_INT_3[305],SC_PCS_CH_INT_3[304],SC_PCS_CH_INT_3[303],SC_PCS_CH_INT_3[302],SC_PCS_CH_INT_3[301],SC_PCS_CH_INT_3[300],SC_PCS_CH_INT_3[299],SC_PCS_CH_INT_3[298],SC_PCS_CH_INT_3[297],SC_PCS_CH_INT_3[296],SC_PCS_CH_INT_3[295],SC_PCS_CH_INT_3[294],SC_PCS_CH_INT_3[293],SC_PCS_CH_INT_3[292],SC_PCS_CH_INT_3[291],SC_PCS_CH_INT_3[290],SC_PCS_CH_INT_3[289],SC_PCS_CH_INT_3[288],SC_PCS_CH_INT_3[287],SC_PCS_CH_INT_3[286],SC_PCS_CH_INT_3[285],SC_PCS_CH_INT_3[284],SC_PCS_CH_INT_3[283],SC_PCS_CH_INT_3[282],SC_PCS_CH_INT_3[281],SC_PCS_CH_INT_3[280],SC_PCS_CH_INT_3[279],SC_PCS_CH_INT_3[278],SC_PCS_CH_INT_3[277],SC_PCS_CH_INT_3[276],SC_PCS_CH_INT_3[275],SC_PCS_CH_INT_3[274],SC_PCS_CH_INT_3[273],SC_PCS_CH_INT_3[272],SC_PCS_CH_INT_3[271],SC_PCS_CH_INT_3[270],SC_PCS_CH_INT_3[269],SC_PCS_CH_INT_3[268],SC_PCS_CH_INT_3[267],SC_PCS_CH_INT_3[266],SC_PCS_CH_INT_3[265],SC_PCS_CH_INT_3[264],SC_PCS_CH_INT_3[263],SC_PCS_CH_INT_3[262],SC_PCS_CH_INT_3[261],SC_PCS_CH_INT_3[260],SC_PCS_CH_INT_3[259],SC_PCS_CH_INT_3[258],SC_PCS_CH_INT_3[257],SC_PCS_CH_INT_3[256],SC_PCS_CH_INT_3[255],SC_PCS_CH_INT_3[254],SC_PCS_CH_INT_3[253],SC_PCS_CH_INT_3[252],SC_PCS_CH_INT_3[251],SC_PCS_CH_INT_3[250],SC_PCS_CH_INT_3[249],SC_PCS_CH_INT_3[248],SC_PCS_CH_INT_3[247],SC_PCS_CH_INT_3[246],SC_PCS_CH_INT_3[245],SC_PCS_CH_INT_3[244],SC_PCS_CH_INT_3[243],SC_PCS_CH_INT_3[242],SC_PCS_CH_INT_3[241],SC_PCS_CH_INT_3[240],SC_PCS_CH_INT_3[239],SC_PCS_CH_INT_3[238],SC_PCS_CH_INT_3[237],SC_PCS_CH_INT_3[236],SC_PCS_CH_INT_3[235],SC_PCS_CH_INT_3[234],SC_PCS_CH_INT_3[233],SC_PCS_CH_INT_3[232],SC_PCS_CH_INT_3[231],SC_PCS_CH_INT_3[230],SC_PCS_CH_INT_3[229],SC_PCS_CH_INT_3[228],SC_PCS_CH_INT_3[227],SC_PCS_CH_INT_3[226],SC_PCS_CH_INT_3[225],SC_PCS_CH_INT_3[224],SC_PCS_CH_INT_3[223],SC_PCS_CH_INT_3[222],SC_PCS_CH_INT_3[221],SC_PCS_CH_INT_3[220],SC_PCS_CH_INT_3[219],SC_PCS_CH_INT_3[218],SC_PCS_CH_INT_3[217],SC_PCS_CH_INT_3[216],SC_PCS_CH_INT_3[215],SC_PCS_CH_INT_3[214],SC_PCS_CH_INT_3[213],SC_PCS_CH_INT_3[212],SC_PCS_CH_INT_3[211],SC_PCS_CH_INT_3[210],SC_PCS_CH_INT_3[209],SC_PCS_CH_INT_3[208],SC_PCS_CH_INT_3[207],SC_PCS_CH_INT_3[206],SC_PCS_CH_INT_3[205],SC_PCS_CH_INT_3[204],SC_PCS_CH_INT_3[203],SC_PCS_CH_INT_3[202],SC_PCS_CH_INT_3[201],SC_PCS_CH_INT_3[200],SC_PCS_CH_INT_3[199],SC_PCS_CH_INT_3[198],SC_PCS_CH_INT_3[197],SC_PCS_CH_INT_3[196],SC_PCS_CH_INT_3[195],SC_PCS_CH_INT_3[194],SC_PCS_CH_INT_3[193],SC_PCS_CH_INT_3[192],SC_PCS_CH_INT_3[191],SC_PCS_CH_INT_3[190],SC_PCS_CH_INT_3[189],SC_PCS_CH_INT_3[188],SC_PCS_CH_INT_3[187],SC_PCS_CH_INT_3[186],SC_PCS_CH_INT_3[185],SC_PCS_CH_INT_3[184],SC_PCS_CH_INT_3[183],SC_PCS_CH_INT_3[182],SC_PCS_CH_INT_3[181],SC_PCS_CH_INT_3[180],SC_PCS_CH_INT_3[179],SC_PCS_CH_INT_3[178],SC_PCS_CH_INT_3[177],SC_PCS_CH_INT_3[176],SC_PCS_CH_INT_3[175],SC_PCS_CH_INT_3[174],SC_PCS_CH_INT_3[173],SC_PCS_CH_INT_3[172],SC_PCS_CH_INT_3[171],SC_PCS_CH_INT_3[170],SC_PCS_CH_INT_3[169],SC_PCS_CH_INT_3[168],SC_PCS_CH_INT_3[167],SC_PCS_CH_INT_3[166],SC_PCS_CH_INT_3[165],SC_PCS_CH_INT_3[164],SC_PCS_CH_INT_3[163],SC_PCS_CH_INT_3[162],SC_PCS_CH_INT_3[161],SC_PCS_CH_INT_3[160],SC_PCS_CH_INT_3[159],SC_PCS_CH_INT_3[158],SC_PCS_CH_INT_3[157],SC_PCS_CH_INT_3[156],SC_PCS_CH_INT_3[155],SC_PCS_CH_INT_3[154],SC_PCS_CH_INT_3[153],SC_PCS_CH_INT_3[152],SC_PCS_CH_INT_3[151],SC_PCS_CH_INT_3[150],SC_PCS_CH_INT_3[149],SC_PCS_CH_INT_3[148],SC_PCS_CH_INT_3[147],SC_PCS_CH_INT_3[146],SC_PCS_CH_INT_3[145],SC_PCS_CH_INT_3[144],SC_PCS_CH_INT_3[143],SC_PCS_CH_INT_3[142],SC_PCS_CH_INT_3[141],SC_PCS_CH_INT_3[140],SC_PCS_CH_INT_3[139],SC_PCS_CH_INT_3[138],SC_PCS_CH_INT_3[137],SC_PCS_CH_INT_3[136],SC_PCS_CH_INT_3[135],SC_PCS_CH_INT_3[134],SC_PCS_CH_INT_3[133],SC_PCS_CH_INT_3[132],SC_PCS_CH_INT_3[131],SC_PCS_CH_INT_3[130],SC_PCS_CH_INT_3[129],SC_PCS_CH_INT_3[128],SC_PCS_CH_INT_3[127],SC_PCS_CH_INT_3[126],SC_PCS_CH_INT_3[125],SC_PCS_CH_INT_3[124],SC_PCS_CH_INT_3[123],SC_PCS_CH_INT_3[122],SC_PCS_CH_INT_3[121],SC_PCS_CH_INT_3[120],SC_PCS_CH_INT_3[119],SC_PCS_CH_INT_3[118],SC_PCS_CH_INT_3[117],SC_PCS_CH_INT_3[116],SC_PCS_CH_INT_3[115],SC_PCS_CH_INT_3[114],SC_PCS_CH_INT_3[113],SC_PCS_CH_INT_3[112],SC_PCS_CH_INT_3[111],SC_PCS_CH_INT_3[110],SC_PCS_CH_INT_3[109],SC_PCS_CH_INT_3[108],SC_PCS_CH_INT_3[107],SC_PCS_CH_INT_3[106],SC_PCS_CH_INT_3[105],SC_PCS_CH_INT_3[104],SC_PCS_CH_INT_3[103],SC_PCS_CH_INT_3[102],SC_PCS_CH_INT_3[101],SC_PCS_CH_INT_3[100],SC_PCS_CH_INT_3[99],SC_PCS_CH_INT_3[98],SC_PCS_CH_INT_3[97],SC_PCS_CH_INT_3[96],SC_PCS_CH_INT_3[95],SC_PCS_CH_INT_3[94],SC_PCS_CH_INT_3[93],SC_PCS_CH_INT_3[92],SC_PCS_CH_INT_3[91],SC_PCS_CH_INT_3[90],SC_PCS_CH_INT_3[89],SC_PCS_CH_INT_3[88],SC_PCS_CH_INT_3[87],SC_PCS_CH_INT_3[86],SC_PCS_CH_INT_3[85],SC_PCS_CH_INT_3[84],SC_PCS_CH_INT_3[83],SC_PCS_CH_INT_3[82],SC_PCS_CH_INT_3[81],SC_PCS_CH_INT_3[80],SC_PCS_CH_INT_3[79],SC_PCS_CH_INT_3[78],SC_PCS_CH_INT_3[77],SC_PCS_CH_INT_3[76],SC_PCS_CH_INT_3[75],SC_PCS_CH_INT_3[74],SC_PCS_CH_INT_3[73],SC_PCS_CH_INT_3[72],SC_PCS_CH_INT_3[71],SC_PCS_CH_INT_3[70],SC_PCS_CH_INT_3[69],SC_PCS_CH_INT_3[68],SC_PCS_CH_INT_3[67],SC_PCS_CH_INT_3[66],SC_PCS_CH_INT_3[65],SC_PCS_CH_INT_3[64],SC_PCS_CH_INT_3[63],SC_PCS_CH_INT_3[62],SC_PCS_CH_INT_3[61],SC_PCS_CH_INT_3[60],SC_PCS_CH_INT_3[59],SC_PCS_CH_INT_3[58],SC_PCS_CH_INT_3[57],SC_PCS_CH_INT_3[56],SC_PCS_CH_INT_3[55],SC_PCS_CH_INT_3[54],SC_PCS_CH_INT_3[53],SC_PCS_CH_INT_3[52],SC_PCS_CH_INT_3[51],SC_PCS_CH_INT_3[50],SC_PCS_CH_INT_3[49],SC_PCS_CH_INT_3[48],SC_PCS_CH_INT_3[47],SC_PCS_CH_INT_3[46],SC_PCS_CH_INT_3[45],SC_PCS_CH_INT_3[44],SC_PCS_CH_INT_3[43],SC_PCS_CH_INT_3[42],SC_PCS_CH_INT_3[41],SC_PCS_CH_INT_3[40],SC_PCS_CH_INT_3[39],SC_PCS_CH_INT_3[38],SC_PCS_CH_INT_3[37],SC_PCS_CH_INT_3[36],SC_PCS_CH_INT_3[35],SC_PCS_CH_INT_3[34],SC_PCS_CH_INT_3[33],SC_PCS_CH_INT_3[32],SC_PCS_CH_INT_3[31],SC_PCS_CH_INT_3[30],SC_PCS_CH_INT_3[29],SC_PCS_CH_INT_3[28],SC_PCS_CH_INT_3[27],SC_PCS_CH_INT_3[26],SC_PCS_CH_INT_3[25],SC_PCS_CH_INT_3[24],SC_PCS_CH_INT_3[23],SC_PCS_CH_INT_3[22],SC_PCS_CH_INT_3[21],SC_PCS_CH_INT_3[20],SC_PCS_CH_INT_3[19],SC_PCS_CH_INT_3[18],SC_PCS_CH_INT_3[17],SC_PCS_CH_INT_3[16],SC_PCS_CH_INT_3[15],SC_PCS_CH_INT_3[14],SC_PCS_CH_INT_3[13],SC_PCS_CH_INT_3[12],SC_PCS_CH_INT_3[11],SC_PCS_CH_INT_3[10],SC_PCS_CH_INT_3[9],SC_PCS_CH_INT_3[8],SC_PCS_CH_INT_3[7],SC_PCS_CH_INT_3[6],SC_PCS_CH_INT_3[5],SC_PCS_CH_INT_3[4],SC_PCS_CH_INT_3[3],SC_PCS_CH_INT_3[2],SC_PCS_CH_INT_3[1],SC_PCS_CH_INT_3[0]" */,

    config input SC_PMA_CH_INT_RX_LANE0[398:0] = 399'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH_INT_RX_LANE0[398],SC_PMA_CH_INT_RX_LANE0[397],SC_PMA_CH_INT_RX_LANE0[396],SC_PMA_CH_INT_RX_LANE0[395],SC_PMA_CH_INT_RX_LANE0[394],SC_PMA_CH_INT_RX_LANE0[393],SC_PMA_CH_INT_RX_LANE0[392],SC_PMA_CH_INT_RX_LANE0[391],SC_PMA_CH_INT_RX_LANE0[390],SC_PMA_CH_INT_RX_LANE0[389],SC_PMA_CH_INT_RX_LANE0[388],SC_PMA_CH_INT_RX_LANE0[387],SC_PMA_CH_INT_RX_LANE0[386],SC_PMA_CH_INT_RX_LANE0[385],SC_PMA_CH_INT_RX_LANE0[384],SC_PMA_CH_INT_RX_LANE0[383],SC_PMA_CH_INT_RX_LANE0[382],SC_PMA_CH_INT_RX_LANE0[381],SC_PMA_CH_INT_RX_LANE0[380],SC_PMA_CH_INT_RX_LANE0[379],SC_PMA_CH_INT_RX_LANE0[378],SC_PMA_CH_INT_RX_LANE0[377],SC_PMA_CH_INT_RX_LANE0[376],SC_PMA_CH_INT_RX_LANE0[375],SC_PMA_CH_INT_RX_LANE0[374],SC_PMA_CH_INT_RX_LANE0[373],SC_PMA_CH_INT_RX_LANE0[372],SC_PMA_CH_INT_RX_LANE0[371],SC_PMA_CH_INT_RX_LANE0[370],SC_PMA_CH_INT_RX_LANE0[369],SC_PMA_CH_INT_RX_LANE0[368],SC_PMA_CH_INT_RX_LANE0[367],SC_PMA_CH_INT_RX_LANE0[366],SC_PMA_CH_INT_RX_LANE0[365],SC_PMA_CH_INT_RX_LANE0[364],SC_PMA_CH_INT_RX_LANE0[363],SC_PMA_CH_INT_RX_LANE0[362],SC_PMA_CH_INT_RX_LANE0[361],SC_PMA_CH_INT_RX_LANE0[360],SC_PMA_CH_INT_RX_LANE0[359],SC_PMA_CH_INT_RX_LANE0[358],SC_PMA_CH_INT_RX_LANE0[357],SC_PMA_CH_INT_RX_LANE0[356],SC_PMA_CH_INT_RX_LANE0[355],SC_PMA_CH_INT_RX_LANE0[354],SC_PMA_CH_INT_RX_LANE0[353],SC_PMA_CH_INT_RX_LANE0[352],SC_PMA_CH_INT_RX_LANE0[351],SC_PMA_CH_INT_RX_LANE0[350],SC_PMA_CH_INT_RX_LANE0[349],SC_PMA_CH_INT_RX_LANE0[348],SC_PMA_CH_INT_RX_LANE0[347],SC_PMA_CH_INT_RX_LANE0[346],SC_PMA_CH_INT_RX_LANE0[345],SC_PMA_CH_INT_RX_LANE0[344],SC_PMA_CH_INT_RX_LANE0[343],SC_PMA_CH_INT_RX_LANE0[342],SC_PMA_CH_INT_RX_LANE0[341],SC_PMA_CH_INT_RX_LANE0[340],SC_PMA_CH_INT_RX_LANE0[339],SC_PMA_CH_INT_RX_LANE0[338],SC_PMA_CH_INT_RX_LANE0[337],SC_PMA_CH_INT_RX_LANE0[336],SC_PMA_CH_INT_RX_LANE0[335],SC_PMA_CH_INT_RX_LANE0[334],SC_PMA_CH_INT_RX_LANE0[333],SC_PMA_CH_INT_RX_LANE0[332],SC_PMA_CH_INT_RX_LANE0[331],SC_PMA_CH_INT_RX_LANE0[330],SC_PMA_CH_INT_RX_LANE0[329],SC_PMA_CH_INT_RX_LANE0[328],SC_PMA_CH_INT_RX_LANE0[327],SC_PMA_CH_INT_RX_LANE0[326],SC_PMA_CH_INT_RX_LANE0[325],SC_PMA_CH_INT_RX_LANE0[324],SC_PMA_CH_INT_RX_LANE0[323],SC_PMA_CH_INT_RX_LANE0[322],SC_PMA_CH_INT_RX_LANE0[321],SC_PMA_CH_INT_RX_LANE0[320],SC_PMA_CH_INT_RX_LANE0[319],SC_PMA_CH_INT_RX_LANE0[318],SC_PMA_CH_INT_RX_LANE0[317],SC_PMA_CH_INT_RX_LANE0[316],SC_PMA_CH_INT_RX_LANE0[315],SC_PMA_CH_INT_RX_LANE0[314],SC_PMA_CH_INT_RX_LANE0[313],SC_PMA_CH_INT_RX_LANE0[312],SC_PMA_CH_INT_RX_LANE0[311],SC_PMA_CH_INT_RX_LANE0[310],SC_PMA_CH_INT_RX_LANE0[309],SC_PMA_CH_INT_RX_LANE0[308],SC_PMA_CH_INT_RX_LANE0[307],SC_PMA_CH_INT_RX_LANE0[306],SC_PMA_CH_INT_RX_LANE0[305],SC_PMA_CH_INT_RX_LANE0[304],SC_PMA_CH_INT_RX_LANE0[303],SC_PMA_CH_INT_RX_LANE0[302],SC_PMA_CH_INT_RX_LANE0[301],SC_PMA_CH_INT_RX_LANE0[300],SC_PMA_CH_INT_RX_LANE0[299],SC_PMA_CH_INT_RX_LANE0[298],SC_PMA_CH_INT_RX_LANE0[297],SC_PMA_CH_INT_RX_LANE0[296],SC_PMA_CH_INT_RX_LANE0[295],SC_PMA_CH_INT_RX_LANE0[294],SC_PMA_CH_INT_RX_LANE0[293],SC_PMA_CH_INT_RX_LANE0[292],SC_PMA_CH_INT_RX_LANE0[291],SC_PMA_CH_INT_RX_LANE0[290],SC_PMA_CH_INT_RX_LANE0[289],SC_PMA_CH_INT_RX_LANE0[288],SC_PMA_CH_INT_RX_LANE0[287],SC_PMA_CH_INT_RX_LANE0[286],SC_PMA_CH_INT_RX_LANE0[285],SC_PMA_CH_INT_RX_LANE0[284],SC_PMA_CH_INT_RX_LANE0[283],SC_PMA_CH_INT_RX_LANE0[282],SC_PMA_CH_INT_RX_LANE0[281],SC_PMA_CH_INT_RX_LANE0[280],SC_PMA_CH_INT_RX_LANE0[279],SC_PMA_CH_INT_RX_LANE0[278],SC_PMA_CH_INT_RX_LANE0[277],SC_PMA_CH_INT_RX_LANE0[276],SC_PMA_CH_INT_RX_LANE0[275],SC_PMA_CH_INT_RX_LANE0[274],SC_PMA_CH_INT_RX_LANE0[273],SC_PMA_CH_INT_RX_LANE0[272],SC_PMA_CH_INT_RX_LANE0[271],SC_PMA_CH_INT_RX_LANE0[270],SC_PMA_CH_INT_RX_LANE0[269],SC_PMA_CH_INT_RX_LANE0[268],SC_PMA_CH_INT_RX_LANE0[267],SC_PMA_CH_INT_RX_LANE0[266],SC_PMA_CH_INT_RX_LANE0[265],SC_PMA_CH_INT_RX_LANE0[264],SC_PMA_CH_INT_RX_LANE0[263],SC_PMA_CH_INT_RX_LANE0[262],SC_PMA_CH_INT_RX_LANE0[261],SC_PMA_CH_INT_RX_LANE0[260],SC_PMA_CH_INT_RX_LANE0[259],SC_PMA_CH_INT_RX_LANE0[258],SC_PMA_CH_INT_RX_LANE0[257],SC_PMA_CH_INT_RX_LANE0[256],SC_PMA_CH_INT_RX_LANE0[255],SC_PMA_CH_INT_RX_LANE0[254],SC_PMA_CH_INT_RX_LANE0[253],SC_PMA_CH_INT_RX_LANE0[252],SC_PMA_CH_INT_RX_LANE0[251],SC_PMA_CH_INT_RX_LANE0[250],SC_PMA_CH_INT_RX_LANE0[249],SC_PMA_CH_INT_RX_LANE0[248],SC_PMA_CH_INT_RX_LANE0[247],SC_PMA_CH_INT_RX_LANE0[246],SC_PMA_CH_INT_RX_LANE0[245],SC_PMA_CH_INT_RX_LANE0[244],SC_PMA_CH_INT_RX_LANE0[243],SC_PMA_CH_INT_RX_LANE0[242],SC_PMA_CH_INT_RX_LANE0[241],SC_PMA_CH_INT_RX_LANE0[240],SC_PMA_CH_INT_RX_LANE0[239],SC_PMA_CH_INT_RX_LANE0[238],SC_PMA_CH_INT_RX_LANE0[237],SC_PMA_CH_INT_RX_LANE0[236],SC_PMA_CH_INT_RX_LANE0[235],SC_PMA_CH_INT_RX_LANE0[234],SC_PMA_CH_INT_RX_LANE0[233],SC_PMA_CH_INT_RX_LANE0[232],SC_PMA_CH_INT_RX_LANE0[231],SC_PMA_CH_INT_RX_LANE0[230],SC_PMA_CH_INT_RX_LANE0[229],SC_PMA_CH_INT_RX_LANE0[228],SC_PMA_CH_INT_RX_LANE0[227],SC_PMA_CH_INT_RX_LANE0[226],SC_PMA_CH_INT_RX_LANE0[225],SC_PMA_CH_INT_RX_LANE0[224],SC_PMA_CH_INT_RX_LANE0[223],SC_PMA_CH_INT_RX_LANE0[222],SC_PMA_CH_INT_RX_LANE0[221],SC_PMA_CH_INT_RX_LANE0[220],SC_PMA_CH_INT_RX_LANE0[219],SC_PMA_CH_INT_RX_LANE0[218],SC_PMA_CH_INT_RX_LANE0[217],SC_PMA_CH_INT_RX_LANE0[216],SC_PMA_CH_INT_RX_LANE0[215],SC_PMA_CH_INT_RX_LANE0[214],SC_PMA_CH_INT_RX_LANE0[213],SC_PMA_CH_INT_RX_LANE0[212],SC_PMA_CH_INT_RX_LANE0[211],SC_PMA_CH_INT_RX_LANE0[210],SC_PMA_CH_INT_RX_LANE0[209],SC_PMA_CH_INT_RX_LANE0[208],SC_PMA_CH_INT_RX_LANE0[207],SC_PMA_CH_INT_RX_LANE0[206],SC_PMA_CH_INT_RX_LANE0[205],SC_PMA_CH_INT_RX_LANE0[204],SC_PMA_CH_INT_RX_LANE0[203],SC_PMA_CH_INT_RX_LANE0[202],SC_PMA_CH_INT_RX_LANE0[201],SC_PMA_CH_INT_RX_LANE0[200],SC_PMA_CH_INT_RX_LANE0[199],SC_PMA_CH_INT_RX_LANE0[198],SC_PMA_CH_INT_RX_LANE0[197],SC_PMA_CH_INT_RX_LANE0[196],SC_PMA_CH_INT_RX_LANE0[195],SC_PMA_CH_INT_RX_LANE0[194],SC_PMA_CH_INT_RX_LANE0[193],SC_PMA_CH_INT_RX_LANE0[192],SC_PMA_CH_INT_RX_LANE0[191],SC_PMA_CH_INT_RX_LANE0[190],SC_PMA_CH_INT_RX_LANE0[189],SC_PMA_CH_INT_RX_LANE0[188],SC_PMA_CH_INT_RX_LANE0[187],SC_PMA_CH_INT_RX_LANE0[186],SC_PMA_CH_INT_RX_LANE0[185],SC_PMA_CH_INT_RX_LANE0[184],SC_PMA_CH_INT_RX_LANE0[183],SC_PMA_CH_INT_RX_LANE0[182],SC_PMA_CH_INT_RX_LANE0[181],SC_PMA_CH_INT_RX_LANE0[180],SC_PMA_CH_INT_RX_LANE0[179],SC_PMA_CH_INT_RX_LANE0[178],SC_PMA_CH_INT_RX_LANE0[177],SC_PMA_CH_INT_RX_LANE0[176],SC_PMA_CH_INT_RX_LANE0[175],SC_PMA_CH_INT_RX_LANE0[174],SC_PMA_CH_INT_RX_LANE0[173],SC_PMA_CH_INT_RX_LANE0[172],SC_PMA_CH_INT_RX_LANE0[171],SC_PMA_CH_INT_RX_LANE0[170],SC_PMA_CH_INT_RX_LANE0[169],SC_PMA_CH_INT_RX_LANE0[168],SC_PMA_CH_INT_RX_LANE0[167],SC_PMA_CH_INT_RX_LANE0[166],SC_PMA_CH_INT_RX_LANE0[165],SC_PMA_CH_INT_RX_LANE0[164],SC_PMA_CH_INT_RX_LANE0[163],SC_PMA_CH_INT_RX_LANE0[162],SC_PMA_CH_INT_RX_LANE0[161],SC_PMA_CH_INT_RX_LANE0[160],SC_PMA_CH_INT_RX_LANE0[159],SC_PMA_CH_INT_RX_LANE0[158],SC_PMA_CH_INT_RX_LANE0[157],SC_PMA_CH_INT_RX_LANE0[156],SC_PMA_CH_INT_RX_LANE0[155],SC_PMA_CH_INT_RX_LANE0[154],SC_PMA_CH_INT_RX_LANE0[153],SC_PMA_CH_INT_RX_LANE0[152],SC_PMA_CH_INT_RX_LANE0[151],SC_PMA_CH_INT_RX_LANE0[150],SC_PMA_CH_INT_RX_LANE0[149],SC_PMA_CH_INT_RX_LANE0[148],SC_PMA_CH_INT_RX_LANE0[147],SC_PMA_CH_INT_RX_LANE0[146],SC_PMA_CH_INT_RX_LANE0[145],SC_PMA_CH_INT_RX_LANE0[144],SC_PMA_CH_INT_RX_LANE0[143],SC_PMA_CH_INT_RX_LANE0[142],SC_PMA_CH_INT_RX_LANE0[141],SC_PMA_CH_INT_RX_LANE0[140],SC_PMA_CH_INT_RX_LANE0[139],SC_PMA_CH_INT_RX_LANE0[138],SC_PMA_CH_INT_RX_LANE0[137],SC_PMA_CH_INT_RX_LANE0[136],SC_PMA_CH_INT_RX_LANE0[135],SC_PMA_CH_INT_RX_LANE0[134],SC_PMA_CH_INT_RX_LANE0[133],SC_PMA_CH_INT_RX_LANE0[132],SC_PMA_CH_INT_RX_LANE0[131],SC_PMA_CH_INT_RX_LANE0[130],SC_PMA_CH_INT_RX_LANE0[129],SC_PMA_CH_INT_RX_LANE0[128],SC_PMA_CH_INT_RX_LANE0[127],SC_PMA_CH_INT_RX_LANE0[126],SC_PMA_CH_INT_RX_LANE0[125],SC_PMA_CH_INT_RX_LANE0[124],SC_PMA_CH_INT_RX_LANE0[123],SC_PMA_CH_INT_RX_LANE0[122],SC_PMA_CH_INT_RX_LANE0[121],SC_PMA_CH_INT_RX_LANE0[120],SC_PMA_CH_INT_RX_LANE0[119],SC_PMA_CH_INT_RX_LANE0[118],SC_PMA_CH_INT_RX_LANE0[117],SC_PMA_CH_INT_RX_LANE0[116],SC_PMA_CH_INT_RX_LANE0[115],SC_PMA_CH_INT_RX_LANE0[114],SC_PMA_CH_INT_RX_LANE0[113],SC_PMA_CH_INT_RX_LANE0[112],SC_PMA_CH_INT_RX_LANE0[111],SC_PMA_CH_INT_RX_LANE0[110],SC_PMA_CH_INT_RX_LANE0[109],SC_PMA_CH_INT_RX_LANE0[108],SC_PMA_CH_INT_RX_LANE0[107],SC_PMA_CH_INT_RX_LANE0[106],SC_PMA_CH_INT_RX_LANE0[105],SC_PMA_CH_INT_RX_LANE0[104],SC_PMA_CH_INT_RX_LANE0[103],SC_PMA_CH_INT_RX_LANE0[102],SC_PMA_CH_INT_RX_LANE0[101],SC_PMA_CH_INT_RX_LANE0[100],SC_PMA_CH_INT_RX_LANE0[99],SC_PMA_CH_INT_RX_LANE0[98],SC_PMA_CH_INT_RX_LANE0[97],SC_PMA_CH_INT_RX_LANE0[96],SC_PMA_CH_INT_RX_LANE0[95],SC_PMA_CH_INT_RX_LANE0[94],SC_PMA_CH_INT_RX_LANE0[93],SC_PMA_CH_INT_RX_LANE0[92],SC_PMA_CH_INT_RX_LANE0[91],SC_PMA_CH_INT_RX_LANE0[90],SC_PMA_CH_INT_RX_LANE0[89],SC_PMA_CH_INT_RX_LANE0[88],SC_PMA_CH_INT_RX_LANE0[87],SC_PMA_CH_INT_RX_LANE0[86],SC_PMA_CH_INT_RX_LANE0[85],SC_PMA_CH_INT_RX_LANE0[84],SC_PMA_CH_INT_RX_LANE0[83],SC_PMA_CH_INT_RX_LANE0[82],SC_PMA_CH_INT_RX_LANE0[81],SC_PMA_CH_INT_RX_LANE0[80],SC_PMA_CH_INT_RX_LANE0[79],SC_PMA_CH_INT_RX_LANE0[78],SC_PMA_CH_INT_RX_LANE0[77],SC_PMA_CH_INT_RX_LANE0[76],SC_PMA_CH_INT_RX_LANE0[75],SC_PMA_CH_INT_RX_LANE0[74],SC_PMA_CH_INT_RX_LANE0[73],SC_PMA_CH_INT_RX_LANE0[72],SC_PMA_CH_INT_RX_LANE0[71],SC_PMA_CH_INT_RX_LANE0[70],SC_PMA_CH_INT_RX_LANE0[69],SC_PMA_CH_INT_RX_LANE0[68],SC_PMA_CH_INT_RX_LANE0[67],SC_PMA_CH_INT_RX_LANE0[66],SC_PMA_CH_INT_RX_LANE0[65],SC_PMA_CH_INT_RX_LANE0[64],SC_PMA_CH_INT_RX_LANE0[63],SC_PMA_CH_INT_RX_LANE0[62],SC_PMA_CH_INT_RX_LANE0[61],SC_PMA_CH_INT_RX_LANE0[60],SC_PMA_CH_INT_RX_LANE0[59],SC_PMA_CH_INT_RX_LANE0[58],SC_PMA_CH_INT_RX_LANE0[57],SC_PMA_CH_INT_RX_LANE0[56],SC_PMA_CH_INT_RX_LANE0[55],SC_PMA_CH_INT_RX_LANE0[54],SC_PMA_CH_INT_RX_LANE0[53],SC_PMA_CH_INT_RX_LANE0[52],SC_PMA_CH_INT_RX_LANE0[51],SC_PMA_CH_INT_RX_LANE0[50],SC_PMA_CH_INT_RX_LANE0[49],SC_PMA_CH_INT_RX_LANE0[48],SC_PMA_CH_INT_RX_LANE0[47],SC_PMA_CH_INT_RX_LANE0[46],SC_PMA_CH_INT_RX_LANE0[45],SC_PMA_CH_INT_RX_LANE0[44],SC_PMA_CH_INT_RX_LANE0[43],SC_PMA_CH_INT_RX_LANE0[42],SC_PMA_CH_INT_RX_LANE0[41],SC_PMA_CH_INT_RX_LANE0[40],SC_PMA_CH_INT_RX_LANE0[39],SC_PMA_CH_INT_RX_LANE0[38],SC_PMA_CH_INT_RX_LANE0[37],SC_PMA_CH_INT_RX_LANE0[36],SC_PMA_CH_INT_RX_LANE0[35],SC_PMA_CH_INT_RX_LANE0[34],SC_PMA_CH_INT_RX_LANE0[33],SC_PMA_CH_INT_RX_LANE0[32],SC_PMA_CH_INT_RX_LANE0[31],SC_PMA_CH_INT_RX_LANE0[30],SC_PMA_CH_INT_RX_LANE0[29],SC_PMA_CH_INT_RX_LANE0[28],SC_PMA_CH_INT_RX_LANE0[27],SC_PMA_CH_INT_RX_LANE0[26],SC_PMA_CH_INT_RX_LANE0[25],SC_PMA_CH_INT_RX_LANE0[24],SC_PMA_CH_INT_RX_LANE0[23],SC_PMA_CH_INT_RX_LANE0[22],SC_PMA_CH_INT_RX_LANE0[21],SC_PMA_CH_INT_RX_LANE0[20],SC_PMA_CH_INT_RX_LANE0[19],SC_PMA_CH_INT_RX_LANE0[18],SC_PMA_CH_INT_RX_LANE0[17],SC_PMA_CH_INT_RX_LANE0[16],SC_PMA_CH_INT_RX_LANE0[15],SC_PMA_CH_INT_RX_LANE0[14],SC_PMA_CH_INT_RX_LANE0[13],SC_PMA_CH_INT_RX_LANE0[12],SC_PMA_CH_INT_RX_LANE0[11],SC_PMA_CH_INT_RX_LANE0[10],SC_PMA_CH_INT_RX_LANE0[9],SC_PMA_CH_INT_RX_LANE0[8],SC_PMA_CH_INT_RX_LANE0[7],SC_PMA_CH_INT_RX_LANE0[6],SC_PMA_CH_INT_RX_LANE0[5],SC_PMA_CH_INT_RX_LANE0[4],SC_PMA_CH_INT_RX_LANE0[3],SC_PMA_CH_INT_RX_LANE0[2],SC_PMA_CH_INT_RX_LANE0[1],SC_PMA_CH_INT_RX_LANE0[0]" */,

    config input SC_PMA_CH_INT_TX_LANE0[388:0] = 389'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH_INT_TX_LANE0[388],SC_PMA_CH_INT_TX_LANE0[387],SC_PMA_CH_INT_TX_LANE0[386],SC_PMA_CH_INT_TX_LANE0[385],SC_PMA_CH_INT_TX_LANE0[384],SC_PMA_CH_INT_TX_LANE0[383],SC_PMA_CH_INT_TX_LANE0[382],SC_PMA_CH_INT_TX_LANE0[381],SC_PMA_CH_INT_TX_LANE0[380],SC_PMA_CH_INT_TX_LANE0[379],SC_PMA_CH_INT_TX_LANE0[378],SC_PMA_CH_INT_TX_LANE0[377],SC_PMA_CH_INT_TX_LANE0[376],SC_PMA_CH_INT_TX_LANE0[375],SC_PMA_CH_INT_TX_LANE0[374],SC_PMA_CH_INT_TX_LANE0[373],SC_PMA_CH_INT_TX_LANE0[372],SC_PMA_CH_INT_TX_LANE0[371],SC_PMA_CH_INT_TX_LANE0[370],SC_PMA_CH_INT_TX_LANE0[369],SC_PMA_CH_INT_TX_LANE0[368],SC_PMA_CH_INT_TX_LANE0[367],SC_PMA_CH_INT_TX_LANE0[366],SC_PMA_CH_INT_TX_LANE0[365],SC_PMA_CH_INT_TX_LANE0[364],SC_PMA_CH_INT_TX_LANE0[363],SC_PMA_CH_INT_TX_LANE0[362],SC_PMA_CH_INT_TX_LANE0[361],SC_PMA_CH_INT_TX_LANE0[360],SC_PMA_CH_INT_TX_LANE0[359],SC_PMA_CH_INT_TX_LANE0[358],SC_PMA_CH_INT_TX_LANE0[357],SC_PMA_CH_INT_TX_LANE0[356],SC_PMA_CH_INT_TX_LANE0[355],SC_PMA_CH_INT_TX_LANE0[354],SC_PMA_CH_INT_TX_LANE0[353],SC_PMA_CH_INT_TX_LANE0[352],SC_PMA_CH_INT_TX_LANE0[351],SC_PMA_CH_INT_TX_LANE0[350],SC_PMA_CH_INT_TX_LANE0[349],SC_PMA_CH_INT_TX_LANE0[348],SC_PMA_CH_INT_TX_LANE0[347],SC_PMA_CH_INT_TX_LANE0[346],SC_PMA_CH_INT_TX_LANE0[345],SC_PMA_CH_INT_TX_LANE0[344],SC_PMA_CH_INT_TX_LANE0[343],SC_PMA_CH_INT_TX_LANE0[342],SC_PMA_CH_INT_TX_LANE0[341],SC_PMA_CH_INT_TX_LANE0[340],SC_PMA_CH_INT_TX_LANE0[339],SC_PMA_CH_INT_TX_LANE0[338],SC_PMA_CH_INT_TX_LANE0[337],SC_PMA_CH_INT_TX_LANE0[336],SC_PMA_CH_INT_TX_LANE0[335],SC_PMA_CH_INT_TX_LANE0[334],SC_PMA_CH_INT_TX_LANE0[333],SC_PMA_CH_INT_TX_LANE0[332],SC_PMA_CH_INT_TX_LANE0[331],SC_PMA_CH_INT_TX_LANE0[330],SC_PMA_CH_INT_TX_LANE0[329],SC_PMA_CH_INT_TX_LANE0[328],SC_PMA_CH_INT_TX_LANE0[327],SC_PMA_CH_INT_TX_LANE0[326],SC_PMA_CH_INT_TX_LANE0[325],SC_PMA_CH_INT_TX_LANE0[324],SC_PMA_CH_INT_TX_LANE0[323],SC_PMA_CH_INT_TX_LANE0[322],SC_PMA_CH_INT_TX_LANE0[321],SC_PMA_CH_INT_TX_LANE0[320],SC_PMA_CH_INT_TX_LANE0[319],SC_PMA_CH_INT_TX_LANE0[318],SC_PMA_CH_INT_TX_LANE0[317],SC_PMA_CH_INT_TX_LANE0[316],SC_PMA_CH_INT_TX_LANE0[315],SC_PMA_CH_INT_TX_LANE0[314],SC_PMA_CH_INT_TX_LANE0[313],SC_PMA_CH_INT_TX_LANE0[312],SC_PMA_CH_INT_TX_LANE0[311],SC_PMA_CH_INT_TX_LANE0[310],SC_PMA_CH_INT_TX_LANE0[309],SC_PMA_CH_INT_TX_LANE0[308],SC_PMA_CH_INT_TX_LANE0[307],SC_PMA_CH_INT_TX_LANE0[306],SC_PMA_CH_INT_TX_LANE0[305],SC_PMA_CH_INT_TX_LANE0[304],SC_PMA_CH_INT_TX_LANE0[303],SC_PMA_CH_INT_TX_LANE0[302],SC_PMA_CH_INT_TX_LANE0[301],SC_PMA_CH_INT_TX_LANE0[300],SC_PMA_CH_INT_TX_LANE0[299],SC_PMA_CH_INT_TX_LANE0[298],SC_PMA_CH_INT_TX_LANE0[297],SC_PMA_CH_INT_TX_LANE0[296],SC_PMA_CH_INT_TX_LANE0[295],SC_PMA_CH_INT_TX_LANE0[294],SC_PMA_CH_INT_TX_LANE0[293],SC_PMA_CH_INT_TX_LANE0[292],SC_PMA_CH_INT_TX_LANE0[291],SC_PMA_CH_INT_TX_LANE0[290],SC_PMA_CH_INT_TX_LANE0[289],SC_PMA_CH_INT_TX_LANE0[288],SC_PMA_CH_INT_TX_LANE0[287],SC_PMA_CH_INT_TX_LANE0[286],SC_PMA_CH_INT_TX_LANE0[285],SC_PMA_CH_INT_TX_LANE0[284],SC_PMA_CH_INT_TX_LANE0[283],SC_PMA_CH_INT_TX_LANE0[282],SC_PMA_CH_INT_TX_LANE0[281],SC_PMA_CH_INT_TX_LANE0[280],SC_PMA_CH_INT_TX_LANE0[279],SC_PMA_CH_INT_TX_LANE0[278],SC_PMA_CH_INT_TX_LANE0[277],SC_PMA_CH_INT_TX_LANE0[276],SC_PMA_CH_INT_TX_LANE0[275],SC_PMA_CH_INT_TX_LANE0[274],SC_PMA_CH_INT_TX_LANE0[273],SC_PMA_CH_INT_TX_LANE0[272],SC_PMA_CH_INT_TX_LANE0[271],SC_PMA_CH_INT_TX_LANE0[270],SC_PMA_CH_INT_TX_LANE0[269],SC_PMA_CH_INT_TX_LANE0[268],SC_PMA_CH_INT_TX_LANE0[267],SC_PMA_CH_INT_TX_LANE0[266],SC_PMA_CH_INT_TX_LANE0[265],SC_PMA_CH_INT_TX_LANE0[264],SC_PMA_CH_INT_TX_LANE0[263],SC_PMA_CH_INT_TX_LANE0[262],SC_PMA_CH_INT_TX_LANE0[261],SC_PMA_CH_INT_TX_LANE0[260],SC_PMA_CH_INT_TX_LANE0[259],SC_PMA_CH_INT_TX_LANE0[258],SC_PMA_CH_INT_TX_LANE0[257],SC_PMA_CH_INT_TX_LANE0[256],SC_PMA_CH_INT_TX_LANE0[255],SC_PMA_CH_INT_TX_LANE0[254],SC_PMA_CH_INT_TX_LANE0[253],SC_PMA_CH_INT_TX_LANE0[252],SC_PMA_CH_INT_TX_LANE0[251],SC_PMA_CH_INT_TX_LANE0[250],SC_PMA_CH_INT_TX_LANE0[249],SC_PMA_CH_INT_TX_LANE0[248],SC_PMA_CH_INT_TX_LANE0[247],SC_PMA_CH_INT_TX_LANE0[246],SC_PMA_CH_INT_TX_LANE0[245],SC_PMA_CH_INT_TX_LANE0[244],SC_PMA_CH_INT_TX_LANE0[243],SC_PMA_CH_INT_TX_LANE0[242],SC_PMA_CH_INT_TX_LANE0[241],SC_PMA_CH_INT_TX_LANE0[240],SC_PMA_CH_INT_TX_LANE0[239],SC_PMA_CH_INT_TX_LANE0[238],SC_PMA_CH_INT_TX_LANE0[237],SC_PMA_CH_INT_TX_LANE0[236],SC_PMA_CH_INT_TX_LANE0[235],SC_PMA_CH_INT_TX_LANE0[234],SC_PMA_CH_INT_TX_LANE0[233],SC_PMA_CH_INT_TX_LANE0[232],SC_PMA_CH_INT_TX_LANE0[231],SC_PMA_CH_INT_TX_LANE0[230],SC_PMA_CH_INT_TX_LANE0[229],SC_PMA_CH_INT_TX_LANE0[228],SC_PMA_CH_INT_TX_LANE0[227],SC_PMA_CH_INT_TX_LANE0[226],SC_PMA_CH_INT_TX_LANE0[225],SC_PMA_CH_INT_TX_LANE0[224],SC_PMA_CH_INT_TX_LANE0[223],SC_PMA_CH_INT_TX_LANE0[222],SC_PMA_CH_INT_TX_LANE0[221],SC_PMA_CH_INT_TX_LANE0[220],SC_PMA_CH_INT_TX_LANE0[219],SC_PMA_CH_INT_TX_LANE0[218],SC_PMA_CH_INT_TX_LANE0[217],SC_PMA_CH_INT_TX_LANE0[216],SC_PMA_CH_INT_TX_LANE0[215],SC_PMA_CH_INT_TX_LANE0[214],SC_PMA_CH_INT_TX_LANE0[213],SC_PMA_CH_INT_TX_LANE0[212],SC_PMA_CH_INT_TX_LANE0[211],SC_PMA_CH_INT_TX_LANE0[210],SC_PMA_CH_INT_TX_LANE0[209],SC_PMA_CH_INT_TX_LANE0[208],SC_PMA_CH_INT_TX_LANE0[207],SC_PMA_CH_INT_TX_LANE0[206],SC_PMA_CH_INT_TX_LANE0[205],SC_PMA_CH_INT_TX_LANE0[204],SC_PMA_CH_INT_TX_LANE0[203],SC_PMA_CH_INT_TX_LANE0[202],SC_PMA_CH_INT_TX_LANE0[201],SC_PMA_CH_INT_TX_LANE0[200],SC_PMA_CH_INT_TX_LANE0[199],SC_PMA_CH_INT_TX_LANE0[198],SC_PMA_CH_INT_TX_LANE0[197],SC_PMA_CH_INT_TX_LANE0[196],SC_PMA_CH_INT_TX_LANE0[195],SC_PMA_CH_INT_TX_LANE0[194],SC_PMA_CH_INT_TX_LANE0[193],SC_PMA_CH_INT_TX_LANE0[192],SC_PMA_CH_INT_TX_LANE0[191],SC_PMA_CH_INT_TX_LANE0[190],SC_PMA_CH_INT_TX_LANE0[189],SC_PMA_CH_INT_TX_LANE0[188],SC_PMA_CH_INT_TX_LANE0[187],SC_PMA_CH_INT_TX_LANE0[186],SC_PMA_CH_INT_TX_LANE0[185],SC_PMA_CH_INT_TX_LANE0[184],SC_PMA_CH_INT_TX_LANE0[183],SC_PMA_CH_INT_TX_LANE0[182],SC_PMA_CH_INT_TX_LANE0[181],SC_PMA_CH_INT_TX_LANE0[180],SC_PMA_CH_INT_TX_LANE0[179],SC_PMA_CH_INT_TX_LANE0[178],SC_PMA_CH_INT_TX_LANE0[177],SC_PMA_CH_INT_TX_LANE0[176],SC_PMA_CH_INT_TX_LANE0[175],SC_PMA_CH_INT_TX_LANE0[174],SC_PMA_CH_INT_TX_LANE0[173],SC_PMA_CH_INT_TX_LANE0[172],SC_PMA_CH_INT_TX_LANE0[171],SC_PMA_CH_INT_TX_LANE0[170],SC_PMA_CH_INT_TX_LANE0[169],SC_PMA_CH_INT_TX_LANE0[168],SC_PMA_CH_INT_TX_LANE0[167],SC_PMA_CH_INT_TX_LANE0[166],SC_PMA_CH_INT_TX_LANE0[165],SC_PMA_CH_INT_TX_LANE0[164],SC_PMA_CH_INT_TX_LANE0[163],SC_PMA_CH_INT_TX_LANE0[162],SC_PMA_CH_INT_TX_LANE0[161],SC_PMA_CH_INT_TX_LANE0[160],SC_PMA_CH_INT_TX_LANE0[159],SC_PMA_CH_INT_TX_LANE0[158],SC_PMA_CH_INT_TX_LANE0[157],SC_PMA_CH_INT_TX_LANE0[156],SC_PMA_CH_INT_TX_LANE0[155],SC_PMA_CH_INT_TX_LANE0[154],SC_PMA_CH_INT_TX_LANE0[153],SC_PMA_CH_INT_TX_LANE0[152],SC_PMA_CH_INT_TX_LANE0[151],SC_PMA_CH_INT_TX_LANE0[150],SC_PMA_CH_INT_TX_LANE0[149],SC_PMA_CH_INT_TX_LANE0[148],SC_PMA_CH_INT_TX_LANE0[147],SC_PMA_CH_INT_TX_LANE0[146],SC_PMA_CH_INT_TX_LANE0[145],SC_PMA_CH_INT_TX_LANE0[144],SC_PMA_CH_INT_TX_LANE0[143],SC_PMA_CH_INT_TX_LANE0[142],SC_PMA_CH_INT_TX_LANE0[141],SC_PMA_CH_INT_TX_LANE0[140],SC_PMA_CH_INT_TX_LANE0[139],SC_PMA_CH_INT_TX_LANE0[138],SC_PMA_CH_INT_TX_LANE0[137],SC_PMA_CH_INT_TX_LANE0[136],SC_PMA_CH_INT_TX_LANE0[135],SC_PMA_CH_INT_TX_LANE0[134],SC_PMA_CH_INT_TX_LANE0[133],SC_PMA_CH_INT_TX_LANE0[132],SC_PMA_CH_INT_TX_LANE0[131],SC_PMA_CH_INT_TX_LANE0[130],SC_PMA_CH_INT_TX_LANE0[129],SC_PMA_CH_INT_TX_LANE0[128],SC_PMA_CH_INT_TX_LANE0[127],SC_PMA_CH_INT_TX_LANE0[126],SC_PMA_CH_INT_TX_LANE0[125],SC_PMA_CH_INT_TX_LANE0[124],SC_PMA_CH_INT_TX_LANE0[123],SC_PMA_CH_INT_TX_LANE0[122],SC_PMA_CH_INT_TX_LANE0[121],SC_PMA_CH_INT_TX_LANE0[120],SC_PMA_CH_INT_TX_LANE0[119],SC_PMA_CH_INT_TX_LANE0[118],SC_PMA_CH_INT_TX_LANE0[117],SC_PMA_CH_INT_TX_LANE0[116],SC_PMA_CH_INT_TX_LANE0[115],SC_PMA_CH_INT_TX_LANE0[114],SC_PMA_CH_INT_TX_LANE0[113],SC_PMA_CH_INT_TX_LANE0[112],SC_PMA_CH_INT_TX_LANE0[111],SC_PMA_CH_INT_TX_LANE0[110],SC_PMA_CH_INT_TX_LANE0[109],SC_PMA_CH_INT_TX_LANE0[108],SC_PMA_CH_INT_TX_LANE0[107],SC_PMA_CH_INT_TX_LANE0[106],SC_PMA_CH_INT_TX_LANE0[105],SC_PMA_CH_INT_TX_LANE0[104],SC_PMA_CH_INT_TX_LANE0[103],SC_PMA_CH_INT_TX_LANE0[102],SC_PMA_CH_INT_TX_LANE0[101],SC_PMA_CH_INT_TX_LANE0[100],SC_PMA_CH_INT_TX_LANE0[99],SC_PMA_CH_INT_TX_LANE0[98],SC_PMA_CH_INT_TX_LANE0[97],SC_PMA_CH_INT_TX_LANE0[96],SC_PMA_CH_INT_TX_LANE0[95],SC_PMA_CH_INT_TX_LANE0[94],SC_PMA_CH_INT_TX_LANE0[93],SC_PMA_CH_INT_TX_LANE0[92],SC_PMA_CH_INT_TX_LANE0[91],SC_PMA_CH_INT_TX_LANE0[90],SC_PMA_CH_INT_TX_LANE0[89],SC_PMA_CH_INT_TX_LANE0[88],SC_PMA_CH_INT_TX_LANE0[87],SC_PMA_CH_INT_TX_LANE0[86],SC_PMA_CH_INT_TX_LANE0[85],SC_PMA_CH_INT_TX_LANE0[84],SC_PMA_CH_INT_TX_LANE0[83],SC_PMA_CH_INT_TX_LANE0[82],SC_PMA_CH_INT_TX_LANE0[81],SC_PMA_CH_INT_TX_LANE0[80],SC_PMA_CH_INT_TX_LANE0[79],SC_PMA_CH_INT_TX_LANE0[78],SC_PMA_CH_INT_TX_LANE0[77],SC_PMA_CH_INT_TX_LANE0[76],SC_PMA_CH_INT_TX_LANE0[75],SC_PMA_CH_INT_TX_LANE0[74],SC_PMA_CH_INT_TX_LANE0[73],SC_PMA_CH_INT_TX_LANE0[72],SC_PMA_CH_INT_TX_LANE0[71],SC_PMA_CH_INT_TX_LANE0[70],SC_PMA_CH_INT_TX_LANE0[69],SC_PMA_CH_INT_TX_LANE0[68],SC_PMA_CH_INT_TX_LANE0[67],SC_PMA_CH_INT_TX_LANE0[66],SC_PMA_CH_INT_TX_LANE0[65],SC_PMA_CH_INT_TX_LANE0[64],SC_PMA_CH_INT_TX_LANE0[63],SC_PMA_CH_INT_TX_LANE0[62],SC_PMA_CH_INT_TX_LANE0[61],SC_PMA_CH_INT_TX_LANE0[60],SC_PMA_CH_INT_TX_LANE0[59],SC_PMA_CH_INT_TX_LANE0[58],SC_PMA_CH_INT_TX_LANE0[57],SC_PMA_CH_INT_TX_LANE0[56],SC_PMA_CH_INT_TX_LANE0[55],SC_PMA_CH_INT_TX_LANE0[54],SC_PMA_CH_INT_TX_LANE0[53],SC_PMA_CH_INT_TX_LANE0[52],SC_PMA_CH_INT_TX_LANE0[51],SC_PMA_CH_INT_TX_LANE0[50],SC_PMA_CH_INT_TX_LANE0[49],SC_PMA_CH_INT_TX_LANE0[48],SC_PMA_CH_INT_TX_LANE0[47],SC_PMA_CH_INT_TX_LANE0[46],SC_PMA_CH_INT_TX_LANE0[45],SC_PMA_CH_INT_TX_LANE0[44],SC_PMA_CH_INT_TX_LANE0[43],SC_PMA_CH_INT_TX_LANE0[42],SC_PMA_CH_INT_TX_LANE0[41],SC_PMA_CH_INT_TX_LANE0[40],SC_PMA_CH_INT_TX_LANE0[39],SC_PMA_CH_INT_TX_LANE0[38],SC_PMA_CH_INT_TX_LANE0[37],SC_PMA_CH_INT_TX_LANE0[36],SC_PMA_CH_INT_TX_LANE0[35],SC_PMA_CH_INT_TX_LANE0[34],SC_PMA_CH_INT_TX_LANE0[33],SC_PMA_CH_INT_TX_LANE0[32],SC_PMA_CH_INT_TX_LANE0[31],SC_PMA_CH_INT_TX_LANE0[30],SC_PMA_CH_INT_TX_LANE0[29],SC_PMA_CH_INT_TX_LANE0[28],SC_PMA_CH_INT_TX_LANE0[27],SC_PMA_CH_INT_TX_LANE0[26],SC_PMA_CH_INT_TX_LANE0[25],SC_PMA_CH_INT_TX_LANE0[24],SC_PMA_CH_INT_TX_LANE0[23],SC_PMA_CH_INT_TX_LANE0[22],SC_PMA_CH_INT_TX_LANE0[21],SC_PMA_CH_INT_TX_LANE0[20],SC_PMA_CH_INT_TX_LANE0[19],SC_PMA_CH_INT_TX_LANE0[18],SC_PMA_CH_INT_TX_LANE0[17],SC_PMA_CH_INT_TX_LANE0[16],SC_PMA_CH_INT_TX_LANE0[15],SC_PMA_CH_INT_TX_LANE0[14],SC_PMA_CH_INT_TX_LANE0[13],SC_PMA_CH_INT_TX_LANE0[12],SC_PMA_CH_INT_TX_LANE0[11],SC_PMA_CH_INT_TX_LANE0[10],SC_PMA_CH_INT_TX_LANE0[9],SC_PMA_CH_INT_TX_LANE0[8],SC_PMA_CH_INT_TX_LANE0[7],SC_PMA_CH_INT_TX_LANE0[6],SC_PMA_CH_INT_TX_LANE0[5],SC_PMA_CH_INT_TX_LANE0[4],SC_PMA_CH_INT_TX_LANE0[3],SC_PMA_CH_INT_TX_LANE0[2],SC_PMA_CH_INT_TX_LANE0[1],SC_PMA_CH_INT_TX_LANE0[0]" */,

    config input SC_PMA_CH_INT_RX_LANE1[398:0] = 399'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH_INT_RX_LANE1[398],SC_PMA_CH_INT_RX_LANE1[397],SC_PMA_CH_INT_RX_LANE1[396],SC_PMA_CH_INT_RX_LANE1[395],SC_PMA_CH_INT_RX_LANE1[394],SC_PMA_CH_INT_RX_LANE1[393],SC_PMA_CH_INT_RX_LANE1[392],SC_PMA_CH_INT_RX_LANE1[391],SC_PMA_CH_INT_RX_LANE1[390],SC_PMA_CH_INT_RX_LANE1[389],SC_PMA_CH_INT_RX_LANE1[388],SC_PMA_CH_INT_RX_LANE1[387],SC_PMA_CH_INT_RX_LANE1[386],SC_PMA_CH_INT_RX_LANE1[385],SC_PMA_CH_INT_RX_LANE1[384],SC_PMA_CH_INT_RX_LANE1[383],SC_PMA_CH_INT_RX_LANE1[382],SC_PMA_CH_INT_RX_LANE1[381],SC_PMA_CH_INT_RX_LANE1[380],SC_PMA_CH_INT_RX_LANE1[379],SC_PMA_CH_INT_RX_LANE1[378],SC_PMA_CH_INT_RX_LANE1[377],SC_PMA_CH_INT_RX_LANE1[376],SC_PMA_CH_INT_RX_LANE1[375],SC_PMA_CH_INT_RX_LANE1[374],SC_PMA_CH_INT_RX_LANE1[373],SC_PMA_CH_INT_RX_LANE1[372],SC_PMA_CH_INT_RX_LANE1[371],SC_PMA_CH_INT_RX_LANE1[370],SC_PMA_CH_INT_RX_LANE1[369],SC_PMA_CH_INT_RX_LANE1[368],SC_PMA_CH_INT_RX_LANE1[367],SC_PMA_CH_INT_RX_LANE1[366],SC_PMA_CH_INT_RX_LANE1[365],SC_PMA_CH_INT_RX_LANE1[364],SC_PMA_CH_INT_RX_LANE1[363],SC_PMA_CH_INT_RX_LANE1[362],SC_PMA_CH_INT_RX_LANE1[361],SC_PMA_CH_INT_RX_LANE1[360],SC_PMA_CH_INT_RX_LANE1[359],SC_PMA_CH_INT_RX_LANE1[358],SC_PMA_CH_INT_RX_LANE1[357],SC_PMA_CH_INT_RX_LANE1[356],SC_PMA_CH_INT_RX_LANE1[355],SC_PMA_CH_INT_RX_LANE1[354],SC_PMA_CH_INT_RX_LANE1[353],SC_PMA_CH_INT_RX_LANE1[352],SC_PMA_CH_INT_RX_LANE1[351],SC_PMA_CH_INT_RX_LANE1[350],SC_PMA_CH_INT_RX_LANE1[349],SC_PMA_CH_INT_RX_LANE1[348],SC_PMA_CH_INT_RX_LANE1[347],SC_PMA_CH_INT_RX_LANE1[346],SC_PMA_CH_INT_RX_LANE1[345],SC_PMA_CH_INT_RX_LANE1[344],SC_PMA_CH_INT_RX_LANE1[343],SC_PMA_CH_INT_RX_LANE1[342],SC_PMA_CH_INT_RX_LANE1[341],SC_PMA_CH_INT_RX_LANE1[340],SC_PMA_CH_INT_RX_LANE1[339],SC_PMA_CH_INT_RX_LANE1[338],SC_PMA_CH_INT_RX_LANE1[337],SC_PMA_CH_INT_RX_LANE1[336],SC_PMA_CH_INT_RX_LANE1[335],SC_PMA_CH_INT_RX_LANE1[334],SC_PMA_CH_INT_RX_LANE1[333],SC_PMA_CH_INT_RX_LANE1[332],SC_PMA_CH_INT_RX_LANE1[331],SC_PMA_CH_INT_RX_LANE1[330],SC_PMA_CH_INT_RX_LANE1[329],SC_PMA_CH_INT_RX_LANE1[328],SC_PMA_CH_INT_RX_LANE1[327],SC_PMA_CH_INT_RX_LANE1[326],SC_PMA_CH_INT_RX_LANE1[325],SC_PMA_CH_INT_RX_LANE1[324],SC_PMA_CH_INT_RX_LANE1[323],SC_PMA_CH_INT_RX_LANE1[322],SC_PMA_CH_INT_RX_LANE1[321],SC_PMA_CH_INT_RX_LANE1[320],SC_PMA_CH_INT_RX_LANE1[319],SC_PMA_CH_INT_RX_LANE1[318],SC_PMA_CH_INT_RX_LANE1[317],SC_PMA_CH_INT_RX_LANE1[316],SC_PMA_CH_INT_RX_LANE1[315],SC_PMA_CH_INT_RX_LANE1[314],SC_PMA_CH_INT_RX_LANE1[313],SC_PMA_CH_INT_RX_LANE1[312],SC_PMA_CH_INT_RX_LANE1[311],SC_PMA_CH_INT_RX_LANE1[310],SC_PMA_CH_INT_RX_LANE1[309],SC_PMA_CH_INT_RX_LANE1[308],SC_PMA_CH_INT_RX_LANE1[307],SC_PMA_CH_INT_RX_LANE1[306],SC_PMA_CH_INT_RX_LANE1[305],SC_PMA_CH_INT_RX_LANE1[304],SC_PMA_CH_INT_RX_LANE1[303],SC_PMA_CH_INT_RX_LANE1[302],SC_PMA_CH_INT_RX_LANE1[301],SC_PMA_CH_INT_RX_LANE1[300],SC_PMA_CH_INT_RX_LANE1[299],SC_PMA_CH_INT_RX_LANE1[298],SC_PMA_CH_INT_RX_LANE1[297],SC_PMA_CH_INT_RX_LANE1[296],SC_PMA_CH_INT_RX_LANE1[295],SC_PMA_CH_INT_RX_LANE1[294],SC_PMA_CH_INT_RX_LANE1[293],SC_PMA_CH_INT_RX_LANE1[292],SC_PMA_CH_INT_RX_LANE1[291],SC_PMA_CH_INT_RX_LANE1[290],SC_PMA_CH_INT_RX_LANE1[289],SC_PMA_CH_INT_RX_LANE1[288],SC_PMA_CH_INT_RX_LANE1[287],SC_PMA_CH_INT_RX_LANE1[286],SC_PMA_CH_INT_RX_LANE1[285],SC_PMA_CH_INT_RX_LANE1[284],SC_PMA_CH_INT_RX_LANE1[283],SC_PMA_CH_INT_RX_LANE1[282],SC_PMA_CH_INT_RX_LANE1[281],SC_PMA_CH_INT_RX_LANE1[280],SC_PMA_CH_INT_RX_LANE1[279],SC_PMA_CH_INT_RX_LANE1[278],SC_PMA_CH_INT_RX_LANE1[277],SC_PMA_CH_INT_RX_LANE1[276],SC_PMA_CH_INT_RX_LANE1[275],SC_PMA_CH_INT_RX_LANE1[274],SC_PMA_CH_INT_RX_LANE1[273],SC_PMA_CH_INT_RX_LANE1[272],SC_PMA_CH_INT_RX_LANE1[271],SC_PMA_CH_INT_RX_LANE1[270],SC_PMA_CH_INT_RX_LANE1[269],SC_PMA_CH_INT_RX_LANE1[268],SC_PMA_CH_INT_RX_LANE1[267],SC_PMA_CH_INT_RX_LANE1[266],SC_PMA_CH_INT_RX_LANE1[265],SC_PMA_CH_INT_RX_LANE1[264],SC_PMA_CH_INT_RX_LANE1[263],SC_PMA_CH_INT_RX_LANE1[262],SC_PMA_CH_INT_RX_LANE1[261],SC_PMA_CH_INT_RX_LANE1[260],SC_PMA_CH_INT_RX_LANE1[259],SC_PMA_CH_INT_RX_LANE1[258],SC_PMA_CH_INT_RX_LANE1[257],SC_PMA_CH_INT_RX_LANE1[256],SC_PMA_CH_INT_RX_LANE1[255],SC_PMA_CH_INT_RX_LANE1[254],SC_PMA_CH_INT_RX_LANE1[253],SC_PMA_CH_INT_RX_LANE1[252],SC_PMA_CH_INT_RX_LANE1[251],SC_PMA_CH_INT_RX_LANE1[250],SC_PMA_CH_INT_RX_LANE1[249],SC_PMA_CH_INT_RX_LANE1[248],SC_PMA_CH_INT_RX_LANE1[247],SC_PMA_CH_INT_RX_LANE1[246],SC_PMA_CH_INT_RX_LANE1[245],SC_PMA_CH_INT_RX_LANE1[244],SC_PMA_CH_INT_RX_LANE1[243],SC_PMA_CH_INT_RX_LANE1[242],SC_PMA_CH_INT_RX_LANE1[241],SC_PMA_CH_INT_RX_LANE1[240],SC_PMA_CH_INT_RX_LANE1[239],SC_PMA_CH_INT_RX_LANE1[238],SC_PMA_CH_INT_RX_LANE1[237],SC_PMA_CH_INT_RX_LANE1[236],SC_PMA_CH_INT_RX_LANE1[235],SC_PMA_CH_INT_RX_LANE1[234],SC_PMA_CH_INT_RX_LANE1[233],SC_PMA_CH_INT_RX_LANE1[232],SC_PMA_CH_INT_RX_LANE1[231],SC_PMA_CH_INT_RX_LANE1[230],SC_PMA_CH_INT_RX_LANE1[229],SC_PMA_CH_INT_RX_LANE1[228],SC_PMA_CH_INT_RX_LANE1[227],SC_PMA_CH_INT_RX_LANE1[226],SC_PMA_CH_INT_RX_LANE1[225],SC_PMA_CH_INT_RX_LANE1[224],SC_PMA_CH_INT_RX_LANE1[223],SC_PMA_CH_INT_RX_LANE1[222],SC_PMA_CH_INT_RX_LANE1[221],SC_PMA_CH_INT_RX_LANE1[220],SC_PMA_CH_INT_RX_LANE1[219],SC_PMA_CH_INT_RX_LANE1[218],SC_PMA_CH_INT_RX_LANE1[217],SC_PMA_CH_INT_RX_LANE1[216],SC_PMA_CH_INT_RX_LANE1[215],SC_PMA_CH_INT_RX_LANE1[214],SC_PMA_CH_INT_RX_LANE1[213],SC_PMA_CH_INT_RX_LANE1[212],SC_PMA_CH_INT_RX_LANE1[211],SC_PMA_CH_INT_RX_LANE1[210],SC_PMA_CH_INT_RX_LANE1[209],SC_PMA_CH_INT_RX_LANE1[208],SC_PMA_CH_INT_RX_LANE1[207],SC_PMA_CH_INT_RX_LANE1[206],SC_PMA_CH_INT_RX_LANE1[205],SC_PMA_CH_INT_RX_LANE1[204],SC_PMA_CH_INT_RX_LANE1[203],SC_PMA_CH_INT_RX_LANE1[202],SC_PMA_CH_INT_RX_LANE1[201],SC_PMA_CH_INT_RX_LANE1[200],SC_PMA_CH_INT_RX_LANE1[199],SC_PMA_CH_INT_RX_LANE1[198],SC_PMA_CH_INT_RX_LANE1[197],SC_PMA_CH_INT_RX_LANE1[196],SC_PMA_CH_INT_RX_LANE1[195],SC_PMA_CH_INT_RX_LANE1[194],SC_PMA_CH_INT_RX_LANE1[193],SC_PMA_CH_INT_RX_LANE1[192],SC_PMA_CH_INT_RX_LANE1[191],SC_PMA_CH_INT_RX_LANE1[190],SC_PMA_CH_INT_RX_LANE1[189],SC_PMA_CH_INT_RX_LANE1[188],SC_PMA_CH_INT_RX_LANE1[187],SC_PMA_CH_INT_RX_LANE1[186],SC_PMA_CH_INT_RX_LANE1[185],SC_PMA_CH_INT_RX_LANE1[184],SC_PMA_CH_INT_RX_LANE1[183],SC_PMA_CH_INT_RX_LANE1[182],SC_PMA_CH_INT_RX_LANE1[181],SC_PMA_CH_INT_RX_LANE1[180],SC_PMA_CH_INT_RX_LANE1[179],SC_PMA_CH_INT_RX_LANE1[178],SC_PMA_CH_INT_RX_LANE1[177],SC_PMA_CH_INT_RX_LANE1[176],SC_PMA_CH_INT_RX_LANE1[175],SC_PMA_CH_INT_RX_LANE1[174],SC_PMA_CH_INT_RX_LANE1[173],SC_PMA_CH_INT_RX_LANE1[172],SC_PMA_CH_INT_RX_LANE1[171],SC_PMA_CH_INT_RX_LANE1[170],SC_PMA_CH_INT_RX_LANE1[169],SC_PMA_CH_INT_RX_LANE1[168],SC_PMA_CH_INT_RX_LANE1[167],SC_PMA_CH_INT_RX_LANE1[166],SC_PMA_CH_INT_RX_LANE1[165],SC_PMA_CH_INT_RX_LANE1[164],SC_PMA_CH_INT_RX_LANE1[163],SC_PMA_CH_INT_RX_LANE1[162],SC_PMA_CH_INT_RX_LANE1[161],SC_PMA_CH_INT_RX_LANE1[160],SC_PMA_CH_INT_RX_LANE1[159],SC_PMA_CH_INT_RX_LANE1[158],SC_PMA_CH_INT_RX_LANE1[157],SC_PMA_CH_INT_RX_LANE1[156],SC_PMA_CH_INT_RX_LANE1[155],SC_PMA_CH_INT_RX_LANE1[154],SC_PMA_CH_INT_RX_LANE1[153],SC_PMA_CH_INT_RX_LANE1[152],SC_PMA_CH_INT_RX_LANE1[151],SC_PMA_CH_INT_RX_LANE1[150],SC_PMA_CH_INT_RX_LANE1[149],SC_PMA_CH_INT_RX_LANE1[148],SC_PMA_CH_INT_RX_LANE1[147],SC_PMA_CH_INT_RX_LANE1[146],SC_PMA_CH_INT_RX_LANE1[145],SC_PMA_CH_INT_RX_LANE1[144],SC_PMA_CH_INT_RX_LANE1[143],SC_PMA_CH_INT_RX_LANE1[142],SC_PMA_CH_INT_RX_LANE1[141],SC_PMA_CH_INT_RX_LANE1[140],SC_PMA_CH_INT_RX_LANE1[139],SC_PMA_CH_INT_RX_LANE1[138],SC_PMA_CH_INT_RX_LANE1[137],SC_PMA_CH_INT_RX_LANE1[136],SC_PMA_CH_INT_RX_LANE1[135],SC_PMA_CH_INT_RX_LANE1[134],SC_PMA_CH_INT_RX_LANE1[133],SC_PMA_CH_INT_RX_LANE1[132],SC_PMA_CH_INT_RX_LANE1[131],SC_PMA_CH_INT_RX_LANE1[130],SC_PMA_CH_INT_RX_LANE1[129],SC_PMA_CH_INT_RX_LANE1[128],SC_PMA_CH_INT_RX_LANE1[127],SC_PMA_CH_INT_RX_LANE1[126],SC_PMA_CH_INT_RX_LANE1[125],SC_PMA_CH_INT_RX_LANE1[124],SC_PMA_CH_INT_RX_LANE1[123],SC_PMA_CH_INT_RX_LANE1[122],SC_PMA_CH_INT_RX_LANE1[121],SC_PMA_CH_INT_RX_LANE1[120],SC_PMA_CH_INT_RX_LANE1[119],SC_PMA_CH_INT_RX_LANE1[118],SC_PMA_CH_INT_RX_LANE1[117],SC_PMA_CH_INT_RX_LANE1[116],SC_PMA_CH_INT_RX_LANE1[115],SC_PMA_CH_INT_RX_LANE1[114],SC_PMA_CH_INT_RX_LANE1[113],SC_PMA_CH_INT_RX_LANE1[112],SC_PMA_CH_INT_RX_LANE1[111],SC_PMA_CH_INT_RX_LANE1[110],SC_PMA_CH_INT_RX_LANE1[109],SC_PMA_CH_INT_RX_LANE1[108],SC_PMA_CH_INT_RX_LANE1[107],SC_PMA_CH_INT_RX_LANE1[106],SC_PMA_CH_INT_RX_LANE1[105],SC_PMA_CH_INT_RX_LANE1[104],SC_PMA_CH_INT_RX_LANE1[103],SC_PMA_CH_INT_RX_LANE1[102],SC_PMA_CH_INT_RX_LANE1[101],SC_PMA_CH_INT_RX_LANE1[100],SC_PMA_CH_INT_RX_LANE1[99],SC_PMA_CH_INT_RX_LANE1[98],SC_PMA_CH_INT_RX_LANE1[97],SC_PMA_CH_INT_RX_LANE1[96],SC_PMA_CH_INT_RX_LANE1[95],SC_PMA_CH_INT_RX_LANE1[94],SC_PMA_CH_INT_RX_LANE1[93],SC_PMA_CH_INT_RX_LANE1[92],SC_PMA_CH_INT_RX_LANE1[91],SC_PMA_CH_INT_RX_LANE1[90],SC_PMA_CH_INT_RX_LANE1[89],SC_PMA_CH_INT_RX_LANE1[88],SC_PMA_CH_INT_RX_LANE1[87],SC_PMA_CH_INT_RX_LANE1[86],SC_PMA_CH_INT_RX_LANE1[85],SC_PMA_CH_INT_RX_LANE1[84],SC_PMA_CH_INT_RX_LANE1[83],SC_PMA_CH_INT_RX_LANE1[82],SC_PMA_CH_INT_RX_LANE1[81],SC_PMA_CH_INT_RX_LANE1[80],SC_PMA_CH_INT_RX_LANE1[79],SC_PMA_CH_INT_RX_LANE1[78],SC_PMA_CH_INT_RX_LANE1[77],SC_PMA_CH_INT_RX_LANE1[76],SC_PMA_CH_INT_RX_LANE1[75],SC_PMA_CH_INT_RX_LANE1[74],SC_PMA_CH_INT_RX_LANE1[73],SC_PMA_CH_INT_RX_LANE1[72],SC_PMA_CH_INT_RX_LANE1[71],SC_PMA_CH_INT_RX_LANE1[70],SC_PMA_CH_INT_RX_LANE1[69],SC_PMA_CH_INT_RX_LANE1[68],SC_PMA_CH_INT_RX_LANE1[67],SC_PMA_CH_INT_RX_LANE1[66],SC_PMA_CH_INT_RX_LANE1[65],SC_PMA_CH_INT_RX_LANE1[64],SC_PMA_CH_INT_RX_LANE1[63],SC_PMA_CH_INT_RX_LANE1[62],SC_PMA_CH_INT_RX_LANE1[61],SC_PMA_CH_INT_RX_LANE1[60],SC_PMA_CH_INT_RX_LANE1[59],SC_PMA_CH_INT_RX_LANE1[58],SC_PMA_CH_INT_RX_LANE1[57],SC_PMA_CH_INT_RX_LANE1[56],SC_PMA_CH_INT_RX_LANE1[55],SC_PMA_CH_INT_RX_LANE1[54],SC_PMA_CH_INT_RX_LANE1[53],SC_PMA_CH_INT_RX_LANE1[52],SC_PMA_CH_INT_RX_LANE1[51],SC_PMA_CH_INT_RX_LANE1[50],SC_PMA_CH_INT_RX_LANE1[49],SC_PMA_CH_INT_RX_LANE1[48],SC_PMA_CH_INT_RX_LANE1[47],SC_PMA_CH_INT_RX_LANE1[46],SC_PMA_CH_INT_RX_LANE1[45],SC_PMA_CH_INT_RX_LANE1[44],SC_PMA_CH_INT_RX_LANE1[43],SC_PMA_CH_INT_RX_LANE1[42],SC_PMA_CH_INT_RX_LANE1[41],SC_PMA_CH_INT_RX_LANE1[40],SC_PMA_CH_INT_RX_LANE1[39],SC_PMA_CH_INT_RX_LANE1[38],SC_PMA_CH_INT_RX_LANE1[37],SC_PMA_CH_INT_RX_LANE1[36],SC_PMA_CH_INT_RX_LANE1[35],SC_PMA_CH_INT_RX_LANE1[34],SC_PMA_CH_INT_RX_LANE1[33],SC_PMA_CH_INT_RX_LANE1[32],SC_PMA_CH_INT_RX_LANE1[31],SC_PMA_CH_INT_RX_LANE1[30],SC_PMA_CH_INT_RX_LANE1[29],SC_PMA_CH_INT_RX_LANE1[28],SC_PMA_CH_INT_RX_LANE1[27],SC_PMA_CH_INT_RX_LANE1[26],SC_PMA_CH_INT_RX_LANE1[25],SC_PMA_CH_INT_RX_LANE1[24],SC_PMA_CH_INT_RX_LANE1[23],SC_PMA_CH_INT_RX_LANE1[22],SC_PMA_CH_INT_RX_LANE1[21],SC_PMA_CH_INT_RX_LANE1[20],SC_PMA_CH_INT_RX_LANE1[19],SC_PMA_CH_INT_RX_LANE1[18],SC_PMA_CH_INT_RX_LANE1[17],SC_PMA_CH_INT_RX_LANE1[16],SC_PMA_CH_INT_RX_LANE1[15],SC_PMA_CH_INT_RX_LANE1[14],SC_PMA_CH_INT_RX_LANE1[13],SC_PMA_CH_INT_RX_LANE1[12],SC_PMA_CH_INT_RX_LANE1[11],SC_PMA_CH_INT_RX_LANE1[10],SC_PMA_CH_INT_RX_LANE1[9],SC_PMA_CH_INT_RX_LANE1[8],SC_PMA_CH_INT_RX_LANE1[7],SC_PMA_CH_INT_RX_LANE1[6],SC_PMA_CH_INT_RX_LANE1[5],SC_PMA_CH_INT_RX_LANE1[4],SC_PMA_CH_INT_RX_LANE1[3],SC_PMA_CH_INT_RX_LANE1[2],SC_PMA_CH_INT_RX_LANE1[1],SC_PMA_CH_INT_RX_LANE1[0]" */,

    config input SC_PMA_CH_INT_TX_LANE1[388:0] = 389'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH_INT_TX_LANE1[388],SC_PMA_CH_INT_TX_LANE1[387],SC_PMA_CH_INT_TX_LANE1[386],SC_PMA_CH_INT_TX_LANE1[385],SC_PMA_CH_INT_TX_LANE1[384],SC_PMA_CH_INT_TX_LANE1[383],SC_PMA_CH_INT_TX_LANE1[382],SC_PMA_CH_INT_TX_LANE1[381],SC_PMA_CH_INT_TX_LANE1[380],SC_PMA_CH_INT_TX_LANE1[379],SC_PMA_CH_INT_TX_LANE1[378],SC_PMA_CH_INT_TX_LANE1[377],SC_PMA_CH_INT_TX_LANE1[376],SC_PMA_CH_INT_TX_LANE1[375],SC_PMA_CH_INT_TX_LANE1[374],SC_PMA_CH_INT_TX_LANE1[373],SC_PMA_CH_INT_TX_LANE1[372],SC_PMA_CH_INT_TX_LANE1[371],SC_PMA_CH_INT_TX_LANE1[370],SC_PMA_CH_INT_TX_LANE1[369],SC_PMA_CH_INT_TX_LANE1[368],SC_PMA_CH_INT_TX_LANE1[367],SC_PMA_CH_INT_TX_LANE1[366],SC_PMA_CH_INT_TX_LANE1[365],SC_PMA_CH_INT_TX_LANE1[364],SC_PMA_CH_INT_TX_LANE1[363],SC_PMA_CH_INT_TX_LANE1[362],SC_PMA_CH_INT_TX_LANE1[361],SC_PMA_CH_INT_TX_LANE1[360],SC_PMA_CH_INT_TX_LANE1[359],SC_PMA_CH_INT_TX_LANE1[358],SC_PMA_CH_INT_TX_LANE1[357],SC_PMA_CH_INT_TX_LANE1[356],SC_PMA_CH_INT_TX_LANE1[355],SC_PMA_CH_INT_TX_LANE1[354],SC_PMA_CH_INT_TX_LANE1[353],SC_PMA_CH_INT_TX_LANE1[352],SC_PMA_CH_INT_TX_LANE1[351],SC_PMA_CH_INT_TX_LANE1[350],SC_PMA_CH_INT_TX_LANE1[349],SC_PMA_CH_INT_TX_LANE1[348],SC_PMA_CH_INT_TX_LANE1[347],SC_PMA_CH_INT_TX_LANE1[346],SC_PMA_CH_INT_TX_LANE1[345],SC_PMA_CH_INT_TX_LANE1[344],SC_PMA_CH_INT_TX_LANE1[343],SC_PMA_CH_INT_TX_LANE1[342],SC_PMA_CH_INT_TX_LANE1[341],SC_PMA_CH_INT_TX_LANE1[340],SC_PMA_CH_INT_TX_LANE1[339],SC_PMA_CH_INT_TX_LANE1[338],SC_PMA_CH_INT_TX_LANE1[337],SC_PMA_CH_INT_TX_LANE1[336],SC_PMA_CH_INT_TX_LANE1[335],SC_PMA_CH_INT_TX_LANE1[334],SC_PMA_CH_INT_TX_LANE1[333],SC_PMA_CH_INT_TX_LANE1[332],SC_PMA_CH_INT_TX_LANE1[331],SC_PMA_CH_INT_TX_LANE1[330],SC_PMA_CH_INT_TX_LANE1[329],SC_PMA_CH_INT_TX_LANE1[328],SC_PMA_CH_INT_TX_LANE1[327],SC_PMA_CH_INT_TX_LANE1[326],SC_PMA_CH_INT_TX_LANE1[325],SC_PMA_CH_INT_TX_LANE1[324],SC_PMA_CH_INT_TX_LANE1[323],SC_PMA_CH_INT_TX_LANE1[322],SC_PMA_CH_INT_TX_LANE1[321],SC_PMA_CH_INT_TX_LANE1[320],SC_PMA_CH_INT_TX_LANE1[319],SC_PMA_CH_INT_TX_LANE1[318],SC_PMA_CH_INT_TX_LANE1[317],SC_PMA_CH_INT_TX_LANE1[316],SC_PMA_CH_INT_TX_LANE1[315],SC_PMA_CH_INT_TX_LANE1[314],SC_PMA_CH_INT_TX_LANE1[313],SC_PMA_CH_INT_TX_LANE1[312],SC_PMA_CH_INT_TX_LANE1[311],SC_PMA_CH_INT_TX_LANE1[310],SC_PMA_CH_INT_TX_LANE1[309],SC_PMA_CH_INT_TX_LANE1[308],SC_PMA_CH_INT_TX_LANE1[307],SC_PMA_CH_INT_TX_LANE1[306],SC_PMA_CH_INT_TX_LANE1[305],SC_PMA_CH_INT_TX_LANE1[304],SC_PMA_CH_INT_TX_LANE1[303],SC_PMA_CH_INT_TX_LANE1[302],SC_PMA_CH_INT_TX_LANE1[301],SC_PMA_CH_INT_TX_LANE1[300],SC_PMA_CH_INT_TX_LANE1[299],SC_PMA_CH_INT_TX_LANE1[298],SC_PMA_CH_INT_TX_LANE1[297],SC_PMA_CH_INT_TX_LANE1[296],SC_PMA_CH_INT_TX_LANE1[295],SC_PMA_CH_INT_TX_LANE1[294],SC_PMA_CH_INT_TX_LANE1[293],SC_PMA_CH_INT_TX_LANE1[292],SC_PMA_CH_INT_TX_LANE1[291],SC_PMA_CH_INT_TX_LANE1[290],SC_PMA_CH_INT_TX_LANE1[289],SC_PMA_CH_INT_TX_LANE1[288],SC_PMA_CH_INT_TX_LANE1[287],SC_PMA_CH_INT_TX_LANE1[286],SC_PMA_CH_INT_TX_LANE1[285],SC_PMA_CH_INT_TX_LANE1[284],SC_PMA_CH_INT_TX_LANE1[283],SC_PMA_CH_INT_TX_LANE1[282],SC_PMA_CH_INT_TX_LANE1[281],SC_PMA_CH_INT_TX_LANE1[280],SC_PMA_CH_INT_TX_LANE1[279],SC_PMA_CH_INT_TX_LANE1[278],SC_PMA_CH_INT_TX_LANE1[277],SC_PMA_CH_INT_TX_LANE1[276],SC_PMA_CH_INT_TX_LANE1[275],SC_PMA_CH_INT_TX_LANE1[274],SC_PMA_CH_INT_TX_LANE1[273],SC_PMA_CH_INT_TX_LANE1[272],SC_PMA_CH_INT_TX_LANE1[271],SC_PMA_CH_INT_TX_LANE1[270],SC_PMA_CH_INT_TX_LANE1[269],SC_PMA_CH_INT_TX_LANE1[268],SC_PMA_CH_INT_TX_LANE1[267],SC_PMA_CH_INT_TX_LANE1[266],SC_PMA_CH_INT_TX_LANE1[265],SC_PMA_CH_INT_TX_LANE1[264],SC_PMA_CH_INT_TX_LANE1[263],SC_PMA_CH_INT_TX_LANE1[262],SC_PMA_CH_INT_TX_LANE1[261],SC_PMA_CH_INT_TX_LANE1[260],SC_PMA_CH_INT_TX_LANE1[259],SC_PMA_CH_INT_TX_LANE1[258],SC_PMA_CH_INT_TX_LANE1[257],SC_PMA_CH_INT_TX_LANE1[256],SC_PMA_CH_INT_TX_LANE1[255],SC_PMA_CH_INT_TX_LANE1[254],SC_PMA_CH_INT_TX_LANE1[253],SC_PMA_CH_INT_TX_LANE1[252],SC_PMA_CH_INT_TX_LANE1[251],SC_PMA_CH_INT_TX_LANE1[250],SC_PMA_CH_INT_TX_LANE1[249],SC_PMA_CH_INT_TX_LANE1[248],SC_PMA_CH_INT_TX_LANE1[247],SC_PMA_CH_INT_TX_LANE1[246],SC_PMA_CH_INT_TX_LANE1[245],SC_PMA_CH_INT_TX_LANE1[244],SC_PMA_CH_INT_TX_LANE1[243],SC_PMA_CH_INT_TX_LANE1[242],SC_PMA_CH_INT_TX_LANE1[241],SC_PMA_CH_INT_TX_LANE1[240],SC_PMA_CH_INT_TX_LANE1[239],SC_PMA_CH_INT_TX_LANE1[238],SC_PMA_CH_INT_TX_LANE1[237],SC_PMA_CH_INT_TX_LANE1[236],SC_PMA_CH_INT_TX_LANE1[235],SC_PMA_CH_INT_TX_LANE1[234],SC_PMA_CH_INT_TX_LANE1[233],SC_PMA_CH_INT_TX_LANE1[232],SC_PMA_CH_INT_TX_LANE1[231],SC_PMA_CH_INT_TX_LANE1[230],SC_PMA_CH_INT_TX_LANE1[229],SC_PMA_CH_INT_TX_LANE1[228],SC_PMA_CH_INT_TX_LANE1[227],SC_PMA_CH_INT_TX_LANE1[226],SC_PMA_CH_INT_TX_LANE1[225],SC_PMA_CH_INT_TX_LANE1[224],SC_PMA_CH_INT_TX_LANE1[223],SC_PMA_CH_INT_TX_LANE1[222],SC_PMA_CH_INT_TX_LANE1[221],SC_PMA_CH_INT_TX_LANE1[220],SC_PMA_CH_INT_TX_LANE1[219],SC_PMA_CH_INT_TX_LANE1[218],SC_PMA_CH_INT_TX_LANE1[217],SC_PMA_CH_INT_TX_LANE1[216],SC_PMA_CH_INT_TX_LANE1[215],SC_PMA_CH_INT_TX_LANE1[214],SC_PMA_CH_INT_TX_LANE1[213],SC_PMA_CH_INT_TX_LANE1[212],SC_PMA_CH_INT_TX_LANE1[211],SC_PMA_CH_INT_TX_LANE1[210],SC_PMA_CH_INT_TX_LANE1[209],SC_PMA_CH_INT_TX_LANE1[208],SC_PMA_CH_INT_TX_LANE1[207],SC_PMA_CH_INT_TX_LANE1[206],SC_PMA_CH_INT_TX_LANE1[205],SC_PMA_CH_INT_TX_LANE1[204],SC_PMA_CH_INT_TX_LANE1[203],SC_PMA_CH_INT_TX_LANE1[202],SC_PMA_CH_INT_TX_LANE1[201],SC_PMA_CH_INT_TX_LANE1[200],SC_PMA_CH_INT_TX_LANE1[199],SC_PMA_CH_INT_TX_LANE1[198],SC_PMA_CH_INT_TX_LANE1[197],SC_PMA_CH_INT_TX_LANE1[196],SC_PMA_CH_INT_TX_LANE1[195],SC_PMA_CH_INT_TX_LANE1[194],SC_PMA_CH_INT_TX_LANE1[193],SC_PMA_CH_INT_TX_LANE1[192],SC_PMA_CH_INT_TX_LANE1[191],SC_PMA_CH_INT_TX_LANE1[190],SC_PMA_CH_INT_TX_LANE1[189],SC_PMA_CH_INT_TX_LANE1[188],SC_PMA_CH_INT_TX_LANE1[187],SC_PMA_CH_INT_TX_LANE1[186],SC_PMA_CH_INT_TX_LANE1[185],SC_PMA_CH_INT_TX_LANE1[184],SC_PMA_CH_INT_TX_LANE1[183],SC_PMA_CH_INT_TX_LANE1[182],SC_PMA_CH_INT_TX_LANE1[181],SC_PMA_CH_INT_TX_LANE1[180],SC_PMA_CH_INT_TX_LANE1[179],SC_PMA_CH_INT_TX_LANE1[178],SC_PMA_CH_INT_TX_LANE1[177],SC_PMA_CH_INT_TX_LANE1[176],SC_PMA_CH_INT_TX_LANE1[175],SC_PMA_CH_INT_TX_LANE1[174],SC_PMA_CH_INT_TX_LANE1[173],SC_PMA_CH_INT_TX_LANE1[172],SC_PMA_CH_INT_TX_LANE1[171],SC_PMA_CH_INT_TX_LANE1[170],SC_PMA_CH_INT_TX_LANE1[169],SC_PMA_CH_INT_TX_LANE1[168],SC_PMA_CH_INT_TX_LANE1[167],SC_PMA_CH_INT_TX_LANE1[166],SC_PMA_CH_INT_TX_LANE1[165],SC_PMA_CH_INT_TX_LANE1[164],SC_PMA_CH_INT_TX_LANE1[163],SC_PMA_CH_INT_TX_LANE1[162],SC_PMA_CH_INT_TX_LANE1[161],SC_PMA_CH_INT_TX_LANE1[160],SC_PMA_CH_INT_TX_LANE1[159],SC_PMA_CH_INT_TX_LANE1[158],SC_PMA_CH_INT_TX_LANE1[157],SC_PMA_CH_INT_TX_LANE1[156],SC_PMA_CH_INT_TX_LANE1[155],SC_PMA_CH_INT_TX_LANE1[154],SC_PMA_CH_INT_TX_LANE1[153],SC_PMA_CH_INT_TX_LANE1[152],SC_PMA_CH_INT_TX_LANE1[151],SC_PMA_CH_INT_TX_LANE1[150],SC_PMA_CH_INT_TX_LANE1[149],SC_PMA_CH_INT_TX_LANE1[148],SC_PMA_CH_INT_TX_LANE1[147],SC_PMA_CH_INT_TX_LANE1[146],SC_PMA_CH_INT_TX_LANE1[145],SC_PMA_CH_INT_TX_LANE1[144],SC_PMA_CH_INT_TX_LANE1[143],SC_PMA_CH_INT_TX_LANE1[142],SC_PMA_CH_INT_TX_LANE1[141],SC_PMA_CH_INT_TX_LANE1[140],SC_PMA_CH_INT_TX_LANE1[139],SC_PMA_CH_INT_TX_LANE1[138],SC_PMA_CH_INT_TX_LANE1[137],SC_PMA_CH_INT_TX_LANE1[136],SC_PMA_CH_INT_TX_LANE1[135],SC_PMA_CH_INT_TX_LANE1[134],SC_PMA_CH_INT_TX_LANE1[133],SC_PMA_CH_INT_TX_LANE1[132],SC_PMA_CH_INT_TX_LANE1[131],SC_PMA_CH_INT_TX_LANE1[130],SC_PMA_CH_INT_TX_LANE1[129],SC_PMA_CH_INT_TX_LANE1[128],SC_PMA_CH_INT_TX_LANE1[127],SC_PMA_CH_INT_TX_LANE1[126],SC_PMA_CH_INT_TX_LANE1[125],SC_PMA_CH_INT_TX_LANE1[124],SC_PMA_CH_INT_TX_LANE1[123],SC_PMA_CH_INT_TX_LANE1[122],SC_PMA_CH_INT_TX_LANE1[121],SC_PMA_CH_INT_TX_LANE1[120],SC_PMA_CH_INT_TX_LANE1[119],SC_PMA_CH_INT_TX_LANE1[118],SC_PMA_CH_INT_TX_LANE1[117],SC_PMA_CH_INT_TX_LANE1[116],SC_PMA_CH_INT_TX_LANE1[115],SC_PMA_CH_INT_TX_LANE1[114],SC_PMA_CH_INT_TX_LANE1[113],SC_PMA_CH_INT_TX_LANE1[112],SC_PMA_CH_INT_TX_LANE1[111],SC_PMA_CH_INT_TX_LANE1[110],SC_PMA_CH_INT_TX_LANE1[109],SC_PMA_CH_INT_TX_LANE1[108],SC_PMA_CH_INT_TX_LANE1[107],SC_PMA_CH_INT_TX_LANE1[106],SC_PMA_CH_INT_TX_LANE1[105],SC_PMA_CH_INT_TX_LANE1[104],SC_PMA_CH_INT_TX_LANE1[103],SC_PMA_CH_INT_TX_LANE1[102],SC_PMA_CH_INT_TX_LANE1[101],SC_PMA_CH_INT_TX_LANE1[100],SC_PMA_CH_INT_TX_LANE1[99],SC_PMA_CH_INT_TX_LANE1[98],SC_PMA_CH_INT_TX_LANE1[97],SC_PMA_CH_INT_TX_LANE1[96],SC_PMA_CH_INT_TX_LANE1[95],SC_PMA_CH_INT_TX_LANE1[94],SC_PMA_CH_INT_TX_LANE1[93],SC_PMA_CH_INT_TX_LANE1[92],SC_PMA_CH_INT_TX_LANE1[91],SC_PMA_CH_INT_TX_LANE1[90],SC_PMA_CH_INT_TX_LANE1[89],SC_PMA_CH_INT_TX_LANE1[88],SC_PMA_CH_INT_TX_LANE1[87],SC_PMA_CH_INT_TX_LANE1[86],SC_PMA_CH_INT_TX_LANE1[85],SC_PMA_CH_INT_TX_LANE1[84],SC_PMA_CH_INT_TX_LANE1[83],SC_PMA_CH_INT_TX_LANE1[82],SC_PMA_CH_INT_TX_LANE1[81],SC_PMA_CH_INT_TX_LANE1[80],SC_PMA_CH_INT_TX_LANE1[79],SC_PMA_CH_INT_TX_LANE1[78],SC_PMA_CH_INT_TX_LANE1[77],SC_PMA_CH_INT_TX_LANE1[76],SC_PMA_CH_INT_TX_LANE1[75],SC_PMA_CH_INT_TX_LANE1[74],SC_PMA_CH_INT_TX_LANE1[73],SC_PMA_CH_INT_TX_LANE1[72],SC_PMA_CH_INT_TX_LANE1[71],SC_PMA_CH_INT_TX_LANE1[70],SC_PMA_CH_INT_TX_LANE1[69],SC_PMA_CH_INT_TX_LANE1[68],SC_PMA_CH_INT_TX_LANE1[67],SC_PMA_CH_INT_TX_LANE1[66],SC_PMA_CH_INT_TX_LANE1[65],SC_PMA_CH_INT_TX_LANE1[64],SC_PMA_CH_INT_TX_LANE1[63],SC_PMA_CH_INT_TX_LANE1[62],SC_PMA_CH_INT_TX_LANE1[61],SC_PMA_CH_INT_TX_LANE1[60],SC_PMA_CH_INT_TX_LANE1[59],SC_PMA_CH_INT_TX_LANE1[58],SC_PMA_CH_INT_TX_LANE1[57],SC_PMA_CH_INT_TX_LANE1[56],SC_PMA_CH_INT_TX_LANE1[55],SC_PMA_CH_INT_TX_LANE1[54],SC_PMA_CH_INT_TX_LANE1[53],SC_PMA_CH_INT_TX_LANE1[52],SC_PMA_CH_INT_TX_LANE1[51],SC_PMA_CH_INT_TX_LANE1[50],SC_PMA_CH_INT_TX_LANE1[49],SC_PMA_CH_INT_TX_LANE1[48],SC_PMA_CH_INT_TX_LANE1[47],SC_PMA_CH_INT_TX_LANE1[46],SC_PMA_CH_INT_TX_LANE1[45],SC_PMA_CH_INT_TX_LANE1[44],SC_PMA_CH_INT_TX_LANE1[43],SC_PMA_CH_INT_TX_LANE1[42],SC_PMA_CH_INT_TX_LANE1[41],SC_PMA_CH_INT_TX_LANE1[40],SC_PMA_CH_INT_TX_LANE1[39],SC_PMA_CH_INT_TX_LANE1[38],SC_PMA_CH_INT_TX_LANE1[37],SC_PMA_CH_INT_TX_LANE1[36],SC_PMA_CH_INT_TX_LANE1[35],SC_PMA_CH_INT_TX_LANE1[34],SC_PMA_CH_INT_TX_LANE1[33],SC_PMA_CH_INT_TX_LANE1[32],SC_PMA_CH_INT_TX_LANE1[31],SC_PMA_CH_INT_TX_LANE1[30],SC_PMA_CH_INT_TX_LANE1[29],SC_PMA_CH_INT_TX_LANE1[28],SC_PMA_CH_INT_TX_LANE1[27],SC_PMA_CH_INT_TX_LANE1[26],SC_PMA_CH_INT_TX_LANE1[25],SC_PMA_CH_INT_TX_LANE1[24],SC_PMA_CH_INT_TX_LANE1[23],SC_PMA_CH_INT_TX_LANE1[22],SC_PMA_CH_INT_TX_LANE1[21],SC_PMA_CH_INT_TX_LANE1[20],SC_PMA_CH_INT_TX_LANE1[19],SC_PMA_CH_INT_TX_LANE1[18],SC_PMA_CH_INT_TX_LANE1[17],SC_PMA_CH_INT_TX_LANE1[16],SC_PMA_CH_INT_TX_LANE1[15],SC_PMA_CH_INT_TX_LANE1[14],SC_PMA_CH_INT_TX_LANE1[13],SC_PMA_CH_INT_TX_LANE1[12],SC_PMA_CH_INT_TX_LANE1[11],SC_PMA_CH_INT_TX_LANE1[10],SC_PMA_CH_INT_TX_LANE1[9],SC_PMA_CH_INT_TX_LANE1[8],SC_PMA_CH_INT_TX_LANE1[7],SC_PMA_CH_INT_TX_LANE1[6],SC_PMA_CH_INT_TX_LANE1[5],SC_PMA_CH_INT_TX_LANE1[4],SC_PMA_CH_INT_TX_LANE1[3],SC_PMA_CH_INT_TX_LANE1[2],SC_PMA_CH_INT_TX_LANE1[1],SC_PMA_CH_INT_TX_LANE1[0]" */,

    config input SC_PMA_CH_INT_RX_LANE2[398:0] = 399'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH_INT_RX_LANE2[398],SC_PMA_CH_INT_RX_LANE2[397],SC_PMA_CH_INT_RX_LANE2[396],SC_PMA_CH_INT_RX_LANE2[395],SC_PMA_CH_INT_RX_LANE2[394],SC_PMA_CH_INT_RX_LANE2[393],SC_PMA_CH_INT_RX_LANE2[392],SC_PMA_CH_INT_RX_LANE2[391],SC_PMA_CH_INT_RX_LANE2[390],SC_PMA_CH_INT_RX_LANE2[389],SC_PMA_CH_INT_RX_LANE2[388],SC_PMA_CH_INT_RX_LANE2[387],SC_PMA_CH_INT_RX_LANE2[386],SC_PMA_CH_INT_RX_LANE2[385],SC_PMA_CH_INT_RX_LANE2[384],SC_PMA_CH_INT_RX_LANE2[383],SC_PMA_CH_INT_RX_LANE2[382],SC_PMA_CH_INT_RX_LANE2[381],SC_PMA_CH_INT_RX_LANE2[380],SC_PMA_CH_INT_RX_LANE2[379],SC_PMA_CH_INT_RX_LANE2[378],SC_PMA_CH_INT_RX_LANE2[377],SC_PMA_CH_INT_RX_LANE2[376],SC_PMA_CH_INT_RX_LANE2[375],SC_PMA_CH_INT_RX_LANE2[374],SC_PMA_CH_INT_RX_LANE2[373],SC_PMA_CH_INT_RX_LANE2[372],SC_PMA_CH_INT_RX_LANE2[371],SC_PMA_CH_INT_RX_LANE2[370],SC_PMA_CH_INT_RX_LANE2[369],SC_PMA_CH_INT_RX_LANE2[368],SC_PMA_CH_INT_RX_LANE2[367],SC_PMA_CH_INT_RX_LANE2[366],SC_PMA_CH_INT_RX_LANE2[365],SC_PMA_CH_INT_RX_LANE2[364],SC_PMA_CH_INT_RX_LANE2[363],SC_PMA_CH_INT_RX_LANE2[362],SC_PMA_CH_INT_RX_LANE2[361],SC_PMA_CH_INT_RX_LANE2[360],SC_PMA_CH_INT_RX_LANE2[359],SC_PMA_CH_INT_RX_LANE2[358],SC_PMA_CH_INT_RX_LANE2[357],SC_PMA_CH_INT_RX_LANE2[356],SC_PMA_CH_INT_RX_LANE2[355],SC_PMA_CH_INT_RX_LANE2[354],SC_PMA_CH_INT_RX_LANE2[353],SC_PMA_CH_INT_RX_LANE2[352],SC_PMA_CH_INT_RX_LANE2[351],SC_PMA_CH_INT_RX_LANE2[350],SC_PMA_CH_INT_RX_LANE2[349],SC_PMA_CH_INT_RX_LANE2[348],SC_PMA_CH_INT_RX_LANE2[347],SC_PMA_CH_INT_RX_LANE2[346],SC_PMA_CH_INT_RX_LANE2[345],SC_PMA_CH_INT_RX_LANE2[344],SC_PMA_CH_INT_RX_LANE2[343],SC_PMA_CH_INT_RX_LANE2[342],SC_PMA_CH_INT_RX_LANE2[341],SC_PMA_CH_INT_RX_LANE2[340],SC_PMA_CH_INT_RX_LANE2[339],SC_PMA_CH_INT_RX_LANE2[338],SC_PMA_CH_INT_RX_LANE2[337],SC_PMA_CH_INT_RX_LANE2[336],SC_PMA_CH_INT_RX_LANE2[335],SC_PMA_CH_INT_RX_LANE2[334],SC_PMA_CH_INT_RX_LANE2[333],SC_PMA_CH_INT_RX_LANE2[332],SC_PMA_CH_INT_RX_LANE2[331],SC_PMA_CH_INT_RX_LANE2[330],SC_PMA_CH_INT_RX_LANE2[329],SC_PMA_CH_INT_RX_LANE2[328],SC_PMA_CH_INT_RX_LANE2[327],SC_PMA_CH_INT_RX_LANE2[326],SC_PMA_CH_INT_RX_LANE2[325],SC_PMA_CH_INT_RX_LANE2[324],SC_PMA_CH_INT_RX_LANE2[323],SC_PMA_CH_INT_RX_LANE2[322],SC_PMA_CH_INT_RX_LANE2[321],SC_PMA_CH_INT_RX_LANE2[320],SC_PMA_CH_INT_RX_LANE2[319],SC_PMA_CH_INT_RX_LANE2[318],SC_PMA_CH_INT_RX_LANE2[317],SC_PMA_CH_INT_RX_LANE2[316],SC_PMA_CH_INT_RX_LANE2[315],SC_PMA_CH_INT_RX_LANE2[314],SC_PMA_CH_INT_RX_LANE2[313],SC_PMA_CH_INT_RX_LANE2[312],SC_PMA_CH_INT_RX_LANE2[311],SC_PMA_CH_INT_RX_LANE2[310],SC_PMA_CH_INT_RX_LANE2[309],SC_PMA_CH_INT_RX_LANE2[308],SC_PMA_CH_INT_RX_LANE2[307],SC_PMA_CH_INT_RX_LANE2[306],SC_PMA_CH_INT_RX_LANE2[305],SC_PMA_CH_INT_RX_LANE2[304],SC_PMA_CH_INT_RX_LANE2[303],SC_PMA_CH_INT_RX_LANE2[302],SC_PMA_CH_INT_RX_LANE2[301],SC_PMA_CH_INT_RX_LANE2[300],SC_PMA_CH_INT_RX_LANE2[299],SC_PMA_CH_INT_RX_LANE2[298],SC_PMA_CH_INT_RX_LANE2[297],SC_PMA_CH_INT_RX_LANE2[296],SC_PMA_CH_INT_RX_LANE2[295],SC_PMA_CH_INT_RX_LANE2[294],SC_PMA_CH_INT_RX_LANE2[293],SC_PMA_CH_INT_RX_LANE2[292],SC_PMA_CH_INT_RX_LANE2[291],SC_PMA_CH_INT_RX_LANE2[290],SC_PMA_CH_INT_RX_LANE2[289],SC_PMA_CH_INT_RX_LANE2[288],SC_PMA_CH_INT_RX_LANE2[287],SC_PMA_CH_INT_RX_LANE2[286],SC_PMA_CH_INT_RX_LANE2[285],SC_PMA_CH_INT_RX_LANE2[284],SC_PMA_CH_INT_RX_LANE2[283],SC_PMA_CH_INT_RX_LANE2[282],SC_PMA_CH_INT_RX_LANE2[281],SC_PMA_CH_INT_RX_LANE2[280],SC_PMA_CH_INT_RX_LANE2[279],SC_PMA_CH_INT_RX_LANE2[278],SC_PMA_CH_INT_RX_LANE2[277],SC_PMA_CH_INT_RX_LANE2[276],SC_PMA_CH_INT_RX_LANE2[275],SC_PMA_CH_INT_RX_LANE2[274],SC_PMA_CH_INT_RX_LANE2[273],SC_PMA_CH_INT_RX_LANE2[272],SC_PMA_CH_INT_RX_LANE2[271],SC_PMA_CH_INT_RX_LANE2[270],SC_PMA_CH_INT_RX_LANE2[269],SC_PMA_CH_INT_RX_LANE2[268],SC_PMA_CH_INT_RX_LANE2[267],SC_PMA_CH_INT_RX_LANE2[266],SC_PMA_CH_INT_RX_LANE2[265],SC_PMA_CH_INT_RX_LANE2[264],SC_PMA_CH_INT_RX_LANE2[263],SC_PMA_CH_INT_RX_LANE2[262],SC_PMA_CH_INT_RX_LANE2[261],SC_PMA_CH_INT_RX_LANE2[260],SC_PMA_CH_INT_RX_LANE2[259],SC_PMA_CH_INT_RX_LANE2[258],SC_PMA_CH_INT_RX_LANE2[257],SC_PMA_CH_INT_RX_LANE2[256],SC_PMA_CH_INT_RX_LANE2[255],SC_PMA_CH_INT_RX_LANE2[254],SC_PMA_CH_INT_RX_LANE2[253],SC_PMA_CH_INT_RX_LANE2[252],SC_PMA_CH_INT_RX_LANE2[251],SC_PMA_CH_INT_RX_LANE2[250],SC_PMA_CH_INT_RX_LANE2[249],SC_PMA_CH_INT_RX_LANE2[248],SC_PMA_CH_INT_RX_LANE2[247],SC_PMA_CH_INT_RX_LANE2[246],SC_PMA_CH_INT_RX_LANE2[245],SC_PMA_CH_INT_RX_LANE2[244],SC_PMA_CH_INT_RX_LANE2[243],SC_PMA_CH_INT_RX_LANE2[242],SC_PMA_CH_INT_RX_LANE2[241],SC_PMA_CH_INT_RX_LANE2[240],SC_PMA_CH_INT_RX_LANE2[239],SC_PMA_CH_INT_RX_LANE2[238],SC_PMA_CH_INT_RX_LANE2[237],SC_PMA_CH_INT_RX_LANE2[236],SC_PMA_CH_INT_RX_LANE2[235],SC_PMA_CH_INT_RX_LANE2[234],SC_PMA_CH_INT_RX_LANE2[233],SC_PMA_CH_INT_RX_LANE2[232],SC_PMA_CH_INT_RX_LANE2[231],SC_PMA_CH_INT_RX_LANE2[230],SC_PMA_CH_INT_RX_LANE2[229],SC_PMA_CH_INT_RX_LANE2[228],SC_PMA_CH_INT_RX_LANE2[227],SC_PMA_CH_INT_RX_LANE2[226],SC_PMA_CH_INT_RX_LANE2[225],SC_PMA_CH_INT_RX_LANE2[224],SC_PMA_CH_INT_RX_LANE2[223],SC_PMA_CH_INT_RX_LANE2[222],SC_PMA_CH_INT_RX_LANE2[221],SC_PMA_CH_INT_RX_LANE2[220],SC_PMA_CH_INT_RX_LANE2[219],SC_PMA_CH_INT_RX_LANE2[218],SC_PMA_CH_INT_RX_LANE2[217],SC_PMA_CH_INT_RX_LANE2[216],SC_PMA_CH_INT_RX_LANE2[215],SC_PMA_CH_INT_RX_LANE2[214],SC_PMA_CH_INT_RX_LANE2[213],SC_PMA_CH_INT_RX_LANE2[212],SC_PMA_CH_INT_RX_LANE2[211],SC_PMA_CH_INT_RX_LANE2[210],SC_PMA_CH_INT_RX_LANE2[209],SC_PMA_CH_INT_RX_LANE2[208],SC_PMA_CH_INT_RX_LANE2[207],SC_PMA_CH_INT_RX_LANE2[206],SC_PMA_CH_INT_RX_LANE2[205],SC_PMA_CH_INT_RX_LANE2[204],SC_PMA_CH_INT_RX_LANE2[203],SC_PMA_CH_INT_RX_LANE2[202],SC_PMA_CH_INT_RX_LANE2[201],SC_PMA_CH_INT_RX_LANE2[200],SC_PMA_CH_INT_RX_LANE2[199],SC_PMA_CH_INT_RX_LANE2[198],SC_PMA_CH_INT_RX_LANE2[197],SC_PMA_CH_INT_RX_LANE2[196],SC_PMA_CH_INT_RX_LANE2[195],SC_PMA_CH_INT_RX_LANE2[194],SC_PMA_CH_INT_RX_LANE2[193],SC_PMA_CH_INT_RX_LANE2[192],SC_PMA_CH_INT_RX_LANE2[191],SC_PMA_CH_INT_RX_LANE2[190],SC_PMA_CH_INT_RX_LANE2[189],SC_PMA_CH_INT_RX_LANE2[188],SC_PMA_CH_INT_RX_LANE2[187],SC_PMA_CH_INT_RX_LANE2[186],SC_PMA_CH_INT_RX_LANE2[185],SC_PMA_CH_INT_RX_LANE2[184],SC_PMA_CH_INT_RX_LANE2[183],SC_PMA_CH_INT_RX_LANE2[182],SC_PMA_CH_INT_RX_LANE2[181],SC_PMA_CH_INT_RX_LANE2[180],SC_PMA_CH_INT_RX_LANE2[179],SC_PMA_CH_INT_RX_LANE2[178],SC_PMA_CH_INT_RX_LANE2[177],SC_PMA_CH_INT_RX_LANE2[176],SC_PMA_CH_INT_RX_LANE2[175],SC_PMA_CH_INT_RX_LANE2[174],SC_PMA_CH_INT_RX_LANE2[173],SC_PMA_CH_INT_RX_LANE2[172],SC_PMA_CH_INT_RX_LANE2[171],SC_PMA_CH_INT_RX_LANE2[170],SC_PMA_CH_INT_RX_LANE2[169],SC_PMA_CH_INT_RX_LANE2[168],SC_PMA_CH_INT_RX_LANE2[167],SC_PMA_CH_INT_RX_LANE2[166],SC_PMA_CH_INT_RX_LANE2[165],SC_PMA_CH_INT_RX_LANE2[164],SC_PMA_CH_INT_RX_LANE2[163],SC_PMA_CH_INT_RX_LANE2[162],SC_PMA_CH_INT_RX_LANE2[161],SC_PMA_CH_INT_RX_LANE2[160],SC_PMA_CH_INT_RX_LANE2[159],SC_PMA_CH_INT_RX_LANE2[158],SC_PMA_CH_INT_RX_LANE2[157],SC_PMA_CH_INT_RX_LANE2[156],SC_PMA_CH_INT_RX_LANE2[155],SC_PMA_CH_INT_RX_LANE2[154],SC_PMA_CH_INT_RX_LANE2[153],SC_PMA_CH_INT_RX_LANE2[152],SC_PMA_CH_INT_RX_LANE2[151],SC_PMA_CH_INT_RX_LANE2[150],SC_PMA_CH_INT_RX_LANE2[149],SC_PMA_CH_INT_RX_LANE2[148],SC_PMA_CH_INT_RX_LANE2[147],SC_PMA_CH_INT_RX_LANE2[146],SC_PMA_CH_INT_RX_LANE2[145],SC_PMA_CH_INT_RX_LANE2[144],SC_PMA_CH_INT_RX_LANE2[143],SC_PMA_CH_INT_RX_LANE2[142],SC_PMA_CH_INT_RX_LANE2[141],SC_PMA_CH_INT_RX_LANE2[140],SC_PMA_CH_INT_RX_LANE2[139],SC_PMA_CH_INT_RX_LANE2[138],SC_PMA_CH_INT_RX_LANE2[137],SC_PMA_CH_INT_RX_LANE2[136],SC_PMA_CH_INT_RX_LANE2[135],SC_PMA_CH_INT_RX_LANE2[134],SC_PMA_CH_INT_RX_LANE2[133],SC_PMA_CH_INT_RX_LANE2[132],SC_PMA_CH_INT_RX_LANE2[131],SC_PMA_CH_INT_RX_LANE2[130],SC_PMA_CH_INT_RX_LANE2[129],SC_PMA_CH_INT_RX_LANE2[128],SC_PMA_CH_INT_RX_LANE2[127],SC_PMA_CH_INT_RX_LANE2[126],SC_PMA_CH_INT_RX_LANE2[125],SC_PMA_CH_INT_RX_LANE2[124],SC_PMA_CH_INT_RX_LANE2[123],SC_PMA_CH_INT_RX_LANE2[122],SC_PMA_CH_INT_RX_LANE2[121],SC_PMA_CH_INT_RX_LANE2[120],SC_PMA_CH_INT_RX_LANE2[119],SC_PMA_CH_INT_RX_LANE2[118],SC_PMA_CH_INT_RX_LANE2[117],SC_PMA_CH_INT_RX_LANE2[116],SC_PMA_CH_INT_RX_LANE2[115],SC_PMA_CH_INT_RX_LANE2[114],SC_PMA_CH_INT_RX_LANE2[113],SC_PMA_CH_INT_RX_LANE2[112],SC_PMA_CH_INT_RX_LANE2[111],SC_PMA_CH_INT_RX_LANE2[110],SC_PMA_CH_INT_RX_LANE2[109],SC_PMA_CH_INT_RX_LANE2[108],SC_PMA_CH_INT_RX_LANE2[107],SC_PMA_CH_INT_RX_LANE2[106],SC_PMA_CH_INT_RX_LANE2[105],SC_PMA_CH_INT_RX_LANE2[104],SC_PMA_CH_INT_RX_LANE2[103],SC_PMA_CH_INT_RX_LANE2[102],SC_PMA_CH_INT_RX_LANE2[101],SC_PMA_CH_INT_RX_LANE2[100],SC_PMA_CH_INT_RX_LANE2[99],SC_PMA_CH_INT_RX_LANE2[98],SC_PMA_CH_INT_RX_LANE2[97],SC_PMA_CH_INT_RX_LANE2[96],SC_PMA_CH_INT_RX_LANE2[95],SC_PMA_CH_INT_RX_LANE2[94],SC_PMA_CH_INT_RX_LANE2[93],SC_PMA_CH_INT_RX_LANE2[92],SC_PMA_CH_INT_RX_LANE2[91],SC_PMA_CH_INT_RX_LANE2[90],SC_PMA_CH_INT_RX_LANE2[89],SC_PMA_CH_INT_RX_LANE2[88],SC_PMA_CH_INT_RX_LANE2[87],SC_PMA_CH_INT_RX_LANE2[86],SC_PMA_CH_INT_RX_LANE2[85],SC_PMA_CH_INT_RX_LANE2[84],SC_PMA_CH_INT_RX_LANE2[83],SC_PMA_CH_INT_RX_LANE2[82],SC_PMA_CH_INT_RX_LANE2[81],SC_PMA_CH_INT_RX_LANE2[80],SC_PMA_CH_INT_RX_LANE2[79],SC_PMA_CH_INT_RX_LANE2[78],SC_PMA_CH_INT_RX_LANE2[77],SC_PMA_CH_INT_RX_LANE2[76],SC_PMA_CH_INT_RX_LANE2[75],SC_PMA_CH_INT_RX_LANE2[74],SC_PMA_CH_INT_RX_LANE2[73],SC_PMA_CH_INT_RX_LANE2[72],SC_PMA_CH_INT_RX_LANE2[71],SC_PMA_CH_INT_RX_LANE2[70],SC_PMA_CH_INT_RX_LANE2[69],SC_PMA_CH_INT_RX_LANE2[68],SC_PMA_CH_INT_RX_LANE2[67],SC_PMA_CH_INT_RX_LANE2[66],SC_PMA_CH_INT_RX_LANE2[65],SC_PMA_CH_INT_RX_LANE2[64],SC_PMA_CH_INT_RX_LANE2[63],SC_PMA_CH_INT_RX_LANE2[62],SC_PMA_CH_INT_RX_LANE2[61],SC_PMA_CH_INT_RX_LANE2[60],SC_PMA_CH_INT_RX_LANE2[59],SC_PMA_CH_INT_RX_LANE2[58],SC_PMA_CH_INT_RX_LANE2[57],SC_PMA_CH_INT_RX_LANE2[56],SC_PMA_CH_INT_RX_LANE2[55],SC_PMA_CH_INT_RX_LANE2[54],SC_PMA_CH_INT_RX_LANE2[53],SC_PMA_CH_INT_RX_LANE2[52],SC_PMA_CH_INT_RX_LANE2[51],SC_PMA_CH_INT_RX_LANE2[50],SC_PMA_CH_INT_RX_LANE2[49],SC_PMA_CH_INT_RX_LANE2[48],SC_PMA_CH_INT_RX_LANE2[47],SC_PMA_CH_INT_RX_LANE2[46],SC_PMA_CH_INT_RX_LANE2[45],SC_PMA_CH_INT_RX_LANE2[44],SC_PMA_CH_INT_RX_LANE2[43],SC_PMA_CH_INT_RX_LANE2[42],SC_PMA_CH_INT_RX_LANE2[41],SC_PMA_CH_INT_RX_LANE2[40],SC_PMA_CH_INT_RX_LANE2[39],SC_PMA_CH_INT_RX_LANE2[38],SC_PMA_CH_INT_RX_LANE2[37],SC_PMA_CH_INT_RX_LANE2[36],SC_PMA_CH_INT_RX_LANE2[35],SC_PMA_CH_INT_RX_LANE2[34],SC_PMA_CH_INT_RX_LANE2[33],SC_PMA_CH_INT_RX_LANE2[32],SC_PMA_CH_INT_RX_LANE2[31],SC_PMA_CH_INT_RX_LANE2[30],SC_PMA_CH_INT_RX_LANE2[29],SC_PMA_CH_INT_RX_LANE2[28],SC_PMA_CH_INT_RX_LANE2[27],SC_PMA_CH_INT_RX_LANE2[26],SC_PMA_CH_INT_RX_LANE2[25],SC_PMA_CH_INT_RX_LANE2[24],SC_PMA_CH_INT_RX_LANE2[23],SC_PMA_CH_INT_RX_LANE2[22],SC_PMA_CH_INT_RX_LANE2[21],SC_PMA_CH_INT_RX_LANE2[20],SC_PMA_CH_INT_RX_LANE2[19],SC_PMA_CH_INT_RX_LANE2[18],SC_PMA_CH_INT_RX_LANE2[17],SC_PMA_CH_INT_RX_LANE2[16],SC_PMA_CH_INT_RX_LANE2[15],SC_PMA_CH_INT_RX_LANE2[14],SC_PMA_CH_INT_RX_LANE2[13],SC_PMA_CH_INT_RX_LANE2[12],SC_PMA_CH_INT_RX_LANE2[11],SC_PMA_CH_INT_RX_LANE2[10],SC_PMA_CH_INT_RX_LANE2[9],SC_PMA_CH_INT_RX_LANE2[8],SC_PMA_CH_INT_RX_LANE2[7],SC_PMA_CH_INT_RX_LANE2[6],SC_PMA_CH_INT_RX_LANE2[5],SC_PMA_CH_INT_RX_LANE2[4],SC_PMA_CH_INT_RX_LANE2[3],SC_PMA_CH_INT_RX_LANE2[2],SC_PMA_CH_INT_RX_LANE2[1],SC_PMA_CH_INT_RX_LANE2[0]" */,

    config input SC_PMA_CH_INT_TX_LANE2[388:0] = 389'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH_INT_TX_LANE2[388],SC_PMA_CH_INT_TX_LANE2[387],SC_PMA_CH_INT_TX_LANE2[386],SC_PMA_CH_INT_TX_LANE2[385],SC_PMA_CH_INT_TX_LANE2[384],SC_PMA_CH_INT_TX_LANE2[383],SC_PMA_CH_INT_TX_LANE2[382],SC_PMA_CH_INT_TX_LANE2[381],SC_PMA_CH_INT_TX_LANE2[380],SC_PMA_CH_INT_TX_LANE2[379],SC_PMA_CH_INT_TX_LANE2[378],SC_PMA_CH_INT_TX_LANE2[377],SC_PMA_CH_INT_TX_LANE2[376],SC_PMA_CH_INT_TX_LANE2[375],SC_PMA_CH_INT_TX_LANE2[374],SC_PMA_CH_INT_TX_LANE2[373],SC_PMA_CH_INT_TX_LANE2[372],SC_PMA_CH_INT_TX_LANE2[371],SC_PMA_CH_INT_TX_LANE2[370],SC_PMA_CH_INT_TX_LANE2[369],SC_PMA_CH_INT_TX_LANE2[368],SC_PMA_CH_INT_TX_LANE2[367],SC_PMA_CH_INT_TX_LANE2[366],SC_PMA_CH_INT_TX_LANE2[365],SC_PMA_CH_INT_TX_LANE2[364],SC_PMA_CH_INT_TX_LANE2[363],SC_PMA_CH_INT_TX_LANE2[362],SC_PMA_CH_INT_TX_LANE2[361],SC_PMA_CH_INT_TX_LANE2[360],SC_PMA_CH_INT_TX_LANE2[359],SC_PMA_CH_INT_TX_LANE2[358],SC_PMA_CH_INT_TX_LANE2[357],SC_PMA_CH_INT_TX_LANE2[356],SC_PMA_CH_INT_TX_LANE2[355],SC_PMA_CH_INT_TX_LANE2[354],SC_PMA_CH_INT_TX_LANE2[353],SC_PMA_CH_INT_TX_LANE2[352],SC_PMA_CH_INT_TX_LANE2[351],SC_PMA_CH_INT_TX_LANE2[350],SC_PMA_CH_INT_TX_LANE2[349],SC_PMA_CH_INT_TX_LANE2[348],SC_PMA_CH_INT_TX_LANE2[347],SC_PMA_CH_INT_TX_LANE2[346],SC_PMA_CH_INT_TX_LANE2[345],SC_PMA_CH_INT_TX_LANE2[344],SC_PMA_CH_INT_TX_LANE2[343],SC_PMA_CH_INT_TX_LANE2[342],SC_PMA_CH_INT_TX_LANE2[341],SC_PMA_CH_INT_TX_LANE2[340],SC_PMA_CH_INT_TX_LANE2[339],SC_PMA_CH_INT_TX_LANE2[338],SC_PMA_CH_INT_TX_LANE2[337],SC_PMA_CH_INT_TX_LANE2[336],SC_PMA_CH_INT_TX_LANE2[335],SC_PMA_CH_INT_TX_LANE2[334],SC_PMA_CH_INT_TX_LANE2[333],SC_PMA_CH_INT_TX_LANE2[332],SC_PMA_CH_INT_TX_LANE2[331],SC_PMA_CH_INT_TX_LANE2[330],SC_PMA_CH_INT_TX_LANE2[329],SC_PMA_CH_INT_TX_LANE2[328],SC_PMA_CH_INT_TX_LANE2[327],SC_PMA_CH_INT_TX_LANE2[326],SC_PMA_CH_INT_TX_LANE2[325],SC_PMA_CH_INT_TX_LANE2[324],SC_PMA_CH_INT_TX_LANE2[323],SC_PMA_CH_INT_TX_LANE2[322],SC_PMA_CH_INT_TX_LANE2[321],SC_PMA_CH_INT_TX_LANE2[320],SC_PMA_CH_INT_TX_LANE2[319],SC_PMA_CH_INT_TX_LANE2[318],SC_PMA_CH_INT_TX_LANE2[317],SC_PMA_CH_INT_TX_LANE2[316],SC_PMA_CH_INT_TX_LANE2[315],SC_PMA_CH_INT_TX_LANE2[314],SC_PMA_CH_INT_TX_LANE2[313],SC_PMA_CH_INT_TX_LANE2[312],SC_PMA_CH_INT_TX_LANE2[311],SC_PMA_CH_INT_TX_LANE2[310],SC_PMA_CH_INT_TX_LANE2[309],SC_PMA_CH_INT_TX_LANE2[308],SC_PMA_CH_INT_TX_LANE2[307],SC_PMA_CH_INT_TX_LANE2[306],SC_PMA_CH_INT_TX_LANE2[305],SC_PMA_CH_INT_TX_LANE2[304],SC_PMA_CH_INT_TX_LANE2[303],SC_PMA_CH_INT_TX_LANE2[302],SC_PMA_CH_INT_TX_LANE2[301],SC_PMA_CH_INT_TX_LANE2[300],SC_PMA_CH_INT_TX_LANE2[299],SC_PMA_CH_INT_TX_LANE2[298],SC_PMA_CH_INT_TX_LANE2[297],SC_PMA_CH_INT_TX_LANE2[296],SC_PMA_CH_INT_TX_LANE2[295],SC_PMA_CH_INT_TX_LANE2[294],SC_PMA_CH_INT_TX_LANE2[293],SC_PMA_CH_INT_TX_LANE2[292],SC_PMA_CH_INT_TX_LANE2[291],SC_PMA_CH_INT_TX_LANE2[290],SC_PMA_CH_INT_TX_LANE2[289],SC_PMA_CH_INT_TX_LANE2[288],SC_PMA_CH_INT_TX_LANE2[287],SC_PMA_CH_INT_TX_LANE2[286],SC_PMA_CH_INT_TX_LANE2[285],SC_PMA_CH_INT_TX_LANE2[284],SC_PMA_CH_INT_TX_LANE2[283],SC_PMA_CH_INT_TX_LANE2[282],SC_PMA_CH_INT_TX_LANE2[281],SC_PMA_CH_INT_TX_LANE2[280],SC_PMA_CH_INT_TX_LANE2[279],SC_PMA_CH_INT_TX_LANE2[278],SC_PMA_CH_INT_TX_LANE2[277],SC_PMA_CH_INT_TX_LANE2[276],SC_PMA_CH_INT_TX_LANE2[275],SC_PMA_CH_INT_TX_LANE2[274],SC_PMA_CH_INT_TX_LANE2[273],SC_PMA_CH_INT_TX_LANE2[272],SC_PMA_CH_INT_TX_LANE2[271],SC_PMA_CH_INT_TX_LANE2[270],SC_PMA_CH_INT_TX_LANE2[269],SC_PMA_CH_INT_TX_LANE2[268],SC_PMA_CH_INT_TX_LANE2[267],SC_PMA_CH_INT_TX_LANE2[266],SC_PMA_CH_INT_TX_LANE2[265],SC_PMA_CH_INT_TX_LANE2[264],SC_PMA_CH_INT_TX_LANE2[263],SC_PMA_CH_INT_TX_LANE2[262],SC_PMA_CH_INT_TX_LANE2[261],SC_PMA_CH_INT_TX_LANE2[260],SC_PMA_CH_INT_TX_LANE2[259],SC_PMA_CH_INT_TX_LANE2[258],SC_PMA_CH_INT_TX_LANE2[257],SC_PMA_CH_INT_TX_LANE2[256],SC_PMA_CH_INT_TX_LANE2[255],SC_PMA_CH_INT_TX_LANE2[254],SC_PMA_CH_INT_TX_LANE2[253],SC_PMA_CH_INT_TX_LANE2[252],SC_PMA_CH_INT_TX_LANE2[251],SC_PMA_CH_INT_TX_LANE2[250],SC_PMA_CH_INT_TX_LANE2[249],SC_PMA_CH_INT_TX_LANE2[248],SC_PMA_CH_INT_TX_LANE2[247],SC_PMA_CH_INT_TX_LANE2[246],SC_PMA_CH_INT_TX_LANE2[245],SC_PMA_CH_INT_TX_LANE2[244],SC_PMA_CH_INT_TX_LANE2[243],SC_PMA_CH_INT_TX_LANE2[242],SC_PMA_CH_INT_TX_LANE2[241],SC_PMA_CH_INT_TX_LANE2[240],SC_PMA_CH_INT_TX_LANE2[239],SC_PMA_CH_INT_TX_LANE2[238],SC_PMA_CH_INT_TX_LANE2[237],SC_PMA_CH_INT_TX_LANE2[236],SC_PMA_CH_INT_TX_LANE2[235],SC_PMA_CH_INT_TX_LANE2[234],SC_PMA_CH_INT_TX_LANE2[233],SC_PMA_CH_INT_TX_LANE2[232],SC_PMA_CH_INT_TX_LANE2[231],SC_PMA_CH_INT_TX_LANE2[230],SC_PMA_CH_INT_TX_LANE2[229],SC_PMA_CH_INT_TX_LANE2[228],SC_PMA_CH_INT_TX_LANE2[227],SC_PMA_CH_INT_TX_LANE2[226],SC_PMA_CH_INT_TX_LANE2[225],SC_PMA_CH_INT_TX_LANE2[224],SC_PMA_CH_INT_TX_LANE2[223],SC_PMA_CH_INT_TX_LANE2[222],SC_PMA_CH_INT_TX_LANE2[221],SC_PMA_CH_INT_TX_LANE2[220],SC_PMA_CH_INT_TX_LANE2[219],SC_PMA_CH_INT_TX_LANE2[218],SC_PMA_CH_INT_TX_LANE2[217],SC_PMA_CH_INT_TX_LANE2[216],SC_PMA_CH_INT_TX_LANE2[215],SC_PMA_CH_INT_TX_LANE2[214],SC_PMA_CH_INT_TX_LANE2[213],SC_PMA_CH_INT_TX_LANE2[212],SC_PMA_CH_INT_TX_LANE2[211],SC_PMA_CH_INT_TX_LANE2[210],SC_PMA_CH_INT_TX_LANE2[209],SC_PMA_CH_INT_TX_LANE2[208],SC_PMA_CH_INT_TX_LANE2[207],SC_PMA_CH_INT_TX_LANE2[206],SC_PMA_CH_INT_TX_LANE2[205],SC_PMA_CH_INT_TX_LANE2[204],SC_PMA_CH_INT_TX_LANE2[203],SC_PMA_CH_INT_TX_LANE2[202],SC_PMA_CH_INT_TX_LANE2[201],SC_PMA_CH_INT_TX_LANE2[200],SC_PMA_CH_INT_TX_LANE2[199],SC_PMA_CH_INT_TX_LANE2[198],SC_PMA_CH_INT_TX_LANE2[197],SC_PMA_CH_INT_TX_LANE2[196],SC_PMA_CH_INT_TX_LANE2[195],SC_PMA_CH_INT_TX_LANE2[194],SC_PMA_CH_INT_TX_LANE2[193],SC_PMA_CH_INT_TX_LANE2[192],SC_PMA_CH_INT_TX_LANE2[191],SC_PMA_CH_INT_TX_LANE2[190],SC_PMA_CH_INT_TX_LANE2[189],SC_PMA_CH_INT_TX_LANE2[188],SC_PMA_CH_INT_TX_LANE2[187],SC_PMA_CH_INT_TX_LANE2[186],SC_PMA_CH_INT_TX_LANE2[185],SC_PMA_CH_INT_TX_LANE2[184],SC_PMA_CH_INT_TX_LANE2[183],SC_PMA_CH_INT_TX_LANE2[182],SC_PMA_CH_INT_TX_LANE2[181],SC_PMA_CH_INT_TX_LANE2[180],SC_PMA_CH_INT_TX_LANE2[179],SC_PMA_CH_INT_TX_LANE2[178],SC_PMA_CH_INT_TX_LANE2[177],SC_PMA_CH_INT_TX_LANE2[176],SC_PMA_CH_INT_TX_LANE2[175],SC_PMA_CH_INT_TX_LANE2[174],SC_PMA_CH_INT_TX_LANE2[173],SC_PMA_CH_INT_TX_LANE2[172],SC_PMA_CH_INT_TX_LANE2[171],SC_PMA_CH_INT_TX_LANE2[170],SC_PMA_CH_INT_TX_LANE2[169],SC_PMA_CH_INT_TX_LANE2[168],SC_PMA_CH_INT_TX_LANE2[167],SC_PMA_CH_INT_TX_LANE2[166],SC_PMA_CH_INT_TX_LANE2[165],SC_PMA_CH_INT_TX_LANE2[164],SC_PMA_CH_INT_TX_LANE2[163],SC_PMA_CH_INT_TX_LANE2[162],SC_PMA_CH_INT_TX_LANE2[161],SC_PMA_CH_INT_TX_LANE2[160],SC_PMA_CH_INT_TX_LANE2[159],SC_PMA_CH_INT_TX_LANE2[158],SC_PMA_CH_INT_TX_LANE2[157],SC_PMA_CH_INT_TX_LANE2[156],SC_PMA_CH_INT_TX_LANE2[155],SC_PMA_CH_INT_TX_LANE2[154],SC_PMA_CH_INT_TX_LANE2[153],SC_PMA_CH_INT_TX_LANE2[152],SC_PMA_CH_INT_TX_LANE2[151],SC_PMA_CH_INT_TX_LANE2[150],SC_PMA_CH_INT_TX_LANE2[149],SC_PMA_CH_INT_TX_LANE2[148],SC_PMA_CH_INT_TX_LANE2[147],SC_PMA_CH_INT_TX_LANE2[146],SC_PMA_CH_INT_TX_LANE2[145],SC_PMA_CH_INT_TX_LANE2[144],SC_PMA_CH_INT_TX_LANE2[143],SC_PMA_CH_INT_TX_LANE2[142],SC_PMA_CH_INT_TX_LANE2[141],SC_PMA_CH_INT_TX_LANE2[140],SC_PMA_CH_INT_TX_LANE2[139],SC_PMA_CH_INT_TX_LANE2[138],SC_PMA_CH_INT_TX_LANE2[137],SC_PMA_CH_INT_TX_LANE2[136],SC_PMA_CH_INT_TX_LANE2[135],SC_PMA_CH_INT_TX_LANE2[134],SC_PMA_CH_INT_TX_LANE2[133],SC_PMA_CH_INT_TX_LANE2[132],SC_PMA_CH_INT_TX_LANE2[131],SC_PMA_CH_INT_TX_LANE2[130],SC_PMA_CH_INT_TX_LANE2[129],SC_PMA_CH_INT_TX_LANE2[128],SC_PMA_CH_INT_TX_LANE2[127],SC_PMA_CH_INT_TX_LANE2[126],SC_PMA_CH_INT_TX_LANE2[125],SC_PMA_CH_INT_TX_LANE2[124],SC_PMA_CH_INT_TX_LANE2[123],SC_PMA_CH_INT_TX_LANE2[122],SC_PMA_CH_INT_TX_LANE2[121],SC_PMA_CH_INT_TX_LANE2[120],SC_PMA_CH_INT_TX_LANE2[119],SC_PMA_CH_INT_TX_LANE2[118],SC_PMA_CH_INT_TX_LANE2[117],SC_PMA_CH_INT_TX_LANE2[116],SC_PMA_CH_INT_TX_LANE2[115],SC_PMA_CH_INT_TX_LANE2[114],SC_PMA_CH_INT_TX_LANE2[113],SC_PMA_CH_INT_TX_LANE2[112],SC_PMA_CH_INT_TX_LANE2[111],SC_PMA_CH_INT_TX_LANE2[110],SC_PMA_CH_INT_TX_LANE2[109],SC_PMA_CH_INT_TX_LANE2[108],SC_PMA_CH_INT_TX_LANE2[107],SC_PMA_CH_INT_TX_LANE2[106],SC_PMA_CH_INT_TX_LANE2[105],SC_PMA_CH_INT_TX_LANE2[104],SC_PMA_CH_INT_TX_LANE2[103],SC_PMA_CH_INT_TX_LANE2[102],SC_PMA_CH_INT_TX_LANE2[101],SC_PMA_CH_INT_TX_LANE2[100],SC_PMA_CH_INT_TX_LANE2[99],SC_PMA_CH_INT_TX_LANE2[98],SC_PMA_CH_INT_TX_LANE2[97],SC_PMA_CH_INT_TX_LANE2[96],SC_PMA_CH_INT_TX_LANE2[95],SC_PMA_CH_INT_TX_LANE2[94],SC_PMA_CH_INT_TX_LANE2[93],SC_PMA_CH_INT_TX_LANE2[92],SC_PMA_CH_INT_TX_LANE2[91],SC_PMA_CH_INT_TX_LANE2[90],SC_PMA_CH_INT_TX_LANE2[89],SC_PMA_CH_INT_TX_LANE2[88],SC_PMA_CH_INT_TX_LANE2[87],SC_PMA_CH_INT_TX_LANE2[86],SC_PMA_CH_INT_TX_LANE2[85],SC_PMA_CH_INT_TX_LANE2[84],SC_PMA_CH_INT_TX_LANE2[83],SC_PMA_CH_INT_TX_LANE2[82],SC_PMA_CH_INT_TX_LANE2[81],SC_PMA_CH_INT_TX_LANE2[80],SC_PMA_CH_INT_TX_LANE2[79],SC_PMA_CH_INT_TX_LANE2[78],SC_PMA_CH_INT_TX_LANE2[77],SC_PMA_CH_INT_TX_LANE2[76],SC_PMA_CH_INT_TX_LANE2[75],SC_PMA_CH_INT_TX_LANE2[74],SC_PMA_CH_INT_TX_LANE2[73],SC_PMA_CH_INT_TX_LANE2[72],SC_PMA_CH_INT_TX_LANE2[71],SC_PMA_CH_INT_TX_LANE2[70],SC_PMA_CH_INT_TX_LANE2[69],SC_PMA_CH_INT_TX_LANE2[68],SC_PMA_CH_INT_TX_LANE2[67],SC_PMA_CH_INT_TX_LANE2[66],SC_PMA_CH_INT_TX_LANE2[65],SC_PMA_CH_INT_TX_LANE2[64],SC_PMA_CH_INT_TX_LANE2[63],SC_PMA_CH_INT_TX_LANE2[62],SC_PMA_CH_INT_TX_LANE2[61],SC_PMA_CH_INT_TX_LANE2[60],SC_PMA_CH_INT_TX_LANE2[59],SC_PMA_CH_INT_TX_LANE2[58],SC_PMA_CH_INT_TX_LANE2[57],SC_PMA_CH_INT_TX_LANE2[56],SC_PMA_CH_INT_TX_LANE2[55],SC_PMA_CH_INT_TX_LANE2[54],SC_PMA_CH_INT_TX_LANE2[53],SC_PMA_CH_INT_TX_LANE2[52],SC_PMA_CH_INT_TX_LANE2[51],SC_PMA_CH_INT_TX_LANE2[50],SC_PMA_CH_INT_TX_LANE2[49],SC_PMA_CH_INT_TX_LANE2[48],SC_PMA_CH_INT_TX_LANE2[47],SC_PMA_CH_INT_TX_LANE2[46],SC_PMA_CH_INT_TX_LANE2[45],SC_PMA_CH_INT_TX_LANE2[44],SC_PMA_CH_INT_TX_LANE2[43],SC_PMA_CH_INT_TX_LANE2[42],SC_PMA_CH_INT_TX_LANE2[41],SC_PMA_CH_INT_TX_LANE2[40],SC_PMA_CH_INT_TX_LANE2[39],SC_PMA_CH_INT_TX_LANE2[38],SC_PMA_CH_INT_TX_LANE2[37],SC_PMA_CH_INT_TX_LANE2[36],SC_PMA_CH_INT_TX_LANE2[35],SC_PMA_CH_INT_TX_LANE2[34],SC_PMA_CH_INT_TX_LANE2[33],SC_PMA_CH_INT_TX_LANE2[32],SC_PMA_CH_INT_TX_LANE2[31],SC_PMA_CH_INT_TX_LANE2[30],SC_PMA_CH_INT_TX_LANE2[29],SC_PMA_CH_INT_TX_LANE2[28],SC_PMA_CH_INT_TX_LANE2[27],SC_PMA_CH_INT_TX_LANE2[26],SC_PMA_CH_INT_TX_LANE2[25],SC_PMA_CH_INT_TX_LANE2[24],SC_PMA_CH_INT_TX_LANE2[23],SC_PMA_CH_INT_TX_LANE2[22],SC_PMA_CH_INT_TX_LANE2[21],SC_PMA_CH_INT_TX_LANE2[20],SC_PMA_CH_INT_TX_LANE2[19],SC_PMA_CH_INT_TX_LANE2[18],SC_PMA_CH_INT_TX_LANE2[17],SC_PMA_CH_INT_TX_LANE2[16],SC_PMA_CH_INT_TX_LANE2[15],SC_PMA_CH_INT_TX_LANE2[14],SC_PMA_CH_INT_TX_LANE2[13],SC_PMA_CH_INT_TX_LANE2[12],SC_PMA_CH_INT_TX_LANE2[11],SC_PMA_CH_INT_TX_LANE2[10],SC_PMA_CH_INT_TX_LANE2[9],SC_PMA_CH_INT_TX_LANE2[8],SC_PMA_CH_INT_TX_LANE2[7],SC_PMA_CH_INT_TX_LANE2[6],SC_PMA_CH_INT_TX_LANE2[5],SC_PMA_CH_INT_TX_LANE2[4],SC_PMA_CH_INT_TX_LANE2[3],SC_PMA_CH_INT_TX_LANE2[2],SC_PMA_CH_INT_TX_LANE2[1],SC_PMA_CH_INT_TX_LANE2[0]" */,

    config input SC_PMA_CH_INT_RX_LANE3[398:0] = 399'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH_INT_RX_LANE3[398],SC_PMA_CH_INT_RX_LANE3[397],SC_PMA_CH_INT_RX_LANE3[396],SC_PMA_CH_INT_RX_LANE3[395],SC_PMA_CH_INT_RX_LANE3[394],SC_PMA_CH_INT_RX_LANE3[393],SC_PMA_CH_INT_RX_LANE3[392],SC_PMA_CH_INT_RX_LANE3[391],SC_PMA_CH_INT_RX_LANE3[390],SC_PMA_CH_INT_RX_LANE3[389],SC_PMA_CH_INT_RX_LANE3[388],SC_PMA_CH_INT_RX_LANE3[387],SC_PMA_CH_INT_RX_LANE3[386],SC_PMA_CH_INT_RX_LANE3[385],SC_PMA_CH_INT_RX_LANE3[384],SC_PMA_CH_INT_RX_LANE3[383],SC_PMA_CH_INT_RX_LANE3[382],SC_PMA_CH_INT_RX_LANE3[381],SC_PMA_CH_INT_RX_LANE3[380],SC_PMA_CH_INT_RX_LANE3[379],SC_PMA_CH_INT_RX_LANE3[378],SC_PMA_CH_INT_RX_LANE3[377],SC_PMA_CH_INT_RX_LANE3[376],SC_PMA_CH_INT_RX_LANE3[375],SC_PMA_CH_INT_RX_LANE3[374],SC_PMA_CH_INT_RX_LANE3[373],SC_PMA_CH_INT_RX_LANE3[372],SC_PMA_CH_INT_RX_LANE3[371],SC_PMA_CH_INT_RX_LANE3[370],SC_PMA_CH_INT_RX_LANE3[369],SC_PMA_CH_INT_RX_LANE3[368],SC_PMA_CH_INT_RX_LANE3[367],SC_PMA_CH_INT_RX_LANE3[366],SC_PMA_CH_INT_RX_LANE3[365],SC_PMA_CH_INT_RX_LANE3[364],SC_PMA_CH_INT_RX_LANE3[363],SC_PMA_CH_INT_RX_LANE3[362],SC_PMA_CH_INT_RX_LANE3[361],SC_PMA_CH_INT_RX_LANE3[360],SC_PMA_CH_INT_RX_LANE3[359],SC_PMA_CH_INT_RX_LANE3[358],SC_PMA_CH_INT_RX_LANE3[357],SC_PMA_CH_INT_RX_LANE3[356],SC_PMA_CH_INT_RX_LANE3[355],SC_PMA_CH_INT_RX_LANE3[354],SC_PMA_CH_INT_RX_LANE3[353],SC_PMA_CH_INT_RX_LANE3[352],SC_PMA_CH_INT_RX_LANE3[351],SC_PMA_CH_INT_RX_LANE3[350],SC_PMA_CH_INT_RX_LANE3[349],SC_PMA_CH_INT_RX_LANE3[348],SC_PMA_CH_INT_RX_LANE3[347],SC_PMA_CH_INT_RX_LANE3[346],SC_PMA_CH_INT_RX_LANE3[345],SC_PMA_CH_INT_RX_LANE3[344],SC_PMA_CH_INT_RX_LANE3[343],SC_PMA_CH_INT_RX_LANE3[342],SC_PMA_CH_INT_RX_LANE3[341],SC_PMA_CH_INT_RX_LANE3[340],SC_PMA_CH_INT_RX_LANE3[339],SC_PMA_CH_INT_RX_LANE3[338],SC_PMA_CH_INT_RX_LANE3[337],SC_PMA_CH_INT_RX_LANE3[336],SC_PMA_CH_INT_RX_LANE3[335],SC_PMA_CH_INT_RX_LANE3[334],SC_PMA_CH_INT_RX_LANE3[333],SC_PMA_CH_INT_RX_LANE3[332],SC_PMA_CH_INT_RX_LANE3[331],SC_PMA_CH_INT_RX_LANE3[330],SC_PMA_CH_INT_RX_LANE3[329],SC_PMA_CH_INT_RX_LANE3[328],SC_PMA_CH_INT_RX_LANE3[327],SC_PMA_CH_INT_RX_LANE3[326],SC_PMA_CH_INT_RX_LANE3[325],SC_PMA_CH_INT_RX_LANE3[324],SC_PMA_CH_INT_RX_LANE3[323],SC_PMA_CH_INT_RX_LANE3[322],SC_PMA_CH_INT_RX_LANE3[321],SC_PMA_CH_INT_RX_LANE3[320],SC_PMA_CH_INT_RX_LANE3[319],SC_PMA_CH_INT_RX_LANE3[318],SC_PMA_CH_INT_RX_LANE3[317],SC_PMA_CH_INT_RX_LANE3[316],SC_PMA_CH_INT_RX_LANE3[315],SC_PMA_CH_INT_RX_LANE3[314],SC_PMA_CH_INT_RX_LANE3[313],SC_PMA_CH_INT_RX_LANE3[312],SC_PMA_CH_INT_RX_LANE3[311],SC_PMA_CH_INT_RX_LANE3[310],SC_PMA_CH_INT_RX_LANE3[309],SC_PMA_CH_INT_RX_LANE3[308],SC_PMA_CH_INT_RX_LANE3[307],SC_PMA_CH_INT_RX_LANE3[306],SC_PMA_CH_INT_RX_LANE3[305],SC_PMA_CH_INT_RX_LANE3[304],SC_PMA_CH_INT_RX_LANE3[303],SC_PMA_CH_INT_RX_LANE3[302],SC_PMA_CH_INT_RX_LANE3[301],SC_PMA_CH_INT_RX_LANE3[300],SC_PMA_CH_INT_RX_LANE3[299],SC_PMA_CH_INT_RX_LANE3[298],SC_PMA_CH_INT_RX_LANE3[297],SC_PMA_CH_INT_RX_LANE3[296],SC_PMA_CH_INT_RX_LANE3[295],SC_PMA_CH_INT_RX_LANE3[294],SC_PMA_CH_INT_RX_LANE3[293],SC_PMA_CH_INT_RX_LANE3[292],SC_PMA_CH_INT_RX_LANE3[291],SC_PMA_CH_INT_RX_LANE3[290],SC_PMA_CH_INT_RX_LANE3[289],SC_PMA_CH_INT_RX_LANE3[288],SC_PMA_CH_INT_RX_LANE3[287],SC_PMA_CH_INT_RX_LANE3[286],SC_PMA_CH_INT_RX_LANE3[285],SC_PMA_CH_INT_RX_LANE3[284],SC_PMA_CH_INT_RX_LANE3[283],SC_PMA_CH_INT_RX_LANE3[282],SC_PMA_CH_INT_RX_LANE3[281],SC_PMA_CH_INT_RX_LANE3[280],SC_PMA_CH_INT_RX_LANE3[279],SC_PMA_CH_INT_RX_LANE3[278],SC_PMA_CH_INT_RX_LANE3[277],SC_PMA_CH_INT_RX_LANE3[276],SC_PMA_CH_INT_RX_LANE3[275],SC_PMA_CH_INT_RX_LANE3[274],SC_PMA_CH_INT_RX_LANE3[273],SC_PMA_CH_INT_RX_LANE3[272],SC_PMA_CH_INT_RX_LANE3[271],SC_PMA_CH_INT_RX_LANE3[270],SC_PMA_CH_INT_RX_LANE3[269],SC_PMA_CH_INT_RX_LANE3[268],SC_PMA_CH_INT_RX_LANE3[267],SC_PMA_CH_INT_RX_LANE3[266],SC_PMA_CH_INT_RX_LANE3[265],SC_PMA_CH_INT_RX_LANE3[264],SC_PMA_CH_INT_RX_LANE3[263],SC_PMA_CH_INT_RX_LANE3[262],SC_PMA_CH_INT_RX_LANE3[261],SC_PMA_CH_INT_RX_LANE3[260],SC_PMA_CH_INT_RX_LANE3[259],SC_PMA_CH_INT_RX_LANE3[258],SC_PMA_CH_INT_RX_LANE3[257],SC_PMA_CH_INT_RX_LANE3[256],SC_PMA_CH_INT_RX_LANE3[255],SC_PMA_CH_INT_RX_LANE3[254],SC_PMA_CH_INT_RX_LANE3[253],SC_PMA_CH_INT_RX_LANE3[252],SC_PMA_CH_INT_RX_LANE3[251],SC_PMA_CH_INT_RX_LANE3[250],SC_PMA_CH_INT_RX_LANE3[249],SC_PMA_CH_INT_RX_LANE3[248],SC_PMA_CH_INT_RX_LANE3[247],SC_PMA_CH_INT_RX_LANE3[246],SC_PMA_CH_INT_RX_LANE3[245],SC_PMA_CH_INT_RX_LANE3[244],SC_PMA_CH_INT_RX_LANE3[243],SC_PMA_CH_INT_RX_LANE3[242],SC_PMA_CH_INT_RX_LANE3[241],SC_PMA_CH_INT_RX_LANE3[240],SC_PMA_CH_INT_RX_LANE3[239],SC_PMA_CH_INT_RX_LANE3[238],SC_PMA_CH_INT_RX_LANE3[237],SC_PMA_CH_INT_RX_LANE3[236],SC_PMA_CH_INT_RX_LANE3[235],SC_PMA_CH_INT_RX_LANE3[234],SC_PMA_CH_INT_RX_LANE3[233],SC_PMA_CH_INT_RX_LANE3[232],SC_PMA_CH_INT_RX_LANE3[231],SC_PMA_CH_INT_RX_LANE3[230],SC_PMA_CH_INT_RX_LANE3[229],SC_PMA_CH_INT_RX_LANE3[228],SC_PMA_CH_INT_RX_LANE3[227],SC_PMA_CH_INT_RX_LANE3[226],SC_PMA_CH_INT_RX_LANE3[225],SC_PMA_CH_INT_RX_LANE3[224],SC_PMA_CH_INT_RX_LANE3[223],SC_PMA_CH_INT_RX_LANE3[222],SC_PMA_CH_INT_RX_LANE3[221],SC_PMA_CH_INT_RX_LANE3[220],SC_PMA_CH_INT_RX_LANE3[219],SC_PMA_CH_INT_RX_LANE3[218],SC_PMA_CH_INT_RX_LANE3[217],SC_PMA_CH_INT_RX_LANE3[216],SC_PMA_CH_INT_RX_LANE3[215],SC_PMA_CH_INT_RX_LANE3[214],SC_PMA_CH_INT_RX_LANE3[213],SC_PMA_CH_INT_RX_LANE3[212],SC_PMA_CH_INT_RX_LANE3[211],SC_PMA_CH_INT_RX_LANE3[210],SC_PMA_CH_INT_RX_LANE3[209],SC_PMA_CH_INT_RX_LANE3[208],SC_PMA_CH_INT_RX_LANE3[207],SC_PMA_CH_INT_RX_LANE3[206],SC_PMA_CH_INT_RX_LANE3[205],SC_PMA_CH_INT_RX_LANE3[204],SC_PMA_CH_INT_RX_LANE3[203],SC_PMA_CH_INT_RX_LANE3[202],SC_PMA_CH_INT_RX_LANE3[201],SC_PMA_CH_INT_RX_LANE3[200],SC_PMA_CH_INT_RX_LANE3[199],SC_PMA_CH_INT_RX_LANE3[198],SC_PMA_CH_INT_RX_LANE3[197],SC_PMA_CH_INT_RX_LANE3[196],SC_PMA_CH_INT_RX_LANE3[195],SC_PMA_CH_INT_RX_LANE3[194],SC_PMA_CH_INT_RX_LANE3[193],SC_PMA_CH_INT_RX_LANE3[192],SC_PMA_CH_INT_RX_LANE3[191],SC_PMA_CH_INT_RX_LANE3[190],SC_PMA_CH_INT_RX_LANE3[189],SC_PMA_CH_INT_RX_LANE3[188],SC_PMA_CH_INT_RX_LANE3[187],SC_PMA_CH_INT_RX_LANE3[186],SC_PMA_CH_INT_RX_LANE3[185],SC_PMA_CH_INT_RX_LANE3[184],SC_PMA_CH_INT_RX_LANE3[183],SC_PMA_CH_INT_RX_LANE3[182],SC_PMA_CH_INT_RX_LANE3[181],SC_PMA_CH_INT_RX_LANE3[180],SC_PMA_CH_INT_RX_LANE3[179],SC_PMA_CH_INT_RX_LANE3[178],SC_PMA_CH_INT_RX_LANE3[177],SC_PMA_CH_INT_RX_LANE3[176],SC_PMA_CH_INT_RX_LANE3[175],SC_PMA_CH_INT_RX_LANE3[174],SC_PMA_CH_INT_RX_LANE3[173],SC_PMA_CH_INT_RX_LANE3[172],SC_PMA_CH_INT_RX_LANE3[171],SC_PMA_CH_INT_RX_LANE3[170],SC_PMA_CH_INT_RX_LANE3[169],SC_PMA_CH_INT_RX_LANE3[168],SC_PMA_CH_INT_RX_LANE3[167],SC_PMA_CH_INT_RX_LANE3[166],SC_PMA_CH_INT_RX_LANE3[165],SC_PMA_CH_INT_RX_LANE3[164],SC_PMA_CH_INT_RX_LANE3[163],SC_PMA_CH_INT_RX_LANE3[162],SC_PMA_CH_INT_RX_LANE3[161],SC_PMA_CH_INT_RX_LANE3[160],SC_PMA_CH_INT_RX_LANE3[159],SC_PMA_CH_INT_RX_LANE3[158],SC_PMA_CH_INT_RX_LANE3[157],SC_PMA_CH_INT_RX_LANE3[156],SC_PMA_CH_INT_RX_LANE3[155],SC_PMA_CH_INT_RX_LANE3[154],SC_PMA_CH_INT_RX_LANE3[153],SC_PMA_CH_INT_RX_LANE3[152],SC_PMA_CH_INT_RX_LANE3[151],SC_PMA_CH_INT_RX_LANE3[150],SC_PMA_CH_INT_RX_LANE3[149],SC_PMA_CH_INT_RX_LANE3[148],SC_PMA_CH_INT_RX_LANE3[147],SC_PMA_CH_INT_RX_LANE3[146],SC_PMA_CH_INT_RX_LANE3[145],SC_PMA_CH_INT_RX_LANE3[144],SC_PMA_CH_INT_RX_LANE3[143],SC_PMA_CH_INT_RX_LANE3[142],SC_PMA_CH_INT_RX_LANE3[141],SC_PMA_CH_INT_RX_LANE3[140],SC_PMA_CH_INT_RX_LANE3[139],SC_PMA_CH_INT_RX_LANE3[138],SC_PMA_CH_INT_RX_LANE3[137],SC_PMA_CH_INT_RX_LANE3[136],SC_PMA_CH_INT_RX_LANE3[135],SC_PMA_CH_INT_RX_LANE3[134],SC_PMA_CH_INT_RX_LANE3[133],SC_PMA_CH_INT_RX_LANE3[132],SC_PMA_CH_INT_RX_LANE3[131],SC_PMA_CH_INT_RX_LANE3[130],SC_PMA_CH_INT_RX_LANE3[129],SC_PMA_CH_INT_RX_LANE3[128],SC_PMA_CH_INT_RX_LANE3[127],SC_PMA_CH_INT_RX_LANE3[126],SC_PMA_CH_INT_RX_LANE3[125],SC_PMA_CH_INT_RX_LANE3[124],SC_PMA_CH_INT_RX_LANE3[123],SC_PMA_CH_INT_RX_LANE3[122],SC_PMA_CH_INT_RX_LANE3[121],SC_PMA_CH_INT_RX_LANE3[120],SC_PMA_CH_INT_RX_LANE3[119],SC_PMA_CH_INT_RX_LANE3[118],SC_PMA_CH_INT_RX_LANE3[117],SC_PMA_CH_INT_RX_LANE3[116],SC_PMA_CH_INT_RX_LANE3[115],SC_PMA_CH_INT_RX_LANE3[114],SC_PMA_CH_INT_RX_LANE3[113],SC_PMA_CH_INT_RX_LANE3[112],SC_PMA_CH_INT_RX_LANE3[111],SC_PMA_CH_INT_RX_LANE3[110],SC_PMA_CH_INT_RX_LANE3[109],SC_PMA_CH_INT_RX_LANE3[108],SC_PMA_CH_INT_RX_LANE3[107],SC_PMA_CH_INT_RX_LANE3[106],SC_PMA_CH_INT_RX_LANE3[105],SC_PMA_CH_INT_RX_LANE3[104],SC_PMA_CH_INT_RX_LANE3[103],SC_PMA_CH_INT_RX_LANE3[102],SC_PMA_CH_INT_RX_LANE3[101],SC_PMA_CH_INT_RX_LANE3[100],SC_PMA_CH_INT_RX_LANE3[99],SC_PMA_CH_INT_RX_LANE3[98],SC_PMA_CH_INT_RX_LANE3[97],SC_PMA_CH_INT_RX_LANE3[96],SC_PMA_CH_INT_RX_LANE3[95],SC_PMA_CH_INT_RX_LANE3[94],SC_PMA_CH_INT_RX_LANE3[93],SC_PMA_CH_INT_RX_LANE3[92],SC_PMA_CH_INT_RX_LANE3[91],SC_PMA_CH_INT_RX_LANE3[90],SC_PMA_CH_INT_RX_LANE3[89],SC_PMA_CH_INT_RX_LANE3[88],SC_PMA_CH_INT_RX_LANE3[87],SC_PMA_CH_INT_RX_LANE3[86],SC_PMA_CH_INT_RX_LANE3[85],SC_PMA_CH_INT_RX_LANE3[84],SC_PMA_CH_INT_RX_LANE3[83],SC_PMA_CH_INT_RX_LANE3[82],SC_PMA_CH_INT_RX_LANE3[81],SC_PMA_CH_INT_RX_LANE3[80],SC_PMA_CH_INT_RX_LANE3[79],SC_PMA_CH_INT_RX_LANE3[78],SC_PMA_CH_INT_RX_LANE3[77],SC_PMA_CH_INT_RX_LANE3[76],SC_PMA_CH_INT_RX_LANE3[75],SC_PMA_CH_INT_RX_LANE3[74],SC_PMA_CH_INT_RX_LANE3[73],SC_PMA_CH_INT_RX_LANE3[72],SC_PMA_CH_INT_RX_LANE3[71],SC_PMA_CH_INT_RX_LANE3[70],SC_PMA_CH_INT_RX_LANE3[69],SC_PMA_CH_INT_RX_LANE3[68],SC_PMA_CH_INT_RX_LANE3[67],SC_PMA_CH_INT_RX_LANE3[66],SC_PMA_CH_INT_RX_LANE3[65],SC_PMA_CH_INT_RX_LANE3[64],SC_PMA_CH_INT_RX_LANE3[63],SC_PMA_CH_INT_RX_LANE3[62],SC_PMA_CH_INT_RX_LANE3[61],SC_PMA_CH_INT_RX_LANE3[60],SC_PMA_CH_INT_RX_LANE3[59],SC_PMA_CH_INT_RX_LANE3[58],SC_PMA_CH_INT_RX_LANE3[57],SC_PMA_CH_INT_RX_LANE3[56],SC_PMA_CH_INT_RX_LANE3[55],SC_PMA_CH_INT_RX_LANE3[54],SC_PMA_CH_INT_RX_LANE3[53],SC_PMA_CH_INT_RX_LANE3[52],SC_PMA_CH_INT_RX_LANE3[51],SC_PMA_CH_INT_RX_LANE3[50],SC_PMA_CH_INT_RX_LANE3[49],SC_PMA_CH_INT_RX_LANE3[48],SC_PMA_CH_INT_RX_LANE3[47],SC_PMA_CH_INT_RX_LANE3[46],SC_PMA_CH_INT_RX_LANE3[45],SC_PMA_CH_INT_RX_LANE3[44],SC_PMA_CH_INT_RX_LANE3[43],SC_PMA_CH_INT_RX_LANE3[42],SC_PMA_CH_INT_RX_LANE3[41],SC_PMA_CH_INT_RX_LANE3[40],SC_PMA_CH_INT_RX_LANE3[39],SC_PMA_CH_INT_RX_LANE3[38],SC_PMA_CH_INT_RX_LANE3[37],SC_PMA_CH_INT_RX_LANE3[36],SC_PMA_CH_INT_RX_LANE3[35],SC_PMA_CH_INT_RX_LANE3[34],SC_PMA_CH_INT_RX_LANE3[33],SC_PMA_CH_INT_RX_LANE3[32],SC_PMA_CH_INT_RX_LANE3[31],SC_PMA_CH_INT_RX_LANE3[30],SC_PMA_CH_INT_RX_LANE3[29],SC_PMA_CH_INT_RX_LANE3[28],SC_PMA_CH_INT_RX_LANE3[27],SC_PMA_CH_INT_RX_LANE3[26],SC_PMA_CH_INT_RX_LANE3[25],SC_PMA_CH_INT_RX_LANE3[24],SC_PMA_CH_INT_RX_LANE3[23],SC_PMA_CH_INT_RX_LANE3[22],SC_PMA_CH_INT_RX_LANE3[21],SC_PMA_CH_INT_RX_LANE3[20],SC_PMA_CH_INT_RX_LANE3[19],SC_PMA_CH_INT_RX_LANE3[18],SC_PMA_CH_INT_RX_LANE3[17],SC_PMA_CH_INT_RX_LANE3[16],SC_PMA_CH_INT_RX_LANE3[15],SC_PMA_CH_INT_RX_LANE3[14],SC_PMA_CH_INT_RX_LANE3[13],SC_PMA_CH_INT_RX_LANE3[12],SC_PMA_CH_INT_RX_LANE3[11],SC_PMA_CH_INT_RX_LANE3[10],SC_PMA_CH_INT_RX_LANE3[9],SC_PMA_CH_INT_RX_LANE3[8],SC_PMA_CH_INT_RX_LANE3[7],SC_PMA_CH_INT_RX_LANE3[6],SC_PMA_CH_INT_RX_LANE3[5],SC_PMA_CH_INT_RX_LANE3[4],SC_PMA_CH_INT_RX_LANE3[3],SC_PMA_CH_INT_RX_LANE3[2],SC_PMA_CH_INT_RX_LANE3[1],SC_PMA_CH_INT_RX_LANE3[0]" */,

    config input SC_PMA_CH_INT_TX_LANE3[388:0] = 389'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH_INT_TX_LANE3[388],SC_PMA_CH_INT_TX_LANE3[387],SC_PMA_CH_INT_TX_LANE3[386],SC_PMA_CH_INT_TX_LANE3[385],SC_PMA_CH_INT_TX_LANE3[384],SC_PMA_CH_INT_TX_LANE3[383],SC_PMA_CH_INT_TX_LANE3[382],SC_PMA_CH_INT_TX_LANE3[381],SC_PMA_CH_INT_TX_LANE3[380],SC_PMA_CH_INT_TX_LANE3[379],SC_PMA_CH_INT_TX_LANE3[378],SC_PMA_CH_INT_TX_LANE3[377],SC_PMA_CH_INT_TX_LANE3[376],SC_PMA_CH_INT_TX_LANE3[375],SC_PMA_CH_INT_TX_LANE3[374],SC_PMA_CH_INT_TX_LANE3[373],SC_PMA_CH_INT_TX_LANE3[372],SC_PMA_CH_INT_TX_LANE3[371],SC_PMA_CH_INT_TX_LANE3[370],SC_PMA_CH_INT_TX_LANE3[369],SC_PMA_CH_INT_TX_LANE3[368],SC_PMA_CH_INT_TX_LANE3[367],SC_PMA_CH_INT_TX_LANE3[366],SC_PMA_CH_INT_TX_LANE3[365],SC_PMA_CH_INT_TX_LANE3[364],SC_PMA_CH_INT_TX_LANE3[363],SC_PMA_CH_INT_TX_LANE3[362],SC_PMA_CH_INT_TX_LANE3[361],SC_PMA_CH_INT_TX_LANE3[360],SC_PMA_CH_INT_TX_LANE3[359],SC_PMA_CH_INT_TX_LANE3[358],SC_PMA_CH_INT_TX_LANE3[357],SC_PMA_CH_INT_TX_LANE3[356],SC_PMA_CH_INT_TX_LANE3[355],SC_PMA_CH_INT_TX_LANE3[354],SC_PMA_CH_INT_TX_LANE3[353],SC_PMA_CH_INT_TX_LANE3[352],SC_PMA_CH_INT_TX_LANE3[351],SC_PMA_CH_INT_TX_LANE3[350],SC_PMA_CH_INT_TX_LANE3[349],SC_PMA_CH_INT_TX_LANE3[348],SC_PMA_CH_INT_TX_LANE3[347],SC_PMA_CH_INT_TX_LANE3[346],SC_PMA_CH_INT_TX_LANE3[345],SC_PMA_CH_INT_TX_LANE3[344],SC_PMA_CH_INT_TX_LANE3[343],SC_PMA_CH_INT_TX_LANE3[342],SC_PMA_CH_INT_TX_LANE3[341],SC_PMA_CH_INT_TX_LANE3[340],SC_PMA_CH_INT_TX_LANE3[339],SC_PMA_CH_INT_TX_LANE3[338],SC_PMA_CH_INT_TX_LANE3[337],SC_PMA_CH_INT_TX_LANE3[336],SC_PMA_CH_INT_TX_LANE3[335],SC_PMA_CH_INT_TX_LANE3[334],SC_PMA_CH_INT_TX_LANE3[333],SC_PMA_CH_INT_TX_LANE3[332],SC_PMA_CH_INT_TX_LANE3[331],SC_PMA_CH_INT_TX_LANE3[330],SC_PMA_CH_INT_TX_LANE3[329],SC_PMA_CH_INT_TX_LANE3[328],SC_PMA_CH_INT_TX_LANE3[327],SC_PMA_CH_INT_TX_LANE3[326],SC_PMA_CH_INT_TX_LANE3[325],SC_PMA_CH_INT_TX_LANE3[324],SC_PMA_CH_INT_TX_LANE3[323],SC_PMA_CH_INT_TX_LANE3[322],SC_PMA_CH_INT_TX_LANE3[321],SC_PMA_CH_INT_TX_LANE3[320],SC_PMA_CH_INT_TX_LANE3[319],SC_PMA_CH_INT_TX_LANE3[318],SC_PMA_CH_INT_TX_LANE3[317],SC_PMA_CH_INT_TX_LANE3[316],SC_PMA_CH_INT_TX_LANE3[315],SC_PMA_CH_INT_TX_LANE3[314],SC_PMA_CH_INT_TX_LANE3[313],SC_PMA_CH_INT_TX_LANE3[312],SC_PMA_CH_INT_TX_LANE3[311],SC_PMA_CH_INT_TX_LANE3[310],SC_PMA_CH_INT_TX_LANE3[309],SC_PMA_CH_INT_TX_LANE3[308],SC_PMA_CH_INT_TX_LANE3[307],SC_PMA_CH_INT_TX_LANE3[306],SC_PMA_CH_INT_TX_LANE3[305],SC_PMA_CH_INT_TX_LANE3[304],SC_PMA_CH_INT_TX_LANE3[303],SC_PMA_CH_INT_TX_LANE3[302],SC_PMA_CH_INT_TX_LANE3[301],SC_PMA_CH_INT_TX_LANE3[300],SC_PMA_CH_INT_TX_LANE3[299],SC_PMA_CH_INT_TX_LANE3[298],SC_PMA_CH_INT_TX_LANE3[297],SC_PMA_CH_INT_TX_LANE3[296],SC_PMA_CH_INT_TX_LANE3[295],SC_PMA_CH_INT_TX_LANE3[294],SC_PMA_CH_INT_TX_LANE3[293],SC_PMA_CH_INT_TX_LANE3[292],SC_PMA_CH_INT_TX_LANE3[291],SC_PMA_CH_INT_TX_LANE3[290],SC_PMA_CH_INT_TX_LANE3[289],SC_PMA_CH_INT_TX_LANE3[288],SC_PMA_CH_INT_TX_LANE3[287],SC_PMA_CH_INT_TX_LANE3[286],SC_PMA_CH_INT_TX_LANE3[285],SC_PMA_CH_INT_TX_LANE3[284],SC_PMA_CH_INT_TX_LANE3[283],SC_PMA_CH_INT_TX_LANE3[282],SC_PMA_CH_INT_TX_LANE3[281],SC_PMA_CH_INT_TX_LANE3[280],SC_PMA_CH_INT_TX_LANE3[279],SC_PMA_CH_INT_TX_LANE3[278],SC_PMA_CH_INT_TX_LANE3[277],SC_PMA_CH_INT_TX_LANE3[276],SC_PMA_CH_INT_TX_LANE3[275],SC_PMA_CH_INT_TX_LANE3[274],SC_PMA_CH_INT_TX_LANE3[273],SC_PMA_CH_INT_TX_LANE3[272],SC_PMA_CH_INT_TX_LANE3[271],SC_PMA_CH_INT_TX_LANE3[270],SC_PMA_CH_INT_TX_LANE3[269],SC_PMA_CH_INT_TX_LANE3[268],SC_PMA_CH_INT_TX_LANE3[267],SC_PMA_CH_INT_TX_LANE3[266],SC_PMA_CH_INT_TX_LANE3[265],SC_PMA_CH_INT_TX_LANE3[264],SC_PMA_CH_INT_TX_LANE3[263],SC_PMA_CH_INT_TX_LANE3[262],SC_PMA_CH_INT_TX_LANE3[261],SC_PMA_CH_INT_TX_LANE3[260],SC_PMA_CH_INT_TX_LANE3[259],SC_PMA_CH_INT_TX_LANE3[258],SC_PMA_CH_INT_TX_LANE3[257],SC_PMA_CH_INT_TX_LANE3[256],SC_PMA_CH_INT_TX_LANE3[255],SC_PMA_CH_INT_TX_LANE3[254],SC_PMA_CH_INT_TX_LANE3[253],SC_PMA_CH_INT_TX_LANE3[252],SC_PMA_CH_INT_TX_LANE3[251],SC_PMA_CH_INT_TX_LANE3[250],SC_PMA_CH_INT_TX_LANE3[249],SC_PMA_CH_INT_TX_LANE3[248],SC_PMA_CH_INT_TX_LANE3[247],SC_PMA_CH_INT_TX_LANE3[246],SC_PMA_CH_INT_TX_LANE3[245],SC_PMA_CH_INT_TX_LANE3[244],SC_PMA_CH_INT_TX_LANE3[243],SC_PMA_CH_INT_TX_LANE3[242],SC_PMA_CH_INT_TX_LANE3[241],SC_PMA_CH_INT_TX_LANE3[240],SC_PMA_CH_INT_TX_LANE3[239],SC_PMA_CH_INT_TX_LANE3[238],SC_PMA_CH_INT_TX_LANE3[237],SC_PMA_CH_INT_TX_LANE3[236],SC_PMA_CH_INT_TX_LANE3[235],SC_PMA_CH_INT_TX_LANE3[234],SC_PMA_CH_INT_TX_LANE3[233],SC_PMA_CH_INT_TX_LANE3[232],SC_PMA_CH_INT_TX_LANE3[231],SC_PMA_CH_INT_TX_LANE3[230],SC_PMA_CH_INT_TX_LANE3[229],SC_PMA_CH_INT_TX_LANE3[228],SC_PMA_CH_INT_TX_LANE3[227],SC_PMA_CH_INT_TX_LANE3[226],SC_PMA_CH_INT_TX_LANE3[225],SC_PMA_CH_INT_TX_LANE3[224],SC_PMA_CH_INT_TX_LANE3[223],SC_PMA_CH_INT_TX_LANE3[222],SC_PMA_CH_INT_TX_LANE3[221],SC_PMA_CH_INT_TX_LANE3[220],SC_PMA_CH_INT_TX_LANE3[219],SC_PMA_CH_INT_TX_LANE3[218],SC_PMA_CH_INT_TX_LANE3[217],SC_PMA_CH_INT_TX_LANE3[216],SC_PMA_CH_INT_TX_LANE3[215],SC_PMA_CH_INT_TX_LANE3[214],SC_PMA_CH_INT_TX_LANE3[213],SC_PMA_CH_INT_TX_LANE3[212],SC_PMA_CH_INT_TX_LANE3[211],SC_PMA_CH_INT_TX_LANE3[210],SC_PMA_CH_INT_TX_LANE3[209],SC_PMA_CH_INT_TX_LANE3[208],SC_PMA_CH_INT_TX_LANE3[207],SC_PMA_CH_INT_TX_LANE3[206],SC_PMA_CH_INT_TX_LANE3[205],SC_PMA_CH_INT_TX_LANE3[204],SC_PMA_CH_INT_TX_LANE3[203],SC_PMA_CH_INT_TX_LANE3[202],SC_PMA_CH_INT_TX_LANE3[201],SC_PMA_CH_INT_TX_LANE3[200],SC_PMA_CH_INT_TX_LANE3[199],SC_PMA_CH_INT_TX_LANE3[198],SC_PMA_CH_INT_TX_LANE3[197],SC_PMA_CH_INT_TX_LANE3[196],SC_PMA_CH_INT_TX_LANE3[195],SC_PMA_CH_INT_TX_LANE3[194],SC_PMA_CH_INT_TX_LANE3[193],SC_PMA_CH_INT_TX_LANE3[192],SC_PMA_CH_INT_TX_LANE3[191],SC_PMA_CH_INT_TX_LANE3[190],SC_PMA_CH_INT_TX_LANE3[189],SC_PMA_CH_INT_TX_LANE3[188],SC_PMA_CH_INT_TX_LANE3[187],SC_PMA_CH_INT_TX_LANE3[186],SC_PMA_CH_INT_TX_LANE3[185],SC_PMA_CH_INT_TX_LANE3[184],SC_PMA_CH_INT_TX_LANE3[183],SC_PMA_CH_INT_TX_LANE3[182],SC_PMA_CH_INT_TX_LANE3[181],SC_PMA_CH_INT_TX_LANE3[180],SC_PMA_CH_INT_TX_LANE3[179],SC_PMA_CH_INT_TX_LANE3[178],SC_PMA_CH_INT_TX_LANE3[177],SC_PMA_CH_INT_TX_LANE3[176],SC_PMA_CH_INT_TX_LANE3[175],SC_PMA_CH_INT_TX_LANE3[174],SC_PMA_CH_INT_TX_LANE3[173],SC_PMA_CH_INT_TX_LANE3[172],SC_PMA_CH_INT_TX_LANE3[171],SC_PMA_CH_INT_TX_LANE3[170],SC_PMA_CH_INT_TX_LANE3[169],SC_PMA_CH_INT_TX_LANE3[168],SC_PMA_CH_INT_TX_LANE3[167],SC_PMA_CH_INT_TX_LANE3[166],SC_PMA_CH_INT_TX_LANE3[165],SC_PMA_CH_INT_TX_LANE3[164],SC_PMA_CH_INT_TX_LANE3[163],SC_PMA_CH_INT_TX_LANE3[162],SC_PMA_CH_INT_TX_LANE3[161],SC_PMA_CH_INT_TX_LANE3[160],SC_PMA_CH_INT_TX_LANE3[159],SC_PMA_CH_INT_TX_LANE3[158],SC_PMA_CH_INT_TX_LANE3[157],SC_PMA_CH_INT_TX_LANE3[156],SC_PMA_CH_INT_TX_LANE3[155],SC_PMA_CH_INT_TX_LANE3[154],SC_PMA_CH_INT_TX_LANE3[153],SC_PMA_CH_INT_TX_LANE3[152],SC_PMA_CH_INT_TX_LANE3[151],SC_PMA_CH_INT_TX_LANE3[150],SC_PMA_CH_INT_TX_LANE3[149],SC_PMA_CH_INT_TX_LANE3[148],SC_PMA_CH_INT_TX_LANE3[147],SC_PMA_CH_INT_TX_LANE3[146],SC_PMA_CH_INT_TX_LANE3[145],SC_PMA_CH_INT_TX_LANE3[144],SC_PMA_CH_INT_TX_LANE3[143],SC_PMA_CH_INT_TX_LANE3[142],SC_PMA_CH_INT_TX_LANE3[141],SC_PMA_CH_INT_TX_LANE3[140],SC_PMA_CH_INT_TX_LANE3[139],SC_PMA_CH_INT_TX_LANE3[138],SC_PMA_CH_INT_TX_LANE3[137],SC_PMA_CH_INT_TX_LANE3[136],SC_PMA_CH_INT_TX_LANE3[135],SC_PMA_CH_INT_TX_LANE3[134],SC_PMA_CH_INT_TX_LANE3[133],SC_PMA_CH_INT_TX_LANE3[132],SC_PMA_CH_INT_TX_LANE3[131],SC_PMA_CH_INT_TX_LANE3[130],SC_PMA_CH_INT_TX_LANE3[129],SC_PMA_CH_INT_TX_LANE3[128],SC_PMA_CH_INT_TX_LANE3[127],SC_PMA_CH_INT_TX_LANE3[126],SC_PMA_CH_INT_TX_LANE3[125],SC_PMA_CH_INT_TX_LANE3[124],SC_PMA_CH_INT_TX_LANE3[123],SC_PMA_CH_INT_TX_LANE3[122],SC_PMA_CH_INT_TX_LANE3[121],SC_PMA_CH_INT_TX_LANE3[120],SC_PMA_CH_INT_TX_LANE3[119],SC_PMA_CH_INT_TX_LANE3[118],SC_PMA_CH_INT_TX_LANE3[117],SC_PMA_CH_INT_TX_LANE3[116],SC_PMA_CH_INT_TX_LANE3[115],SC_PMA_CH_INT_TX_LANE3[114],SC_PMA_CH_INT_TX_LANE3[113],SC_PMA_CH_INT_TX_LANE3[112],SC_PMA_CH_INT_TX_LANE3[111],SC_PMA_CH_INT_TX_LANE3[110],SC_PMA_CH_INT_TX_LANE3[109],SC_PMA_CH_INT_TX_LANE3[108],SC_PMA_CH_INT_TX_LANE3[107],SC_PMA_CH_INT_TX_LANE3[106],SC_PMA_CH_INT_TX_LANE3[105],SC_PMA_CH_INT_TX_LANE3[104],SC_PMA_CH_INT_TX_LANE3[103],SC_PMA_CH_INT_TX_LANE3[102],SC_PMA_CH_INT_TX_LANE3[101],SC_PMA_CH_INT_TX_LANE3[100],SC_PMA_CH_INT_TX_LANE3[99],SC_PMA_CH_INT_TX_LANE3[98],SC_PMA_CH_INT_TX_LANE3[97],SC_PMA_CH_INT_TX_LANE3[96],SC_PMA_CH_INT_TX_LANE3[95],SC_PMA_CH_INT_TX_LANE3[94],SC_PMA_CH_INT_TX_LANE3[93],SC_PMA_CH_INT_TX_LANE3[92],SC_PMA_CH_INT_TX_LANE3[91],SC_PMA_CH_INT_TX_LANE3[90],SC_PMA_CH_INT_TX_LANE3[89],SC_PMA_CH_INT_TX_LANE3[88],SC_PMA_CH_INT_TX_LANE3[87],SC_PMA_CH_INT_TX_LANE3[86],SC_PMA_CH_INT_TX_LANE3[85],SC_PMA_CH_INT_TX_LANE3[84],SC_PMA_CH_INT_TX_LANE3[83],SC_PMA_CH_INT_TX_LANE3[82],SC_PMA_CH_INT_TX_LANE3[81],SC_PMA_CH_INT_TX_LANE3[80],SC_PMA_CH_INT_TX_LANE3[79],SC_PMA_CH_INT_TX_LANE3[78],SC_PMA_CH_INT_TX_LANE3[77],SC_PMA_CH_INT_TX_LANE3[76],SC_PMA_CH_INT_TX_LANE3[75],SC_PMA_CH_INT_TX_LANE3[74],SC_PMA_CH_INT_TX_LANE3[73],SC_PMA_CH_INT_TX_LANE3[72],SC_PMA_CH_INT_TX_LANE3[71],SC_PMA_CH_INT_TX_LANE3[70],SC_PMA_CH_INT_TX_LANE3[69],SC_PMA_CH_INT_TX_LANE3[68],SC_PMA_CH_INT_TX_LANE3[67],SC_PMA_CH_INT_TX_LANE3[66],SC_PMA_CH_INT_TX_LANE3[65],SC_PMA_CH_INT_TX_LANE3[64],SC_PMA_CH_INT_TX_LANE3[63],SC_PMA_CH_INT_TX_LANE3[62],SC_PMA_CH_INT_TX_LANE3[61],SC_PMA_CH_INT_TX_LANE3[60],SC_PMA_CH_INT_TX_LANE3[59],SC_PMA_CH_INT_TX_LANE3[58],SC_PMA_CH_INT_TX_LANE3[57],SC_PMA_CH_INT_TX_LANE3[56],SC_PMA_CH_INT_TX_LANE3[55],SC_PMA_CH_INT_TX_LANE3[54],SC_PMA_CH_INT_TX_LANE3[53],SC_PMA_CH_INT_TX_LANE3[52],SC_PMA_CH_INT_TX_LANE3[51],SC_PMA_CH_INT_TX_LANE3[50],SC_PMA_CH_INT_TX_LANE3[49],SC_PMA_CH_INT_TX_LANE3[48],SC_PMA_CH_INT_TX_LANE3[47],SC_PMA_CH_INT_TX_LANE3[46],SC_PMA_CH_INT_TX_LANE3[45],SC_PMA_CH_INT_TX_LANE3[44],SC_PMA_CH_INT_TX_LANE3[43],SC_PMA_CH_INT_TX_LANE3[42],SC_PMA_CH_INT_TX_LANE3[41],SC_PMA_CH_INT_TX_LANE3[40],SC_PMA_CH_INT_TX_LANE3[39],SC_PMA_CH_INT_TX_LANE3[38],SC_PMA_CH_INT_TX_LANE3[37],SC_PMA_CH_INT_TX_LANE3[36],SC_PMA_CH_INT_TX_LANE3[35],SC_PMA_CH_INT_TX_LANE3[34],SC_PMA_CH_INT_TX_LANE3[33],SC_PMA_CH_INT_TX_LANE3[32],SC_PMA_CH_INT_TX_LANE3[31],SC_PMA_CH_INT_TX_LANE3[30],SC_PMA_CH_INT_TX_LANE3[29],SC_PMA_CH_INT_TX_LANE3[28],SC_PMA_CH_INT_TX_LANE3[27],SC_PMA_CH_INT_TX_LANE3[26],SC_PMA_CH_INT_TX_LANE3[25],SC_PMA_CH_INT_TX_LANE3[24],SC_PMA_CH_INT_TX_LANE3[23],SC_PMA_CH_INT_TX_LANE3[22],SC_PMA_CH_INT_TX_LANE3[21],SC_PMA_CH_INT_TX_LANE3[20],SC_PMA_CH_INT_TX_LANE3[19],SC_PMA_CH_INT_TX_LANE3[18],SC_PMA_CH_INT_TX_LANE3[17],SC_PMA_CH_INT_TX_LANE3[16],SC_PMA_CH_INT_TX_LANE3[15],SC_PMA_CH_INT_TX_LANE3[14],SC_PMA_CH_INT_TX_LANE3[13],SC_PMA_CH_INT_TX_LANE3[12],SC_PMA_CH_INT_TX_LANE3[11],SC_PMA_CH_INT_TX_LANE3[10],SC_PMA_CH_INT_TX_LANE3[9],SC_PMA_CH_INT_TX_LANE3[8],SC_PMA_CH_INT_TX_LANE3[7],SC_PMA_CH_INT_TX_LANE3[6],SC_PMA_CH_INT_TX_LANE3[5],SC_PMA_CH_INT_TX_LANE3[4],SC_PMA_CH_INT_TX_LANE3[3],SC_PMA_CH_INT_TX_LANE3[2],SC_PMA_CH_INT_TX_LANE3[1],SC_PMA_CH_INT_TX_LANE3[0]" */,

    config input SC_PMA_CH_INT_PLL_0[258:0] = 259'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH_INT_PLL_0[258],SC_PMA_CH_INT_PLL_0[257],SC_PMA_CH_INT_PLL_0[256],SC_PMA_CH_INT_PLL_0[255],SC_PMA_CH_INT_PLL_0[254],SC_PMA_CH_INT_PLL_0[253],SC_PMA_CH_INT_PLL_0[252],SC_PMA_CH_INT_PLL_0[251],SC_PMA_CH_INT_PLL_0[250],SC_PMA_CH_INT_PLL_0[249],SC_PMA_CH_INT_PLL_0[248],SC_PMA_CH_INT_PLL_0[247],SC_PMA_CH_INT_PLL_0[246],SC_PMA_CH_INT_PLL_0[245],SC_PMA_CH_INT_PLL_0[244],SC_PMA_CH_INT_PLL_0[243],SC_PMA_CH_INT_PLL_0[242],SC_PMA_CH_INT_PLL_0[241],SC_PMA_CH_INT_PLL_0[240],SC_PMA_CH_INT_PLL_0[239],SC_PMA_CH_INT_PLL_0[238],SC_PMA_CH_INT_PLL_0[237],SC_PMA_CH_INT_PLL_0[236],SC_PMA_CH_INT_PLL_0[235],SC_PMA_CH_INT_PLL_0[234],SC_PMA_CH_INT_PLL_0[233],SC_PMA_CH_INT_PLL_0[232],SC_PMA_CH_INT_PLL_0[231],SC_PMA_CH_INT_PLL_0[230],SC_PMA_CH_INT_PLL_0[229],SC_PMA_CH_INT_PLL_0[228],SC_PMA_CH_INT_PLL_0[227],SC_PMA_CH_INT_PLL_0[226],SC_PMA_CH_INT_PLL_0[225],SC_PMA_CH_INT_PLL_0[224],SC_PMA_CH_INT_PLL_0[223],SC_PMA_CH_INT_PLL_0[222],SC_PMA_CH_INT_PLL_0[221],SC_PMA_CH_INT_PLL_0[220],SC_PMA_CH_INT_PLL_0[219],SC_PMA_CH_INT_PLL_0[218],SC_PMA_CH_INT_PLL_0[217],SC_PMA_CH_INT_PLL_0[216],SC_PMA_CH_INT_PLL_0[215],SC_PMA_CH_INT_PLL_0[214],SC_PMA_CH_INT_PLL_0[213],SC_PMA_CH_INT_PLL_0[212],SC_PMA_CH_INT_PLL_0[211],SC_PMA_CH_INT_PLL_0[210],SC_PMA_CH_INT_PLL_0[209],SC_PMA_CH_INT_PLL_0[208],SC_PMA_CH_INT_PLL_0[207],SC_PMA_CH_INT_PLL_0[206],SC_PMA_CH_INT_PLL_0[205],SC_PMA_CH_INT_PLL_0[204],SC_PMA_CH_INT_PLL_0[203],SC_PMA_CH_INT_PLL_0[202],SC_PMA_CH_INT_PLL_0[201],SC_PMA_CH_INT_PLL_0[200],SC_PMA_CH_INT_PLL_0[199],SC_PMA_CH_INT_PLL_0[198],SC_PMA_CH_INT_PLL_0[197],SC_PMA_CH_INT_PLL_0[196],SC_PMA_CH_INT_PLL_0[195],SC_PMA_CH_INT_PLL_0[194],SC_PMA_CH_INT_PLL_0[193],SC_PMA_CH_INT_PLL_0[192],SC_PMA_CH_INT_PLL_0[191],SC_PMA_CH_INT_PLL_0[190],SC_PMA_CH_INT_PLL_0[189],SC_PMA_CH_INT_PLL_0[188],SC_PMA_CH_INT_PLL_0[187],SC_PMA_CH_INT_PLL_0[186],SC_PMA_CH_INT_PLL_0[185],SC_PMA_CH_INT_PLL_0[184],SC_PMA_CH_INT_PLL_0[183],SC_PMA_CH_INT_PLL_0[182],SC_PMA_CH_INT_PLL_0[181],SC_PMA_CH_INT_PLL_0[180],SC_PMA_CH_INT_PLL_0[179],SC_PMA_CH_INT_PLL_0[178],SC_PMA_CH_INT_PLL_0[177],SC_PMA_CH_INT_PLL_0[176],SC_PMA_CH_INT_PLL_0[175],SC_PMA_CH_INT_PLL_0[174],SC_PMA_CH_INT_PLL_0[173],SC_PMA_CH_INT_PLL_0[172],SC_PMA_CH_INT_PLL_0[171],SC_PMA_CH_INT_PLL_0[170],SC_PMA_CH_INT_PLL_0[169],SC_PMA_CH_INT_PLL_0[168],SC_PMA_CH_INT_PLL_0[167],SC_PMA_CH_INT_PLL_0[166],SC_PMA_CH_INT_PLL_0[165],SC_PMA_CH_INT_PLL_0[164],SC_PMA_CH_INT_PLL_0[163],SC_PMA_CH_INT_PLL_0[162],SC_PMA_CH_INT_PLL_0[161],SC_PMA_CH_INT_PLL_0[160],SC_PMA_CH_INT_PLL_0[159],SC_PMA_CH_INT_PLL_0[158],SC_PMA_CH_INT_PLL_0[157],SC_PMA_CH_INT_PLL_0[156],SC_PMA_CH_INT_PLL_0[155],SC_PMA_CH_INT_PLL_0[154],SC_PMA_CH_INT_PLL_0[153],SC_PMA_CH_INT_PLL_0[152],SC_PMA_CH_INT_PLL_0[151],SC_PMA_CH_INT_PLL_0[150],SC_PMA_CH_INT_PLL_0[149],SC_PMA_CH_INT_PLL_0[148],SC_PMA_CH_INT_PLL_0[147],SC_PMA_CH_INT_PLL_0[146],SC_PMA_CH_INT_PLL_0[145],SC_PMA_CH_INT_PLL_0[144],SC_PMA_CH_INT_PLL_0[143],SC_PMA_CH_INT_PLL_0[142],SC_PMA_CH_INT_PLL_0[141],SC_PMA_CH_INT_PLL_0[140],SC_PMA_CH_INT_PLL_0[139],SC_PMA_CH_INT_PLL_0[138],SC_PMA_CH_INT_PLL_0[137],SC_PMA_CH_INT_PLL_0[136],SC_PMA_CH_INT_PLL_0[135],SC_PMA_CH_INT_PLL_0[134],SC_PMA_CH_INT_PLL_0[133],SC_PMA_CH_INT_PLL_0[132],SC_PMA_CH_INT_PLL_0[131],SC_PMA_CH_INT_PLL_0[130],SC_PMA_CH_INT_PLL_0[129],SC_PMA_CH_INT_PLL_0[128],SC_PMA_CH_INT_PLL_0[127],SC_PMA_CH_INT_PLL_0[126],SC_PMA_CH_INT_PLL_0[125],SC_PMA_CH_INT_PLL_0[124],SC_PMA_CH_INT_PLL_0[123],SC_PMA_CH_INT_PLL_0[122],SC_PMA_CH_INT_PLL_0[121],SC_PMA_CH_INT_PLL_0[120],SC_PMA_CH_INT_PLL_0[119],SC_PMA_CH_INT_PLL_0[118],SC_PMA_CH_INT_PLL_0[117],SC_PMA_CH_INT_PLL_0[116],SC_PMA_CH_INT_PLL_0[115],SC_PMA_CH_INT_PLL_0[114],SC_PMA_CH_INT_PLL_0[113],SC_PMA_CH_INT_PLL_0[112],SC_PMA_CH_INT_PLL_0[111],SC_PMA_CH_INT_PLL_0[110],SC_PMA_CH_INT_PLL_0[109],SC_PMA_CH_INT_PLL_0[108],SC_PMA_CH_INT_PLL_0[107],SC_PMA_CH_INT_PLL_0[106],SC_PMA_CH_INT_PLL_0[105],SC_PMA_CH_INT_PLL_0[104],SC_PMA_CH_INT_PLL_0[103],SC_PMA_CH_INT_PLL_0[102],SC_PMA_CH_INT_PLL_0[101],SC_PMA_CH_INT_PLL_0[100],SC_PMA_CH_INT_PLL_0[99],SC_PMA_CH_INT_PLL_0[98],SC_PMA_CH_INT_PLL_0[97],SC_PMA_CH_INT_PLL_0[96],SC_PMA_CH_INT_PLL_0[95],SC_PMA_CH_INT_PLL_0[94],SC_PMA_CH_INT_PLL_0[93],SC_PMA_CH_INT_PLL_0[92],SC_PMA_CH_INT_PLL_0[91],SC_PMA_CH_INT_PLL_0[90],SC_PMA_CH_INT_PLL_0[89],SC_PMA_CH_INT_PLL_0[88],SC_PMA_CH_INT_PLL_0[87],SC_PMA_CH_INT_PLL_0[86],SC_PMA_CH_INT_PLL_0[85],SC_PMA_CH_INT_PLL_0[84],SC_PMA_CH_INT_PLL_0[83],SC_PMA_CH_INT_PLL_0[82],SC_PMA_CH_INT_PLL_0[81],SC_PMA_CH_INT_PLL_0[80],SC_PMA_CH_INT_PLL_0[79],SC_PMA_CH_INT_PLL_0[78],SC_PMA_CH_INT_PLL_0[77],SC_PMA_CH_INT_PLL_0[76],SC_PMA_CH_INT_PLL_0[75],SC_PMA_CH_INT_PLL_0[74],SC_PMA_CH_INT_PLL_0[73],SC_PMA_CH_INT_PLL_0[72],SC_PMA_CH_INT_PLL_0[71],SC_PMA_CH_INT_PLL_0[70],SC_PMA_CH_INT_PLL_0[69],SC_PMA_CH_INT_PLL_0[68],SC_PMA_CH_INT_PLL_0[67],SC_PMA_CH_INT_PLL_0[66],SC_PMA_CH_INT_PLL_0[65],SC_PMA_CH_INT_PLL_0[64],SC_PMA_CH_INT_PLL_0[63],SC_PMA_CH_INT_PLL_0[62],SC_PMA_CH_INT_PLL_0[61],SC_PMA_CH_INT_PLL_0[60],SC_PMA_CH_INT_PLL_0[59],SC_PMA_CH_INT_PLL_0[58],SC_PMA_CH_INT_PLL_0[57],SC_PMA_CH_INT_PLL_0[56],SC_PMA_CH_INT_PLL_0[55],SC_PMA_CH_INT_PLL_0[54],SC_PMA_CH_INT_PLL_0[53],SC_PMA_CH_INT_PLL_0[52],SC_PMA_CH_INT_PLL_0[51],SC_PMA_CH_INT_PLL_0[50],SC_PMA_CH_INT_PLL_0[49],SC_PMA_CH_INT_PLL_0[48],SC_PMA_CH_INT_PLL_0[47],SC_PMA_CH_INT_PLL_0[46],SC_PMA_CH_INT_PLL_0[45],SC_PMA_CH_INT_PLL_0[44],SC_PMA_CH_INT_PLL_0[43],SC_PMA_CH_INT_PLL_0[42],SC_PMA_CH_INT_PLL_0[41],SC_PMA_CH_INT_PLL_0[40],SC_PMA_CH_INT_PLL_0[39],SC_PMA_CH_INT_PLL_0[38],SC_PMA_CH_INT_PLL_0[37],SC_PMA_CH_INT_PLL_0[36],SC_PMA_CH_INT_PLL_0[35],SC_PMA_CH_INT_PLL_0[34],SC_PMA_CH_INT_PLL_0[33],SC_PMA_CH_INT_PLL_0[32],SC_PMA_CH_INT_PLL_0[31],SC_PMA_CH_INT_PLL_0[30],SC_PMA_CH_INT_PLL_0[29],SC_PMA_CH_INT_PLL_0[28],SC_PMA_CH_INT_PLL_0[27],SC_PMA_CH_INT_PLL_0[26],SC_PMA_CH_INT_PLL_0[25],SC_PMA_CH_INT_PLL_0[24],SC_PMA_CH_INT_PLL_0[23],SC_PMA_CH_INT_PLL_0[22],SC_PMA_CH_INT_PLL_0[21],SC_PMA_CH_INT_PLL_0[20],SC_PMA_CH_INT_PLL_0[19],SC_PMA_CH_INT_PLL_0[18],SC_PMA_CH_INT_PLL_0[17],SC_PMA_CH_INT_PLL_0[16],SC_PMA_CH_INT_PLL_0[15],SC_PMA_CH_INT_PLL_0[14],SC_PMA_CH_INT_PLL_0[13],SC_PMA_CH_INT_PLL_0[12],SC_PMA_CH_INT_PLL_0[11],SC_PMA_CH_INT_PLL_0[10],SC_PMA_CH_INT_PLL_0[9],SC_PMA_CH_INT_PLL_0[8],SC_PMA_CH_INT_PLL_0[7],SC_PMA_CH_INT_PLL_0[6],SC_PMA_CH_INT_PLL_0[5],SC_PMA_CH_INT_PLL_0[4],SC_PMA_CH_INT_PLL_0[3],SC_PMA_CH_INT_PLL_0[2],SC_PMA_CH_INT_PLL_0[1],SC_PMA_CH_INT_PLL_0[0]" */,

    config input SC_PMA_CH_INT_PLL_1[258:0] = 259'h0
/* pragma  PAP_CFG_BIT_NAME  = "SC_PMA_CH_INT_PLL_1[258],SC_PMA_CH_INT_PLL_1[257],SC_PMA_CH_INT_PLL_1[256],SC_PMA_CH_INT_PLL_1[255],SC_PMA_CH_INT_PLL_1[254],SC_PMA_CH_INT_PLL_1[253],SC_PMA_CH_INT_PLL_1[252],SC_PMA_CH_INT_PLL_1[251],SC_PMA_CH_INT_PLL_1[250],SC_PMA_CH_INT_PLL_1[249],SC_PMA_CH_INT_PLL_1[248],SC_PMA_CH_INT_PLL_1[247],SC_PMA_CH_INT_PLL_1[246],SC_PMA_CH_INT_PLL_1[245],SC_PMA_CH_INT_PLL_1[244],SC_PMA_CH_INT_PLL_1[243],SC_PMA_CH_INT_PLL_1[242],SC_PMA_CH_INT_PLL_1[241],SC_PMA_CH_INT_PLL_1[240],SC_PMA_CH_INT_PLL_1[239],SC_PMA_CH_INT_PLL_1[238],SC_PMA_CH_INT_PLL_1[237],SC_PMA_CH_INT_PLL_1[236],SC_PMA_CH_INT_PLL_1[235],SC_PMA_CH_INT_PLL_1[234],SC_PMA_CH_INT_PLL_1[233],SC_PMA_CH_INT_PLL_1[232],SC_PMA_CH_INT_PLL_1[231],SC_PMA_CH_INT_PLL_1[230],SC_PMA_CH_INT_PLL_1[229],SC_PMA_CH_INT_PLL_1[228],SC_PMA_CH_INT_PLL_1[227],SC_PMA_CH_INT_PLL_1[226],SC_PMA_CH_INT_PLL_1[225],SC_PMA_CH_INT_PLL_1[224],SC_PMA_CH_INT_PLL_1[223],SC_PMA_CH_INT_PLL_1[222],SC_PMA_CH_INT_PLL_1[221],SC_PMA_CH_INT_PLL_1[220],SC_PMA_CH_INT_PLL_1[219],SC_PMA_CH_INT_PLL_1[218],SC_PMA_CH_INT_PLL_1[217],SC_PMA_CH_INT_PLL_1[216],SC_PMA_CH_INT_PLL_1[215],SC_PMA_CH_INT_PLL_1[214],SC_PMA_CH_INT_PLL_1[213],SC_PMA_CH_INT_PLL_1[212],SC_PMA_CH_INT_PLL_1[211],SC_PMA_CH_INT_PLL_1[210],SC_PMA_CH_INT_PLL_1[209],SC_PMA_CH_INT_PLL_1[208],SC_PMA_CH_INT_PLL_1[207],SC_PMA_CH_INT_PLL_1[206],SC_PMA_CH_INT_PLL_1[205],SC_PMA_CH_INT_PLL_1[204],SC_PMA_CH_INT_PLL_1[203],SC_PMA_CH_INT_PLL_1[202],SC_PMA_CH_INT_PLL_1[201],SC_PMA_CH_INT_PLL_1[200],SC_PMA_CH_INT_PLL_1[199],SC_PMA_CH_INT_PLL_1[198],SC_PMA_CH_INT_PLL_1[197],SC_PMA_CH_INT_PLL_1[196],SC_PMA_CH_INT_PLL_1[195],SC_PMA_CH_INT_PLL_1[194],SC_PMA_CH_INT_PLL_1[193],SC_PMA_CH_INT_PLL_1[192],SC_PMA_CH_INT_PLL_1[191],SC_PMA_CH_INT_PLL_1[190],SC_PMA_CH_INT_PLL_1[189],SC_PMA_CH_INT_PLL_1[188],SC_PMA_CH_INT_PLL_1[187],SC_PMA_CH_INT_PLL_1[186],SC_PMA_CH_INT_PLL_1[185],SC_PMA_CH_INT_PLL_1[184],SC_PMA_CH_INT_PLL_1[183],SC_PMA_CH_INT_PLL_1[182],SC_PMA_CH_INT_PLL_1[181],SC_PMA_CH_INT_PLL_1[180],SC_PMA_CH_INT_PLL_1[179],SC_PMA_CH_INT_PLL_1[178],SC_PMA_CH_INT_PLL_1[177],SC_PMA_CH_INT_PLL_1[176],SC_PMA_CH_INT_PLL_1[175],SC_PMA_CH_INT_PLL_1[174],SC_PMA_CH_INT_PLL_1[173],SC_PMA_CH_INT_PLL_1[172],SC_PMA_CH_INT_PLL_1[171],SC_PMA_CH_INT_PLL_1[170],SC_PMA_CH_INT_PLL_1[169],SC_PMA_CH_INT_PLL_1[168],SC_PMA_CH_INT_PLL_1[167],SC_PMA_CH_INT_PLL_1[166],SC_PMA_CH_INT_PLL_1[165],SC_PMA_CH_INT_PLL_1[164],SC_PMA_CH_INT_PLL_1[163],SC_PMA_CH_INT_PLL_1[162],SC_PMA_CH_INT_PLL_1[161],SC_PMA_CH_INT_PLL_1[160],SC_PMA_CH_INT_PLL_1[159],SC_PMA_CH_INT_PLL_1[158],SC_PMA_CH_INT_PLL_1[157],SC_PMA_CH_INT_PLL_1[156],SC_PMA_CH_INT_PLL_1[155],SC_PMA_CH_INT_PLL_1[154],SC_PMA_CH_INT_PLL_1[153],SC_PMA_CH_INT_PLL_1[152],SC_PMA_CH_INT_PLL_1[151],SC_PMA_CH_INT_PLL_1[150],SC_PMA_CH_INT_PLL_1[149],SC_PMA_CH_INT_PLL_1[148],SC_PMA_CH_INT_PLL_1[147],SC_PMA_CH_INT_PLL_1[146],SC_PMA_CH_INT_PLL_1[145],SC_PMA_CH_INT_PLL_1[144],SC_PMA_CH_INT_PLL_1[143],SC_PMA_CH_INT_PLL_1[142],SC_PMA_CH_INT_PLL_1[141],SC_PMA_CH_INT_PLL_1[140],SC_PMA_CH_INT_PLL_1[139],SC_PMA_CH_INT_PLL_1[138],SC_PMA_CH_INT_PLL_1[137],SC_PMA_CH_INT_PLL_1[136],SC_PMA_CH_INT_PLL_1[135],SC_PMA_CH_INT_PLL_1[134],SC_PMA_CH_INT_PLL_1[133],SC_PMA_CH_INT_PLL_1[132],SC_PMA_CH_INT_PLL_1[131],SC_PMA_CH_INT_PLL_1[130],SC_PMA_CH_INT_PLL_1[129],SC_PMA_CH_INT_PLL_1[128],SC_PMA_CH_INT_PLL_1[127],SC_PMA_CH_INT_PLL_1[126],SC_PMA_CH_INT_PLL_1[125],SC_PMA_CH_INT_PLL_1[124],SC_PMA_CH_INT_PLL_1[123],SC_PMA_CH_INT_PLL_1[122],SC_PMA_CH_INT_PLL_1[121],SC_PMA_CH_INT_PLL_1[120],SC_PMA_CH_INT_PLL_1[119],SC_PMA_CH_INT_PLL_1[118],SC_PMA_CH_INT_PLL_1[117],SC_PMA_CH_INT_PLL_1[116],SC_PMA_CH_INT_PLL_1[115],SC_PMA_CH_INT_PLL_1[114],SC_PMA_CH_INT_PLL_1[113],SC_PMA_CH_INT_PLL_1[112],SC_PMA_CH_INT_PLL_1[111],SC_PMA_CH_INT_PLL_1[110],SC_PMA_CH_INT_PLL_1[109],SC_PMA_CH_INT_PLL_1[108],SC_PMA_CH_INT_PLL_1[107],SC_PMA_CH_INT_PLL_1[106],SC_PMA_CH_INT_PLL_1[105],SC_PMA_CH_INT_PLL_1[104],SC_PMA_CH_INT_PLL_1[103],SC_PMA_CH_INT_PLL_1[102],SC_PMA_CH_INT_PLL_1[101],SC_PMA_CH_INT_PLL_1[100],SC_PMA_CH_INT_PLL_1[99],SC_PMA_CH_INT_PLL_1[98],SC_PMA_CH_INT_PLL_1[97],SC_PMA_CH_INT_PLL_1[96],SC_PMA_CH_INT_PLL_1[95],SC_PMA_CH_INT_PLL_1[94],SC_PMA_CH_INT_PLL_1[93],SC_PMA_CH_INT_PLL_1[92],SC_PMA_CH_INT_PLL_1[91],SC_PMA_CH_INT_PLL_1[90],SC_PMA_CH_INT_PLL_1[89],SC_PMA_CH_INT_PLL_1[88],SC_PMA_CH_INT_PLL_1[87],SC_PMA_CH_INT_PLL_1[86],SC_PMA_CH_INT_PLL_1[85],SC_PMA_CH_INT_PLL_1[84],SC_PMA_CH_INT_PLL_1[83],SC_PMA_CH_INT_PLL_1[82],SC_PMA_CH_INT_PLL_1[81],SC_PMA_CH_INT_PLL_1[80],SC_PMA_CH_INT_PLL_1[79],SC_PMA_CH_INT_PLL_1[78],SC_PMA_CH_INT_PLL_1[77],SC_PMA_CH_INT_PLL_1[76],SC_PMA_CH_INT_PLL_1[75],SC_PMA_CH_INT_PLL_1[74],SC_PMA_CH_INT_PLL_1[73],SC_PMA_CH_INT_PLL_1[72],SC_PMA_CH_INT_PLL_1[71],SC_PMA_CH_INT_PLL_1[70],SC_PMA_CH_INT_PLL_1[69],SC_PMA_CH_INT_PLL_1[68],SC_PMA_CH_INT_PLL_1[67],SC_PMA_CH_INT_PLL_1[66],SC_PMA_CH_INT_PLL_1[65],SC_PMA_CH_INT_PLL_1[64],SC_PMA_CH_INT_PLL_1[63],SC_PMA_CH_INT_PLL_1[62],SC_PMA_CH_INT_PLL_1[61],SC_PMA_CH_INT_PLL_1[60],SC_PMA_CH_INT_PLL_1[59],SC_PMA_CH_INT_PLL_1[58],SC_PMA_CH_INT_PLL_1[57],SC_PMA_CH_INT_PLL_1[56],SC_PMA_CH_INT_PLL_1[55],SC_PMA_CH_INT_PLL_1[54],SC_PMA_CH_INT_PLL_1[53],SC_PMA_CH_INT_PLL_1[52],SC_PMA_CH_INT_PLL_1[51],SC_PMA_CH_INT_PLL_1[50],SC_PMA_CH_INT_PLL_1[49],SC_PMA_CH_INT_PLL_1[48],SC_PMA_CH_INT_PLL_1[47],SC_PMA_CH_INT_PLL_1[46],SC_PMA_CH_INT_PLL_1[45],SC_PMA_CH_INT_PLL_1[44],SC_PMA_CH_INT_PLL_1[43],SC_PMA_CH_INT_PLL_1[42],SC_PMA_CH_INT_PLL_1[41],SC_PMA_CH_INT_PLL_1[40],SC_PMA_CH_INT_PLL_1[39],SC_PMA_CH_INT_PLL_1[38],SC_PMA_CH_INT_PLL_1[37],SC_PMA_CH_INT_PLL_1[36],SC_PMA_CH_INT_PLL_1[35],SC_PMA_CH_INT_PLL_1[34],SC_PMA_CH_INT_PLL_1[33],SC_PMA_CH_INT_PLL_1[32],SC_PMA_CH_INT_PLL_1[31],SC_PMA_CH_INT_PLL_1[30],SC_PMA_CH_INT_PLL_1[29],SC_PMA_CH_INT_PLL_1[28],SC_PMA_CH_INT_PLL_1[27],SC_PMA_CH_INT_PLL_1[26],SC_PMA_CH_INT_PLL_1[25],SC_PMA_CH_INT_PLL_1[24],SC_PMA_CH_INT_PLL_1[23],SC_PMA_CH_INT_PLL_1[22],SC_PMA_CH_INT_PLL_1[21],SC_PMA_CH_INT_PLL_1[20],SC_PMA_CH_INT_PLL_1[19],SC_PMA_CH_INT_PLL_1[18],SC_PMA_CH_INT_PLL_1[17],SC_PMA_CH_INT_PLL_1[16],SC_PMA_CH_INT_PLL_1[15],SC_PMA_CH_INT_PLL_1[14],SC_PMA_CH_INT_PLL_1[13],SC_PMA_CH_INT_PLL_1[12],SC_PMA_CH_INT_PLL_1[11],SC_PMA_CH_INT_PLL_1[10],SC_PMA_CH_INT_PLL_1[9],SC_PMA_CH_INT_PLL_1[8],SC_PMA_CH_INT_PLL_1[7],SC_PMA_CH_INT_PLL_1[6],SC_PMA_CH_INT_PLL_1[5],SC_PMA_CH_INT_PLL_1[4],SC_PMA_CH_INT_PLL_1[3],SC_PMA_CH_INT_PLL_1[2],SC_PMA_CH_INT_PLL_1[1],SC_PMA_CH_INT_PLL_1[0]" */,

// configuration_body_def_end

        input FOR_PMA_TEST_SE_N[2:0] = 3'b111,
        input FOR_PMA_TEST_CLK[2:0] = 3'b111,
        input FOR_PMA_TEST_RSTN[2:0] = 3'b111,
        input FOR_PMA_TEST_SI_CH0[1:0] = 2'b11,
        input FOR_PMA_TEST_SI_CH1[1:0] = 2'b11,
        input FOR_PMA_TEST_SI_CH2[1:0] = 2'b11,
        input FOR_PMA_TEST_SI_CH3[1:0] = 2'b11,
        input CFG_ADDR_0[11:0] = 12'b1111_1111_1111,
        input CFG_ADDR_1[11:0] = 12'b1111_1111_1111,
        input CFG_ADDR_2[11:0] = 12'b1111_1111_1111,
        input CFG_ADDR_3[11:0] = 12'b1111_1111_1111,
        input CFG_ADDR_PLL_0[11:0] = 12'b1111_1111_1111,
        input CFG_ADDR_PLL_1[11:0] = 12'b1111_1111_1111,
        input CFG_WDATA_0[7:0] = 8'b1111_1111,
        input CFG_WDATA_1[7:0] = 8'b1111_1111,
        input CFG_WDATA_2[7:0] = 8'b1111_1111,
        input CFG_WDATA_3[7:0] = 8'b1111_1111,
        input CFG_WDATA_PLL_0[7:0] = 8'b1111_1111,
        input CFG_WDATA_PLL_1[7:0] = 8'b1111_1111,
        input TDATA_0[45:0] = 46'b1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_11,
        input TDATA_1[45:0] = 46'b1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_11,
        input TDATA_2[45:0] = 46'b1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_11,
        input TDATA_3[45:0] = 46'b1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_11,
        input PCS_WORD_ALIGN_EN[3:0] = 4'b1111,
        input RX_POLARITY_INVERT[3:0] = 4'b1111,
        input CEB_ADETECT_EN[3:0] = 4'b1111,
        input PCS_MCB_EXT_EN[3:0] = 4'b1111,
        input PCS_NEAREND_LOOP[3:0] = 4'b1111,
        input PCS_FAREND_LOOP[3:0] = 4'b1111,
        input PMA_NEAREND_PLOOP[3:0] = 4'b1111,
        input PMA_NEAREND_SLOOP[3:0] = 4'b1111,
        input PMA_FAREND_PLOOP[3:0] = 4'b1111,
        input RESCAL_I_CODE_I_0[5:0] = 6'b1111_11,
        input RESCAL_I_CODE_I_1[5:0] = 6'b1111_11,
        input TX_DEEMP_0[1:0] = 2'b11,
        input TX_RATE_0[2:0] = 3'b111,
        input TX_BUSWIDTH_0[2:0] = 3'b111,
        input TX_MARGIN_0[2:0] = 3'b111,
        input RX_RATE_0[2:0] = 3'b111,
        input RX_BUSWIDTH_0[2:0] = 3'b111,
        input CIM_CLK_ALIGNER_RX0[7:0] = 8'b1111_1111,
        input CIM_CLK_ALIGNER_TX0[7:0] = 8'b1111_1111,
        input TX_DEEMP_1[1:0] = 2'b11,
        input TX_RATE_1[2:0] = 3'b111,
        input TX_BUSWIDTH_1[2:0] = 3'b111,
        input TX_MARGIN_1[2:0] = 3'b111,
        input RX_RATE_1[2:0] = 3'b111,
        input RX_BUSWIDTH_1[2:0] = 3'b111,
        input CIM_CLK_ALIGNER_RX1[7:0] = 8'b1111_1111,
        input CIM_CLK_ALIGNER_TX1[7:0] = 8'b1111_1111,
        input TX_DEEMP_2[1:0] = 2'b11,
        input TX_RATE_2[2:0] = 3'b111,
        input TX_BUSWIDTH_2[2:0] = 3'b111,
        input TX_MARGIN_2[2:0] = 3'b111,
        input RX_RATE_2[2:0] = 3'b111,
        input RX_BUSWIDTH_2[2:0] = 3'b111,
        input CIM_CLK_ALIGNER_RX2[7:0] = 8'b1111_1111,
        input CIM_CLK_ALIGNER_TX2[7:0] = 8'b1111_1111,
        input TX_DEEMP_3[1:0] = 2'b11,
        input TX_RATE_3[2:0] = 3'b111,
        input TX_BUSWIDTH_3[2:0] = 3'b111,
        input TX_MARGIN_3[2:0] = 3'b111,
        input RX_RATE_3[2:0] = 3'b111,
        input RX_BUSWIDTH_3[2:0] = 3'b111,
        input CIM_CLK_ALIGNER_RX3[7:0] = 8'b1111_1111,
        input CIM_CLK_ALIGNER_TX3[7:0] = 8'b1111_1111,
        input TEST_SI0 = 1'b1,
        input TEST_SI1 = 1'b1,
        input TEST_SI2 = 1'b1,
        input TEST_SI3 = 1'b1,
        input TEST_SI4 = 1'b1,
        input TEST_SI5 = 1'b1,
        input TEST_SI6 = 1'b1,
        input TEST_SI7 = 1'b1,
        input TEST_SI8 = 1'b1,
        input TEST_SI9 = 1'b1,
        input TEST_SI10 = 1'b1,
        input TEST_SI11 = 1'b1,
        input TEST_SI12 = 1'b1,
        input TEST_SI13 = 1'b1,
        input TEST_SI14 = 1'b1,
        input TEST_SI15 = 1'b1,
        input TEST_SI16 = 1'b1,
        input TEST_SI17 = 1'b1,
        input TEST_SI18 = 1'b1,
        input TEST_SI19 = 1'b1,
        input TEST_SI20 = 1'b1,
        input TEST_SI21 = 1'b1,
        input TEST_SE_N = 1'b1,
        input TEST_MODE_N = 1'b1,
        input TEST_RSTN = 1'b1,
        input FOR_PMA_TEST_MODE_N = 1'b1,
        input FOR_PMA_TEST_SI_PLL0 = 1'b1,
        input FOR_PMA_TEST_SI_PLL1 = 1'b1,
        input PAD_RX_SDP0 = 1'b1,
        input PAD_RX_SDN0 = 1'b1,
        input PAD_RX_SDP1 = 1'b1,
        input PAD_RX_SDN1 = 1'b1,
        input PAD_RX_SDP2 = 1'b1,
        input PAD_RX_SDN2 = 1'b1,
        input PAD_RX_SDP3 = 1'b1,
        input PAD_RX_SDN3 = 1'b1,
        input RX0_CLK_FR_CORE = 1'b1,
        input RX1_CLK_FR_CORE = 1'b1,
        input RX2_CLK_FR_CORE = 1'b1,
        input RX3_CLK_FR_CORE = 1'b1,
        input RCLK2_0_FR_CORE = 1'b1,
        input RCLK2_1_FR_CORE = 1'b1,
        input RCLK2_2_FR_CORE = 1'b1,
        input RCLK2_3_FR_CORE = 1'b1,
        input TX0_CLK_FR_CORE = 1'b1,
        input TX1_CLK_FR_CORE = 1'b1,
        input TX2_CLK_FR_CORE = 1'b1,
        input TX3_CLK_FR_CORE = 1'b1,
        input TCLK2_0_FR_CORE = 1'b1,
        input TCLK2_1_FR_CORE = 1'b1,
        input TCLK2_2_FR_CORE = 1'b1,
        input TCLK2_3_FR_CORE = 1'b1,
        input HSST_RST = 1'b1,
        input PCS_RX_RST_0 = 1'b1,
        input PCS_RX_RST_1 = 1'b1,
        input PCS_RX_RST_2 = 1'b1,
        input PCS_RX_RST_3 = 1'b1,
        input PCS_TX_RST_0 = 1'b1,
        input PCS_TX_RST_1 = 1'b1,
        input PCS_TX_RST_2 = 1'b1,
        input PCS_TX_RST_3 = 1'b1,
        input PCS_CB_RST_0 = 1'b1,
        input PCS_CB_RST_1 = 1'b1,
        input PCS_CB_RST_2 = 1'b1,
        input PCS_CB_RST_3 = 1'b1,
        input RXGEAR_SLIP_0 = 1'b1,
        input RXGEAR_SLIP_1 = 1'b1,
        input RXGEAR_SLIP_2 = 1'b1,
        input RXGEAR_SLIP_3 = 1'b1,
        input CFG_CLK_0 = 1'b1,
        input CFG_CLK_1 = 1'b1,
        input CFG_CLK_2 = 1'b1,
        input CFG_CLK_3 = 1'b1,
        input CFG_CLK_PLL_0 = 1'b1,
        input CFG_CLK_PLL_1 = 1'b1,
        input CFG_RST_0 = 1'b1,
        input CFG_RST_1 = 1'b1,
        input CFG_RST_2 = 1'b1,
        input CFG_RST_3 = 1'b1,
        input CFG_RST_PLL_0 = 1'b1,
        input CFG_RST_PLL_1 = 1'b1,
        input CFG_PSEL_0 = 1'b1,
        input CFG_PSEL_1 = 1'b1,
        input CFG_PSEL_2 = 1'b1,
        input CFG_PSEL_3 = 1'b1,
        input CFG_PSEL_PLL_0 = 1'b1,
        input CFG_PSEL_PLL_1 = 1'b1,
        input CFG_ENABLE_0 = 1'b1,
        input CFG_ENABLE_1 = 1'b1,
        input CFG_ENABLE_2 = 1'b1,
        input CFG_ENABLE_3 = 1'b1,
        input CFG_ENABLE_PLL_0 = 1'b1,
        input CFG_ENABLE_PLL_1 = 1'b1,
        input CFG_WRITE_0 = 1'b1,
        input CFG_WRITE_1 = 1'b1,
        input CFG_WRITE_2 = 1'b1,
        input CFG_WRITE_3 = 1'b1,
        input CFG_WRITE_PLL_0 = 1'b1,
        input CFG_WRITE_PLL_1 = 1'b1,
        input RESCAL_RST_I_0 = 1'b1,
        input PLL_LOCKDET_RST_I_0 = 1'b1,
        input PLL_REF_CLK_0 = 1'b1,
        input PLL_RST_0 = 1'b1,
        input PLLPOWERDOWN_0 = 1'b1,
        input LANE_SYNC_0 = 1'b1,
        input RATE_CHANGE_TCLK_ON_0 = 1'b1,
        input RESCAL_RST_I_1 = 1'b1,
        input PLL_LOCKDET_RST_I_1 = 1'b1,
        input PLL_REF_CLK_1 = 1'b1,
        input PLL_RST_1 = 1'b1,
        input PLLPOWERDOWN_1 = 1'b1,
        input LANE_SYNC_1 = 1'b1,
        input RATE_CHANGE_TCLK_ON_1 = 1'b1,
        input LANE_PD_0 = 1'b1,
        input LANE_RST_0 = 1'b1,
        input RX_LANE_PD_0 = 1'b1,
        input RX_PMA_RST_0 = 1'b1,
        input CTLE_ADP_RST_0 = 1'b1,
        input TX_LS_DATA_0 = 1'b1,
        input TX_BEACON_EN_0 = 1'b1,
        input TX_SWING_0 = 1'b1,
        input TX_RXDET_REQ_0 = 1'b1,
        input TX_PMA_RST_0 = 1'b1,
        input TX_LANE_PD_CLKPATH_0 = 1'b1,
        input TX_LANE_PD_PISO_0 = 1'b1,
        input TX_LANE_PD_DRIVER_0 = 1'b1,
        input RX_HIGHZ_0 = 1'b1,
        input CIM_DYN_DLY_SEL_RX0 = 1'b1,
        input CIM_DYN_DLY_SEL_TX0 = 1'b1,
        input CIM_START_ALIGN_RX0 = 1'b1,
        input CIM_START_ALIGN_TX0 = 1'b1,
        input LANE_PD_1 = 1'b1,
        input LANE_RST_1 = 1'b1,
        input RX_LANE_PD_1 = 1'b1,
        input RX_PMA_RST_1 = 1'b1,
        input CTLE_ADP_RST_1 = 1'b1,
        input TX_LS_DATA_1 = 1'b1,
        input TX_BEACON_EN_1 = 1'b1,
        input TX_SWING_1 = 1'b1,
        input TX_RXDET_REQ_1 = 1'b1,
        input TX_PMA_RST_1 = 1'b1,
        input TX_LANE_PD_CLKPATH_1 = 1'b1,
        input TX_LANE_PD_PISO_1 = 1'b1,
        input TX_LANE_PD_DRIVER_1 = 1'b1,
        input RX_HIGHZ_1 = 1'b1,
        input CIM_DYN_DLY_SEL_RX1 = 1'b1,
        input CIM_DYN_DLY_SEL_TX1 = 1'b1,
        input CIM_START_ALIGN_RX1 = 1'b1,
        input CIM_START_ALIGN_TX1 = 1'b1,
        input LANE_PD_2 = 1'b1,
        input LANE_RST_2 = 1'b1,
        input RX_LANE_PD_2 = 1'b1,
        input RX_PMA_RST_2 = 1'b1,
        input CTLE_ADP_RST_2 = 1'b1,
        input TX_LS_DATA_2 = 1'b1,
        input TX_BEACON_EN_2 = 1'b1,
        input TX_SWING_2 = 1'b1,
        input TX_RXDET_REQ_2 = 1'b1,
        input TX_PMA_RST_2 = 1'b1,
        input TX_LANE_PD_CLKPATH_2 = 1'b1,
        input TX_LANE_PD_PISO_2 = 1'b1,
        input TX_LANE_PD_DRIVER_2 = 1'b1,
        input RX_HIGHZ_2 = 1'b1,
        input CIM_DYN_DLY_SEL_RX2 = 1'b1,
        input CIM_DYN_DLY_SEL_TX2 = 1'b1,
        input CIM_START_ALIGN_RX2 = 1'b1,
        input CIM_START_ALIGN_TX2 = 1'b1,
        input LANE_PD_3 = 1'b1,
        input LANE_RST_3 = 1'b1,
        input RX_LANE_PD_3 = 1'b1,
        input RX_PMA_RST_3 = 1'b1,
        input CTLE_ADP_RST_3 = 1'b1,
        input TX_LS_DATA_3 = 1'b1,
        input TX_BEACON_EN_3 = 1'b1,
        input TX_SWING_3 = 1'b1,
        input TX_RXDET_REQ_3 = 1'b1,
        input TX_PMA_RST_3 = 1'b1,
        input TX_LANE_PD_CLKPATH_3 = 1'b1,
        input TX_LANE_PD_PISO_3 = 1'b1,
        input TX_LANE_PD_DRIVER_3 = 1'b1,
        input RX_HIGHZ_3 = 1'b1,
        input CIM_DYN_DLY_SEL_RX3 = 1'b1,
        input CIM_DYN_DLY_SEL_TX3 = 1'b1,
        input CIM_START_ALIGN_RX3 = 1'b1,
        input CIM_START_ALIGN_TX3 = 1'b1,
        input CLK_TXP_0 = 1'b1,
        input CLK_TXN_0 = 1'b1,
        input CLK_RX0_0 = 1'b1,
        input CLK_RX180_0 = 1'b1,
        input CLK_RX90_0 = 1'b1,
        input CLK_RX270_0 = 1'b1,
        input CLK_TXP_1 = 1'b1,
        input CLK_TXN_1 = 1'b1,
        input CLK_RX0_1 = 1'b1,
        input CLK_RX180_1 = 1'b1,
        input CLK_RX90_1 = 1'b1,
        input CLK_RX270_1 = 1'b1,
        input CLK_TXP_2 = 1'b1,
        input CLK_TXN_2 = 1'b1,
        input CLK_RX0_2 = 1'b1,
        input CLK_RX180_2 = 1'b1,
        input CLK_RX90_2 = 1'b1,
        input CLK_RX270_2 = 1'b1,
        input CLK_TXP_3 = 1'b1,
        input CLK_TXN_3 = 1'b1,
        input CLK_RX0_3 = 1'b1,
        input CLK_RX180_3 = 1'b1,
        input CLK_RX90_3 = 1'b1,
        input CLK_RX270_3 = 1'b1,
        input SYNC_CH0 = 1'b1,
        input SYNC_CH1 = 1'b1,
        input SYNC_CH2 = 1'b1,
        input SYNC_CH3 = 1'b1,
        input TXPCLK_PLL_SELECTED_0 = 1'b1,
        input TXPCLK_PLL_SELECTED_1 = 1'b1,
        input RATE_CHANGE_CH0 = 1'b1,
        input RATE_CHANGE_CH1 = 1'b1,
        input RATE_CHANGE_CH2 = 1'b1,
        input RATE_CHANGE_CH3 = 1'b1,
        input PLL_PD_I_0 = 1'b1,
        input PLL_PD_I_1 = 1'b1,
        input PLL_PD_I_2 = 1'b1,
        input PLL_PD_I_3 = 1'b1,
        input PLL_RESET_I_0 = 1'b1,
        input PLL_RESET_I_1 = 1'b1,
        input PLL_RESET_I_2 = 1'b1,
        input PLL_RESET_I_3 = 1'b1,
        input PLL_LOCK_SEL_0 = 1'b1,
        input PLL_LOCK_SEL_1 = 1'b1,
        input PLL_LOCK_SEL_2 = 1'b1,
        input PLL_LOCK_SEL_3 = 1'b1,
        input PLL_REFCLK_I_0 = 1'b1,
        input PLL_REFCLK_I_1 = 1'b1,
        input PLL_REFCLK_I_2 = 1'b1,
        input PLL_REFCLK_I_3 = 1'b1,
        input REFCLK_CML_P_0 = 1'b1,
        input REFCLK_CML_N_0 = 1'b1,
        input REFCLK_CML_P_1 = 1'b1,
        input REFCLK_CML_N_1 = 1'b1,
        output FOR_PMA_TEST_SO_CH0[1:0],
        output FOR_PMA_TEST_SO_CH1[1:0],
        output FOR_PMA_TEST_SO_CH2[1:0],
        output FOR_PMA_TEST_SO_CH3[1:0],
        output CFG_RDATA_0[7:0],
        output CFG_RDATA_1[7:0],
        output CFG_RDATA_2[7:0],
        output CFG_RDATA_3[7:0],
        output CFG_RDATA_PLL_0[7:0],
        output CFG_RDATA_PLL_1[7:0],
        output PCS_RX_MCB_STATUS[3:0],
        output PCS_LSM_SYNCED[3:0],
        output RDATA_0[46:0],
        output RDATA_1[46:0],
        output RDATA_2[46:0],
        output RDATA_3[46:0],
        output RCLK2FABRIC[3:0],
        output TCLK2FABRIC[3:0],
        output RESCAL_I_CODE_O_0[5:0],
        output RESCAL_I_CODE_O_1[5:0],
        output TEST_STATUS_0[19:0],
        output CA_ALIGN_RX[3:0],
        output CA_ALIGN_TX[3:0],
        output TEST_STATUS_1[19:0],
        output TEST_STATUS_2[19:0],
        output TEST_STATUS_3[19:0],
        output TEST_SO0,
        output TEST_SO1,
        output TEST_SO2,
        output TEST_SO3,
        output TEST_SO4,
        output TEST_SO5,
        output TEST_SO6,
        output TEST_SO7,
        output TEST_SO8,
        output TEST_SO9,
        output TEST_SO10,
        output TEST_SO11,
        output TEST_SO12,
        output TEST_SO13,
        output TEST_SO14,
        output TEST_SO15,
        output TEST_SO16,
        output TEST_SO17,
        output TEST_SO18,
        output TEST_SO19,
        output TEST_SO20,
        output TEST_SO21,
        output FOR_PMA_TEST_SO_PLL0,
        output FOR_PMA_TEST_SO_PLL1,
        output PAD_TX_SDP0,
        output PAD_TX_SDN0,
        output PAD_TX_SDP1,
        output PAD_TX_SDN1,
        output PAD_TX_SDP2,
        output PAD_TX_SDN2,
        output PAD_TX_SDP3,
        output PAD_TX_SDN3,
        output CFG_READY_0,
        output CFG_READY_1,
        output CFG_READY_2,
        output CFG_READY_3,
        output CFG_READY_PLL_0,
        output CFG_READY_PLL_1,
        output CFG_INT_0,
        output CFG_INT_1,
        output CFG_INT_2,
        output CFG_INT_3,
        output CFG_INT_PLL_0,
        output CFG_INT_PLL_1,
        output REFCK2CORE_0,
        output PLL_READY_0,
        output REFCK2CORE_1,
        output PLL_READY_1,
        output RX_SIGDET_STATUS_0,
        output RX_SATA_COMINIT_0,
        output RX_SATA_COMWAKE_0,
        output RX_LS_DATA_0,
        output RX_READY_0,
        output TX_RXDET_STATUS_0,
        output RX_SIGDET_STATUS_1,
        output RX_SATA_COMINIT_1,
        output RX_SATA_COMWAKE_1,
        output RX_LS_DATA_1,
        output RX_READY_1,
        output TX_RXDET_STATUS_1,
        output RX_SIGDET_STATUS_2,
        output RX_SATA_COMINIT_2,
        output RX_SATA_COMWAKE_2,
        output RX_LS_DATA_2,
        output RX_READY_2,
        output TX_RXDET_STATUS_2,
        output RX_SIGDET_STATUS_3,
        output RX_SATA_COMINIT_3,
        output RX_SATA_COMWAKE_3,
        output RX_LS_DATA_3,
        output RX_READY_3,
        output TX_RXDET_STATUS_3,
        output PLL_CLK0_0,
        output PLL_CLK90_0,
        output PLL_CLK180_0,
        output PLL_CLK270_0,
        output PLL_CLK0_1,
        output PLL_CLK90_1,
        output PLL_CLK180_1,
        output PLL_CLK270_1,
        output SYNC_PLL_0,
        output SYNC_PLL_1,
        output TXPCLK_PLL_0,
        output TXPCLK_PLL_1,
        output TXPCLK_PLL_2,
        output TXPCLK_PLL_3,
        output RATE_CHANGE_PLL_0,
        output RATE_CHANGE_PLL_1,
        output PLL_PD_O_0,
        output PLL_PD_O_1,
        output PLL_RST_O_0,
        output PLL_RST_O_1,
        output PMA_PLL_READY_O_0,
        output PMA_PLL_READY_O_1,
        output PLL_REFCLK_LANE_L_0,
        output PLL_REFCLK_LANE_L_1
    );
};
//grid device end

//grid device structure netlist started
structure netlist of HSSTLP
{

///////////mux_2to1////////
    wire ntSIG_IN0_0;
    wire ntSIG_OUT_0;
    
    wire ntSIG_OUT_1;
    
    wire ntSIG_IN0_2;
    wire ntSIG_OUT_2;
       
    wire ntSIG_OUT_3;
///////////U0_HSSTLP_LANE////////////////////////
   // wire ntPMA_RCLK_0; 
   // wire ntMCB_RCLK_0;
    wire ntAPATTERN_STATUS_CIN_0;  
    wire ntAPATTERN_MATCH_LSB_COUT_0;
    wire ntAPATTERN_MATCH_MSB_COUT_0;  
    wire ntAPATTERN_SEACHING_PROC_COUT_0; 
    wire ntRFIFO_EN_CB_COUT_0;   
    wire ntRFIFO_EN_BRIDGE_COUT_0      ;
    wire ntRFIFO_EN_AFTER_CTC_COUT_0   ;
    wire ntRFIFO_EN_AFTER_CTC_GB_COUT_0;
    wire ntCB_RCLK_EN_COUT_0           ;
    wire ntAFTER_CTC_RCLK_EN_COUT_0    ;
    wire ntAFTER_CTC_RCLK_EN_GB_COUT_0 ;
    wire ntTFIFO_EN_PCS_TX_COUT_0      ;
    wire ntTFIFO_EN_BRIDGE_COUT_0      ;
    wire ntPCS_TCLK_EN_COUT_0          ;
    wire ntGEAR_TCLK_EN_COUT_0         ;
    wire ntSKIP_ADD_MCB_COUT_0         ;
    wire ntSKIP_DEL_MCB_COUT_0         ;
    wire ntSKIP_ADD_LSB_MCB_COUT_0     ;
    wire ntSKIP_DEL_LSB_MCB_COUT_0     ;
    wire ntCTC_RD_FIFO_COUT_0          ;
//////////U1_HSSTLP_LANE///////////////////    
    //wire ntAPATTERN_STATUS_CIN_1       ;
    wire ntAPATTERN_MATCH_LSB_COUT_1     ;
    wire ntAPATTERN_MATCH_MSB_COUT_1     ;
    wire ntAPATTERN_SEACHING_PROC_COUT_1 ;
    wire ntRFIFO_EN_CB_COUT_1            ;
    wire ntRFIFO_EN_BRIDGE_COUT_1        ;
    wire ntRFIFO_EN_AFTER_CTC_COUT_1     ;
    wire ntRFIFO_EN_AFTER_CTC_GB_COUT_1  ;
    wire ntCB_RCLK_EN_COUT_1             ;
    wire ntAFTER_CTC_RCLK_EN_COUT_1      ;
    wire ntAFTER_CTC_RCLK_EN_GB_COUT_1   ;
    wire ntTFIFO_EN_PCS_TX_COUT_1        ;
    wire ntTFIFO_EN_BRIDGE_COUT_1        ;
    wire ntPCS_TCLK_EN_COUT_1            ;
    wire ntGEAR_TCLK_EN_COUT_1           ;
    wire ntSKIP_ADD_MCB_COUT_1           ;
    wire ntSKIP_DEL_MCB_COUT_1           ;
    wire ntSKIP_ADD_LSB_MCB_COUT_1       ;
    wire ntSKIP_DEL_LSB_MCB_COUT_1       ;
    wire ntCTC_RD_FIFO_COUT_1            ;
 
/////////U2_HSSTLP_LANE//////////
    wire ntAPATTERN_STATUS_CIN_2;
    wire ntAPATTERN_MATCH_LSB_COUT_2;    
    wire ntAPATTERN_MATCH_MSB_COUT_2;    
    wire ntAPATTERN_STATUS_COUT_2;       
    wire ntAPATTERN_SEACHING_PROC_COUT_2;
    wire ntRFIFO_EN_CB_COUT_2;           
    wire ntRFIFO_EN_BRIDGE_COUT_2;       
    wire ntRFIFO_EN_AFTER_CTC_COUT_2;    
    wire ntRFIFO_EN_AFTER_CTC_GB_COUT_2; 
    wire ntCB_RCLK_EN_COUT_2;            
    wire ntAFTER_CTC_RCLK_EN_COUT_2;     
    wire ntAFTER_CTC_RCLK_EN_GB_COUT_2;  
    wire ntTFIFO_EN_PCS_TX_COUT_2;       
    wire ntTFIFO_EN_BRIDGE_COUT_2;       
    wire ntPCS_TCLK_EN_COUT_2;           
    wire ntGEAR_TCLK_EN_COUT_2;          
    wire ntSKIP_ADD_MCB_COUT_2;          
    wire ntSKIP_DEL_MCB_COUT_2;          
    wire ntSKIP_ADD_LSB_MCB_COUT_2;      
    wire ntSKIP_DEL_LSB_MCB_COUT_2;      
    wire ntCTC_RD_FIFO_COUT_2;  
    
    wire ntpma_rclk_0;
    wire ntmcb_rclk_0;

  //  wire ntpma_rclk_0;
    wire ntmcb_rclk_1;
    wire ntpma_rclk_2;
        
  //  wire ntpma_rclk_0;    
    wire ntmcb_rclk_2;
//    wire ntpma_rclk_2;    
//    wire ntpma_rclk_0;    
    wire ntmcb_rclk_3;
     
   device MUX_2TO1 u4_mux_2to1
   parameter map
   (
      CP_SIG_SELECT                =>  CP_LANE0_PCS_SLAVE
   )
   port map
   (
     SIG_IN0                =>  ntSIG_IN0_0,
     SIG_OUT                =>  ntSIG_OUT_0
   ); 
   device MUX_2TO1 u5_mux_2to1
   parameter map
   (
      CP_SIG_SELECT                =>  CP_LANE1_PCS_SLAVE
   )
   port map
   (
     SIG_IN1                =>  ntSIG_IN0_0,
     SIG_OUT                =>  ntSIG_OUT_1
   ); 

   device MUX_2TO1 u6_mux_2to1
   parameter map
   (
      CP_SIG_SELECT                =>  CP_LANE2_PCS_SLAVE
   )
   port map
   (
     SIG_IN0                =>  ntSIG_IN0_2,
     SIG_IN1                =>  ntSIG_IN0_0,
     SIG_OUT                =>  ntSIG_OUT_2
   );  
   device MUX_2TO1 u7_mux_2to1
   parameter map
   (
      CP_SIG_SELECT                =>  CP_LANE2_PCS_SLAVE
   )
   port map
   (
     SIG_IN0                =>  ntSIG_IN0_2,
     SIG_IN1                =>  ntSIG_IN0_0,
     SIG_OUT                =>  ntSIG_OUT_3
   );  
   
   device HSSTLP_LANE U0_HSSTLP_LANE
   parameter map
   (
     CP_MUX_BIAS                                     => CP_LANE0_MUX_BIAS ,
     CP_PD_CLK                                       => CP_LANE0_PD_CLK ,
     CP_REG_SYNC                                     => CP_LANE0_REG_SYNC ,
     CP_REG_SYNC_OW                                  => CP_LANE0_REG_SYNC_OW ,
     CP_PLL_LOCK_OW                                  => CP_LANE0_PLL_LOCK_OW ,
     CP_PLL_LOCK_OW_EN                               => CP_LANE0_PLL_LOCK_OW_EN ,

     CP_PMA_REG_CDR_READY_THD                        => CP_LANE0_PMA_REG_CDR_READY_THD ,
     CP_PMA_REG_RX_RESERVED_65                       => CP_LANE0_PMA_REG_RX_RESERVED_65 ,
     CP_PMA_REG_CDR_READY_CHECK_CTRL                 => CP_LANE0_PMA_REG_CDR_READY_CHECK_CTRL ,
     CP_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL            => CP_LANE0_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL ,
     CP_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL            => CP_LANE0_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL ,
     CP_PMA_CTLE_REG_FORCE_SEL_I                     => CP_LANE0_PMA_CTLE_REG_FORCE_SEL_I ,
     CP_PMA_CTLE_REG_HOLD_I                          => CP_LANE0_PMA_CTLE_REG_HOLD_I ,
     CP_PMA_CTLE_REG_INIT_DAC_I                      => CP_LANE0_PMA_CTLE_REG_INIT_DAC_I ,
     CP_PMA_CTLE_REG_POLARITY_I                      => CP_LANE0_PMA_CTLE_REG_POLARITY_I ,
     CP_PMA_CTLE_REG_SHIFTER_GAIN_I                  => CP_LANE0_PMA_CTLE_REG_SHIFTER_GAIN_I ,
     CP_PMA_CTLE_REG_THRESHOLD_I                     => CP_LANE0_PMA_CTLE_REG_THRESHOLD_I ,
     CP_PMA_REG_RX_RES_TRIM_EN                       => CP_LANE0_PMA_REG_RX_RES_TRIM_EN ,
     CP_PMA_REG_RX_RESERVED_393_389                  => CP_LANE0_PMA_REG_RX_RESERVED_393_389 ,

     CP_PCS_SLAVE                                    => CP_LANE0_PCS_SLAVE ,
     CP_PCS_BYPASS_WORD_ALIGN                        => CP_LANE0_PCS_BYPASS_WORD_ALIGN ,          
     CP_PCS_BYPASS_DENC                              => CP_LANE0_PCS_BYPASS_DENC ,           
     CP_PCS_BYPASS_BONDING                           => CP_LANE0_PCS_BYPASS_BONDING , 
     CP_PCS_BYPASS_CTC                               => CP_LANE0_PCS_BYPASS_CTC , 
     CP_PCS_BYPASS_GEAR                              => CP_LANE0_PCS_BYPASS_GEAR , 
     CP_PCS_BYPASS_BRIDGE                            => CP_LANE0_PCS_BYPASS_BRIDGE , 
     CP_PCS_BYPASS_BRIDGE_FIFO                       => CP_LANE0_PCS_BYPASS_BRIDGE_FIFO , 
     CP_PCS_DATA_MODE                                => CP_LANE0_PCS_DATA_MODE , 
     CP_PCS_RX_POLARITY_INV                          => CP_LANE0_PCS_RX_POLARITY_INV , 
     CP_PCS_ALIGN_MODE                               => CP_LANE0_PCS_ALIGN_MODE , 
     CP_PCS_SAMP_16B                                 => CP_LANE0_PCS_SAMP_16B ,          
     CP_PCS_FARLP_PWR_REDUCTION                      => CP_LANE0_PCS_FARLP_PWR_REDUCTION ,           
     CP_PCS_COMMA_REG0                               => CP_LANE0_PCS_COMMA_REG0 , 
     CP_PCS_COMMA_MASK                               => CP_LANE0_PCS_COMMA_MASK , 
     CP_PCS_CEB_MODE                                 => CP_LANE0_PCS_CEB_MODE , 
     CP_PCS_CTC_MODE                                 => CP_LANE0_PCS_CTC_MODE , 
     CP_PCS_A_REG                                    => CP_LANE0_PCS_A_REG , 
     CP_PCS_GE_AUTO_EN                               => CP_LANE0_PCS_GE_AUTO_EN , 
     CP_PCS_SKIP_REG0                                => CP_LANE0_PCS_SKIP_REG0 , 
     CP_PCS_SKIP_REG1                                => CP_LANE0_PCS_SKIP_REG1 , 
     CP_PCS_SKIP_REG2                                => CP_LANE0_PCS_SKIP_REG2 ,          
     CP_PCS_SKIP_REG3                                => CP_LANE0_PCS_SKIP_REG3 ,           
     CP_PCS_DEC_DUAL                                 => CP_LANE0_PCS_DEC_DUAL , 
     CP_PCS_SPLIT                                    => CP_LANE0_PCS_SPLIT , 
     CP_PCS_FIFOFLAG_CTC                             => CP_LANE0_PCS_FIFOFLAG_CTC , 
     CP_PCS_COMMA_DET_MODE                           => CP_LANE0_PCS_COMMA_DET_MODE , 
     CP_PCS_ERRDETECT_SILENCE                        => CP_LANE0_PCS_ERRDETECT_SILENCE , 
     CP_PCS_PMA_RCLK_POLINV                          => CP_LANE0_PCS_PMA_RCLK_POLINV , 
     CP_PCS_PCS_RCLK_SEL                             => CP_LANE0_PCS_PCS_RCLK_SEL , 
     CP_PCS_CB_RCLK_SEL                              => CP_LANE0_PCS_CB_RCLK_SEL , 
     CP_PCS_AFTER_CTC_RCLK_SEL                       => CP_LANE0_PCS_AFTER_CTC_RCLK_SEL ,           
     CP_PCS_RCLK_POLINV                              => CP_LANE0_PCS_RCLK_POLINV , 
     CP_PCS_BRIDGE_RCLK_SEL                          => CP_LANE0_PCS_BRIDGE_RCLK_SEL , 
     CP_PCS_PCS_RCLK_EN                              => CP_LANE0_PCS_PCS_RCLK_EN ,
     CP_PCS_CB_RCLK_EN                               => CP_LANE0_PCS_CB_RCLK_EN  ,
     CP_PCS_AFTER_CTC_RCLK_EN                        => CP_LANE0_PCS_AFTER_CTC_RCLK_EN ,
     CP_PCS_AFTER_CTC_RCLK_EN_GB                     => CP_LANE0_PCS_AFTER_CTC_RCLK_EN_GB ,
     CP_PCS_PCS_RX_RSTN                              => CP_LANE0_PCS_PCS_RX_RSTN ,
     CP_PCS_PCIE_SLAVE                               => CP_LANE0_PCS_PCIE_SLAVE ,
     CP_PCS_RX_64B66B_67B                            => CP_LANE0_PCS_RX_64B66B_67B ,
     CP_PCS_RX_BRIDGE_CLK_POLINV                     => CP_LANE0_PCS_RX_BRIDGE_CLK_POLINV ,
     CP_PCS_PCS_CB_RSTN                              => CP_LANE0_PCS_PCS_CB_RSTN ,
     CP_PCS_TX_BRIDGE_GEAR_SEL                       => CP_LANE0_PCS_TX_BRIDGE_GEAR_SEL ,
     CP_PCS_TX_BYPASS_BRIDGE_UINT                    => CP_LANE0_PCS_TX_BYPASS_BRIDGE_UINT ,
     CP_PCS_TX_BYPASS_BRIDGE_FIFO                    => CP_LANE0_PCS_TX_BYPASS_BRIDGE_FIFO ,
     CP_PCS_TX_BYPASS_GEAR                           => CP_LANE0_PCS_TX_BYPASS_GEAR ,
     CP_PCS_TX_BYPASS_ENC                            => CP_LANE0_PCS_TX_BYPASS_ENC ,
     CP_PCS_TX_BYPASS_BIT_SLIP                       => CP_LANE0_PCS_TX_BYPASS_BIT_SLIP ,
     CP_PCS_TX_GEAR_SPLIT                            => CP_LANE0_PCS_TX_GEAR_SPLIT ,
     CP_PCS_TX_DRIVE_REG_MODE                        => CP_LANE0_PCS_TX_DRIVE_REG_MODE ,
     CP_PCS_TX_BIT_SLIP_CYCLES                       => CP_LANE0_PCS_TX_BIT_SLIP_CYCLES ,
     CP_PCS_INT_TX_MASK_0                            => CP_LANE0_PCS_INT_TX_MASK_0 ,
     CP_PCS_INT_TX_MASK_1                            => CP_LANE0_PCS_INT_TX_MASK_1 ,
     CP_PCS_INT_TX_MASK_2                            => CP_LANE0_PCS_INT_TX_MASK_2 ,
     CP_PCS_INT_TX_CLR_0                             => CP_LANE0_PCS_INT_TX_CLR_0 ,
     CP_PCS_INT_TX_CLR_1                             => CP_LANE0_PCS_INT_TX_CLR_1 ,
     CP_PCS_INT_TX_CLR_2                             => CP_LANE0_PCS_INT_TX_CLR_2 ,
     CP_PCS_TX_PMA_TCLK_POLINV                       => CP_LANE0_PCS_TX_PMA_TCLK_POLINV ,
     CP_PCS_TX_PCS_CLK_EN_SEL                        => CP_LANE0_PCS_TX_PCS_CLK_EN_SEL ,
     CP_PCS_TX_BRIDGE_TCLK_SEL                       => CP_LANE0_PCS_TX_BRIDGE_TCLK_SEL ,
     CP_PCS_TX_TCLK_POLINV                           => CP_LANE0_PCS_TX_TCLK_POLINV ,
     CP_PCS_PCS_TCLK_SEL                             => CP_LANE0_PCS_PCS_TCLK_SEL ,
     CP_PCS_TX_PCS_TX_RSTN                           => CP_LANE0_PCS_TX_PCS_TX_RSTN ,
     CP_PCS_TX_SLAVE                                 => CP_LANE0_PCS_TX_SLAVE ,
     CP_PCS_TX_GEAR_CLK_EN_SEL                       => CP_LANE0_PCS_TX_GEAR_CLK_EN_SEL ,
     CP_PCS_DATA_WIDTH_MODE                          => CP_LANE0_PCS_DATA_WIDTH_MODE ,
     CP_PCS_TX_64B66B_67B                            => CP_LANE0_PCS_TX_64B66B_67B ,
     CP_PCS_GEAR_TCLK_SEL                            => CP_LANE0_PCS_GEAR_TCLK_SEL ,
     CP_PCS_TX_TCLK2FABRIC_SEL                       => CP_LANE0_PCS_TX_TCLK2FABRIC_SEL ,
     CP_PCS_TX_OUTZZ                                 => CP_LANE0_PCS_TX_OUTZZ ,
     CP_PCS_ENC_DUAL                                 => CP_LANE0_PCS_ENC_DUAL ,
     CP_PCS_TX_BITSLIP_DATA_MODE                     => CP_LANE0_PCS_TX_BITSLIP_DATA_MODE ,
     CP_PCS_TX_BRIDGE_CLK_POLINV                     => CP_LANE0_PCS_TX_BRIDGE_CLK_POLINV ,
     CP_PCS_COMMA_REG1                               => CP_LANE0_PCS_COMMA_REG1 ,
     CP_PCS_RAPID_IMAX                               => CP_LANE0_PCS_RAPID_IMAX ,
     CP_PCS_RAPID_VMIN_1                             => CP_LANE0_PCS_RAPID_VMIN_1 ,
     CP_PCS_RAPID_VMIN_2                             => CP_LANE0_PCS_RAPID_VMIN_2 ,
     CP_PCS_RX_PRBS_MODE                             => CP_LANE0_PCS_RX_PRBS_MODE ,
     CP_PCS_RX_ERRCNT_CLR                            => CP_LANE0_PCS_RX_ERRCNT_CLR ,
     CP_PCS_PRBS_ERR_LPBK                            => CP_LANE0_PCS_PRBS_ERR_LPBK ,
     CP_PCS_TX_PRBS_MODE                             => CP_LANE0_PCS_TX_PRBS_MODE ,
     CP_PCS_TX_INSERT_ER                             => CP_LANE0_PCS_TX_INSERT_ER ,
     CP_PCS_ENABLE_PRBS_GEN                          => CP_LANE0_PCS_ENABLE_PRBS_GEN ,
     CP_PCS_DEFAULT_RADDR                            => CP_LANE0_PCS_DEFAULT_RADDR ,
     CP_PCS_MASTER_CHECK_OFFSET                      => CP_LANE0_PCS_MASTER_CHECK_OFFSET ,
     CP_PCS_DELAY_SET                                => CP_LANE0_PCS_DELAY_SET ,
     CP_PCS_SEACH_OFFSET                             => CP_LANE0_PCS_SEACH_OFFSET ,
     CP_PCS_CEB_RAPIDLS_MMAX                         => CP_LANE0_PCS_CEB_RAPIDLS_MMAX ,
     CP_PCS_CTC_AFULL                                => CP_LANE0_PCS_CTC_AFULL ,
     CP_PCS_CTC_AEMPTY                               => CP_LANE0_PCS_CTC_AEMPTY ,
     CP_PCS_CTC_CONTI_SKP_SET                        => CP_LANE0_PCS_CTC_CONTI_SKP_SET ,
     CP_PCS_FAR_LOOP                                 => CP_LANE0_PCS_FAR_LOOP ,
     CP_PCS_NEAR_LOOP                                => CP_LANE0_PCS_NEAR_LOOP ,
     CP_PCS_PMA_TX2RX_PLOOP_EN                       => CP_LANE0_PCS_PMA_TX2RX_PLOOP_EN ,
     CP_PCS_PMA_TX2RX_SLOOP_EN                       => CP_LANE0_PCS_PMA_TX2RX_SLOOP_EN ,
     CP_PCS_PMA_RX2TX_PLOOP_EN                       => CP_LANE0_PCS_PMA_RX2TX_PLOOP_EN ,
     CP_PCS_INT_RX_MASK_0                            => CP_LANE0_PCS_INT_RX_MASK_0 ,
     CP_PCS_INT_RX_MASK_1                            => CP_LANE0_PCS_INT_RX_MASK_1 ,
     CP_PCS_INT_RX_MASK_2                            => CP_LANE0_PCS_INT_RX_MASK_2 ,
     CP_PCS_INT_RX_MASK_3                            => CP_LANE0_PCS_INT_RX_MASK_3 ,
     CP_PCS_INT_RX_MASK_4                            => CP_LANE0_PCS_INT_RX_MASK_4 ,
     CP_PCS_INT_RX_MASK_5                            => CP_LANE0_PCS_INT_RX_MASK_5 ,
     CP_PCS_INT_RX_MASK_6                            => CP_LANE0_PCS_INT_RX_MASK_6 ,
     CP_PCS_INT_RX_MASK_7                            => CP_LANE0_PCS_INT_RX_MASK_7 ,
     CP_PCS_INT_RX_CLR_0                             => CP_LANE0_PCS_INT_RX_CLR_0 ,
     CP_PCS_INT_RX_CLR_1                             => CP_LANE0_PCS_INT_RX_CLR_1 ,
     CP_PCS_INT_RX_CLR_2                             => CP_LANE0_PCS_INT_RX_CLR_2 ,
     CP_PCS_INT_RX_CLR_3                             => CP_LANE0_PCS_INT_RX_CLR_3 ,
     CP_PCS_INT_RX_CLR_4                             => CP_LANE0_PCS_INT_RX_CLR_4 ,
     CP_PCS_INT_RX_CLR_5                             => CP_LANE0_PCS_INT_RX_CLR_5 ,
     CP_PCS_INT_RX_CLR_6                             => CP_LANE0_PCS_INT_RX_CLR_6 ,
     CP_PCS_INT_RX_CLR_7                             => CP_LANE0_PCS_INT_RX_CLR_7 ,
     CP_PCS_CA_RSTN_RX                               => CP_LANE0_PCS_CA_RSTN_RX ,
     CP_PCS_CA_DYN_DLY_EN_RX                         => CP_LANE0_PCS_CA_DYN_DLY_EN_RX ,
     CP_PCS_CA_DYN_DLY_SEL_RX                        => CP_LANE0_PCS_CA_DYN_DLY_SEL_RX ,
     CP_PCS_CA_RX                                    => CP_LANE0_PCS_CA_RX ,
     CP_PCS_CA_RSTN_TX                               => CP_LANE0_PCS_CA_RSTN_TX ,
     CP_PCS_CA_DYN_DLY_EN_TX                         => CP_LANE0_PCS_CA_DYN_DLY_EN_TX ,
     CP_PCS_CA_DYN_DLY_SEL_TX                        => CP_LANE0_PCS_CA_DYN_DLY_SEL_TX ,
     CP_PCS_CA_TX                                    => CP_LANE0_PCS_CA_TX ,
     CP_PCS_RXPRBS_PWR_REDUCTION                     => CP_LANE0_PCS_RXPRBS_PWR_REDUCTION ,
     CP_PCS_WDALIGN_PWR_REDUCTION                    => CP_LANE0_PCS_WDALIGN_PWR_REDUCTION ,
     CP_PCS_RXDEC_PWR_REDUCTION                      => CP_LANE0_PCS_RXDEC_PWR_REDUCTION ,
     CP_PCS_RXCB_PWR_REDUCTION                       => CP_LANE0_PCS_RXCB_PWR_REDUCTION ,
     CP_PCS_RXCTC_PWR_REDUCTION                      => CP_LANE0_PCS_RXCTC_PWR_REDUCTION ,
     CP_PCS_RXGEAR_PWR_REDUCTION                     => CP_LANE0_PCS_RXGEAR_PWR_REDUCTION ,
     CP_PCS_RXBRG_PWR_REDUCTION                      => CP_LANE0_PCS_RXBRG_PWR_REDUCTION ,
     CP_PCS_RXTEST_PWR_REDUCTION                     => CP_LANE0_PCS_RXTEST_PWR_REDUCTION ,
     CP_PCS_TXBRG_PWR_REDUCTION                      => CP_LANE0_PCS_TXBRG_PWR_REDUCTION ,
     CP_PCS_TXGEAR_PWR_REDUCTION                     => CP_LANE0_PCS_TXGEAR_PWR_REDUCTION ,
     CP_PCS_TXENC_PWR_REDUCTION                      => CP_LANE0_PCS_TXENC_PWR_REDUCTION ,
     CP_PCS_TXBSLP_PWR_REDUCTION                     => CP_LANE0_PCS_TXBSLP_PWR_REDUCTION ,
     CP_PCS_TXPRBS_PWR_REDUCTION                     => CP_LANE0_PCS_TXPRBS_PWR_REDUCTION ,
 
     CP_PMA_REG_RX_PD                                => CP_LANE0_PMA_REG_RX_PD ,
     CP_PMA_REG_RX_PD_EN                             => CP_LANE0_PMA_REG_RX_PD_EN ,
     CP_PMA_REG_RX_RESERVED_2                        => CP_LANE0_PMA_REG_RX_RESERVED_2 ,
     CP_PMA_REG_RX_RESERVED_3                        => CP_LANE0_PMA_REG_RX_RESERVED_3 ,
     CP_PMA_REG_RX_DATAPATH_PD                       => CP_LANE0_PMA_REG_RX_DATAPATH_PD ,
     CP_PMA_REG_RX_DATAPATH_PD_EN                    => CP_LANE0_PMA_REG_RX_DATAPATH_PD_EN ,
     CP_PMA_REG_RX_SIGDET_PD                         => CP_LANE0_PMA_REG_RX_SIGDET_PD ,
     CP_PMA_REG_RX_SIGDET_PD_EN                      => CP_LANE0_PMA_REG_RX_SIGDET_PD_EN ,
     CP_PMA_REG_RX_DCC_RST_N                         => CP_LANE0_PMA_REG_RX_DCC_RST_N ,
     CP_PMA_REG_RX_DCC_RST_N_EN                      => CP_LANE0_PMA_REG_RX_DCC_RST_N_EN ,
     CP_PMA_REG_RX_CDR_RST_N                         => CP_LANE0_PMA_REG_RX_CDR_RST_N ,
     CP_PMA_REG_RX_CDR_RST_N_EN                      => CP_LANE0_PMA_REG_RX_CDR_RST_N_EN ,
     CP_PMA_REG_RX_SIGDET_RST_N                      => CP_LANE0_PMA_REG_RX_SIGDET_RST_N ,
     CP_PMA_REG_RX_SIGDET_RST_N_EN                   => CP_LANE0_PMA_REG_RX_SIGDET_RST_N_EN ,
     CP_PMA_REG_RXPCLK_SLIP                          => CP_LANE0_PMA_REG_RXPCLK_SLIP ,
     CP_PMA_REG_RXPCLK_SLIP_OW                       => CP_LANE0_PMA_REG_RXPCLK_SLIP_OW ,
     CP_PMA_REG_RX_PCLKSWITCH_RST_N                  => CP_LANE0_PMA_REG_RX_PCLKSWITCH_RST_N ,
     CP_PMA_REG_RX_PCLKSWITCH_RST_N_EN               => CP_LANE0_PMA_REG_RX_PCLKSWITCH_RST_N_EN ,
     CP_PMA_REG_RX_PCLKSWITCH                        => CP_LANE0_PMA_REG_RX_PCLKSWITCH ,
     CP_PMA_REG_RX_PCLKSWITCH_EN                     => CP_LANE0_PMA_REG_RX_PCLKSWITCH_EN ,
     CP_PMA_REG_RX_HIGHZ                             => CP_LANE0_PMA_REG_RX_HIGHZ ,
     CP_PMA_REG_RX_HIGHZ_EN                          => CP_LANE0_PMA_REG_RX_HIGHZ_EN ,
     CP_PMA_REG_RX_SIGDET_CLK_WINDOW                 => CP_LANE0_PMA_REG_RX_SIGDET_CLK_WINDOW ,
     CP_PMA_REG_RX_SIGDET_CLK_WINDOW_OW              => CP_LANE0_PMA_REG_RX_SIGDET_CLK_WINDOW_OW ,
     CP_PMA_REG_RX_PD_BIAS_RX                        => CP_LANE0_PMA_REG_RX_PD_BIAS_RX ,
     CP_PMA_REG_RX_PD_BIAS_RX_OW                     => CP_LANE0_PMA_REG_RX_PD_BIAS_RX_OW ,
     CP_PMA_REG_RX_RESET_N                           => CP_LANE0_PMA_REG_RX_RESET_N ,
     CP_PMA_REG_RX_RESET_N_OW                        => CP_LANE0_PMA_REG_RX_RESET_N_OW ,
     CP_PMA_REG_RX_RESERVED_29_28                    => CP_LANE0_PMA_REG_RX_RESERVED_29_28 ,
     CP_PMA_REG_RX_BUSWIDTH                          => CP_LANE0_PMA_REG_RX_BUSWIDTH ,
     CP_PMA_REG_RX_BUSWIDTH_EN                       => CP_LANE0_PMA_REG_RX_BUSWIDTH_EN ,
     CP_PMA_REG_RX_RATE                              => CP_LANE0_PMA_REG_RX_RATE ,
     CP_PMA_REG_RX_RESERVED_36                       => CP_LANE0_PMA_REG_RX_RESERVED_36 ,
     CP_PMA_REG_RX_RATE_EN                           => CP_LANE0_PMA_REG_RX_RATE_EN ,
     CP_PMA_REG_RX_RES_TRIM                          => CP_LANE0_PMA_REG_RX_RES_TRIM ,
     CP_PMA_REG_RX_RESERVED_44                       => CP_LANE0_PMA_REG_RX_RESERVED_44 ,
     CP_PMA_REG_RX_RESERVED_45                       => CP_LANE0_PMA_REG_RX_RESERVED_45 ,
     CP_PMA_REG_RX_SIGDET_STATUS_EN                  => CP_LANE0_PMA_REG_RX_SIGDET_STATUS_EN ,
     CP_PMA_REG_RX_RESERVED_48_47                    => CP_LANE0_PMA_REG_RX_RESERVED_48_47 ,
     CP_PMA_REG_RX_ICTRL_SIGDET                      => CP_LANE0_PMA_REG_RX_ICTRL_SIGDET ,
     CP_PMA_REG_RX_PCLK_EDGE_SEL                     => CP_LANE0_PMA_REG_RX_PCLK_EDGE_SEL ,
     CP_PMA_REG_RX_PIBUF_IC                          => CP_LANE0_PMA_REG_RX_PIBUF_IC ,
     CP_PMA_REG_RX_RESERVED_69                       => CP_LANE0_PMA_REG_RX_RESERVED_69 ,
     CP_PMA_REG_RX_DCC_IC_RX                         => CP_LANE0_PMA_REG_RX_DCC_IC_RX ,
     CP_PMA_REG_RX_ICTRL_TRX                         => CP_LANE0_PMA_REG_RX_ICTRL_TRX ,
     CP_PMA_REG_RX_RESERVED_77_76                    => CP_LANE0_PMA_REG_RX_RESERVED_77_76 ,
     CP_PMA_REG_RX_RESERVED_79_78                    => CP_LANE0_PMA_REG_RX_RESERVED_79_78 ,
     CP_PMA_REG_RX_RESERVED_81_80                    => CP_LANE0_PMA_REG_RX_RESERVED_81_80 ,
     CP_PMA_REG_RX_ICTRL_PIBUF                       => CP_LANE0_PMA_REG_RX_ICTRL_PIBUF ,
     CP_PMA_REG_RX_ICTRL_PI                          => CP_LANE0_PMA_REG_RX_ICTRL_PI ,
     CP_PMA_REG_RX_ICTRL_DCC                         => CP_LANE0_PMA_REG_RX_ICTRL_DCC ,
     CP_PMA_REG_RX_RESERVED_89_88                    => CP_LANE0_PMA_REG_RX_RESERVED_89_88 ,
     CP_PMA_REG_TX_RATE                              => CP_LANE0_PMA_REG_TX_RATE ,
     CP_PMA_REG_RX_RESERVED_92                       => CP_LANE0_PMA_REG_RX_RESERVED_92 ,
     CP_PMA_REG_TX_RATE_EN                           => CP_LANE0_PMA_REG_TX_RATE_EN ,
     CP_PMA_REG_RX_TX2RX_PLPBK_RST_N                 => CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_RST_N ,
     CP_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN              => CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN ,
     CP_PMA_REG_RX_TX2RX_PLPBK_EN                    => CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_EN ,
     CP_PMA_REG_TXCLK_SEL                            => CP_LANE0_PMA_REG_TXCLK_SEL ,
     CP_PMA_REG_RX_DATA_POLARITY                     => CP_LANE0_PMA_REG_RX_DATA_POLARITY ,
     CP_PMA_REG_RX_ERR_INSERT                        => CP_LANE0_PMA_REG_RX_ERR_INSERT ,
     CP_PMA_REG_UDP_CHK_EN                           => CP_LANE0_PMA_REG_UDP_CHK_EN ,
     CP_PMA_REG_PRBS_SEL                             => CP_LANE0_PMA_REG_PRBS_SEL ,
     CP_PMA_REG_PRBS_CHK_EN                          => CP_LANE0_PMA_REG_PRBS_CHK_EN ,
     CP_PMA_REG_PRBS_CHK_WIDTH_SEL                   => CP_LANE0_PMA_REG_PRBS_CHK_WIDTH_SEL ,
     CP_PMA_REG_BIST_CHK_PAT_SEL                     => CP_LANE0_PMA_REG_BIST_CHK_PAT_SEL ,
     CP_PMA_REG_LOAD_ERR_CNT                         => CP_LANE0_PMA_REG_LOAD_ERR_CNT ,
     CP_PMA_REG_CHK_COUNTER_EN                       => CP_LANE0_PMA_REG_CHK_COUNTER_EN ,
     CP_PMA_REG_CDR_PROP_GAIN                        => CP_LANE0_PMA_REG_CDR_PROP_GAIN ,
     CP_PMA_REG_CDR_PROP_TURBO_GAIN                  => CP_LANE0_PMA_REG_CDR_PROP_TURBO_GAIN ,
     CP_PMA_REG_CDR_INT_GAIN                         => CP_LANE0_PMA_REG_CDR_INT_GAIN ,
     CP_PMA_REG_CDR_INT_TURBO_GAIN                   => CP_LANE0_PMA_REG_CDR_INT_TURBO_GAIN ,
     CP_PMA_REG_CDR_INT_SAT_MAX                      => CP_LANE0_PMA_REG_CDR_INT_SAT_MAX ,
     CP_PMA_REG_CDR_INT_SAT_MIN                      => CP_LANE0_PMA_REG_CDR_INT_SAT_MIN ,
     CP_PMA_REG_CDR_INT_RST                          => CP_LANE0_PMA_REG_CDR_INT_RST ,
     CP_PMA_REG_CDR_INT_RST_OW                       => CP_LANE0_PMA_REG_CDR_INT_RST_OW ,
     CP_PMA_REG_CDR_PROP_RST                         => CP_LANE0_PMA_REG_CDR_PROP_RST ,
     CP_PMA_REG_CDR_PROP_RST_OW                      => CP_LANE0_PMA_REG_CDR_PROP_RST_OW ,
     CP_PMA_REG_CDR_LOCK_RST                         => CP_LANE0_PMA_REG_CDR_LOCK_RST ,
     CP_PMA_REG_CDR_LOCK_RST_OW                      => CP_LANE0_PMA_REG_CDR_LOCK_RST_OW ,
     CP_PMA_REG_CDR_RX_PI_FORCE_SEL                  => CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_SEL ,
     CP_PMA_REG_CDR_RX_PI_FORCE_D                    => CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_D ,
     CP_PMA_REG_CDR_LOCK_TIMER                       => CP_LANE0_PMA_REG_CDR_LOCK_TIMER ,
     CP_PMA_REG_CDR_TURBO_MODE_TIMER                 => CP_LANE0_PMA_REG_CDR_TURBO_MODE_TIMER ,
     CP_PMA_REG_CDR_LOCK_VAL                         => CP_LANE0_PMA_REG_CDR_LOCK_VAL ,
     CP_PMA_REG_CDR_LOCK_OW                          => CP_LANE0_PMA_REG_CDR_LOCK_OW ,
     CP_PMA_REG_CDR_INT_SAT_DET_EN                   => CP_LANE0_PMA_REG_CDR_INT_SAT_DET_EN ,
     CP_PMA_REG_CDR_SAT_AUTO_DIS                     => CP_LANE0_PMA_REG_CDR_SAT_AUTO_DIS ,
     CP_PMA_REG_CDR_GAIN_AUTO                        => CP_LANE0_PMA_REG_CDR_GAIN_AUTO ,
     CP_PMA_REG_CDR_TURBO_GAIN_AUTO                  => CP_LANE0_PMA_REG_CDR_TURBO_GAIN_AUTO ,
     CP_PMA_REG_RX_RESERVED_171_167                  => CP_LANE0_PMA_REG_RX_RESERVED_171_167 ,
     CP_PMA_REG_RX_RESERVED_175_172                  => CP_LANE0_PMA_REG_RX_RESERVED_175_172 ,
     CP_PMA_REG_CDR_SAT_DET_STATUS_EN                => CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_EN ,
     CP_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN          => CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN ,
     CP_PMA_REG_CDR_PI_CTRL_RST                      => CP_LANE0_PMA_REG_CDR_PI_CTRL_RST ,
     CP_PMA_REG_CDR_PI_CTRL_RST_OW                   => CP_LANE0_PMA_REG_CDR_PI_CTRL_RST_OW ,
     CP_PMA_REG_CDR_SAT_DET_RST                      => CP_LANE0_PMA_REG_CDR_SAT_DET_RST ,
     CP_PMA_REG_CDR_SAT_DET_RST_OW                   => CP_LANE0_PMA_REG_CDR_SAT_DET_RST_OW ,
     CP_PMA_REG_CDR_SAT_DET_STICKY_RST               => CP_LANE0_PMA_REG_CDR_SAT_DET_STICKY_RST ,
     CP_PMA_REG_CDR_SAT_DET_STICKY_RST_OW            => CP_LANE0_PMA_REG_CDR_SAT_DET_STICKY_RST_OW ,
     CP_PMA_REG_CDR_SIGDET_STATUS_DIS                => CP_LANE0_PMA_REG_CDR_SIGDET_STATUS_DIS ,
     CP_PMA_REG_CDR_SAT_DET_TIMER                    => CP_LANE0_PMA_REG_CDR_SAT_DET_TIMER ,
     CP_PMA_REG_CDR_SAT_DET_STATUS_VAL               => CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_VAL ,
     CP_PMA_REG_CDR_SAT_DET_STATUS_OW                => CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_OW ,
     CP_PMA_REG_CDR_TURBO_MODE_EN                    => CP_LANE0_PMA_REG_CDR_TURBO_MODE_EN ,
     CP_PMA_REG_RX_RESERVED_190                      => CP_LANE0_PMA_REG_RX_RESERVED_190 ,
     CP_PMA_REG_RX_RESERVED_193_191                  => CP_LANE0_PMA_REG_RX_RESERVED_193_191 ,
     CP_PMA_REG_CDR_STATUS_FIFO_EN                   => CP_LANE0_PMA_REG_CDR_STATUS_FIFO_EN ,
     CP_PMA_REG_PMA_TEST_SEL                         => CP_LANE0_PMA_REG_PMA_TEST_SEL ,
     CP_PMA_REG_OOB_COMWAKE_GAP_MIN                  => CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MIN ,
     CP_PMA_REG_OOB_COMWAKE_GAP_MAX                  => CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MAX ,
     CP_PMA_REG_OOB_COMINIT_GAP_MIN                  => CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MIN ,
     CP_PMA_REG_OOB_COMINIT_GAP_MAX                  => CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MAX ,
     CP_PMA_REG_RX_RESERVED_227_226                  => CP_LANE0_PMA_REG_RX_RESERVED_227_226 ,
     CP_PMA_REG_COMWAKE_STATUS_CLEAR                 => CP_LANE0_PMA_REG_COMWAKE_STATUS_CLEAR ,
     CP_PMA_REG_COMINIT_STATUS_CLEAR                 => CP_LANE0_PMA_REG_COMINIT_STATUS_CLEAR ,
     CP_PMA_REG_RX_SYNC_RST_N_EN                     => CP_LANE0_PMA_REG_RX_SYNC_RST_N_EN ,
     CP_PMA_REG_RX_SYNC_RST_N                        => CP_LANE0_PMA_REG_RX_SYNC_RST_N ,
     CP_PMA_REG_RX_RESERVED_233_232                  => CP_LANE0_PMA_REG_RX_RESERVED_233_232 ,
     CP_PMA_REG_RX_RESERVED_235_234                  => CP_LANE0_PMA_REG_RX_RESERVED_235_234 ,
     CP_PMA_REG_RX_SATA_COMINIT_OW                   => CP_LANE0_PMA_REG_RX_SATA_COMINIT_OW ,
     CP_PMA_REG_RX_SATA_COMINIT                      => CP_LANE0_PMA_REG_RX_SATA_COMINIT ,
     CP_PMA_REG_RX_SATA_COMWAKE_OW                   => CP_LANE0_PMA_REG_RX_SATA_COMWAKE_OW ,
     CP_PMA_REG_RX_SATA_COMWAKE                      => CP_LANE0_PMA_REG_RX_SATA_COMWAKE ,
     CP_PMA_REG_RX_RESERVED_241_240                  => CP_LANE0_PMA_REG_RX_RESERVED_241_240 ,
     CP_PMA_REG_RX_DCC_DISABLE                       => CP_LANE0_PMA_REG_RX_DCC_DISABLE ,
     CP_PMA_REG_RX_RESERVED_243                      => CP_LANE0_PMA_REG_RX_RESERVED_243 ,
     CP_PMA_REG_RX_SLIP_SEL_EN                       => CP_LANE0_PMA_REG_RX_SLIP_SEL_EN ,
     CP_PMA_REG_RX_SLIP_SEL                          => CP_LANE0_PMA_REG_RX_SLIP_SEL ,
     CP_PMA_REG_RX_SLIP_EN                           => CP_LANE0_PMA_REG_RX_SLIP_EN ,
     CP_PMA_REG_RX_SIGDET_STATUS_SEL                 => CP_LANE0_PMA_REG_RX_SIGDET_STATUS_SEL ,
     CP_PMA_REG_RX_SIGDET_FSM_RST_N                  => CP_LANE0_PMA_REG_RX_SIGDET_FSM_RST_N ,
     CP_PMA_REG_RX_RESERVED_254                      => CP_LANE0_PMA_REG_RX_RESERVED_254 ,
     CP_PMA_REG_RX_SIGDET_STATUS                     => CP_LANE0_PMA_REG_RX_SIGDET_STATUS ,
     CP_PMA_REG_RX_SIGDET_VTH                        => CP_LANE0_PMA_REG_RX_SIGDET_VTH ,
     CP_PMA_REG_RX_SIGDET_GRM                        => CP_LANE0_PMA_REG_RX_SIGDET_GRM ,
     CP_PMA_REG_RX_SIGDET_PULSE_EXT                  => CP_LANE0_PMA_REG_RX_SIGDET_PULSE_EXT ,
     CP_PMA_REG_RX_SIGDET_CH2_SEL                    => CP_LANE0_PMA_REG_RX_SIGDET_CH2_SEL ,
     CP_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW             => CP_LANE0_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW ,
     CP_PMA_REG_RX_SIGDET_CHK_WINDOW_EN              => CP_LANE0_PMA_REG_RX_SIGDET_CHK_WINDOW_EN ,
     CP_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING        => CP_LANE0_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING ,
     CP_PMA_REG_SLIP_FIFO_INV_EN                     => CP_LANE0_PMA_REG_SLIP_FIFO_INV_EN ,
     CP_PMA_REG_SLIP_FIFO_INV                        => CP_LANE0_PMA_REG_SLIP_FIFO_INV ,
     CP_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL          => CP_LANE0_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL ,
     CP_PMA_REG_RX_SIGDET_4OOB_DET_SEL               => CP_LANE0_PMA_REG_RX_SIGDET_4OOB_DET_SEL ,
     CP_PMA_REG_RX_RESERVED_285_283                  => CP_LANE0_PMA_REG_RX_RESERVED_285_283 ,
     CP_PMA_REG_RX_RESERVED_286                      => CP_LANE0_PMA_REG_RX_RESERVED_286 ,
     CP_PMA_REG_RX_SIGDET_IC_I                       => CP_LANE0_PMA_REG_RX_SIGDET_IC_I ,
     CP_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW           => CP_LANE0_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW ,
     CP_PMA_REG_RX_OOB_DETECTOR_RESET_N              => CP_LANE0_PMA_REG_RX_OOB_DETECTOR_RESET_N ,
     CP_PMA_REG_RX_OOB_DETECTOR_PD_OW                => CP_LANE0_PMA_REG_RX_OOB_DETECTOR_PD_OW ,
     CP_PMA_REG_RX_OOB_DETECTOR_PD                   => CP_LANE0_PMA_REG_RX_OOB_DETECTOR_PD ,
     CP_PMA_REG_RX_LS_MODE_EN                        => CP_LANE0_PMA_REG_RX_LS_MODE_EN ,
     CP_PMA_REG_RX_EQ1_R_SET_TOP                     => CP_LANE0_PMA_REG_RX_EQ1_R_SET_TOP ,
     CP_PMA_REG_RX_EQ1_R_SET_FB                      => CP_LANE0_PMA_REG_RX_EQ1_R_SET_FB ,
     CP_PMA_REG_RX_EQ1_C_SET_FB                      => CP_LANE0_PMA_REG_RX_EQ1_C_SET_FB ,
     CP_PMA_REG_RX_EQ1_OFF                           => CP_LANE0_PMA_REG_RX_EQ1_OFF ,
     CP_PMA_REG_RX_EQ2_R_SET_TOP                     => CP_LANE0_PMA_REG_RX_EQ2_R_SET_TOP ,
     CP_PMA_REG_RX_EQ2_R_SET_FB                      => CP_LANE0_PMA_REG_RX_EQ2_R_SET_FB ,
     CP_PMA_REG_RX_EQ2_C_SET_FB                      => CP_LANE0_PMA_REG_RX_EQ2_C_SET_FB ,
     CP_PMA_REG_RX_EQ2_OFF                           => CP_LANE0_PMA_REG_RX_EQ2_OFF ,
     CP_PMA_REG_EQ_DAC                               => CP_LANE0_PMA_REG_EQ_DAC ,
     CP_PMA_REG_RX_ICTRL_EQ                          => CP_LANE0_PMA_REG_RX_ICTRL_EQ ,
     CP_PMA_REG_EQ_DC_CALIB_EN                       => CP_LANE0_PMA_REG_EQ_DC_CALIB_EN ,
     CP_PMA_REG_EQ_DC_CALIB_SEL                      => CP_LANE0_PMA_REG_EQ_DC_CALIB_SEL ,
     CP_PMA_REG_RX_RESERVED_337_330                  => CP_LANE0_PMA_REG_RX_RESERVED_337_330 ,
     CP_PMA_REG_RX_RESERVED_345_338                  => CP_LANE0_PMA_REG_RX_RESERVED_345_338 ,
     CP_PMA_REG_RX_RESERVED_353_346                  => CP_LANE0_PMA_REG_RX_RESERVED_353_346 ,
     CP_PMA_REG_RX_RESERVED_361_354                  => CP_LANE0_PMA_REG_RX_RESERVED_361_354 ,
     CP_PMA_CTLE_CTRL_REG_I                          => CP_LANE0_PMA_CTLE_CTRL_REG_I ,
     CP_PMA_CFG_RX_LANE_POWERUP                      => CP_LANE0_PMA_CFG_RX_LANE_POWERUP ,
     CP_PMA_CFG_RX_PMA_RSTN                          => CP_LANE0_PMA_CFG_RX_PMA_RSTN ,
     CP_PMA_INT_PMA_RX_MASK_0                        => CP_LANE0_PMA_INT_PMA_RX_MASK_0 ,
     CP_PMA_INT_PMA_RX_CLR_0                         => CP_LANE0_PMA_INT_PMA_RX_CLR_0 ,
     CP_PMA_CFG_CTLE_ADP_RSTN                        => CP_LANE0_PMA_CFG_CTLE_ADP_RSTN ,
 
     CP_PMA_REG_TX_PD                                => CP_LANE0_PMA_REG_TX_PD ,
     CP_PMA_REG_TX_PD_OW                             => CP_LANE0_PMA_REG_TX_PD_OW ,
     CP_PMA_REG_TX_MAIN_PRE_Z                        => CP_LANE0_PMA_REG_TX_MAIN_PRE_Z ,
     CP_PMA_REG_TX_MAIN_PRE_Z_OW                     => CP_LANE0_PMA_REG_TX_MAIN_PRE_Z_OW ,
     CP_PMA_REG_TX_BEACON_TIMER_SEL                  => CP_LANE0_PMA_REG_TX_BEACON_TIMER_SEL ,
     CP_PMA_REG_TX_RXDET_REQ_OW                      => CP_LANE0_PMA_REG_TX_RXDET_REQ_OW ,
     CP_PMA_REG_TX_RXDET_REQ                         => CP_LANE0_PMA_REG_TX_RXDET_REQ ,
     CP_PMA_REG_TX_BEACON_EN_OW                      => CP_LANE0_PMA_REG_TX_BEACON_EN_OW ,
     CP_PMA_REG_TX_BEACON_EN                         => CP_LANE0_PMA_REG_TX_BEACON_EN ,
     CP_PMA_REG_TX_EI_EN_OW                          => CP_LANE0_PMA_REG_TX_EI_EN_OW ,
     CP_PMA_REG_TX_EI_EN                             => CP_LANE0_PMA_REG_TX_EI_EN ,
     CP_PMA_REG_TX_BIT_CONV                          => CP_LANE0_PMA_REG_TX_BIT_CONV ,
     CP_PMA_REG_TX_RES_CAL                           => CP_LANE0_PMA_REG_TX_RES_CAL ,
     CP_PMA_REG_TX_RESERVED_19                       => CP_LANE0_PMA_REG_TX_RESERVED_19 ,
     CP_PMA_REG_TX_RESERVED_25_20                    => CP_LANE0_PMA_REG_TX_RESERVED_25_20 ,
     CP_PMA_REG_TX_RESERVED_33_26                    => CP_LANE0_PMA_REG_TX_RESERVED_33_26 ,
     CP_PMA_REG_TX_RESERVED_41_34                    => CP_LANE0_PMA_REG_TX_RESERVED_41_34 ,
     CP_PMA_REG_TX_RESERVED_49_42                    => CP_LANE0_PMA_REG_TX_RESERVED_49_42 ,
     CP_PMA_REG_TX_RESERVED_57_50                    => CP_LANE0_PMA_REG_TX_RESERVED_57_50 ,
     CP_PMA_REG_TX_SYNC_OW                           => CP_LANE0_PMA_REG_TX_SYNC_OW ,
     CP_PMA_REG_TX_SYNC                              => CP_LANE0_PMA_REG_TX_SYNC ,
     CP_PMA_REG_TX_PD_POST                           => CP_LANE0_PMA_REG_TX_PD_POST ,
     CP_PMA_REG_TX_PD_POST_OW                        => CP_LANE0_PMA_REG_TX_PD_POST_OW ,
     CP_PMA_REG_TX_RESET_N_OW                        => CP_LANE0_PMA_REG_TX_RESET_N_OW ,
     CP_PMA_REG_TX_RESET_N                           => CP_LANE0_PMA_REG_TX_RESET_N ,
     CP_PMA_REG_TX_RESERVED_64                       => CP_LANE0_PMA_REG_TX_RESERVED_64 ,
     CP_PMA_REG_TX_RESERVED_65                       => CP_LANE0_PMA_REG_TX_RESERVED_65 ,
     CP_PMA_REG_TX_BUSWIDTH_OW                       => CP_LANE0_PMA_REG_TX_BUSWIDTH_OW ,
     CP_PMA_REG_TX_BUSWIDTH                          => CP_LANE0_PMA_REG_TX_BUSWIDTH ,
     CP_PMA_REG_PLL_READY_OW                         => CP_LANE0_PMA_REG_PLL_READY_OW ,
     CP_PMA_REG_PLL_READY                            => CP_LANE0_PMA_REG_PLL_READY ,
     CP_PMA_REG_TX_RESERVED_72                       => CP_LANE0_PMA_REG_TX_RESERVED_72 ,
     CP_PMA_REG_TX_RESERVED_73                       => CP_LANE0_PMA_REG_TX_RESERVED_73 ,
     CP_PMA_REG_TX_RESERVED_74                       => CP_LANE0_PMA_REG_TX_RESERVED_74 ,
     CP_PMA_REG_EI_PCLK_DELAY_SEL                    => CP_LANE0_PMA_REG_EI_PCLK_DELAY_SEL ,
     CP_PMA_REG_TX_RESERVED_77                       => CP_LANE0_PMA_REG_TX_RESERVED_77 ,
     CP_PMA_REG_TX_RESERVED_83_78                    => CP_LANE0_PMA_REG_TX_RESERVED_83_78 ,
     CP_PMA_REG_TX_RESERVED_89_84                    => CP_LANE0_PMA_REG_TX_RESERVED_89_84 ,
     CP_PMA_REG_TX_RESERVED_95_90                    => CP_LANE0_PMA_REG_TX_RESERVED_95_90 ,
     CP_PMA_REG_TX_RESERVED_101_96                   => CP_LANE0_PMA_REG_TX_RESERVED_101_96 ,
     CP_PMA_REG_TX_RESERVED_107_102                  => CP_LANE0_PMA_REG_TX_RESERVED_107_102 ,
     CP_PMA_REG_TX_RESERVED_113_108                  => CP_LANE0_PMA_REG_TX_RESERVED_113_108 ,
     CP_PMA_REG_TX_AMP_DAC0                          => CP_LANE0_PMA_REG_TX_AMP_DAC0 ,
     CP_PMA_REG_TX_AMP_DAC1                          => CP_LANE0_PMA_REG_TX_AMP_DAC1 ,
     CP_PMA_REG_TX_AMP_DAC2                          => CP_LANE0_PMA_REG_TX_AMP_DAC2 ,
     CP_PMA_REG_TX_AMP_DAC3                          => CP_LANE0_PMA_REG_TX_AMP_DAC3 ,
     CP_PMA_REG_TX_RESERVED_143_138                  => CP_LANE0_PMA_REG_TX_RESERVED_143_138 ,
     CP_PMA_REG_TX_MARGIN                            => CP_LANE0_PMA_REG_TX_MARGIN ,
     CP_PMA_REG_TX_MARGIN_OW                         => CP_LANE0_PMA_REG_TX_MARGIN_OW ,
     CP_PMA_REG_TX_RESERVED_149_148                  => CP_LANE0_PMA_REG_TX_RESERVED_149_148 ,
     CP_PMA_REG_TX_RESERVED_150                      => CP_LANE0_PMA_REG_TX_RESERVED_150 ,
     CP_PMA_REG_TX_SWING                             => CP_LANE0_PMA_REG_TX_SWING ,
     CP_PMA_REG_TX_SWING_OW                          => CP_LANE0_PMA_REG_TX_SWING_OW ,
     CP_PMA_REG_TX_RESERVED_153                      => CP_LANE0_PMA_REG_TX_RESERVED_153 ,
     CP_PMA_REG_TX_RXDET_THRESHOLD                   => CP_LANE0_PMA_REG_TX_RXDET_THRESHOLD ,
     CP_PMA_REG_TX_RESERVED_157_156                  => CP_LANE0_PMA_REG_TX_RESERVED_157_156 ,
     CP_PMA_REG_TX_BEACON_OSC_CTRL                   => CP_LANE0_PMA_REG_TX_BEACON_OSC_CTRL ,
     CP_PMA_REG_TX_RESERVED_160_159                  => CP_LANE0_PMA_REG_TX_RESERVED_160_159 ,
     CP_PMA_REG_TX_RESERVED_162_161                  => CP_LANE0_PMA_REG_TX_RESERVED_162_161 ,
     CP_PMA_REG_TX_TX2RX_SLPBACK_EN                  => CP_LANE0_PMA_REG_TX_TX2RX_SLPBACK_EN ,
     CP_PMA_REG_TX_PCLK_EDGE_SEL                     => CP_LANE0_PMA_REG_TX_PCLK_EDGE_SEL ,
     CP_PMA_REG_TX_RXDET_STATUS_OW                   => CP_LANE0_PMA_REG_TX_RXDET_STATUS_OW ,
     CP_PMA_REG_TX_RXDET_STATUS                      => CP_LANE0_PMA_REG_TX_RXDET_STATUS ,
     CP_PMA_REG_TX_PRBS_GEN_EN                       => CP_LANE0_PMA_REG_TX_PRBS_GEN_EN ,
     CP_PMA_REG_TX_PRBS_GEN_WIDTH_SEL                => CP_LANE0_PMA_REG_TX_PRBS_GEN_WIDTH_SEL ,
     CP_PMA_REG_TX_PRBS_SEL                          => CP_LANE0_PMA_REG_TX_PRBS_SEL ,
     CP_PMA_REG_TX_UDP_DATA_7_TO_0                   => CP_LANE0_PMA_REG_TX_UDP_DATA_7_TO_0 ,
     CP_PMA_REG_TX_UDP_DATA_15_TO_8                  => CP_LANE0_PMA_REG_TX_UDP_DATA_15_TO_8 ,
     CP_PMA_REG_TX_UDP_DATA_19_TO_16                 => CP_LANE0_PMA_REG_TX_UDP_DATA_19_TO_16 ,
     CP_PMA_REG_TX_RESERVED_192                      => CP_LANE0_PMA_REG_TX_RESERVED_192 ,
     CP_PMA_REG_TX_FIFO_WP_CTRL                      => CP_LANE0_PMA_REG_TX_FIFO_WP_CTRL ,
     CP_PMA_REG_TX_FIFO_EN                           => CP_LANE0_PMA_REG_TX_FIFO_EN ,
     CP_PMA_REG_TX_DATA_MUX_SEL                      => CP_LANE0_PMA_REG_TX_DATA_MUX_SEL ,
     CP_PMA_REG_TX_ERR_INSERT                        => CP_LANE0_PMA_REG_TX_ERR_INSERT ,
     CP_PMA_REG_TX_RESERVED_203_200                  => CP_LANE0_PMA_REG_TX_RESERVED_203_200 ,
     CP_PMA_REG_TX_RESERVED_204                      => CP_LANE0_PMA_REG_TX_RESERVED_204 ,
     CP_PMA_REG_TX_SATA_EN                           => CP_LANE0_PMA_REG_TX_SATA_EN ,
     CP_PMA_REG_TX_RESERVED_207_206                  => CP_LANE0_PMA_REG_TX_RESERVED_207_206 ,
     CP_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW             => CP_LANE0_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW ,
     CP_PMA_REG_RATE_CHANGE_TXPCLK_ON                => CP_LANE0_PMA_REG_RATE_CHANGE_TXPCLK_ON ,
     CP_PMA_REG_TX_CFG_POST1                         => CP_LANE0_PMA_REG_TX_CFG_POST1 ,
     CP_PMA_REG_TX_CFG_POST2                         => CP_LANE0_PMA_REG_TX_CFG_POST2 ,
     CP_PMA_REG_TX_DEEMP                             => CP_LANE0_PMA_REG_TX_DEEMP ,
     CP_PMA_REG_TX_DEEMP_OW                          => CP_LANE0_PMA_REG_TX_DEEMP_OW ,
     CP_PMA_REG_TX_RESERVED_224_223                  => CP_LANE0_PMA_REG_TX_RESERVED_224_223 ,
     CP_PMA_REG_TX_RESERVED_225                      => CP_LANE0_PMA_REG_TX_RESERVED_225 ,
     CP_PMA_REG_TX_RESERVED_229_226                  => CP_LANE0_PMA_REG_TX_RESERVED_229_226 ,
     CP_PMA_REG_TX_OOB_DELAY_SEL                     => CP_LANE0_PMA_REG_TX_OOB_DELAY_SEL ,
     CP_PMA_REG_TX_POLARITY                          => CP_LANE0_PMA_REG_TX_POLARITY ,
     CP_PMA_REG_ANA_TX_JTAG_DATA_O_SEL               => CP_LANE0_PMA_REG_ANA_TX_JTAG_DATA_O_SEL ,
     CP_PMA_REG_TX_RESERVED_236                      => CP_LANE0_PMA_REG_TX_RESERVED_236 ,
     CP_PMA_REG_TX_LS_MODE_EN                        => CP_LANE0_PMA_REG_TX_LS_MODE_EN ,
     CP_PMA_REG_TX_JTAG_MODE_EN_OW                   => CP_LANE0_PMA_REG_TX_JTAG_MODE_EN_OW ,
     CP_PMA_REG_TX_JTAG_MODE_EN                      => CP_LANE0_PMA_REG_TX_JTAG_MODE_EN ,
     CP_PMA_REG_RX_JTAG_MODE_EN_OW                   => CP_LANE0_PMA_REG_RX_JTAG_MODE_EN_OW ,
     CP_PMA_REG_RX_JTAG_MODE_EN                      => CP_LANE0_PMA_REG_RX_JTAG_MODE_EN ,
     CP_PMA_REG_RX_JTAG_OE                           => CP_LANE0_PMA_REG_RX_JTAG_OE ,
     CP_PMA_REG_RX_ACJTAG_VHYSTSEL                   => CP_LANE0_PMA_REG_RX_ACJTAG_VHYSTSEL ,
     CP_PMA_REG_TX_RES_CAL_EN                        => CP_LANE0_PMA_REG_TX_RES_CAL_EN ,
     CP_PMA_REG_RX_TERM_MODE_CTRL                    => CP_LANE0_PMA_REG_RX_TERM_MODE_CTRL ,
     CP_PMA_REG_TX_RESERVED_251_250                  => CP_LANE0_PMA_REG_TX_RESERVED_251_250 ,
     CP_PMA_REG_PLPBK_TXPCLK_EN                      => CP_LANE0_PMA_REG_PLPBK_TXPCLK_EN ,
     CP_PMA_REG_TX_RESERVED_253                      => CP_LANE0_PMA_REG_TX_RESERVED_253 ,
     CP_PMA_REG_TX_RESERVED_254                      => CP_LANE0_PMA_REG_TX_RESERVED_254 ,
     CP_PMA_REG_TX_RESERVED_255                      => CP_LANE0_PMA_REG_TX_RESERVED_255 ,
     CP_PMA_REG_TX_RESERVED_256                      => CP_LANE0_PMA_REG_TX_RESERVED_256 ,
     CP_PMA_REG_TX_RESERVED_257                      => CP_LANE0_PMA_REG_TX_RESERVED_257 ,
     CP_PMA_REG_TX_PH_SEL                            => CP_LANE0_PMA_REG_TX_PH_SEL ,
     CP_PMA_REG_TX_CFG_PRE                           => CP_LANE0_PMA_REG_TX_CFG_PRE , 
     CP_PMA_REG_TX_CFG_MAIN                          => CP_LANE0_PMA_REG_TX_CFG_MAIN ,
     CP_PMA_REG_CFG_POST                             => CP_LANE0_PMA_REG_CFG_POST ,
     CP_PMA_REG_PD_MAIN                              => CP_LANE0_PMA_REG_PD_MAIN ,
     CP_PMA_REG_PD_PRE                               => CP_LANE0_PMA_REG_PD_PRE ,
     CP_PMA_REG_TX_LS_DATA                           => CP_LANE0_PMA_REG_TX_LS_DATA ,
     CP_PMA_REG_TX_DCC_BUF_SZ_SEL                    => CP_LANE0_PMA_REG_TX_DCC_BUF_SZ_SEL ,
     CP_PMA_REG_TX_DCC_CAL_CUR_TUNE                  => CP_LANE0_PMA_REG_TX_DCC_CAL_CUR_TUNE ,
     CP_PMA_REG_TX_DCC_CAL_EN                        => CP_LANE0_PMA_REG_TX_DCC_CAL_EN ,
     CP_PMA_REG_TX_DCC_CUR_SS                        => CP_LANE0_PMA_REG_TX_DCC_CUR_SS ,
     CP_PMA_REG_TX_DCC_FA_CTRL                       => CP_LANE0_PMA_REG_TX_DCC_FA_CTRL ,
     CP_PMA_REG_TX_DCC_RI_CTRL                       => CP_LANE0_PMA_REG_TX_DCC_RI_CTRL ,
     CP_PMA_REG_ATB_SEL_2_TO_0                       => CP_LANE0_PMA_REG_ATB_SEL_2_TO_0 ,
     CP_PMA_REG_ATB_SEL_9_TO_3                       => CP_LANE0_PMA_REG_ATB_SEL_9_TO_3 ,
     CP_PMA_REG_TX_CFG_7_TO_0                        => CP_LANE0_PMA_REG_TX_CFG_7_TO_0 ,
     CP_PMA_REG_TX_CFG_15_TO_8                       => CP_LANE0_PMA_REG_TX_CFG_15_TO_8 ,
     CP_PMA_REG_TX_CFG_23_TO_16                      => CP_LANE0_PMA_REG_TX_CFG_23_TO_16 ,
     CP_PMA_REG_TX_CFG_31_TO_24                      => CP_LANE0_PMA_REG_TX_CFG_31_TO_24 ,
     CP_PMA_REG_TX_OOB_EI_EN                         => CP_LANE0_PMA_REG_TX_OOB_EI_EN ,
     CP_PMA_REG_TX_OOB_EI_EN_OW                      => CP_LANE0_PMA_REG_TX_OOB_EI_EN_OW ,
     CP_PMA_REG_TX_BEACON_EN_DELAYED                 => CP_LANE0_PMA_REG_TX_BEACON_EN_DELAYED ,
     CP_PMA_REG_TX_BEACON_EN_DELAYED_OW              => CP_LANE0_PMA_REG_TX_BEACON_EN_DELAYED_OW ,
     CP_PMA_REG_TX_JTAG_DATA                         => CP_LANE0_PMA_REG_TX_JTAG_DATA ,
     CP_PMA_REG_TX_RXDET_TIMER_SEL                   => CP_LANE0_PMA_REG_TX_RXDET_TIMER_SEL ,
     CP_PMA_REG_TX_CFG1_7_0                          => CP_LANE0_PMA_REG_TX_CFG1_7_0 ,
     CP_PMA_REG_TX_CFG1_15_8                         => CP_LANE0_PMA_REG_TX_CFG1_15_8 ,
     CP_PMA_REG_TX_CFG1_23_16                        => CP_LANE0_PMA_REG_TX_CFG1_23_16 ,
     CP_PMA_REG_TX_CFG1_31_24                        => CP_LANE0_PMA_REG_TX_CFG1_31_24 ,
     CP_PMA_REG_CFG_LANE_POWERUP                     => CP_LANE0_PMA_REG_CFG_LANE_POWERUP ,
     CP_PMA_REG_CFG_PMA_POR_N                        => CP_LANE0_PMA_REG_CFG_PMA_POR_N ,
     CP_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH          => CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH ,
     CP_PMA_REG_CFG_TX_LANE_POWERUP_PISO             => CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_PISO ,
     CP_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER           => CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER ,
     CP_PMA_REG_CFG_TX_PMA_RSTN                      => CP_LANE0_PMA_REG_CFG_TX_PMA_RSTN ,
   
     CP_GRSN_DIS                                     => CP_GRSN_DIS ,
     CP_HSST_EN                                      => CP_HSST_EN ,
     CP_CFG_RSTN                                     => CP_CFG_RSTN_0      
   )
   port map
   (
//////////DFT related/////////////////////////////////////////////////////////
    //PCS
     TEST_SE_N                                       => TEST_SE_N ,
     TEST_MODE_N                                     => TEST_MODE_N ,
     TEST_RSTN                                       => TEST_RSTN ,
     TEST_SI0                                        => TEST_SI0 ,
     TEST_SI1                                        => TEST_SI1 ,
     TEST_SI2                                        => TEST_SI2 ,
     TEST_SI3                                        => TEST_SI3 ,
     TEST_SI4                                        => TEST_SI4 ,
     TEST_SO0                                        => TEST_SO0 ,
     TEST_SO1                                        => TEST_SO1 ,
     TEST_SO2                                        => TEST_SO2 ,
     TEST_SO3                                        => TEST_SO3 ,
     TEST_SO4                                        => TEST_SO4 ,
    //PMA
     FOR_PMA_TEST_MODE_N                             => FOR_PMA_TEST_MODE_N ,
     FOR_PMA_TEST_SE_N                               => FOR_PMA_TEST_SE_N[1:0] ,
     FOR_PMA_TEST_CLK                                => FOR_PMA_TEST_CLK[1:0] ,
     FOR_PMA_TEST_RSTN                               => FOR_PMA_TEST_RSTN[1:0] ,
     FOR_PMA_TEST_SI                                 => FOR_PMA_TEST_SI_CH0 ,
     FOR_PMA_TEST_SO                                 => FOR_PMA_TEST_SO_CH0 ,
     CFG_READY                                       => CFG_READY_0 ,
     CFG_RDATA                                       => CFG_RDATA_0 , 
     CFG_INT                                         => CFG_INT_0 , 

//////////SRB related/////////////////////////////////////////////////////////
    //PAD
     PAD_RX_SDP                                      => PAD_RX_SDP0 ,
     PAD_RX_SDN                                      => PAD_RX_SDN0 ,
     PAD_TX_SDP                                      => PAD_TX_SDP0 ,
     PAD_TX_SDN                                      => PAD_TX_SDN0 ,  
    //if with user logic
     RX_CLK_FR_CORE                                  => RX0_CLK_FR_CORE ,
     RCLK2_FR_CORE                                   => RCLK2_0_FR_CORE ,
     TX_CLK_FR_CORE                                  => TX0_CLK_FR_CORE ,
     TCLK2_FR_CORE                                   => TCLK2_0_FR_CORE ,
     HSST_RST                                        => HSST_RST ,
     PCS_RX_RST                                      => PCS_RX_RST_0 ,
     PCS_TX_RST                                      => PCS_TX_RST_0 ,
     PCS_CB_RST                                      => PCS_CB_RST_0 ,
     RXGEAR_SLIP                                     => RXGEAR_SLIP_0 ,
     CFG_CLK                                         => CFG_CLK_0 ,
     CFG_RST                                         => CFG_RST_0 ,
     CFG_PSEL                                        => CFG_PSEL_0 ,
     CFG_ENABLE                                      => CFG_ENABLE_0 ,
     CFG_WRITE                                       => CFG_WRITE_0 ,
     CFG_ADDR                                        => CFG_ADDR_0 ,
     CFG_WDATA                                       => CFG_WDATA_0 ,
     TDATA                                           => TDATA_0 ,
     PCS_WORD_ALIGN_EN                               => PCS_WORD_ALIGN_EN[0] ,
     RX_POLARITY_INVERT                              => RX_POLARITY_INVERT[0] ,
     CEB_ADETECT_EN                                  => CEB_ADETECT_EN[0] ,
     PCS_MCB_EXT_EN                                  => PCS_MCB_EXT_EN[0] ,
     PCS_NEAREND_LOOP                                => PCS_NEAREND_LOOP[0] ,
     PCS_FAREND_LOOP                                 => PCS_FAREND_LOOP[0] ,
     PMA_NEAREND_PLOOP                               => PMA_NEAREND_PLOOP[0] ,
     PMA_NEAREND_SLOOP                               => PMA_NEAREND_SLOOP[0] ,
     PMA_FAREND_PLOOP                                => PMA_FAREND_PLOOP[0] ,
     PCS_RX_MCB_STATUS                               => PCS_RX_MCB_STATUS[0] , 
     PCS_LSM_SYNCED                                  => PCS_LSM_SYNCED[0] , 
     RDATA                                           => RDATA_0 , 
     RCLK2FABRIC                                     => RCLK2FABRIC[0] , 
     TCLK2FABRIC                                     => TCLK2FABRIC[0] , 
    //Lanes
     LANE_PD                                         => LANE_PD_0 ,
     LANE_RST                                        => LANE_RST_0 ,
     RX_LANE_PD                                      => RX_LANE_PD_0 , 
     RX_PMA_RST                                      => RX_PMA_RST_0 ,
     CTLE_ADP_RST                                    => CTLE_ADP_RST_0 ,
     RX_SIGDET_STATUS                                => RX_SIGDET_STATUS_0 , 
     RX_SATA_COMINIT                                 => RX_SATA_COMINIT_0 , 
     RX_SATA_COMWAKE                                 => RX_SATA_COMWAKE_0 , 
     RX_LS_DATA                                      => RX_LS_DATA_0 , 
     RX_READY                                        => RX_READY_0 , 
     TEST_STATUS                                     => TEST_STATUS_0 , 
     TX_DEEMP                                        => TX_DEEMP_0 ,
     TX_LS_DATA                                      => TX_LS_DATA_0 ,
     TX_BEACON_EN                                    => TX_BEACON_EN_0 ,
     TX_SWING                                        => TX_SWING_0 ,
     TX_RXDET_REQ                                    => TX_RXDET_REQ_0 ,
     TX_RATE                                         => TX_RATE_0 ,
     TX_BUSWIDTH                                     => TX_BUSWIDTH_0 ,
     TX_MARGIN                                       => TX_MARGIN_0 ,
     TX_RXDET_STATUS                                 => TX_RXDET_STATUS_0 , 
     TX_PMA_RST                                      => TX_PMA_RST_0 ,
     TX_LANE_PD_CLKPATH                              => TX_LANE_PD_CLKPATH_0 ,
     TX_LANE_PD_PISO                                 => TX_LANE_PD_PISO_0 ,
     TX_LANE_PD_DRIVER                               => TX_LANE_PD_DRIVER_0 ,
     RX_RATE                                         => RX_RATE_0 ,
     RX_BUSWIDTH                                     => RX_BUSWIDTH_0 ,
     RX_HIGHZ                                        => RX_HIGHZ_0 ,
     CA_ALIGN_RX                                     => CA_ALIGN_RX[0] , 
     CA_ALIGN_TX                                     => CA_ALIGN_TX[0] , 
     CIM_CLK_ALIGNER_RX                              => CIM_CLK_ALIGNER_RX0 ,
     CIM_CLK_ALIGNER_TX                              => CIM_CLK_ALIGNER_TX0 ,
     CIM_DYN_DLY_SEL_RX                              => CIM_DYN_DLY_SEL_RX0 ,
     CIM_DYN_DLY_SEL_TX                              => CIM_DYN_DLY_SEL_TX0 ,
     CIM_START_ALIGN_RX                              => CIM_START_ALIGN_RX0 ,
     CIM_START_ALIGN_TX                              => CIM_START_ALIGN_TX0 ,

//////////New added signal/////////////////////////////////////////////////////////
     PMA_RCLK                                        => ntSIG_IN0_0 ,
     MCB_RCLK                                        => ntSIG_OUT_0 ,

     SYNC                                            => SYNC_CH0 ,

     RATE_CHANGE                                     => RATE_CHANGE_CH0 ,

     PLL_LOCK_SEL                                    => PLL_LOCK_SEL_0 ,

//////////cin and cout/////////////////////////////////////////////////////////
     RFIFO_EN_CB_CIN                                 => 1'b0 ,//from 
     RFIFO_EN_AFTER_CTC_CIN                          => 1'b0 ,
     RFIFO_EN_AFTER_CTC_GB_CIN                       => 1'b0 ,
     RFIFO_EN_BRIDGE_CIN                             => 1'b0 ,
     TFIFO_EN_PCS_TX_CIN                             => 1'b0 ,
     TFIFO_EN_BRIDGE_CIN                             => 1'b0 ,
     PCS_TCLK_EN_CIN                                 => 1'b0 ,
     GEAR_TCLK_EN_CIN                                => 1'b0 ,
     APATTERN_MATCH_LSB_CIN                          => 1'b0 ,
     APATTERN_MATCH_MSB_CIN                          => 1'b0 ,
     APATTERN_STATUS_CIN                             => ntAPATTERN_STATUS_CIN_0 ,
     APATTERN_SEACHING_PROC_CIN                      => 1'b0 ,
     CB_RCLK_EN_CIN                                  => 1'b0 ,
     AFTER_CTC_RCLK_EN_CIN                           => 1'b0 ,
     AFTER_CTC_RCLK_EN_GB_CIN                        => 1'b0 ,
     SKIP_ADD_MCB_CIN                                => 1'b0 ,
     SKIP_DEL_MCB_CIN                                => 1'b0 ,
     SKIP_DEL_LSB_MCB_CIN                            => 1'b0 ,
     SKIP_ADD_LSB_MCB_CIN                            => 1'b0 ,
     CTC_RD_FIFO_CIN                                 => 1'b0 ,

     APATTERN_MATCH_LSB_COUT                         => ntAPATTERN_MATCH_LSB_COUT_0 , 
     APATTERN_MATCH_MSB_COUT                         => ntAPATTERN_MATCH_MSB_COUT_0 , 
     //APATTERN_STATUS_COUT                            =>  , 
     APATTERN_SEACHING_PROC_COUT                     => ntAPATTERN_SEACHING_PROC_COUT_0 , 
     RFIFO_EN_CB_COUT                                => ntRFIFO_EN_CB_COUT_0 ,
      
     RFIFO_EN_BRIDGE_COUT                            => ntRFIFO_EN_BRIDGE_COUT_0      ,
     RFIFO_EN_AFTER_CTC_COUT                         => ntRFIFO_EN_AFTER_CTC_COUT_0   ,
     RFIFO_EN_AFTER_CTC_GB_COUT                      => ntRFIFO_EN_AFTER_CTC_GB_COUT_0, 
     CB_RCLK_EN_COUT                                 => ntCB_RCLK_EN_COUT_0           ,
     AFTER_CTC_RCLK_EN_COUT                          => ntAFTER_CTC_RCLK_EN_COUT_0    ,
     AFTER_CTC_RCLK_EN_GB_COUT                       => ntAFTER_CTC_RCLK_EN_GB_COUT_0 ,
     TFIFO_EN_PCS_TX_COUT                            => ntTFIFO_EN_PCS_TX_COUT_0      ,
     TFIFO_EN_BRIDGE_COUT                            => ntTFIFO_EN_BRIDGE_COUT_0      ,
     PCS_TCLK_EN_COUT                                => ntPCS_TCLK_EN_COUT_0          ,
     GEAR_TCLK_EN_COUT                               => ntGEAR_TCLK_EN_COUT_0         ,
     SKIP_ADD_MCB_COUT                               => ntSKIP_ADD_MCB_COUT_0         ,
     SKIP_DEL_MCB_COUT                               => ntSKIP_DEL_MCB_COUT_0         ,
     SKIP_ADD_LSB_MCB_COUT                           => ntSKIP_ADD_LSB_MCB_COUT_0     ,
     SKIP_DEL_LSB_MCB_COUT                           => ntSKIP_DEL_LSB_MCB_COUT_0     ,
     CTC_RD_FIFO_COUT                                => ntCTC_RD_FIFO_COUT_0          ,

//////////from PLL/////////////////////////////////////////////////////////
    //clk
     CLK_TXP                                         => CLK_TXP_0 ,
     CLK_TXN                                         => CLK_TXN_0 ,
     CLK_RX0                                         => CLK_RX0_0 ,
     CLK_RX180                                       => CLK_RX180_0 ,
     CLK_RX90                                        => CLK_RX90_0 ,
     CLK_RX270                                       => CLK_RX270_0 ,

    //others
     PLL_PD_I                                        => PLL_PD_I_0 ,
     PLL_RESET_I                                     => PLL_RESET_I_0 ,
     PLL_REFCLK_I                                    => PLL_REFCLK_I_0 ,

     PLL_RES_TRIM_I                                  => RESCAL_I_CODE_O_0 ,
    
//////////out////////////////////////////////////////////////////////
     TXPCLK_PLL                                      => TXPCLK_PLL_0 //being choosed in module pma_rate_change for PLL
   
   );   
   
  
  
    device HSSTLP_LANE U1_HSSTLP_LANE
   parameter map
   (
       CP_MUX_BIAS                                     => CP_LANE1_MUX_BIAS,
       CP_PD_CLK                                       => CP_LANE1_PD_CLK,
       CP_REG_SYNC                                     => CP_LANE1_REG_SYNC,
       CP_REG_SYNC_OW                                  => CP_LANE1_REG_SYNC_OW,
       CP_PLL_LOCK_OW                                  => CP_LANE1_PLL_LOCK_OW,
       CP_PLL_LOCK_OW_EN                               => CP_LANE1_PLL_LOCK_OW_EN,
   
       CP_PMA_REG_CDR_READY_THD                        => CP_LANE1_PMA_REG_CDR_READY_THD,
       CP_PMA_REG_RX_RESERVED_65                       => CP_LANE1_PMA_REG_RX_RESERVED_65,
       CP_PMA_REG_CDR_READY_CHECK_CTRL                 => CP_LANE1_PMA_REG_CDR_READY_CHECK_CTRL,
       CP_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL            => CP_LANE1_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL,
       CP_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL            => CP_LANE1_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL,
       CP_PMA_CTLE_REG_FORCE_SEL_I                     => CP_LANE1_PMA_CTLE_REG_FORCE_SEL_I,
       CP_PMA_CTLE_REG_HOLD_I                          => CP_LANE1_PMA_CTLE_REG_HOLD_I,
       CP_PMA_CTLE_REG_INIT_DAC_I                      => CP_LANE1_PMA_CTLE_REG_INIT_DAC_I,
       CP_PMA_CTLE_REG_POLARITY_I                      => CP_LANE1_PMA_CTLE_REG_POLARITY_I,
       CP_PMA_CTLE_REG_SHIFTER_GAIN_I                  => CP_LANE1_PMA_CTLE_REG_SHIFTER_GAIN_I,
       CP_PMA_CTLE_REG_THRESHOLD_I                     => CP_LANE1_PMA_CTLE_REG_THRESHOLD_I,
       CP_PMA_REG_RX_RES_TRIM_EN                       => CP_LANE1_PMA_REG_RX_RES_TRIM_EN,
       CP_PMA_REG_RX_RESERVED_393_389                  => CP_LANE1_PMA_REG_RX_RESERVED_393_389,
   
       CP_PCS_SLAVE                                    => CP_LANE1_PCS_SLAVE,
       CP_PCS_BYPASS_WORD_ALIGN                        => CP_LANE1_PCS_BYPASS_WORD_ALIGN,          
       CP_PCS_BYPASS_DENC                              => CP_LANE1_PCS_BYPASS_DENC,           
       CP_PCS_BYPASS_BONDING                           => CP_LANE1_PCS_BYPASS_BONDING, 
       CP_PCS_BYPASS_CTC                               => CP_LANE1_PCS_BYPASS_CTC, 
       CP_PCS_BYPASS_GEAR                              => CP_LANE1_PCS_BYPASS_GEAR, 
       CP_PCS_BYPASS_BRIDGE                            => CP_LANE1_PCS_BYPASS_BRIDGE, 
       CP_PCS_BYPASS_BRIDGE_FIFO                       => CP_LANE1_PCS_BYPASS_BRIDGE_FIFO, 
       CP_PCS_DATA_MODE                                => CP_LANE1_PCS_DATA_MODE, 
       CP_PCS_RX_POLARITY_INV                          => CP_LANE1_PCS_RX_POLARITY_INV, 
       CP_PCS_ALIGN_MODE                               => CP_LANE1_PCS_ALIGN_MODE, 
       CP_PCS_SAMP_16B                                 => CP_LANE1_PCS_SAMP_16B,          
       CP_PCS_FARLP_PWR_REDUCTION                      => CP_LANE1_PCS_FARLP_PWR_REDUCTION,           
       CP_PCS_COMMA_REG0                               => CP_LANE1_PCS_COMMA_REG0, 
       CP_PCS_COMMA_MASK                               => CP_LANE1_PCS_COMMA_MASK, 
       CP_PCS_CEB_MODE                                 => CP_LANE1_PCS_CEB_MODE, 
       CP_PCS_CTC_MODE                                 => CP_LANE1_PCS_CTC_MODE, 
       CP_PCS_A_REG                                    => CP_LANE1_PCS_A_REG, 
       CP_PCS_GE_AUTO_EN                               => CP_LANE1_PCS_GE_AUTO_EN, 
       CP_PCS_SKIP_REG0                                => CP_LANE1_PCS_SKIP_REG0, 
       CP_PCS_SKIP_REG1                                => CP_LANE1_PCS_SKIP_REG1, 
       CP_PCS_SKIP_REG2                                => CP_LANE1_PCS_SKIP_REG2,          
       CP_PCS_SKIP_REG3                                => CP_LANE1_PCS_SKIP_REG3,           
       CP_PCS_DEC_DUAL                                 => CP_LANE1_PCS_DEC_DUAL, 
       CP_PCS_SPLIT                                    => CP_LANE1_PCS_SPLIT, 
       CP_PCS_FIFOFLAG_CTC                             => CP_LANE1_PCS_FIFOFLAG_CTC, 
       CP_PCS_COMMA_DET_MODE                           => CP_LANE1_PCS_COMMA_DET_MODE, 
       CP_PCS_ERRDETECT_SILENCE                        => CP_LANE1_PCS_ERRDETECT_SILENCE, 
       CP_PCS_PMA_RCLK_POLINV                          => CP_LANE1_PCS_PMA_RCLK_POLINV, 
       CP_PCS_PCS_RCLK_SEL                             => CP_LANE1_PCS_PCS_RCLK_SEL, 
       CP_PCS_CB_RCLK_SEL                              => CP_LANE1_PCS_CB_RCLK_SEL, 
       CP_PCS_AFTER_CTC_RCLK_SEL                       => CP_LANE1_PCS_AFTER_CTC_RCLK_SEL,           
       CP_PCS_RCLK_POLINV                              => CP_LANE1_PCS_RCLK_POLINV, 
       CP_PCS_BRIDGE_RCLK_SEL                          => CP_LANE1_PCS_BRIDGE_RCLK_SEL, 
       CP_PCS_PCS_RCLK_EN                              => CP_LANE1_PCS_PCS_RCLK_EN,
       CP_PCS_CB_RCLK_EN                               => CP_LANE1_PCS_CB_RCLK_EN ,
       CP_PCS_AFTER_CTC_RCLK_EN                        => CP_LANE1_PCS_AFTER_CTC_RCLK_EN,
       CP_PCS_AFTER_CTC_RCLK_EN_GB                     => CP_LANE1_PCS_AFTER_CTC_RCLK_EN_GB,
       CP_PCS_PCS_RX_RSTN                              => CP_LANE1_PCS_PCS_RX_RSTN,
       CP_PCS_PCIE_SLAVE                               => CP_LANE1_PCS_PCIE_SLAVE,
       CP_PCS_RX_64B66B_67B                            => CP_LANE1_PCS_RX_64B66B_67B,
       CP_PCS_RX_BRIDGE_CLK_POLINV                     => CP_LANE1_PCS_RX_BRIDGE_CLK_POLINV,
       CP_PCS_PCS_CB_RSTN                              => CP_LANE1_PCS_PCS_CB_RSTN,
       CP_PCS_TX_BRIDGE_GEAR_SEL                       => CP_LANE1_PCS_TX_BRIDGE_GEAR_SEL,
       CP_PCS_TX_BYPASS_BRIDGE_UINT                    => CP_LANE1_PCS_TX_BYPASS_BRIDGE_UINT,
       CP_PCS_TX_BYPASS_BRIDGE_FIFO                    => CP_LANE1_PCS_TX_BYPASS_BRIDGE_FIFO,
       CP_PCS_TX_BYPASS_GEAR                           => CP_LANE1_PCS_TX_BYPASS_GEAR,
       CP_PCS_TX_BYPASS_ENC                            => CP_LANE1_PCS_TX_BYPASS_ENC,
       CP_PCS_TX_BYPASS_BIT_SLIP                       => CP_LANE1_PCS_TX_BYPASS_BIT_SLIP,
       CP_PCS_TX_GEAR_SPLIT                            => CP_LANE1_PCS_TX_GEAR_SPLIT,
       CP_PCS_TX_DRIVE_REG_MODE                        => CP_LANE1_PCS_TX_DRIVE_REG_MODE,
       CP_PCS_TX_BIT_SLIP_CYCLES                       => CP_LANE1_PCS_TX_BIT_SLIP_CYCLES,
       CP_PCS_INT_TX_MASK_0                            => CP_LANE1_PCS_INT_TX_MASK_0,
       CP_PCS_INT_TX_MASK_1                            => CP_LANE1_PCS_INT_TX_MASK_1,
       CP_PCS_INT_TX_MASK_2                            => CP_LANE1_PCS_INT_TX_MASK_2,
       CP_PCS_INT_TX_CLR_0                             => CP_LANE1_PCS_INT_TX_CLR_0,
       CP_PCS_INT_TX_CLR_1                             => CP_LANE1_PCS_INT_TX_CLR_1,
       CP_PCS_INT_TX_CLR_2                             => CP_LANE1_PCS_INT_TX_CLR_2,
       CP_PCS_TX_PMA_TCLK_POLINV                       => CP_LANE1_PCS_TX_PMA_TCLK_POLINV,
       CP_PCS_TX_PCS_CLK_EN_SEL                        => CP_LANE1_PCS_TX_PCS_CLK_EN_SEL,
       CP_PCS_TX_BRIDGE_TCLK_SEL                       => CP_LANE1_PCS_TX_BRIDGE_TCLK_SEL,
       CP_PCS_TX_TCLK_POLINV                           => CP_LANE1_PCS_TX_TCLK_POLINV,
       CP_PCS_PCS_TCLK_SEL                             => CP_LANE1_PCS_PCS_TCLK_SEL,
       CP_PCS_TX_PCS_TX_RSTN                           => CP_LANE1_PCS_TX_PCS_TX_RSTN,
       CP_PCS_TX_SLAVE                                 => CP_LANE1_PCS_TX_SLAVE,
       CP_PCS_TX_GEAR_CLK_EN_SEL                       => CP_LANE1_PCS_TX_GEAR_CLK_EN_SEL,
       CP_PCS_DATA_WIDTH_MODE                          => CP_LANE1_PCS_DATA_WIDTH_MODE,
       CP_PCS_TX_64B66B_67B                            => CP_LANE1_PCS_TX_64B66B_67B,
       CP_PCS_GEAR_TCLK_SEL                            => CP_LANE1_PCS_GEAR_TCLK_SEL,
       CP_PCS_TX_TCLK2FABRIC_SEL                       => CP_LANE1_PCS_TX_TCLK2FABRIC_SEL,
       CP_PCS_TX_OUTZZ                                 => CP_LANE1_PCS_TX_OUTZZ,
       CP_PCS_ENC_DUAL                                 => CP_LANE1_PCS_ENC_DUAL,
       CP_PCS_TX_BITSLIP_DATA_MODE                     => CP_LANE1_PCS_TX_BITSLIP_DATA_MODE,
       CP_PCS_TX_BRIDGE_CLK_POLINV                     => CP_LANE1_PCS_TX_BRIDGE_CLK_POLINV,
       CP_PCS_COMMA_REG1                               => CP_LANE1_PCS_COMMA_REG1,
       CP_PCS_RAPID_IMAX                               => CP_LANE1_PCS_RAPID_IMAX,
       CP_PCS_RAPID_VMIN_1                             => CP_LANE1_PCS_RAPID_VMIN_1,
       CP_PCS_RAPID_VMIN_2                             => CP_LANE1_PCS_RAPID_VMIN_2,
       CP_PCS_RX_PRBS_MODE                             => CP_LANE1_PCS_RX_PRBS_MODE,
       CP_PCS_RX_ERRCNT_CLR                            => CP_LANE1_PCS_RX_ERRCNT_CLR,
       CP_PCS_PRBS_ERR_LPBK                            => CP_LANE1_PCS_PRBS_ERR_LPBK,
       CP_PCS_TX_PRBS_MODE                             => CP_LANE1_PCS_TX_PRBS_MODE,
       CP_PCS_TX_INSERT_ER                             => CP_LANE1_PCS_TX_INSERT_ER,
       CP_PCS_ENABLE_PRBS_GEN                          => CP_LANE1_PCS_ENABLE_PRBS_GEN,
       CP_PCS_DEFAULT_RADDR                            => CP_LANE1_PCS_DEFAULT_RADDR,
       CP_PCS_MASTER_CHECK_OFFSET                      => CP_LANE1_PCS_MASTER_CHECK_OFFSET,
       CP_PCS_DELAY_SET                                => CP_LANE1_PCS_DELAY_SET,
       CP_PCS_SEACH_OFFSET                             => CP_LANE1_PCS_SEACH_OFFSET,
       CP_PCS_CEB_RAPIDLS_MMAX                         => CP_LANE1_PCS_CEB_RAPIDLS_MMAX,
       CP_PCS_CTC_AFULL                                => CP_LANE1_PCS_CTC_AFULL,
       CP_PCS_CTC_AEMPTY                               => CP_LANE1_PCS_CTC_AEMPTY,
       CP_PCS_CTC_CONTI_SKP_SET                        => CP_LANE1_PCS_CTC_CONTI_SKP_SET,
       CP_PCS_FAR_LOOP                                 => CP_LANE1_PCS_FAR_LOOP,
       CP_PCS_NEAR_LOOP                                => CP_LANE1_PCS_NEAR_LOOP,
       CP_PCS_PMA_TX2RX_PLOOP_EN                       => CP_LANE1_PCS_PMA_TX2RX_PLOOP_EN,
       CP_PCS_PMA_TX2RX_SLOOP_EN                       => CP_LANE1_PCS_PMA_TX2RX_SLOOP_EN,
       CP_PCS_PMA_RX2TX_PLOOP_EN                       => CP_LANE1_PCS_PMA_RX2TX_PLOOP_EN,
       CP_PCS_INT_RX_MASK_0                            => CP_LANE1_PCS_INT_RX_MASK_0,
       CP_PCS_INT_RX_MASK_1                            => CP_LANE1_PCS_INT_RX_MASK_1,
       CP_PCS_INT_RX_MASK_2                            => CP_LANE1_PCS_INT_RX_MASK_2,
       CP_PCS_INT_RX_MASK_3                            => CP_LANE1_PCS_INT_RX_MASK_3,
       CP_PCS_INT_RX_MASK_4                            => CP_LANE1_PCS_INT_RX_MASK_4,
       CP_PCS_INT_RX_MASK_5                            => CP_LANE1_PCS_INT_RX_MASK_5,
       CP_PCS_INT_RX_MASK_6                            => CP_LANE1_PCS_INT_RX_MASK_6,
       CP_PCS_INT_RX_MASK_7                            => CP_LANE1_PCS_INT_RX_MASK_7,
       CP_PCS_INT_RX_CLR_0                             => CP_LANE1_PCS_INT_RX_CLR_0,
       CP_PCS_INT_RX_CLR_1                             => CP_LANE1_PCS_INT_RX_CLR_1,
       CP_PCS_INT_RX_CLR_2                             => CP_LANE1_PCS_INT_RX_CLR_2,
       CP_PCS_INT_RX_CLR_3                             => CP_LANE1_PCS_INT_RX_CLR_3,
       CP_PCS_INT_RX_CLR_4                             => CP_LANE1_PCS_INT_RX_CLR_4,
       CP_PCS_INT_RX_CLR_5                             => CP_LANE1_PCS_INT_RX_CLR_5,
       CP_PCS_INT_RX_CLR_6                             => CP_LANE1_PCS_INT_RX_CLR_6,
       CP_PCS_INT_RX_CLR_7                             => CP_LANE1_PCS_INT_RX_CLR_7,
       CP_PCS_CA_RSTN_RX                               => CP_LANE1_PCS_CA_RSTN_RX,
       CP_PCS_CA_DYN_DLY_EN_RX                         => CP_LANE1_PCS_CA_DYN_DLY_EN_RX,
       CP_PCS_CA_DYN_DLY_SEL_RX                        => CP_LANE1_PCS_CA_DYN_DLY_SEL_RX,
       CP_PCS_CA_RX                                    => CP_LANE1_PCS_CA_RX,
       CP_PCS_CA_RSTN_TX                               => CP_LANE1_PCS_CA_RSTN_TX,
       CP_PCS_CA_DYN_DLY_EN_TX                         => CP_LANE1_PCS_CA_DYN_DLY_EN_TX,
       CP_PCS_CA_DYN_DLY_SEL_TX                        => CP_LANE1_PCS_CA_DYN_DLY_SEL_TX,
       CP_PCS_CA_TX                                    => CP_LANE1_PCS_CA_TX,
       CP_PCS_RXPRBS_PWR_REDUCTION                     => CP_LANE1_PCS_RXPRBS_PWR_REDUCTION,
       CP_PCS_WDALIGN_PWR_REDUCTION                    => CP_LANE1_PCS_WDALIGN_PWR_REDUCTION,
       CP_PCS_RXDEC_PWR_REDUCTION                      => CP_LANE1_PCS_RXDEC_PWR_REDUCTION,
       CP_PCS_RXCB_PWR_REDUCTION                       => CP_LANE1_PCS_RXCB_PWR_REDUCTION,
       CP_PCS_RXCTC_PWR_REDUCTION                      => CP_LANE1_PCS_RXCTC_PWR_REDUCTION,
       CP_PCS_RXGEAR_PWR_REDUCTION                     => CP_LANE1_PCS_RXGEAR_PWR_REDUCTION,
       CP_PCS_RXBRG_PWR_REDUCTION                      => CP_LANE1_PCS_RXBRG_PWR_REDUCTION,
       CP_PCS_RXTEST_PWR_REDUCTION                     => CP_LANE1_PCS_RXTEST_PWR_REDUCTION,
       CP_PCS_TXBRG_PWR_REDUCTION                      => CP_LANE1_PCS_TXBRG_PWR_REDUCTION,
       CP_PCS_TXGEAR_PWR_REDUCTION                     => CP_LANE1_PCS_TXGEAR_PWR_REDUCTION,
       CP_PCS_TXENC_PWR_REDUCTION                      => CP_LANE1_PCS_TXENC_PWR_REDUCTION,
       CP_PCS_TXBSLP_PWR_REDUCTION                     => CP_LANE1_PCS_TXBSLP_PWR_REDUCTION,
       CP_PCS_TXPRBS_PWR_REDUCTION                     => CP_LANE1_PCS_TXPRBS_PWR_REDUCTION,
    
       CP_PMA_REG_RX_PD                                => CP_LANE1_PMA_REG_RX_PD,
       CP_PMA_REG_RX_PD_EN                             => CP_LANE1_PMA_REG_RX_PD_EN,
       CP_PMA_REG_RX_RESERVED_2                        => CP_LANE1_PMA_REG_RX_RESERVED_2,
       CP_PMA_REG_RX_RESERVED_3                        => CP_LANE1_PMA_REG_RX_RESERVED_3,
       CP_PMA_REG_RX_DATAPATH_PD                       => CP_LANE1_PMA_REG_RX_DATAPATH_PD,
       CP_PMA_REG_RX_DATAPATH_PD_EN                    => CP_LANE1_PMA_REG_RX_DATAPATH_PD_EN,
       CP_PMA_REG_RX_SIGDET_PD                         => CP_LANE1_PMA_REG_RX_SIGDET_PD,
       CP_PMA_REG_RX_SIGDET_PD_EN                      => CP_LANE1_PMA_REG_RX_SIGDET_PD_EN,
       CP_PMA_REG_RX_DCC_RST_N                         => CP_LANE1_PMA_REG_RX_DCC_RST_N,
       CP_PMA_REG_RX_DCC_RST_N_EN                      => CP_LANE1_PMA_REG_RX_DCC_RST_N_EN,
       CP_PMA_REG_RX_CDR_RST_N                         => CP_LANE1_PMA_REG_RX_CDR_RST_N,
       CP_PMA_REG_RX_CDR_RST_N_EN                      => CP_LANE1_PMA_REG_RX_CDR_RST_N_EN,
       CP_PMA_REG_RX_SIGDET_RST_N                      => CP_LANE1_PMA_REG_RX_SIGDET_RST_N,
       CP_PMA_REG_RX_SIGDET_RST_N_EN                   => CP_LANE1_PMA_REG_RX_SIGDET_RST_N_EN,
       CP_PMA_REG_RXPCLK_SLIP                          => CP_LANE1_PMA_REG_RXPCLK_SLIP,
       CP_PMA_REG_RXPCLK_SLIP_OW                       => CP_LANE1_PMA_REG_RXPCLK_SLIP_OW,
       CP_PMA_REG_RX_PCLKSWITCH_RST_N                  => CP_LANE1_PMA_REG_RX_PCLKSWITCH_RST_N,
       CP_PMA_REG_RX_PCLKSWITCH_RST_N_EN               => CP_LANE1_PMA_REG_RX_PCLKSWITCH_RST_N_EN,
       CP_PMA_REG_RX_PCLKSWITCH                        => CP_LANE1_PMA_REG_RX_PCLKSWITCH,
       CP_PMA_REG_RX_PCLKSWITCH_EN                     => CP_LANE1_PMA_REG_RX_PCLKSWITCH_EN,
       CP_PMA_REG_RX_HIGHZ                             => CP_LANE1_PMA_REG_RX_HIGHZ,
       CP_PMA_REG_RX_HIGHZ_EN                          => CP_LANE1_PMA_REG_RX_HIGHZ_EN,
       CP_PMA_REG_RX_SIGDET_CLK_WINDOW                 => CP_LANE1_PMA_REG_RX_SIGDET_CLK_WINDOW,
       CP_PMA_REG_RX_SIGDET_CLK_WINDOW_OW              => CP_LANE1_PMA_REG_RX_SIGDET_CLK_WINDOW_OW,
       CP_PMA_REG_RX_PD_BIAS_RX                        => CP_LANE1_PMA_REG_RX_PD_BIAS_RX,
       CP_PMA_REG_RX_PD_BIAS_RX_OW                     => CP_LANE1_PMA_REG_RX_PD_BIAS_RX_OW,
       CP_PMA_REG_RX_RESET_N                           => CP_LANE1_PMA_REG_RX_RESET_N,
       CP_PMA_REG_RX_RESET_N_OW                        => CP_LANE1_PMA_REG_RX_RESET_N_OW,
       CP_PMA_REG_RX_RESERVED_29_28                    => CP_LANE1_PMA_REG_RX_RESERVED_29_28,
       CP_PMA_REG_RX_BUSWIDTH                          => CP_LANE1_PMA_REG_RX_BUSWIDTH,
       CP_PMA_REG_RX_BUSWIDTH_EN                       => CP_LANE1_PMA_REG_RX_BUSWIDTH_EN,
       CP_PMA_REG_RX_RATE                              => CP_LANE1_PMA_REG_RX_RATE,
       CP_PMA_REG_RX_RESERVED_36                       => CP_LANE1_PMA_REG_RX_RESERVED_36,
       CP_PMA_REG_RX_RATE_EN                           => CP_LANE1_PMA_REG_RX_RATE_EN,
       CP_PMA_REG_RX_RES_TRIM                          => CP_LANE1_PMA_REG_RX_RES_TRIM,
       CP_PMA_REG_RX_RESERVED_44                       => CP_LANE1_PMA_REG_RX_RESERVED_44,
       CP_PMA_REG_RX_RESERVED_45                       => CP_LANE1_PMA_REG_RX_RESERVED_45,
       CP_PMA_REG_RX_SIGDET_STATUS_EN                  => CP_LANE1_PMA_REG_RX_SIGDET_STATUS_EN,
       CP_PMA_REG_RX_RESERVED_48_47                    => CP_LANE1_PMA_REG_RX_RESERVED_48_47,
       CP_PMA_REG_RX_ICTRL_SIGDET                      => CP_LANE1_PMA_REG_RX_ICTRL_SIGDET,
       CP_PMA_REG_RX_PCLK_EDGE_SEL                     => CP_LANE1_PMA_REG_RX_PCLK_EDGE_SEL,
       CP_PMA_REG_RX_PIBUF_IC                          => CP_LANE1_PMA_REG_RX_PIBUF_IC,
       CP_PMA_REG_RX_RESERVED_69                       => CP_LANE1_PMA_REG_RX_RESERVED_69,
       CP_PMA_REG_RX_DCC_IC_RX                         => CP_LANE1_PMA_REG_RX_DCC_IC_RX,
       CP_PMA_REG_RX_ICTRL_TRX                         => CP_LANE1_PMA_REG_RX_ICTRL_TRX,
       CP_PMA_REG_RX_RESERVED_77_76                    => CP_LANE1_PMA_REG_RX_RESERVED_77_76,
       CP_PMA_REG_RX_RESERVED_79_78                    => CP_LANE1_PMA_REG_RX_RESERVED_79_78,
       CP_PMA_REG_RX_RESERVED_81_80                    => CP_LANE1_PMA_REG_RX_RESERVED_81_80,
       CP_PMA_REG_RX_ICTRL_PIBUF                       => CP_LANE1_PMA_REG_RX_ICTRL_PIBUF,
       CP_PMA_REG_RX_ICTRL_PI                          => CP_LANE1_PMA_REG_RX_ICTRL_PI,
       CP_PMA_REG_RX_ICTRL_DCC                         => CP_LANE1_PMA_REG_RX_ICTRL_DCC,
       CP_PMA_REG_RX_RESERVED_89_88                    => CP_LANE1_PMA_REG_RX_RESERVED_89_88,
       CP_PMA_REG_TX_RATE                              => CP_LANE1_PMA_REG_TX_RATE,
       CP_PMA_REG_RX_RESERVED_92                       => CP_LANE1_PMA_REG_RX_RESERVED_92,
       CP_PMA_REG_TX_RATE_EN                           => CP_LANE1_PMA_REG_TX_RATE_EN,
       CP_PMA_REG_RX_TX2RX_PLPBK_RST_N                 => CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_RST_N,
       CP_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN              => CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN,
       CP_PMA_REG_RX_TX2RX_PLPBK_EN                    => CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_EN,
       CP_PMA_REG_TXCLK_SEL                            => CP_LANE1_PMA_REG_TXCLK_SEL,
       CP_PMA_REG_RX_DATA_POLARITY                     => CP_LANE1_PMA_REG_RX_DATA_POLARITY,
       CP_PMA_REG_RX_ERR_INSERT                        => CP_LANE1_PMA_REG_RX_ERR_INSERT,
       CP_PMA_REG_UDP_CHK_EN                           => CP_LANE1_PMA_REG_UDP_CHK_EN,
       CP_PMA_REG_PRBS_SEL                             => CP_LANE1_PMA_REG_PRBS_SEL,
       CP_PMA_REG_PRBS_CHK_EN                          => CP_LANE1_PMA_REG_PRBS_CHK_EN,
       CP_PMA_REG_PRBS_CHK_WIDTH_SEL                   => CP_LANE1_PMA_REG_PRBS_CHK_WIDTH_SEL,
       CP_PMA_REG_BIST_CHK_PAT_SEL                     => CP_LANE1_PMA_REG_BIST_CHK_PAT_SEL,
       CP_PMA_REG_LOAD_ERR_CNT                         => CP_LANE1_PMA_REG_LOAD_ERR_CNT,
       CP_PMA_REG_CHK_COUNTER_EN                       => CP_LANE1_PMA_REG_CHK_COUNTER_EN,
       CP_PMA_REG_CDR_PROP_GAIN                        => CP_LANE1_PMA_REG_CDR_PROP_GAIN,
       CP_PMA_REG_CDR_PROP_TURBO_GAIN                  => CP_LANE1_PMA_REG_CDR_PROP_TURBO_GAIN,
       CP_PMA_REG_CDR_INT_GAIN                         => CP_LANE1_PMA_REG_CDR_INT_GAIN,
       CP_PMA_REG_CDR_INT_TURBO_GAIN                   => CP_LANE1_PMA_REG_CDR_INT_TURBO_GAIN,
       CP_PMA_REG_CDR_INT_SAT_MAX                      => CP_LANE1_PMA_REG_CDR_INT_SAT_MAX,
       CP_PMA_REG_CDR_INT_SAT_MIN                      => CP_LANE1_PMA_REG_CDR_INT_SAT_MIN,
       CP_PMA_REG_CDR_INT_RST                          => CP_LANE1_PMA_REG_CDR_INT_RST,
       CP_PMA_REG_CDR_INT_RST_OW                       => CP_LANE1_PMA_REG_CDR_INT_RST_OW,
       CP_PMA_REG_CDR_PROP_RST                         => CP_LANE1_PMA_REG_CDR_PROP_RST,
       CP_PMA_REG_CDR_PROP_RST_OW                      => CP_LANE1_PMA_REG_CDR_PROP_RST_OW,
       CP_PMA_REG_CDR_LOCK_RST                         => CP_LANE1_PMA_REG_CDR_LOCK_RST,
       CP_PMA_REG_CDR_LOCK_RST_OW                      => CP_LANE1_PMA_REG_CDR_LOCK_RST_OW,
       CP_PMA_REG_CDR_RX_PI_FORCE_SEL                  => CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_SEL,
       CP_PMA_REG_CDR_RX_PI_FORCE_D                    => CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_D,
       CP_PMA_REG_CDR_LOCK_TIMER                       => CP_LANE1_PMA_REG_CDR_LOCK_TIMER,
       CP_PMA_REG_CDR_TURBO_MODE_TIMER                 => CP_LANE1_PMA_REG_CDR_TURBO_MODE_TIMER,
       CP_PMA_REG_CDR_LOCK_VAL                         => CP_LANE1_PMA_REG_CDR_LOCK_VAL,
       CP_PMA_REG_CDR_LOCK_OW                          => CP_LANE1_PMA_REG_CDR_LOCK_OW,
       CP_PMA_REG_CDR_INT_SAT_DET_EN                   => CP_LANE1_PMA_REG_CDR_INT_SAT_DET_EN,
       CP_PMA_REG_CDR_SAT_AUTO_DIS                     => CP_LANE1_PMA_REG_CDR_SAT_AUTO_DIS,
       CP_PMA_REG_CDR_GAIN_AUTO                        => CP_LANE1_PMA_REG_CDR_GAIN_AUTO,
       CP_PMA_REG_CDR_TURBO_GAIN_AUTO                  => CP_LANE1_PMA_REG_CDR_TURBO_GAIN_AUTO,
       CP_PMA_REG_RX_RESERVED_171_167                  => CP_LANE1_PMA_REG_RX_RESERVED_171_167,
       CP_PMA_REG_RX_RESERVED_175_172                  => CP_LANE1_PMA_REG_RX_RESERVED_175_172,
       CP_PMA_REG_CDR_SAT_DET_STATUS_EN                => CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_EN,
       CP_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN          => CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN,
       CP_PMA_REG_CDR_PI_CTRL_RST                      => CP_LANE1_PMA_REG_CDR_PI_CTRL_RST,
       CP_PMA_REG_CDR_PI_CTRL_RST_OW                   => CP_LANE1_PMA_REG_CDR_PI_CTRL_RST_OW,
       CP_PMA_REG_CDR_SAT_DET_RST                      => CP_LANE1_PMA_REG_CDR_SAT_DET_RST,
       CP_PMA_REG_CDR_SAT_DET_RST_OW                   => CP_LANE1_PMA_REG_CDR_SAT_DET_RST_OW,
       CP_PMA_REG_CDR_SAT_DET_STICKY_RST               => CP_LANE1_PMA_REG_CDR_SAT_DET_STICKY_RST,
       CP_PMA_REG_CDR_SAT_DET_STICKY_RST_OW            => CP_LANE1_PMA_REG_CDR_SAT_DET_STICKY_RST_OW,
       CP_PMA_REG_CDR_SIGDET_STATUS_DIS                => CP_LANE1_PMA_REG_CDR_SIGDET_STATUS_DIS,
       CP_PMA_REG_CDR_SAT_DET_TIMER                    => CP_LANE1_PMA_REG_CDR_SAT_DET_TIMER,
       CP_PMA_REG_CDR_SAT_DET_STATUS_VAL               => CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_VAL,
       CP_PMA_REG_CDR_SAT_DET_STATUS_OW                => CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_OW,
       CP_PMA_REG_CDR_TURBO_MODE_EN                    => CP_LANE1_PMA_REG_CDR_TURBO_MODE_EN,
       CP_PMA_REG_RX_RESERVED_190                      => CP_LANE1_PMA_REG_RX_RESERVED_190,
       CP_PMA_REG_RX_RESERVED_193_191                  => CP_LANE1_PMA_REG_RX_RESERVED_193_191,
       CP_PMA_REG_CDR_STATUS_FIFO_EN                   => CP_LANE1_PMA_REG_CDR_STATUS_FIFO_EN,
       CP_PMA_REG_PMA_TEST_SEL                         => CP_LANE1_PMA_REG_PMA_TEST_SEL,
       CP_PMA_REG_OOB_COMWAKE_GAP_MIN                  => CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MIN,
       CP_PMA_REG_OOB_COMWAKE_GAP_MAX                  => CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MAX,
       CP_PMA_REG_OOB_COMINIT_GAP_MIN                  => CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MIN,
       CP_PMA_REG_OOB_COMINIT_GAP_MAX                  => CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MAX,
       CP_PMA_REG_RX_RESERVED_227_226                  => CP_LANE1_PMA_REG_RX_RESERVED_227_226,
       CP_PMA_REG_COMWAKE_STATUS_CLEAR                 => CP_LANE1_PMA_REG_COMWAKE_STATUS_CLEAR,
       CP_PMA_REG_COMINIT_STATUS_CLEAR                 => CP_LANE1_PMA_REG_COMINIT_STATUS_CLEAR,
       CP_PMA_REG_RX_SYNC_RST_N_EN                     => CP_LANE1_PMA_REG_RX_SYNC_RST_N_EN,
       CP_PMA_REG_RX_SYNC_RST_N                        => CP_LANE1_PMA_REG_RX_SYNC_RST_N,
       CP_PMA_REG_RX_RESERVED_233_232                  => CP_LANE1_PMA_REG_RX_RESERVED_233_232,
       CP_PMA_REG_RX_RESERVED_235_234                  => CP_LANE1_PMA_REG_RX_RESERVED_235_234,
       CP_PMA_REG_RX_SATA_COMINIT_OW                   => CP_LANE1_PMA_REG_RX_SATA_COMINIT_OW,
       CP_PMA_REG_RX_SATA_COMINIT                      => CP_LANE1_PMA_REG_RX_SATA_COMINIT,
       CP_PMA_REG_RX_SATA_COMWAKE_OW                   => CP_LANE1_PMA_REG_RX_SATA_COMWAKE_OW,
       CP_PMA_REG_RX_SATA_COMWAKE                      => CP_LANE1_PMA_REG_RX_SATA_COMWAKE,
       CP_PMA_REG_RX_RESERVED_241_240                  => CP_LANE1_PMA_REG_RX_RESERVED_241_240,
       CP_PMA_REG_RX_DCC_DISABLE                       => CP_LANE1_PMA_REG_RX_DCC_DISABLE,
       CP_PMA_REG_RX_RESERVED_243                      => CP_LANE1_PMA_REG_RX_RESERVED_243,
       CP_PMA_REG_RX_SLIP_SEL_EN                       => CP_LANE1_PMA_REG_RX_SLIP_SEL_EN,
       CP_PMA_REG_RX_SLIP_SEL                          => CP_LANE1_PMA_REG_RX_SLIP_SEL,
       CP_PMA_REG_RX_SLIP_EN                           => CP_LANE1_PMA_REG_RX_SLIP_EN,
       CP_PMA_REG_RX_SIGDET_STATUS_SEL                 => CP_LANE1_PMA_REG_RX_SIGDET_STATUS_SEL,
       CP_PMA_REG_RX_SIGDET_FSM_RST_N                  => CP_LANE1_PMA_REG_RX_SIGDET_FSM_RST_N,
       CP_PMA_REG_RX_RESERVED_254                      => CP_LANE1_PMA_REG_RX_RESERVED_254,
       CP_PMA_REG_RX_SIGDET_STATUS                     => CP_LANE1_PMA_REG_RX_SIGDET_STATUS,
       CP_PMA_REG_RX_SIGDET_VTH                        => CP_LANE1_PMA_REG_RX_SIGDET_VTH,
       CP_PMA_REG_RX_SIGDET_GRM                        => CP_LANE1_PMA_REG_RX_SIGDET_GRM,
       CP_PMA_REG_RX_SIGDET_PULSE_EXT                  => CP_LANE1_PMA_REG_RX_SIGDET_PULSE_EXT,
       CP_PMA_REG_RX_SIGDET_CH2_SEL                    => CP_LANE1_PMA_REG_RX_SIGDET_CH2_SEL,
       CP_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW             => CP_LANE1_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW,
       CP_PMA_REG_RX_SIGDET_CHK_WINDOW_EN              => CP_LANE1_PMA_REG_RX_SIGDET_CHK_WINDOW_EN,
       CP_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING        => CP_LANE1_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING,
       CP_PMA_REG_SLIP_FIFO_INV_EN                     => CP_LANE1_PMA_REG_SLIP_FIFO_INV_EN,
       CP_PMA_REG_SLIP_FIFO_INV                        => CP_LANE1_PMA_REG_SLIP_FIFO_INV,
       CP_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL          => CP_LANE1_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL,
       CP_PMA_REG_RX_SIGDET_4OOB_DET_SEL               => CP_LANE1_PMA_REG_RX_SIGDET_4OOB_DET_SEL,
       CP_PMA_REG_RX_RESERVED_285_283                  => CP_LANE1_PMA_REG_RX_RESERVED_285_283,
       CP_PMA_REG_RX_RESERVED_286                      => CP_LANE1_PMA_REG_RX_RESERVED_286,
       CP_PMA_REG_RX_SIGDET_IC_I                       => CP_LANE1_PMA_REG_RX_SIGDET_IC_I,
       CP_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW           => CP_LANE1_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW,
       CP_PMA_REG_RX_OOB_DETECTOR_RESET_N              => CP_LANE1_PMA_REG_RX_OOB_DETECTOR_RESET_N,
       CP_PMA_REG_RX_OOB_DETECTOR_PD_OW                => CP_LANE1_PMA_REG_RX_OOB_DETECTOR_PD_OW,
       CP_PMA_REG_RX_OOB_DETECTOR_PD                   => CP_LANE1_PMA_REG_RX_OOB_DETECTOR_PD,
       CP_PMA_REG_RX_LS_MODE_EN                        => CP_LANE1_PMA_REG_RX_LS_MODE_EN,
       CP_PMA_REG_RX_EQ1_R_SET_TOP                     => CP_LANE1_PMA_REG_RX_EQ1_R_SET_TOP,
       CP_PMA_REG_RX_EQ1_R_SET_FB                      => CP_LANE1_PMA_REG_RX_EQ1_R_SET_FB,
       CP_PMA_REG_RX_EQ1_C_SET_FB                      => CP_LANE1_PMA_REG_RX_EQ1_C_SET_FB,
       CP_PMA_REG_RX_EQ1_OFF                           => CP_LANE1_PMA_REG_RX_EQ1_OFF,
       CP_PMA_REG_RX_EQ2_R_SET_TOP                     => CP_LANE1_PMA_REG_RX_EQ2_R_SET_TOP,
       CP_PMA_REG_RX_EQ2_R_SET_FB                      => CP_LANE1_PMA_REG_RX_EQ2_R_SET_FB,
       CP_PMA_REG_RX_EQ2_C_SET_FB                      => CP_LANE1_PMA_REG_RX_EQ2_C_SET_FB,
       CP_PMA_REG_RX_EQ2_OFF                           => CP_LANE1_PMA_REG_RX_EQ2_OFF,
       CP_PMA_REG_EQ_DAC                               => CP_LANE1_PMA_REG_EQ_DAC,
       CP_PMA_REG_RX_ICTRL_EQ                          => CP_LANE1_PMA_REG_RX_ICTRL_EQ,
       CP_PMA_REG_EQ_DC_CALIB_EN                       => CP_LANE1_PMA_REG_EQ_DC_CALIB_EN,
       CP_PMA_REG_EQ_DC_CALIB_SEL                      => CP_LANE1_PMA_REG_EQ_DC_CALIB_SEL,
       CP_PMA_REG_RX_RESERVED_337_330                  => CP_LANE1_PMA_REG_RX_RESERVED_337_330,
       CP_PMA_REG_RX_RESERVED_345_338                  => CP_LANE1_PMA_REG_RX_RESERVED_345_338,
       CP_PMA_REG_RX_RESERVED_353_346                  => CP_LANE1_PMA_REG_RX_RESERVED_353_346,
       CP_PMA_REG_RX_RESERVED_361_354                  => CP_LANE1_PMA_REG_RX_RESERVED_361_354,
       CP_PMA_CTLE_CTRL_REG_I                          => CP_LANE1_PMA_CTLE_CTRL_REG_I,
       CP_PMA_CFG_RX_LANE_POWERUP                      => CP_LANE1_PMA_CFG_RX_LANE_POWERUP,
       CP_PMA_CFG_RX_PMA_RSTN                          => CP_LANE1_PMA_CFG_RX_PMA_RSTN,
       CP_PMA_INT_PMA_RX_MASK_0                        => CP_LANE1_PMA_INT_PMA_RX_MASK_0,
       CP_PMA_INT_PMA_RX_CLR_0                         => CP_LANE1_PMA_INT_PMA_RX_CLR_0,
       CP_PMA_CFG_CTLE_ADP_RSTN                        => CP_LANE1_PMA_CFG_CTLE_ADP_RSTN,
    
       CP_PMA_REG_TX_PD                                => CP_LANE1_PMA_REG_TX_PD,
       CP_PMA_REG_TX_PD_OW                             => CP_LANE1_PMA_REG_TX_PD_OW,
       CP_PMA_REG_TX_MAIN_PRE_Z                        => CP_LANE1_PMA_REG_TX_MAIN_PRE_Z,
       CP_PMA_REG_TX_MAIN_PRE_Z_OW                     => CP_LANE1_PMA_REG_TX_MAIN_PRE_Z_OW,
       CP_PMA_REG_TX_BEACON_TIMER_SEL                  => CP_LANE1_PMA_REG_TX_BEACON_TIMER_SEL,
       CP_PMA_REG_TX_RXDET_REQ_OW                      => CP_LANE1_PMA_REG_TX_RXDET_REQ_OW,
       CP_PMA_REG_TX_RXDET_REQ                         => CP_LANE1_PMA_REG_TX_RXDET_REQ,
       CP_PMA_REG_TX_BEACON_EN_OW                      => CP_LANE1_PMA_REG_TX_BEACON_EN_OW,
       CP_PMA_REG_TX_BEACON_EN                         => CP_LANE1_PMA_REG_TX_BEACON_EN,
       CP_PMA_REG_TX_EI_EN_OW                          => CP_LANE1_PMA_REG_TX_EI_EN_OW,
       CP_PMA_REG_TX_EI_EN                             => CP_LANE1_PMA_REG_TX_EI_EN,
       CP_PMA_REG_TX_BIT_CONV                          => CP_LANE1_PMA_REG_TX_BIT_CONV,
       CP_PMA_REG_TX_RES_CAL                           => CP_LANE1_PMA_REG_TX_RES_CAL,
       CP_PMA_REG_TX_RESERVED_19                       => CP_LANE1_PMA_REG_TX_RESERVED_19,
       CP_PMA_REG_TX_RESERVED_25_20                    => CP_LANE1_PMA_REG_TX_RESERVED_25_20,
       CP_PMA_REG_TX_RESERVED_33_26                    => CP_LANE1_PMA_REG_TX_RESERVED_33_26,
       CP_PMA_REG_TX_RESERVED_41_34                    => CP_LANE1_PMA_REG_TX_RESERVED_41_34,
       CP_PMA_REG_TX_RESERVED_49_42                    => CP_LANE1_PMA_REG_TX_RESERVED_49_42,
       CP_PMA_REG_TX_RESERVED_57_50                    => CP_LANE1_PMA_REG_TX_RESERVED_57_50,
       CP_PMA_REG_TX_SYNC_OW                           => CP_LANE1_PMA_REG_TX_SYNC_OW,
       CP_PMA_REG_TX_SYNC                              => CP_LANE1_PMA_REG_TX_SYNC,
       CP_PMA_REG_TX_PD_POST                           => CP_LANE1_PMA_REG_TX_PD_POST,
       CP_PMA_REG_TX_PD_POST_OW                        => CP_LANE1_PMA_REG_TX_PD_POST_OW,
       CP_PMA_REG_TX_RESET_N_OW                        => CP_LANE1_PMA_REG_TX_RESET_N_OW,
       CP_PMA_REG_TX_RESET_N                           => CP_LANE1_PMA_REG_TX_RESET_N,
       CP_PMA_REG_TX_RESERVED_64                       => CP_LANE1_PMA_REG_TX_RESERVED_64,
       CP_PMA_REG_TX_RESERVED_65                       => CP_LANE1_PMA_REG_TX_RESERVED_65,
       CP_PMA_REG_TX_BUSWIDTH_OW                       => CP_LANE1_PMA_REG_TX_BUSWIDTH_OW,
       CP_PMA_REG_TX_BUSWIDTH                          => CP_LANE1_PMA_REG_TX_BUSWIDTH,
       CP_PMA_REG_PLL_READY_OW                         => CP_LANE1_PMA_REG_PLL_READY_OW,
       CP_PMA_REG_PLL_READY                            => CP_LANE1_PMA_REG_PLL_READY,
       CP_PMA_REG_TX_RESERVED_72                       => CP_LANE1_PMA_REG_TX_RESERVED_72,
       CP_PMA_REG_TX_RESERVED_73                       => CP_LANE1_PMA_REG_TX_RESERVED_73,
       CP_PMA_REG_TX_RESERVED_74                       => CP_LANE1_PMA_REG_TX_RESERVED_74,
       CP_PMA_REG_EI_PCLK_DELAY_SEL                    => CP_LANE1_PMA_REG_EI_PCLK_DELAY_SEL,
       CP_PMA_REG_TX_RESERVED_77                       => CP_LANE1_PMA_REG_TX_RESERVED_77,
       CP_PMA_REG_TX_RESERVED_83_78                    => CP_LANE1_PMA_REG_TX_RESERVED_83_78,
       CP_PMA_REG_TX_RESERVED_89_84                    => CP_LANE1_PMA_REG_TX_RESERVED_89_84,
       CP_PMA_REG_TX_RESERVED_95_90                    => CP_LANE1_PMA_REG_TX_RESERVED_95_90,
       CP_PMA_REG_TX_RESERVED_101_96                   => CP_LANE1_PMA_REG_TX_RESERVED_101_96,
       CP_PMA_REG_TX_RESERVED_107_102                  => CP_LANE1_PMA_REG_TX_RESERVED_107_102,
       CP_PMA_REG_TX_RESERVED_113_108                  => CP_LANE1_PMA_REG_TX_RESERVED_113_108,
       CP_PMA_REG_TX_AMP_DAC0                          => CP_LANE1_PMA_REG_TX_AMP_DAC0,
       CP_PMA_REG_TX_AMP_DAC1                          => CP_LANE1_PMA_REG_TX_AMP_DAC1,
       CP_PMA_REG_TX_AMP_DAC2                          => CP_LANE1_PMA_REG_TX_AMP_DAC2,
       CP_PMA_REG_TX_AMP_DAC3                          => CP_LANE1_PMA_REG_TX_AMP_DAC3,
       CP_PMA_REG_TX_RESERVED_143_138                  => CP_LANE1_PMA_REG_TX_RESERVED_143_138,
       CP_PMA_REG_TX_MARGIN                            => CP_LANE1_PMA_REG_TX_MARGIN,
       CP_PMA_REG_TX_MARGIN_OW                         => CP_LANE1_PMA_REG_TX_MARGIN_OW,
       CP_PMA_REG_TX_RESERVED_149_148                  => CP_LANE1_PMA_REG_TX_RESERVED_149_148,
       CP_PMA_REG_TX_RESERVED_150                      => CP_LANE1_PMA_REG_TX_RESERVED_150,
       CP_PMA_REG_TX_SWING                             => CP_LANE1_PMA_REG_TX_SWING,
       CP_PMA_REG_TX_SWING_OW                          => CP_LANE1_PMA_REG_TX_SWING_OW,
       CP_PMA_REG_TX_RESERVED_153                      => CP_LANE1_PMA_REG_TX_RESERVED_153,
       CP_PMA_REG_TX_RXDET_THRESHOLD                   => CP_LANE1_PMA_REG_TX_RXDET_THRESHOLD,
       CP_PMA_REG_TX_RESERVED_157_156                  => CP_LANE1_PMA_REG_TX_RESERVED_157_156,
       CP_PMA_REG_TX_BEACON_OSC_CTRL                   => CP_LANE1_PMA_REG_TX_BEACON_OSC_CTRL,
       CP_PMA_REG_TX_RESERVED_160_159                  => CP_LANE1_PMA_REG_TX_RESERVED_160_159,
       CP_PMA_REG_TX_RESERVED_162_161                  => CP_LANE1_PMA_REG_TX_RESERVED_162_161,
       CP_PMA_REG_TX_TX2RX_SLPBACK_EN                  => CP_LANE1_PMA_REG_TX_TX2RX_SLPBACK_EN,
       CP_PMA_REG_TX_PCLK_EDGE_SEL                     => CP_LANE1_PMA_REG_TX_PCLK_EDGE_SEL,
       CP_PMA_REG_TX_RXDET_STATUS_OW                   => CP_LANE1_PMA_REG_TX_RXDET_STATUS_OW,
       CP_PMA_REG_TX_RXDET_STATUS                      => CP_LANE1_PMA_REG_TX_RXDET_STATUS,
       CP_PMA_REG_TX_PRBS_GEN_EN                       => CP_LANE1_PMA_REG_TX_PRBS_GEN_EN,
       CP_PMA_REG_TX_PRBS_GEN_WIDTH_SEL                => CP_LANE1_PMA_REG_TX_PRBS_GEN_WIDTH_SEL,
       CP_PMA_REG_TX_PRBS_SEL                          => CP_LANE1_PMA_REG_TX_PRBS_SEL,
       CP_PMA_REG_TX_UDP_DATA_7_TO_0                   => CP_LANE1_PMA_REG_TX_UDP_DATA_7_TO_0,
       CP_PMA_REG_TX_UDP_DATA_15_TO_8                  => CP_LANE1_PMA_REG_TX_UDP_DATA_15_TO_8,
       CP_PMA_REG_TX_UDP_DATA_19_TO_16                 => CP_LANE1_PMA_REG_TX_UDP_DATA_19_TO_16,
       CP_PMA_REG_TX_RESERVED_192                      => CP_LANE1_PMA_REG_TX_RESERVED_192,
       CP_PMA_REG_TX_FIFO_WP_CTRL                      => CP_LANE1_PMA_REG_TX_FIFO_WP_CTRL,
       CP_PMA_REG_TX_FIFO_EN                           => CP_LANE1_PMA_REG_TX_FIFO_EN,
       CP_PMA_REG_TX_DATA_MUX_SEL                      => CP_LANE1_PMA_REG_TX_DATA_MUX_SEL,
       CP_PMA_REG_TX_ERR_INSERT                        => CP_LANE1_PMA_REG_TX_ERR_INSERT,
       CP_PMA_REG_TX_RESERVED_203_200                  => CP_LANE1_PMA_REG_TX_RESERVED_203_200,
       CP_PMA_REG_TX_RESERVED_204                      => CP_LANE1_PMA_REG_TX_RESERVED_204,
       CP_PMA_REG_TX_SATA_EN                           => CP_LANE1_PMA_REG_TX_SATA_EN,
       CP_PMA_REG_TX_RESERVED_207_206                  => CP_LANE1_PMA_REG_TX_RESERVED_207_206,
       CP_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW             => CP_LANE1_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW,
       CP_PMA_REG_RATE_CHANGE_TXPCLK_ON                => CP_LANE1_PMA_REG_RATE_CHANGE_TXPCLK_ON,
       CP_PMA_REG_TX_CFG_POST1                         => CP_LANE1_PMA_REG_TX_CFG_POST1,
       CP_PMA_REG_TX_CFG_POST2                         => CP_LANE1_PMA_REG_TX_CFG_POST2,
       CP_PMA_REG_TX_DEEMP                             => CP_LANE1_PMA_REG_TX_DEEMP,
       CP_PMA_REG_TX_DEEMP_OW                          => CP_LANE1_PMA_REG_TX_DEEMP_OW,
       CP_PMA_REG_TX_RESERVED_224_223                  => CP_LANE1_PMA_REG_TX_RESERVED_224_223,
       CP_PMA_REG_TX_RESERVED_225                      => CP_LANE1_PMA_REG_TX_RESERVED_225,
       CP_PMA_REG_TX_RESERVED_229_226                  => CP_LANE1_PMA_REG_TX_RESERVED_229_226,
       CP_PMA_REG_TX_OOB_DELAY_SEL                     => CP_LANE1_PMA_REG_TX_OOB_DELAY_SEL,
       CP_PMA_REG_TX_POLARITY                          => CP_LANE1_PMA_REG_TX_POLARITY,
       CP_PMA_REG_ANA_TX_JTAG_DATA_O_SEL               => CP_LANE1_PMA_REG_ANA_TX_JTAG_DATA_O_SEL,
       CP_PMA_REG_TX_RESERVED_236                      => CP_LANE1_PMA_REG_TX_RESERVED_236,
       CP_PMA_REG_TX_LS_MODE_EN                        => CP_LANE1_PMA_REG_TX_LS_MODE_EN,
       CP_PMA_REG_TX_JTAG_MODE_EN_OW                   => CP_LANE1_PMA_REG_TX_JTAG_MODE_EN_OW,
       CP_PMA_REG_TX_JTAG_MODE_EN                      => CP_LANE1_PMA_REG_TX_JTAG_MODE_EN,
       CP_PMA_REG_RX_JTAG_MODE_EN_OW                   => CP_LANE1_PMA_REG_RX_JTAG_MODE_EN_OW,
       CP_PMA_REG_RX_JTAG_MODE_EN                      => CP_LANE1_PMA_REG_RX_JTAG_MODE_EN,
       CP_PMA_REG_RX_JTAG_OE                           => CP_LANE1_PMA_REG_RX_JTAG_OE,
       CP_PMA_REG_RX_ACJTAG_VHYSTSEL                   => CP_LANE1_PMA_REG_RX_ACJTAG_VHYSTSEL,
       CP_PMA_REG_TX_RES_CAL_EN                        => CP_LANE1_PMA_REG_TX_RES_CAL_EN,
       CP_PMA_REG_RX_TERM_MODE_CTRL                    => CP_LANE1_PMA_REG_RX_TERM_MODE_CTRL,
       CP_PMA_REG_TX_RESERVED_251_250                  => CP_LANE1_PMA_REG_TX_RESERVED_251_250,
       CP_PMA_REG_PLPBK_TXPCLK_EN                      => CP_LANE1_PMA_REG_PLPBK_TXPCLK_EN,
       CP_PMA_REG_TX_RESERVED_253                      => CP_LANE1_PMA_REG_TX_RESERVED_253,
       CP_PMA_REG_TX_RESERVED_254                      => CP_LANE1_PMA_REG_TX_RESERVED_254,
       CP_PMA_REG_TX_RESERVED_255                      => CP_LANE1_PMA_REG_TX_RESERVED_255,
       CP_PMA_REG_TX_RESERVED_256                      => CP_LANE1_PMA_REG_TX_RESERVED_256,
       CP_PMA_REG_TX_RESERVED_257                      => CP_LANE1_PMA_REG_TX_RESERVED_257,
       CP_PMA_REG_TX_PH_SEL                            => CP_LANE1_PMA_REG_TX_PH_SEL,
       CP_PMA_REG_TX_CFG_PRE                           => CP_LANE1_PMA_REG_TX_CFG_PRE, 
       CP_PMA_REG_TX_CFG_MAIN                          => CP_LANE1_PMA_REG_TX_CFG_MAIN,
       CP_PMA_REG_CFG_POST                             => CP_LANE1_PMA_REG_CFG_POST,
       CP_PMA_REG_PD_MAIN                              => CP_LANE1_PMA_REG_PD_MAIN,
       CP_PMA_REG_PD_PRE                               => CP_LANE1_PMA_REG_PD_PRE,
       CP_PMA_REG_TX_LS_DATA                           => CP_LANE1_PMA_REG_TX_LS_DATA,
       CP_PMA_REG_TX_DCC_BUF_SZ_SEL                    => CP_LANE1_PMA_REG_TX_DCC_BUF_SZ_SEL,
       CP_PMA_REG_TX_DCC_CAL_CUR_TUNE                  => CP_LANE1_PMA_REG_TX_DCC_CAL_CUR_TUNE,
       CP_PMA_REG_TX_DCC_CAL_EN                        => CP_LANE1_PMA_REG_TX_DCC_CAL_EN,
       CP_PMA_REG_TX_DCC_CUR_SS                        => CP_LANE1_PMA_REG_TX_DCC_CUR_SS,
       CP_PMA_REG_TX_DCC_FA_CTRL                       => CP_LANE1_PMA_REG_TX_DCC_FA_CTRL,
       CP_PMA_REG_TX_DCC_RI_CTRL                       => CP_LANE1_PMA_REG_TX_DCC_RI_CTRL,
       CP_PMA_REG_ATB_SEL_2_TO_0                       => CP_LANE1_PMA_REG_ATB_SEL_2_TO_0,
       CP_PMA_REG_ATB_SEL_9_TO_3                       => CP_LANE1_PMA_REG_ATB_SEL_9_TO_3,
       CP_PMA_REG_TX_CFG_7_TO_0                        => CP_LANE1_PMA_REG_TX_CFG_7_TO_0,
       CP_PMA_REG_TX_CFG_15_TO_8                       => CP_LANE1_PMA_REG_TX_CFG_15_TO_8,
       CP_PMA_REG_TX_CFG_23_TO_16                      => CP_LANE1_PMA_REG_TX_CFG_23_TO_16,
       CP_PMA_REG_TX_CFG_31_TO_24                      => CP_LANE1_PMA_REG_TX_CFG_31_TO_24,
       CP_PMA_REG_TX_OOB_EI_EN                         => CP_LANE1_PMA_REG_TX_OOB_EI_EN,
       CP_PMA_REG_TX_OOB_EI_EN_OW                      => CP_LANE1_PMA_REG_TX_OOB_EI_EN_OW,
       CP_PMA_REG_TX_BEACON_EN_DELAYED                 => CP_LANE1_PMA_REG_TX_BEACON_EN_DELAYED,
       CP_PMA_REG_TX_BEACON_EN_DELAYED_OW              => CP_LANE1_PMA_REG_TX_BEACON_EN_DELAYED_OW,
       CP_PMA_REG_TX_JTAG_DATA                         => CP_LANE1_PMA_REG_TX_JTAG_DATA,
       CP_PMA_REG_TX_RXDET_TIMER_SEL                   => CP_LANE1_PMA_REG_TX_RXDET_TIMER_SEL,
       CP_PMA_REG_TX_CFG1_7_0                          => CP_LANE1_PMA_REG_TX_CFG1_7_0,
       CP_PMA_REG_TX_CFG1_15_8                         => CP_LANE1_PMA_REG_TX_CFG1_15_8,
       CP_PMA_REG_TX_CFG1_23_16                        => CP_LANE1_PMA_REG_TX_CFG1_23_16,
       CP_PMA_REG_TX_CFG1_31_24                        => CP_LANE1_PMA_REG_TX_CFG1_31_24,
       CP_PMA_REG_CFG_LANE_POWERUP                     => CP_LANE1_PMA_REG_CFG_LANE_POWERUP,
       CP_PMA_REG_CFG_PMA_POR_N                        => CP_LANE1_PMA_REG_CFG_PMA_POR_N,
       CP_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH          => CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH,
       CP_PMA_REG_CFG_TX_LANE_POWERUP_PISO             => CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_PISO,
       CP_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER           => CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER,
       CP_PMA_REG_CFG_TX_PMA_RSTN                      => CP_LANE1_PMA_REG_CFG_TX_PMA_RSTN,
      
       CP_GRSN_DIS                                     => CP_GRSN_DIS,
       CP_HSST_EN                                      => CP_HSST_EN,
       CP_CFG_RSTN                                     => CP_CFG_RSTN_1
   )
   port map
   (
     //////DFT related/////////////////////////////////////////////////////////                                       
     //PCS                                                                                                            
     TEST_SE_N                                       => TEST_SE_N,                                                    
     TEST_MODE_N                                     => TEST_MODE_N,                                                  
     TEST_RSTN                                       => TEST_RSTN,                                                    
     TEST_SI0                                        => TEST_SI5,                                                     
     TEST_SI1                                        => TEST_SI6,                                                     
     TEST_SI2                                        => TEST_SI7,                                                     
     TEST_SI3                                        => TEST_SI8,                                                     
     TEST_SI4                                        => TEST_SI9,                                                     
     TEST_SO0                                        => TEST_SO5,                                                     
     TEST_SO1                                        => TEST_SO6,                                                     
     TEST_SO2                                        => TEST_SO7,                                                     
     TEST_SO3                                        => TEST_SO8,                                                     
     TEST_SO4                                        => TEST_SO9,                                                     
     //PMA                                                                                                            
     FOR_PMA_TEST_MODE_N                             => FOR_PMA_TEST_MODE_N,                                          
     FOR_PMA_TEST_SE_N                               => FOR_PMA_TEST_SE_N[1:0],                                       
     FOR_PMA_TEST_CLK                                => FOR_PMA_TEST_CLK[1:0],                                        
     FOR_PMA_TEST_RSTN                               => FOR_PMA_TEST_RSTN[1:0],                                       
     FOR_PMA_TEST_SI                                 => FOR_PMA_TEST_SI_CH1,                                          
     FOR_PMA_TEST_SO                                 => FOR_PMA_TEST_SO_CH1,                                          
                                                                                                                      
     //////SRB related/////////////////////////////////////////////////////////                                       
     //PAD                                                                                                            
     PAD_RX_SDP                                      => PAD_RX_SDP1,                                                  
     PAD_RX_SDN                                      => PAD_RX_SDN1,                                                  
     PAD_TX_SDP                                      => PAD_TX_SDP1,                                                  
     PAD_TX_SDN                                      => PAD_TX_SDN1,                                                  
     //if with user logic                                                                                             
     RX_CLK_FR_CORE                                  => RX1_CLK_FR_CORE,                                              
     RCLK2_FR_CORE                                   => RCLK2_1_FR_CORE,                                              
     TX_CLK_FR_CORE                                  => TX1_CLK_FR_CORE,                                              
     TCLK2_FR_CORE                                   => TCLK2_1_FR_CORE,                                              
     HSST_RST                                        => HSST_RST,                                                     
     PCS_RX_RST                                      => PCS_RX_RST_1,                                                 
     PCS_TX_RST                                      => PCS_TX_RST_1,                                                 
     PCS_CB_RST                                      => PCS_CB_RST_1,                                                 
     RXGEAR_SLIP                                     => RXGEAR_SLIP_1,                                                
     CFG_CLK                                         => CFG_CLK_1,                                                    
     CFG_RST                                         => CFG_RST_1,                                                    
     CFG_PSEL                                        => CFG_PSEL_1,                                                   
     CFG_ENABLE                                      => CFG_ENABLE_1,                                                 
     CFG_WRITE                                       => CFG_WRITE_1,                                                  
     CFG_ADDR                                        => CFG_ADDR_1,                                                   
     CFG_WDATA                                       => CFG_WDATA_1,                                                  
     TDATA                                           => TDATA_1,                                                      
     PCS_WORD_ALIGN_EN                               => PCS_WORD_ALIGN_EN[1],                                         
     RX_POLARITY_INVERT                              => RX_POLARITY_INVERT[1],                                        
     CEB_ADETECT_EN                                  => CEB_ADETECT_EN[1],                                            
     PCS_MCB_EXT_EN                                  => PCS_MCB_EXT_EN[1],                                            
     PCS_NEAREND_LOOP                                => PCS_NEAREND_LOOP[1],                                          
     PCS_FAREND_LOOP                                 => PCS_FAREND_LOOP[1],                                           
     PMA_NEAREND_PLOOP                               => PMA_NEAREND_PLOOP[1],                                         
     PMA_NEAREND_SLOOP                               => PMA_NEAREND_SLOOP[1],                                         
     PMA_FAREND_PLOOP                                => PMA_FAREND_PLOOP[1],                                          
     CFG_READY                                       => CFG_READY_1,                                                  
     CFG_RDATA                                       => CFG_RDATA_1,                                                  
     CFG_INT                                         => CFG_INT_1,                                                    
     PCS_RX_MCB_STATUS                               => PCS_RX_MCB_STATUS[1],                                         
     PCS_LSM_SYNCED                                  => PCS_LSM_SYNCED[1],                                            
     RDATA                                           => RDATA_1,                                                      
     RCLK2FABRIC                                     => RCLK2FABRIC[1],                                               
     TCLK2FABRIC                                     => TCLK2FABRIC[1],                                               
     //Lanes                                                                                                          
     CA_ALIGN_RX                                     => CA_ALIGN_RX[1],                                               
     CA_ALIGN_TX                                     => CA_ALIGN_TX[1],                                               
     LANE_PD                                         => LANE_PD_1,                                                    
     LANE_RST                                        => LANE_RST_1,                                                   
     RX_LANE_PD                                      => RX_LANE_PD_1,                                                 
     RX_PMA_RST                                      => RX_PMA_RST_1,                                                 
     CTLE_ADP_RST                                    => CTLE_ADP_RST_1,                                               
     RX_SIGDET_STATUS                                => RX_SIGDET_STATUS_1,                                           
     RX_SATA_COMINIT                                 => RX_SATA_COMINIT_1,                                            
     RX_SATA_COMWAKE                                 => RX_SATA_COMWAKE_1,                                            
     RX_LS_DATA                                      => RX_LS_DATA_1,                                                 
     RX_READY                                        => RX_READY_1,                                                   
     TEST_STATUS                                     => TEST_STATUS_1,                                                
     TX_DEEMP                                        => TX_DEEMP_1,                                                   
     TX_LS_DATA                                      => TX_LS_DATA_1,                                                 
     TX_BEACON_EN                                    => TX_BEACON_EN_1,                                               
     TX_SWING                                        => TX_SWING_1,                                                   
     TX_RXDET_REQ                                    => TX_RXDET_REQ_1,                                               
     TX_RATE                                         => TX_RATE_1,                                                    
     TX_BUSWIDTH                                     => TX_BUSWIDTH_1,                                                
     TX_MARGIN                                       => TX_MARGIN_1,                                                  
     TX_RXDET_STATUS                                 => TX_RXDET_STATUS_1,                                            
     TX_PMA_RST                                      => TX_PMA_RST_1,                                                 
     TX_LANE_PD_CLKPATH                              => TX_LANE_PD_CLKPATH_1,                                         
     TX_LANE_PD_PISO                                 => TX_LANE_PD_PISO_1,                                            
     TX_LANE_PD_DRIVER                               => TX_LANE_PD_DRIVER_1,                                          
     RX_RATE                                         => RX_RATE_1,                                                    
     RX_BUSWIDTH                                     => RX_BUSWIDTH_1,                                                
     RX_HIGHZ                                        => RX_HIGHZ_1,                                                   
     CIM_CLK_ALIGNER_RX                              => CIM_CLK_ALIGNER_RX1,                                          
     CIM_CLK_ALIGNER_TX                              => CIM_CLK_ALIGNER_TX1,                                          
     CIM_DYN_DLY_SEL_RX                              => CIM_DYN_DLY_SEL_RX1,                                          
     CIM_DYN_DLY_SEL_TX                              => CIM_DYN_DLY_SEL_TX1,                                          
     CIM_START_ALIGN_RX                              => CIM_START_ALIGN_RX1,                                          
     CIM_START_ALIGN_TX                              => CIM_START_ALIGN_TX1,                                          
                                                                                                                      
     //////New added signal/////////////////////////////////////////////////////////                                  
     //PMA_RCLK                                        => ,//only used in LANE0,2                                       
     MCB_RCLK                                        => ntSIG_OUT_1,                                                   
                                                                                                                      
     SYNC                                            => SYNC_CH1,//Added in 2019/8/21                                 
                                                                                                                      
     RATE_CHANGE                                     => RATE_CHANGE_CH1,//Added in 2019/8/22                          
                                                                                                                      
     PLL_LOCK_SEL                                    => PLL_LOCK_SEL_1,//Added in 2019/8/22                           
                                                                                                                      
     //////cin and cout/////////////////////////////////////////////////////////                                      
     RFIFO_EN_CB_CIN                                 => ntRFIFO_EN_CB_COUT_0,                                                 
     RFIFO_EN_AFTER_CTC_CIN                          => ntRFIFO_EN_AFTER_CTC_COUT_0,                                          
     RFIFO_EN_AFTER_CTC_GB_CIN                       => ntRFIFO_EN_AFTER_CTC_GB_COUT_0,                                       
     RFIFO_EN_BRIDGE_CIN                             => ntRFIFO_EN_BRIDGE_COUT_0,                                             
     TFIFO_EN_PCS_TX_CIN                             => ntTFIFO_EN_PCS_TX_COUT_0,                                             
     TFIFO_EN_BRIDGE_CIN                             => ntTFIFO_EN_BRIDGE_COUT_0,                                           
     PCS_TCLK_EN_CIN                                 => ntPCS_TCLK_EN_COUT_0,                                                     
     GEAR_TCLK_EN_CIN                                => ntGEAR_TCLK_EN_COUT_0,                                              
     APATTERN_MATCH_LSB_CIN                          => ntAPATTERN_MATCH_LSB_COUT_0,                                    
     APATTERN_MATCH_MSB_CIN                          => ntAPATTERN_MATCH_MSB_COUT_0,                                          
     APATTERN_STATUS_CIN                             => ntAPATTERN_STATUS_COUT_2,                                            
     APATTERN_SEACHING_PROC_CIN                      => ntAPATTERN_SEACHING_PROC_COUT_0,                                      
     CB_RCLK_EN_CIN                                  => ntCB_RCLK_EN_COUT_0,                                                  
     AFTER_CTC_RCLK_EN_CIN                           => ntAFTER_CTC_RCLK_EN_COUT_0,                                           
     AFTER_CTC_RCLK_EN_GB_CIN                        => ntAFTER_CTC_RCLK_EN_GB_COUT_0,                                        
     SKIP_ADD_MCB_CIN                                => ntSKIP_ADD_MCB_COUT_0,                                                
     SKIP_DEL_MCB_CIN                                => ntSKIP_DEL_MCB_COUT_0,                                                
     SKIP_DEL_LSB_MCB_CIN                            => ntSKIP_DEL_LSB_MCB_COUT_0,                                            
     SKIP_ADD_LSB_MCB_CIN                            => ntSKIP_ADD_LSB_MCB_COUT_0,                                            
     CTC_RD_FIFO_CIN                                 => ntCTC_RD_FIFO_COUT_0,                                                 
                                                                                                                      
     APATTERN_MATCH_LSB_COUT                         => ntAPATTERN_MATCH_LSB_COUT_1,                                    
     APATTERN_MATCH_MSB_COUT                         => ntAPATTERN_MATCH_MSB_COUT_1,                                    
     APATTERN_STATUS_COUT                            => ntAPATTERN_STATUS_CIN_0,                                       
     APATTERN_SEACHING_PROC_COUT                     => ntAPATTERN_SEACHING_PROC_COUT_1,                                
     RFIFO_EN_CB_COUT                                => ntRFIFO_EN_CB_COUT_1,                                           
     RFIFO_EN_BRIDGE_COUT                            => ntRFIFO_EN_BRIDGE_COUT_1,                                       
     RFIFO_EN_AFTER_CTC_COUT                         => ntRFIFO_EN_AFTER_CTC_COUT_1,                                    
     RFIFO_EN_AFTER_CTC_GB_COUT                      => ntRFIFO_EN_AFTER_CTC_GB_COUT_1,                                 
     CB_RCLK_EN_COUT                                 => ntCB_RCLK_EN_COUT_1,                                            
     AFTER_CTC_RCLK_EN_COUT                          => ntAFTER_CTC_RCLK_EN_COUT_1,                                     
     AFTER_CTC_RCLK_EN_GB_COUT                       => ntAFTER_CTC_RCLK_EN_GB_COUT_1,                                  
     TFIFO_EN_PCS_TX_COUT                            => ntTFIFO_EN_PCS_TX_COUT_1,                                       
     TFIFO_EN_BRIDGE_COUT                            => ntTFIFO_EN_BRIDGE_COUT_1,                                       
     PCS_TCLK_EN_COUT                                => ntPCS_TCLK_EN_COUT_1,                                           
     GEAR_TCLK_EN_COUT                               => ntGEAR_TCLK_EN_COUT_1,                                          
     SKIP_ADD_MCB_COUT                               => ntSKIP_ADD_MCB_COUT_1,                                          
     SKIP_DEL_MCB_COUT                               => ntSKIP_DEL_MCB_COUT_1,                                          
     SKIP_ADD_LSB_MCB_COUT                           => ntSKIP_ADD_LSB_MCB_COUT_1,                                      
     SKIP_DEL_LSB_MCB_COUT                           => ntSKIP_DEL_LSB_MCB_COUT_1,                                      
     CTC_RD_FIFO_COUT                                => ntCTC_RD_FIFO_COUT_1,                                           
                                                                                                                      
     //////from PLL/////////////////////////////////////////////////////////                                          
     //clk                                                                                                            
     CLK_TXP                                         => CLK_TXP_1,                                                    
     CLK_TXN                                         => CLK_TXN_1,                                                    
     CLK_RX0                                         => CLK_RX0_1,                                                    
     CLK_RX180                                       => CLK_RX180_1,                                                  
     CLK_RX90                                        => CLK_RX90_1,                                                   
     CLK_RX270                                       => CLK_RX270_1,                                                  
                                                                                                                      
     //other                                                                                                          
     PLL_PD_I                                        => PLL_PD_I_1,                                                   
     PLL_RESET_I                                     => PLL_RESET_I_1,                                                
     PLL_REFCLK_I                                    => PLL_REFCLK_I_1,                                               
                                                                                                                      
     PLL_RES_TRIM_I                                  => RESCAL_I_CODE_O_0,                                            
                                                                                                                      
     //////out////////////////////////////////////////////////////////                                                
     TXPCLK_PLL                                      => TXPCLK_PLL_1
   );  
   device HSSTLP_LANE U2_HSSTLP_LANE
   parameter map
   (
     CP_MUX_BIAS                                     => CP_LANE2_MUX_BIAS,
     CP_PD_CLK                                       => CP_LANE2_PD_CLK,
     CP_REG_SYNC                                     => CP_LANE2_REG_SYNC,
     CP_REG_SYNC_OW                                  => CP_LANE2_REG_SYNC_OW,
     CP_PLL_LOCK_OW                                  => CP_LANE2_PLL_LOCK_OW,
     CP_PLL_LOCK_OW_EN                               => CP_LANE2_PLL_LOCK_OW_EN,
 
     CP_PMA_REG_CDR_READY_THD                        => CP_LANE2_PMA_REG_CDR_READY_THD,
     CP_PMA_REG_RX_RESERVED_65                       => CP_LANE2_PMA_REG_RX_RESERVED_65,
     CP_PMA_REG_CDR_READY_CHECK_CTRL                 => CP_LANE2_PMA_REG_CDR_READY_CHECK_CTRL,
     CP_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL            => CP_LANE2_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL,
     CP_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL            => CP_LANE2_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL,
     CP_PMA_CTLE_REG_FORCE_SEL_I                     => CP_LANE2_PMA_CTLE_REG_FORCE_SEL_I,
     CP_PMA_CTLE_REG_HOLD_I                          => CP_LANE2_PMA_CTLE_REG_HOLD_I,
     CP_PMA_CTLE_REG_INIT_DAC_I                      => CP_LANE2_PMA_CTLE_REG_INIT_DAC_I,
     CP_PMA_CTLE_REG_POLARITY_I                      => CP_LANE2_PMA_CTLE_REG_POLARITY_I,
     CP_PMA_CTLE_REG_SHIFTER_GAIN_I                  => CP_LANE2_PMA_CTLE_REG_SHIFTER_GAIN_I,
     CP_PMA_CTLE_REG_THRESHOLD_I                     => CP_LANE2_PMA_CTLE_REG_THRESHOLD_I,
     CP_PMA_REG_RX_RES_TRIM_EN                       => CP_LANE2_PMA_REG_RX_RES_TRIM_EN,
     CP_PMA_REG_RX_RESERVED_393_389                  => CP_LANE2_PMA_REG_RX_RESERVED_393_389,
 
     CP_PCS_SLAVE                                    => CP_LANE2_PCS_SLAVE,
     CP_PCS_BYPASS_WORD_ALIGN                        => CP_LANE2_PCS_BYPASS_WORD_ALIGN,          
     CP_PCS_BYPASS_DENC                              => CP_LANE2_PCS_BYPASS_DENC,           
     CP_PCS_BYPASS_BONDING                           => CP_LANE2_PCS_BYPASS_BONDING, 
     CP_PCS_BYPASS_CTC                               => CP_LANE2_PCS_BYPASS_CTC, 
     CP_PCS_BYPASS_GEAR                              => CP_LANE2_PCS_BYPASS_GEAR, 
     CP_PCS_BYPASS_BRIDGE                            => CP_LANE2_PCS_BYPASS_BRIDGE, 
     CP_PCS_BYPASS_BRIDGE_FIFO                       => CP_LANE2_PCS_BYPASS_BRIDGE_FIFO, 
     CP_PCS_DATA_MODE                                => CP_LANE2_PCS_DATA_MODE, 
     CP_PCS_RX_POLARITY_INV                          => CP_LANE2_PCS_RX_POLARITY_INV, 
     CP_PCS_ALIGN_MODE                               => CP_LANE2_PCS_ALIGN_MODE, 
     CP_PCS_SAMP_16B                                 => CP_LANE2_PCS_SAMP_16B,          
     CP_PCS_FARLP_PWR_REDUCTION                      => CP_LANE2_PCS_FARLP_PWR_REDUCTION,           
     CP_PCS_COMMA_REG0                               => CP_LANE2_PCS_COMMA_REG0, 
     CP_PCS_COMMA_MASK                               => CP_LANE2_PCS_COMMA_MASK, 
     CP_PCS_CEB_MODE                                 => CP_LANE2_PCS_CEB_MODE, 
     CP_PCS_CTC_MODE                                 => CP_LANE2_PCS_CTC_MODE, 
     CP_PCS_A_REG                                    => CP_LANE2_PCS_A_REG, 
     CP_PCS_GE_AUTO_EN                               => CP_LANE2_PCS_GE_AUTO_EN, 
     CP_PCS_SKIP_REG0                                => CP_LANE2_PCS_SKIP_REG0, 
     CP_PCS_SKIP_REG1                                => CP_LANE2_PCS_SKIP_REG1, 
     CP_PCS_SKIP_REG2                                => CP_LANE2_PCS_SKIP_REG2,          
     CP_PCS_SKIP_REG3                                => CP_LANE2_PCS_SKIP_REG3,           
     CP_PCS_DEC_DUAL                                 => CP_LANE2_PCS_DEC_DUAL, 
     CP_PCS_SPLIT                                    => CP_LANE2_PCS_SPLIT, 
     CP_PCS_FIFOFLAG_CTC                             => CP_LANE2_PCS_FIFOFLAG_CTC, 
     CP_PCS_COMMA_DET_MODE                           => CP_LANE2_PCS_COMMA_DET_MODE, 
     CP_PCS_ERRDETECT_SILENCE                        => CP_LANE2_PCS_ERRDETECT_SILENCE, 
     CP_PCS_PMA_RCLK_POLINV                          => CP_LANE2_PCS_PMA_RCLK_POLINV, 
     CP_PCS_PCS_RCLK_SEL                             => CP_LANE2_PCS_PCS_RCLK_SEL, 
     CP_PCS_CB_RCLK_SEL                              => CP_LANE2_PCS_CB_RCLK_SEL, 
     CP_PCS_AFTER_CTC_RCLK_SEL                       => CP_LANE2_PCS_AFTER_CTC_RCLK_SEL,           
     CP_PCS_RCLK_POLINV                              => CP_LANE2_PCS_RCLK_POLINV, 
     CP_PCS_BRIDGE_RCLK_SEL                          => CP_LANE2_PCS_BRIDGE_RCLK_SEL, 
     CP_PCS_PCS_RCLK_EN                              => CP_LANE2_PCS_PCS_RCLK_EN,
     CP_PCS_CB_RCLK_EN                               => CP_LANE2_PCS_CB_RCLK_EN ,
     CP_PCS_AFTER_CTC_RCLK_EN                        => CP_LANE2_PCS_AFTER_CTC_RCLK_EN,
     CP_PCS_AFTER_CTC_RCLK_EN_GB                     => CP_LANE2_PCS_AFTER_CTC_RCLK_EN_GB,
     CP_PCS_PCS_RX_RSTN                              => CP_LANE2_PCS_PCS_RX_RSTN,
     CP_PCS_PCIE_SLAVE                               => CP_LANE2_PCS_PCIE_SLAVE,
     CP_PCS_RX_64B66B_67B                            => CP_LANE2_PCS_RX_64B66B_67B,
     CP_PCS_RX_BRIDGE_CLK_POLINV                     => CP_LANE2_PCS_RX_BRIDGE_CLK_POLINV,
     CP_PCS_PCS_CB_RSTN                              => CP_LANE2_PCS_PCS_CB_RSTN,
     CP_PCS_TX_BRIDGE_GEAR_SEL                       => CP_LANE2_PCS_TX_BRIDGE_GEAR_SEL,
     CP_PCS_TX_BYPASS_BRIDGE_UINT                    => CP_LANE2_PCS_TX_BYPASS_BRIDGE_UINT,
     CP_PCS_TX_BYPASS_BRIDGE_FIFO                    => CP_LANE2_PCS_TX_BYPASS_BRIDGE_FIFO,
     CP_PCS_TX_BYPASS_GEAR                           => CP_LANE2_PCS_TX_BYPASS_GEAR,
     CP_PCS_TX_BYPASS_ENC                            => CP_LANE2_PCS_TX_BYPASS_ENC,
     CP_PCS_TX_BYPASS_BIT_SLIP                       => CP_LANE2_PCS_TX_BYPASS_BIT_SLIP,
     CP_PCS_TX_GEAR_SPLIT                            => CP_LANE2_PCS_TX_GEAR_SPLIT,
     CP_PCS_TX_DRIVE_REG_MODE                        => CP_LANE2_PCS_TX_DRIVE_REG_MODE,
     CP_PCS_TX_BIT_SLIP_CYCLES                       => CP_LANE2_PCS_TX_BIT_SLIP_CYCLES,
     CP_PCS_INT_TX_MASK_0                            => CP_LANE2_PCS_INT_TX_MASK_0,
     CP_PCS_INT_TX_MASK_1                            => CP_LANE2_PCS_INT_TX_MASK_1,
     CP_PCS_INT_TX_MASK_2                            => CP_LANE2_PCS_INT_TX_MASK_2,
     CP_PCS_INT_TX_CLR_0                             => CP_LANE2_PCS_INT_TX_CLR_0,
     CP_PCS_INT_TX_CLR_1                             => CP_LANE2_PCS_INT_TX_CLR_1,
     CP_PCS_INT_TX_CLR_2                             => CP_LANE2_PCS_INT_TX_CLR_2,
     CP_PCS_TX_PMA_TCLK_POLINV                       => CP_LANE2_PCS_TX_PMA_TCLK_POLINV,
     CP_PCS_TX_PCS_CLK_EN_SEL                        => CP_LANE2_PCS_TX_PCS_CLK_EN_SEL,
     CP_PCS_TX_BRIDGE_TCLK_SEL                       => CP_LANE2_PCS_TX_BRIDGE_TCLK_SEL,
     CP_PCS_TX_TCLK_POLINV                           => CP_LANE2_PCS_TX_TCLK_POLINV,
     CP_PCS_PCS_TCLK_SEL                             => CP_LANE2_PCS_PCS_TCLK_SEL,
     CP_PCS_TX_PCS_TX_RSTN                           => CP_LANE2_PCS_TX_PCS_TX_RSTN,
     CP_PCS_TX_SLAVE                                 => CP_LANE2_PCS_TX_SLAVE,
     CP_PCS_TX_GEAR_CLK_EN_SEL                       => CP_LANE2_PCS_TX_GEAR_CLK_EN_SEL,
     CP_PCS_DATA_WIDTH_MODE                          => CP_LANE2_PCS_DATA_WIDTH_MODE,
     CP_PCS_TX_64B66B_67B                            => CP_LANE2_PCS_TX_64B66B_67B,
     CP_PCS_GEAR_TCLK_SEL                            => CP_LANE2_PCS_GEAR_TCLK_SEL,
     CP_PCS_TX_TCLK2FABRIC_SEL                       => CP_LANE2_PCS_TX_TCLK2FABRIC_SEL,
     CP_PCS_TX_OUTZZ                                 => CP_LANE2_PCS_TX_OUTZZ,
     CP_PCS_ENC_DUAL                                 => CP_LANE2_PCS_ENC_DUAL,
     CP_PCS_TX_BITSLIP_DATA_MODE                     => CP_LANE2_PCS_TX_BITSLIP_DATA_MODE,
     CP_PCS_TX_BRIDGE_CLK_POLINV                     => CP_LANE2_PCS_TX_BRIDGE_CLK_POLINV,
     CP_PCS_COMMA_REG1                               => CP_LANE2_PCS_COMMA_REG1,
     CP_PCS_RAPID_IMAX                               => CP_LANE2_PCS_RAPID_IMAX,
     CP_PCS_RAPID_VMIN_1                             => CP_LANE2_PCS_RAPID_VMIN_1,
     CP_PCS_RAPID_VMIN_2                             => CP_LANE2_PCS_RAPID_VMIN_2,
     CP_PCS_RX_PRBS_MODE                             => CP_LANE2_PCS_RX_PRBS_MODE,
     CP_PCS_RX_ERRCNT_CLR                            => CP_LANE2_PCS_RX_ERRCNT_CLR,
     CP_PCS_PRBS_ERR_LPBK                            => CP_LANE2_PCS_PRBS_ERR_LPBK,
     CP_PCS_TX_PRBS_MODE                             => CP_LANE2_PCS_TX_PRBS_MODE,
     CP_PCS_TX_INSERT_ER                             => CP_LANE2_PCS_TX_INSERT_ER,
     CP_PCS_ENABLE_PRBS_GEN                          => CP_LANE2_PCS_ENABLE_PRBS_GEN,
     CP_PCS_DEFAULT_RADDR                            => CP_LANE2_PCS_DEFAULT_RADDR,
     CP_PCS_MASTER_CHECK_OFFSET                      => CP_LANE2_PCS_MASTER_CHECK_OFFSET,
     CP_PCS_DELAY_SET                                => CP_LANE2_PCS_DELAY_SET,
     CP_PCS_SEACH_OFFSET                             => CP_LANE2_PCS_SEACH_OFFSET,
     CP_PCS_CEB_RAPIDLS_MMAX                         => CP_LANE2_PCS_CEB_RAPIDLS_MMAX,
     CP_PCS_CTC_AFULL                                => CP_LANE2_PCS_CTC_AFULL,
     CP_PCS_CTC_AEMPTY                               => CP_LANE2_PCS_CTC_AEMPTY,
     CP_PCS_CTC_CONTI_SKP_SET                        => CP_LANE2_PCS_CTC_CONTI_SKP_SET,
     CP_PCS_FAR_LOOP                                 => CP_LANE2_PCS_FAR_LOOP,
     CP_PCS_NEAR_LOOP                                => CP_LANE2_PCS_NEAR_LOOP,
     CP_PCS_PMA_TX2RX_PLOOP_EN                       => CP_LANE2_PCS_PMA_TX2RX_PLOOP_EN,
     CP_PCS_PMA_TX2RX_SLOOP_EN                       => CP_LANE2_PCS_PMA_TX2RX_SLOOP_EN,
     CP_PCS_PMA_RX2TX_PLOOP_EN                       => CP_LANE2_PCS_PMA_RX2TX_PLOOP_EN,
     CP_PCS_INT_RX_MASK_0                            => CP_LANE2_PCS_INT_RX_MASK_0,
     CP_PCS_INT_RX_MASK_1                            => CP_LANE2_PCS_INT_RX_MASK_1,
     CP_PCS_INT_RX_MASK_2                            => CP_LANE2_PCS_INT_RX_MASK_2,
     CP_PCS_INT_RX_MASK_3                            => CP_LANE2_PCS_INT_RX_MASK_3,
     CP_PCS_INT_RX_MASK_4                            => CP_LANE2_PCS_INT_RX_MASK_4,
     CP_PCS_INT_RX_MASK_5                            => CP_LANE2_PCS_INT_RX_MASK_5,
     CP_PCS_INT_RX_MASK_6                            => CP_LANE2_PCS_INT_RX_MASK_6,
     CP_PCS_INT_RX_MASK_7                            => CP_LANE2_PCS_INT_RX_MASK_7,
     CP_PCS_INT_RX_CLR_0                             => CP_LANE2_PCS_INT_RX_CLR_0,
     CP_PCS_INT_RX_CLR_1                             => CP_LANE2_PCS_INT_RX_CLR_1,
     CP_PCS_INT_RX_CLR_2                             => CP_LANE2_PCS_INT_RX_CLR_2,
     CP_PCS_INT_RX_CLR_3                             => CP_LANE2_PCS_INT_RX_CLR_3,
     CP_PCS_INT_RX_CLR_4                             => CP_LANE2_PCS_INT_RX_CLR_4,
     CP_PCS_INT_RX_CLR_5                             => CP_LANE2_PCS_INT_RX_CLR_5,
     CP_PCS_INT_RX_CLR_6                             => CP_LANE2_PCS_INT_RX_CLR_6,
     CP_PCS_INT_RX_CLR_7                             => CP_LANE2_PCS_INT_RX_CLR_7,
     CP_PCS_CA_RSTN_RX                               => CP_LANE2_PCS_CA_RSTN_RX,
     CP_PCS_CA_DYN_DLY_EN_RX                         => CP_LANE2_PCS_CA_DYN_DLY_EN_RX,
     CP_PCS_CA_DYN_DLY_SEL_RX                        => CP_LANE2_PCS_CA_DYN_DLY_SEL_RX,
     CP_PCS_CA_RX                                    => CP_LANE2_PCS_CA_RX,
     CP_PCS_CA_RSTN_TX                               => CP_LANE2_PCS_CA_RSTN_TX,
     CP_PCS_CA_DYN_DLY_EN_TX                         => CP_LANE2_PCS_CA_DYN_DLY_EN_TX,
     CP_PCS_CA_DYN_DLY_SEL_TX                        => CP_LANE2_PCS_CA_DYN_DLY_SEL_TX,
     CP_PCS_CA_TX                                    => CP_LANE2_PCS_CA_TX,
     CP_PCS_RXPRBS_PWR_REDUCTION                     => CP_LANE2_PCS_RXPRBS_PWR_REDUCTION,
     CP_PCS_WDALIGN_PWR_REDUCTION                    => CP_LANE2_PCS_WDALIGN_PWR_REDUCTION,
     CP_PCS_RXDEC_PWR_REDUCTION                      => CP_LANE2_PCS_RXDEC_PWR_REDUCTION,
     CP_PCS_RXCB_PWR_REDUCTION                       => CP_LANE2_PCS_RXCB_PWR_REDUCTION,
     CP_PCS_RXCTC_PWR_REDUCTION                      => CP_LANE2_PCS_RXCTC_PWR_REDUCTION,
     CP_PCS_RXGEAR_PWR_REDUCTION                     => CP_LANE2_PCS_RXGEAR_PWR_REDUCTION,
     CP_PCS_RXBRG_PWR_REDUCTION                      => CP_LANE2_PCS_RXBRG_PWR_REDUCTION,
     CP_PCS_RXTEST_PWR_REDUCTION                     => CP_LANE2_PCS_RXTEST_PWR_REDUCTION,
     CP_PCS_TXBRG_PWR_REDUCTION                      => CP_LANE2_PCS_TXBRG_PWR_REDUCTION,
     CP_PCS_TXGEAR_PWR_REDUCTION                     => CP_LANE2_PCS_TXGEAR_PWR_REDUCTION,
     CP_PCS_TXENC_PWR_REDUCTION                      => CP_LANE2_PCS_TXENC_PWR_REDUCTION,
     CP_PCS_TXBSLP_PWR_REDUCTION                     => CP_LANE2_PCS_TXBSLP_PWR_REDUCTION,
     CP_PCS_TXPRBS_PWR_REDUCTION                     => CP_LANE2_PCS_TXPRBS_PWR_REDUCTION,
  
     CP_PMA_REG_RX_PD                                => CP_LANE2_PMA_REG_RX_PD,
     CP_PMA_REG_RX_PD_EN                             => CP_LANE2_PMA_REG_RX_PD_EN,
     CP_PMA_REG_RX_RESERVED_2                        => CP_LANE2_PMA_REG_RX_RESERVED_2,
     CP_PMA_REG_RX_RESERVED_3                        => CP_LANE2_PMA_REG_RX_RESERVED_3,
     CP_PMA_REG_RX_DATAPATH_PD                       => CP_LANE2_PMA_REG_RX_DATAPATH_PD,
     CP_PMA_REG_RX_DATAPATH_PD_EN                    => CP_LANE2_PMA_REG_RX_DATAPATH_PD_EN,
     CP_PMA_REG_RX_SIGDET_PD                         => CP_LANE2_PMA_REG_RX_SIGDET_PD,
     CP_PMA_REG_RX_SIGDET_PD_EN                      => CP_LANE2_PMA_REG_RX_SIGDET_PD_EN,
     CP_PMA_REG_RX_DCC_RST_N                         => CP_LANE2_PMA_REG_RX_DCC_RST_N,
     CP_PMA_REG_RX_DCC_RST_N_EN                      => CP_LANE2_PMA_REG_RX_DCC_RST_N_EN,
     CP_PMA_REG_RX_CDR_RST_N                         => CP_LANE2_PMA_REG_RX_CDR_RST_N,
     CP_PMA_REG_RX_CDR_RST_N_EN                      => CP_LANE2_PMA_REG_RX_CDR_RST_N_EN,
     CP_PMA_REG_RX_SIGDET_RST_N                      => CP_LANE2_PMA_REG_RX_SIGDET_RST_N,
     CP_PMA_REG_RX_SIGDET_RST_N_EN                   => CP_LANE2_PMA_REG_RX_SIGDET_RST_N_EN,
     CP_PMA_REG_RXPCLK_SLIP                          => CP_LANE2_PMA_REG_RXPCLK_SLIP,
     CP_PMA_REG_RXPCLK_SLIP_OW                       => CP_LANE2_PMA_REG_RXPCLK_SLIP_OW,
     CP_PMA_REG_RX_PCLKSWITCH_RST_N                  => CP_LANE2_PMA_REG_RX_PCLKSWITCH_RST_N,
     CP_PMA_REG_RX_PCLKSWITCH_RST_N_EN               => CP_LANE2_PMA_REG_RX_PCLKSWITCH_RST_N_EN,
     CP_PMA_REG_RX_PCLKSWITCH                        => CP_LANE2_PMA_REG_RX_PCLKSWITCH,
     CP_PMA_REG_RX_PCLKSWITCH_EN                     => CP_LANE2_PMA_REG_RX_PCLKSWITCH_EN,
     CP_PMA_REG_RX_HIGHZ                             => CP_LANE2_PMA_REG_RX_HIGHZ,
     CP_PMA_REG_RX_HIGHZ_EN                          => CP_LANE2_PMA_REG_RX_HIGHZ_EN,
     CP_PMA_REG_RX_SIGDET_CLK_WINDOW                 => CP_LANE2_PMA_REG_RX_SIGDET_CLK_WINDOW,
     CP_PMA_REG_RX_SIGDET_CLK_WINDOW_OW              => CP_LANE2_PMA_REG_RX_SIGDET_CLK_WINDOW_OW,
     CP_PMA_REG_RX_PD_BIAS_RX                        => CP_LANE2_PMA_REG_RX_PD_BIAS_RX,
     CP_PMA_REG_RX_PD_BIAS_RX_OW                     => CP_LANE2_PMA_REG_RX_PD_BIAS_RX_OW,
     CP_PMA_REG_RX_RESET_N                           => CP_LANE2_PMA_REG_RX_RESET_N,
     CP_PMA_REG_RX_RESET_N_OW                        => CP_LANE2_PMA_REG_RX_RESET_N_OW,
     CP_PMA_REG_RX_RESERVED_29_28                    => CP_LANE2_PMA_REG_RX_RESERVED_29_28,
     CP_PMA_REG_RX_BUSWIDTH                          => CP_LANE2_PMA_REG_RX_BUSWIDTH,
     CP_PMA_REG_RX_BUSWIDTH_EN                       => CP_LANE2_PMA_REG_RX_BUSWIDTH_EN,
     CP_PMA_REG_RX_RATE                              => CP_LANE2_PMA_REG_RX_RATE,
     CP_PMA_REG_RX_RESERVED_36                       => CP_LANE2_PMA_REG_RX_RESERVED_36,
     CP_PMA_REG_RX_RATE_EN                           => CP_LANE2_PMA_REG_RX_RATE_EN,
     CP_PMA_REG_RX_RES_TRIM                          => CP_LANE2_PMA_REG_RX_RES_TRIM,
     CP_PMA_REG_RX_RESERVED_44                       => CP_LANE2_PMA_REG_RX_RESERVED_44,
     CP_PMA_REG_RX_RESERVED_45                       => CP_LANE2_PMA_REG_RX_RESERVED_45,
     CP_PMA_REG_RX_SIGDET_STATUS_EN                  => CP_LANE2_PMA_REG_RX_SIGDET_STATUS_EN,
     CP_PMA_REG_RX_RESERVED_48_47                    => CP_LANE2_PMA_REG_RX_RESERVED_48_47,
     CP_PMA_REG_RX_ICTRL_SIGDET                      => CP_LANE2_PMA_REG_RX_ICTRL_SIGDET,
     CP_PMA_REG_RX_PCLK_EDGE_SEL                     => CP_LANE2_PMA_REG_RX_PCLK_EDGE_SEL,
     CP_PMA_REG_RX_PIBUF_IC                          => CP_LANE2_PMA_REG_RX_PIBUF_IC,
     CP_PMA_REG_RX_RESERVED_69                       => CP_LANE2_PMA_REG_RX_RESERVED_69,
     CP_PMA_REG_RX_DCC_IC_RX                         => CP_LANE2_PMA_REG_RX_DCC_IC_RX,
     CP_PMA_REG_RX_ICTRL_TRX                         => CP_LANE2_PMA_REG_RX_ICTRL_TRX,
     CP_PMA_REG_RX_RESERVED_77_76                    => CP_LANE2_PMA_REG_RX_RESERVED_77_76,
     CP_PMA_REG_RX_RESERVED_79_78                    => CP_LANE2_PMA_REG_RX_RESERVED_79_78,
     CP_PMA_REG_RX_RESERVED_81_80                    => CP_LANE2_PMA_REG_RX_RESERVED_81_80,
     CP_PMA_REG_RX_ICTRL_PIBUF                       => CP_LANE2_PMA_REG_RX_ICTRL_PIBUF,
     CP_PMA_REG_RX_ICTRL_PI                          => CP_LANE2_PMA_REG_RX_ICTRL_PI,
     CP_PMA_REG_RX_ICTRL_DCC                         => CP_LANE2_PMA_REG_RX_ICTRL_DCC,
     CP_PMA_REG_RX_RESERVED_89_88                    => CP_LANE2_PMA_REG_RX_RESERVED_89_88,
     CP_PMA_REG_TX_RATE                              => CP_LANE2_PMA_REG_TX_RATE,
     CP_PMA_REG_RX_RESERVED_92                       => CP_LANE2_PMA_REG_RX_RESERVED_92,
     CP_PMA_REG_TX_RATE_EN                           => CP_LANE2_PMA_REG_TX_RATE_EN,
     CP_PMA_REG_RX_TX2RX_PLPBK_RST_N                 => CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_RST_N,
     CP_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN              => CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN,
     CP_PMA_REG_RX_TX2RX_PLPBK_EN                    => CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_EN,
     CP_PMA_REG_TXCLK_SEL                            => CP_LANE2_PMA_REG_TXCLK_SEL,
     CP_PMA_REG_RX_DATA_POLARITY                     => CP_LANE2_PMA_REG_RX_DATA_POLARITY,
     CP_PMA_REG_RX_ERR_INSERT                        => CP_LANE2_PMA_REG_RX_ERR_INSERT,
     CP_PMA_REG_UDP_CHK_EN                           => CP_LANE2_PMA_REG_UDP_CHK_EN,
     CP_PMA_REG_PRBS_SEL                             => CP_LANE2_PMA_REG_PRBS_SEL,
     CP_PMA_REG_PRBS_CHK_EN                          => CP_LANE2_PMA_REG_PRBS_CHK_EN,
     CP_PMA_REG_PRBS_CHK_WIDTH_SEL                   => CP_LANE2_PMA_REG_PRBS_CHK_WIDTH_SEL,
     CP_PMA_REG_BIST_CHK_PAT_SEL                     => CP_LANE2_PMA_REG_BIST_CHK_PAT_SEL,
     CP_PMA_REG_LOAD_ERR_CNT                         => CP_LANE2_PMA_REG_LOAD_ERR_CNT,
     CP_PMA_REG_CHK_COUNTER_EN                       => CP_LANE2_PMA_REG_CHK_COUNTER_EN,
     CP_PMA_REG_CDR_PROP_GAIN                        => CP_LANE2_PMA_REG_CDR_PROP_GAIN,
     CP_PMA_REG_CDR_PROP_TURBO_GAIN                  => CP_LANE2_PMA_REG_CDR_PROP_TURBO_GAIN,
     CP_PMA_REG_CDR_INT_GAIN                         => CP_LANE2_PMA_REG_CDR_INT_GAIN,
     CP_PMA_REG_CDR_INT_TURBO_GAIN                   => CP_LANE2_PMA_REG_CDR_INT_TURBO_GAIN,
     CP_PMA_REG_CDR_INT_SAT_MAX                      => CP_LANE2_PMA_REG_CDR_INT_SAT_MAX,
     CP_PMA_REG_CDR_INT_SAT_MIN                      => CP_LANE2_PMA_REG_CDR_INT_SAT_MIN,
     CP_PMA_REG_CDR_INT_RST                          => CP_LANE2_PMA_REG_CDR_INT_RST,
     CP_PMA_REG_CDR_INT_RST_OW                       => CP_LANE2_PMA_REG_CDR_INT_RST_OW,
     CP_PMA_REG_CDR_PROP_RST                         => CP_LANE2_PMA_REG_CDR_PROP_RST,
     CP_PMA_REG_CDR_PROP_RST_OW                      => CP_LANE2_PMA_REG_CDR_PROP_RST_OW,
     CP_PMA_REG_CDR_LOCK_RST                         => CP_LANE2_PMA_REG_CDR_LOCK_RST,
     CP_PMA_REG_CDR_LOCK_RST_OW                      => CP_LANE2_PMA_REG_CDR_LOCK_RST_OW,
     CP_PMA_REG_CDR_RX_PI_FORCE_SEL                  => CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_SEL,
     CP_PMA_REG_CDR_RX_PI_FORCE_D                    => CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_D,
     CP_PMA_REG_CDR_LOCK_TIMER                       => CP_LANE2_PMA_REG_CDR_LOCK_TIMER,
     CP_PMA_REG_CDR_TURBO_MODE_TIMER                 => CP_LANE2_PMA_REG_CDR_TURBO_MODE_TIMER,
     CP_PMA_REG_CDR_LOCK_VAL                         => CP_LANE2_PMA_REG_CDR_LOCK_VAL,
     CP_PMA_REG_CDR_LOCK_OW                          => CP_LANE2_PMA_REG_CDR_LOCK_OW,
     CP_PMA_REG_CDR_INT_SAT_DET_EN                   => CP_LANE2_PMA_REG_CDR_INT_SAT_DET_EN,
     CP_PMA_REG_CDR_SAT_AUTO_DIS                     => CP_LANE2_PMA_REG_CDR_SAT_AUTO_DIS,
     CP_PMA_REG_CDR_GAIN_AUTO                        => CP_LANE2_PMA_REG_CDR_GAIN_AUTO,
     CP_PMA_REG_CDR_TURBO_GAIN_AUTO                  => CP_LANE2_PMA_REG_CDR_TURBO_GAIN_AUTO,
     CP_PMA_REG_RX_RESERVED_171_167                  => CP_LANE2_PMA_REG_RX_RESERVED_171_167,
     CP_PMA_REG_RX_RESERVED_175_172                  => CP_LANE2_PMA_REG_RX_RESERVED_175_172,
     CP_PMA_REG_CDR_SAT_DET_STATUS_EN                => CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_EN,
     CP_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN          => CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN,
     CP_PMA_REG_CDR_PI_CTRL_RST                      => CP_LANE2_PMA_REG_CDR_PI_CTRL_RST,
     CP_PMA_REG_CDR_PI_CTRL_RST_OW                   => CP_LANE2_PMA_REG_CDR_PI_CTRL_RST_OW,
     CP_PMA_REG_CDR_SAT_DET_RST                      => CP_LANE2_PMA_REG_CDR_SAT_DET_RST,
     CP_PMA_REG_CDR_SAT_DET_RST_OW                   => CP_LANE2_PMA_REG_CDR_SAT_DET_RST_OW,
     CP_PMA_REG_CDR_SAT_DET_STICKY_RST               => CP_LANE2_PMA_REG_CDR_SAT_DET_STICKY_RST,
     CP_PMA_REG_CDR_SAT_DET_STICKY_RST_OW            => CP_LANE2_PMA_REG_CDR_SAT_DET_STICKY_RST_OW,
     CP_PMA_REG_CDR_SIGDET_STATUS_DIS                => CP_LANE2_PMA_REG_CDR_SIGDET_STATUS_DIS,
     CP_PMA_REG_CDR_SAT_DET_TIMER                    => CP_LANE2_PMA_REG_CDR_SAT_DET_TIMER,
     CP_PMA_REG_CDR_SAT_DET_STATUS_VAL               => CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_VAL,
     CP_PMA_REG_CDR_SAT_DET_STATUS_OW                => CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_OW,
     CP_PMA_REG_CDR_TURBO_MODE_EN                    => CP_LANE2_PMA_REG_CDR_TURBO_MODE_EN,
     CP_PMA_REG_RX_RESERVED_190                      => CP_LANE2_PMA_REG_RX_RESERVED_190,
     CP_PMA_REG_RX_RESERVED_193_191                  => CP_LANE2_PMA_REG_RX_RESERVED_193_191,
     CP_PMA_REG_CDR_STATUS_FIFO_EN                   => CP_LANE2_PMA_REG_CDR_STATUS_FIFO_EN,
     CP_PMA_REG_PMA_TEST_SEL                         => CP_LANE2_PMA_REG_PMA_TEST_SEL,
     CP_PMA_REG_OOB_COMWAKE_GAP_MIN                  => CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MIN,
     CP_PMA_REG_OOB_COMWAKE_GAP_MAX                  => CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MAX,
     CP_PMA_REG_OOB_COMINIT_GAP_MIN                  => CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MIN,
     CP_PMA_REG_OOB_COMINIT_GAP_MAX                  => CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MAX,
     CP_PMA_REG_RX_RESERVED_227_226                  => CP_LANE2_PMA_REG_RX_RESERVED_227_226,
     CP_PMA_REG_COMWAKE_STATUS_CLEAR                 => CP_LANE2_PMA_REG_COMWAKE_STATUS_CLEAR,
     CP_PMA_REG_COMINIT_STATUS_CLEAR                 => CP_LANE2_PMA_REG_COMINIT_STATUS_CLEAR,
     CP_PMA_REG_RX_SYNC_RST_N_EN                     => CP_LANE2_PMA_REG_RX_SYNC_RST_N_EN,
     CP_PMA_REG_RX_SYNC_RST_N                        => CP_LANE2_PMA_REG_RX_SYNC_RST_N,
     CP_PMA_REG_RX_RESERVED_233_232                  => CP_LANE2_PMA_REG_RX_RESERVED_233_232,
     CP_PMA_REG_RX_RESERVED_235_234                  => CP_LANE2_PMA_REG_RX_RESERVED_235_234,
     CP_PMA_REG_RX_SATA_COMINIT_OW                   => CP_LANE2_PMA_REG_RX_SATA_COMINIT_OW,
     CP_PMA_REG_RX_SATA_COMINIT                      => CP_LANE2_PMA_REG_RX_SATA_COMINIT,
     CP_PMA_REG_RX_SATA_COMWAKE_OW                   => CP_LANE2_PMA_REG_RX_SATA_COMWAKE_OW,
     CP_PMA_REG_RX_SATA_COMWAKE                      => CP_LANE2_PMA_REG_RX_SATA_COMWAKE,
     CP_PMA_REG_RX_RESERVED_241_240                  => CP_LANE2_PMA_REG_RX_RESERVED_241_240,
     CP_PMA_REG_RX_DCC_DISABLE                       => CP_LANE2_PMA_REG_RX_DCC_DISABLE,
     CP_PMA_REG_RX_RESERVED_243                      => CP_LANE2_PMA_REG_RX_RESERVED_243,
     CP_PMA_REG_RX_SLIP_SEL_EN                       => CP_LANE2_PMA_REG_RX_SLIP_SEL_EN,
     CP_PMA_REG_RX_SLIP_SEL                          => CP_LANE2_PMA_REG_RX_SLIP_SEL,
     CP_PMA_REG_RX_SLIP_EN                           => CP_LANE2_PMA_REG_RX_SLIP_EN,
     CP_PMA_REG_RX_SIGDET_STATUS_SEL                 => CP_LANE2_PMA_REG_RX_SIGDET_STATUS_SEL,
     CP_PMA_REG_RX_SIGDET_FSM_RST_N                  => CP_LANE2_PMA_REG_RX_SIGDET_FSM_RST_N,
     CP_PMA_REG_RX_RESERVED_254                      => CP_LANE2_PMA_REG_RX_RESERVED_254,
     CP_PMA_REG_RX_SIGDET_STATUS                     => CP_LANE2_PMA_REG_RX_SIGDET_STATUS,
     CP_PMA_REG_RX_SIGDET_VTH                        => CP_LANE2_PMA_REG_RX_SIGDET_VTH,
     CP_PMA_REG_RX_SIGDET_GRM                        => CP_LANE2_PMA_REG_RX_SIGDET_GRM,
     CP_PMA_REG_RX_SIGDET_PULSE_EXT                  => CP_LANE2_PMA_REG_RX_SIGDET_PULSE_EXT,
     CP_PMA_REG_RX_SIGDET_CH2_SEL                    => CP_LANE2_PMA_REG_RX_SIGDET_CH2_SEL,
     CP_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW             => CP_LANE2_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW,
     CP_PMA_REG_RX_SIGDET_CHK_WINDOW_EN              => CP_LANE2_PMA_REG_RX_SIGDET_CHK_WINDOW_EN,
     CP_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING        => CP_LANE2_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING,
     CP_PMA_REG_SLIP_FIFO_INV_EN                     => CP_LANE2_PMA_REG_SLIP_FIFO_INV_EN,
     CP_PMA_REG_SLIP_FIFO_INV                        => CP_LANE2_PMA_REG_SLIP_FIFO_INV,
     CP_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL          => CP_LANE2_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL,
     CP_PMA_REG_RX_SIGDET_4OOB_DET_SEL               => CP_LANE2_PMA_REG_RX_SIGDET_4OOB_DET_SEL,
     CP_PMA_REG_RX_RESERVED_285_283                  => CP_LANE2_PMA_REG_RX_RESERVED_285_283,
     CP_PMA_REG_RX_RESERVED_286                      => CP_LANE2_PMA_REG_RX_RESERVED_286,
     CP_PMA_REG_RX_SIGDET_IC_I                       => CP_LANE2_PMA_REG_RX_SIGDET_IC_I,
     CP_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW           => CP_LANE2_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW,
     CP_PMA_REG_RX_OOB_DETECTOR_RESET_N              => CP_LANE2_PMA_REG_RX_OOB_DETECTOR_RESET_N,
     CP_PMA_REG_RX_OOB_DETECTOR_PD_OW                => CP_LANE2_PMA_REG_RX_OOB_DETECTOR_PD_OW,
     CP_PMA_REG_RX_OOB_DETECTOR_PD                   => CP_LANE2_PMA_REG_RX_OOB_DETECTOR_PD,
     CP_PMA_REG_RX_LS_MODE_EN                        => CP_LANE2_PMA_REG_RX_LS_MODE_EN,
     CP_PMA_REG_RX_EQ1_R_SET_TOP                     => CP_LANE2_PMA_REG_RX_EQ1_R_SET_TOP,
     CP_PMA_REG_RX_EQ1_R_SET_FB                      => CP_LANE2_PMA_REG_RX_EQ1_R_SET_FB,
     CP_PMA_REG_RX_EQ1_C_SET_FB                      => CP_LANE2_PMA_REG_RX_EQ1_C_SET_FB,
     CP_PMA_REG_RX_EQ1_OFF                           => CP_LANE2_PMA_REG_RX_EQ1_OFF,
     CP_PMA_REG_RX_EQ2_R_SET_TOP                     => CP_LANE2_PMA_REG_RX_EQ2_R_SET_TOP,
     CP_PMA_REG_RX_EQ2_R_SET_FB                      => CP_LANE2_PMA_REG_RX_EQ2_R_SET_FB,
     CP_PMA_REG_RX_EQ2_C_SET_FB                      => CP_LANE2_PMA_REG_RX_EQ2_C_SET_FB,
     CP_PMA_REG_RX_EQ2_OFF                           => CP_LANE2_PMA_REG_RX_EQ2_OFF,
     CP_PMA_REG_EQ_DAC                               => CP_LANE2_PMA_REG_EQ_DAC,
     CP_PMA_REG_RX_ICTRL_EQ                          => CP_LANE2_PMA_REG_RX_ICTRL_EQ,
     CP_PMA_REG_EQ_DC_CALIB_EN                       => CP_LANE2_PMA_REG_EQ_DC_CALIB_EN,
     CP_PMA_REG_EQ_DC_CALIB_SEL                      => CP_LANE2_PMA_REG_EQ_DC_CALIB_SEL,
     CP_PMA_REG_RX_RESERVED_337_330                  => CP_LANE2_PMA_REG_RX_RESERVED_337_330,
     CP_PMA_REG_RX_RESERVED_345_338                  => CP_LANE2_PMA_REG_RX_RESERVED_345_338,
     CP_PMA_REG_RX_RESERVED_353_346                  => CP_LANE2_PMA_REG_RX_RESERVED_353_346,
     CP_PMA_REG_RX_RESERVED_361_354                  => CP_LANE2_PMA_REG_RX_RESERVED_361_354,
     CP_PMA_CTLE_CTRL_REG_I                          => CP_LANE2_PMA_CTLE_CTRL_REG_I,
     CP_PMA_CFG_RX_LANE_POWERUP                      => CP_LANE2_PMA_CFG_RX_LANE_POWERUP,
     CP_PMA_CFG_RX_PMA_RSTN                          => CP_LANE2_PMA_CFG_RX_PMA_RSTN,
     CP_PMA_INT_PMA_RX_MASK_0                        => CP_LANE2_PMA_INT_PMA_RX_MASK_0,
     CP_PMA_INT_PMA_RX_CLR_0                         => CP_LANE2_PMA_INT_PMA_RX_CLR_0,
     CP_PMA_CFG_CTLE_ADP_RSTN                        => CP_LANE2_PMA_CFG_CTLE_ADP_RSTN,
  
     CP_PMA_REG_TX_PD                                => CP_LANE2_PMA_REG_TX_PD,
     CP_PMA_REG_TX_PD_OW                             => CP_LANE2_PMA_REG_TX_PD_OW,
     CP_PMA_REG_TX_MAIN_PRE_Z                        => CP_LANE2_PMA_REG_TX_MAIN_PRE_Z,
     CP_PMA_REG_TX_MAIN_PRE_Z_OW                     => CP_LANE2_PMA_REG_TX_MAIN_PRE_Z_OW,
     CP_PMA_REG_TX_BEACON_TIMER_SEL                  => CP_LANE2_PMA_REG_TX_BEACON_TIMER_SEL,
     CP_PMA_REG_TX_RXDET_REQ_OW                      => CP_LANE2_PMA_REG_TX_RXDET_REQ_OW,
     CP_PMA_REG_TX_RXDET_REQ                         => CP_LANE2_PMA_REG_TX_RXDET_REQ,
     CP_PMA_REG_TX_BEACON_EN_OW                      => CP_LANE2_PMA_REG_TX_BEACON_EN_OW,
     CP_PMA_REG_TX_BEACON_EN                         => CP_LANE2_PMA_REG_TX_BEACON_EN,
     CP_PMA_REG_TX_EI_EN_OW                          => CP_LANE2_PMA_REG_TX_EI_EN_OW,
     CP_PMA_REG_TX_EI_EN                             => CP_LANE2_PMA_REG_TX_EI_EN,
     CP_PMA_REG_TX_BIT_CONV                          => CP_LANE2_PMA_REG_TX_BIT_CONV,
     CP_PMA_REG_TX_RES_CAL                           => CP_LANE2_PMA_REG_TX_RES_CAL,
     CP_PMA_REG_TX_RESERVED_19                       => CP_LANE2_PMA_REG_TX_RESERVED_19,
     CP_PMA_REG_TX_RESERVED_25_20                    => CP_LANE2_PMA_REG_TX_RESERVED_25_20,
     CP_PMA_REG_TX_RESERVED_33_26                    => CP_LANE2_PMA_REG_TX_RESERVED_33_26,
     CP_PMA_REG_TX_RESERVED_41_34                    => CP_LANE2_PMA_REG_TX_RESERVED_41_34,
     CP_PMA_REG_TX_RESERVED_49_42                    => CP_LANE2_PMA_REG_TX_RESERVED_49_42,
     CP_PMA_REG_TX_RESERVED_57_50                    => CP_LANE2_PMA_REG_TX_RESERVED_57_50,
     CP_PMA_REG_TX_SYNC_OW                           => CP_LANE2_PMA_REG_TX_SYNC_OW,
     CP_PMA_REG_TX_SYNC                              => CP_LANE2_PMA_REG_TX_SYNC,
     CP_PMA_REG_TX_PD_POST                           => CP_LANE2_PMA_REG_TX_PD_POST,
     CP_PMA_REG_TX_PD_POST_OW                        => CP_LANE2_PMA_REG_TX_PD_POST_OW,
     CP_PMA_REG_TX_RESET_N_OW                        => CP_LANE2_PMA_REG_TX_RESET_N_OW,
     CP_PMA_REG_TX_RESET_N                           => CP_LANE2_PMA_REG_TX_RESET_N,
     CP_PMA_REG_TX_RESERVED_64                       => CP_LANE2_PMA_REG_TX_RESERVED_64,
     CP_PMA_REG_TX_RESERVED_65                       => CP_LANE2_PMA_REG_TX_RESERVED_65,
     CP_PMA_REG_TX_BUSWIDTH_OW                       => CP_LANE2_PMA_REG_TX_BUSWIDTH_OW,
     CP_PMA_REG_TX_BUSWIDTH                          => CP_LANE2_PMA_REG_TX_BUSWIDTH,
     CP_PMA_REG_PLL_READY_OW                         => CP_LANE2_PMA_REG_PLL_READY_OW,
     CP_PMA_REG_PLL_READY                            => CP_LANE2_PMA_REG_PLL_READY,
     CP_PMA_REG_TX_RESERVED_72                       => CP_LANE2_PMA_REG_TX_RESERVED_72,
     CP_PMA_REG_TX_RESERVED_73                       => CP_LANE2_PMA_REG_TX_RESERVED_73,
     CP_PMA_REG_TX_RESERVED_74                       => CP_LANE2_PMA_REG_TX_RESERVED_74,
     CP_PMA_REG_EI_PCLK_DELAY_SEL                    => CP_LANE2_PMA_REG_EI_PCLK_DELAY_SEL,
     CP_PMA_REG_TX_RESERVED_77                       => CP_LANE2_PMA_REG_TX_RESERVED_77,
     CP_PMA_REG_TX_RESERVED_83_78                    => CP_LANE2_PMA_REG_TX_RESERVED_83_78,
     CP_PMA_REG_TX_RESERVED_89_84                    => CP_LANE2_PMA_REG_TX_RESERVED_89_84,
     CP_PMA_REG_TX_RESERVED_95_90                    => CP_LANE2_PMA_REG_TX_RESERVED_95_90,
     CP_PMA_REG_TX_RESERVED_101_96                   => CP_LANE2_PMA_REG_TX_RESERVED_101_96,
     CP_PMA_REG_TX_RESERVED_107_102                  => CP_LANE2_PMA_REG_TX_RESERVED_107_102,
     CP_PMA_REG_TX_RESERVED_113_108                  => CP_LANE2_PMA_REG_TX_RESERVED_113_108,
     CP_PMA_REG_TX_AMP_DAC0                          => CP_LANE2_PMA_REG_TX_AMP_DAC0,
     CP_PMA_REG_TX_AMP_DAC1                          => CP_LANE2_PMA_REG_TX_AMP_DAC1,
     CP_PMA_REG_TX_AMP_DAC2                          => CP_LANE2_PMA_REG_TX_AMP_DAC2,
     CP_PMA_REG_TX_AMP_DAC3                          => CP_LANE2_PMA_REG_TX_AMP_DAC3,
     CP_PMA_REG_TX_RESERVED_143_138                  => CP_LANE2_PMA_REG_TX_RESERVED_143_138,
     CP_PMA_REG_TX_MARGIN                            => CP_LANE2_PMA_REG_TX_MARGIN,
     CP_PMA_REG_TX_MARGIN_OW                         => CP_LANE2_PMA_REG_TX_MARGIN_OW,
     CP_PMA_REG_TX_RESERVED_149_148                  => CP_LANE2_PMA_REG_TX_RESERVED_149_148,
     CP_PMA_REG_TX_RESERVED_150                      => CP_LANE2_PMA_REG_TX_RESERVED_150,
     CP_PMA_REG_TX_SWING                             => CP_LANE2_PMA_REG_TX_SWING,
     CP_PMA_REG_TX_SWING_OW                          => CP_LANE2_PMA_REG_TX_SWING_OW,
     CP_PMA_REG_TX_RESERVED_153                      => CP_LANE2_PMA_REG_TX_RESERVED_153,
     CP_PMA_REG_TX_RXDET_THRESHOLD                   => CP_LANE2_PMA_REG_TX_RXDET_THRESHOLD,
     CP_PMA_REG_TX_RESERVED_157_156                  => CP_LANE2_PMA_REG_TX_RESERVED_157_156,
     CP_PMA_REG_TX_BEACON_OSC_CTRL                   => CP_LANE2_PMA_REG_TX_BEACON_OSC_CTRL,
     CP_PMA_REG_TX_RESERVED_160_159                  => CP_LANE2_PMA_REG_TX_RESERVED_160_159,
     CP_PMA_REG_TX_RESERVED_162_161                  => CP_LANE2_PMA_REG_TX_RESERVED_162_161,
     CP_PMA_REG_TX_TX2RX_SLPBACK_EN                  => CP_LANE2_PMA_REG_TX_TX2RX_SLPBACK_EN,
     CP_PMA_REG_TX_PCLK_EDGE_SEL                     => CP_LANE2_PMA_REG_TX_PCLK_EDGE_SEL,
     CP_PMA_REG_TX_RXDET_STATUS_OW                   => CP_LANE2_PMA_REG_TX_RXDET_STATUS_OW,
     CP_PMA_REG_TX_RXDET_STATUS                      => CP_LANE2_PMA_REG_TX_RXDET_STATUS,
     CP_PMA_REG_TX_PRBS_GEN_EN                       => CP_LANE2_PMA_REG_TX_PRBS_GEN_EN,
     CP_PMA_REG_TX_PRBS_GEN_WIDTH_SEL                => CP_LANE2_PMA_REG_TX_PRBS_GEN_WIDTH_SEL,
     CP_PMA_REG_TX_PRBS_SEL                          => CP_LANE2_PMA_REG_TX_PRBS_SEL,
     CP_PMA_REG_TX_UDP_DATA_7_TO_0                   => CP_LANE2_PMA_REG_TX_UDP_DATA_7_TO_0,
     CP_PMA_REG_TX_UDP_DATA_15_TO_8                  => CP_LANE2_PMA_REG_TX_UDP_DATA_15_TO_8,
     CP_PMA_REG_TX_UDP_DATA_19_TO_16                 => CP_LANE2_PMA_REG_TX_UDP_DATA_19_TO_16,
     CP_PMA_REG_TX_RESERVED_192                      => CP_LANE2_PMA_REG_TX_RESERVED_192,
     CP_PMA_REG_TX_FIFO_WP_CTRL                      => CP_LANE2_PMA_REG_TX_FIFO_WP_CTRL,
     CP_PMA_REG_TX_FIFO_EN                           => CP_LANE2_PMA_REG_TX_FIFO_EN,
     CP_PMA_REG_TX_DATA_MUX_SEL                      => CP_LANE2_PMA_REG_TX_DATA_MUX_SEL,
     CP_PMA_REG_TX_ERR_INSERT                        => CP_LANE2_PMA_REG_TX_ERR_INSERT,
     CP_PMA_REG_TX_RESERVED_203_200                  => CP_LANE2_PMA_REG_TX_RESERVED_203_200,
     CP_PMA_REG_TX_RESERVED_204                      => CP_LANE2_PMA_REG_TX_RESERVED_204,
     CP_PMA_REG_TX_SATA_EN                           => CP_LANE2_PMA_REG_TX_SATA_EN,
     CP_PMA_REG_TX_RESERVED_207_206                  => CP_LANE2_PMA_REG_TX_RESERVED_207_206,
     CP_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW             => CP_LANE2_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW,
     CP_PMA_REG_RATE_CHANGE_TXPCLK_ON                => CP_LANE2_PMA_REG_RATE_CHANGE_TXPCLK_ON,
     CP_PMA_REG_TX_CFG_POST1                         => CP_LANE2_PMA_REG_TX_CFG_POST1,
     CP_PMA_REG_TX_CFG_POST2                         => CP_LANE2_PMA_REG_TX_CFG_POST2,
     CP_PMA_REG_TX_DEEMP                             => CP_LANE2_PMA_REG_TX_DEEMP,
     CP_PMA_REG_TX_DEEMP_OW                          => CP_LANE2_PMA_REG_TX_DEEMP_OW,
     CP_PMA_REG_TX_RESERVED_224_223                  => CP_LANE2_PMA_REG_TX_RESERVED_224_223,
     CP_PMA_REG_TX_RESERVED_225                      => CP_LANE2_PMA_REG_TX_RESERVED_225,
     CP_PMA_REG_TX_RESERVED_229_226                  => CP_LANE2_PMA_REG_TX_RESERVED_229_226,
     CP_PMA_REG_TX_OOB_DELAY_SEL                     => CP_LANE2_PMA_REG_TX_OOB_DELAY_SEL,
     CP_PMA_REG_TX_POLARITY                          => CP_LANE2_PMA_REG_TX_POLARITY,
     CP_PMA_REG_ANA_TX_JTAG_DATA_O_SEL               => CP_LANE2_PMA_REG_ANA_TX_JTAG_DATA_O_SEL,
     CP_PMA_REG_TX_RESERVED_236                      => CP_LANE2_PMA_REG_TX_RESERVED_236,
     CP_PMA_REG_TX_LS_MODE_EN                        => CP_LANE2_PMA_REG_TX_LS_MODE_EN,
     CP_PMA_REG_TX_JTAG_MODE_EN_OW                   => CP_LANE2_PMA_REG_TX_JTAG_MODE_EN_OW,
     CP_PMA_REG_TX_JTAG_MODE_EN                      => CP_LANE2_PMA_REG_TX_JTAG_MODE_EN,
     CP_PMA_REG_RX_JTAG_MODE_EN_OW                   => CP_LANE2_PMA_REG_RX_JTAG_MODE_EN_OW,
     CP_PMA_REG_RX_JTAG_MODE_EN                      => CP_LANE2_PMA_REG_RX_JTAG_MODE_EN,
     CP_PMA_REG_RX_JTAG_OE                           => CP_LANE2_PMA_REG_RX_JTAG_OE,
     CP_PMA_REG_RX_ACJTAG_VHYSTSEL                   => CP_LANE2_PMA_REG_RX_ACJTAG_VHYSTSEL,
     CP_PMA_REG_TX_RES_CAL_EN                        => CP_LANE2_PMA_REG_TX_RES_CAL_EN,
     CP_PMA_REG_RX_TERM_MODE_CTRL                    => CP_LANE2_PMA_REG_RX_TERM_MODE_CTRL,
     CP_PMA_REG_TX_RESERVED_251_250                  => CP_LANE2_PMA_REG_TX_RESERVED_251_250,
     CP_PMA_REG_PLPBK_TXPCLK_EN                      => CP_LANE2_PMA_REG_PLPBK_TXPCLK_EN,
     CP_PMA_REG_TX_RESERVED_253                      => CP_LANE2_PMA_REG_TX_RESERVED_253,
     CP_PMA_REG_TX_RESERVED_254                      => CP_LANE2_PMA_REG_TX_RESERVED_254,
     CP_PMA_REG_TX_RESERVED_255                      => CP_LANE2_PMA_REG_TX_RESERVED_255,
     CP_PMA_REG_TX_RESERVED_256                      => CP_LANE2_PMA_REG_TX_RESERVED_256,
     CP_PMA_REG_TX_RESERVED_257                      => CP_LANE2_PMA_REG_TX_RESERVED_257,
     CP_PMA_REG_TX_PH_SEL                            => CP_LANE2_PMA_REG_TX_PH_SEL,
     CP_PMA_REG_TX_CFG_PRE                           => CP_LANE2_PMA_REG_TX_CFG_PRE, 
     CP_PMA_REG_TX_CFG_MAIN                          => CP_LANE2_PMA_REG_TX_CFG_MAIN,
     CP_PMA_REG_CFG_POST                             => CP_LANE2_PMA_REG_CFG_POST,
     CP_PMA_REG_PD_MAIN                              => CP_LANE2_PMA_REG_PD_MAIN,
     CP_PMA_REG_PD_PRE                               => CP_LANE2_PMA_REG_PD_PRE,
     CP_PMA_REG_TX_LS_DATA                           => CP_LANE2_PMA_REG_TX_LS_DATA,
     CP_PMA_REG_TX_DCC_BUF_SZ_SEL                    => CP_LANE2_PMA_REG_TX_DCC_BUF_SZ_SEL,
     CP_PMA_REG_TX_DCC_CAL_CUR_TUNE                  => CP_LANE2_PMA_REG_TX_DCC_CAL_CUR_TUNE,
     CP_PMA_REG_TX_DCC_CAL_EN                        => CP_LANE2_PMA_REG_TX_DCC_CAL_EN,
     CP_PMA_REG_TX_DCC_CUR_SS                        => CP_LANE2_PMA_REG_TX_DCC_CUR_SS,
     CP_PMA_REG_TX_DCC_FA_CTRL                       => CP_LANE2_PMA_REG_TX_DCC_FA_CTRL,
     CP_PMA_REG_TX_DCC_RI_CTRL                       => CP_LANE2_PMA_REG_TX_DCC_RI_CTRL,
     CP_PMA_REG_ATB_SEL_2_TO_0                       => CP_LANE2_PMA_REG_ATB_SEL_2_TO_0,
     CP_PMA_REG_ATB_SEL_9_TO_3                       => CP_LANE2_PMA_REG_ATB_SEL_9_TO_3,
     CP_PMA_REG_TX_CFG_7_TO_0                        => CP_LANE2_PMA_REG_TX_CFG_7_TO_0,
     CP_PMA_REG_TX_CFG_15_TO_8                       => CP_LANE2_PMA_REG_TX_CFG_15_TO_8,
     CP_PMA_REG_TX_CFG_23_TO_16                      => CP_LANE2_PMA_REG_TX_CFG_23_TO_16,
     CP_PMA_REG_TX_CFG_31_TO_24                      => CP_LANE2_PMA_REG_TX_CFG_31_TO_24,
     CP_PMA_REG_TX_OOB_EI_EN                         => CP_LANE2_PMA_REG_TX_OOB_EI_EN,
     CP_PMA_REG_TX_OOB_EI_EN_OW                      => CP_LANE2_PMA_REG_TX_OOB_EI_EN_OW,
     CP_PMA_REG_TX_BEACON_EN_DELAYED                 => CP_LANE2_PMA_REG_TX_BEACON_EN_DELAYED,
     CP_PMA_REG_TX_BEACON_EN_DELAYED_OW              => CP_LANE2_PMA_REG_TX_BEACON_EN_DELAYED_OW,
     CP_PMA_REG_TX_JTAG_DATA                         => CP_LANE2_PMA_REG_TX_JTAG_DATA,
     CP_PMA_REG_TX_RXDET_TIMER_SEL                   => CP_LANE2_PMA_REG_TX_RXDET_TIMER_SEL,
     CP_PMA_REG_TX_CFG1_7_0                          => CP_LANE2_PMA_REG_TX_CFG1_7_0,
     CP_PMA_REG_TX_CFG1_15_8                         => CP_LANE2_PMA_REG_TX_CFG1_15_8,
     CP_PMA_REG_TX_CFG1_23_16                        => CP_LANE2_PMA_REG_TX_CFG1_23_16,
     CP_PMA_REG_TX_CFG1_31_24                        => CP_LANE2_PMA_REG_TX_CFG1_31_24,
     CP_PMA_REG_CFG_LANE_POWERUP                     => CP_LANE2_PMA_REG_CFG_LANE_POWERUP,
     CP_PMA_REG_CFG_PMA_POR_N                        => CP_LANE2_PMA_REG_CFG_PMA_POR_N,
     CP_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH          => CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH,
     CP_PMA_REG_CFG_TX_LANE_POWERUP_PISO             => CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_PISO,
     CP_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER           => CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER,
     CP_PMA_REG_CFG_TX_PMA_RSTN                      => CP_LANE2_PMA_REG_CFG_TX_PMA_RSTN,
    
     CP_GRSN_DIS                                     => CP_GRSN_DIS,
     CP_HSST_EN                                      => CP_HSST_EN,
     CP_CFG_RSTN                                     => CP_CFG_RSTN_2
   )
   port map
   (
 //////////DFT related/////////////////////////////////////////////////////////                                      
     //PCS                                                                                                           
     TEST_SE_N                                       => TEST_SE_N,                                                   
     TEST_MODE_N                                     => TEST_MODE_N,                                                 
     TEST_RSTN                                       => TEST_RSTN,                                                   
     TEST_SI0                                        => TEST_SI10,                                                   
     TEST_SI1                                        => TEST_SI11,                                                   
     TEST_SI2                                        => TEST_SI12,                                                   
     TEST_SI3                                        => TEST_SI13,                                                   
     TEST_SI4                                        => TEST_SI14,                                                   
     TEST_SO0                                        => TEST_SO10,                                                   
     TEST_SO1                                        => TEST_SO11,                                                   
     TEST_SO2                                        => TEST_SO12,                                                   
     TEST_SO3                                        => TEST_SO13,                                                   
     TEST_SO4                                        => TEST_SO14,                                                   
     //PMA                                                                                                           
     FOR_PMA_TEST_MODE_N                             => FOR_PMA_TEST_MODE_N,                                         
     FOR_PMA_TEST_SE_N                               => FOR_PMA_TEST_SE_N[1:0],                                      
     FOR_PMA_TEST_CLK                                => FOR_PMA_TEST_CLK[1:0],                                       
     FOR_PMA_TEST_RSTN                               => FOR_PMA_TEST_RSTN[1:0],                                      
     FOR_PMA_TEST_SI                                 => FOR_PMA_TEST_SI_CH2,                                         
     FOR_PMA_TEST_SO                                 => FOR_PMA_TEST_SO_CH2,                                         
                                                                                                                     
 //////////SRB related/////////////////////////////////////////////////////////                                      
     //PAD                                                                                                           
     PAD_RX_SDP                                      => PAD_RX_SDP2,                                                 
     PAD_RX_SDN                                      => PAD_RX_SDN2,                                                 
     PAD_TX_SDP                                      => PAD_TX_SDP2,                                                 
     PAD_TX_SDN                                      => PAD_TX_SDN2,                                                 
     //if with user logic                                                                                            
     RX_CLK_FR_CORE                                  => RX2_CLK_FR_CORE,                                             
     RCLK2_FR_CORE                                   => RCLK2_2_FR_CORE,                                             
     TX_CLK_FR_CORE                                  => TX2_CLK_FR_CORE,                                             
     TCLK2_FR_CORE                                   => TCLK2_2_FR_CORE,                                             
     HSST_RST                                        => HSST_RST,                                                    
     PCS_RX_RST                                      => PCS_RX_RST_2,                                                
     PCS_TX_RST                                      => PCS_TX_RST_2,                                                
     PCS_CB_RST                                      => PCS_CB_RST_2,                                                
     RXGEAR_SLIP                                     => RXGEAR_SLIP_2,                                               
     CFG_CLK                                         => CFG_CLK_2,                                                   
     CFG_RST                                         => CFG_RST_2,                                                   
     CFG_PSEL                                        => CFG_PSEL_2,                                                  
     CFG_ENABLE                                      => CFG_ENABLE_2,                                                
     CFG_WRITE                                       => CFG_WRITE_2,                                                 
     CFG_ADDR                                        => CFG_ADDR_2,                                                  
     CFG_WDATA                                       => CFG_WDATA_2,                                                 
     TDATA                                           => TDATA_2,                                                     
     PCS_WORD_ALIGN_EN                               => PCS_WORD_ALIGN_EN[2],                                        
     RX_POLARITY_INVERT                              => RX_POLARITY_INVERT[2],                                       
     CEB_ADETECT_EN                                  => CEB_ADETECT_EN[2],                                           
     PCS_MCB_EXT_EN                                  => PCS_MCB_EXT_EN[2],                                           
     PCS_NEAREND_LOOP                                => PCS_NEAREND_LOOP[2],                                         
     PCS_FAREND_LOOP                                 => PCS_FAREND_LOOP[2],                                          
     PMA_NEAREND_PLOOP                               => PMA_NEAREND_PLOOP[2],                                        
     PMA_NEAREND_SLOOP                               => PMA_NEAREND_SLOOP[2],                                        
     PMA_FAREND_PLOOP                                => PMA_FAREND_PLOOP[2],                                         
     CFG_READY                                       => CFG_READY_2,                                                 
     CFG_RDATA                                       => CFG_RDATA_2,                                                 
     CFG_INT                                         => CFG_INT_2,                                                   
     PCS_RX_MCB_STATUS                               => PCS_RX_MCB_STATUS[2],                                        
     PCS_LSM_SYNCED                                  => PCS_LSM_SYNCED[2],                                           
     RDATA                                           => RDATA_2,                                                     
     RCLK2FABRIC                                     => RCLK2FABRIC[2],                                              
     TCLK2FABRIC                                     => TCLK2FABRIC[2],                                              
     //Lanes                                                                                                         
     CA_ALIGN_RX                                     => CA_ALIGN_RX[2],                                              
     CA_ALIGN_TX                                     => CA_ALIGN_TX[2],                                              
     LANE_PD                                         => LANE_PD_2,                                                   
     LANE_RST                                        => LANE_RST_2,                                                  
     RX_LANE_PD                                      => RX_LANE_PD_2,                                                
     RX_PMA_RST                                      => RX_PMA_RST_2,                                                
     CTLE_ADP_RST                                    => CTLE_ADP_RST_2,                                              
     RX_SIGDET_STATUS                                => RX_SIGDET_STATUS_2,                                          
     RX_SATA_COMINIT                                 => RX_SATA_COMINIT_2,                                           
     RX_SATA_COMWAKE                                 => RX_SATA_COMWAKE_2,                                           
     RX_LS_DATA                                      => RX_LS_DATA_2,                                                
     RX_READY                                        => RX_READY_2,                                                  
     TEST_STATUS                                     => TEST_STATUS_2,                                               
     TX_DEEMP                                        => TX_DEEMP_2,                                                  
     TX_LS_DATA                                      => TX_LS_DATA_2,                                                
     TX_BEACON_EN                                    => TX_BEACON_EN_2,                                              
     TX_SWING                                        => TX_SWING_2,                                                  
     TX_RXDET_REQ                                    => TX_RXDET_REQ_2,                                              
     TX_RATE                                         => TX_RATE_2,                                                   
     TX_BUSWIDTH                                     => TX_BUSWIDTH_2,                                               
     TX_MARGIN                                       => TX_MARGIN_2,                                                 
     TX_RXDET_STATUS                                 => TX_RXDET_STATUS_2,                                           
     TX_PMA_RST                                      => TX_PMA_RST_2,                                                
     TX_LANE_PD_CLKPATH                              => TX_LANE_PD_CLKPATH_2,                                        
     TX_LANE_PD_PISO                                 => TX_LANE_PD_PISO_2,                                           
     TX_LANE_PD_DRIVER                               => TX_LANE_PD_DRIVER_2,                                         
     RX_RATE                                         => RX_RATE_2,                                                   
     RX_BUSWIDTH                                     => RX_BUSWIDTH_2,                                               
     RX_HIGHZ                                        => RX_HIGHZ_2,                                                  
     CIM_CLK_ALIGNER_RX                              => CIM_CLK_ALIGNER_RX2,                                         
     CIM_CLK_ALIGNER_TX                              => CIM_CLK_ALIGNER_TX2,                                         
     CIM_DYN_DLY_SEL_RX                              => CIM_DYN_DLY_SEL_RX2,                                         
     CIM_DYN_DLY_SEL_TX                              => CIM_DYN_DLY_SEL_TX2,                                         
     CIM_START_ALIGN_RX                              => CIM_START_ALIGN_RX2,                                         
     CIM_START_ALIGN_TX                              => CIM_START_ALIGN_TX2,                                         
                                                                                                                     
 //////////New added signal/////////////////////////////////////////////////////////                                 
     PMA_RCLK                                        => ntSIG_IN0_2,                            
     MCB_RCLK                                        => ntSIG_OUT_2,                                                  
                                                                                                                     
     SYNC                                            => SYNC_CH2,                               
                                                                                                                     
     RATE_CHANGE                                     => RATE_CHANGE_CH2,                     
                                                                                                                     
     PLL_LOCK_SEL                                    => PLL_LOCK_SEL_2,                         
                                                                                                                     
 //////////cin and cout/////////////////////////////////////////////////////////                                     
     RFIFO_EN_CB_CIN                                 => ntRFIFO_EN_CB_COUT_1,                                            
     RFIFO_EN_AFTER_CTC_CIN                          => ntRFIFO_EN_AFTER_CTC_COUT_1,                                     
     RFIFO_EN_AFTER_CTC_GB_CIN                       => ntRFIFO_EN_AFTER_CTC_GB_COUT_1,                                  
     RFIFO_EN_BRIDGE_CIN                             => ntRFIFO_EN_BRIDGE_COUT_1,                                        
     TFIFO_EN_PCS_TX_CIN                             => ntTFIFO_EN_PCS_TX_COUT_1,                                        
     TFIFO_EN_BRIDGE_CIN                             => ntTFIFO_EN_BRIDGE_COUT_1,                                        
     PCS_TCLK_EN_CIN                                 => ntPCS_TCLK_EN_COUT_1,                                            
     GEAR_TCLK_EN_CIN                                => ntGEAR_TCLK_EN_COUT_1,                                           
     APATTERN_MATCH_LSB_CIN                          => ntAPATTERN_MATCH_LSB_COUT_1,                                     
     APATTERN_MATCH_MSB_CIN                          => ntAPATTERN_MATCH_MSB_COUT_1,                                     
     APATTERN_STATUS_CIN                             => ntAPATTERN_STATUS_CIN_2,                                        
     APATTERN_SEACHING_PROC_CIN                      => ntAPATTERN_SEACHING_PROC_COUT_1,                                
     CB_RCLK_EN_CIN                                  => ntCB_RCLK_EN_COUT_1,                                            
     AFTER_CTC_RCLK_EN_CIN                           => ntAFTER_CTC_RCLK_EN_COUT_1,                                     
     AFTER_CTC_RCLK_EN_GB_CIN                        => ntAFTER_CTC_RCLK_EN_GB_COUT_1,                                  
     SKIP_ADD_MCB_CIN                                => ntSKIP_ADD_MCB_COUT_1,                                          
     SKIP_DEL_MCB_CIN                                => ntSKIP_DEL_MCB_COUT_1,                                          
     SKIP_DEL_LSB_MCB_CIN                            => ntSKIP_DEL_LSB_MCB_COUT_1,                                      
     SKIP_ADD_LSB_MCB_CIN                            => ntSKIP_ADD_LSB_MCB_COUT_1,                                      
     CTC_RD_FIFO_CIN                                 => ntCTC_RD_FIFO_COUT_1,                                            
                                                                                                                     
     APATTERN_MATCH_LSB_COUT                         => ntAPATTERN_MATCH_LSB_COUT_2,                                   
     APATTERN_MATCH_MSB_COUT                         => ntAPATTERN_MATCH_MSB_COUT_2,                                   
     APATTERN_STATUS_COUT                            => ntAPATTERN_STATUS_COUT_2,                                      
     APATTERN_SEACHING_PROC_COUT                     => ntAPATTERN_SEACHING_PROC_COUT_2,                               
     RFIFO_EN_CB_COUT                                => ntRFIFO_EN_CB_COUT_2,                                          
     RFIFO_EN_BRIDGE_COUT                            => ntRFIFO_EN_BRIDGE_COUT_2,                                      
     RFIFO_EN_AFTER_CTC_COUT                         => ntRFIFO_EN_AFTER_CTC_COUT_2,                                   
     RFIFO_EN_AFTER_CTC_GB_COUT                      => ntRFIFO_EN_AFTER_CTC_GB_COUT_2,                                
     CB_RCLK_EN_COUT                                 => ntCB_RCLK_EN_COUT_2,                                           
     AFTER_CTC_RCLK_EN_COUT                          => ntAFTER_CTC_RCLK_EN_COUT_2,                                     
     AFTER_CTC_RCLK_EN_GB_COUT                       => ntAFTER_CTC_RCLK_EN_GB_COUT_2,                                  
     TFIFO_EN_PCS_TX_COUT                            => ntTFIFO_EN_PCS_TX_COUT_2,                                       
     TFIFO_EN_BRIDGE_COUT                            => ntTFIFO_EN_BRIDGE_COUT_2,                                       
     PCS_TCLK_EN_COUT                                => ntPCS_TCLK_EN_COUT_2,                                           
     GEAR_TCLK_EN_COUT                               => ntGEAR_TCLK_EN_COUT_2,                                          
     SKIP_ADD_MCB_COUT                               => ntSKIP_ADD_MCB_COUT_2,                                          
     SKIP_DEL_MCB_COUT                               => ntSKIP_DEL_MCB_COUT_2,                                          
     SKIP_ADD_LSB_MCB_COUT                           => ntSKIP_ADD_LSB_MCB_COUT_2,                                      
     SKIP_DEL_LSB_MCB_COUT                           => ntSKIP_DEL_LSB_MCB_COUT_2,                                      
     CTC_RD_FIFO_COUT                                => ntCTC_RD_FIFO_COUT_2,                                           
                                                                                                                     
 //////////from PLL/////////////////////////////////////////////////////////                                         
     //clk                                                                                                           
     CLK_TXP                                         => CLK_TXP_2,                                                   
     CLK_TXN                                         => CLK_TXN_2,                                                   
     CLK_RX0                                         => CLK_RX0_2,                                                   
     CLK_RX180                                       => CLK_RX180_2,                                                 
     CLK_RX90                                        => CLK_RX90_2,                                                  
     CLK_RX270                                       => CLK_RX270_2,                                                 
                                                                                                                     
     //others                                                                                                        
     PLL_PD_I                                        => PLL_PD_I_2,                                                  
     PLL_RESET_I                                     => PLL_RESET_I_2,                                               
     PLL_REFCLK_I                                    => PLL_REFCLK_I_2,                                              
                                                                                                                     
     PLL_RES_TRIM_I                                  => RESCAL_I_CODE_O_0,                                           
                                                                                                                     
                                                                                                                     
 //////////out////////////////////////////////////////////////////////                                               
     TXPCLK_PLL                                      => TXPCLK_PLL_2
   );    
    device HSSTLP_LANE U3_HSSTLP_LANE
   parameter map
   (
      CP_MUX_BIAS                                     => CP_LANE3_MUX_BIAS,
      CP_PD_CLK                                       => CP_LANE3_PD_CLK,
      CP_REG_SYNC                                     => CP_LANE3_REG_SYNC,
      CP_REG_SYNC_OW                                  => CP_LANE3_REG_SYNC_OW,
      CP_PLL_LOCK_OW                                  => CP_LANE3_PLL_LOCK_OW,
      CP_PLL_LOCK_OW_EN                               => CP_LANE3_PLL_LOCK_OW_EN,
  
      CP_PMA_REG_CDR_READY_THD                        => CP_LANE3_PMA_REG_CDR_READY_THD,
      CP_PMA_REG_RX_RESERVED_65                       => CP_LANE3_PMA_REG_RX_RESERVED_65,
      CP_PMA_REG_CDR_READY_CHECK_CTRL                 => CP_LANE3_PMA_REG_CDR_READY_CHECK_CTRL,
      CP_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL            => CP_LANE3_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL,
      CP_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL            => CP_LANE3_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL,
      CP_PMA_CTLE_REG_FORCE_SEL_I                     => CP_LANE3_PMA_CTLE_REG_FORCE_SEL_I,
      CP_PMA_CTLE_REG_HOLD_I                          => CP_LANE3_PMA_CTLE_REG_HOLD_I,
      CP_PMA_CTLE_REG_INIT_DAC_I                      => CP_LANE3_PMA_CTLE_REG_INIT_DAC_I,
      CP_PMA_CTLE_REG_POLARITY_I                      => CP_LANE3_PMA_CTLE_REG_POLARITY_I,
      CP_PMA_CTLE_REG_SHIFTER_GAIN_I                  => CP_LANE3_PMA_CTLE_REG_SHIFTER_GAIN_I,
      CP_PMA_CTLE_REG_THRESHOLD_I                     => CP_LANE3_PMA_CTLE_REG_THRESHOLD_I,
      CP_PMA_REG_RX_RES_TRIM_EN                       => CP_LANE3_PMA_REG_RX_RES_TRIM_EN,
      CP_PMA_REG_RX_RESERVED_393_389                  => CP_LANE3_PMA_REG_RX_RESERVED_393_389,
  
      CP_PCS_SLAVE                                    => CP_LANE3_PCS_SLAVE,
      CP_PCS_BYPASS_WORD_ALIGN                        => CP_LANE3_PCS_BYPASS_WORD_ALIGN,          
      CP_PCS_BYPASS_DENC                              => CP_LANE3_PCS_BYPASS_DENC,           
      CP_PCS_BYPASS_BONDING                           => CP_LANE3_PCS_BYPASS_BONDING, 
      CP_PCS_BYPASS_CTC                               => CP_LANE3_PCS_BYPASS_CTC, 
      CP_PCS_BYPASS_GEAR                              => CP_LANE3_PCS_BYPASS_GEAR, 
      CP_PCS_BYPASS_BRIDGE                            => CP_LANE3_PCS_BYPASS_BRIDGE, 
      CP_PCS_BYPASS_BRIDGE_FIFO                       => CP_LANE3_PCS_BYPASS_BRIDGE_FIFO, 
      CP_PCS_DATA_MODE                                => CP_LANE3_PCS_DATA_MODE, 
      CP_PCS_RX_POLARITY_INV                          => CP_LANE3_PCS_RX_POLARITY_INV, 
      CP_PCS_ALIGN_MODE                               => CP_LANE3_PCS_ALIGN_MODE, 
      CP_PCS_SAMP_16B                                 => CP_LANE3_PCS_SAMP_16B,          
      CP_PCS_FARLP_PWR_REDUCTION                      => CP_LANE3_PCS_FARLP_PWR_REDUCTION,           
      CP_PCS_COMMA_REG0                               => CP_LANE3_PCS_COMMA_REG0, 
      CP_PCS_COMMA_MASK                               => CP_LANE3_PCS_COMMA_MASK, 
      CP_PCS_CEB_MODE                                 => CP_LANE3_PCS_CEB_MODE, 
      CP_PCS_CTC_MODE                                 => CP_LANE3_PCS_CTC_MODE, 
      CP_PCS_A_REG                                    => CP_LANE3_PCS_A_REG, 
      CP_PCS_GE_AUTO_EN                               => CP_LANE3_PCS_GE_AUTO_EN, 
      CP_PCS_SKIP_REG0                                => CP_LANE3_PCS_SKIP_REG0, 
      CP_PCS_SKIP_REG1                                => CP_LANE3_PCS_SKIP_REG1, 
      CP_PCS_SKIP_REG2                                => CP_LANE3_PCS_SKIP_REG2,          
      CP_PCS_SKIP_REG3                                => CP_LANE3_PCS_SKIP_REG3,           
      CP_PCS_DEC_DUAL                                 => CP_LANE3_PCS_DEC_DUAL, 
      CP_PCS_SPLIT                                    => CP_LANE3_PCS_SPLIT, 
      CP_PCS_FIFOFLAG_CTC                             => CP_LANE3_PCS_FIFOFLAG_CTC, 
      CP_PCS_COMMA_DET_MODE                           => CP_LANE3_PCS_COMMA_DET_MODE, 
      CP_PCS_ERRDETECT_SILENCE                        => CP_LANE3_PCS_ERRDETECT_SILENCE, 
      CP_PCS_PMA_RCLK_POLINV                          => CP_LANE3_PCS_PMA_RCLK_POLINV, 
      CP_PCS_PCS_RCLK_SEL                             => CP_LANE3_PCS_PCS_RCLK_SEL, 
      CP_PCS_CB_RCLK_SEL                              => CP_LANE3_PCS_CB_RCLK_SEL, 
      CP_PCS_AFTER_CTC_RCLK_SEL                       => CP_LANE3_PCS_AFTER_CTC_RCLK_SEL,           
      CP_PCS_RCLK_POLINV                              => CP_LANE3_PCS_RCLK_POLINV, 
      CP_PCS_BRIDGE_RCLK_SEL                          => CP_LANE3_PCS_BRIDGE_RCLK_SEL, 
      CP_PCS_PCS_RCLK_EN                              => CP_LANE3_PCS_PCS_RCLK_EN,
      CP_PCS_CB_RCLK_EN                               => CP_LANE3_PCS_CB_RCLK_EN ,
      CP_PCS_AFTER_CTC_RCLK_EN                        => CP_LANE3_PCS_AFTER_CTC_RCLK_EN,
      CP_PCS_AFTER_CTC_RCLK_EN_GB                     => CP_LANE3_PCS_AFTER_CTC_RCLK_EN_GB,
      CP_PCS_PCS_RX_RSTN                              => CP_LANE3_PCS_PCS_RX_RSTN,
      CP_PCS_PCIE_SLAVE                               => CP_LANE3_PCS_PCIE_SLAVE,
      CP_PCS_RX_64B66B_67B                            => CP_LANE3_PCS_RX_64B66B_67B,
      CP_PCS_RX_BRIDGE_CLK_POLINV                     => CP_LANE3_PCS_RX_BRIDGE_CLK_POLINV,
      CP_PCS_PCS_CB_RSTN                              => CP_LANE3_PCS_PCS_CB_RSTN,
      CP_PCS_TX_BRIDGE_GEAR_SEL                       => CP_LANE3_PCS_TX_BRIDGE_GEAR_SEL,
      CP_PCS_TX_BYPASS_BRIDGE_UINT                    => CP_LANE3_PCS_TX_BYPASS_BRIDGE_UINT,
      CP_PCS_TX_BYPASS_BRIDGE_FIFO                    => CP_LANE3_PCS_TX_BYPASS_BRIDGE_FIFO,
      CP_PCS_TX_BYPASS_GEAR                           => CP_LANE3_PCS_TX_BYPASS_GEAR,
      CP_PCS_TX_BYPASS_ENC                            => CP_LANE3_PCS_TX_BYPASS_ENC,
      CP_PCS_TX_BYPASS_BIT_SLIP                       => CP_LANE3_PCS_TX_BYPASS_BIT_SLIP,
      CP_PCS_TX_GEAR_SPLIT                            => CP_LANE3_PCS_TX_GEAR_SPLIT,
      CP_PCS_TX_DRIVE_REG_MODE                        => CP_LANE3_PCS_TX_DRIVE_REG_MODE,
      CP_PCS_TX_BIT_SLIP_CYCLES                       => CP_LANE3_PCS_TX_BIT_SLIP_CYCLES,
      CP_PCS_INT_TX_MASK_0                            => CP_LANE3_PCS_INT_TX_MASK_0,
      CP_PCS_INT_TX_MASK_1                            => CP_LANE3_PCS_INT_TX_MASK_1,
      CP_PCS_INT_TX_MASK_2                            => CP_LANE3_PCS_INT_TX_MASK_2,
      CP_PCS_INT_TX_CLR_0                             => CP_LANE3_PCS_INT_TX_CLR_0,
      CP_PCS_INT_TX_CLR_1                             => CP_LANE3_PCS_INT_TX_CLR_1,
      CP_PCS_INT_TX_CLR_2                             => CP_LANE3_PCS_INT_TX_CLR_2,
      CP_PCS_TX_PMA_TCLK_POLINV                       => CP_LANE3_PCS_TX_PMA_TCLK_POLINV,
      CP_PCS_TX_PCS_CLK_EN_SEL                        => CP_LANE3_PCS_TX_PCS_CLK_EN_SEL,
      CP_PCS_TX_BRIDGE_TCLK_SEL                       => CP_LANE3_PCS_TX_BRIDGE_TCLK_SEL,
      CP_PCS_TX_TCLK_POLINV                           => CP_LANE3_PCS_TX_TCLK_POLINV,
      CP_PCS_PCS_TCLK_SEL                             => CP_LANE3_PCS_PCS_TCLK_SEL,
      CP_PCS_TX_PCS_TX_RSTN                           => CP_LANE3_PCS_TX_PCS_TX_RSTN,
      CP_PCS_TX_SLAVE                                 => CP_LANE3_PCS_TX_SLAVE,
      CP_PCS_TX_GEAR_CLK_EN_SEL                       => CP_LANE3_PCS_TX_GEAR_CLK_EN_SEL,
      CP_PCS_DATA_WIDTH_MODE                          => CP_LANE3_PCS_DATA_WIDTH_MODE,
      CP_PCS_TX_64B66B_67B                            => CP_LANE3_PCS_TX_64B66B_67B,
      CP_PCS_GEAR_TCLK_SEL                            => CP_LANE3_PCS_GEAR_TCLK_SEL,
      CP_PCS_TX_TCLK2FABRIC_SEL                       => CP_LANE3_PCS_TX_TCLK2FABRIC_SEL,
      CP_PCS_TX_OUTZZ                                 => CP_LANE3_PCS_TX_OUTZZ,
      CP_PCS_ENC_DUAL                                 => CP_LANE3_PCS_ENC_DUAL,
      CP_PCS_TX_BITSLIP_DATA_MODE                     => CP_LANE3_PCS_TX_BITSLIP_DATA_MODE,
      CP_PCS_TX_BRIDGE_CLK_POLINV                     => CP_LANE3_PCS_TX_BRIDGE_CLK_POLINV,
      CP_PCS_COMMA_REG1                               => CP_LANE3_PCS_COMMA_REG1,
      CP_PCS_RAPID_IMAX                               => CP_LANE3_PCS_RAPID_IMAX,
      CP_PCS_RAPID_VMIN_1                             => CP_LANE3_PCS_RAPID_VMIN_1,
      CP_PCS_RAPID_VMIN_2                             => CP_LANE3_PCS_RAPID_VMIN_2,
      CP_PCS_RX_PRBS_MODE                             => CP_LANE3_PCS_RX_PRBS_MODE,
      CP_PCS_RX_ERRCNT_CLR                            => CP_LANE3_PCS_RX_ERRCNT_CLR,
      CP_PCS_PRBS_ERR_LPBK                            => CP_LANE3_PCS_PRBS_ERR_LPBK,
      CP_PCS_TX_PRBS_MODE                             => CP_LANE3_PCS_TX_PRBS_MODE,
      CP_PCS_TX_INSERT_ER                             => CP_LANE3_PCS_TX_INSERT_ER,
      CP_PCS_ENABLE_PRBS_GEN                          => CP_LANE3_PCS_ENABLE_PRBS_GEN,
      CP_PCS_DEFAULT_RADDR                            => CP_LANE3_PCS_DEFAULT_RADDR,
      CP_PCS_MASTER_CHECK_OFFSET                      => CP_LANE3_PCS_MASTER_CHECK_OFFSET,
      CP_PCS_DELAY_SET                                => CP_LANE3_PCS_DELAY_SET,
      CP_PCS_SEACH_OFFSET                             => CP_LANE3_PCS_SEACH_OFFSET,
      CP_PCS_CEB_RAPIDLS_MMAX                         => CP_LANE3_PCS_CEB_RAPIDLS_MMAX,
      CP_PCS_CTC_AFULL                                => CP_LANE3_PCS_CTC_AFULL,
      CP_PCS_CTC_AEMPTY                               => CP_LANE3_PCS_CTC_AEMPTY,
      CP_PCS_CTC_CONTI_SKP_SET                        => CP_LANE3_PCS_CTC_CONTI_SKP_SET,
      CP_PCS_FAR_LOOP                                 => CP_LANE3_PCS_FAR_LOOP,
      CP_PCS_NEAR_LOOP                                => CP_LANE3_PCS_NEAR_LOOP,
      CP_PCS_PMA_TX2RX_PLOOP_EN                       => CP_LANE3_PCS_PMA_TX2RX_PLOOP_EN,
      CP_PCS_PMA_TX2RX_SLOOP_EN                       => CP_LANE3_PCS_PMA_TX2RX_SLOOP_EN,
      CP_PCS_PMA_RX2TX_PLOOP_EN                       => CP_LANE3_PCS_PMA_RX2TX_PLOOP_EN,
      CP_PCS_INT_RX_MASK_0                            => CP_LANE3_PCS_INT_RX_MASK_0,
      CP_PCS_INT_RX_MASK_1                            => CP_LANE3_PCS_INT_RX_MASK_1,
      CP_PCS_INT_RX_MASK_2                            => CP_LANE3_PCS_INT_RX_MASK_2,
      CP_PCS_INT_RX_MASK_3                            => CP_LANE3_PCS_INT_RX_MASK_3,
      CP_PCS_INT_RX_MASK_4                            => CP_LANE3_PCS_INT_RX_MASK_4,
      CP_PCS_INT_RX_MASK_5                            => CP_LANE3_PCS_INT_RX_MASK_5,
      CP_PCS_INT_RX_MASK_6                            => CP_LANE3_PCS_INT_RX_MASK_6,
      CP_PCS_INT_RX_MASK_7                            => CP_LANE3_PCS_INT_RX_MASK_7,
      CP_PCS_INT_RX_CLR_0                             => CP_LANE3_PCS_INT_RX_CLR_0,
      CP_PCS_INT_RX_CLR_1                             => CP_LANE3_PCS_INT_RX_CLR_1,
      CP_PCS_INT_RX_CLR_2                             => CP_LANE3_PCS_INT_RX_CLR_2,
      CP_PCS_INT_RX_CLR_3                             => CP_LANE3_PCS_INT_RX_CLR_3,
      CP_PCS_INT_RX_CLR_4                             => CP_LANE3_PCS_INT_RX_CLR_4,
      CP_PCS_INT_RX_CLR_5                             => CP_LANE3_PCS_INT_RX_CLR_5,
      CP_PCS_INT_RX_CLR_6                             => CP_LANE3_PCS_INT_RX_CLR_6,
      CP_PCS_INT_RX_CLR_7                             => CP_LANE3_PCS_INT_RX_CLR_7,
      CP_PCS_CA_RSTN_RX                               => CP_LANE3_PCS_CA_RSTN_RX,
      CP_PCS_CA_DYN_DLY_EN_RX                         => CP_LANE3_PCS_CA_DYN_DLY_EN_RX,
      CP_PCS_CA_DYN_DLY_SEL_RX                        => CP_LANE3_PCS_CA_DYN_DLY_SEL_RX,
      CP_PCS_CA_RX                                    => CP_LANE3_PCS_CA_RX,
      CP_PCS_CA_RSTN_TX                               => CP_LANE3_PCS_CA_RSTN_TX,
      CP_PCS_CA_DYN_DLY_EN_TX                         => CP_LANE3_PCS_CA_DYN_DLY_EN_TX,
      CP_PCS_CA_DYN_DLY_SEL_TX                        => CP_LANE3_PCS_CA_DYN_DLY_SEL_TX,
      CP_PCS_CA_TX                                    => CP_LANE3_PCS_CA_TX,
      CP_PCS_RXPRBS_PWR_REDUCTION                     => CP_LANE3_PCS_RXPRBS_PWR_REDUCTION,
      CP_PCS_WDALIGN_PWR_REDUCTION                    => CP_LANE3_PCS_WDALIGN_PWR_REDUCTION,
      CP_PCS_RXDEC_PWR_REDUCTION                      => CP_LANE3_PCS_RXDEC_PWR_REDUCTION,
      CP_PCS_RXCB_PWR_REDUCTION                       => CP_LANE3_PCS_RXCB_PWR_REDUCTION,
      CP_PCS_RXCTC_PWR_REDUCTION                      => CP_LANE3_PCS_RXCTC_PWR_REDUCTION,
      CP_PCS_RXGEAR_PWR_REDUCTION                     => CP_LANE3_PCS_RXGEAR_PWR_REDUCTION,
      CP_PCS_RXBRG_PWR_REDUCTION                      => CP_LANE3_PCS_RXBRG_PWR_REDUCTION,
      CP_PCS_RXTEST_PWR_REDUCTION                     => CP_LANE3_PCS_RXTEST_PWR_REDUCTION,
      CP_PCS_TXBRG_PWR_REDUCTION                      => CP_LANE3_PCS_TXBRG_PWR_REDUCTION,
      CP_PCS_TXGEAR_PWR_REDUCTION                     => CP_LANE3_PCS_TXGEAR_PWR_REDUCTION,
      CP_PCS_TXENC_PWR_REDUCTION                      => CP_LANE3_PCS_TXENC_PWR_REDUCTION,
      CP_PCS_TXBSLP_PWR_REDUCTION                     => CP_LANE3_PCS_TXBSLP_PWR_REDUCTION,
      CP_PCS_TXPRBS_PWR_REDUCTION                     => CP_LANE3_PCS_TXPRBS_PWR_REDUCTION,
   
      CP_PMA_REG_RX_PD                                => CP_LANE3_PMA_REG_RX_PD,
      CP_PMA_REG_RX_PD_EN                             => CP_LANE3_PMA_REG_RX_PD_EN,
      CP_PMA_REG_RX_RESERVED_2                        => CP_LANE3_PMA_REG_RX_RESERVED_2,
      CP_PMA_REG_RX_RESERVED_3                        => CP_LANE3_PMA_REG_RX_RESERVED_3,
      CP_PMA_REG_RX_DATAPATH_PD                       => CP_LANE3_PMA_REG_RX_DATAPATH_PD,
      CP_PMA_REG_RX_DATAPATH_PD_EN                    => CP_LANE3_PMA_REG_RX_DATAPATH_PD_EN,
      CP_PMA_REG_RX_SIGDET_PD                         => CP_LANE3_PMA_REG_RX_SIGDET_PD,
      CP_PMA_REG_RX_SIGDET_PD_EN                      => CP_LANE3_PMA_REG_RX_SIGDET_PD_EN,
      CP_PMA_REG_RX_DCC_RST_N                         => CP_LANE3_PMA_REG_RX_DCC_RST_N,
      CP_PMA_REG_RX_DCC_RST_N_EN                      => CP_LANE3_PMA_REG_RX_DCC_RST_N_EN,
      CP_PMA_REG_RX_CDR_RST_N                         => CP_LANE3_PMA_REG_RX_CDR_RST_N,
      CP_PMA_REG_RX_CDR_RST_N_EN                      => CP_LANE3_PMA_REG_RX_CDR_RST_N_EN,
      CP_PMA_REG_RX_SIGDET_RST_N                      => CP_LANE3_PMA_REG_RX_SIGDET_RST_N,
      CP_PMA_REG_RX_SIGDET_RST_N_EN                   => CP_LANE3_PMA_REG_RX_SIGDET_RST_N_EN,
      CP_PMA_REG_RXPCLK_SLIP                          => CP_LANE3_PMA_REG_RXPCLK_SLIP,
      CP_PMA_REG_RXPCLK_SLIP_OW                       => CP_LANE3_PMA_REG_RXPCLK_SLIP_OW,
      CP_PMA_REG_RX_PCLKSWITCH_RST_N                  => CP_LANE3_PMA_REG_RX_PCLKSWITCH_RST_N,
      CP_PMA_REG_RX_PCLKSWITCH_RST_N_EN               => CP_LANE3_PMA_REG_RX_PCLKSWITCH_RST_N_EN,
      CP_PMA_REG_RX_PCLKSWITCH                        => CP_LANE3_PMA_REG_RX_PCLKSWITCH,
      CP_PMA_REG_RX_PCLKSWITCH_EN                     => CP_LANE3_PMA_REG_RX_PCLKSWITCH_EN,
      CP_PMA_REG_RX_HIGHZ                             => CP_LANE3_PMA_REG_RX_HIGHZ,
      CP_PMA_REG_RX_HIGHZ_EN                          => CP_LANE3_PMA_REG_RX_HIGHZ_EN,
      CP_PMA_REG_RX_SIGDET_CLK_WINDOW                 => CP_LANE3_PMA_REG_RX_SIGDET_CLK_WINDOW,
      CP_PMA_REG_RX_SIGDET_CLK_WINDOW_OW              => CP_LANE3_PMA_REG_RX_SIGDET_CLK_WINDOW_OW,
      CP_PMA_REG_RX_PD_BIAS_RX                        => CP_LANE3_PMA_REG_RX_PD_BIAS_RX,
      CP_PMA_REG_RX_PD_BIAS_RX_OW                     => CP_LANE3_PMA_REG_RX_PD_BIAS_RX_OW,
      CP_PMA_REG_RX_RESET_N                           => CP_LANE3_PMA_REG_RX_RESET_N,
      CP_PMA_REG_RX_RESET_N_OW                        => CP_LANE3_PMA_REG_RX_RESET_N_OW,
      CP_PMA_REG_RX_RESERVED_29_28                    => CP_LANE3_PMA_REG_RX_RESERVED_29_28,
      CP_PMA_REG_RX_BUSWIDTH                          => CP_LANE3_PMA_REG_RX_BUSWIDTH,
      CP_PMA_REG_RX_BUSWIDTH_EN                       => CP_LANE3_PMA_REG_RX_BUSWIDTH_EN,
      CP_PMA_REG_RX_RATE                              => CP_LANE3_PMA_REG_RX_RATE,
      CP_PMA_REG_RX_RESERVED_36                       => CP_LANE3_PMA_REG_RX_RESERVED_36,
      CP_PMA_REG_RX_RATE_EN                           => CP_LANE3_PMA_REG_RX_RATE_EN,
      CP_PMA_REG_RX_RES_TRIM                          => CP_LANE3_PMA_REG_RX_RES_TRIM,
      CP_PMA_REG_RX_RESERVED_44                       => CP_LANE3_PMA_REG_RX_RESERVED_44,
      CP_PMA_REG_RX_RESERVED_45                       => CP_LANE3_PMA_REG_RX_RESERVED_45,
      CP_PMA_REG_RX_SIGDET_STATUS_EN                  => CP_LANE3_PMA_REG_RX_SIGDET_STATUS_EN,
      CP_PMA_REG_RX_RESERVED_48_47                    => CP_LANE3_PMA_REG_RX_RESERVED_48_47,
      CP_PMA_REG_RX_ICTRL_SIGDET                      => CP_LANE3_PMA_REG_RX_ICTRL_SIGDET,
      CP_PMA_REG_RX_PCLK_EDGE_SEL                     => CP_LANE3_PMA_REG_RX_PCLK_EDGE_SEL,
      CP_PMA_REG_RX_PIBUF_IC                          => CP_LANE3_PMA_REG_RX_PIBUF_IC,
      CP_PMA_REG_RX_RESERVED_69                       => CP_LANE3_PMA_REG_RX_RESERVED_69,
      CP_PMA_REG_RX_DCC_IC_RX                         => CP_LANE3_PMA_REG_RX_DCC_IC_RX,
      CP_PMA_REG_RX_ICTRL_TRX                         => CP_LANE3_PMA_REG_RX_ICTRL_TRX,
      CP_PMA_REG_RX_RESERVED_77_76                    => CP_LANE3_PMA_REG_RX_RESERVED_77_76,
      CP_PMA_REG_RX_RESERVED_79_78                    => CP_LANE3_PMA_REG_RX_RESERVED_79_78,
      CP_PMA_REG_RX_RESERVED_81_80                    => CP_LANE3_PMA_REG_RX_RESERVED_81_80,
      CP_PMA_REG_RX_ICTRL_PIBUF                       => CP_LANE3_PMA_REG_RX_ICTRL_PIBUF,
      CP_PMA_REG_RX_ICTRL_PI                          => CP_LANE3_PMA_REG_RX_ICTRL_PI,
      CP_PMA_REG_RX_ICTRL_DCC                         => CP_LANE3_PMA_REG_RX_ICTRL_DCC,
      CP_PMA_REG_RX_RESERVED_89_88                    => CP_LANE3_PMA_REG_RX_RESERVED_89_88,
      CP_PMA_REG_TX_RATE                              => CP_LANE3_PMA_REG_TX_RATE,
      CP_PMA_REG_RX_RESERVED_92                       => CP_LANE3_PMA_REG_RX_RESERVED_92,
      CP_PMA_REG_TX_RATE_EN                           => CP_LANE3_PMA_REG_TX_RATE_EN,
      CP_PMA_REG_RX_TX2RX_PLPBK_RST_N                 => CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_RST_N,
      CP_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN              => CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN,
      CP_PMA_REG_RX_TX2RX_PLPBK_EN                    => CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_EN,
      CP_PMA_REG_TXCLK_SEL                            => CP_LANE3_PMA_REG_TXCLK_SEL,
      CP_PMA_REG_RX_DATA_POLARITY                     => CP_LANE3_PMA_REG_RX_DATA_POLARITY,
      CP_PMA_REG_RX_ERR_INSERT                        => CP_LANE3_PMA_REG_RX_ERR_INSERT,
      CP_PMA_REG_UDP_CHK_EN                           => CP_LANE3_PMA_REG_UDP_CHK_EN,
      CP_PMA_REG_PRBS_SEL                             => CP_LANE3_PMA_REG_PRBS_SEL,
      CP_PMA_REG_PRBS_CHK_EN                          => CP_LANE3_PMA_REG_PRBS_CHK_EN,
      CP_PMA_REG_PRBS_CHK_WIDTH_SEL                   => CP_LANE3_PMA_REG_PRBS_CHK_WIDTH_SEL,
      CP_PMA_REG_BIST_CHK_PAT_SEL                     => CP_LANE3_PMA_REG_BIST_CHK_PAT_SEL,
      CP_PMA_REG_LOAD_ERR_CNT                         => CP_LANE3_PMA_REG_LOAD_ERR_CNT,
      CP_PMA_REG_CHK_COUNTER_EN                       => CP_LANE3_PMA_REG_CHK_COUNTER_EN,
      CP_PMA_REG_CDR_PROP_GAIN                        => CP_LANE3_PMA_REG_CDR_PROP_GAIN,
      CP_PMA_REG_CDR_PROP_TURBO_GAIN                  => CP_LANE3_PMA_REG_CDR_PROP_TURBO_GAIN,
      CP_PMA_REG_CDR_INT_GAIN                         => CP_LANE3_PMA_REG_CDR_INT_GAIN,
      CP_PMA_REG_CDR_INT_TURBO_GAIN                   => CP_LANE3_PMA_REG_CDR_INT_TURBO_GAIN,
      CP_PMA_REG_CDR_INT_SAT_MAX                      => CP_LANE3_PMA_REG_CDR_INT_SAT_MAX,
      CP_PMA_REG_CDR_INT_SAT_MIN                      => CP_LANE3_PMA_REG_CDR_INT_SAT_MIN,
      CP_PMA_REG_CDR_INT_RST                          => CP_LANE3_PMA_REG_CDR_INT_RST,
      CP_PMA_REG_CDR_INT_RST_OW                       => CP_LANE3_PMA_REG_CDR_INT_RST_OW,
      CP_PMA_REG_CDR_PROP_RST                         => CP_LANE3_PMA_REG_CDR_PROP_RST,
      CP_PMA_REG_CDR_PROP_RST_OW                      => CP_LANE3_PMA_REG_CDR_PROP_RST_OW,
      CP_PMA_REG_CDR_LOCK_RST                         => CP_LANE3_PMA_REG_CDR_LOCK_RST,
      CP_PMA_REG_CDR_LOCK_RST_OW                      => CP_LANE3_PMA_REG_CDR_LOCK_RST_OW,
      CP_PMA_REG_CDR_RX_PI_FORCE_SEL                  => CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_SEL,
      CP_PMA_REG_CDR_RX_PI_FORCE_D                    => CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_D,
      CP_PMA_REG_CDR_LOCK_TIMER                       => CP_LANE3_PMA_REG_CDR_LOCK_TIMER,
      CP_PMA_REG_CDR_TURBO_MODE_TIMER                 => CP_LANE3_PMA_REG_CDR_TURBO_MODE_TIMER,
      CP_PMA_REG_CDR_LOCK_VAL                         => CP_LANE3_PMA_REG_CDR_LOCK_VAL,
      CP_PMA_REG_CDR_LOCK_OW                          => CP_LANE3_PMA_REG_CDR_LOCK_OW,
      CP_PMA_REG_CDR_INT_SAT_DET_EN                   => CP_LANE3_PMA_REG_CDR_INT_SAT_DET_EN,
      CP_PMA_REG_CDR_SAT_AUTO_DIS                     => CP_LANE3_PMA_REG_CDR_SAT_AUTO_DIS,
      CP_PMA_REG_CDR_GAIN_AUTO                        => CP_LANE3_PMA_REG_CDR_GAIN_AUTO,
      CP_PMA_REG_CDR_TURBO_GAIN_AUTO                  => CP_LANE3_PMA_REG_CDR_TURBO_GAIN_AUTO,
      CP_PMA_REG_RX_RESERVED_171_167                  => CP_LANE3_PMA_REG_RX_RESERVED_171_167,
      CP_PMA_REG_RX_RESERVED_175_172                  => CP_LANE3_PMA_REG_RX_RESERVED_175_172,
      CP_PMA_REG_CDR_SAT_DET_STATUS_EN                => CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_EN,
      CP_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN          => CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN,
      CP_PMA_REG_CDR_PI_CTRL_RST                      => CP_LANE3_PMA_REG_CDR_PI_CTRL_RST,
      CP_PMA_REG_CDR_PI_CTRL_RST_OW                   => CP_LANE3_PMA_REG_CDR_PI_CTRL_RST_OW,
      CP_PMA_REG_CDR_SAT_DET_RST                      => CP_LANE3_PMA_REG_CDR_SAT_DET_RST,
      CP_PMA_REG_CDR_SAT_DET_RST_OW                   => CP_LANE3_PMA_REG_CDR_SAT_DET_RST_OW,
      CP_PMA_REG_CDR_SAT_DET_STICKY_RST               => CP_LANE3_PMA_REG_CDR_SAT_DET_STICKY_RST,
      CP_PMA_REG_CDR_SAT_DET_STICKY_RST_OW            => CP_LANE3_PMA_REG_CDR_SAT_DET_STICKY_RST_OW,
      CP_PMA_REG_CDR_SIGDET_STATUS_DIS                => CP_LANE3_PMA_REG_CDR_SIGDET_STATUS_DIS,
      CP_PMA_REG_CDR_SAT_DET_TIMER                    => CP_LANE3_PMA_REG_CDR_SAT_DET_TIMER,
      CP_PMA_REG_CDR_SAT_DET_STATUS_VAL               => CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_VAL,
      CP_PMA_REG_CDR_SAT_DET_STATUS_OW                => CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_OW,
      CP_PMA_REG_CDR_TURBO_MODE_EN                    => CP_LANE3_PMA_REG_CDR_TURBO_MODE_EN,
      CP_PMA_REG_RX_RESERVED_190                      => CP_LANE3_PMA_REG_RX_RESERVED_190,
      CP_PMA_REG_RX_RESERVED_193_191                  => CP_LANE3_PMA_REG_RX_RESERVED_193_191,
      CP_PMA_REG_CDR_STATUS_FIFO_EN                   => CP_LANE3_PMA_REG_CDR_STATUS_FIFO_EN,
      CP_PMA_REG_PMA_TEST_SEL                         => CP_LANE3_PMA_REG_PMA_TEST_SEL,
      CP_PMA_REG_OOB_COMWAKE_GAP_MIN                  => CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MIN,
      CP_PMA_REG_OOB_COMWAKE_GAP_MAX                  => CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MAX,
      CP_PMA_REG_OOB_COMINIT_GAP_MIN                  => CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MIN,
      CP_PMA_REG_OOB_COMINIT_GAP_MAX                  => CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MAX,
      CP_PMA_REG_RX_RESERVED_227_226                  => CP_LANE3_PMA_REG_RX_RESERVED_227_226,
      CP_PMA_REG_COMWAKE_STATUS_CLEAR                 => CP_LANE3_PMA_REG_COMWAKE_STATUS_CLEAR,
      CP_PMA_REG_COMINIT_STATUS_CLEAR                 => CP_LANE3_PMA_REG_COMINIT_STATUS_CLEAR,
      CP_PMA_REG_RX_SYNC_RST_N_EN                     => CP_LANE3_PMA_REG_RX_SYNC_RST_N_EN,
      CP_PMA_REG_RX_SYNC_RST_N                        => CP_LANE3_PMA_REG_RX_SYNC_RST_N,
      CP_PMA_REG_RX_RESERVED_233_232                  => CP_LANE3_PMA_REG_RX_RESERVED_233_232,
      CP_PMA_REG_RX_RESERVED_235_234                  => CP_LANE3_PMA_REG_RX_RESERVED_235_234,
      CP_PMA_REG_RX_SATA_COMINIT_OW                   => CP_LANE3_PMA_REG_RX_SATA_COMINIT_OW,
      CP_PMA_REG_RX_SATA_COMINIT                      => CP_LANE3_PMA_REG_RX_SATA_COMINIT,
      CP_PMA_REG_RX_SATA_COMWAKE_OW                   => CP_LANE3_PMA_REG_RX_SATA_COMWAKE_OW,
      CP_PMA_REG_RX_SATA_COMWAKE                      => CP_LANE3_PMA_REG_RX_SATA_COMWAKE,
      CP_PMA_REG_RX_RESERVED_241_240                  => CP_LANE3_PMA_REG_RX_RESERVED_241_240,
      CP_PMA_REG_RX_DCC_DISABLE                       => CP_LANE3_PMA_REG_RX_DCC_DISABLE,
      CP_PMA_REG_RX_RESERVED_243                      => CP_LANE3_PMA_REG_RX_RESERVED_243,
      CP_PMA_REG_RX_SLIP_SEL_EN                       => CP_LANE3_PMA_REG_RX_SLIP_SEL_EN,
      CP_PMA_REG_RX_SLIP_SEL                          => CP_LANE3_PMA_REG_RX_SLIP_SEL,
      CP_PMA_REG_RX_SLIP_EN                           => CP_LANE3_PMA_REG_RX_SLIP_EN,
      CP_PMA_REG_RX_SIGDET_STATUS_SEL                 => CP_LANE3_PMA_REG_RX_SIGDET_STATUS_SEL,
      CP_PMA_REG_RX_SIGDET_FSM_RST_N                  => CP_LANE3_PMA_REG_RX_SIGDET_FSM_RST_N,
      CP_PMA_REG_RX_RESERVED_254                      => CP_LANE3_PMA_REG_RX_RESERVED_254,
      CP_PMA_REG_RX_SIGDET_STATUS                     => CP_LANE3_PMA_REG_RX_SIGDET_STATUS,
      CP_PMA_REG_RX_SIGDET_VTH                        => CP_LANE3_PMA_REG_RX_SIGDET_VTH,
      CP_PMA_REG_RX_SIGDET_GRM                        => CP_LANE3_PMA_REG_RX_SIGDET_GRM,
      CP_PMA_REG_RX_SIGDET_PULSE_EXT                  => CP_LANE3_PMA_REG_RX_SIGDET_PULSE_EXT,
      CP_PMA_REG_RX_SIGDET_CH2_SEL                    => CP_LANE3_PMA_REG_RX_SIGDET_CH2_SEL,
      CP_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW             => CP_LANE3_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW,
      CP_PMA_REG_RX_SIGDET_CHK_WINDOW_EN              => CP_LANE3_PMA_REG_RX_SIGDET_CHK_WINDOW_EN,
      CP_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING        => CP_LANE3_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING,
      CP_PMA_REG_SLIP_FIFO_INV_EN                     => CP_LANE3_PMA_REG_SLIP_FIFO_INV_EN,
      CP_PMA_REG_SLIP_FIFO_INV                        => CP_LANE3_PMA_REG_SLIP_FIFO_INV,
      CP_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL          => CP_LANE3_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL,
      CP_PMA_REG_RX_SIGDET_4OOB_DET_SEL               => CP_LANE3_PMA_REG_RX_SIGDET_4OOB_DET_SEL,
      CP_PMA_REG_RX_RESERVED_285_283                  => CP_LANE3_PMA_REG_RX_RESERVED_285_283,
      CP_PMA_REG_RX_RESERVED_286                      => CP_LANE3_PMA_REG_RX_RESERVED_286,
      CP_PMA_REG_RX_SIGDET_IC_I                       => CP_LANE3_PMA_REG_RX_SIGDET_IC_I,
      CP_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW           => CP_LANE3_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW,
      CP_PMA_REG_RX_OOB_DETECTOR_RESET_N              => CP_LANE3_PMA_REG_RX_OOB_DETECTOR_RESET_N,
      CP_PMA_REG_RX_OOB_DETECTOR_PD_OW                => CP_LANE3_PMA_REG_RX_OOB_DETECTOR_PD_OW,
      CP_PMA_REG_RX_OOB_DETECTOR_PD                   => CP_LANE3_PMA_REG_RX_OOB_DETECTOR_PD,
      CP_PMA_REG_RX_LS_MODE_EN                        => CP_LANE3_PMA_REG_RX_LS_MODE_EN,
      CP_PMA_REG_RX_EQ1_R_SET_TOP                     => CP_LANE3_PMA_REG_RX_EQ1_R_SET_TOP,
      CP_PMA_REG_RX_EQ1_R_SET_FB                      => CP_LANE3_PMA_REG_RX_EQ1_R_SET_FB,
      CP_PMA_REG_RX_EQ1_C_SET_FB                      => CP_LANE3_PMA_REG_RX_EQ1_C_SET_FB,
      CP_PMA_REG_RX_EQ1_OFF                           => CP_LANE3_PMA_REG_RX_EQ1_OFF,
      CP_PMA_REG_RX_EQ2_R_SET_TOP                     => CP_LANE3_PMA_REG_RX_EQ2_R_SET_TOP,
      CP_PMA_REG_RX_EQ2_R_SET_FB                      => CP_LANE3_PMA_REG_RX_EQ2_R_SET_FB,
      CP_PMA_REG_RX_EQ2_C_SET_FB                      => CP_LANE3_PMA_REG_RX_EQ2_C_SET_FB,
      CP_PMA_REG_RX_EQ2_OFF                           => CP_LANE3_PMA_REG_RX_EQ2_OFF,
      CP_PMA_REG_EQ_DAC                               => CP_LANE3_PMA_REG_EQ_DAC,
      CP_PMA_REG_RX_ICTRL_EQ                          => CP_LANE3_PMA_REG_RX_ICTRL_EQ,
      CP_PMA_REG_EQ_DC_CALIB_EN                       => CP_LANE3_PMA_REG_EQ_DC_CALIB_EN,
      CP_PMA_REG_EQ_DC_CALIB_SEL                      => CP_LANE3_PMA_REG_EQ_DC_CALIB_SEL,
      CP_PMA_REG_RX_RESERVED_337_330                  => CP_LANE3_PMA_REG_RX_RESERVED_337_330,
      CP_PMA_REG_RX_RESERVED_345_338                  => CP_LANE3_PMA_REG_RX_RESERVED_345_338,
      CP_PMA_REG_RX_RESERVED_353_346                  => CP_LANE3_PMA_REG_RX_RESERVED_353_346,
      CP_PMA_REG_RX_RESERVED_361_354                  => CP_LANE3_PMA_REG_RX_RESERVED_361_354,
      CP_PMA_CTLE_CTRL_REG_I                          => CP_LANE3_PMA_CTLE_CTRL_REG_I,
      CP_PMA_CFG_RX_LANE_POWERUP                      => CP_LANE3_PMA_CFG_RX_LANE_POWERUP,
      CP_PMA_CFG_RX_PMA_RSTN                          => CP_LANE3_PMA_CFG_RX_PMA_RSTN,
      CP_PMA_INT_PMA_RX_MASK_0                        => CP_LANE3_PMA_INT_PMA_RX_MASK_0,
      CP_PMA_INT_PMA_RX_CLR_0                         => CP_LANE3_PMA_INT_PMA_RX_CLR_0,
      CP_PMA_CFG_CTLE_ADP_RSTN                        => CP_LANE3_PMA_CFG_CTLE_ADP_RSTN,
   
      CP_PMA_REG_TX_PD                                => CP_LANE3_PMA_REG_TX_PD,
      CP_PMA_REG_TX_PD_OW                             => CP_LANE3_PMA_REG_TX_PD_OW,
      CP_PMA_REG_TX_MAIN_PRE_Z                        => CP_LANE3_PMA_REG_TX_MAIN_PRE_Z,
      CP_PMA_REG_TX_MAIN_PRE_Z_OW                     => CP_LANE3_PMA_REG_TX_MAIN_PRE_Z_OW,
      CP_PMA_REG_TX_BEACON_TIMER_SEL                  => CP_LANE3_PMA_REG_TX_BEACON_TIMER_SEL,
      CP_PMA_REG_TX_RXDET_REQ_OW                      => CP_LANE3_PMA_REG_TX_RXDET_REQ_OW,
      CP_PMA_REG_TX_RXDET_REQ                         => CP_LANE3_PMA_REG_TX_RXDET_REQ,
      CP_PMA_REG_TX_BEACON_EN_OW                      => CP_LANE3_PMA_REG_TX_BEACON_EN_OW,
      CP_PMA_REG_TX_BEACON_EN                         => CP_LANE3_PMA_REG_TX_BEACON_EN,
      CP_PMA_REG_TX_EI_EN_OW                          => CP_LANE3_PMA_REG_TX_EI_EN_OW,
      CP_PMA_REG_TX_EI_EN                             => CP_LANE3_PMA_REG_TX_EI_EN,
      CP_PMA_REG_TX_BIT_CONV                          => CP_LANE3_PMA_REG_TX_BIT_CONV,
      CP_PMA_REG_TX_RES_CAL                           => CP_LANE3_PMA_REG_TX_RES_CAL,
      CP_PMA_REG_TX_RESERVED_19                       => CP_LANE3_PMA_REG_TX_RESERVED_19,
      CP_PMA_REG_TX_RESERVED_25_20                    => CP_LANE3_PMA_REG_TX_RESERVED_25_20,
      CP_PMA_REG_TX_RESERVED_33_26                    => CP_LANE3_PMA_REG_TX_RESERVED_33_26,
      CP_PMA_REG_TX_RESERVED_41_34                    => CP_LANE3_PMA_REG_TX_RESERVED_41_34,
      CP_PMA_REG_TX_RESERVED_49_42                    => CP_LANE3_PMA_REG_TX_RESERVED_49_42,
      CP_PMA_REG_TX_RESERVED_57_50                    => CP_LANE3_PMA_REG_TX_RESERVED_57_50,
      CP_PMA_REG_TX_SYNC_OW                           => CP_LANE3_PMA_REG_TX_SYNC_OW,
      CP_PMA_REG_TX_SYNC                              => CP_LANE3_PMA_REG_TX_SYNC,
      CP_PMA_REG_TX_PD_POST                           => CP_LANE3_PMA_REG_TX_PD_POST,
      CP_PMA_REG_TX_PD_POST_OW                        => CP_LANE3_PMA_REG_TX_PD_POST_OW,
      CP_PMA_REG_TX_RESET_N_OW                        => CP_LANE3_PMA_REG_TX_RESET_N_OW,
      CP_PMA_REG_TX_RESET_N                           => CP_LANE3_PMA_REG_TX_RESET_N,
      CP_PMA_REG_TX_RESERVED_64                       => CP_LANE3_PMA_REG_TX_RESERVED_64,
      CP_PMA_REG_TX_RESERVED_65                       => CP_LANE3_PMA_REG_TX_RESERVED_65,
      CP_PMA_REG_TX_BUSWIDTH_OW                       => CP_LANE3_PMA_REG_TX_BUSWIDTH_OW,
      CP_PMA_REG_TX_BUSWIDTH                          => CP_LANE3_PMA_REG_TX_BUSWIDTH,
      CP_PMA_REG_PLL_READY_OW                         => CP_LANE3_PMA_REG_PLL_READY_OW,
      CP_PMA_REG_PLL_READY                            => CP_LANE3_PMA_REG_PLL_READY,
      CP_PMA_REG_TX_RESERVED_72                       => CP_LANE3_PMA_REG_TX_RESERVED_72,
      CP_PMA_REG_TX_RESERVED_73                       => CP_LANE3_PMA_REG_TX_RESERVED_73,
      CP_PMA_REG_TX_RESERVED_74                       => CP_LANE3_PMA_REG_TX_RESERVED_74,
      CP_PMA_REG_EI_PCLK_DELAY_SEL                    => CP_LANE3_PMA_REG_EI_PCLK_DELAY_SEL,
      CP_PMA_REG_TX_RESERVED_77                       => CP_LANE3_PMA_REG_TX_RESERVED_77,
      CP_PMA_REG_TX_RESERVED_83_78                    => CP_LANE3_PMA_REG_TX_RESERVED_83_78,
      CP_PMA_REG_TX_RESERVED_89_84                    => CP_LANE3_PMA_REG_TX_RESERVED_89_84,
      CP_PMA_REG_TX_RESERVED_95_90                    => CP_LANE3_PMA_REG_TX_RESERVED_95_90,
      CP_PMA_REG_TX_RESERVED_101_96                   => CP_LANE3_PMA_REG_TX_RESERVED_101_96,
      CP_PMA_REG_TX_RESERVED_107_102                  => CP_LANE3_PMA_REG_TX_RESERVED_107_102,
      CP_PMA_REG_TX_RESERVED_113_108                  => CP_LANE3_PMA_REG_TX_RESERVED_113_108,
      CP_PMA_REG_TX_AMP_DAC0                          => CP_LANE3_PMA_REG_TX_AMP_DAC0,
      CP_PMA_REG_TX_AMP_DAC1                          => CP_LANE3_PMA_REG_TX_AMP_DAC1,
      CP_PMA_REG_TX_AMP_DAC2                          => CP_LANE3_PMA_REG_TX_AMP_DAC2,
      CP_PMA_REG_TX_AMP_DAC3                          => CP_LANE3_PMA_REG_TX_AMP_DAC3,
      CP_PMA_REG_TX_RESERVED_143_138                  => CP_LANE3_PMA_REG_TX_RESERVED_143_138,
      CP_PMA_REG_TX_MARGIN                            => CP_LANE3_PMA_REG_TX_MARGIN,
      CP_PMA_REG_TX_MARGIN_OW                         => CP_LANE3_PMA_REG_TX_MARGIN_OW,
      CP_PMA_REG_TX_RESERVED_149_148                  => CP_LANE3_PMA_REG_TX_RESERVED_149_148,
      CP_PMA_REG_TX_RESERVED_150                      => CP_LANE3_PMA_REG_TX_RESERVED_150,
      CP_PMA_REG_TX_SWING                             => CP_LANE3_PMA_REG_TX_SWING,
      CP_PMA_REG_TX_SWING_OW                          => CP_LANE3_PMA_REG_TX_SWING_OW,
      CP_PMA_REG_TX_RESERVED_153                      => CP_LANE3_PMA_REG_TX_RESERVED_153,
      CP_PMA_REG_TX_RXDET_THRESHOLD                   => CP_LANE3_PMA_REG_TX_RXDET_THRESHOLD,
      CP_PMA_REG_TX_RESERVED_157_156                  => CP_LANE3_PMA_REG_TX_RESERVED_157_156,
      CP_PMA_REG_TX_BEACON_OSC_CTRL                   => CP_LANE3_PMA_REG_TX_BEACON_OSC_CTRL,
      CP_PMA_REG_TX_RESERVED_160_159                  => CP_LANE3_PMA_REG_TX_RESERVED_160_159,
      CP_PMA_REG_TX_RESERVED_162_161                  => CP_LANE3_PMA_REG_TX_RESERVED_162_161,
      CP_PMA_REG_TX_TX2RX_SLPBACK_EN                  => CP_LANE3_PMA_REG_TX_TX2RX_SLPBACK_EN,
      CP_PMA_REG_TX_PCLK_EDGE_SEL                     => CP_LANE3_PMA_REG_TX_PCLK_EDGE_SEL,
      CP_PMA_REG_TX_RXDET_STATUS_OW                   => CP_LANE3_PMA_REG_TX_RXDET_STATUS_OW,
      CP_PMA_REG_TX_RXDET_STATUS                      => CP_LANE3_PMA_REG_TX_RXDET_STATUS,
      CP_PMA_REG_TX_PRBS_GEN_EN                       => CP_LANE3_PMA_REG_TX_PRBS_GEN_EN,
      CP_PMA_REG_TX_PRBS_GEN_WIDTH_SEL                => CP_LANE3_PMA_REG_TX_PRBS_GEN_WIDTH_SEL,
      CP_PMA_REG_TX_PRBS_SEL                          => CP_LANE3_PMA_REG_TX_PRBS_SEL,
      CP_PMA_REG_TX_UDP_DATA_7_TO_0                   => CP_LANE3_PMA_REG_TX_UDP_DATA_7_TO_0,
      CP_PMA_REG_TX_UDP_DATA_15_TO_8                  => CP_LANE3_PMA_REG_TX_UDP_DATA_15_TO_8,
      CP_PMA_REG_TX_UDP_DATA_19_TO_16                 => CP_LANE3_PMA_REG_TX_UDP_DATA_19_TO_16,
      CP_PMA_REG_TX_RESERVED_192                      => CP_LANE3_PMA_REG_TX_RESERVED_192,
      CP_PMA_REG_TX_FIFO_WP_CTRL                      => CP_LANE3_PMA_REG_TX_FIFO_WP_CTRL,
      CP_PMA_REG_TX_FIFO_EN                           => CP_LANE3_PMA_REG_TX_FIFO_EN,
      CP_PMA_REG_TX_DATA_MUX_SEL                      => CP_LANE3_PMA_REG_TX_DATA_MUX_SEL,
      CP_PMA_REG_TX_ERR_INSERT                        => CP_LANE3_PMA_REG_TX_ERR_INSERT,
      CP_PMA_REG_TX_RESERVED_203_200                  => CP_LANE3_PMA_REG_TX_RESERVED_203_200,
      CP_PMA_REG_TX_RESERVED_204                      => CP_LANE3_PMA_REG_TX_RESERVED_204,
      CP_PMA_REG_TX_SATA_EN                           => CP_LANE3_PMA_REG_TX_SATA_EN,
      CP_PMA_REG_TX_RESERVED_207_206                  => CP_LANE3_PMA_REG_TX_RESERVED_207_206,
      CP_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW             => CP_LANE3_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW,
      CP_PMA_REG_RATE_CHANGE_TXPCLK_ON                => CP_LANE3_PMA_REG_RATE_CHANGE_TXPCLK_ON,
      CP_PMA_REG_TX_CFG_POST1                         => CP_LANE3_PMA_REG_TX_CFG_POST1,
      CP_PMA_REG_TX_CFG_POST2                         => CP_LANE3_PMA_REG_TX_CFG_POST2,
      CP_PMA_REG_TX_DEEMP                             => CP_LANE3_PMA_REG_TX_DEEMP,
      CP_PMA_REG_TX_DEEMP_OW                          => CP_LANE3_PMA_REG_TX_DEEMP_OW,
      CP_PMA_REG_TX_RESERVED_224_223                  => CP_LANE3_PMA_REG_TX_RESERVED_224_223,
      CP_PMA_REG_TX_RESERVED_225                      => CP_LANE3_PMA_REG_TX_RESERVED_225,
      CP_PMA_REG_TX_RESERVED_229_226                  => CP_LANE3_PMA_REG_TX_RESERVED_229_226,
      CP_PMA_REG_TX_OOB_DELAY_SEL                     => CP_LANE3_PMA_REG_TX_OOB_DELAY_SEL,
      CP_PMA_REG_TX_POLARITY                          => CP_LANE3_PMA_REG_TX_POLARITY,
      CP_PMA_REG_ANA_TX_JTAG_DATA_O_SEL               => CP_LANE3_PMA_REG_ANA_TX_JTAG_DATA_O_SEL,
      CP_PMA_REG_TX_RESERVED_236                      => CP_LANE3_PMA_REG_TX_RESERVED_236,
      CP_PMA_REG_TX_LS_MODE_EN                        => CP_LANE3_PMA_REG_TX_LS_MODE_EN,
      CP_PMA_REG_TX_JTAG_MODE_EN_OW                   => CP_LANE3_PMA_REG_TX_JTAG_MODE_EN_OW,
      CP_PMA_REG_TX_JTAG_MODE_EN                      => CP_LANE3_PMA_REG_TX_JTAG_MODE_EN,
      CP_PMA_REG_RX_JTAG_MODE_EN_OW                   => CP_LANE3_PMA_REG_RX_JTAG_MODE_EN_OW,
      CP_PMA_REG_RX_JTAG_MODE_EN                      => CP_LANE3_PMA_REG_RX_JTAG_MODE_EN,
      CP_PMA_REG_RX_JTAG_OE                           => CP_LANE3_PMA_REG_RX_JTAG_OE,
      CP_PMA_REG_RX_ACJTAG_VHYSTSEL                   => CP_LANE3_PMA_REG_RX_ACJTAG_VHYSTSEL,
      CP_PMA_REG_TX_RES_CAL_EN                        => CP_LANE3_PMA_REG_TX_RES_CAL_EN,
      CP_PMA_REG_RX_TERM_MODE_CTRL                    => CP_LANE3_PMA_REG_RX_TERM_MODE_CTRL,
      CP_PMA_REG_TX_RESERVED_251_250                  => CP_LANE3_PMA_REG_TX_RESERVED_251_250,
      CP_PMA_REG_PLPBK_TXPCLK_EN                      => CP_LANE3_PMA_REG_PLPBK_TXPCLK_EN,
      CP_PMA_REG_TX_RESERVED_253                      => CP_LANE3_PMA_REG_TX_RESERVED_253,
      CP_PMA_REG_TX_RESERVED_254                      => CP_LANE3_PMA_REG_TX_RESERVED_254,
      CP_PMA_REG_TX_RESERVED_255                      => CP_LANE3_PMA_REG_TX_RESERVED_255,
      CP_PMA_REG_TX_RESERVED_256                      => CP_LANE3_PMA_REG_TX_RESERVED_256,
      CP_PMA_REG_TX_RESERVED_257                      => CP_LANE3_PMA_REG_TX_RESERVED_257,
      CP_PMA_REG_TX_PH_SEL                            => CP_LANE3_PMA_REG_TX_PH_SEL,
      CP_PMA_REG_TX_CFG_PRE                           => CP_LANE3_PMA_REG_TX_CFG_PRE, 
      CP_PMA_REG_TX_CFG_MAIN                          => CP_LANE3_PMA_REG_TX_CFG_MAIN,
      CP_PMA_REG_CFG_POST                             => CP_LANE3_PMA_REG_CFG_POST,
      CP_PMA_REG_PD_MAIN                              => CP_LANE3_PMA_REG_PD_MAIN,
      CP_PMA_REG_PD_PRE                               => CP_LANE3_PMA_REG_PD_PRE,
      CP_PMA_REG_TX_LS_DATA                           => CP_LANE3_PMA_REG_TX_LS_DATA,
      CP_PMA_REG_TX_DCC_BUF_SZ_SEL                    => CP_LANE3_PMA_REG_TX_DCC_BUF_SZ_SEL,
      CP_PMA_REG_TX_DCC_CAL_CUR_TUNE                  => CP_LANE3_PMA_REG_TX_DCC_CAL_CUR_TUNE,
      CP_PMA_REG_TX_DCC_CAL_EN                        => CP_LANE3_PMA_REG_TX_DCC_CAL_EN,
      CP_PMA_REG_TX_DCC_CUR_SS                        => CP_LANE3_PMA_REG_TX_DCC_CUR_SS,
      CP_PMA_REG_TX_DCC_FA_CTRL                       => CP_LANE3_PMA_REG_TX_DCC_FA_CTRL,
      CP_PMA_REG_TX_DCC_RI_CTRL                       => CP_LANE3_PMA_REG_TX_DCC_RI_CTRL,
      CP_PMA_REG_ATB_SEL_2_TO_0                       => CP_LANE3_PMA_REG_ATB_SEL_2_TO_0,
      CP_PMA_REG_ATB_SEL_9_TO_3                       => CP_LANE3_PMA_REG_ATB_SEL_9_TO_3,
      CP_PMA_REG_TX_CFG_7_TO_0                        => CP_LANE3_PMA_REG_TX_CFG_7_TO_0,
      CP_PMA_REG_TX_CFG_15_TO_8                       => CP_LANE3_PMA_REG_TX_CFG_15_TO_8,
      CP_PMA_REG_TX_CFG_23_TO_16                      => CP_LANE3_PMA_REG_TX_CFG_23_TO_16,
      CP_PMA_REG_TX_CFG_31_TO_24                      => CP_LANE3_PMA_REG_TX_CFG_31_TO_24,
      CP_PMA_REG_TX_OOB_EI_EN                         => CP_LANE3_PMA_REG_TX_OOB_EI_EN,
      CP_PMA_REG_TX_OOB_EI_EN_OW                      => CP_LANE3_PMA_REG_TX_OOB_EI_EN_OW,
      CP_PMA_REG_TX_BEACON_EN_DELAYED                 => CP_LANE3_PMA_REG_TX_BEACON_EN_DELAYED,
      CP_PMA_REG_TX_BEACON_EN_DELAYED_OW              => CP_LANE3_PMA_REG_TX_BEACON_EN_DELAYED_OW,
      CP_PMA_REG_TX_JTAG_DATA                         => CP_LANE3_PMA_REG_TX_JTAG_DATA,
      CP_PMA_REG_TX_RXDET_TIMER_SEL                   => CP_LANE3_PMA_REG_TX_RXDET_TIMER_SEL,
      CP_PMA_REG_TX_CFG1_7_0                          => CP_LANE3_PMA_REG_TX_CFG1_7_0,
      CP_PMA_REG_TX_CFG1_15_8                         => CP_LANE3_PMA_REG_TX_CFG1_15_8,
      CP_PMA_REG_TX_CFG1_23_16                        => CP_LANE3_PMA_REG_TX_CFG1_23_16,
      CP_PMA_REG_TX_CFG1_31_24                        => CP_LANE3_PMA_REG_TX_CFG1_31_24,
      CP_PMA_REG_CFG_LANE_POWERUP                     => CP_LANE3_PMA_REG_CFG_LANE_POWERUP,
      CP_PMA_REG_CFG_PMA_POR_N                        => CP_LANE3_PMA_REG_CFG_PMA_POR_N,
      CP_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH          => CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH,
      CP_PMA_REG_CFG_TX_LANE_POWERUP_PISO             => CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_PISO,
      CP_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER           => CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER,
      CP_PMA_REG_CFG_TX_PMA_RSTN                      => CP_LANE3_PMA_REG_CFG_TX_PMA_RSTN,
     
      CP_GRSN_DIS                                     => CP_GRSN_DIS,
      CP_HSST_EN                                      => CP_HSST_EN,
      CP_CFG_RSTN                                     => CP_CFG_RSTN_3
   )
   port map
   (
      //PCS                                                                                                            
      TEST_SE_N                                       => TEST_SE_N,                                                    
      TEST_MODE_N                                     => TEST_MODE_N,                                                  
      TEST_RSTN                                       => TEST_RSTN,                                                    
      TEST_SI0                                        => TEST_SI15,                                                    
      TEST_SI1                                        => TEST_SI16,                                                    
      TEST_SI2                                        => TEST_SI17,                                                    
      TEST_SI3                                        => TEST_SI18,                                                    
      TEST_SI4                                        => TEST_SI19,                                                    
      TEST_SO0                                        => TEST_SO15,                                                    
      TEST_SO1                                        => TEST_SO16,                                                    
      TEST_SO2                                        => TEST_SO17,                                                    
      TEST_SO3                                        => TEST_SO18,                                                    
      TEST_SO4                                        => TEST_SO19,                                                    
      //PMA                                                                                                            
      FOR_PMA_TEST_MODE_N                             => FOR_PMA_TEST_MODE_N,                                          
      FOR_PMA_TEST_SE_N                               => FOR_PMA_TEST_SE_N[1:0],                                       
      FOR_PMA_TEST_CLK                                => FOR_PMA_TEST_CLK[1:0],                                        
      FOR_PMA_TEST_RSTN                               => FOR_PMA_TEST_RSTN[1:0],                                       
      FOR_PMA_TEST_SI                                 => FOR_PMA_TEST_SI_CH3,                                          
      FOR_PMA_TEST_SO                                 => FOR_PMA_TEST_SO_CH3,                                          
                                                                                                                       
  //////////SRB related/////////////////////////////////////////////////////////                                       
      //PAD                                                                                                            
      PAD_RX_SDP                                      => PAD_RX_SDP3,                                                  
      PAD_RX_SDN                                      => PAD_RX_SDN3,                                                  
      PAD_TX_SDP                                      => PAD_TX_SDP3,                                                  
      PAD_TX_SDN                                      => PAD_TX_SDN3,                                                  
      //if with user logic                                                                                             
      RX_CLK_FR_CORE                                  => RX3_CLK_FR_CORE,                                              
      RCLK2_FR_CORE                                   => RCLK2_3_FR_CORE,                                              
      TX_CLK_FR_CORE                                  => TX3_CLK_FR_CORE,                                              
      TCLK2_FR_CORE                                   => TCLK2_3_FR_CORE,                                              
      HSST_RST                                        => HSST_RST,                                                     
      PCS_RX_RST                                      => PCS_RX_RST_3,                                                 
      PCS_TX_RST                                      => PCS_TX_RST_3,                                                 
      PCS_CB_RST                                      => PCS_CB_RST_3,                                                 
      RXGEAR_SLIP                                     => RXGEAR_SLIP_3,                                                
      CFG_CLK                                         => CFG_CLK_3,                                                    
      CFG_RST                                         => CFG_RST_3,                                                    
      CFG_PSEL                                        => CFG_PSEL_3,                                                   
      CFG_ENABLE                                      => CFG_ENABLE_3,                                                 
      CFG_WRITE                                       => CFG_WRITE_3,                                                  
      CFG_ADDR                                        => CFG_ADDR_3,                                                   
      CFG_WDATA                                       => CFG_WDATA_3,                                                  
      TDATA                                           => TDATA_3,                                                      
      PCS_WORD_ALIGN_EN                               => PCS_WORD_ALIGN_EN[3],                                         
      RX_POLARITY_INVERT                              => RX_POLARITY_INVERT[3],                                        
      CEB_ADETECT_EN                                  => CEB_ADETECT_EN[3],                                            
      PCS_MCB_EXT_EN                                  => PCS_MCB_EXT_EN[3],                                            
      PCS_NEAREND_LOOP                                => PCS_NEAREND_LOOP[3],                                          
      PCS_FAREND_LOOP                                 => PCS_FAREND_LOOP[3],                                           
      PMA_NEAREND_PLOOP                               => PMA_NEAREND_PLOOP[3],                                         
      PMA_NEAREND_SLOOP                               => PMA_NEAREND_SLOOP[3],                                         
      PMA_FAREND_PLOOP                                => PMA_FAREND_PLOOP[3],                                          
      CFG_READY                                       => CFG_READY_3,                                                  
      CFG_RDATA                                       => CFG_RDATA_3,                                                  
      CFG_INT                                         => CFG_INT_3,                                                    
      PCS_RX_MCB_STATUS                               => PCS_RX_MCB_STATUS[3],                                         
      PCS_LSM_SYNCED                                  => PCS_LSM_SYNCED[3],                                            
      RDATA                                           => RDATA_3,                                                      
      RCLK2FABRIC                                     => RCLK2FABRIC[3],                                               
      TCLK2FABRIC                                     => TCLK2FABRIC[3],                                               
      //Lanes                                                                                                          
      CA_ALIGN_RX                                     => CA_ALIGN_RX[3],                                               
      CA_ALIGN_TX                                     => CA_ALIGN_TX[3],                                               
      LANE_PD                                         => LANE_PD_3,                                                    
      LANE_RST                                        => LANE_RST_3,                                                   
      RX_LANE_PD                                      => RX_LANE_PD_3,                                                 
      RX_PMA_RST                                      => RX_PMA_RST_3,                                                 
      CTLE_ADP_RST                                    => CTLE_ADP_RST_3,                                               
      RX_SIGDET_STATUS                                => RX_SIGDET_STATUS_3,                                           
      RX_SATA_COMINIT                                 => RX_SATA_COMINIT_3,                                            
      RX_SATA_COMWAKE                                 => RX_SATA_COMWAKE_3,                                            
      RX_LS_DATA                                      => RX_LS_DATA_3,                                                 
      RX_READY                                        => RX_READY_3,                                                   
      TEST_STATUS                                     => TEST_STATUS_3,                                                
      TX_DEEMP                                        => TX_DEEMP_3,                                                   
      TX_LS_DATA                                      => TX_LS_DATA_3,                                                 
      TX_BEACON_EN                                    => TX_BEACON_EN_3,                                               
      TX_SWING                                        => TX_SWING_3,                                                   
      TX_RXDET_REQ                                    => TX_RXDET_REQ_3,                                               
      TX_RATE                                         => TX_RATE_3,                                                    
      TX_BUSWIDTH                                     => TX_BUSWIDTH_3,                                                
      TX_MARGIN                                       => TX_MARGIN_3,                                                  
      TX_RXDET_STATUS                                 => TX_RXDET_STATUS_3,                                            
      TX_PMA_RST                                      => TX_PMA_RST_3,                                                 
      TX_LANE_PD_CLKPATH                              => TX_LANE_PD_CLKPATH_3,                                         
      TX_LANE_PD_PISO                                 => TX_LANE_PD_PISO_3,                                            
      TX_LANE_PD_DRIVER                               => TX_LANE_PD_DRIVER_3,                                          
      RX_RATE                                         => RX_RATE_3,                                                    
      RX_BUSWIDTH                                     => RX_BUSWIDTH_3,                                                
      RX_HIGHZ                                        => RX_HIGHZ_3,                                                   
      CIM_CLK_ALIGNER_RX                              => CIM_CLK_ALIGNER_RX3,                                          
      CIM_CLK_ALIGNER_TX                              => CIM_CLK_ALIGNER_TX3,                                          
      CIM_DYN_DLY_SEL_RX                              => CIM_DYN_DLY_SEL_RX3,                                          
      CIM_DYN_DLY_SEL_TX                              => CIM_DYN_DLY_SEL_TX3,                                          
      CIM_START_ALIGN_RX                              => CIM_START_ALIGN_RX3,                                          
      CIM_START_ALIGN_TX                              => CIM_START_ALIGN_TX3,                                          
                                                                                                                       
  //////////New added signal/////////////////////////////////////////////////////////                                  
      //PMA_RCLK                                        => ,                                      
      MCB_RCLK                                        => ntSIG_OUT_3,                                                   
                                                                                                                       
      SYNC                                            => SYNC_CH3,                                 
                                                                                                                       
      RATE_CHANGE                                     => RATE_CHANGE_CH3,                        
                                                                                                                       
      PLL_LOCK_SEL                                    => PLL_LOCK_SEL_3,                          
                                                                                                                       
  //////////cin and cout/////////////////////////////////////////////////////////                                      
      RFIFO_EN_CB_CIN                                 => ntRFIFO_EN_CB_COUT_2,                                            
      RFIFO_EN_AFTER_CTC_CIN                          => ntRFIFO_EN_AFTER_CTC_COUT_2,                                    
      RFIFO_EN_AFTER_CTC_GB_CIN                       => ntRFIFO_EN_AFTER_CTC_GB_COUT_2,                                  
      RFIFO_EN_BRIDGE_CIN                             => ntRFIFO_EN_BRIDGE_COUT_2,                                        
      TFIFO_EN_PCS_TX_CIN                             => ntTFIFO_EN_PCS_TX_COUT_2,                                       
      TFIFO_EN_BRIDGE_CIN                             => ntTFIFO_EN_BRIDGE_COUT_2,                                     
      PCS_TCLK_EN_CIN                                 => ntPCS_TCLK_EN_COUT_2,                                           
      GEAR_TCLK_EN_CIN                                => ntGEAR_TCLK_EN_COUT_2,                                                
      APATTERN_MATCH_LSB_CIN                          => ntAPATTERN_MATCH_LSB_COUT_2,                                   
      APATTERN_MATCH_MSB_CIN                          => ntAPATTERN_MATCH_MSB_COUT_2,                                  
      //APATTERN_STATUS_CIN                                                                
      APATTERN_SEACHING_PROC_CIN                      => ntAPATTERN_SEACHING_PROC_COUT_2,                                
      CB_RCLK_EN_CIN                                  => ntCB_RCLK_EN_COUT_2,                                                   
      AFTER_CTC_RCLK_EN_CIN                           => ntAFTER_CTC_RCLK_EN_COUT_2,                                     
      AFTER_CTC_RCLK_EN_GB_CIN                        => ntAFTER_CTC_RCLK_EN_GB_COUT_2,                                  
      SKIP_ADD_MCB_CIN                                => ntSKIP_ADD_MCB_COUT_2,                                          
      SKIP_DEL_MCB_CIN                                => ntSKIP_DEL_MCB_COUT_2,                                          
      SKIP_DEL_LSB_MCB_CIN                            => ntSKIP_DEL_LSB_MCB_COUT_2,                                      
      SKIP_ADD_LSB_MCB_CIN                            => ntSKIP_ADD_LSB_MCB_COUT_2,                                      
      CTC_RD_FIFO_CIN                                 => ntCTC_RD_FIFO_COUT_2,                                           
                                                                                                                       
      //APATTERN_MATCH_LSB_COUT                         => ,                                                             
      //APATTERN_MATCH_MSB_COUT                         => ,                                                             
      APATTERN_STATUS_COUT                            => ntAPATTERN_STATUS_CIN_2,                                       
      //APATTERN_SEACHING_PROC_COUT                     => ,                                                             
      //RFIFO_EN_CB_COUT                                => ,                                                             
      //RFIFO_EN_BRIDGE_COUT                            => ,                                                             
      //RFIFO_EN_AFTER_CTC_COUT                         => ,                                                             
      //RFIFO_EN_AFTER_CTC_GB_COUT                      => ,                                                             
      //CB_RCLK_EN_COUT                                 => ,                                                             
      ////AFTER_CTC_RCLK_EN_COUT                          => ,                                                             
      //AFTER_CTC_RCLK_EN_GB_COUT                       => ,                                                             
      //TFIFO_EN_PCS_TX_COUT                            => ,                                                             
      //TFIFO_EN_BRIDGE_COUT                            => ,                                                             
      //PCS_TCLK_EN_COUT                                => ,                                                             
      //GEAR_TCLK_EN_COUT                               => ,                                                             
      //SKIP_ADD_MCB_COUT                               => ,                                                             
      //SKIP_DEL_MCB_COUT                               => ,                                                             
      //SKIP_ADD_LSB_MCB_COUT                           => ,                                                             
      //SKIP_DEL_LSB_MCB_COUT                           => ,                                                             
      //CTC_RD_FIFO_COUT                                => ,                                                             
                                                                                                                       
  //////////from PLL/////////////////////////////////////////////////////////                                          
      //clk                                                                                                            
      CLK_TXP                                         => CLK_TXP_3,                                                    
      CLK_TXN                                         => CLK_TXN_3,                                                    
      CLK_RX0                                         => CLK_RX0_3,                                                    
      CLK_RX180                                       => CLK_RX180_3,                                                  
      CLK_RX90                                        => CLK_RX90_3,                                                   
      CLK_RX270                                       => CLK_RX270_3,                                                  
                                                                                                                       
      //others                                                                                                         
      PLL_PD_I                                        => PLL_PD_I_3,                                                   
      PLL_RESET_I                                     => PLL_RESET_I_3,                                                
      PLL_REFCLK_I                                    => PLL_REFCLK_I_3,                                               
                                                                                                                       
      PLL_RES_TRIM_I                                  => RESCAL_I_CODE_O_0,                                            
                                                                                                                       
  //////////out////////////////////////////////////////////////////////                                                
    TXPCLK_PLL                                      => TXPCLK_PLL_3 
   );  


    device HSSTLP_PLL U0_HSSTLP_PLL
   parameter map
   (
      CP_TX_SYNCK_SEL                          => CP_PLL0_TX_SYNCK_SEL,
      CP_TX_SYNCK_PD                           => CP_PLL0_TX_SYNCK_PD,
      CP_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL      => CP_PLL0_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL,
  
      //module pma_bg_v2i,Altered in 2019/8/24
      CP_PMA_PLL_REG_BG_TRIM                   => CP_PMA_PLL_REG_BG_TRIM,
      CP_PMA_PLL_REG_IBUP_A1                   => CP_PMA_PLL_REG_IBUP_A1,
      CP_PMA_PLL_REG_IBUP_A2                   => CP_PMA_PLL_REG_IBUP_A2,
      CP_PMA_PLL_REG_IBUP_PD                   => CP_PMA_PLL_REG_IBUP_PD,
      CP_PMA_PLL_REG_V2I_BIAS_SEL              => CP_PMA_PLL_REG_V2I_BIAS_SEL,
      CP_PMA_PLL_REG_V2I_EN                    => CP_PMA_PLL_REG_V2I_EN,
      CP_PMA_PLL_REG_V2I_TB_SEL                => CP_PMA_PLL_REG_V2I_TB_SEL,
      CP_PMA_PLL_REG_V2I_RCALTEST_PD           => CP_PMA_PLL_REG_V2I_RCALTEST_PD,
      CP_PMA_PLL_REG_RES_CAL_TEST              => CP_PMA_PLL_REG_RES_CAL_TEST,
      CP_PMA_RES_CAL_DIV                       => CP_PMA_RES_CAL_DIV,
      CP_PMA_RES_CAL_CLK_SEL                   => CP_PMA_RES_CAL_CLK_SEL,
  
      CP_PMA_PLL_REG_PLL_PFDDELAY_EN           => CP_PLL0_PMA_PLL_REG_PLL_PFDDELAY_EN,
      CP_PMA_PLL_REG_PFDDELAYSEL               => CP_PLL0_PMA_PLL_REG_PFDDELAYSEL,
      CP_PMA_PLL_REG_PLL_VCTRL_SET             => CP_PLL0_PMA_PLL_REG_PLL_VCTRL_SET,
      CP_PMA_PLL_REG_READY_OR_LOCK             => CP_PLL0_PMA_PLL_REG_READY_OR_LOCK,
      CP_PMA_PLL_REG_PLL_CP                    => CP_PLL0_PMA_PLL_REG_PLL_CP,
      CP_PMA_PLL_REG_PLL_REFDIV                => CP_PLL0_PMA_PLL_REG_PLL_REFDIV,
      CP_PMA_PLL_REG_PLL_LOCKDET_EN            => CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN,
      CP_PMA_PLL_REG_PLL_READY                 => CP_PLL0_PMA_PLL_REG_PLL_READY,
      CP_PMA_PLL_REG_PLL_READY_OW              => CP_PLL0_PMA_PLL_REG_PLL_READY_OW,
      CP_PMA_PLL_REG_PLL_FBDIV                 => CP_PLL0_PMA_PLL_REG_PLL_FBDIV,
      CP_PMA_PLL_REG_LPF_RES                   => CP_PLL0_PMA_PLL_REG_LPF_RES,
      CP_PMA_PLL_REG_JTAG_OE                   => CP_PLL0_PMA_PLL_REG_JTAG_OE,
      CP_PMA_PLL_REG_JTAG_VHYSTSEL             => CP_PLL0_PMA_PLL_REG_JTAG_VHYSTSEL,
      CP_PMA_PLL_REG_PLL_LOCKDET_EN_OW         => CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN_OW,
      CP_PMA_PLL_REG_PLL_LOCKDET_FBCT          => CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_FBCT,
      CP_PMA_PLL_REG_PLL_LOCKDET_ITER          => CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_ITER,
      CP_PMA_PLL_REG_PLL_LOCKDET_MODE          => CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_MODE,
      CP_PMA_PLL_REG_PLL_LOCKDET_LOCKCT        => CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_LOCKCT,
      CP_PMA_PLL_REG_PLL_LOCKDET_REFCT         => CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_REFCT,
      CP_PMA_PLL_REG_PLL_LOCKDET_RESET_N       => CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N,
      CP_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW    => CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW,
      CP_PMA_PLL_REG_PLL_LOCKED                => CP_PLL0_PMA_PLL_REG_PLL_LOCKED,
      CP_PMA_PLL_REG_PLL_LOCKED_OW             => CP_PLL0_PMA_PLL_REG_PLL_LOCKED_OW,
      CP_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR   => CP_PLL0_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR,
      CP_PMA_PLL_REG_PLL_UNLOCKED              => CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED,
      CP_PMA_PLL_REG_PLL_UNLOCKDET_ITER        => CP_PLL0_PMA_PLL_REG_PLL_UNLOCKDET_ITER,
      CP_PMA_PLL_REG_PLL_UNLOCKED_OW           => CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_OW,
      CP_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR => CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR,
      CP_PMA_PLL_REG_I_CTRL_MAX                => CP_PLL0_PMA_PLL_REG_I_CTRL_MAX,
      CP_PMA_PLL_REG_REFCLK_TEST_EN            => CP_PLL0_PMA_PLL_REG_REFCLK_TEST_EN,
      CP_PMA_PLL_REG_RESCAL_EN                 => CP_PLL0_PMA_PLL_REG_RESCAL_EN,
      CP_PMA_PLL_REG_I_CTRL_MIN                => CP_PLL0_PMA_PLL_REG_I_CTRL_MIN,
      CP_PMA_PLL_REG_RESCAL_DONE_OW            => CP_PLL0_PMA_PLL_REG_RESCAL_DONE_OW,
      CP_PMA_PLL_REG_RESCAL_DONE_VAL           => CP_PLL0_PMA_PLL_REG_RESCAL_DONE_VAL,
      CP_PMA_PLL_REG_RESCAL_I_CODE             => CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE,
      CP_PMA_PLL_REG_RESCAL_I_CODE_OW          => CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_OW,
      CP_PMA_PLL_REG_RESCAL_I_CODE_PMA         => CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_PMA,
      CP_PMA_PLL_REG_RESCAL_I_CODE_VAL         => CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_VAL,
      CP_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW     => CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW,
      CP_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL    => CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL,
      CP_PMA_PLL_REG_RESCAL_ITER_VALID_SEL     => CP_PLL0_PMA_PLL_REG_RESCAL_ITER_VALID_SEL,
      CP_PMA_PLL_REG_RESCAL_RESET_N_OW         => CP_PLL0_PMA_PLL_REG_RESCAL_RESET_N_OW,
      CP_PMA_PLL_REG_RESCAL_RST_N_VAL          => CP_PLL0_PMA_PLL_REG_RESCAL_RST_N_VAL,
      CP_PMA_PLL_REG_RESCAL_WAIT_SEL           => CP_PLL0_PMA_PLL_REG_RESCAL_WAIT_SEL,
      CP_PMA_PLL_REFCLK2LANE_PD_L              => CP_PLL0_PMA_PLL_REFCLK2LANE_PD_L,
      CP_PMA_PLL_REFCLK2LANE_PD_R              => CP_PLL0_PMA_PLL_REFCLK2LANE_PD_R,
      CP_PMA_PLL_REG_LOCKDET_REPEAT            => CP_PLL0_PMA_PLL_REG_LOCKDET_REPEAT,
      CP_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR      => CP_PLL0_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR,
      CP_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR     => CP_PLL0_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR,
      CP_PMA_PLL_REG_TEST_SEL                  => CP_PLL0_PMA_PLL_REG_TEST_SEL,
      CP_PMA_PLL_REG_TEST_V_EN                 => CP_PLL0_PMA_PLL_REG_TEST_V_EN,
      CP_PMA_PLL_REG_TEST_SIG_HALF_EN          => CP_PLL0_PMA_PLL_REG_TEST_SIG_HALF_EN,
      CP_PMA_PLL_REG_REFCLK_PAD_SEL            => CP_PLL0_PMA_PLL_REG_REFCLK_PAD_SEL,
      CP_PARM_CFG_HSST_RSTN                    => CP_PLL0_PARM_CFG_HSST_RSTN,      
      CP_PARM_PLL_POWERUP                      => CP_PLL0_PARM_PLL_POWERUP,
      CP_PARM_PLL_RSTN                         => CP_PLL0_PARM_PLL_RSTN,
  
      CP_CFG_RSTN                              => CP_CFG_RSTN_PLL_0,
      CP_GRSN_DIS                              => CP_GRSN_DIS,
      CP_HSST_EN                               => CP_HSST_EN
   )
   port map
   (
 //////////DFT related/////////////////////////////////////////////////////////
     //PCS
     TEST_SE_N                                => TEST_SE_N,
     TEST_MODE_N                              => TEST_MODE_N,
     TEST_RSTN                                => TEST_RSTN,
     TEST_SI                                  => TEST_SI20,
     TEST_SO                                  => TEST_SO20,
 
     //PMA
     FOR_PMA_TEST_MODE_N                      => FOR_PMA_TEST_MODE_N,
     FOR_PMA_TEST_SE_N                        => FOR_PMA_TEST_SE_N[2],
     FOR_PMA_TEST_CLK                         => FOR_PMA_TEST_CLK[2],
     FOR_PMA_TEST_RSTN                        => FOR_PMA_TEST_RSTN[2],
     FOR_PMA_TEST_SI                          => FOR_PMA_TEST_SI_PLL0,
     FOR_PMA_TEST_SO                          => FOR_PMA_TEST_SO_PLL0,
 
 //////////SRB related/////////////////////////////////////////////////////////
     //PAD
     REFCLK_CML_P                             => REFCLK_CML_P_0,
     REFCLK_CML_N                             => REFCLK_CML_N_0,
 
     //if with user logic
     CFG_CLK_PLL                              => CFG_CLK_PLL_0,
     CFG_RST_PLL                              => CFG_RST_PLL_0,
     CFG_PSEL_PLL                             => CFG_PSEL_PLL_0,
     CFG_ENABLE_PLL                           => CFG_ENABLE_PLL_0,
     CFG_WRITE_PLL                            => CFG_WRITE_PLL_0,
     CFG_ADDR_PLL                             => CFG_ADDR_PLL_0,
     CFG_WDATA_PLL                            => CFG_WDATA_PLL_0,
     CFG_READY_PLL                            => CFG_READY_PLL_0,
     CFG_RDATA_PLL                            => CFG_RDATA_PLL_0,
     CFG_INT_PLL                              => CFG_INT_PLL_0,
     RESCAL_RST_I                             => RESCAL_RST_I_0,
     RESCAL_I_CODE_I                          => RESCAL_I_CODE_I_0,
     PLL_LOCKDET_RST_I                        => PLL_LOCKDET_RST_I_0,
     RESCAL_I_CODE_O                          => RESCAL_I_CODE_O_0,
     REFCK2CORE                               => REFCK2CORE_0,
     PLL_REF_CLK                              => PLL_REF_CLK_0,
     PLL_RST                                  => PLL_RST_0, 
     PLLPOWERDOWN                             => PLLPOWERDOWN_0,
     PLL_READY                                => PLL_READY_0,
     LANE_SYNC                                => LANE_SYNC_0,
     RATE_CHANGE_TCLK_ON                      => RATE_CHANGE_TCLK_ON_0,
 
 //////////clk/////////////////////////////////////////////////////////
     PLL_CLK0                                 => PLL_CLK0_0,
     PLL_CLK90                                => PLL_CLK90_0,
     PLL_CLK180                               => PLL_CLK180_0,
     PLL_CLK270                               => PLL_CLK270_0,
 
     //PLL_CFG_REV_O                            => PLL_CFG_REV_O_0,//not port
 
 //////////New added/////////////////////////////////////////////////////////
     SYNC_PLL                                 => SYNC_PLL_0,
 
     TXPCLK_PLL_SELECTED                      => TXPCLK_PLL_SELECTED_0,
     RATE_CHANGE_PLL                          => RATE_CHANGE_PLL_0,
 
     PLL_PD_O                                 => PLL_PD_O_0,
     PLL_RST_O                                => PLL_RST_O_0,
     PMA_PLL_READY_O                          => PMA_PLL_READY_O_0,
 
 //////////Used/////////////////////////////////////////////////////////
     //output
     PLL_REFCLK_LANE_L                        => PLL_REFCLK_LANE_L_0
   );     
 
   device HSSTLP_PLL U1_HSSTLP_PLL
   parameter map
   (
      CP_TX_SYNCK_SEL                          => CP_PLL1_TX_SYNCK_SEL,
      CP_TX_SYNCK_PD                           => CP_PLL1_TX_SYNCK_PD,
      CP_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL      => CP_PLL1_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL,                       
  
      //module pma_bg_v2i,Altered in 2019/8/24
      CP_PMA_PLL_REG_BG_TRIM                   => CP_PMA_PLL_REG_BG_TRIM,
      CP_PMA_PLL_REG_IBUP_A1                   => CP_PMA_PLL_REG_IBUP_A1,
      CP_PMA_PLL_REG_IBUP_A2                   => CP_PMA_PLL_REG_IBUP_A2,
      CP_PMA_PLL_REG_IBUP_PD                   => CP_PMA_PLL_REG_IBUP_PD,
      CP_PMA_PLL_REG_V2I_BIAS_SEL              => CP_PMA_PLL_REG_V2I_BIAS_SEL,
      CP_PMA_PLL_REG_V2I_EN                    => CP_PMA_PLL_REG_V2I_EN,
      CP_PMA_PLL_REG_V2I_TB_SEL                => CP_PMA_PLL_REG_V2I_TB_SEL,
      CP_PMA_PLL_REG_V2I_RCALTEST_PD           => CP_PMA_PLL_REG_V2I_RCALTEST_PD,
      CP_PMA_PLL_REG_RES_CAL_TEST              => CP_PMA_PLL_REG_RES_CAL_TEST,
      CP_PMA_RES_CAL_DIV                       => CP_PMA_RES_CAL_DIV,
      CP_PMA_RES_CAL_CLK_SEL                   => CP_PMA_RES_CAL_CLK_SEL,
  
      CP_PMA_PLL_REG_PLL_PFDDELAY_EN           => CP_PLL1_PMA_PLL_REG_PLL_PFDDELAY_EN,
      CP_PMA_PLL_REG_PFDDELAYSEL               => CP_PLL1_PMA_PLL_REG_PFDDELAYSEL,
      CP_PMA_PLL_REG_PLL_VCTRL_SET             => CP_PLL1_PMA_PLL_REG_PLL_VCTRL_SET,
      CP_PMA_PLL_REG_READY_OR_LOCK             => CP_PLL1_PMA_PLL_REG_READY_OR_LOCK,
      CP_PMA_PLL_REG_PLL_CP                    => CP_PLL1_PMA_PLL_REG_PLL_CP,
      CP_PMA_PLL_REG_PLL_REFDIV                => CP_PLL1_PMA_PLL_REG_PLL_REFDIV,
      CP_PMA_PLL_REG_PLL_LOCKDET_EN            => CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_EN,
      CP_PMA_PLL_REG_PLL_READY                 => CP_PLL1_PMA_PLL_REG_PLL_READY,
      CP_PMA_PLL_REG_PLL_READY_OW              => CP_PLL1_PMA_PLL_REG_PLL_READY_OW,
      CP_PMA_PLL_REG_PLL_FBDIV                 => CP_PLL1_PMA_PLL_REG_PLL_FBDIV,
      CP_PMA_PLL_REG_LPF_RES                   => CP_PLL1_PMA_PLL_REG_LPF_RES,
      CP_PMA_PLL_REG_JTAG_OE                   => CP_PLL1_PMA_PLL_REG_JTAG_OE,
      CP_PMA_PLL_REG_JTAG_VHYSTSEL             => CP_PLL1_PMA_PLL_REG_JTAG_VHYSTSEL,
      CP_PMA_PLL_REG_PLL_LOCKDET_EN_OW         => CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_EN_OW,
      CP_PMA_PLL_REG_PLL_LOCKDET_FBCT          => CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_FBCT,
      CP_PMA_PLL_REG_PLL_LOCKDET_ITER          => CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_ITER,
      CP_PMA_PLL_REG_PLL_LOCKDET_MODE          => CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_MODE,
      CP_PMA_PLL_REG_PLL_LOCKDET_LOCKCT        => CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_LOCKCT,
      CP_PMA_PLL_REG_PLL_LOCKDET_REFCT         => CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_REFCT,
      CP_PMA_PLL_REG_PLL_LOCKDET_RESET_N       => CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_RESET_N,
      CP_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW    => CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW,
      CP_PMA_PLL_REG_PLL_LOCKED                => CP_PLL1_PMA_PLL_REG_PLL_LOCKED,
      CP_PMA_PLL_REG_PLL_LOCKED_OW             => CP_PLL1_PMA_PLL_REG_PLL_LOCKED_OW,
      CP_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR   => CP_PLL1_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR,
      CP_PMA_PLL_REG_PLL_UNLOCKED              => CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED,
      CP_PMA_PLL_REG_PLL_UNLOCKDET_ITER        => CP_PLL1_PMA_PLL_REG_PLL_UNLOCKDET_ITER,
      CP_PMA_PLL_REG_PLL_UNLOCKED_OW           => CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED_OW,
      CP_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR => CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR,
      CP_PMA_PLL_REG_I_CTRL_MAX                => CP_PLL1_PMA_PLL_REG_I_CTRL_MAX,
      CP_PMA_PLL_REG_REFCLK_TEST_EN            => CP_PLL1_PMA_PLL_REG_REFCLK_TEST_EN,
      CP_PMA_PLL_REG_RESCAL_EN                 => CP_PLL1_PMA_PLL_REG_RESCAL_EN,
      CP_PMA_PLL_REG_I_CTRL_MIN                => CP_PLL1_PMA_PLL_REG_I_CTRL_MIN,
      CP_PMA_PLL_REG_RESCAL_DONE_OW            => CP_PLL1_PMA_PLL_REG_RESCAL_DONE_OW,
      CP_PMA_PLL_REG_RESCAL_DONE_VAL           => CP_PLL1_PMA_PLL_REG_RESCAL_DONE_VAL,
      CP_PMA_PLL_REG_RESCAL_I_CODE             => CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE,
      CP_PMA_PLL_REG_RESCAL_I_CODE_OW          => CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_OW,
      CP_PMA_PLL_REG_RESCAL_I_CODE_PMA         => CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_PMA,
      CP_PMA_PLL_REG_RESCAL_I_CODE_VAL         => CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_VAL,
      CP_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW     => CP_PLL1_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW,
      CP_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL    => CP_PLL1_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL,
      CP_PMA_PLL_REG_RESCAL_ITER_VALID_SEL     => CP_PLL1_PMA_PLL_REG_RESCAL_ITER_VALID_SEL,
      CP_PMA_PLL_REG_RESCAL_RESET_N_OW         => CP_PLL1_PMA_PLL_REG_RESCAL_RESET_N_OW,
      CP_PMA_PLL_REG_RESCAL_RST_N_VAL          => CP_PLL1_PMA_PLL_REG_RESCAL_RST_N_VAL,
      CP_PMA_PLL_REG_RESCAL_WAIT_SEL           => CP_PLL1_PMA_PLL_REG_RESCAL_WAIT_SEL,
      CP_PMA_PLL_REFCLK2LANE_PD_L              => CP_PLL1_PMA_PLL_REFCLK2LANE_PD_L,
      CP_PMA_PLL_REFCLK2LANE_PD_R              => CP_PLL1_PMA_PLL_REFCLK2LANE_PD_R,
      CP_PMA_PLL_REG_LOCKDET_REPEAT            => CP_PLL1_PMA_PLL_REG_LOCKDET_REPEAT,
      CP_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR      => CP_PLL1_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR,
      CP_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR     => CP_PLL1_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR,
      CP_PMA_PLL_REG_TEST_SEL                  => CP_PLL1_PMA_PLL_REG_TEST_SEL,
      CP_PMA_PLL_REG_TEST_V_EN                 => CP_PLL1_PMA_PLL_REG_TEST_V_EN,
      CP_PMA_PLL_REG_TEST_SIG_HALF_EN          => CP_PLL1_PMA_PLL_REG_TEST_SIG_HALF_EN,
      CP_PMA_PLL_REG_REFCLK_PAD_SEL            => CP_PLL1_PMA_PLL_REG_REFCLK_PAD_SEL,
      CP_PARM_CFG_HSST_RSTN                    => CP_PLL1_PARM_CFG_HSST_RSTN,      
      CP_PARM_PLL_POWERUP                      => CP_PLL1_PARM_PLL_POWERUP,
      CP_PARM_PLL_RSTN                         => CP_PLL1_PARM_PLL_RSTN,
  
      CP_CFG_RSTN                              => CP_CFG_RSTN_PLL_1,
      CP_GRSN_DIS                              => CP_GRSN_DIS,
      CP_HSST_EN                               => CP_HSST_EN
   )
   port map
   (
 //////////SRB related/////////////////////////////////////////////////
     //PAD                                                             
     REFCLK_CML_P                             => REFCLK_CML_P_1,       
     REFCLK_CML_N                             => REFCLK_CML_N_1,       
                                                                       
     //if with user logic                                              
     CFG_CLK_PLL                              => CFG_CLK_PLL_1,        
     CFG_RST_PLL                              => CFG_RST_PLL_1,        
     CFG_PSEL_PLL                             => CFG_PSEL_PLL_1,       
     CFG_ENABLE_PLL                           => CFG_ENABLE_PLL_1,     
     CFG_WRITE_PLL                            => CFG_WRITE_PLL_1,      
     CFG_ADDR_PLL                             => CFG_ADDR_PLL_1,       
     CFG_WDATA_PLL                            => CFG_WDATA_PLL_1,      
     CFG_READY_PLL                            => CFG_READY_PLL_1,      
     CFG_RDATA_PLL                            => CFG_RDATA_PLL_1,      
     CFG_INT_PLL                              => CFG_INT_PLL_1,        
     RESCAL_RST_I                             => RESCAL_RST_I_1,       
     RESCAL_I_CODE_I                          => RESCAL_I_CODE_I_1,    
     PLL_LOCKDET_RST_I                        => PLL_LOCKDET_RST_I_1,  
     RESCAL_I_CODE_O                          => RESCAL_I_CODE_O_1,    
     REFCK2CORE                               => REFCK2CORE_1,         
     PLL_REF_CLK                              => PLL_REF_CLK_1,        
     PLL_RST                                  => PLL_RST_1,            
     PLLPOWERDOWN                             => PLLPOWERDOWN_1,       
     PLL_READY                                => PLL_READY_1,          
     LANE_SYNC                                => LANE_SYNC_1,          
     RATE_CHANGE_TCLK_ON                      => RATE_CHANGE_TCLK_ON_1,
                                                                       
 //////////clk/////////////////////////////////////////////////////////
     PLL_CLK0                                 => PLL_CLK0_1,           
     PLL_CLK90                                => PLL_CLK90_1,          
     PLL_CLK180                               => PLL_CLK180_1,         
     PLL_CLK270                               => PLL_CLK270_1,         
                                                                       
     //PLL_CFG_REV_O                            => PLL_CFG_REV_O_1,
                                                                       
 //////////New added///////////////////////////////////////////////////
     SYNC_PLL                                 => SYNC_PLL_1,
                                                                       
     TXPCLK_PLL_SELECTED                      => TXPCLK_PLL_SELECTED_1,
     RATE_CHANGE_PLL                          => RATE_CHANGE_PLL_1,
                                                                       
     PLL_PD_O                                 => PLL_PD_O_1,
     PLL_RST_O                                => PLL_RST_O_1,
     PMA_PLL_READY_O                          => PMA_PLL_READY_O_1,
                                                                       
 //////////Used////////////////////////////////////////////////////////
     //output                                                          
     PLL_REFCLK_LANE_L                        => PLL_REFCLK_LANE_L_1   
   ); 
   
//   device MUX_2TO1 u4_mux_2to1
//   parameter map
//   (
//      CP_SIG_SELECT => CP_LANE0_PCS_SLAVE
//   ) 
//   port map
//   (
//      SIG_IN0 => ntpma_rclk_0,    
//     // SIG_IN1 => "",              //SIG_IN1()
//      SIG_OUT => ntmcb_rclk_0
//   );//according to top_pcs
//   
//   device MUX_2TO1 u5_mux_2to1 
//   parameter map
//   (
//      CP_SIG_SELECT => CP_LANE1_PCS_SLAVE
//   )
//   port map
//   (
//     // SIG_IN0 => "",              
//      SIG_IN1 => ntpma_rclk_0,    
//      SIG_OUT => ntmcb_rclk_1
//   );//according to top_pcs
//   
//   device MUX_2TO1 u6_mux_2to1 
//   parameter map
//   (
//      CP_SIG_SELECT => CP_LANE2_PCS_SLAVE
//   )
//   port map
//   (
//      SIG_IN0 => ntpma_rclk_2,    
//      SIG_IN1 => ntpma_rclk_0,    
//      SIG_OUT => ntmcb_rclk_2
//   );//according to top_pcs
//   
//   device MUX_2TO1 u7_mux_2to1 
//   parameter map
//   (
//      CP_SIG_SELECT => CP_LANE2_PCS_SLAVE
//   )
//   port map
//   (
//      SIG_IN0 => ntpma_rclk_2,    
//      SIG_IN1 => ntpma_rclk_0,    
//      SIG_OUT => ntmcb_rclk_3
//   );//according to top_pcs
     
};
//grid device structure netlist end
//grid device configure body started

configuration cfg of HSSTLP
{

//initial config body0 begin
    if(CP_GRSN_DIS == "FALSE")
    {
        SC_GRSN_DIS  :=  1'b0;
    }
    else if (CP_GRSN_DIS == "TRUE")
    {
        SC_GRSN_DIS  :=  1'b1;
    }
    else
    {
        SC_GRSN_DIS  :=  1'b0;
        error("Setting Error : The CP_GRSN_DIS is set to %s. Legal values is FALSE,TRUE",CP_GRSN_DIS);
    }

//initial config body0 end


//initial config body1 begin
    if(CP_HSST_EN == "FALSE")
    {
        SC_HSST_EN  :=  1'b0;
    }
    else if (CP_HSST_EN == "TRUE")
    {
        SC_HSST_EN  :=  1'b1;
    }
    else
    {
        SC_HSST_EN  :=  1'b0;
        error("Setting Error : The CP_HSST_EN is set to %s. Legal values is FALSE,TRUE",CP_HSST_EN);
    }

//initial config body1 end


//initial config body2 begin
    if(CP_CFG_RSTN_0 == "FALSE")
    {
        SC_CFG_RSTN_0  :=  1'b0;
    }
    else if (CP_CFG_RSTN_0 == "TRUE")
    {
        SC_CFG_RSTN_0  :=  1'b1;
    }
    else
    {
        SC_CFG_RSTN_0  :=  1'b0;
        error("Setting Error : The CP_CFG_RSTN_0 is set to %s. Legal values is FALSE,TRUE",CP_CFG_RSTN_0);
    }

//initial config body2 end


//initial config body3 begin
    if(CP_CFG_RSTN_1 == "FALSE")
    {
        SC_CFG_RSTN_1  :=  1'b0;
    }
    else if (CP_CFG_RSTN_1 == "TRUE")
    {
        SC_CFG_RSTN_1  :=  1'b1;
    }
    else
    {
        SC_CFG_RSTN_1  :=  1'b0;
        error("Setting Error : The CP_CFG_RSTN_1 is set to %s. Legal values is FALSE,TRUE",CP_CFG_RSTN_1);
    }

//initial config body3 end


//initial config body4 begin
    if(CP_CFG_RSTN_2 == "FALSE")
    {
        SC_CFG_RSTN_2  :=  1'b0;
    }
    else if (CP_CFG_RSTN_2 == "TRUE")
    {
        SC_CFG_RSTN_2  :=  1'b1;
    }
    else
    {
        SC_CFG_RSTN_2  :=  1'b0;
        error("Setting Error : The CP_CFG_RSTN_2 is set to %s. Legal values is FALSE,TRUE",CP_CFG_RSTN_2);
    }

//initial config body4 end


//initial config body5 begin
    if(CP_CFG_RSTN_3 == "FALSE")
    {
        SC_CFG_RSTN_3  :=  1'b0;
    }
    else if (CP_CFG_RSTN_3 == "TRUE")
    {
        SC_CFG_RSTN_3  :=  1'b1;
    }
    else
    {
        SC_CFG_RSTN_3  :=  1'b0;
        error("Setting Error : The CP_CFG_RSTN_3 is set to %s. Legal values is FALSE,TRUE",CP_CFG_RSTN_3);
    }

//initial config body5 end


//initial config body6 begin
    if(CP_CFG_RSTN_PLL_0 == "FALSE")
    {
        SC_CFG_RSTN_PLL_0  :=  1'b0;
    }
    else if (CP_CFG_RSTN_PLL_0 == "TRUE")
    {
        SC_CFG_RSTN_PLL_0  :=  1'b1;
    }
    else
    {
        SC_CFG_RSTN_PLL_0  :=  1'b0;
        error("Setting Error : The CP_CFG_RSTN_PLL_0 is set to %s. Legal values is FALSE,TRUE",CP_CFG_RSTN_PLL_0);
    }

//initial config body6 end


//initial config body7 begin
    if(CP_CFG_RSTN_PLL_1 == "FALSE")
    {
        SC_CFG_RSTN_PLL_1  :=  1'b0;
    }
    else if (CP_CFG_RSTN_PLL_1 == "TRUE")
    {
        SC_CFG_RSTN_PLL_1  :=  1'b1;
    }
    else
    {
        SC_CFG_RSTN_PLL_1  :=  1'b0;
        error("Setting Error : The CP_CFG_RSTN_PLL_1 is set to %s. Legal values is FALSE,TRUE",CP_CFG_RSTN_PLL_1);
    }

//initial config body7 end


//initial config body8 begin
    if(CP_LANE0_PCS_SLAVE == 0)
    {
        SC_PCS_CH_INT_0[113]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_SLAVE == 1)
    {
        SC_PCS_CH_INT_0[113]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[113]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_SLAVE is set to %s. Legal values is 0,1",CP_LANE0_PCS_SLAVE);
    }

//initial config body8 end


//initial config body9 begin
    if(CP_LANE1_PCS_SLAVE == 0)
    {
        SC_PCS_CH_INT_1[113]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_SLAVE == 1)
    {
        SC_PCS_CH_INT_1[113]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[113]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_SLAVE is set to %s. Legal values is 0,1",CP_LANE1_PCS_SLAVE);
    }

//initial config body9 end


//initial config body10 begin
    if(CP_LANE2_PCS_SLAVE == 0)
    {
        SC_PCS_CH_INT_2[113]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_SLAVE == 1)
    {
        SC_PCS_CH_INT_2[113]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[113]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_SLAVE is set to %s. Legal values is 0,1",CP_LANE2_PCS_SLAVE);
    }

//initial config body10 end


//initial config body11 begin
    if(CP_LANE3_PCS_SLAVE == 0)
    {
        SC_PCS_CH_INT_3[113]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_SLAVE == 1)
    {
        SC_PCS_CH_INT_3[113]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[113]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_SLAVE is set to %s. Legal values is 0,1",CP_LANE0_PCS_SLAVE);
    }

//initial config body11 end


//initial config body12 begin
    if(CP_LANE0_MUX_BIAS >= 0 && CP_LANE0_MUX_BIAS <= 7)
    {
        SC_PMA_CH_INT_PLL_0[255:253]  :=  CP_LANE0_MUX_BIAS;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[255:253]  :=  0;
        error("Setting Error : The CP_LANE0_MUX_BIAS is set to %d. Legal values is 0 to 7",CP_LANE0_MUX_BIAS);
    }

//initial config body12 end


//initial config body13 begin
    if(CP_LANE0_PD_CLK == 0)
    {
        SC_PMA_CH_INT_PLL_0[252]  :=  1'b0;
    }
    else if (CP_LANE0_PD_CLK == 1)
    {
        SC_PMA_CH_INT_PLL_0[252]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[252]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PD_CLK is set to %s. Legal values is 0,1",CP_LANE0_PD_CLK);
    }

//initial config body13 end


//initial config body14 begin
    if(CP_LANE0_REG_SYNC == 0)
    {
        SC_PMA_CH_INT_PLL_0[201]  :=  1'b0;
    }
    else if (CP_LANE0_REG_SYNC == 1)
    {
        SC_PMA_CH_INT_PLL_0[201]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[201]  :=  1'b0;
        error("Setting Error : The CP_LANE0_REG_SYNC is set to %s. Legal values is 0,1",CP_LANE0_REG_SYNC);
    }

//initial config body14 end


//initial config body15 begin
    if(CP_LANE0_REG_SYNC_OW == 0)
    {
        SC_PMA_CH_INT_PLL_0[192]  :=  1'b0;
    }
    else if (CP_LANE0_REG_SYNC_OW == 1)
    {
        SC_PMA_CH_INT_PLL_0[192]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[192]  :=  1'b0;
        error("Setting Error : The CP_LANE0_REG_SYNC_OW is set to %s. Legal values is 0,1",CP_LANE0_REG_SYNC_OW);
    }

//initial config body15 end


//initial config body16 begin
    if(CP_LANE0_PLL_LOCK_OW == 0)
    {
        SC_PMA_CH_INT_PLL_0[213]  :=  1'b0;
    }
    else if (CP_LANE0_PLL_LOCK_OW == 1)
    {
        SC_PMA_CH_INT_PLL_0[213]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[213]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PLL_LOCK_OW is set to %s. Legal values is 0,1",CP_LANE0_PLL_LOCK_OW);
    }

//initial config body16 end


//initial config body17 begin
    if(CP_LANE0_PLL_LOCK_OW_EN == 0)
    {
        SC_PMA_CH_INT_PLL_0[209]  :=  1'b0;
    }
    else if (CP_LANE0_PLL_LOCK_OW_EN == 1)
    {
        SC_PMA_CH_INT_PLL_0[209]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[209]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PLL_LOCK_OW_EN is set to %s. Legal values is 0,1",CP_LANE0_PLL_LOCK_OW_EN);
    }

//initial config body17 end


//initial config body18 begin
    if(CP_LANE1_MUX_BIAS >= 0 && CP_LANE1_MUX_BIAS <= 7)
    {
        SC_PMA_CH_INT_PLL_0[247:245]  :=  CP_LANE1_MUX_BIAS;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[247:245]  :=  0;
        error("Setting Error : The CP_LANE1_MUX_BIAS is set to %d. Legal values is 0 to 7",CP_LANE1_MUX_BIAS);
    }

//initial config body18 end


//initial config body19 begin
    if(CP_LANE1_PD_CLK == 0)
    {
        SC_PMA_CH_INT_PLL_0[244]  :=  1'b0;
    }
    else if (CP_LANE1_PD_CLK == 1)
    {
        SC_PMA_CH_INT_PLL_0[244]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[244]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PD_CLK is set to %s. Legal values is 0,1",CP_LANE1_PD_CLK);
    }

//initial config body19 end


//initial config body20 begin
    if(CP_LANE1_REG_SYNC == 0)
    {
        SC_PMA_CH_INT_PLL_0[202]  :=  1'b0;
    }
    else if (CP_LANE1_REG_SYNC == 1)
    {
        SC_PMA_CH_INT_PLL_0[202]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[202]  :=  1'b0;
        error("Setting Error : The CP_LANE1_REG_SYNC is set to %s. Legal values is 0,1",CP_LANE1_REG_SYNC);
    }

//initial config body20 end


//initial config body21 begin
    if(CP_LANE1_REG_SYNC_OW == 0)
    {
        SC_PMA_CH_INT_PLL_0[193]  :=  1'b0;
    }
    else if (CP_LANE1_REG_SYNC_OW == 1)
    {
        SC_PMA_CH_INT_PLL_0[193]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[193]  :=  1'b0;
        error("Setting Error : The CP_LANE1_REG_SYNC_OW is set to %s. Legal values is 0,1",CP_LANE1_REG_SYNC_OW);
    }

//initial config body21 end


//initial config body22 begin
    if(CP_LANE1_PLL_LOCK_OW == 0)
    {
        SC_PMA_CH_INT_PLL_0[214]  :=  1'b0;
    }
    else if (CP_LANE1_PLL_LOCK_OW == 1)
    {
        SC_PMA_CH_INT_PLL_0[214]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[214]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PLL_LOCK_OW is set to %s. Legal values is 0,1",CP_LANE1_PLL_LOCK_OW);
    }

//initial config body22 end


//initial config body23 begin
    if(CP_LANE1_PLL_LOCK_OW_EN == 0)
    {
        SC_PMA_CH_INT_PLL_0[210]  :=  1'b0;
    }
    else if (CP_LANE1_PLL_LOCK_OW_EN == 1)
    {
        SC_PMA_CH_INT_PLL_0[210]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[210]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PLL_LOCK_OW_EN is set to %s. Legal values is 0,1",CP_LANE1_PLL_LOCK_OW_EN);
    }

//initial config body23 end


//initial config body24 begin
    if(CP_LANE2_MUX_BIAS >= 0 && CP_LANE2_MUX_BIAS <= 7)
    {
        SC_PMA_CH_INT_PLL_0[239:237]  :=  CP_LANE2_MUX_BIAS;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[239:237]  :=  0;
        error("Setting Error : The CP_LANE2_MUX_BIAS is set to %d. Legal values is 0 to 7",CP_LANE2_MUX_BIAS);
    }

//initial config body24 end


//initial config body25 begin
    if(CP_LANE2_PD_CLK == 0)
    {
        SC_PMA_CH_INT_PLL_0[236]  :=  1'b0;
    }
    else if (CP_LANE2_PD_CLK == 1)
    {
        SC_PMA_CH_INT_PLL_0[236]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[236]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PD_CLK is set to %s. Legal values is 0,1",CP_LANE2_PD_CLK);
    }

//initial config body25 end


//initial config body26 begin
    if(CP_LANE2_REG_SYNC == 0)
    {
        SC_PMA_CH_INT_PLL_0[203]  :=  1'b0;
    }
    else if (CP_LANE2_REG_SYNC == 1)
    {
        SC_PMA_CH_INT_PLL_0[203]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[203]  :=  1'b0;
        error("Setting Error : The CP_LANE2_REG_SYNC is set to %s. Legal values is 0,1",CP_LANE2_REG_SYNC);
    }

//initial config body26 end


//initial config body27 begin
    if(CP_LANE2_REG_SYNC_OW == 0)
    {
        SC_PMA_CH_INT_PLL_0[194]  :=  1'b0;
    }
    else if (CP_LANE2_REG_SYNC_OW == 1)
    {
        SC_PMA_CH_INT_PLL_0[194]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[194]  :=  1'b0;
        error("Setting Error : The CP_LANE2_REG_SYNC_OW is set to %s. Legal values is 0,1",CP_LANE2_REG_SYNC_OW);
    }

//initial config body27 end


//initial config body28 begin
    if(CP_LANE2_PLL_LOCK_OW == 0)
    {
        SC_PMA_CH_INT_PLL_0[215]  :=  1'b0;
    }
    else if (CP_LANE2_PLL_LOCK_OW == 1)
    {
        SC_PMA_CH_INT_PLL_0[215]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[215]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PLL_LOCK_OW is set to %s. Legal values is 0,1",CP_LANE2_PLL_LOCK_OW);
    }

//initial config body28 end


//initial config body29 begin
    if(CP_LANE2_PLL_LOCK_OW_EN == 0)
    {
        SC_PMA_CH_INT_PLL_0[211]  :=  1'b0;
    }
    else if (CP_LANE2_PLL_LOCK_OW_EN == 1)
    {
        SC_PMA_CH_INT_PLL_0[211]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[211]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PLL_LOCK_OW_EN is set to %s. Legal values is 0,1",CP_LANE2_PLL_LOCK_OW_EN);
    }

//initial config body29 end


//initial config body30 begin
    if(CP_LANE3_MUX_BIAS >= 0 && CP_LANE3_MUX_BIAS <= 7)
    {
        SC_PMA_CH_INT_PLL_0[231:229]  :=  CP_LANE3_MUX_BIAS;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[231:229]  :=  0;
        error("Setting Error : The CP_LANE3_MUX_BIAS is set to %d. Legal values is 0 to 7",CP_LANE3_MUX_BIAS);
    }

//initial config body30 end


//initial config body31 begin
    if(CP_LANE3_PD_CLK == 0)
    {
        SC_PMA_CH_INT_PLL_0[228]  :=  1'b0;
    }
    else if (CP_LANE3_PD_CLK == 1)
    {
        SC_PMA_CH_INT_PLL_0[228]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[228]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PD_CLK is set to %s. Legal values is 0,1",CP_LANE3_PD_CLK);
    }

//initial config body31 end


//initial config body32 begin
    if(CP_LANE3_REG_SYNC == 0)
    {
        SC_PMA_CH_INT_PLL_0[204]  :=  1'b0;
    }
    else if (CP_LANE3_REG_SYNC == 1)
    {
        SC_PMA_CH_INT_PLL_0[204]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[204]  :=  1'b0;
        error("Setting Error : The CP_LANE3_REG_SYNC is set to %s. Legal values is 0,1",CP_LANE3_REG_SYNC);
    }

//initial config body32 end


//initial config body33 begin
    if(CP_LANE3_REG_SYNC_OW == 0)
    {
        SC_PMA_CH_INT_PLL_0[200]  :=  1'b0;
    }
    else if (CP_LANE3_REG_SYNC_OW == 1)
    {
        SC_PMA_CH_INT_PLL_0[200]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[200]  :=  1'b0;
        error("Setting Error : The CP_LANE3_REG_SYNC_OW is set to %s. Legal values is 0,1",CP_LANE3_REG_SYNC_OW);
    }

//initial config body33 end


//initial config body34 begin
    if(CP_LANE3_PLL_LOCK_OW == 0)
    {
        SC_PMA_CH_INT_PLL_0[216]  :=  1'b0;
    }
    else if (CP_LANE3_PLL_LOCK_OW == 1)
    {
        SC_PMA_CH_INT_PLL_0[216]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[216]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PLL_LOCK_OW is set to %s. Legal values is 0,1",CP_LANE3_PLL_LOCK_OW);
    }

//initial config body34 end


//initial config body35 begin
    if(CP_LANE3_PLL_LOCK_OW_EN == 0)
    {
        SC_PMA_CH_INT_PLL_0[212]  :=  1'b0;
    }
    else if (CP_LANE3_PLL_LOCK_OW_EN == 1)
    {
        SC_PMA_CH_INT_PLL_0[212]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[212]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PLL_LOCK_OW_EN is set to %s. Legal values is 0,1",CP_LANE3_PLL_LOCK_OW_EN);
    }

//initial config body35 end


//initial config body36 begin
    if(CP_PLL0_TX_SYNCK_SEL == 0)
    {
        SC_PMA_CH_INT_PLL_0[222]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[222]  :=  1'b0;
        error("Setting Error : The CP_PLL0_TX_SYNCK_SEL is set to %s. Legal values is 0",CP_PLL0_TX_SYNCK_SEL);
    }

//initial config body36 end


//initial config body37 begin
    if(CP_PLL1_TX_SYNCK_SEL == 0)
    {
        SC_PMA_CH_INT_PLL_0[223]  :=  1'b0;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[223]  :=  1'b0;
        error("Setting Error : The CP_PLL1_TX_SYNCK_SEL is set to %s. Legal values is 0",CP_PLL1_TX_SYNCK_SEL);
    }

//initial config body37 end


//initial config body38 begin
    if(CP_PLL0_TX_SYNCK_PD == 0)
    {
        SC_PMA_CH_INT_PLL_1[242]  :=  1'b0;
    }
    else if (CP_PLL0_TX_SYNCK_PD == 1)
    {
        SC_PMA_CH_INT_PLL_1[242]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[242]  :=  1'b0;
        error("Setting Error : The CP_PLL0_TX_SYNCK_PD is set to %s. Legal values is 0,1",CP_PLL0_TX_SYNCK_PD);
    }

//initial config body38 end


//initial config body39 begin
    if(CP_PLL1_TX_SYNCK_PD == 0)
    {
        SC_PMA_CH_INT_PLL_1[243]  :=  1'b0;
    }
    else if (CP_PLL1_TX_SYNCK_PD == 1)
    {
        SC_PMA_CH_INT_PLL_1[243]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[243]  :=  1'b0;
        error("Setting Error : The CP_PLL1_TX_SYNCK_PD is set to %s. Legal values is 0,1",CP_PLL1_TX_SYNCK_PD);
    }

//initial config body39 end


//initial config body40 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_235_232 >= 0 && CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_235_232 <= 15)
    {
        SC_PMA_CH_INT_PLL_1[235:232]  :=  CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_235_232;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[235:232]  :=  0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_235_232 is set to %d. Legal values is 0 to 15",CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_235_232);
    }

//initial config body40 end


//initial config body41 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_231_224 >= 0 && CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_231_224 <= 255)
    {
        SC_PMA_CH_INT_PLL_1[231:224]  :=  CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_231_224;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[231:224]  :=  0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_231_224 is set to %d. Legal values is 0 to 255",CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_231_224);
    }

//initial config body41 end


//initial config body42 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_223_216 >= 0 && CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_223_216 <= 255)
    {
        SC_PMA_CH_INT_PLL_1[223:216]  :=  CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_223_216;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[223:216]  :=  0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_223_216 is set to %d. Legal values is 0 to 255",CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_223_216);
    }

//initial config body42 end


//initial config body43 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_215_208 >= 0 && CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_215_208 <= 255)
    {
        SC_PMA_CH_INT_PLL_1[215:208]  :=  CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_215_208;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[215:208]  :=  0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_215_208 is set to %d. Legal values is 0 to 255",CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_215_208);
    }

//initial config body43 end


//initial config body44 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_207_200 >= 0 && CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_207_200 <= 255)
    {
        SC_PMA_CH_INT_PLL_1[207:200]  :=  CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_207_200;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[207:200]  :=  0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_207_200 is set to %d. Legal values is 0 to 255",CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_207_200);
    }

//initial config body44 end


//initial config body45 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_196_192 >= 0 && CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_196_192 <= 31)
    {
        SC_PMA_CH_INT_PLL_1[196:192]  :=  CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_196_192;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[196:192]  :=  0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_196_192 is set to %d. Legal values is 0 to 31",CP_PLL1_PMA_PLL_REG_PLL_CFG_REV_196_192);
    }

//initial config body45 end


//initial config body46 begin
    if(CP_PMA_PLL_REG_BG_TRIM >= 0 && CP_PMA_PLL_REG_BG_TRIM <= 3)
    {
        SC_PMA_CH_INT_PLL_0[105:104]   :=  to_unsigned( CP_PMA_PLL_REG_BG_TRIM, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[105:104]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_PMA_PLL_REG_BG_TRIM is set to %d. Legal values is 0 to 3",CP_PMA_PLL_REG_BG_TRIM);
    }

//initial config body46 end


//initial config body47 begin
    if(CP_PMA_PLL_REG_IBUP_A1 >= 0 && CP_PMA_PLL_REG_IBUP_A1 <= 262143)
    {
        SC_PMA_CH_INT_PLL_0[123:106]   :=  to_unsigned( CP_PMA_PLL_REG_IBUP_A1, 18) ^ 18'b111111111111111111;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[123:106]   :=  to_unsigned( 0, 18) ^ 18'b111111111111111111;
        error("Setting Error : The CP_PMA_PLL_REG_IBUP_A1 is set to %d. Legal values is 0 to 262143",CP_PMA_PLL_REG_IBUP_A1);
    }

//initial config body47 end


//initial config body48 begin
    if(CP_PMA_PLL_REG_IBUP_A2 >= 0 && CP_PMA_PLL_REG_IBUP_A2 <= 262143)
    {
        SC_PMA_CH_INT_PLL_0[141:124]  :=  CP_PMA_PLL_REG_IBUP_A2;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[141:124]  :=  0;
        error("Setting Error : The CP_PMA_PLL_REG_IBUP_A2 is set to %d. Legal values is 0 to 262143",CP_PMA_PLL_REG_IBUP_A2);
    }

//initial config body48 end


//initial config body49 begin
    if(CP_PMA_PLL_REG_IBUP_PD >= 0 && CP_PMA_PLL_REG_IBUP_PD <= 262143)
    {
        SC_PMA_CH_INT_PLL_0[159:142]  :=  CP_PMA_PLL_REG_IBUP_PD;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[159:142]  :=  0;
        error("Setting Error : The CP_PMA_PLL_REG_IBUP_PD is set to %d. Legal values is 0 to 262143",CP_PMA_PLL_REG_IBUP_PD);
    }

//initial config body49 end


//initial config body50 begin
    if(CP_PMA_PLL_REG_V2I_BIAS_SEL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[30]  :=  1'b0;
    }
    else if (CP_PMA_PLL_REG_V2I_BIAS_SEL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[30]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[30]  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL_REG_V2I_BIAS_SEL is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL_REG_V2I_BIAS_SEL);
    }

//initial config body50 end


//initial config body51 begin
    if(CP_PMA_PLL_REG_V2I_EN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[31]  :=  1'b0^1'b1;
    }
    else if (CP_PMA_PLL_REG_V2I_EN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[31]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[31]  :=  1'b0^1'b1;
        error("Setting Error : The CP_PMA_PLL_REG_V2I_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL_REG_V2I_EN);
    }

//initial config body51 end


//initial config body52 begin
    if(CP_PMA_PLL_REG_V2I_TB_SEL >= 0 && CP_PMA_PLL_REG_V2I_TB_SEL <= 15)
    {
        SC_PMA_CH_INT_PLL_0[167:164]  :=  CP_PMA_PLL_REG_V2I_TB_SEL;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[167:164]  :=  0;
        error("Setting Error : The CP_PMA_PLL_REG_V2I_TB_SEL is set to %d. Legal values is 0 to 15",CP_PMA_PLL_REG_V2I_TB_SEL);
    }

//initial config body52 end


//initial config body53 begin
    if(CP_PMA_PLL_REG_V2I_RCALTEST_PD == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[163]  :=  1'b0;
    }
    else if (CP_PMA_PLL_REG_V2I_RCALTEST_PD == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[163]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[163]  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL_REG_V2I_RCALTEST_PD is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL_REG_V2I_RCALTEST_PD);
    }

//initial config body53 end


//initial config body54 begin
    if(CP_PMA_PLL_REG_RES_CAL_TEST >= 0 && CP_PMA_PLL_REG_RES_CAL_TEST <= 63)
    {
        SC_PMA_CH_INT_PLL_0[173:168]  :=  CP_PMA_PLL_REG_RES_CAL_TEST;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[173:168]  :=  0;
        error("Setting Error : The CP_PMA_PLL_REG_RES_CAL_TEST is set to %d. Legal values is 0 to 63",CP_PMA_PLL_REG_RES_CAL_TEST);
    }

//initial config body54 end


//initial config body55 begin
    if(CP_PMA_RES_CAL_DIV >= 0 && CP_PMA_RES_CAL_DIV <= 3)
    {
        SC_PMA_CH_INT_PLL_0[199:198]  :=  CP_PMA_RES_CAL_DIV;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[199:198]  :=  0;
        error("Setting Error : The CP_PMA_RES_CAL_DIV is set to %d. Legal values is 0 to 3",CP_PMA_RES_CAL_DIV);
    }

//initial config body55 end


//initial config body56 begin
    if(CP_PMA_RES_CAL_CLK_SEL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[197]  :=  1'b0;
    }
    else if (CP_PMA_RES_CAL_CLK_SEL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[197]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[197]  :=  1'b0;
        error("Setting Error : The CP_PMA_RES_CAL_CLK_SEL is set to %s. Legal values is FALSE,TRUE",CP_PMA_RES_CAL_CLK_SEL);
    }

//initial config body56 end


//initial config body57 begin
    if(CP_PMA_PLL_REG_BG_TRIM >= 0 && CP_PMA_PLL_REG_BG_TRIM <= 3)
    {
        SC_PMA_CH_INT_PLL_1[105:104]   :=  to_unsigned( CP_PMA_PLL_REG_BG_TRIM, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[105:104]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_PMA_PLL_REG_BG_TRIM is set to %d. Legal values is 0 to 3",CP_PMA_PLL_REG_BG_TRIM);
    }

//initial config body57 end


//initial config body58 begin
    if(CP_PMA_PLL_REG_IBUP_A1 >= 0 && CP_PMA_PLL_REG_IBUP_A1 <= 262143)
    {
        SC_PMA_CH_INT_PLL_1[123:106]   :=  to_unsigned( CP_PMA_PLL_REG_IBUP_A1, 18) ^ 18'b111111111111111111;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[123:106]   :=  to_unsigned( 0, 18) ^ 18'b111111111111111111;
        error("Setting Error : The CP_PMA_PLL_REG_IBUP_A1 is set to %d. Legal values is 0 to 262143",CP_PMA_PLL_REG_IBUP_A1);
    }

//initial config body58 end


//initial config body59 begin
    if(CP_PMA_PLL_REG_IBUP_A2 >= 0 && CP_PMA_PLL_REG_IBUP_A2 <= 262143)
    {
        SC_PMA_CH_INT_PLL_1[141:124]  :=  CP_PMA_PLL_REG_IBUP_A2;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[141:124]  :=  0;
        error("Setting Error : The CP_PMA_PLL_REG_IBUP_A2 is set to %d. Legal values is 0 to 262143",CP_PMA_PLL_REG_IBUP_A2);
    }

//initial config body59 end


//initial config body60 begin
    if(CP_PMA_PLL_REG_IBUP_PD >= 0 && CP_PMA_PLL_REG_IBUP_PD <= 262143)
    {
        SC_PMA_CH_INT_PLL_1[159:142]  :=  CP_PMA_PLL_REG_IBUP_PD;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[159:142]  :=  0;
        error("Setting Error : The CP_PMA_PLL_REG_IBUP_PD is set to %d. Legal values is 0 to 262143",CP_PMA_PLL_REG_IBUP_PD);
    }

//initial config body60 end


//initial config body61 begin
    if(CP_PMA_PLL_REG_V2I_BIAS_SEL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[30]  :=  1'b0;
    }
    else if (CP_PMA_PLL_REG_V2I_BIAS_SEL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[30]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[30]  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL_REG_V2I_BIAS_SEL is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL_REG_V2I_BIAS_SEL);
    }

//initial config body61 end


//initial config body62 begin
    if(CP_PMA_PLL_REG_V2I_EN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[31]  :=  1'b0^1'b1;
    }
    else if (CP_PMA_PLL_REG_V2I_EN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[31]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[31]  :=  1'b0^1'b1;
        error("Setting Error : The CP_PMA_PLL_REG_V2I_EN is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL_REG_V2I_EN);
    }

//initial config body62 end


//initial config body63 begin
    if(CP_PMA_PLL_REG_V2I_TB_SEL >= 0 && CP_PMA_PLL_REG_V2I_TB_SEL <= 15)
    {
        SC_PMA_CH_INT_PLL_1[167:164]  :=  CP_PMA_PLL_REG_V2I_TB_SEL;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[167:164]  :=  0;
        error("Setting Error : The CP_PMA_PLL_REG_V2I_TB_SEL is set to %d. Legal values is 0 to 15",CP_PMA_PLL_REG_V2I_TB_SEL);
    }

//initial config body63 end


//initial config body64 begin
    if(CP_PMA_PLL_REG_V2I_RCALTEST_PD == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[163]  :=  1'b0;
    }
    else if (CP_PMA_PLL_REG_V2I_RCALTEST_PD == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[163]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[163]  :=  1'b0;
        error("Setting Error : The CP_PMA_PLL_REG_V2I_RCALTEST_PD is set to %s. Legal values is FALSE,TRUE",CP_PMA_PLL_REG_V2I_RCALTEST_PD);
    }

//initial config body64 end


//initial config body65 begin
    if(CP_PMA_PLL_REG_RES_CAL_TEST >= 0 && CP_PMA_PLL_REG_RES_CAL_TEST <= 63)
    {
        SC_PMA_CH_INT_PLL_1[173:168]  :=  CP_PMA_PLL_REG_RES_CAL_TEST;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[173:168]  :=  0;
        error("Setting Error : The CP_PMA_PLL_REG_RES_CAL_TEST is set to %d. Legal values is 0 to 63",CP_PMA_PLL_REG_RES_CAL_TEST);
    }

//initial config body65 end


//initial config body66 begin
    if(CP_PMA_RES_CAL_DIV >= 0 && CP_PMA_RES_CAL_DIV <= 3)
    {
        SC_PMA_CH_INT_PLL_1[199:198]  :=  CP_PMA_RES_CAL_DIV;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[199:198]  :=  0;
        error("Setting Error : The CP_PMA_RES_CAL_DIV is set to %d. Legal values is 0 to 3",CP_PMA_RES_CAL_DIV);
    }

//initial config body66 end


//initial config body67 begin
    if(CP_PMA_RES_CAL_CLK_SEL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[197]  :=  1'b0;
    }
    else if (CP_PMA_RES_CAL_CLK_SEL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[197]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[197]  :=  1'b0;
        error("Setting Error : The CP_PMA_RES_CAL_CLK_SEL is set to %s. Legal values is FALSE,TRUE",CP_PMA_RES_CAL_CLK_SEL);
    }

//initial config body67 end


//initial config body68 begin
    if(CP_LANE0_PCS_BYPASS_WORD_ALIGN == "FALSE")
    {
        SC_PCS_CH_INT_0[1]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_BYPASS_WORD_ALIGN == "TRUE")
    {
        SC_PCS_CH_INT_0[1]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[1]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_BYPASS_WORD_ALIGN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_BYPASS_WORD_ALIGN);
    }

//initial config body68 end


//initial config body69 begin
    if(CP_LANE0_PCS_BYPASS_DENC == "FALSE")
    {
        SC_PCS_CH_INT_0[2]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_BYPASS_DENC == "TRUE")
    {
        SC_PCS_CH_INT_0[2]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[2]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_BYPASS_DENC is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_BYPASS_DENC);
    }

//initial config body69 end


//initial config body70 begin
    if(CP_LANE0_PCS_BYPASS_BONDING == "FALSE")
    {
        SC_PCS_CH_INT_0[3]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_BYPASS_BONDING == "TRUE")
    {
        SC_PCS_CH_INT_0[3]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[3]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_BYPASS_BONDING is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_BYPASS_BONDING);
    }

//initial config body70 end


//initial config body71 begin
    if(CP_LANE0_PCS_BYPASS_CTC == "FALSE")
    {
        SC_PCS_CH_INT_0[4]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_BYPASS_CTC == "TRUE")
    {
        SC_PCS_CH_INT_0[4]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[4]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_BYPASS_CTC is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_BYPASS_CTC);
    }

//initial config body71 end


//initial config body72 begin
    if(CP_LANE0_PCS_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH_INT_0[5]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH_INT_0[5]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[5]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_BYPASS_GEAR);
    }

//initial config body72 end


//initial config body73 begin
    if(CP_LANE0_PCS_BYPASS_BRIDGE == "FALSE")
    {
        SC_PCS_CH_INT_0[6]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_BYPASS_BRIDGE == "TRUE")
    {
        SC_PCS_CH_INT_0[6]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[6]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_BYPASS_BRIDGE is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_BYPASS_BRIDGE);
    }

//initial config body73 end


//initial config body74 begin
    if(CP_LANE0_PCS_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH_INT_0[7]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH_INT_0[7]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[7]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_BYPASS_BRIDGE_FIFO);
    }

//initial config body74 end


//initial config body75 begin
    if(CP_LANE0_PCS_DATA_MODE == "X8")
    {
        SC_PCS_CH_INT_0[8]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_DATA_MODE == "X10")
    {
        SC_PCS_CH_INT_0[8]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_DATA_MODE == "X16")
    {
        SC_PCS_CH_INT_0[8]  :=  1'b1;
    }
    else if (CP_LANE0_PCS_DATA_MODE == "X20")
    {
        SC_PCS_CH_INT_0[8]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[8]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_DATA_MODE is set to %s. Legal values is X8,X10,X16,X20",CP_LANE0_PCS_DATA_MODE);
    }

//initial config body75 end


//initial config body76 begin
    if(CP_LANE0_PCS_RX_POLARITY_INV == "DELAY")
    {
        SC_PCS_CH_INT_0[10:9]  :=  2'b00;
    }
    else if (CP_LANE0_PCS_RX_POLARITY_INV == "BIT_POLARITY_INVERION")
    {
        SC_PCS_CH_INT_0[10:9]  :=  2'b01;
    }
    else if (CP_LANE0_PCS_RX_POLARITY_INV == "BIT_REVERSAL")
    {
        SC_PCS_CH_INT_0[10:9]  :=  2'b10;
    }
    else if (CP_LANE0_PCS_RX_POLARITY_INV == "BOTH")
    {
        SC_PCS_CH_INT_0[10:9]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_0[10:9]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PCS_RX_POLARITY_INV is set to %s. Legal values is DELAY,BIT_POLARITY_INVERION,BIT_REVERSAL,BOTH",CP_LANE0_PCS_RX_POLARITY_INV);
    }

//initial config body76 end


//initial config body77 begin
    if(CP_LANE0_PCS_ALIGN_MODE == "1GB")
    {
        SC_PCS_CH_INT_0[12:11]  :=  2'b00;
    }
    else if (CP_LANE0_PCS_ALIGN_MODE == "10GB")
    {
        SC_PCS_CH_INT_0[12:11]  :=  2'b01;
    }
    else if (CP_LANE0_PCS_ALIGN_MODE == "RAPIDIO")
    {
        SC_PCS_CH_INT_0[12:11]  :=  2'b10;
    }
    else if (CP_LANE0_PCS_ALIGN_MODE == "OUTSIDE")
    {
        SC_PCS_CH_INT_0[12:11]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_0[12:11]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PCS_ALIGN_MODE is set to %s. Legal values is 1GB,10GB,RAPIDIO,OUTSIDE",CP_LANE0_PCS_ALIGN_MODE);
    }

//initial config body77 end


//initial config body78 begin
    if(CP_LANE0_PCS_SAMP_16B == "X20")
    {
        SC_PCS_CH_INT_0[13]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_SAMP_16B == "X16")
    {
        SC_PCS_CH_INT_0[13]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[13]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_SAMP_16B is set to %s. Legal values is X20,X16",CP_LANE0_PCS_SAMP_16B);
    }

//initial config body78 end


//initial config body79 begin
    if(CP_LANE0_PCS_FARLP_PWR_REDUCTION == "FALSE")
    {
        SC_PCS_CH_INT_0[14]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_FARLP_PWR_REDUCTION == "TRUE")
    {
        SC_PCS_CH_INT_0[14]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[14]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_FARLP_PWR_REDUCTION is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_FARLP_PWR_REDUCTION);
    }

//initial config body79 end


//initial config body80 begin
    if(CP_LANE0_PCS_COMMA_REG0 >= 0 && CP_LANE0_PCS_COMMA_REG0 <= 1023)
    {
        SC_PCS_CH_INT_0[25:16]  :=  CP_LANE0_PCS_COMMA_REG0;
    }
    else
    {
        SC_PCS_CH_INT_0[25:16]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_COMMA_REG0 is set to %d. Legal values is 0 to 1023",CP_LANE0_PCS_COMMA_REG0);
    }

//initial config body80 end


//initial config body81 begin
    if(CP_LANE0_PCS_COMMA_MASK >= 0 && CP_LANE0_PCS_COMMA_MASK <= 1023)
    {
        SC_PCS_CH_INT_0[35:26]  :=  CP_LANE0_PCS_COMMA_MASK;
    }
    else
    {
        SC_PCS_CH_INT_0[35:26]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_COMMA_MASK is set to %d. Legal values is 0 to 1023",CP_LANE0_PCS_COMMA_MASK);
    }

//initial config body81 end


//initial config body82 begin
    if(CP_LANE0_PCS_CEB_MODE == "10GB")
    {
        SC_PCS_CH_INT_0[37:36]  :=  2'b00;
    }
    else if (CP_LANE0_PCS_CEB_MODE == "RAPIDIO")
    {
        SC_PCS_CH_INT_0[37:36]  :=  2'b01;
    }
    else if (CP_LANE0_PCS_CEB_MODE == "OUTSIDE")
    {
        SC_PCS_CH_INT_0[37:36]  :=  2'b10;
    }
    else
    {
        SC_PCS_CH_INT_0[37:36]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PCS_CEB_MODE is set to %s. Legal values is 10GB,RAPIDIO,OUTSIDE",CP_LANE0_PCS_CEB_MODE);
    }

//initial config body82 end


//initial config body83 begin
    if(CP_LANE0_PCS_CTC_MODE == "1SKIP")
    {
        SC_PCS_CH_INT_0[39:38]  :=  2'b00;
    }
    else if (CP_LANE0_PCS_CTC_MODE == "2SKIP")
    {
        SC_PCS_CH_INT_0[39:38]  :=  2'b01;
    }
    else if (CP_LANE0_PCS_CTC_MODE == "PCIE_2BYTE")
    {
        SC_PCS_CH_INT_0[39:38]  :=  2'b10;
    }
    else if (CP_LANE0_PCS_CTC_MODE == "4SKIP")
    {
        SC_PCS_CH_INT_0[39:38]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_0[39:38]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PCS_CTC_MODE is set to %s. Legal values is 1SKIP,2SKIP,PCIE_2BYTE,4SKIP",CP_LANE0_PCS_CTC_MODE);
    }

//initial config body83 end


//initial config body84 begin
    if(CP_LANE0_PCS_A_REG >= 0 && CP_LANE0_PCS_A_REG <= 255)
    {
        SC_PCS_CH_INT_0[47:40]  :=  CP_LANE0_PCS_A_REG;
    }
    else
    {
        SC_PCS_CH_INT_0[47:40]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_A_REG is set to %d. Legal values is 0 to 255",CP_LANE0_PCS_A_REG);
    }

//initial config body84 end


//initial config body85 begin
    if(CP_LANE0_PCS_GE_AUTO_EN == "FALSE")
    {
        SC_PCS_CH_INT_0[49]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_GE_AUTO_EN == "TRUE")
    {
        SC_PCS_CH_INT_0[49]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[49]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_GE_AUTO_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_GE_AUTO_EN);
    }

//initial config body85 end


//initial config body86 begin
    if(CP_LANE0_PCS_SKIP_REG0 >= 0 && CP_LANE0_PCS_SKIP_REG0 <= 511)
    {
        SC_PCS_CH_INT_0[58:50]  :=  CP_LANE0_PCS_SKIP_REG0;
    }
    else
    {
        SC_PCS_CH_INT_0[58:50]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_SKIP_REG0 is set to %d. Legal values is 0 to 511",CP_LANE0_PCS_SKIP_REG0);
    }

//initial config body86 end


//initial config body87 begin
    if(CP_LANE0_PCS_SKIP_REG1 >= 0 && CP_LANE0_PCS_SKIP_REG1 <= 511)
    {
        SC_PCS_CH_INT_0[68:60]  :=  CP_LANE0_PCS_SKIP_REG1;
    }
    else
    {
        SC_PCS_CH_INT_0[68:60]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_SKIP_REG1 is set to %d. Legal values is 0 to 511",CP_LANE0_PCS_SKIP_REG1);
    }

//initial config body87 end


//initial config body88 begin
    if(CP_LANE0_PCS_SKIP_REG2 >= 0 && CP_LANE0_PCS_SKIP_REG2 <= 511)
    {
        SC_PCS_CH_INT_0[78:70]  :=  CP_LANE0_PCS_SKIP_REG2;
    }
    else
    {
        SC_PCS_CH_INT_0[78:70]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_SKIP_REG2 is set to %d. Legal values is 0 to 511",CP_LANE0_PCS_SKIP_REG2);
    }

//initial config body88 end


//initial config body89 begin
    if(CP_LANE0_PCS_SKIP_REG3 >= 0 && CP_LANE0_PCS_SKIP_REG3 <= 511)
    {
        SC_PCS_CH_INT_0[88:80]  :=  CP_LANE0_PCS_SKIP_REG3;
    }
    else
    {
        SC_PCS_CH_INT_0[88:80]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_SKIP_REG3 is set to %d. Legal values is 0 to 511",CP_LANE0_PCS_SKIP_REG3);
    }

//initial config body89 end


//initial config body90 begin
    if(CP_LANE0_PCS_DEC_DUAL == "FALSE")
    {
        SC_PCS_CH_INT_0[90]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_DEC_DUAL == "TRUE")
    {
        SC_PCS_CH_INT_0[90]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[90]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_DEC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_DEC_DUAL);
    }

//initial config body90 end


//initial config body91 begin
    if(CP_LANE0_PCS_SPLIT == "FALSE")
    {
        SC_PCS_CH_INT_0[91]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_SPLIT == "TRUE")
    {
        SC_PCS_CH_INT_0[91]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[91]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_SPLIT);
    }

//initial config body91 end


//initial config body92 begin
    if(CP_LANE0_PCS_FIFOFLAG_CTC == "FALSE")
    {
        SC_PCS_CH_INT_0[92]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_FIFOFLAG_CTC == "TRUE")
    {
        SC_PCS_CH_INT_0[92]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[92]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_FIFOFLAG_CTC is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_FIFOFLAG_CTC);
    }

//initial config body92 end


//initial config body93 begin
    if(CP_LANE0_PCS_COMMA_DET_MODE == "COMMA_PATTERN")
    {
        SC_PCS_CH_INT_0[93]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_COMMA_DET_MODE == "RX_CLK_SLIP")
    {
        SC_PCS_CH_INT_0[93]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[93]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_COMMA_DET_MODE is set to %s. Legal values is COMMA_PATTERN,RX_CLK_SLIP",CP_LANE0_PCS_COMMA_DET_MODE);
    }

//initial config body93 end


//initial config body94 begin
    if(CP_LANE0_PCS_ERRDETECT_SILENCE == "FALSE")
    {
        SC_PCS_CH_INT_0[94]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_ERRDETECT_SILENCE == "TRUE")
    {
        SC_PCS_CH_INT_0[94]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[94]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_ERRDETECT_SILENCE is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_ERRDETECT_SILENCE);
    }

//initial config body94 end


//initial config body95 begin
    if(CP_LANE0_PCS_PMA_RCLK_POLINV == "PMA_RCLK")
    {
        SC_PCS_CH_INT_0[96]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_PMA_RCLK_POLINV == "REVERSE_OF_PMA_RCLK")
    {
        SC_PCS_CH_INT_0[96]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[96]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_PMA_RCLK_POLINV is set to %s. Legal values is PMA_RCLK,REVERSE_OF_PMA_RCLK",CP_LANE0_PCS_PMA_RCLK_POLINV);
    }

//initial config body95 end


//initial config body96 begin
    if(CP_LANE0_PCS_PCS_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_0[98:97]  :=  2'b00;
    }
    else if (CP_LANE0_PCS_PCS_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_0[98:97]  :=  2'b01;
    }
    else if (CP_LANE0_PCS_PCS_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH_INT_0[98:97]  :=  2'b10;
    }
    else
    {
        SC_PCS_CH_INT_0[98:97]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PCS_PCS_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,RCLK",CP_LANE0_PCS_PCS_RCLK_SEL);
    }

//initial config body96 end


//initial config body97 begin
    if(CP_LANE0_PCS_CB_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_0[100:99]  :=  2'b00;
    }
    else if (CP_LANE0_PCS_CB_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_0[100:99]  :=  2'b01;
    }
    else if (CP_LANE0_PCS_CB_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH_INT_0[100:99]  :=  2'b10;
    }
    else
    {
        SC_PCS_CH_INT_0[100:99]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PCS_CB_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK",CP_LANE0_PCS_CB_RCLK_SEL);
    }

//initial config body97 end


//initial config body98 begin
    if(CP_LANE0_PCS_AFTER_CTC_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_0[102:101]  :=  2'b00;
    }
    else if (CP_LANE0_PCS_AFTER_CTC_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_0[102:101]  :=  2'b01;
    }
    else if (CP_LANE0_PCS_AFTER_CTC_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH_INT_0[102:101]  :=  2'b10;
    }
    else if (CP_LANE0_PCS_AFTER_CTC_RCLK_SEL == "RCLK2")
    {
        SC_PCS_CH_INT_0[102:101]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_0[102:101]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PCS_AFTER_CTC_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK2",CP_LANE0_PCS_AFTER_CTC_RCLK_SEL);
    }

//initial config body98 end


//initial config body99 begin
    if(CP_LANE0_PCS_RCLK_POLINV == "RCLK")
    {
        SC_PCS_CH_INT_0[103]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_RCLK_POLINV == "REVERSE_OF_RCLK")
    {
        SC_PCS_CH_INT_0[103]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[103]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_RCLK_POLINV is set to %s. Legal values is RCLK,REVERSE_OF_RCLK",CP_LANE0_PCS_RCLK_POLINV);
    }

//initial config body99 end


//initial config body100 begin
    if(CP_LANE0_PCS_BRIDGE_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_0[105:104]  :=  2'b00;
    }
    else if (CP_LANE0_PCS_BRIDGE_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_0[105:104]  :=  2'b01;
    }
    else if (CP_LANE0_PCS_BRIDGE_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH_INT_0[105:104]  :=  2'b10;
    }
    else if (CP_LANE0_PCS_BRIDGE_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH_INT_0[105:104]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_0[105:104]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PCS_BRIDGE_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK",CP_LANE0_PCS_BRIDGE_RCLK_SEL);
    }

//initial config body100 end


//initial config body101 begin
    if(CP_LANE0_PCS_PCS_RCLK_EN == "FALSE")
    {
        SC_PCS_CH_INT_0[106]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_PCS_RCLK_EN == "TRUE")
    {
        SC_PCS_CH_INT_0[106]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[106]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_PCS_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_PCS_RCLK_EN);
    }

//initial config body101 end


//initial config body102 begin
    if(CP_LANE0_PCS_CB_RCLK_EN == "FALSE")
    {
        SC_PCS_CH_INT_0[107]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_CB_RCLK_EN == "TRUE")
    {
        SC_PCS_CH_INT_0[107]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[107]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_CB_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_CB_RCLK_EN);
    }

//initial config body102 end


//initial config body103 begin
    if(CP_LANE0_PCS_AFTER_CTC_RCLK_EN == "FALSE")
    {
        SC_PCS_CH_INT_0[108]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_AFTER_CTC_RCLK_EN == "TRUE")
    {
        SC_PCS_CH_INT_0[108]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[108]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_AFTER_CTC_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_AFTER_CTC_RCLK_EN);
    }

//initial config body103 end


//initial config body104 begin
    if(CP_LANE0_PCS_AFTER_CTC_RCLK_EN_GB == "FALSE")
    {
        SC_PCS_CH_INT_0[109]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_AFTER_CTC_RCLK_EN_GB == "TRUE")
    {
        SC_PCS_CH_INT_0[109]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[109]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_AFTER_CTC_RCLK_EN_GB is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_AFTER_CTC_RCLK_EN_GB);
    }

//initial config body104 end


//initial config body105 begin
    if(CP_LANE0_PCS_PCS_RX_RSTN == "FALSE")
    {
        SC_PCS_CH_INT_0[112]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_PCS_RX_RSTN == "TRUE")
    {
        SC_PCS_CH_INT_0[112]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[112]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_PCS_RX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_PCS_RX_RSTN);
    }

//initial config body105 end


//initial config body106 begin
    if(CP_LANE0_PCS_PCIE_SLAVE == "MASTER")
    {
        SC_PCS_CH_INT_0[114]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_PCIE_SLAVE == "SLAVE")
    {
        SC_PCS_CH_INT_0[114]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[114]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_PCIE_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_LANE0_PCS_PCIE_SLAVE);
    }

//initial config body106 end


//initial config body107 begin
    if(CP_LANE0_PCS_RX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH_INT_0[116:115]  :=  2'b00;
    }
    else if (CP_LANE0_PCS_RX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH_INT_0[116:115]  :=  2'b01;
    }
    else if (CP_LANE0_PCS_RX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH_INT_0[116:115]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_0[116:115]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PCS_RX_64B66B_67B is set to %s. Legal values is NORMAL,64B_66B,64B_67B",CP_LANE0_PCS_RX_64B66B_67B);
    }

//initial config body107 end


//initial config body108 begin
    if(CP_LANE0_PCS_RX_BRIDGE_CLK_POLINV == "RX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_0[117]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_RX_BRIDGE_CLK_POLINV == "REVERSE_OF_RX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_0[117]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[117]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_RX_BRIDGE_CLK_POLINV is set to %s. Legal values is RX_BRIDGE_CLK,REVERSE_OF_RX_BRIDGE_CLK",CP_LANE0_PCS_RX_BRIDGE_CLK_POLINV);
    }

//initial config body108 end


//initial config body109 begin
    if(CP_LANE0_PCS_PCS_CB_RSTN == "FALSE")
    {
        SC_PCS_CH_INT_0[120]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_PCS_CB_RSTN == "TRUE")
    {
        SC_PCS_CH_INT_0[120]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[120]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_PCS_CB_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_PCS_CB_RSTN);
    }

//initial config body109 end


//initial config body110 begin
    if(CP_LANE0_PCS_TX_BRIDGE_GEAR_SEL == "FALSE")
    {
        SC_PCS_CH_INT_0[128]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_BRIDGE_GEAR_SEL == "TRUE")
    {
        SC_PCS_CH_INT_0[128]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[128]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_BRIDGE_GEAR_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_TX_BRIDGE_GEAR_SEL);
    }

//initial config body110 end


//initial config body111 begin
    if(CP_LANE0_PCS_TX_BYPASS_BRIDGE_UINT == "FALSE")
    {
        SC_PCS_CH_INT_0[129]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_BYPASS_BRIDGE_UINT == "TRUE")
    {
        SC_PCS_CH_INT_0[129]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[129]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_BYPASS_BRIDGE_UINT is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_TX_BYPASS_BRIDGE_UINT);
    }

//initial config body111 end


//initial config body112 begin
    if(CP_LANE0_PCS_TX_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH_INT_0[130]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH_INT_0[130]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[130]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_TX_BYPASS_BRIDGE_FIFO);
    }

//initial config body112 end


//initial config body113 begin
    if(CP_LANE0_PCS_TX_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH_INT_0[131]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH_INT_0[131]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[131]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_TX_BYPASS_GEAR);
    }

//initial config body113 end


//initial config body114 begin
    if(CP_LANE0_PCS_TX_BYPASS_ENC == "FALSE")
    {
        SC_PCS_CH_INT_0[132]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_BYPASS_ENC == "TRUE")
    {
        SC_PCS_CH_INT_0[132]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[132]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_BYPASS_ENC is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_TX_BYPASS_ENC);
    }

//initial config body114 end


//initial config body115 begin
    if(CP_LANE0_PCS_TX_BYPASS_BIT_SLIP == "FALSE")
    {
        SC_PCS_CH_INT_0[133]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_BYPASS_BIT_SLIP == "TRUE")
    {
        SC_PCS_CH_INT_0[133]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[133]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_BYPASS_BIT_SLIP is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_TX_BYPASS_BIT_SLIP);
    }

//initial config body115 end


//initial config body116 begin
    if(CP_LANE0_PCS_TX_GEAR_SPLIT == "FALSE")
    {
        SC_PCS_CH_INT_0[136]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_GEAR_SPLIT == "TRUE")
    {
        SC_PCS_CH_INT_0[136]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[136]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_GEAR_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_TX_GEAR_SPLIT);
    }

//initial config body116 end


//initial config body117 begin
    if(CP_LANE0_PCS_TX_DRIVE_REG_MODE == "NO_CHANGE")
    {
        SC_PCS_CH_INT_0[138:137]  :=  2'b00;
    }
    else if (CP_LANE0_PCS_TX_DRIVE_REG_MODE == "EN_POLARIY_REV")
    {
        SC_PCS_CH_INT_0[138:137]  :=  2'b01;
    }
    else if (CP_LANE0_PCS_TX_DRIVE_REG_MODE == "EN_BIT_REV")
    {
        SC_PCS_CH_INT_0[138:137]  :=  2'b10;
    }
    else if (CP_LANE0_PCS_TX_DRIVE_REG_MODE == "EN_BOTH")
    {
        SC_PCS_CH_INT_0[138:137]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_0[138:137]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PCS_TX_DRIVE_REG_MODE is set to %s. Legal values is NO_CHANGE,EN_POLARIY_REV,EN_BIT_REV,EN_BOTH",CP_LANE0_PCS_TX_DRIVE_REG_MODE);
    }

//initial config body117 end


//initial config body118 begin
    if(CP_LANE0_PCS_TX_BIT_SLIP_CYCLES >= 0 && CP_LANE0_PCS_TX_BIT_SLIP_CYCLES <= 31)
    {
        SC_PCS_CH_INT_0[143:139]  :=  CP_LANE0_PCS_TX_BIT_SLIP_CYCLES;
    }
    else
    {
        SC_PCS_CH_INT_0[143:139]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_TX_BIT_SLIP_CYCLES is set to %d. Legal values is 0 to 31",CP_LANE0_PCS_TX_BIT_SLIP_CYCLES);
    }

//initial config body118 end


//initial config body119 begin
    if(CP_LANE0_PCS_INT_TX_MASK_0 == "FALSE")
    {
        SC_PCS_CH_INT_0[144]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_TX_MASK_0 == "TRUE")
    {
        SC_PCS_CH_INT_0[144]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[144]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_TX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_TX_MASK_0);
    }

//initial config body119 end


//initial config body120 begin
    if(CP_LANE0_PCS_INT_TX_MASK_1 == "FALSE")
    {
        SC_PCS_CH_INT_0[145]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_TX_MASK_1 == "TRUE")
    {
        SC_PCS_CH_INT_0[145]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[145]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_TX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_TX_MASK_1);
    }

//initial config body120 end


//initial config body121 begin
    if(CP_LANE0_PCS_INT_TX_MASK_2 == "FALSE")
    {
        SC_PCS_CH_INT_0[146]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_TX_MASK_2 == "TRUE")
    {
        SC_PCS_CH_INT_0[146]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[146]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_TX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_TX_MASK_2);
    }

//initial config body121 end


//initial config body122 begin
    if(CP_LANE0_PCS_INT_TX_CLR_0 == "FALSE")
    {
        SC_PCS_CH_INT_0[152]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_TX_CLR_0 == "TRUE")
    {
        SC_PCS_CH_INT_0[152]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[152]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_TX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_TX_CLR_0);
    }

//initial config body122 end


//initial config body123 begin
    if(CP_LANE0_PCS_INT_TX_CLR_1 == "FALSE")
    {
        SC_PCS_CH_INT_0[153]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_TX_CLR_1 == "TRUE")
    {
        SC_PCS_CH_INT_0[153]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[153]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_TX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_TX_CLR_1);
    }

//initial config body123 end


//initial config body124 begin
    if(CP_LANE0_PCS_INT_TX_CLR_2 == "FALSE")
    {
        SC_PCS_CH_INT_0[154]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_TX_CLR_2 == "TRUE")
    {
        SC_PCS_CH_INT_0[154]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[154]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_TX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_TX_CLR_2);
    }

//initial config body124 end


//initial config body125 begin
    if(CP_LANE0_PCS_TX_PMA_TCLK_POLINV == "PMA_TCLK")
    {
        SC_PCS_CH_INT_0[160]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_PMA_TCLK_POLINV == "REVERSE_OF_PMA_TCLK")
    {
        SC_PCS_CH_INT_0[160]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[160]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_PMA_TCLK_POLINV is set to %s. Legal values is PMA_TCLK,REVERSE_OF_PMA_TCLK",CP_LANE0_PCS_TX_PMA_TCLK_POLINV);
    }

//initial config body125 end


//initial config body126 begin
    if(CP_LANE0_PCS_TX_PCS_CLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH_INT_0[161]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_PCS_CLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH_INT_0[161]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[161]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_PCS_CLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_TX_PCS_CLK_EN_SEL);
    }

//initial config body126 end


//initial config body127 begin
    if(CP_LANE0_PCS_TX_BRIDGE_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH_INT_0[162]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_BRIDGE_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH_INT_0[162]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[162]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_BRIDGE_TCLK_SEL is set to %s. Legal values is TCLK,TCLK2",CP_LANE0_PCS_TX_BRIDGE_TCLK_SEL);
    }

//initial config body127 end


//initial config body128 begin
    if(CP_LANE0_PCS_TX_TCLK_POLINV == "TCLK")
    {
        SC_PCS_CH_INT_0[163]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_TCLK_POLINV == "REVERSE_OF_TCLK")
    {
        SC_PCS_CH_INT_0[163]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[163]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_TCLK_POLINV is set to %s. Legal values is TCLK,REVERSE_OF_TCLK",CP_LANE0_PCS_TX_TCLK_POLINV);
    }

//initial config body128 end


//initial config body129 begin
    if(CP_LANE0_PCS_PCS_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_0[164]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_PCS_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH_INT_0[164]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[164]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_PCS_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK",CP_LANE0_PCS_PCS_TCLK_SEL);
    }

//initial config body129 end


//initial config body130 begin
    if(CP_LANE0_PCS_TX_PCS_TX_RSTN == "FALSE")
    {
        SC_PCS_CH_INT_0[165]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_PCS_TX_RSTN == "TRUE")
    {
        SC_PCS_CH_INT_0[165]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[165]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_PCS_TX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_TX_PCS_TX_RSTN);
    }

//initial config body130 end


//initial config body131 begin
    if(CP_LANE0_PCS_TX_SLAVE == "MASTER")
    {
        SC_PCS_CH_INT_0[166]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_SLAVE == "SLAVE")
    {
        SC_PCS_CH_INT_0[166]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[166]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_LANE0_PCS_TX_SLAVE);
    }

//initial config body131 end


//initial config body132 begin
    if(CP_LANE0_PCS_TX_GEAR_CLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH_INT_0[167]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_GEAR_CLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH_INT_0[167]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[167]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_GEAR_CLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_TX_GEAR_CLK_EN_SEL);
    }

//initial config body132 end


//initial config body133 begin
    if(CP_LANE0_PCS_DATA_WIDTH_MODE == "X20")
    {
        SC_PCS_CH_INT_0[169:168]  :=  2'b00;
    }
    else if (CP_LANE0_PCS_DATA_WIDTH_MODE == "X16")
    {
        SC_PCS_CH_INT_0[169:168]  :=  2'b10;
    }
    else if (CP_LANE0_PCS_DATA_WIDTH_MODE == "X10")
    {
        SC_PCS_CH_INT_0[169:168]  :=  2'b01;
    }
    else if (CP_LANE0_PCS_DATA_WIDTH_MODE == "X8")
    {
        SC_PCS_CH_INT_0[169:168]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_0[169:168]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PCS_DATA_WIDTH_MODE is set to %s. Legal values is X20,X16,X10,X8",CP_LANE0_PCS_DATA_WIDTH_MODE);
    }

//initial config body133 end


//initial config body134 begin
    if(CP_LANE0_PCS_TX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH_INT_0[171:170]  :=  2'b00;
    }
    else if (CP_LANE0_PCS_TX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH_INT_0[171:170]  :=  2'b01;
    }
    else if (CP_LANE0_PCS_TX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH_INT_0[171:170]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_0[171:170]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PCS_TX_64B66B_67B is set to %s. Legal values is NORMAL,64B_66B,64B_67B",CP_LANE0_PCS_TX_64B66B_67B);
    }

//initial config body134 end


//initial config body135 begin
    if(CP_LANE0_PCS_GEAR_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_0[172]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_GEAR_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH_INT_0[172]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[172]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_GEAR_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK2",CP_LANE0_PCS_GEAR_TCLK_SEL);
    }

//initial config body135 end


//initial config body136 begin
    if(CP_LANE0_PCS_TX_TCLK2FABRIC_SEL == "FALSE")
    {
        SC_PCS_CH_INT_0[176]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_TCLK2FABRIC_SEL == "TRUE")
    {
        SC_PCS_CH_INT_0[176]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[176]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_TCLK2FABRIC_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_TX_TCLK2FABRIC_SEL);
    }

//initial config body136 end


//initial config body137 begin
    if(CP_LANE0_PCS_TX_OUTZZ == "FALSE")
    {
        SC_PCS_CH_INT_0[177]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_OUTZZ == "TRUE")
    {
        SC_PCS_CH_INT_0[177]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[177]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_OUTZZ is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_TX_OUTZZ);
    }

//initial config body137 end


//initial config body138 begin
    if(CP_LANE0_PCS_ENC_DUAL == "FALSE")
    {
        SC_PCS_CH_INT_0[178]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_ENC_DUAL == "TRUE")
    {
        SC_PCS_CH_INT_0[178]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[178]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_ENC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_ENC_DUAL);
    }

//initial config body138 end


//initial config body139 begin
    if(CP_LANE0_PCS_TX_BITSLIP_DATA_MODE == "X10")
    {
        SC_PCS_CH_INT_0[179]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_BITSLIP_DATA_MODE == "X20")
    {
        SC_PCS_CH_INT_0[179]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[179]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_BITSLIP_DATA_MODE is set to %s. Legal values is X10,X20",CP_LANE0_PCS_TX_BITSLIP_DATA_MODE);
    }

//initial config body139 end


//initial config body140 begin
    if(CP_LANE0_PCS_TX_BRIDGE_CLK_POLINV == "TX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_0[180]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_BRIDGE_CLK_POLINV == "REVERSE_OF_TX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_0[180]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[180]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_BRIDGE_CLK_POLINV is set to %s. Legal values is TX_BRIDGE_CLK,REVERSE_OF_TX_BRIDGE_CLK",CP_LANE0_PCS_TX_BRIDGE_CLK_POLINV);
    }

//initial config body140 end


//initial config body141 begin
    if(CP_LANE0_PCS_COMMA_REG1 >= 0 && CP_LANE0_PCS_COMMA_REG1 <= 1023)
    {
        SC_PCS_CH_INT_0[193:184]  :=  CP_LANE0_PCS_COMMA_REG1;
    }
    else
    {
        SC_PCS_CH_INT_0[193:184]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_COMMA_REG1 is set to %d. Legal values is 0 to 1023",CP_LANE0_PCS_COMMA_REG1);
    }

//initial config body141 end


//initial config body142 begin
    if(CP_LANE0_PCS_RAPID_IMAX >= 0 && CP_LANE0_PCS_RAPID_IMAX <= 7)
    {
        SC_PCS_CH_INT_0[202:200]  :=  CP_LANE0_PCS_RAPID_IMAX;
    }
    else
    {
        SC_PCS_CH_INT_0[202:200]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_RAPID_IMAX is set to %d. Legal values is 0 to 7",CP_LANE0_PCS_RAPID_IMAX);
    }

//initial config body142 end


//initial config body143 begin
    if(CP_LANE0_PCS_RAPID_VMIN_1 >= 0 && CP_LANE0_PCS_RAPID_VMIN_1 <= 255)
    {
        SC_PCS_CH_INT_0[215:208]  :=  CP_LANE0_PCS_RAPID_VMIN_1;
    }
    else
    {
        SC_PCS_CH_INT_0[215:208]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_RAPID_VMIN_1 is set to %d. Legal values is 0 to 255",CP_LANE0_PCS_RAPID_VMIN_1);
    }

//initial config body143 end


//initial config body144 begin
    if(CP_LANE0_PCS_RAPID_VMIN_2 >= 0 && CP_LANE0_PCS_RAPID_VMIN_2 <= 255)
    {
        SC_PCS_CH_INT_0[223:216]  :=  CP_LANE0_PCS_RAPID_VMIN_2;
    }
    else
    {
        SC_PCS_CH_INT_0[223:216]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_RAPID_VMIN_2 is set to %d. Legal values is 0 to 255",CP_LANE0_PCS_RAPID_VMIN_2);
    }

//initial config body144 end


//initial config body145 begin
    if(CP_LANE0_PCS_RX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH_INT_0[227:224]  :=  4'd0;
    }
    else if (CP_LANE0_PCS_RX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH_INT_0[227:224]  :=  4'd1;
    }
    else if (CP_LANE0_PCS_RX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH_INT_0[227:224]  :=  4'd2;
    }
    else if (CP_LANE0_PCS_RX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH_INT_0[227:224]  :=  4'd3;
    }
    else if (CP_LANE0_PCS_RX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH_INT_0[227:224]  :=  4'd4;
    }
    else
    {
        SC_PCS_CH_INT_0[227:224]  :=  4'd0;
        error("Setting Error : The CP_LANE0_PCS_RX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31",CP_LANE0_PCS_RX_PRBS_MODE);
    }

//initial config body145 end


//initial config body146 begin
    if(CP_LANE0_PCS_RX_ERRCNT_CLR == "FALSE")
    {
        SC_PCS_CH_INT_0[228]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_RX_ERRCNT_CLR == "TRUE")
    {
        SC_PCS_CH_INT_0[228]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[228]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_RX_ERRCNT_CLR is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_RX_ERRCNT_CLR);
    }

//initial config body146 end


//initial config body147 begin
    if(CP_LANE0_PCS_PRBS_ERR_LPBK == "FALSE")
    {
        SC_PCS_CH_INT_0[229]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_PRBS_ERR_LPBK == "TRUE")
    {
        SC_PCS_CH_INT_0[229]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[229]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_PRBS_ERR_LPBK is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_PRBS_ERR_LPBK);
    }

//initial config body147 end


//initial config body148 begin
    if(CP_LANE0_PCS_TX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH_INT_0[235:232]  :=  4'd0;
    }
    else if (CP_LANE0_PCS_TX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH_INT_0[235:232]  :=  4'd1;
    }
    else if (CP_LANE0_PCS_TX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH_INT_0[235:232]  :=  4'd2;
    }
    else if (CP_LANE0_PCS_TX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH_INT_0[235:232]  :=  4'd3;
    }
    else if (CP_LANE0_PCS_TX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH_INT_0[235:232]  :=  4'd4;
    }
    else if (CP_LANE0_PCS_TX_PRBS_MODE == "LONG_1")
    {
        SC_PCS_CH_INT_0[235:232]  :=  4'd5;
    }
    else if (CP_LANE0_PCS_TX_PRBS_MODE == "LONG_0")
    {
        SC_PCS_CH_INT_0[235:232]  :=  4'd6;
    }
    else if (CP_LANE0_PCS_TX_PRBS_MODE == "20UI")
    {
        SC_PCS_CH_INT_0[235:232]  :=  4'd7;
    }
    else if (CP_LANE0_PCS_TX_PRBS_MODE == "D10_2")
    {
        SC_PCS_CH_INT_0[235:232]  :=  4'd8;
    }
    else if (CP_LANE0_PCS_TX_PRBS_MODE == "PCIE")
    {
        SC_PCS_CH_INT_0[235:232]  :=  4'd9;
    }
    else
    {
        SC_PCS_CH_INT_0[235:232]  :=  4'd0;
        error("Setting Error : The CP_LANE0_PCS_TX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31,LONG_1,LONG_0,20UI,D10_2,PCIE",CP_LANE0_PCS_TX_PRBS_MODE);
    }

//initial config body148 end


//initial config body149 begin
    if(CP_LANE0_PCS_TX_INSERT_ER == "FALSE")
    {
        SC_PCS_CH_INT_0[236]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TX_INSERT_ER == "TRUE")
    {
        SC_PCS_CH_INT_0[236]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[236]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TX_INSERT_ER is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_TX_INSERT_ER);
    }

//initial config body149 end


//initial config body150 begin
    if(CP_LANE0_PCS_ENABLE_PRBS_GEN == "FALSE")
    {
        SC_PCS_CH_INT_0[237]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_ENABLE_PRBS_GEN == "TRUE")
    {
        SC_PCS_CH_INT_0[237]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[237]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_ENABLE_PRBS_GEN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_ENABLE_PRBS_GEN);
    }

//initial config body150 end


//initial config body151 begin
    if(CP_LANE0_PCS_DEFAULT_RADDR >= 0 && CP_LANE0_PCS_DEFAULT_RADDR <= 15)
    {
        SC_PCS_CH_INT_0[251:248]  :=  CP_LANE0_PCS_DEFAULT_RADDR;
    }
    else
    {
        SC_PCS_CH_INT_0[251:248]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_DEFAULT_RADDR is set to %d. Legal values is 0 to 15",CP_LANE0_PCS_DEFAULT_RADDR);
    }

//initial config body151 end


//initial config body152 begin
    if(CP_LANE0_PCS_MASTER_CHECK_OFFSET >= 0 && CP_LANE0_PCS_MASTER_CHECK_OFFSET <= 15)
    {
        SC_PCS_CH_INT_0[255:252]  :=  CP_LANE0_PCS_MASTER_CHECK_OFFSET;
    }
    else
    {
        SC_PCS_CH_INT_0[255:252]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_MASTER_CHECK_OFFSET is set to %d. Legal values is 0 to 15",CP_LANE0_PCS_MASTER_CHECK_OFFSET);
    }

//initial config body152 end


//initial config body153 begin
    if(CP_LANE0_PCS_DELAY_SET >= 0 && CP_LANE0_PCS_DELAY_SET <= 15)
    {
        SC_PCS_CH_INT_0[259:256]  :=  CP_LANE0_PCS_DELAY_SET;
    }
    else
    {
        SC_PCS_CH_INT_0[259:256]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_DELAY_SET is set to %d. Legal values is 0 to 15",CP_LANE0_PCS_DELAY_SET);
    }

//initial config body153 end


//initial config body154 begin
    if(CP_LANE0_PCS_SEACH_OFFSET == "20BIT")
    {
        SC_PCS_CH_INT_0[262:260]  :=  3'd0;
    }
    else if (CP_LANE0_PCS_SEACH_OFFSET == "30BIT")
    {
        SC_PCS_CH_INT_0[262:260]  :=  3'd1;
    }
    else if (CP_LANE0_PCS_SEACH_OFFSET == "40BIT")
    {
        SC_PCS_CH_INT_0[262:260]  :=  3'd2;
    }
    else if (CP_LANE0_PCS_SEACH_OFFSET == "50BIT")
    {
        SC_PCS_CH_INT_0[262:260]  :=  3'd3;
    }
    else if (CP_LANE0_PCS_SEACH_OFFSET == "60BIT")
    {
        SC_PCS_CH_INT_0[262:260]  :=  3'd4;
    }
    else if (CP_LANE0_PCS_SEACH_OFFSET == "70BIT")
    {
        SC_PCS_CH_INT_0[262:260]  :=  3'd5;
    }
    else if (CP_LANE0_PCS_SEACH_OFFSET == "80BIT")
    {
        SC_PCS_CH_INT_0[262:260]  :=  3'd6;
    }
    else
    {
        SC_PCS_CH_INT_0[262:260]  :=  3'd0;
        error("Setting Error : The CP_LANE0_PCS_SEACH_OFFSET is set to %s. Legal values is 20BIT,30BIT,40BIT,50BIT,60BIT,70BIT,80BIT",CP_LANE0_PCS_SEACH_OFFSET);
    }

//initial config body154 end


//initial config body155 begin
    if(CP_LANE0_PCS_CEB_RAPIDLS_MMAX >= 0 && CP_LANE0_PCS_CEB_RAPIDLS_MMAX <= 7)
    {
        SC_PCS_CH_INT_0[266:264]  :=  CP_LANE0_PCS_CEB_RAPIDLS_MMAX;
    }
    else
    {
        SC_PCS_CH_INT_0[266:264]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_CEB_RAPIDLS_MMAX is set to %d. Legal values is 0 to 7",CP_LANE0_PCS_CEB_RAPIDLS_MMAX);
    }

//initial config body155 end


//initial config body156 begin
    if(CP_LANE0_PCS_CTC_AFULL >= 0 && CP_LANE0_PCS_CTC_AFULL <= 31)
    {
        SC_PCS_CH_INT_0[276:272]  :=  CP_LANE0_PCS_CTC_AFULL;
    }
    else
    {
        SC_PCS_CH_INT_0[276:272]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_CTC_AFULL is set to %d. Legal values is 0 to 31",CP_LANE0_PCS_CTC_AFULL);
    }

//initial config body156 end


//initial config body157 begin
    if(CP_LANE0_PCS_CTC_AEMPTY >= 0 && CP_LANE0_PCS_CTC_AEMPTY <= 31)
    {
        SC_PCS_CH_INT_0[284:280]  :=  CP_LANE0_PCS_CTC_AEMPTY;
    }
    else
    {
        SC_PCS_CH_INT_0[284:280]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_CTC_AEMPTY is set to %d. Legal values is 0 to 31",CP_LANE0_PCS_CTC_AEMPTY);
    }

//initial config body157 end


//initial config body158 begin
    if(CP_LANE0_PCS_CTC_CONTI_SKP_SET >= 0 && CP_LANE0_PCS_CTC_CONTI_SKP_SET <= 1)
    {
        SC_PCS_CH_INT_0[285]  :=  CP_LANE0_PCS_CTC_CONTI_SKP_SET;
    }
    else
    {
        SC_PCS_CH_INT_0[285]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_CTC_CONTI_SKP_SET is set to %d. Legal values is 0 to 1",CP_LANE0_PCS_CTC_CONTI_SKP_SET);
    }

//initial config body158 end


//initial config body159 begin
    if(CP_LANE0_PCS_FAR_LOOP == "FALSE")
    {
        SC_PCS_CH_INT_0[288]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_FAR_LOOP == "TRUE")
    {
        SC_PCS_CH_INT_0[288]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[288]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_FAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_FAR_LOOP);
    }

//initial config body159 end


//initial config body160 begin
    if(CP_LANE0_PCS_NEAR_LOOP == "FALSE")
    {
        SC_PCS_CH_INT_0[289]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_NEAR_LOOP == "TRUE")
    {
        SC_PCS_CH_INT_0[289]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[289]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_NEAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_NEAR_LOOP);
    }

//initial config body160 end


//initial config body161 begin
    if(CP_LANE0_PCS_PMA_TX2RX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH_INT_0[290]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_PMA_TX2RX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH_INT_0[290]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[290]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_PMA_TX2RX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_PMA_TX2RX_PLOOP_EN);
    }

//initial config body161 end


//initial config body162 begin
    if(CP_LANE0_PCS_PMA_TX2RX_SLOOP_EN == "FALSE")
    {
        SC_PCS_CH_INT_0[291]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_PMA_TX2RX_SLOOP_EN == "TRUE")
    {
        SC_PCS_CH_INT_0[291]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[291]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_PMA_TX2RX_SLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_PMA_TX2RX_SLOOP_EN);
    }

//initial config body162 end


//initial config body163 begin
    if(CP_LANE0_PCS_PMA_RX2TX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH_INT_0[292]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_PMA_RX2TX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH_INT_0[292]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[292]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_PMA_RX2TX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_PMA_RX2TX_PLOOP_EN);
    }

//initial config body163 end


//initial config body164 begin
    if(CP_LANE0_PCS_INT_RX_MASK_0 == "FALSE")
    {
        SC_PCS_CH_INT_0[296]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_MASK_0 == "TRUE")
    {
        SC_PCS_CH_INT_0[296]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[296]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_MASK_0);
    }

//initial config body164 end


//initial config body165 begin
    if(CP_LANE0_PCS_INT_RX_MASK_1 == "FALSE")
    {
        SC_PCS_CH_INT_0[297]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_MASK_1 == "TRUE")
    {
        SC_PCS_CH_INT_0[297]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[297]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_MASK_1);
    }

//initial config body165 end


//initial config body166 begin
    if(CP_LANE0_PCS_INT_RX_MASK_2 == "FALSE")
    {
        SC_PCS_CH_INT_0[298]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_MASK_2 == "TRUE")
    {
        SC_PCS_CH_INT_0[298]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[298]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_MASK_2);
    }

//initial config body166 end


//initial config body167 begin
    if(CP_LANE0_PCS_INT_RX_MASK_3 == "FALSE")
    {
        SC_PCS_CH_INT_0[299]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_MASK_3 == "TRUE")
    {
        SC_PCS_CH_INT_0[299]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[299]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_MASK_3 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_MASK_3);
    }

//initial config body167 end


//initial config body168 begin
    if(CP_LANE0_PCS_INT_RX_MASK_4 == "FALSE")
    {
        SC_PCS_CH_INT_0[300]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_MASK_4 == "TRUE")
    {
        SC_PCS_CH_INT_0[300]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[300]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_MASK_4 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_MASK_4);
    }

//initial config body168 end


//initial config body169 begin
    if(CP_LANE0_PCS_INT_RX_MASK_5 == "FALSE")
    {
        SC_PCS_CH_INT_0[301]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_MASK_5 == "TRUE")
    {
        SC_PCS_CH_INT_0[301]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[301]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_MASK_5 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_MASK_5);
    }

//initial config body169 end


//initial config body170 begin
    if(CP_LANE0_PCS_INT_RX_MASK_6 == "FALSE")
    {
        SC_PCS_CH_INT_0[302]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_MASK_6 == "TRUE")
    {
        SC_PCS_CH_INT_0[302]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[302]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_MASK_6 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_MASK_6);
    }

//initial config body170 end


//initial config body171 begin
    if(CP_LANE0_PCS_INT_RX_MASK_7 == "FALSE")
    {
        SC_PCS_CH_INT_0[303]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_MASK_7 == "TRUE")
    {
        SC_PCS_CH_INT_0[303]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[303]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_MASK_7 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_MASK_7);
    }

//initial config body171 end


//initial config body172 begin
    if(CP_LANE0_PCS_INT_RX_CLR_0 == "FALSE")
    {
        SC_PCS_CH_INT_0[304]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_CLR_0 == "TRUE")
    {
        SC_PCS_CH_INT_0[304]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[304]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_CLR_0);
    }

//initial config body172 end


//initial config body173 begin
    if(CP_LANE0_PCS_INT_RX_CLR_1 == "FALSE")
    {
        SC_PCS_CH_INT_0[305]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_CLR_1 == "TRUE")
    {
        SC_PCS_CH_INT_0[305]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[305]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_CLR_1);
    }

//initial config body173 end


//initial config body174 begin
    if(CP_LANE0_PCS_INT_RX_CLR_2 == "FALSE")
    {
        SC_PCS_CH_INT_0[306]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_CLR_2 == "TRUE")
    {
        SC_PCS_CH_INT_0[306]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[306]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_CLR_2);
    }

//initial config body174 end


//initial config body175 begin
    if(CP_LANE0_PCS_INT_RX_CLR_3 == "FALSE")
    {
        SC_PCS_CH_INT_0[307]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_CLR_3 == "TRUE")
    {
        SC_PCS_CH_INT_0[307]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[307]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_CLR_3 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_CLR_3);
    }

//initial config body175 end


//initial config body176 begin
    if(CP_LANE0_PCS_INT_RX_CLR_4 == "FALSE")
    {
        SC_PCS_CH_INT_0[308]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_CLR_4 == "TRUE")
    {
        SC_PCS_CH_INT_0[308]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[308]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_CLR_4 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_CLR_4);
    }

//initial config body176 end


//initial config body177 begin
    if(CP_LANE0_PCS_INT_RX_CLR_5 == "FALSE")
    {
        SC_PCS_CH_INT_0[309]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_CLR_5 == "TRUE")
    {
        SC_PCS_CH_INT_0[309]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[309]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_CLR_5 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_CLR_5);
    }

//initial config body177 end


//initial config body178 begin
    if(CP_LANE0_PCS_INT_RX_CLR_6 == "FALSE")
    {
        SC_PCS_CH_INT_0[310]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_CLR_6 == "TRUE")
    {
        SC_PCS_CH_INT_0[310]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[310]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_CLR_6 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_CLR_6);
    }

//initial config body178 end


//initial config body179 begin
    if(CP_LANE0_PCS_INT_RX_CLR_7 == "FALSE")
    {
        SC_PCS_CH_INT_0[311]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_INT_RX_CLR_7 == "TRUE")
    {
        SC_PCS_CH_INT_0[311]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[311]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_INT_RX_CLR_7 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_INT_RX_CLR_7);
    }

//initial config body179 end


//initial config body180 begin
    if(CP_LANE0_PCS_CA_RSTN_RX == "FALSE")
    {
        SC_PCS_CH_INT_0[312]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_CA_RSTN_RX == "TRUE")
    {
        SC_PCS_CH_INT_0[312]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[312]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_CA_RSTN_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_CA_RSTN_RX);
    }

//initial config body180 end


//initial config body181 begin
    if(CP_LANE0_PCS_CA_DYN_DLY_EN_RX == "FALSE")
    {
        SC_PCS_CH_INT_0[313]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_CA_DYN_DLY_EN_RX == "TRUE")
    {
        SC_PCS_CH_INT_0[313]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[313]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_CA_DYN_DLY_EN_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_CA_DYN_DLY_EN_RX);
    }

//initial config body181 end


//initial config body182 begin
    if(CP_LANE0_PCS_CA_DYN_DLY_SEL_RX == "FALSE")
    {
        SC_PCS_CH_INT_0[314]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_CA_DYN_DLY_SEL_RX == "TRUE")
    {
        SC_PCS_CH_INT_0[314]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[314]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_CA_DYN_DLY_SEL_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_CA_DYN_DLY_SEL_RX);
    }

//initial config body182 end


//initial config body183 begin
    if(CP_LANE0_PCS_CA_RX >= 0 && CP_LANE0_PCS_CA_RX <= 255)
    {
        SC_PCS_CH_INT_0[322:315]  :=  CP_LANE0_PCS_CA_RX;
    }
    else
    {
        SC_PCS_CH_INT_0[322:315]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_CA_RX is set to %d. Legal values is 0 to 255",CP_LANE0_PCS_CA_RX);
    }

//initial config body183 end


//initial config body184 begin
    if(CP_LANE0_PCS_CA_RSTN_TX == "FALSE")
    {
        SC_PCS_CH_INT_0[323]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_CA_RSTN_TX == "TRUE")
    {
        SC_PCS_CH_INT_0[323]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[323]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_CA_RSTN_TX is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_CA_RSTN_TX);
    }

//initial config body184 end


//initial config body185 begin
    if(CP_LANE0_PCS_CA_DYN_DLY_EN_TX == "FALSE")
    {
        SC_PCS_CH_INT_0[324]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_CA_DYN_DLY_EN_TX == "TRUE")
    {
        SC_PCS_CH_INT_0[324]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[324]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_CA_DYN_DLY_EN_TX is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_CA_DYN_DLY_EN_TX);
    }

//initial config body185 end


//initial config body186 begin
    if(CP_LANE0_PCS_CA_DYN_DLY_SEL_TX == "FALSE")
    {
        SC_PCS_CH_INT_0[325]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_CA_DYN_DLY_SEL_TX == "TRUE")
    {
        SC_PCS_CH_INT_0[325]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[325]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_CA_DYN_DLY_SEL_TX is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PCS_CA_DYN_DLY_SEL_TX);
    }

//initial config body186 end


//initial config body187 begin
    if(CP_LANE0_PCS_CA_TX >= 0 && CP_LANE0_PCS_CA_TX <= 255)
    {
        SC_PCS_CH_INT_0[333:326]  :=  CP_LANE0_PCS_CA_TX;
    }
    else
    {
        SC_PCS_CH_INT_0[333:326]  :=  0;
        error("Setting Error : The CP_LANE0_PCS_CA_TX is set to %d. Legal values is 0 to 255",CP_LANE0_PCS_CA_TX);
    }

//initial config body187 end


//initial config body188 begin
    if(CP_LANE0_PCS_RXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_0[334]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_RXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_0[334]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[334]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_RXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE0_PCS_RXPRBS_PWR_REDUCTION);
    }

//initial config body188 end


//initial config body189 begin
    if(CP_LANE0_PCS_WDALIGN_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_0[335]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_WDALIGN_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_0[335]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[335]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_WDALIGN_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE0_PCS_WDALIGN_PWR_REDUCTION);
    }

//initial config body189 end


//initial config body190 begin
    if(CP_LANE0_PCS_RXDEC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_0[336]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_RXDEC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_0[336]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[336]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_RXDEC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE0_PCS_RXDEC_PWR_REDUCTION);
    }

//initial config body190 end


//initial config body191 begin
    if(CP_LANE0_PCS_RXCB_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_0[337]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_RXCB_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_0[337]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[337]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_RXCB_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE0_PCS_RXCB_PWR_REDUCTION);
    }

//initial config body191 end


//initial config body192 begin
    if(CP_LANE0_PCS_RXCTC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_0[338]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_RXCTC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_0[338]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[338]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_RXCTC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE0_PCS_RXCTC_PWR_REDUCTION);
    }

//initial config body192 end


//initial config body193 begin
    if(CP_LANE0_PCS_RXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_0[339]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_RXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_0[339]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[339]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_RXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE0_PCS_RXGEAR_PWR_REDUCTION);
    }

//initial config body193 end


//initial config body194 begin
    if(CP_LANE0_PCS_RXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_0[340]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_RXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_0[340]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[340]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_RXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE0_PCS_RXBRG_PWR_REDUCTION);
    }

//initial config body194 end


//initial config body195 begin
    if(CP_LANE0_PCS_RXTEST_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_0[341]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_RXTEST_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_0[341]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[341]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_RXTEST_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE0_PCS_RXTEST_PWR_REDUCTION);
    }

//initial config body195 end


//initial config body196 begin
    if(CP_LANE0_PCS_TXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_0[342]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_0[342]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[342]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE0_PCS_TXBRG_PWR_REDUCTION);
    }

//initial config body196 end


//initial config body197 begin
    if(CP_LANE0_PCS_TXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_0[343]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_0[343]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[343]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE0_PCS_TXGEAR_PWR_REDUCTION);
    }

//initial config body197 end


//initial config body198 begin
    if(CP_LANE0_PCS_TXENC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_0[344]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TXENC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_0[344]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[344]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TXENC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE0_PCS_TXENC_PWR_REDUCTION);
    }

//initial config body198 end


//initial config body199 begin
    if(CP_LANE0_PCS_TXBSLP_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_0[345]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TXBSLP_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_0[345]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[345]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TXBSLP_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE0_PCS_TXBSLP_PWR_REDUCTION);
    }

//initial config body199 end


//initial config body200 begin
    if(CP_LANE0_PCS_TXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_0[346]  :=  1'b0;
    }
    else if (CP_LANE0_PCS_TXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_0[346]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_0[346]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PCS_TXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE0_PCS_TXPRBS_PWR_REDUCTION);
    }

//initial config body200 end


//initial config body201 begin
    if(CP_LANE0_PMA_REG_RX_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE0[0]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE0[0]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[0]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_PD is set to %s. Legal values is ON,OFF",CP_LANE0_PMA_REG_RX_PD);
    }

//initial config body201 end


//initial config body202 begin
    if(CP_LANE0_PMA_REG_RX_PD_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[1]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_PD_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[1]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[1]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_PD_EN);
    }

//initial config body202 end


//initial config body203 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_2 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[2]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_RESERVED_2 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[2]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[2]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RESERVED_2);
    }

//initial config body203 end


//initial config body204 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_3 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[3]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_RESERVED_3 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[3]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[3]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_3 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RESERVED_3);
    }

//initial config body204 end


//initial config body205 begin
    if(CP_LANE0_PMA_REG_RX_DATAPATH_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE0[4]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_DATAPATH_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE0[4]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[4]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_DATAPATH_PD is set to %s. Legal values is ON,OFF",CP_LANE0_PMA_REG_RX_DATAPATH_PD);
    }

//initial config body205 end


//initial config body206 begin
    if(CP_LANE0_PMA_REG_RX_DATAPATH_PD_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[5]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_DATAPATH_PD_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[5]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[5]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_DATAPATH_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_DATAPATH_PD_EN);
    }

//initial config body206 end


//initial config body207 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE0[6]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE0[6]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[6]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_PD is set to %s. Legal values is ON,OFF",CP_LANE0_PMA_REG_RX_SIGDET_PD);
    }

//initial config body207 end


//initial config body208 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_PD_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[7]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_PD_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[7]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[7]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SIGDET_PD_EN);
    }

//initial config body208 end


//initial config body209 begin
    if(CP_LANE0_PMA_REG_RX_DCC_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[8]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_RX_DCC_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[8]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[8]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_DCC_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_DCC_RST_N);
    }

//initial config body209 end


//initial config body210 begin
    if(CP_LANE0_PMA_REG_RX_DCC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[9]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_DCC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[9]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[9]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_DCC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_DCC_RST_N_EN);
    }

//initial config body210 end


//initial config body211 begin
    if(CP_LANE0_PMA_REG_RX_CDR_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[10]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_RX_CDR_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[10]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[10]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_CDR_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_CDR_RST_N);
    }

//initial config body211 end


//initial config body212 begin
    if(CP_LANE0_PMA_REG_RX_CDR_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[11]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_CDR_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[11]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[11]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_CDR_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_CDR_RST_N_EN);
    }

//initial config body212 end


//initial config body213 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[12]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[12]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[12]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SIGDET_RST_N);
    }

//initial config body213 end


//initial config body214 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[13]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[13]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[13]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SIGDET_RST_N_EN);
    }

//initial config body214 end


//initial config body215 begin
    if(CP_LANE0_PMA_REG_RXPCLK_SLIP == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[14]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RXPCLK_SLIP == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[14]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[14]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RXPCLK_SLIP is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RXPCLK_SLIP);
    }

//initial config body215 end


//initial config body216 begin
    if(CP_LANE0_PMA_REG_RXPCLK_SLIP_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[15]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RXPCLK_SLIP_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[15]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[15]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RXPCLK_SLIP_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RXPCLK_SLIP_OW);
    }

//initial config body216 end


//initial config body217 begin
    if(CP_LANE0_PMA_REG_RX_PCLKSWITCH_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[16]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_RX_PCLKSWITCH_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[16]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[16]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_PCLKSWITCH_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_PCLKSWITCH_RST_N);
    }

//initial config body217 end


//initial config body218 begin
    if(CP_LANE0_PMA_REG_RX_PCLKSWITCH_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[17]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_PCLKSWITCH_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[17]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[17]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_PCLKSWITCH_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_PCLKSWITCH_RST_N_EN);
    }

//initial config body218 end


//initial config body219 begin
    if(CP_LANE0_PMA_REG_RX_PCLKSWITCH == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[18]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_PCLKSWITCH == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[18]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[18]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_PCLKSWITCH is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_PCLKSWITCH);
    }

//initial config body219 end


//initial config body220 begin
    if(CP_LANE0_PMA_REG_RX_PCLKSWITCH_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[19]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_PCLKSWITCH_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[19]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[19]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_PCLKSWITCH_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_PCLKSWITCH_EN);
    }

//initial config body220 end


//initial config body221 begin
    if(CP_LANE0_PMA_REG_RX_HIGHZ == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[20]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_HIGHZ == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[20]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[20]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_HIGHZ is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_HIGHZ);
    }

//initial config body221 end


//initial config body222 begin
    if(CP_LANE0_PMA_REG_RX_HIGHZ_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[21]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_HIGHZ_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[21]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[21]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_HIGHZ_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_HIGHZ_EN);
    }

//initial config body222 end


//initial config body223 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_CLK_WINDOW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[22]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_CLK_WINDOW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[22]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[22]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_CLK_WINDOW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SIGDET_CLK_WINDOW);
    }

//initial config body223 end


//initial config body224 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_CLK_WINDOW_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[23]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_CLK_WINDOW_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[23]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[23]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_CLK_WINDOW_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SIGDET_CLK_WINDOW_OW);
    }

//initial config body224 end


//initial config body225 begin
    if(CP_LANE0_PMA_REG_RX_PD_BIAS_RX == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[24]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_PD_BIAS_RX == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[24]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[24]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_PD_BIAS_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_PD_BIAS_RX);
    }

//initial config body225 end


//initial config body226 begin
    if(CP_LANE0_PMA_REG_RX_PD_BIAS_RX_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[25]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_PD_BIAS_RX_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[25]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[25]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_PD_BIAS_RX_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_PD_BIAS_RX_OW);
    }

//initial config body226 end


//initial config body227 begin
    if(CP_LANE0_PMA_REG_RX_RESET_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[26]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_RESET_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[26]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[26]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESET_N is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RESET_N);
    }

//initial config body227 end


//initial config body228 begin
    if(CP_LANE0_PMA_REG_RX_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[27]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[27]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[27]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RESET_N_OW);
    }

//initial config body228 end


//initial config body229 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_29_28 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_29_28 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE0[29:28]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_RESERVED_29_28, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[29:28]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_29_28 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_RESERVED_29_28);
    }

//initial config body229 end


//initial config body230 begin
    if(CP_LANE0_PMA_REG_RX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH_INT_RX_LANE0[32:30]   :=  to_unsigned( 0, 3) ^ 3'b011;
    }
    else if (CP_LANE0_PMA_REG_RX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH_INT_RX_LANE0[32:30]   :=  to_unsigned( 1, 3) ^ 3'b011;
    }
    else if (CP_LANE0_PMA_REG_RX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH_INT_RX_LANE0[32:30]   :=  to_unsigned( 2, 3) ^ 3'b011;
    }
    else if (CP_LANE0_PMA_REG_RX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH_INT_RX_LANE0[32:30]   :=  to_unsigned( 3, 3) ^ 3'b011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[32:30]   :=  to_unsigned( 0, 3) ^ 3'b011;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE0_PMA_REG_RX_BUSWIDTH);
    }

//initial config body230 end


//initial config body231 begin
    if(CP_LANE0_PMA_REG_RX_BUSWIDTH_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[33]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_BUSWIDTH_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[33]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[33]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_BUSWIDTH_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_BUSWIDTH_EN);
    }

//initial config body231 end


//initial config body232 begin
    if(CP_LANE0_PMA_REG_RX_RATE == "DIV4")
    {
        SC_PMA_CH_INT_RX_LANE0[35:34]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE0_PMA_REG_RX_RATE == "DIV2")
    {
        SC_PMA_CH_INT_RX_LANE0[35:34]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE0_PMA_REG_RX_RATE == "DIV1")
    {
        SC_PMA_CH_INT_RX_LANE0[35:34]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE0_PMA_REG_RX_RATE == "MUL2")
    {
        SC_PMA_CH_INT_RX_LANE0[35:34]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[35:34]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RATE is set to %s. Legal values is DIV4,DIV2,DIV1,MUL2",CP_LANE0_PMA_REG_RX_RATE);
    }

//initial config body232 end


//initial config body233 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_36 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[36]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_RESERVED_36 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[36]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[36]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_36 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RESERVED_36);
    }

//initial config body233 end


//initial config body234 begin
    if(CP_LANE0_PMA_REG_RX_RATE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[37]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_RATE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[37]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[37]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RATE_EN);
    }

//initial config body234 end


//initial config body235 begin
    if(CP_LANE0_PMA_REG_RX_RES_TRIM >= 0 && CP_LANE0_PMA_REG_RX_RES_TRIM <= 63)
    {
        SC_PMA_CH_INT_RX_LANE0[43:38]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_RES_TRIM, 6) ^ 6'b110111;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[43:38]   :=  to_unsigned( 0, 6) ^ 6'b110111;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RES_TRIM is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_RX_RES_TRIM);
    }

//initial config body235 end


//initial config body236 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_44 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[44]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_RESERVED_44 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[44]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[44]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_44 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RESERVED_44);
    }

//initial config body236 end


//initial config body237 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_45 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[45]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_RESERVED_45 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[45]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[45]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_45 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RESERVED_45);
    }

//initial config body237 end


//initial config body238 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_STATUS_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[46]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_STATUS_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[46]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[46]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_STATUS_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SIGDET_STATUS_EN);
    }

//initial config body238 end


//initial config body239 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_48_47 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_48_47 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE0[48:47]  :=  CP_LANE0_PMA_REG_RX_RESERVED_48_47;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[48:47]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_48_47 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_RESERVED_48_47);
    }

//initial config body239 end


//initial config body240 begin

 if(CP_LANE0_PMA_REG_RX_ICTRL_SIGDET >= 0 && CP_LANE0_PMA_REG_RX_ICTRL_SIGDET <= 15) 
 {
 SC_PMA_CH_INT_RX_LANE0[52:49]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_ICTRL_SIGDET, 4) ^ 4'b0101; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE0[52:49]   :=  to_unsigned( 0, 4) ^ 4'b0101; 
 error("Setting Error : The CP_LANE0_PMA_REG_RX_ICTRL_SIGDET is set to %d. Legal values is 0 to 15",CP_LANE0_PMA_REG_RX_ICTRL_SIGDET); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE0_PMA_REG_CDR_READY_THD >= 0 && CP_LANE0_PMA_REG_CDR_READY_THD <= 4095) 
 {
 SC_PMA_CH_INT_RX_LANE0[64:53]   :=  to_unsigned( CP_LANE0_PMA_REG_CDR_READY_THD, 12) ^ 12'b101010101110; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE0[64:53]   :=  to_unsigned( 0, 12) ^ 12'b101010101110; 
 error("Setting Error : The CP_LANE0_PMA_REG_CDR_READY_THD is set to %d. Legal values is 0 to 4095",CP_LANE0_PMA_REG_CDR_READY_THD); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE0_PMA_REG_RX_RESERVED_65 == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE0[65]  :=  1'b0; 
}
else if (CP_LANE0_PMA_REG_RX_RESERVED_65 == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE0[65]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE0[65]  :=  1'b0; 
 error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_65 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RESERVED_65);  
}

//initial config body240 end


//initial config body241 begin
    if(CP_LANE0_PMA_REG_RX_PCLK_EDGE_SEL == "POS_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE0[66]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_PCLK_EDGE_SEL == "NEG_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE0[66]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[66]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_PCLK_EDGE_SEL is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_LANE0_PMA_REG_RX_PCLK_EDGE_SEL);
    }

//initial config body241 end


//initial config body242 begin
    if(CP_LANE0_PMA_REG_RX_PIBUF_IC >= 0 && CP_LANE0_PMA_REG_RX_PIBUF_IC <= 3)
    {
        SC_PMA_CH_INT_RX_LANE0[68:67]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_PIBUF_IC, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[68:67]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_PIBUF_IC is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_PIBUF_IC);
    }

//initial config body242 end


//initial config body243 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_69 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[69]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_RESERVED_69 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[69]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[69]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_69 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RESERVED_69);
    }

//initial config body243 end


//initial config body244 begin

 if(CP_LANE0_PMA_REG_RX_DCC_IC_RX >= 0 && CP_LANE0_PMA_REG_RX_DCC_IC_RX <= 3) 
 {
 SC_PMA_CH_INT_RX_LANE0[71:70]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_DCC_IC_RX, 2) ^ 2'b11; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE0[71:70]   :=  to_unsigned( 0, 2) ^ 2'b11; 
 error("Setting Error : The CP_LANE0_PMA_REG_RX_DCC_IC_RX is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_DCC_IC_RX); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE0_PMA_REG_CDR_READY_CHECK_CTRL >= 0 && CP_LANE0_PMA_REG_CDR_READY_CHECK_CTRL <= 3) 
 {
 SC_PMA_CH_INT_RX_LANE0[73:72]   :=  to_unsigned( CP_LANE0_PMA_REG_CDR_READY_CHECK_CTRL, 2) ^ 2'b11; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE0[73:72]   :=  to_unsigned( 0, 2) ^ 2'b11; 
 error("Setting Error : The CP_LANE0_PMA_REG_CDR_READY_CHECK_CTRL is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_CDR_READY_CHECK_CTRL); 
}

//initial config body244 end


//initial config body245 begin
    if(CP_LANE0_PMA_REG_RX_ICTRL_TRX == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[75:74]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_RX_ICTRL_TRX == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[75:74]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_RX_ICTRL_TRX == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[75:74]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_RX_ICTRL_TRX == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[75:74]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[75:74]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_ICTRL_TRX is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE0_PMA_REG_RX_ICTRL_TRX);
    }

//initial config body245 end


//initial config body246 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_77_76 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_77_76 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE0[77:76]  :=  CP_LANE0_PMA_REG_RX_RESERVED_77_76;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[77:76]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_77_76 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_RESERVED_77_76);
    }

//initial config body246 end


//initial config body247 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_79_78 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_79_78 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE0[79:78]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_RESERVED_79_78, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[79:78]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_79_78 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_RESERVED_79_78);
    }

//initial config body247 end


//initial config body248 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_81_80 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_81_80 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE0[81:80]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_RESERVED_81_80, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[81:80]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_81_80 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_RESERVED_81_80);
    }

//initial config body248 end


//initial config body249 begin
    if(CP_LANE0_PMA_REG_RX_ICTRL_PIBUF == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[83:82]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_RX_ICTRL_PIBUF == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[83:82]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_RX_ICTRL_PIBUF == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[83:82]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_RX_ICTRL_PIBUF == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[83:82]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[83:82]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_ICTRL_PIBUF is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE0_PMA_REG_RX_ICTRL_PIBUF);
    }

//initial config body249 end


//initial config body250 begin
    if(CP_LANE0_PMA_REG_RX_ICTRL_PI == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[85:84]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_RX_ICTRL_PI == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[85:84]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_RX_ICTRL_PI == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[85:84]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_RX_ICTRL_PI == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[85:84]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[85:84]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_ICTRL_PI is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE0_PMA_REG_RX_ICTRL_PI);
    }

//initial config body250 end


//initial config body251 begin
    if(CP_LANE0_PMA_REG_RX_ICTRL_DCC == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[87:86]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_RX_ICTRL_DCC == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[87:86]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_RX_ICTRL_DCC == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[87:86]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_RX_ICTRL_DCC == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE0[87:86]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[87:86]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_ICTRL_DCC is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE0_PMA_REG_RX_ICTRL_DCC);
    }

//initial config body251 end


//initial config body252 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_89_88 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_89_88 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE0[89:88]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_RESERVED_89_88, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[89:88]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_89_88 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_RESERVED_89_88);
    }

//initial config body252 end


//initial config body253 begin
    if(CP_LANE0_PMA_REG_TX_RATE == "DIV4")
    {
        SC_PMA_CH_INT_RX_LANE0[91:90]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE0_PMA_REG_TX_RATE == "DIV2")
    {
        SC_PMA_CH_INT_RX_LANE0[91:90]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE0_PMA_REG_TX_RATE == "DIV1")
    {
        SC_PMA_CH_INT_RX_LANE0[91:90]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE0_PMA_REG_TX_RATE == "MUL2")
    {
        SC_PMA_CH_INT_RX_LANE0[91:90]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[91:90]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RATE is set to %s. Legal values is DIV4,DIV2,DIV1,MUL2",CP_LANE0_PMA_REG_TX_RATE);
    }

//initial config body253 end


//initial config body254 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_92 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[92]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_RESERVED_92 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[92]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[92]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_92 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RESERVED_92);
    }

//initial config body254 end


//initial config body255 begin
    if(CP_LANE0_PMA_REG_TX_RATE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[93]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RATE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[93]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[93]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RATE_EN);
    }

//initial config body255 end


//initial config body256 begin
    if(CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[94]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[94]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[94]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_RST_N);
    }

//initial config body256 end


//initial config body257 begin
    if(CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[95]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[95]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[95]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN);
    }

//initial config body257 end


//initial config body258 begin
    if(CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[96]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[96]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[96]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_EN);
    }

//initial config body258 end


//initial config body259 begin
    if(CP_LANE0_PMA_REG_TXCLK_SEL == "PLL")
    {
        SC_PMA_CH_INT_RX_LANE0[97]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TXCLK_SEL == "RXCLK")
    {
        SC_PMA_CH_INT_RX_LANE0[97]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[97]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TXCLK_SEL is set to %s. Legal values is PLL,RXCLK",CP_LANE0_PMA_REG_TXCLK_SEL);
    }

//initial config body259 end


//initial config body260 begin
    if(CP_LANE0_PMA_REG_RX_DATA_POLARITY == "NORMAL")
    {
        SC_PMA_CH_INT_RX_LANE0[98]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_DATA_POLARITY == "REVERSE")
    {
        SC_PMA_CH_INT_RX_LANE0[98]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[98]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_DATA_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_LANE0_PMA_REG_RX_DATA_POLARITY);
    }

//initial config body260 end


//initial config body261 begin
    if(CP_LANE0_PMA_REG_RX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[99]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[99]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[99]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_ERR_INSERT is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_ERR_INSERT);
    }

//initial config body261 end


//initial config body262 begin
    if(CP_LANE0_PMA_REG_UDP_CHK_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[100]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_UDP_CHK_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[100]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[100]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_UDP_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_UDP_CHK_EN);
    }

//initial config body262 end


//initial config body263 begin
    if(CP_LANE0_PMA_REG_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH_INT_RX_LANE0[102:101]  :=  2'b00;
    }
    else if (CP_LANE0_PMA_REG_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH_INT_RX_LANE0[102:101]  :=  2'b01;
    }
    else if (CP_LANE0_PMA_REG_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH_INT_RX_LANE0[102:101]  :=  2'b10;
    }
    else if (CP_LANE0_PMA_REG_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH_INT_RX_LANE0[102:101]  :=  2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[102:101]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PMA_REG_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_LANE0_PMA_REG_PRBS_SEL);
    }

//initial config body263 end


//initial config body264 begin
    if(CP_LANE0_PMA_REG_PRBS_CHK_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[103]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_PRBS_CHK_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[103]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[103]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_PRBS_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_PRBS_CHK_EN);
    }

//initial config body264 end


//initial config body265 begin
    if(CP_LANE0_PMA_REG_PRBS_CHK_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH_INT_RX_LANE0[105:104]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE0_PMA_REG_PRBS_CHK_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH_INT_RX_LANE0[105:104]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE0_PMA_REG_PRBS_CHK_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH_INT_RX_LANE0[105:104]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE0_PMA_REG_PRBS_CHK_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH_INT_RX_LANE0[105:104]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[105:104]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE0_PMA_REG_PRBS_CHK_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE0_PMA_REG_PRBS_CHK_WIDTH_SEL);
    }

//initial config body265 end


//initial config body266 begin
    if(CP_LANE0_PMA_REG_BIST_CHK_PAT_SEL == "PRBS")
    {
        SC_PMA_CH_INT_RX_LANE0[106]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_BIST_CHK_PAT_SEL == "CONSTANT")
    {
        SC_PMA_CH_INT_RX_LANE0[106]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[106]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_BIST_CHK_PAT_SEL is set to %s. Legal values is PRBS,CONSTANT",CP_LANE0_PMA_REG_BIST_CHK_PAT_SEL);
    }

//initial config body266 end


//initial config body267 begin
    if(CP_LANE0_PMA_REG_LOAD_ERR_CNT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[107]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_LOAD_ERR_CNT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[107]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[107]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_LOAD_ERR_CNT is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_LOAD_ERR_CNT);
    }

//initial config body267 end


//initial config body268 begin
    if(CP_LANE0_PMA_REG_CHK_COUNTER_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[108]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CHK_COUNTER_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[108]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[108]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CHK_COUNTER_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CHK_COUNTER_EN);
    }

//initial config body268 end


//initial config body269 begin
    if(CP_LANE0_PMA_REG_CDR_PROP_GAIN >= 0 && CP_LANE0_PMA_REG_CDR_PROP_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE0[111:109]   :=  to_unsigned( CP_LANE0_PMA_REG_CDR_PROP_GAIN, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[111:109]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_PROP_GAIN is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_REG_CDR_PROP_GAIN);
    }

//initial config body269 end


//initial config body270 begin
    if(CP_LANE0_PMA_REG_CDR_PROP_TURBO_GAIN >= 0 && CP_LANE0_PMA_REG_CDR_PROP_TURBO_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE0[114:112]   :=  to_unsigned( CP_LANE0_PMA_REG_CDR_PROP_TURBO_GAIN, 3) ^ 3'b110;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[114:112]   :=  to_unsigned( 0, 3) ^ 3'b110;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_PROP_TURBO_GAIN is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_REG_CDR_PROP_TURBO_GAIN);
    }

//initial config body270 end


//initial config body271 begin
    if(CP_LANE0_PMA_REG_CDR_INT_GAIN >= 0 && CP_LANE0_PMA_REG_CDR_INT_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE0[117:115]   :=  to_unsigned( CP_LANE0_PMA_REG_CDR_INT_GAIN, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[117:115]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_INT_GAIN is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_REG_CDR_INT_GAIN);
    }

//initial config body271 end


//initial config body272 begin
    if(CP_LANE0_PMA_REG_CDR_INT_TURBO_GAIN >= 0 && CP_LANE0_PMA_REG_CDR_INT_TURBO_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE0[120:118]   :=  to_unsigned( CP_LANE0_PMA_REG_CDR_INT_TURBO_GAIN, 3) ^ 3'b110;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[120:118]   :=  to_unsigned( 0, 3) ^ 3'b110;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_INT_TURBO_GAIN is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_REG_CDR_INT_TURBO_GAIN);
    }

//initial config body272 end


//initial config body273 begin
    if(CP_LANE0_PMA_REG_CDR_INT_SAT_MAX >= 0 && CP_LANE0_PMA_REG_CDR_INT_SAT_MAX <= 1023)
    {
        SC_PMA_CH_INT_RX_LANE0[130:121]   :=  to_unsigned( CP_LANE0_PMA_REG_CDR_INT_SAT_MAX, 10) ^ 10'b1111100000;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[130:121]   :=  to_unsigned( 0, 10) ^ 10'b1111100000;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_INT_SAT_MAX is set to %d. Legal values is 0 to 1023",CP_LANE0_PMA_REG_CDR_INT_SAT_MAX);
    }

//initial config body273 end


//initial config body274 begin
    if(CP_LANE0_PMA_REG_CDR_INT_SAT_MIN >= 0 && CP_LANE0_PMA_REG_CDR_INT_SAT_MIN <= 1023)
    {
        SC_PMA_CH_INT_RX_LANE0[140:131]   :=  to_unsigned( CP_LANE0_PMA_REG_CDR_INT_SAT_MIN, 10) ^ 10'b0000100000;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[140:131]   :=  to_unsigned( 0, 10) ^ 10'b0000100000;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_INT_SAT_MIN is set to %d. Legal values is 0 to 1023",CP_LANE0_PMA_REG_CDR_INT_SAT_MIN);
    }

//initial config body274 end


//initial config body275 begin
    if(CP_LANE0_PMA_REG_CDR_INT_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[141]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_INT_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[141]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[141]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_INT_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_INT_RST);
    }

//initial config body275 end


//initial config body276 begin
    if(CP_LANE0_PMA_REG_CDR_INT_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[142]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_INT_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[142]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[142]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_INT_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_INT_RST_OW);
    }

//initial config body276 end


//initial config body277 begin
    if(CP_LANE0_PMA_REG_CDR_PROP_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[143]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_PROP_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[143]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[143]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_PROP_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_PROP_RST);
    }

//initial config body277 end


//initial config body278 begin
    if(CP_LANE0_PMA_REG_CDR_PROP_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[144]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_PROP_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[144]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[144]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_PROP_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_PROP_RST_OW);
    }

//initial config body278 end


//initial config body279 begin
    if(CP_LANE0_PMA_REG_CDR_LOCK_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[145]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_LOCK_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[145]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[145]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_LOCK_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_LOCK_RST);
    }

//initial config body279 end


//initial config body280 begin
    if(CP_LANE0_PMA_REG_CDR_LOCK_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[146]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_LOCK_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[146]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[146]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_LOCK_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_LOCK_RST_OW);
    }

//initial config body280 end


//initial config body281 begin
    if(CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_SEL == 0)
    {
        SC_PMA_CH_INT_RX_LANE0[147]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_SEL == 1)
    {
        SC_PMA_CH_INT_RX_LANE0[147]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[147]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_SEL is set to %s. Legal values is 0,1",CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_SEL);
    }

//initial config body281 end


//initial config body282 begin
    if(CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_D >= 0 && CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_D <= 255)
    {
        SC_PMA_CH_INT_RX_LANE0[155:148]  :=  CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_D;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[155:148]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_D is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_D);
    }

//initial config body282 end


//initial config body283 begin
    if(CP_LANE0_PMA_REG_CDR_LOCK_TIMER == "0_8U")
    {
        SC_PMA_CH_INT_RX_LANE0[158:156]   :=  to_unsigned( 0, 3) ^ 3'b001;
    }
    else if (CP_LANE0_PMA_REG_CDR_LOCK_TIMER == "1_2U")
    {
        SC_PMA_CH_INT_RX_LANE0[158:156]   :=  to_unsigned( 1, 3) ^ 3'b001;
    }
    else if (CP_LANE0_PMA_REG_CDR_LOCK_TIMER == "1_6U")
    {
        SC_PMA_CH_INT_RX_LANE0[158:156]   :=  to_unsigned( 2, 3) ^ 3'b001;
    }
    else if (CP_LANE0_PMA_REG_CDR_LOCK_TIMER == "2_4U")
    {
        SC_PMA_CH_INT_RX_LANE0[158:156]   :=  to_unsigned( 3, 3) ^ 3'b001;
    }
    else if (CP_LANE0_PMA_REG_CDR_LOCK_TIMER == "3_2U")
    {
        SC_PMA_CH_INT_RX_LANE0[158:156]   :=  to_unsigned( 4, 3) ^ 3'b001;
    }
    else if (CP_LANE0_PMA_REG_CDR_LOCK_TIMER == "4_8U")
    {
        SC_PMA_CH_INT_RX_LANE0[158:156]   :=  to_unsigned( 5, 3) ^ 3'b001;
    }
    else if (CP_LANE0_PMA_REG_CDR_LOCK_TIMER == "12_8U")
    {
        SC_PMA_CH_INT_RX_LANE0[158:156]   :=  to_unsigned( 6, 3) ^ 3'b001;
    }
    else if (CP_LANE0_PMA_REG_CDR_LOCK_TIMER == "25_6U")
    {
        SC_PMA_CH_INT_RX_LANE0[158:156]   :=  to_unsigned( 7, 3) ^ 3'b001;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[158:156]   :=  to_unsigned( 0, 3) ^ 3'b001;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_LOCK_TIMER is set to %s. Legal values is 0_8U,1_2U,1_6U,2_4U,3_2U,4_8U,12_8U,25_6U",CP_LANE0_PMA_REG_CDR_LOCK_TIMER);
    }

//initial config body283 end


//initial config body284 begin
    if(CP_LANE0_PMA_REG_CDR_TURBO_MODE_TIMER == 0)
    {
        SC_PMA_CH_INT_RX_LANE0[160:159]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_CDR_TURBO_MODE_TIMER == 1)
    {
        SC_PMA_CH_INT_RX_LANE0[160:159]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_CDR_TURBO_MODE_TIMER == 2)
    {
        SC_PMA_CH_INT_RX_LANE0[160:159]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE0_PMA_REG_CDR_TURBO_MODE_TIMER == 3)
    {
        SC_PMA_CH_INT_RX_LANE0[160:159]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[160:159]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_TURBO_MODE_TIMER is set to %s. Legal values is 0,1,2,3",CP_LANE0_PMA_REG_CDR_TURBO_MODE_TIMER);
    }

//initial config body284 end


//initial config body285 begin
    if(CP_LANE0_PMA_REG_CDR_LOCK_VAL == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[161]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_LOCK_VAL == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[161]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[161]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_LOCK_VAL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_LOCK_VAL);
    }

//initial config body285 end


//initial config body286 begin
    if(CP_LANE0_PMA_REG_CDR_LOCK_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[162]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_LOCK_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[162]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[162]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_LOCK_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_LOCK_OW);
    }

//initial config body286 end


//initial config body287 begin
    if(CP_LANE0_PMA_REG_CDR_INT_SAT_DET_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[163]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_CDR_INT_SAT_DET_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[163]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[163]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_INT_SAT_DET_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_INT_SAT_DET_EN);
    }

//initial config body287 end


//initial config body288 begin
    if(CP_LANE0_PMA_REG_CDR_SAT_AUTO_DIS == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[164]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_SAT_AUTO_DIS == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[164]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[164]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_SAT_AUTO_DIS is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_SAT_AUTO_DIS);
    }

//initial config body288 end


//initial config body289 begin
    if(CP_LANE0_PMA_REG_CDR_GAIN_AUTO == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[165]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_GAIN_AUTO == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[165]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[165]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_GAIN_AUTO is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_GAIN_AUTO);
    }

//initial config body289 end


//initial config body290 begin
    if(CP_LANE0_PMA_REG_CDR_TURBO_GAIN_AUTO == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[166]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_TURBO_GAIN_AUTO == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[166]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[166]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_TURBO_GAIN_AUTO is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_TURBO_GAIN_AUTO);
    }

//initial config body290 end


//initial config body291 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_171_167 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_171_167 <= 31)
    {
        SC_PMA_CH_INT_RX_LANE0[171:167]  :=  CP_LANE0_PMA_REG_RX_RESERVED_171_167;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[171:167]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_171_167 is set to %d. Legal values is 0 to 31",CP_LANE0_PMA_REG_RX_RESERVED_171_167);
    }

//initial config body291 end


//initial config body292 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_175_172 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_175_172 <= 15)
    {
        SC_PMA_CH_INT_RX_LANE0[175:172]  :=  CP_LANE0_PMA_REG_RX_RESERVED_175_172;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[175:172]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_175_172 is set to %d. Legal values is 0 to 15",CP_LANE0_PMA_REG_RX_RESERVED_175_172);
    }

//initial config body292 end


//initial config body293 begin
    if(CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[176]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[176]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[176]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_EN);
    }

//initial config body293 end


//initial config body294 begin
    if(CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[177]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[177]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[177]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN);
    }

//initial config body294 end


//initial config body295 begin
    if(CP_LANE0_PMA_REG_CDR_PI_CTRL_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[178]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_PI_CTRL_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[178]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[178]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_PI_CTRL_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_PI_CTRL_RST);
    }

//initial config body295 end


//initial config body296 begin
    if(CP_LANE0_PMA_REG_CDR_PI_CTRL_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[179]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_PI_CTRL_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[179]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[179]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_PI_CTRL_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_PI_CTRL_RST_OW);
    }

//initial config body296 end


//initial config body297 begin
    if(CP_LANE0_PMA_REG_CDR_SAT_DET_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[180]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_SAT_DET_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[180]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[180]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_SAT_DET_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_SAT_DET_RST);
    }

//initial config body297 end


//initial config body298 begin
    if(CP_LANE0_PMA_REG_CDR_SAT_DET_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[181]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_SAT_DET_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[181]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[181]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_SAT_DET_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_SAT_DET_RST_OW);
    }

//initial config body298 end


//initial config body299 begin
    if(CP_LANE0_PMA_REG_CDR_SAT_DET_STICKY_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[182]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_SAT_DET_STICKY_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[182]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[182]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_SAT_DET_STICKY_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_SAT_DET_STICKY_RST);
    }

//initial config body299 end


//initial config body300 begin
    if(CP_LANE0_PMA_REG_CDR_SAT_DET_STICKY_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[183]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_SAT_DET_STICKY_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[183]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[183]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_SAT_DET_STICKY_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_SAT_DET_STICKY_RST_OW);
    }

//initial config body300 end


//initial config body301 begin
    if(CP_LANE0_PMA_REG_CDR_SIGDET_STATUS_DIS == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[184]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_SIGDET_STATUS_DIS == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[184]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[184]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_SIGDET_STATUS_DIS is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_SIGDET_STATUS_DIS);
    }

//initial config body301 end


//initial config body302 begin
    if(CP_LANE0_PMA_REG_CDR_SAT_DET_TIMER == 0)
    {
        SC_PMA_CH_INT_RX_LANE0[186:185]   :=  to_unsigned( 0, 2) ^ 2'b10;
    }
    else if (CP_LANE0_PMA_REG_CDR_SAT_DET_TIMER == 1)
    {
        SC_PMA_CH_INT_RX_LANE0[186:185]   :=  to_unsigned( 1, 2) ^ 2'b10;
    }
    else if (CP_LANE0_PMA_REG_CDR_SAT_DET_TIMER == 2)
    {
        SC_PMA_CH_INT_RX_LANE0[186:185]   :=  to_unsigned( 2, 2) ^ 2'b10;
    }
    else if (CP_LANE0_PMA_REG_CDR_SAT_DET_TIMER == 3)
    {
        SC_PMA_CH_INT_RX_LANE0[186:185]   :=  to_unsigned( 3, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[186:185]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_SAT_DET_TIMER is set to %s. Legal values is 0,1,2,3",CP_LANE0_PMA_REG_CDR_SAT_DET_TIMER);
    }

//initial config body302 end


//initial config body303 begin
    if(CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_VAL == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[187]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_VAL == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[187]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[187]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_VAL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_VAL);
    }

//initial config body303 end


//initial config body304 begin
    if(CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[188]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[188]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[188]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_OW);
    }

//initial config body304 end


//initial config body305 begin
    if(CP_LANE0_PMA_REG_CDR_TURBO_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[189]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_CDR_TURBO_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[189]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[189]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_TURBO_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_TURBO_MODE_EN);
    }

//initial config body305 end


//initial config body306 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_190 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[190]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_RESERVED_190 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[190]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[190]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_190 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RESERVED_190);
    }

//initial config body306 end


//initial config body307 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_193_191 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_193_191 <= 7)
    {
        SC_PMA_CH_INT_RX_LANE0[193:191]  :=  CP_LANE0_PMA_REG_RX_RESERVED_193_191;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[193:191]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_193_191 is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_REG_RX_RESERVED_193_191);
    }

//initial config body307 end


//initial config body308 begin
    if(CP_LANE0_PMA_REG_CDR_STATUS_FIFO_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[194]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_CDR_STATUS_FIFO_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[194]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[194]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_CDR_STATUS_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CDR_STATUS_FIFO_EN);
    }

//initial config body308 end


//initial config body309 begin
    if(CP_LANE0_PMA_REG_PMA_TEST_SEL == 0)
    {
        SC_PMA_CH_INT_RX_LANE0[197:195]  :=  3'b000;
    }
    else if (CP_LANE0_PMA_REG_PMA_TEST_SEL == 1)
    {
        SC_PMA_CH_INT_RX_LANE0[197:195]  :=  3'b001;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[197:195]  :=  3'b000;
        error("Setting Error : The CP_LANE0_PMA_REG_PMA_TEST_SEL is set to %s. Legal values is 0,1",CP_LANE0_PMA_REG_PMA_TEST_SEL);
    }

//initial config body309 end


//initial config body310 begin
    if(CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MIN >= 0 && CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MIN <= 63)
    {
        SC_PMA_CH_INT_RX_LANE0[203:198]   :=  to_unsigned( CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MIN, 6) ^ 6'b000011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[203:198]   :=  to_unsigned( 0, 6) ^ 6'b000011;
        error("Setting Error : The CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MIN is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MIN);
    }

//initial config body310 end


//initial config body311 begin
    if(CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MAX >= 0 && CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MAX <= 63)
    {
        SC_PMA_CH_INT_RX_LANE0[209:204]   :=  to_unsigned( CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MAX, 6) ^ 6'b001011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[209:204]   :=  to_unsigned( 0, 6) ^ 6'b001011;
        error("Setting Error : The CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MAX is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MAX);
    }

//initial config body311 end


//initial config body312 begin
    if(CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MIN >= 0 && CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MIN <= 255)
    {
        SC_PMA_CH_INT_RX_LANE0[217:210]   :=  to_unsigned( CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MIN, 8) ^ 8'b00001111;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[217:210]   :=  to_unsigned( 0, 8) ^ 8'b00001111;
        error("Setting Error : The CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MIN is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MIN);
    }

//initial config body312 end


//initial config body313 begin
    if(CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MAX >= 0 && CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MAX <= 255)
    {
        SC_PMA_CH_INT_RX_LANE0[225:218]   :=  to_unsigned( CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MAX, 8) ^ 8'b00100011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[225:218]   :=  to_unsigned( 0, 8) ^ 8'b00100011;
        error("Setting Error : The CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MAX is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MAX);
    }

//initial config body313 end


//initial config body314 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_227_226 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_227_226 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE0[227:226]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_RESERVED_227_226, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[227:226]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_227_226 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_RESERVED_227_226);
    }

//initial config body314 end


//initial config body315 begin
    if(CP_LANE0_PMA_REG_COMWAKE_STATUS_CLEAR == 0)
    {
        SC_PMA_CH_INT_RX_LANE0[228]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_COMWAKE_STATUS_CLEAR == 1)
    {
        SC_PMA_CH_INT_RX_LANE0[228]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[228]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_COMWAKE_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_LANE0_PMA_REG_COMWAKE_STATUS_CLEAR);
    }

//initial config body315 end


//initial config body316 begin
    if(CP_LANE0_PMA_REG_COMINIT_STATUS_CLEAR == 0)
    {
        SC_PMA_CH_INT_RX_LANE0[229]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_COMINIT_STATUS_CLEAR == 1)
    {
        SC_PMA_CH_INT_RX_LANE0[229]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[229]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_COMINIT_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_LANE0_PMA_REG_COMINIT_STATUS_CLEAR);
    }

//initial config body316 end


//initial config body317 begin
    if(CP_LANE0_PMA_REG_RX_SYNC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[230]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SYNC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[230]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[230]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SYNC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SYNC_RST_N_EN);
    }

//initial config body317 end


//initial config body318 begin
    if(CP_LANE0_PMA_REG_RX_SYNC_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[231]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_RX_SYNC_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[231]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[231]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SYNC_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SYNC_RST_N);
    }

//initial config body318 end


//initial config body319 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_233_232 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_233_232 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE0[233:232]  :=  CP_LANE0_PMA_REG_RX_RESERVED_233_232;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[233:232]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_233_232 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_RESERVED_233_232);
    }

//initial config body319 end


//initial config body320 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_235_234 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_235_234 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE0[235:234]  :=  CP_LANE0_PMA_REG_RX_RESERVED_235_234;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[235:234]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_235_234 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_RESERVED_235_234);
    }

//initial config body320 end


//initial config body321 begin
    if(CP_LANE0_PMA_REG_RX_SATA_COMINIT_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[236]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SATA_COMINIT_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[236]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[236]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SATA_COMINIT_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SATA_COMINIT_OW);
    }

//initial config body321 end


//initial config body322 begin
    if(CP_LANE0_PMA_REG_RX_SATA_COMINIT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[237]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SATA_COMINIT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[237]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[237]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SATA_COMINIT is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SATA_COMINIT);
    }

//initial config body322 end


//initial config body323 begin
    if(CP_LANE0_PMA_REG_RX_SATA_COMWAKE_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[238]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SATA_COMWAKE_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[238]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[238]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SATA_COMWAKE_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SATA_COMWAKE_OW);
    }

//initial config body323 end


//initial config body324 begin
    if(CP_LANE0_PMA_REG_RX_SATA_COMWAKE == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[239]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SATA_COMWAKE == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[239]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[239]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SATA_COMWAKE is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SATA_COMWAKE);
    }

//initial config body324 end


//initial config body325 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_241_240 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_241_240 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE0[241:240]  :=  CP_LANE0_PMA_REG_RX_RESERVED_241_240;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[241:240]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_241_240 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_RESERVED_241_240);
    }

//initial config body325 end


//initial config body326 begin
    if(CP_LANE0_PMA_REG_RX_DCC_DISABLE == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[242]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_DCC_DISABLE == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[242]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[242]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_DCC_DISABLE is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_DCC_DISABLE);
    }

//initial config body326 end


//initial config body327 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_243 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[243]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_RESERVED_243 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[243]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[243]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_243 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RESERVED_243);
    }

//initial config body327 end


//initial config body328 begin
    if(CP_LANE0_PMA_REG_RX_SLIP_SEL_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[244]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SLIP_SEL_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[244]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[244]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SLIP_SEL_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SLIP_SEL_EN);
    }

//initial config body328 end


//initial config body329 begin
    if(CP_LANE0_PMA_REG_RX_SLIP_SEL >= 0 && CP_LANE0_PMA_REG_RX_SLIP_SEL <= 15)
    {
        SC_PMA_CH_INT_RX_LANE0[248:245]  :=  CP_LANE0_PMA_REG_RX_SLIP_SEL;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[248:245]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SLIP_SEL is set to %d. Legal values is 0 to 15",CP_LANE0_PMA_REG_RX_SLIP_SEL);
    }

//initial config body329 end


//initial config body330 begin
    if(CP_LANE0_PMA_REG_RX_SLIP_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[249]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SLIP_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[249]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[249]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SLIP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SLIP_EN);
    }

//initial config body330 end


//initial config body331 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_STATUS_SEL >= 0 && CP_LANE0_PMA_REG_RX_SIGDET_STATUS_SEL <= 7)
    {
        SC_PMA_CH_INT_RX_LANE0[252:250]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_SIGDET_STATUS_SEL, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[252:250]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_STATUS_SEL is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_REG_RX_SIGDET_STATUS_SEL);
    }

//initial config body331 end


//initial config body332 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_FSM_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[253]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_FSM_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[253]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[253]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_FSM_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SIGDET_FSM_RST_N);
    }

//initial config body332 end


//initial config body333 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_254 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[254]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_RESERVED_254 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[254]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[254]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_254 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RESERVED_254);
    }

//initial config body333 end


//initial config body334 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_STATUS == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[255]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_STATUS == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[255]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[255]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_STATUS is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SIGDET_STATUS);
    }

//initial config body334 end


//initial config body335 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_VTH == "9MV")
    {
        SC_PMA_CH_INT_RX_LANE0[259:256]   :=  to_unsigned( 0, 4) ^ 4'b0010;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_VTH == "18MV")
    {
        SC_PMA_CH_INT_RX_LANE0[259:256]   :=  to_unsigned( 1, 4) ^ 4'b0010;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_VTH == "27MV")
    {
        SC_PMA_CH_INT_RX_LANE0[259:256]   :=  to_unsigned( 2, 4) ^ 4'b0010;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_VTH == "36MV")
    {
        SC_PMA_CH_INT_RX_LANE0[259:256]   :=  to_unsigned( 3, 4) ^ 4'b0010;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_VTH == "45MV")
    {
        SC_PMA_CH_INT_RX_LANE0[259:256]   :=  to_unsigned( 4, 4) ^ 4'b0010;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_VTH == "54MV")
    {
        SC_PMA_CH_INT_RX_LANE0[259:256]   :=  to_unsigned( 5, 4) ^ 4'b0010;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_VTH == "63MV")
    {
        SC_PMA_CH_INT_RX_LANE0[259:256]   :=  to_unsigned( 6, 4) ^ 4'b0010;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_VTH == "72MV")
    {
        SC_PMA_CH_INT_RX_LANE0[259:256]   :=  to_unsigned( 7, 4) ^ 4'b0010;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[259:256]   :=  to_unsigned( 0, 4) ^ 4'b0010;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_VTH is set to %s. Legal values is 9MV,18MV,27MV,36MV,45MV,54MV,63MV,72MV",CP_LANE0_PMA_REG_RX_SIGDET_VTH);
    }

//initial config body335 end


//initial config body336 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_GRM == 0)
    {
        SC_PMA_CH_INT_RX_LANE0[261:260]  :=  2'b00;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_GRM == 1)
    {
        SC_PMA_CH_INT_RX_LANE0[261:260]  :=  2'b01;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_GRM == 2)
    {
        SC_PMA_CH_INT_RX_LANE0[261:260]  :=  2'b10;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_GRM == 3)
    {
        SC_PMA_CH_INT_RX_LANE0[261:260]  :=  2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[261:260]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_GRM is set to %s. Legal values is 0,1,2,3",CP_LANE0_PMA_REG_RX_SIGDET_GRM);
    }

//initial config body336 end


//initial config body337 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_PULSE_EXT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[262]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_PULSE_EXT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[262]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[262]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_PULSE_EXT is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SIGDET_PULSE_EXT);
    }

//initial config body337 end


//initial config body338 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_CH2_SEL == 0)
    {
        SC_PMA_CH_INT_RX_LANE0[263]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_CH2_SEL == 1)
    {
        SC_PMA_CH_INT_RX_LANE0[263]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[263]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_CH2_SEL is set to %s. Legal values is 0,1",CP_LANE0_PMA_REG_RX_SIGDET_CH2_SEL);
    }

//initial config body338 end


//initial config body339 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW >= 0 && CP_LANE0_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW <= 31)
    {
        SC_PMA_CH_INT_RX_LANE0[268:264]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW, 5) ^ 5'b00011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[268:264]   :=  to_unsigned( 0, 5) ^ 5'b00011;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW is set to %d. Legal values is 0 to 31",CP_LANE0_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW);
    }

//initial config body339 end


//initial config body340 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_CHK_WINDOW_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[269]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_RX_SIGDET_CHK_WINDOW_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[269]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[269]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_CHK_WINDOW_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_SIGDET_CHK_WINDOW_EN);
    }

//initial config body340 end


//initial config body341 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING >= 0 && CP_LANE0_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING <= 7)
    {
        SC_PMA_CH_INT_RX_LANE0[272:270]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING, 3) ^ 3'b100;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[272:270]   :=  to_unsigned( 0, 3) ^ 3'b100;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING);
    }

//initial config body341 end


//initial config body342 begin
    if(CP_LANE0_PMA_REG_SLIP_FIFO_INV_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[273]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_SLIP_FIFO_INV_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[273]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[273]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_SLIP_FIFO_INV_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_SLIP_FIFO_INV_EN);
    }

//initial config body342 end


//initial config body343 begin
    if(CP_LANE0_PMA_REG_SLIP_FIFO_INV == "POS_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE0[274]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_SLIP_FIFO_INV == "NEG_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE0[274]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[274]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_SLIP_FIFO_INV is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_LANE0_PMA_REG_SLIP_FIFO_INV);
    }

//initial config body343 end


//initial config body344 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL >= 0 && CP_LANE0_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL <= 31)
    {
        SC_PMA_CH_INT_RX_LANE0[279:275]  :=  CP_LANE0_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[279:275]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL is set to %d. Legal values is 0 to 31",CP_LANE0_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL);
    }

//initial config body344 end


//initial config body345 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_4OOB_DET_SEL >= 0 && CP_LANE0_PMA_REG_RX_SIGDET_4OOB_DET_SEL <= 7)
    {
        SC_PMA_CH_INT_RX_LANE0[282:280]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_SIGDET_4OOB_DET_SEL, 3) ^ 3'b111;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[282:280]   :=  to_unsigned( 0, 3) ^ 3'b111;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_4OOB_DET_SEL is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_REG_RX_SIGDET_4OOB_DET_SEL);
    }

//initial config body345 end


//initial config body346 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_285_283 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_285_283 <= 7)
    {
        SC_PMA_CH_INT_RX_LANE0[285:283]  :=  CP_LANE0_PMA_REG_RX_RESERVED_285_283;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[285:283]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_285_283 is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_REG_RX_RESERVED_285_283);
    }

//initial config body346 end


//initial config body347 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_286 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[286]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_RESERVED_286 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[286]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[286]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_286 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RESERVED_286);
    }

//initial config body347 end


//initial config body348 begin
    if(CP_LANE0_PMA_REG_RX_SIGDET_IC_I >= 0 && CP_LANE0_PMA_REG_RX_SIGDET_IC_I <= 15)
    {
        SC_PMA_CH_INT_RX_LANE0[290:287]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_SIGDET_IC_I, 4) ^ 4'b1010;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[290:287]   :=  to_unsigned( 0, 4) ^ 4'b1010;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_SIGDET_IC_I is set to %d. Legal values is 0 to 15",CP_LANE0_PMA_REG_RX_SIGDET_IC_I);
    }

//initial config body348 end


//initial config body349 begin
    if(CP_LANE0_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[291]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[291]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[291]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW);
    }

//initial config body349 end


//initial config body350 begin
    if(CP_LANE0_PMA_REG_RX_OOB_DETECTOR_RESET_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[292]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_OOB_DETECTOR_RESET_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[292]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[292]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_OOB_DETECTOR_RESET_N is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_OOB_DETECTOR_RESET_N);
    }

//initial config body350 end


//initial config body351 begin
    if(CP_LANE0_PMA_REG_RX_OOB_DETECTOR_PD_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[293]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_OOB_DETECTOR_PD_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[293]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[293]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_OOB_DETECTOR_PD_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_OOB_DETECTOR_PD_OW);
    }

//initial config body351 end


//initial config body352 begin
    if(CP_LANE0_PMA_REG_RX_OOB_DETECTOR_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE0[294]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_OOB_DETECTOR_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE0[294]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[294]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_OOB_DETECTOR_PD is set to %s. Legal values is ON,OFF",CP_LANE0_PMA_REG_RX_OOB_DETECTOR_PD);
    }

//initial config body352 end


//initial config body353 begin
    if(CP_LANE0_PMA_REG_RX_LS_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[295]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_LS_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[295]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[295]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_LS_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_LS_MODE_EN);
    }

//initial config body353 end


//initial config body354 begin

 if(CP_LANE0_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE0[296]  :=  1'b0; 
}
else if (CP_LANE0_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE0[296]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE0[296]  :=  1'b0; 
 error("Setting Error : The CP_LANE0_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE0_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE0[297]  :=  1'b0; 
}
else if (CP_LANE0_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE0[297]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE0[297]  :=  1'b0; 
 error("Setting Error : The CP_LANE0_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL);  
}

//initial config body354 end


//initial config body355 begin
    if(CP_LANE0_PMA_REG_RX_EQ1_R_SET_TOP >= 0 && CP_LANE0_PMA_REG_RX_EQ1_R_SET_TOP <= 3)
    {
        SC_PMA_CH_INT_RX_LANE0[299:298]  :=  CP_LANE0_PMA_REG_RX_EQ1_R_SET_TOP;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[299:298]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_EQ1_R_SET_TOP is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_EQ1_R_SET_TOP);
    }

//initial config body355 end


//initial config body356 begin
    if(CP_LANE0_PMA_REG_RX_EQ1_R_SET_FB >= 0 && CP_LANE0_PMA_REG_RX_EQ1_R_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE0[303:300]  :=  CP_LANE0_PMA_REG_RX_EQ1_R_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[303:300]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_EQ1_R_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE0_PMA_REG_RX_EQ1_R_SET_FB);
    }

//initial config body356 end


//initial config body357 begin
    if(CP_LANE0_PMA_REG_RX_EQ1_C_SET_FB >= 0 && CP_LANE0_PMA_REG_RX_EQ1_C_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE0[307:304]  :=  CP_LANE0_PMA_REG_RX_EQ1_C_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[307:304]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_EQ1_C_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE0_PMA_REG_RX_EQ1_C_SET_FB);
    }

//initial config body357 end


//initial config body358 begin
    if(CP_LANE0_PMA_REG_RX_EQ1_OFF == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[308]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_EQ1_OFF == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[308]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[308]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_EQ1_OFF is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_EQ1_OFF);
    }

//initial config body358 end


//initial config body359 begin
    if(CP_LANE0_PMA_REG_RX_EQ2_R_SET_TOP >= 0 && CP_LANE0_PMA_REG_RX_EQ2_R_SET_TOP <= 3)
    {
        SC_PMA_CH_INT_RX_LANE0[310:309]  :=  CP_LANE0_PMA_REG_RX_EQ2_R_SET_TOP;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[310:309]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_EQ2_R_SET_TOP is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_EQ2_R_SET_TOP);
    }

//initial config body359 end


//initial config body360 begin
    if(CP_LANE0_PMA_REG_RX_EQ2_R_SET_FB >= 0 && CP_LANE0_PMA_REG_RX_EQ2_R_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE0[314:311]  :=  CP_LANE0_PMA_REG_RX_EQ2_R_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[314:311]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_EQ2_R_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE0_PMA_REG_RX_EQ2_R_SET_FB);
    }

//initial config body360 end


//initial config body361 begin
    if(CP_LANE0_PMA_REG_RX_EQ2_C_SET_FB >= 0 && CP_LANE0_PMA_REG_RX_EQ2_C_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE0[318:315]  :=  CP_LANE0_PMA_REG_RX_EQ2_C_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[318:315]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_EQ2_C_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE0_PMA_REG_RX_EQ2_C_SET_FB);
    }

//initial config body361 end


//initial config body362 begin
    if(CP_LANE0_PMA_REG_RX_EQ2_OFF == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[319]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_EQ2_OFF == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[319]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[319]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_EQ2_OFF is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_EQ2_OFF);
    }

//initial config body362 end


//initial config body363 begin
    if(CP_LANE0_PMA_REG_EQ_DAC >= 0 && CP_LANE0_PMA_REG_EQ_DAC <= 63)
    {
        SC_PMA_CH_INT_RX_LANE0[325:320]  :=  CP_LANE0_PMA_REG_EQ_DAC;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[325:320]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_EQ_DAC is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_EQ_DAC);
    }

//initial config body363 end


//initial config body364 begin
    if(CP_LANE0_PMA_REG_RX_ICTRL_EQ >= 0 && CP_LANE0_PMA_REG_RX_ICTRL_EQ <= 3)
    {
        SC_PMA_CH_INT_RX_LANE0[327:326]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_ICTRL_EQ, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[327:326]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_ICTRL_EQ is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_RX_ICTRL_EQ);
    }

//initial config body364 end


//initial config body365 begin
    if(CP_LANE0_PMA_REG_EQ_DC_CALIB_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[328]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_EQ_DC_CALIB_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[328]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[328]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_EQ_DC_CALIB_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_EQ_DC_CALIB_EN);
    }

//initial config body365 end


//initial config body366 begin
    if(CP_LANE0_PMA_REG_EQ_DC_CALIB_SEL == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[329]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_EQ_DC_CALIB_SEL == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[329]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[329]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_EQ_DC_CALIB_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_EQ_DC_CALIB_SEL);
    }

//initial config body366 end


//initial config body367 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_337_330 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_337_330 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE0[337:330]  :=  CP_LANE0_PMA_REG_RX_RESERVED_337_330;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[337:330]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_337_330 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_RX_RESERVED_337_330);
    }

//initial config body367 end


//initial config body368 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_345_338 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_345_338 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE0[345:338]  :=  CP_LANE0_PMA_REG_RX_RESERVED_345_338;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[345:338]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_345_338 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_RX_RESERVED_345_338);
    }

//initial config body368 end


//initial config body369 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_353_346 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_353_346 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE0[353:346]  :=  CP_LANE0_PMA_REG_RX_RESERVED_353_346;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[353:346]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_353_346 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_RX_RESERVED_353_346);
    }

//initial config body369 end


//initial config body370 begin
    if(CP_LANE0_PMA_REG_RX_RESERVED_361_354 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_361_354 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE0[361:354]  :=  CP_LANE0_PMA_REG_RX_RESERVED_361_354;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[361:354]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_361_354 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_RX_RESERVED_361_354);
    }

//initial config body370 end


//initial config body371 begin

 if(CP_LANE0_PMA_CTLE_CTRL_REG_I >= 0 && CP_LANE0_PMA_CTLE_CTRL_REG_I <= 15) 
 {
 SC_PMA_CH_INT_RX_LANE0[365:362]  :=  CP_LANE0_PMA_CTLE_CTRL_REG_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE0[365:362]  :=  0; 
 error("Setting Error : The CP_LANE0_PMA_CTLE_CTRL_REG_I is set to %d. Legal values is 0 to 15",CP_LANE0_PMA_CTLE_CTRL_REG_I); 
}
//}

 //initial//Altered  
 //{
 if(CP_LANE0_PMA_CTLE_REG_FORCE_SEL_I == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE0[366]  :=  1'b0; 
}
else if (CP_LANE0_PMA_CTLE_REG_FORCE_SEL_I == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE0[366]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE0[366]  :=  1'b0; 
 error("Setting Error : The CP_LANE0_PMA_CTLE_REG_FORCE_SEL_I is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_CTLE_REG_FORCE_SEL_I);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE0_PMA_CTLE_REG_HOLD_I == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE0[367]  :=  1'b0; 
}
else if (CP_LANE0_PMA_CTLE_REG_HOLD_I == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE0[367]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE0[367]  :=  1'b0; 
 error("Setting Error : The CP_LANE0_PMA_CTLE_REG_HOLD_I is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_CTLE_REG_HOLD_I);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE0_PMA_CTLE_REG_INIT_DAC_I >= 0 && CP_LANE0_PMA_CTLE_REG_INIT_DAC_I <= 15) 
 {
 SC_PMA_CH_INT_RX_LANE0[371:368]  :=  CP_LANE0_PMA_CTLE_REG_INIT_DAC_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE0[371:368]  :=  0; 
 error("Setting Error : The CP_LANE0_PMA_CTLE_REG_INIT_DAC_I is set to %d. Legal values is 0 to 15",CP_LANE0_PMA_CTLE_REG_INIT_DAC_I); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE0_PMA_CTLE_REG_POLARITY_I == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE0[372]  :=  1'b0; 
}
else if (CP_LANE0_PMA_CTLE_REG_POLARITY_I == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE0[372]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE0[372]  :=  1'b0; 
 error("Setting Error : The CP_LANE0_PMA_CTLE_REG_POLARITY_I is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_CTLE_REG_POLARITY_I);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE0_PMA_CTLE_REG_SHIFTER_GAIN_I >= 0 && CP_LANE0_PMA_CTLE_REG_SHIFTER_GAIN_I <= 7) 
 {
 SC_PMA_CH_INT_RX_LANE0[375:373]  :=  CP_LANE0_PMA_CTLE_REG_SHIFTER_GAIN_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE0[375:373]  :=  0; 
 error("Setting Error : The CP_LANE0_PMA_CTLE_REG_SHIFTER_GAIN_I is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_CTLE_REG_SHIFTER_GAIN_I); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE0_PMA_CTLE_REG_THRESHOLD_I >= 0 && CP_LANE0_PMA_CTLE_REG_THRESHOLD_I <= 4095) 
 {
 SC_PMA_CH_INT_RX_LANE0[387:376]  :=  CP_LANE0_PMA_CTLE_REG_THRESHOLD_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE0[387:376]  :=  0; 
 error("Setting Error : The  is set to %d. Legal values is 0 to 4095",CP_LANE0_PMA_CTLE_REG_THRESHOLD_I); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE0_PMA_REG_RX_RES_TRIM_EN == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE0[388]  :=  1'b0; 
}
else if (CP_LANE0_PMA_REG_RX_RES_TRIM_EN == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE0[388]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE0[388]  :=  1'b0; 
 error("Setting Error : The CP_LANE0_PMA_REG_RX_RES_TRIM_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_RES_TRIM_EN);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE0_PMA_REG_RX_RESERVED_393_389 >= 0 && CP_LANE0_PMA_REG_RX_RESERVED_393_389 <= 31) 
 {
 SC_PMA_CH_INT_RX_LANE0[393:389]  :=  CP_LANE0_PMA_REG_RX_RESERVED_393_389; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE0[393:389]  :=  0; 
 error("Setting Error : The CP_LANE0_PMA_REG_RX_RESERVED_393_389 is set to %d. Legal values is 0 to 31",CP_LANE0_PMA_REG_RX_RESERVED_393_389); 
}

//initial config body371 end


//initial config body372 begin
    if(CP_LANE0_PMA_CFG_RX_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE0[394]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_CFG_RX_LANE_POWERUP == "ON")
    {
        SC_PMA_CH_INT_RX_LANE0[394]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[394]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_CFG_RX_LANE_POWERUP is set to %s. Legal values is OFF,ON",CP_LANE0_PMA_CFG_RX_LANE_POWERUP);
    }

//initial config body372 end


//initial config body373 begin
    if(CP_LANE0_PMA_CFG_RX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[395]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_CFG_RX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[395]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[395]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_CFG_RX_PMA_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_CFG_RX_PMA_RSTN);
    }

//initial config body373 end


//initial config body374 begin
    if(CP_LANE0_PMA_INT_PMA_RX_MASK_0 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[396]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_INT_PMA_RX_MASK_0 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[396]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[396]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_INT_PMA_RX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_INT_PMA_RX_MASK_0);
    }

//initial config body374 end


//initial config body375 begin
    if(CP_LANE0_PMA_INT_PMA_RX_CLR_0 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[397]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_INT_PMA_RX_CLR_0 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[397]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[397]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_INT_PMA_RX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_INT_PMA_RX_CLR_0);
    }

//initial config body375 end


//initial config body376 begin
    if(CP_LANE0_PMA_CFG_CTLE_ADP_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE0[398]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_CFG_CTLE_ADP_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE0[398]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE0[398]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_CFG_CTLE_ADP_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_CFG_CTLE_ADP_RSTN);
    }

//initial config body376 end


//initial config body377 begin
    if(CP_LANE0_PMA_REG_TX_PD == "ON")
    {
        SC_PMA_CH_INT_TX_LANE0[0]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_PD == "OFF")
    {
        SC_PMA_CH_INT_TX_LANE0[0]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[0]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_PD is set to %s. Legal values is ON,OFF",CP_LANE0_PMA_REG_TX_PD);
    }

//initial config body377 end


//initial config body378 begin
    if(CP_LANE0_PMA_REG_TX_PD_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[1]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_TX_PD_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[1]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[1]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_PD_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_PD_OW);
    }

//initial config body378 end


//initial config body379 begin
    if(CP_LANE0_PMA_REG_TX_MAIN_PRE_Z == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[2]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_MAIN_PRE_Z == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[2]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[2]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_MAIN_PRE_Z is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_MAIN_PRE_Z);
    }

//initial config body379 end


//initial config body380 begin
    if(CP_LANE0_PMA_REG_TX_MAIN_PRE_Z_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[3]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_MAIN_PRE_Z_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[3]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[3]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_MAIN_PRE_Z_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_MAIN_PRE_Z_OW);
    }

//initial config body380 end


//initial config body381 begin
    if(CP_LANE0_PMA_REG_TX_BEACON_TIMER_SEL >= 0 && CP_LANE0_PMA_REG_TX_BEACON_TIMER_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE0[5:4]  :=  CP_LANE0_PMA_REG_TX_BEACON_TIMER_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[5:4]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_BEACON_TIMER_SEL is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_TX_BEACON_TIMER_SEL);
    }

//initial config body381 end


//initial config body382 begin
    if(CP_LANE0_PMA_REG_TX_RXDET_REQ_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[6]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RXDET_REQ_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[6]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[6]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RXDET_REQ_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RXDET_REQ_OW);
    }

//initial config body382 end


//initial config body383 begin
    if(CP_LANE0_PMA_REG_TX_RXDET_REQ == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[7]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RXDET_REQ == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[7]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[7]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RXDET_REQ is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RXDET_REQ);
    }

//initial config body383 end


//initial config body384 begin
    if(CP_LANE0_PMA_REG_TX_BEACON_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[8]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_BEACON_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[8]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[8]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_BEACON_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_BEACON_EN_OW);
    }

//initial config body384 end


//initial config body385 begin
    if(CP_LANE0_PMA_REG_TX_BEACON_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[9]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_BEACON_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[9]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[9]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_BEACON_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_BEACON_EN);
    }

//initial config body385 end


//initial config body386 begin
    if(CP_LANE0_PMA_REG_TX_EI_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[10]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_EI_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[10]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[10]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_EI_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_EI_EN_OW);
    }

//initial config body386 end


//initial config body387 begin
    if(CP_LANE0_PMA_REG_TX_EI_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[11]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_EI_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[11]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[11]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_EI_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_EI_EN);
    }

//initial config body387 end


//initial config body388 begin
    if(CP_LANE0_PMA_REG_TX_BIT_CONV == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[12]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_BIT_CONV == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[12]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[12]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_BIT_CONV is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_BIT_CONV);
    }

//initial config body388 end


//initial config body389 begin
    if(CP_LANE0_PMA_REG_TX_RES_CAL >= 0 && CP_LANE0_PMA_REG_TX_RES_CAL <= 63)
    {
        SC_PMA_CH_INT_TX_LANE0[18:13]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_RES_CAL, 6) ^ 6'b110010;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[18:13]   :=  to_unsigned( 0, 6) ^ 6'b110010;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RES_CAL is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_RES_CAL);
    }

//initial config body389 end


//initial config body390 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_19 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[19]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_19 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[19]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[19]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_19 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_19);
    }

//initial config body390 end


//initial config body391 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_25_20 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_25_20 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE0[25:20]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_RESERVED_25_20, 6) ^ 6'b100000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[25:20]   :=  to_unsigned( 0, 6) ^ 6'b100000;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_25_20 is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_RESERVED_25_20);
    }

//initial config body391 end


//initial config body392 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_33_26 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_33_26 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[33:26]  :=  CP_LANE0_PMA_REG_TX_RESERVED_33_26;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[33:26]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_33_26 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_RESERVED_33_26);
    }

//initial config body392 end


//initial config body393 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_41_34 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_41_34 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[41:34]  :=  CP_LANE0_PMA_REG_TX_RESERVED_41_34;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[41:34]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_41_34 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_RESERVED_41_34);
    }

//initial config body393 end


//initial config body394 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_49_42 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_49_42 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[49:42]  :=  CP_LANE0_PMA_REG_TX_RESERVED_49_42;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[49:42]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_49_42 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_RESERVED_49_42);
    }

//initial config body394 end


//initial config body395 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_57_50 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_57_50 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[57:50]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_RESERVED_57_50, 8) ^ 8'b01000000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[57:50]   :=  to_unsigned( 0, 8) ^ 8'b01000000;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_57_50 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_RESERVED_57_50);
    }

//initial config body395 end


//initial config body396 begin
    if(CP_LANE0_PMA_REG_TX_SYNC_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[58]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_SYNC_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[58]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[58]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_SYNC_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_SYNC_OW);
    }

//initial config body396 end


//initial config body397 begin
    if(CP_LANE0_PMA_REG_TX_SYNC == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[59]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_TX_SYNC == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[59]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[59]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_SYNC is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_SYNC);
    }

//initial config body397 end


//initial config body398 begin
    if(CP_LANE0_PMA_REG_TX_PD_POST == "ON")
    {
        SC_PMA_CH_INT_TX_LANE0[60]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_TX_PD_POST == "OFF")
    {
        SC_PMA_CH_INT_TX_LANE0[60]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[60]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_PD_POST is set to %s. Legal values is ON,OFF",CP_LANE0_PMA_REG_TX_PD_POST);
    }

//initial config body398 end


//initial config body399 begin
    if(CP_LANE0_PMA_REG_TX_PD_POST_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[61]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_TX_PD_POST_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[61]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[61]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_PD_POST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_PD_POST_OW);
    }

//initial config body399 end


//initial config body400 begin
    if(CP_LANE0_PMA_REG_TX_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[62]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[62]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[62]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESET_N_OW);
    }

//initial config body400 end


//initial config body401 begin
    if(CP_LANE0_PMA_REG_TX_RESET_N == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[63]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_TX_RESET_N == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[63]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[63]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESET_N is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESET_N);
    }

//initial config body401 end


//initial config body402 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_64 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[64]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_64 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[64]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[64]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_64 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_64);
    }

//initial config body402 end


//initial config body403 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_65 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[65]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_65 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[65]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[65]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_65 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_65);
    }

//initial config body403 end


//initial config body404 begin
    if(CP_LANE0_PMA_REG_TX_BUSWIDTH_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[66]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_BUSWIDTH_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[66]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[66]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_BUSWIDTH_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_BUSWIDTH_OW);
    }

//initial config body404 end


//initial config body405 begin
    if(CP_LANE0_PMA_REG_TX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH_INT_TX_LANE0[69:67]   :=  to_unsigned( 0, 3) ^ 3'b011;
    }
    else if (CP_LANE0_PMA_REG_TX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH_INT_TX_LANE0[69:67]   :=  to_unsigned( 1, 3) ^ 3'b011;
    }
    else if (CP_LANE0_PMA_REG_TX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH_INT_TX_LANE0[69:67]   :=  to_unsigned( 2, 3) ^ 3'b011;
    }
    else if (CP_LANE0_PMA_REG_TX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH_INT_TX_LANE0[69:67]   :=  to_unsigned( 3, 3) ^ 3'b011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[69:67]   :=  to_unsigned( 0, 3) ^ 3'b011;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE0_PMA_REG_TX_BUSWIDTH);
    }

//initial config body405 end


//initial config body406 begin
    if(CP_LANE0_PMA_REG_PLL_READY_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[70]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_PLL_READY_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[70]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[70]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_PLL_READY_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_PLL_READY_OW);
    }

//initial config body406 end


//initial config body407 begin
    if(CP_LANE0_PMA_REG_PLL_READY == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[71]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_PLL_READY == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[71]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[71]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_PLL_READY is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_PLL_READY);
    }

//initial config body407 end


//initial config body408 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_72 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[72]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_72 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[72]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[72]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_72 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_72);
    }

//initial config body408 end


//initial config body409 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_73 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[73]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_73 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[73]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[73]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_73 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_73);
    }

//initial config body409 end


//initial config body410 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_74 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[74]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_74 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[74]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[74]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_74 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_74);
    }

//initial config body410 end


//initial config body411 begin
    if(CP_LANE0_PMA_REG_EI_PCLK_DELAY_SEL >= 0 && CP_LANE0_PMA_REG_EI_PCLK_DELAY_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE0[76:75]  :=  CP_LANE0_PMA_REG_EI_PCLK_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[76:75]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_EI_PCLK_DELAY_SEL is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_EI_PCLK_DELAY_SEL);
    }

//initial config body411 end


//initial config body412 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_77 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[77]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_77 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[77]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[77]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_77 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_77);
    }

//initial config body412 end


//initial config body413 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_83_78 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_83_78 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE0[83:78]  :=  CP_LANE0_PMA_REG_TX_RESERVED_83_78;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[83:78]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_83_78 is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_RESERVED_83_78);
    }

//initial config body413 end


//initial config body414 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_89_84 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_89_84 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE0[89:84]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_RESERVED_89_84, 6) ^ 6'b010101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[89:84]   :=  to_unsigned( 0, 6) ^ 6'b010101;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_89_84 is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_RESERVED_89_84);
    }

//initial config body414 end


//initial config body415 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_95_90 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_95_90 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE0[95:90]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_RESERVED_95_90, 6) ^ 6'b100000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[95:90]   :=  to_unsigned( 0, 6) ^ 6'b100000;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_95_90 is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_RESERVED_95_90);
    }

//initial config body415 end


//initial config body416 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_101_96 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_101_96 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE0[101:96]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_RESERVED_101_96, 6) ^ 6'b111111;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[101:96]   :=  to_unsigned( 0, 6) ^ 6'b111111;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_101_96 is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_RESERVED_101_96);
    }

//initial config body416 end


//initial config body417 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_107_102 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_107_102 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE0[107:102]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_RESERVED_107_102, 6) ^ 6'b110101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[107:102]   :=  to_unsigned( 0, 6) ^ 6'b110101;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_107_102 is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_RESERVED_107_102);
    }

//initial config body417 end


//initial config body418 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_113_108 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_113_108 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE0[113:108]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_RESERVED_113_108, 6) ^ 6'b110000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[113:108]   :=  to_unsigned( 0, 6) ^ 6'b110000;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_113_108 is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_RESERVED_113_108);
    }

//initial config body418 end


//initial config body419 begin
    if(CP_LANE0_PMA_REG_TX_AMP_DAC0 >= 0 && CP_LANE0_PMA_REG_TX_AMP_DAC0 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE0[119:114]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_AMP_DAC0, 6) ^ 6'b011001;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[119:114]   :=  to_unsigned( 0, 6) ^ 6'b011001;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_AMP_DAC0 is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_AMP_DAC0);
    }

//initial config body419 end


//initial config body420 begin

 if(CP_LANE0_PMA_REG_TX_AMP_DAC1 >= 0 && CP_LANE0_PMA_REG_TX_AMP_DAC1 <= 63) 
 {
 SC_PMA_CH_INT_TX_LANE0[125:120]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_AMP_DAC1, 6) ^ 6'b010011; 
}
 else 
 {
 SC_PMA_CH_INT_TX_LANE0[125:120]   :=  to_unsigned( 0, 6) ^ 6'b010011; 
 error("Setting Error : The CP_LANE0_PMA_REG_TX_AMP_DAC1 is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_AMP_DAC1); 
}
//}

 //initial//Altered value 19 to 14
 //{
 if(CP_LANE0_PMA_REG_TX_AMP_DAC2 >= 0 && CP_LANE0_PMA_REG_TX_AMP_DAC2 <= 63) 
 {
 SC_PMA_CH_INT_TX_LANE0[131:126]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_AMP_DAC2, 6) ^ 6'b001110; 
}
 else 
 {
 SC_PMA_CH_INT_TX_LANE0[131:126]   :=  to_unsigned( 0, 6) ^ 6'b001110; 
 error("Setting Error : The CP_LANE0_PMA_REG_TX_AMP_DAC2 is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_AMP_DAC2); 
}

//initial config body420 end


//initial config body421 begin
    if(CP_LANE0_PMA_REG_TX_AMP_DAC3 >= 0 && CP_LANE0_PMA_REG_TX_AMP_DAC3 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE0[137:132]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_AMP_DAC3, 6) ^ 6'b001001;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[137:132]   :=  to_unsigned( 0, 6) ^ 6'b001001;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_AMP_DAC3 is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_AMP_DAC3);
    }

//initial config body421 end


//initial config body422 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_143_138 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_143_138 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE0[143:138]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_RESERVED_143_138, 6) ^ 6'b000101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[143:138]   :=  to_unsigned( 0, 6) ^ 6'b000101;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_143_138 is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_RESERVED_143_138);
    }

//initial config body422 end


//initial config body423 begin
    if(CP_LANE0_PMA_REG_TX_MARGIN >= 0 && CP_LANE0_PMA_REG_TX_MARGIN <= 7)
    {
        SC_PMA_CH_INT_TX_LANE0[146:144]  :=  CP_LANE0_PMA_REG_TX_MARGIN;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[146:144]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_MARGIN is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_REG_TX_MARGIN);
    }

//initial config body423 end


//initial config body424 begin
    if(CP_LANE0_PMA_REG_TX_MARGIN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[147]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_MARGIN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[147]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[147]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_MARGIN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_MARGIN_OW);
    }

//initial config body424 end


//initial config body425 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_149_148 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_149_148 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE0[149:148]  :=  CP_LANE0_PMA_REG_TX_RESERVED_149_148;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[149:148]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_149_148 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_TX_RESERVED_149_148);
    }

//initial config body425 end


//initial config body426 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_150 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[150]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_150 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[150]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[150]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_150 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_150);
    }

//initial config body426 end


//initial config body427 begin
    if(CP_LANE0_PMA_REG_TX_SWING == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[151]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_SWING == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[151]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[151]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_SWING is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_SWING);
    }

//initial config body427 end


//initial config body428 begin
    if(CP_LANE0_PMA_REG_TX_SWING_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[152]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_SWING_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[152]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[152]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_SWING_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_SWING_OW);
    }

//initial config body428 end


//initial config body429 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_153 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[153]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_153 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[153]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[153]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_153 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_153);
    }

//initial config body429 end


//initial config body430 begin
    if(CP_LANE0_PMA_REG_TX_RXDET_THRESHOLD == "28MV")
    {
        SC_PMA_CH_INT_TX_LANE0[155:154]   :=  to_unsigned( 0, 2) ^ 2'b10;
    }
    else if (CP_LANE0_PMA_REG_TX_RXDET_THRESHOLD == "56MV")
    {
        SC_PMA_CH_INT_TX_LANE0[155:154]   :=  to_unsigned( 1, 2) ^ 2'b10;
    }
    else if (CP_LANE0_PMA_REG_TX_RXDET_THRESHOLD == "84MV")
    {
        SC_PMA_CH_INT_TX_LANE0[155:154]   :=  to_unsigned( 2, 2) ^ 2'b10;
    }
    else if (CP_LANE0_PMA_REG_TX_RXDET_THRESHOLD == "112MV")
    {
        SC_PMA_CH_INT_TX_LANE0[155:154]   :=  to_unsigned( 3, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[155:154]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RXDET_THRESHOLD is set to %s. Legal values is 28MV,56MV,84MV,112MV",CP_LANE0_PMA_REG_TX_RXDET_THRESHOLD);
    }

//initial config body430 end


//initial config body431 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_157_156 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_157_156 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE0[157:156]  :=  CP_LANE0_PMA_REG_TX_RESERVED_157_156;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[157:156]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_157_156 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_TX_RESERVED_157_156);
    }

//initial config body431 end


//initial config body432 begin
    if(CP_LANE0_PMA_REG_TX_BEACON_OSC_CTRL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[158]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_BEACON_OSC_CTRL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[158]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[158]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_BEACON_OSC_CTRL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_BEACON_OSC_CTRL);
    }

//initial config body432 end


//initial config body433 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_160_159 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_160_159 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE0[160:159]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_RESERVED_160_159, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[160:159]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_160_159 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_TX_RESERVED_160_159);
    }

//initial config body433 end


//initial config body434 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_162_161 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_162_161 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE0[162:161]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_RESERVED_162_161, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[162:161]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_162_161 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_TX_RESERVED_162_161);
    }

//initial config body434 end


//initial config body435 begin
    if(CP_LANE0_PMA_REG_TX_TX2RX_SLPBACK_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[163]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_TX2RX_SLPBACK_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[163]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[163]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_TX2RX_SLPBACK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_TX2RX_SLPBACK_EN);
    }

//initial config body435 end


//initial config body436 begin
    if(CP_LANE0_PMA_REG_TX_PCLK_EDGE_SEL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[164]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_PCLK_EDGE_SEL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[164]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[164]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_PCLK_EDGE_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_PCLK_EDGE_SEL);
    }

//initial config body436 end


//initial config body437 begin
    if(CP_LANE0_PMA_REG_TX_RXDET_STATUS_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[165]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RXDET_STATUS_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[165]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[165]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RXDET_STATUS_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RXDET_STATUS_OW);
    }

//initial config body437 end


//initial config body438 begin
    if(CP_LANE0_PMA_REG_TX_RXDET_STATUS == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[166]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_TX_RXDET_STATUS == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[166]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[166]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RXDET_STATUS is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RXDET_STATUS);
    }

//initial config body438 end


//initial config body439 begin
    if(CP_LANE0_PMA_REG_TX_PRBS_GEN_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[167]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_PRBS_GEN_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[167]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[167]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_PRBS_GEN_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_PRBS_GEN_EN);
    }

//initial config body439 end


//initial config body440 begin
    if(CP_LANE0_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH_INT_TX_LANE0[169:168]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE0_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH_INT_TX_LANE0[169:168]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE0_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH_INT_TX_LANE0[169:168]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE0_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH_INT_TX_LANE0[169:168]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[169:168]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_PRBS_GEN_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE0_PMA_REG_TX_PRBS_GEN_WIDTH_SEL);
    }

//initial config body440 end


//initial config body441 begin
    if(CP_LANE0_PMA_REG_TX_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH_INT_TX_LANE0[171:170]  :=  2'b00;
    }
    else if (CP_LANE0_PMA_REG_TX_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH_INT_TX_LANE0[171:170]  :=  2'b01;
    }
    else if (CP_LANE0_PMA_REG_TX_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH_INT_TX_LANE0[171:170]  :=  2'b10;
    }
    else if (CP_LANE0_PMA_REG_TX_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH_INT_TX_LANE0[171:170]  :=  2'b11;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[171:170]  :=  2'b00;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_LANE0_PMA_REG_TX_PRBS_SEL);
    }

//initial config body441 end


//initial config body442 begin
    if(CP_LANE0_PMA_REG_TX_UDP_DATA_7_TO_0 >= 0 && CP_LANE0_PMA_REG_TX_UDP_DATA_7_TO_0 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[179:172]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_UDP_DATA_7_TO_0, 8) ^ 8'b00000101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[179:172]   :=  to_unsigned( 0, 8) ^ 8'b00000101;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_UDP_DATA_7_TO_0 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_UDP_DATA_7_TO_0);
    }

//initial config body442 end


//initial config body443 begin
    if(CP_LANE0_PMA_REG_TX_UDP_DATA_15_TO_8 >= 0 && CP_LANE0_PMA_REG_TX_UDP_DATA_15_TO_8 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[187:180]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_UDP_DATA_15_TO_8, 8) ^ 8'b11101011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[187:180]   :=  to_unsigned( 0, 8) ^ 8'b11101011;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_UDP_DATA_15_TO_8 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_UDP_DATA_15_TO_8);
    }

//initial config body443 end


//initial config body444 begin
    if(CP_LANE0_PMA_REG_TX_UDP_DATA_19_TO_16 >= 0 && CP_LANE0_PMA_REG_TX_UDP_DATA_19_TO_16 <= 15)
    {
        SC_PMA_CH_INT_TX_LANE0[191:188]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_UDP_DATA_19_TO_16, 4) ^ 4'b0011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[191:188]   :=  to_unsigned( 0, 4) ^ 4'b0011;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_UDP_DATA_19_TO_16 is set to %d. Legal values is 0 to 15",CP_LANE0_PMA_REG_TX_UDP_DATA_19_TO_16);
    }

//initial config body444 end


//initial config body445 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_192 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[192]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_192 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[192]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[192]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_192 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_192);
    }

//initial config body445 end


//initial config body446 begin
    if(CP_LANE0_PMA_REG_TX_FIFO_WP_CTRL >= 0 && CP_LANE0_PMA_REG_TX_FIFO_WP_CTRL <= 7)
    {
        SC_PMA_CH_INT_TX_LANE0[195:193]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_FIFO_WP_CTRL, 3) ^ 3'b010;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[195:193]   :=  to_unsigned( 0, 3) ^ 3'b010;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_FIFO_WP_CTRL is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_REG_TX_FIFO_WP_CTRL);
    }

//initial config body446 end


//initial config body447 begin
    if(CP_LANE0_PMA_REG_TX_FIFO_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[196]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_FIFO_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[196]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[196]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_FIFO_EN);
    }

//initial config body447 end


//initial config body448 begin
    if(CP_LANE0_PMA_REG_TX_DATA_MUX_SEL >= 0 && CP_LANE0_PMA_REG_TX_DATA_MUX_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE0[198:197]  :=  CP_LANE0_PMA_REG_TX_DATA_MUX_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[198:197]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_DATA_MUX_SEL is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_TX_DATA_MUX_SEL);
    }

//initial config body448 end


//initial config body449 begin
    if(CP_LANE0_PMA_REG_TX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[199]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[199]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[199]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_ERR_INSERT is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_ERR_INSERT);
    }

//initial config body449 end


//initial config body450 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_203_200 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_203_200 <= 15)
    {
        SC_PMA_CH_INT_TX_LANE0[203:200]  :=  CP_LANE0_PMA_REG_TX_RESERVED_203_200;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[203:200]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_203_200 is set to %d. Legal values is 0 to 15",CP_LANE0_PMA_REG_TX_RESERVED_203_200);
    }

//initial config body450 end


//initial config body451 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_204 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[204]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_204 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[204]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[204]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_204 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_204);
    }

//initial config body451 end


//initial config body452 begin
    if(CP_LANE0_PMA_REG_TX_SATA_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[205]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_SATA_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[205]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[205]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_SATA_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_SATA_EN);
    }

//initial config body452 end


//initial config body453 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_207_206 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_207_206 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE0[207:206]  :=  CP_LANE0_PMA_REG_TX_RESERVED_207_206;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[207:206]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_207_206 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_TX_RESERVED_207_206);
    }

//initial config body453 end


//initial config body454 begin
    if(CP_LANE0_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[208]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[208]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[208]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW);
    }

//initial config body454 end


//initial config body455 begin
    if(CP_LANE0_PMA_REG_RATE_CHANGE_TXPCLK_ON == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[209]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_RATE_CHANGE_TXPCLK_ON == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[209]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[209]  :=  1'b0^1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RATE_CHANGE_TXPCLK_ON is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RATE_CHANGE_TXPCLK_ON);
    }

//initial config body455 end


//initial config body456 begin
    if(CP_LANE0_PMA_REG_TX_CFG_POST1 >= 0 && CP_LANE0_PMA_REG_TX_CFG_POST1 <= 31)
    {
        SC_PMA_CH_INT_TX_LANE0[214:210]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_CFG_POST1, 5) ^ 5'b11000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[214:210]   :=  to_unsigned( 0, 5) ^ 5'b11000;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_CFG_POST1 is set to %d. Legal values is 0 to 31",CP_LANE0_PMA_REG_TX_CFG_POST1);
    }

//initial config body456 end


//initial config body457 begin
    if(CP_LANE0_PMA_REG_TX_CFG_POST2 >= 0 && CP_LANE0_PMA_REG_TX_CFG_POST2 <= 31)
    {
        SC_PMA_CH_INT_TX_LANE0[219:215]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_CFG_POST2, 5) ^ 5'b10011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[219:215]   :=  to_unsigned( 0, 5) ^ 5'b10011;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_CFG_POST2 is set to %d. Legal values is 0 to 31",CP_LANE0_PMA_REG_TX_CFG_POST2);
    }

//initial config body457 end


//initial config body458 begin
    if(CP_LANE0_PMA_REG_TX_DEEMP >= 0 && CP_LANE0_PMA_REG_TX_DEEMP <= 3)
    {
        SC_PMA_CH_INT_TX_LANE0[221:220]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_DEEMP, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[221:220]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_DEEMP is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_TX_DEEMP);
    }

//initial config body458 end


//initial config body459 begin
    if(CP_LANE0_PMA_REG_TX_DEEMP_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[222]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_TX_DEEMP_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[222]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[222]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_DEEMP_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_DEEMP_OW);
    }

//initial config body459 end


//initial config body460 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_224_223 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_224_223 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE0[224:223]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_RESERVED_224_223, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[224:223]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_224_223 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_TX_RESERVED_224_223);
    }

//initial config body460 end


//initial config body461 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_225 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[225]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_225 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[225]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[225]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_225 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_225);
    }

//initial config body461 end


//initial config body462 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_229_226 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_229_226 <= 15)
    {
        SC_PMA_CH_INT_TX_LANE0[229:226]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_RESERVED_229_226, 4) ^ 4'b0100;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[229:226]   :=  to_unsigned( 0, 4) ^ 4'b0100;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_229_226 is set to %d. Legal values is 0 to 15",CP_LANE0_PMA_REG_TX_RESERVED_229_226);
    }

//initial config body462 end


//initial config body463 begin
    if(CP_LANE0_PMA_REG_TX_OOB_DELAY_SEL >= 0 && CP_LANE0_PMA_REG_TX_OOB_DELAY_SEL <= 15)
    {
        SC_PMA_CH_INT_TX_LANE0[233:230]  :=  CP_LANE0_PMA_REG_TX_OOB_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[233:230]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_OOB_DELAY_SEL is set to %d. Legal values is 0 to 15",CP_LANE0_PMA_REG_TX_OOB_DELAY_SEL);
    }

//initial config body463 end


//initial config body464 begin
    if(CP_LANE0_PMA_REG_TX_POLARITY == "NORMAL")
    {
        SC_PMA_CH_INT_TX_LANE0[234]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_POLARITY == "REVERSE")
    {
        SC_PMA_CH_INT_TX_LANE0[234]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[234]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_LANE0_PMA_REG_TX_POLARITY);
    }

//initial config body464 end


//initial config body465 begin
    if(CP_LANE0_PMA_REG_ANA_TX_JTAG_DATA_O_SEL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[235]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_ANA_TX_JTAG_DATA_O_SEL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[235]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[235]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_ANA_TX_JTAG_DATA_O_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_ANA_TX_JTAG_DATA_O_SEL);
    }

//initial config body465 end


//initial config body466 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_236 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[236]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_236 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[236]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[236]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_236 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_236);
    }

//initial config body466 end


//initial config body467 begin
    if(CP_LANE0_PMA_REG_TX_LS_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[237]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_LS_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[237]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[237]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_LS_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_LS_MODE_EN);
    }

//initial config body467 end


//initial config body468 begin
    if(CP_LANE0_PMA_REG_TX_JTAG_MODE_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[238]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_JTAG_MODE_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[238]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[238]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_JTAG_MODE_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_JTAG_MODE_EN_OW);
    }

//initial config body468 end


//initial config body469 begin
    if(CP_LANE0_PMA_REG_TX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[239]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[239]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[239]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_JTAG_MODE_EN);
    }

//initial config body469 end


//initial config body470 begin
    if(CP_LANE0_PMA_REG_RX_JTAG_MODE_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[240]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_JTAG_MODE_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[240]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[240]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_JTAG_MODE_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_JTAG_MODE_EN_OW);
    }

//initial config body470 end


//initial config body471 begin
    if(CP_LANE0_PMA_REG_RX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[241]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_RX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[241]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[241]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_JTAG_MODE_EN);
    }

//initial config body471 end


//initial config body472 begin
    if(CP_LANE0_PMA_REG_RX_JTAG_OE == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[242]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_RX_JTAG_OE == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[242]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[242]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_JTAG_OE is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_RX_JTAG_OE);
    }

//initial config body472 end


//initial config body473 begin
    if(CP_LANE0_PMA_REG_RX_ACJTAG_VHYSTSEL >= 0 && CP_LANE0_PMA_REG_RX_ACJTAG_VHYSTSEL <= 7)
    {
        SC_PMA_CH_INT_TX_LANE0[245:243]  :=  CP_LANE0_PMA_REG_RX_ACJTAG_VHYSTSEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[245:243]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_ACJTAG_VHYSTSEL is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_REG_RX_ACJTAG_VHYSTSEL);
    }

//initial config body473 end


//initial config body474 begin
    if(CP_LANE0_PMA_REG_TX_RES_CAL_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[246]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RES_CAL_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[246]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[246]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RES_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RES_CAL_EN);
    }

//initial config body474 end


//initial config body475 begin
    if(CP_LANE0_PMA_REG_RX_TERM_MODE_CTRL >= 0 && CP_LANE0_PMA_REG_RX_TERM_MODE_CTRL <= 7)
    {
        SC_PMA_CH_INT_TX_LANE0[249:247]   :=  to_unsigned( CP_LANE0_PMA_REG_RX_TERM_MODE_CTRL, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[249:247]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE0_PMA_REG_RX_TERM_MODE_CTRL is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_REG_RX_TERM_MODE_CTRL);
    }

//initial config body475 end


//initial config body476 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_251_250 >= 0 && CP_LANE0_PMA_REG_TX_RESERVED_251_250 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE0[251:250]  :=  CP_LANE0_PMA_REG_TX_RESERVED_251_250;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[251:250]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_251_250 is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_TX_RESERVED_251_250);
    }

//initial config body476 end


//initial config body477 begin
    if(CP_LANE0_PMA_REG_PLPBK_TXPCLK_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[252]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_PLPBK_TXPCLK_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[252]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[252]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_PLPBK_TXPCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_PLPBK_TXPCLK_EN);
    }

//initial config body477 end


//initial config body478 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_253 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[253]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_253 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[253]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[253]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_253 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_253);
    }

//initial config body478 end


//initial config body479 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_254 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[254]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_254 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[254]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[254]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_254 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_254);
    }

//initial config body479 end


//initial config body480 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_255 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[255]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_255 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[255]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[255]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_255 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_255);
    }

//initial config body480 end


//initial config body481 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_256 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[256]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_256 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[256]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[256]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_256 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_256);
    }

//initial config body481 end


//initial config body482 begin
    if(CP_LANE0_PMA_REG_TX_RESERVED_257 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[257]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_RESERVED_257 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[257]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[257]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RESERVED_257 is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_RESERVED_257);
    }

//initial config body482 end


//initial config body483 begin
    if(CP_LANE0_PMA_REG_TX_PH_SEL >= 0 && CP_LANE0_PMA_REG_TX_PH_SEL <= 63)
    {
        SC_PMA_CH_INT_TX_LANE0[263:258]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_PH_SEL, 6) ^ 6'b000001;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[263:258]   :=  to_unsigned( 0, 6) ^ 6'b000001;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_PH_SEL is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_PH_SEL);
    }

//initial config body483 end


//initial config body484 begin
    if(CP_LANE0_PMA_REG_TX_CFG_PRE  >= 0 && CP_LANE0_PMA_REG_TX_CFG_PRE  <= 31)
    {
        SC_PMA_CH_INT_TX_LANE0[268:264]  :=  CP_LANE0_PMA_REG_TX_CFG_PRE;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[268:264]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_CFG_PRE  is set to %d. Legal values is 0 to 31",CP_LANE0_PMA_REG_TX_CFG_PRE );
    }

//initial config body484 end


//initial config body485 begin
    if(CP_LANE0_PMA_REG_TX_CFG_MAIN >= 0 && CP_LANE0_PMA_REG_TX_CFG_MAIN <= 63)
    {
        SC_PMA_CH_INT_TX_LANE0[274:269]  :=  CP_LANE0_PMA_REG_TX_CFG_MAIN;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[274:269]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_CFG_MAIN is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_CFG_MAIN);
    }

//initial config body485 end


//initial config body486 begin
    if(CP_LANE0_PMA_REG_CFG_POST >= 0 && CP_LANE0_PMA_REG_CFG_POST <= 31)
    {
        SC_PMA_CH_INT_TX_LANE0[279:275]  :=  CP_LANE0_PMA_REG_CFG_POST;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[279:275]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_CFG_POST is set to %d. Legal values is 0 to 31",CP_LANE0_PMA_REG_CFG_POST);
    }

//initial config body486 end


//initial config body487 begin
    if(CP_LANE0_PMA_REG_PD_MAIN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[280]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_PD_MAIN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[280]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[280]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_PD_MAIN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_PD_MAIN);
    }

//initial config body487 end


//initial config body488 begin
    if(CP_LANE0_PMA_REG_PD_PRE == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[281]  :=  1'b0^1'b1;
    }
    else if (CP_LANE0_PMA_REG_PD_PRE == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[281]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[281]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE0_PMA_REG_PD_PRE is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_PD_PRE);
    }

//initial config body488 end


//initial config body489 begin
    if(CP_LANE0_PMA_REG_TX_LS_DATA == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[282]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_LS_DATA == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[282]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[282]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_LS_DATA is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_LS_DATA);
    }

//initial config body489 end


//initial config body490 begin
    if(CP_LANE0_PMA_REG_TX_DCC_BUF_SZ_SEL >= 0 && CP_LANE0_PMA_REG_TX_DCC_BUF_SZ_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE0[284:283]  :=  CP_LANE0_PMA_REG_TX_DCC_BUF_SZ_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[284:283]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_DCC_BUF_SZ_SEL is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_TX_DCC_BUF_SZ_SEL);
    }

//initial config body490 end


//initial config body491 begin
    if(CP_LANE0_PMA_REG_TX_DCC_CAL_CUR_TUNE >= 0 && CP_LANE0_PMA_REG_TX_DCC_CAL_CUR_TUNE <= 63)
    {
        SC_PMA_CH_INT_TX_LANE0[290:285]  :=  CP_LANE0_PMA_REG_TX_DCC_CAL_CUR_TUNE;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[290:285]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_DCC_CAL_CUR_TUNE is set to %d. Legal values is 0 to 63",CP_LANE0_PMA_REG_TX_DCC_CAL_CUR_TUNE);
    }

//initial config body491 end


//initial config body492 begin
    if(CP_LANE0_PMA_REG_TX_DCC_CAL_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[291]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_DCC_CAL_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[291]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[291]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_DCC_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_DCC_CAL_EN);
    }

//initial config body492 end


//initial config body493 begin
    if(CP_LANE0_PMA_REG_TX_DCC_CUR_SS >= 0 && CP_LANE0_PMA_REG_TX_DCC_CUR_SS <= 3)
    {
        SC_PMA_CH_INT_TX_LANE0[293:292]  :=  CP_LANE0_PMA_REG_TX_DCC_CUR_SS;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[293:292]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_DCC_CUR_SS is set to %d. Legal values is 0 to 3",CP_LANE0_PMA_REG_TX_DCC_CUR_SS);
    }

//initial config body493 end


//initial config body494 begin
    if(CP_LANE0_PMA_REG_TX_DCC_FA_CTRL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[294]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_DCC_FA_CTRL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[294]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[294]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_DCC_FA_CTRL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_DCC_FA_CTRL);
    }

//initial config body494 end


//initial config body495 begin
    if(CP_LANE0_PMA_REG_TX_DCC_RI_CTRL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[295]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_DCC_RI_CTRL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[295]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[295]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_DCC_RI_CTRL is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_DCC_RI_CTRL);
    }

//initial config body495 end


//initial config body496 begin
    if(CP_LANE0_PMA_REG_ATB_SEL_2_TO_0 >= 0 && CP_LANE0_PMA_REG_ATB_SEL_2_TO_0 <= 7)
    {
        SC_PMA_CH_INT_TX_LANE0[298:296]  :=  CP_LANE0_PMA_REG_ATB_SEL_2_TO_0;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[298:296]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_ATB_SEL_2_TO_0 is set to %d. Legal values is 0 to 7",CP_LANE0_PMA_REG_ATB_SEL_2_TO_0);
    }

//initial config body496 end


//initial config body497 begin
    if(CP_LANE0_PMA_REG_ATB_SEL_9_TO_3 >= 0 && CP_LANE0_PMA_REG_ATB_SEL_9_TO_3 <= 127)
    {
        SC_PMA_CH_INT_TX_LANE0[305:299]  :=  CP_LANE0_PMA_REG_ATB_SEL_9_TO_3;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[305:299]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_ATB_SEL_9_TO_3 is set to %d. Legal values is 0 to 127",CP_LANE0_PMA_REG_ATB_SEL_9_TO_3);
    }

//initial config body497 end


//initial config body498 begin
    if(CP_LANE0_PMA_REG_TX_CFG_7_TO_0 >= 0 && CP_LANE0_PMA_REG_TX_CFG_7_TO_0 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[313:306]  :=  CP_LANE0_PMA_REG_TX_CFG_7_TO_0;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[313:306]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_CFG_7_TO_0 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_CFG_7_TO_0);
    }

//initial config body498 end


//initial config body499 begin
    if(CP_LANE0_PMA_REG_TX_CFG_15_TO_8 >= 0 && CP_LANE0_PMA_REG_TX_CFG_15_TO_8 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[321:314]  :=  CP_LANE0_PMA_REG_TX_CFG_15_TO_8;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[321:314]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_CFG_15_TO_8 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_CFG_15_TO_8);
    }

//initial config body499 end


//initial config body500 begin
    if(CP_LANE0_PMA_REG_TX_CFG_23_TO_16 >= 0 && CP_LANE0_PMA_REG_TX_CFG_23_TO_16 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[329:322]  :=  CP_LANE0_PMA_REG_TX_CFG_23_TO_16;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[329:322]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_CFG_23_TO_16 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_CFG_23_TO_16);
    }

//initial config body500 end


//initial config body501 begin
    if(CP_LANE0_PMA_REG_TX_CFG_31_TO_24 >= 0 && CP_LANE0_PMA_REG_TX_CFG_31_TO_24 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[337:330]  :=  CP_LANE0_PMA_REG_TX_CFG_31_TO_24;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[337:330]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_CFG_31_TO_24 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_CFG_31_TO_24);
    }

//initial config body501 end


//initial config body502 begin
    if(CP_LANE0_PMA_REG_TX_OOB_EI_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[338]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_OOB_EI_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[338]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[338]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_OOB_EI_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_OOB_EI_EN);
    }

//initial config body502 end


//initial config body503 begin
    if(CP_LANE0_PMA_REG_TX_OOB_EI_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[339]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_OOB_EI_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[339]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[339]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_OOB_EI_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_OOB_EI_EN_OW);
    }

//initial config body503 end


//initial config body504 begin
    if(CP_LANE0_PMA_REG_TX_BEACON_EN_DELAYED == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[340]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_BEACON_EN_DELAYED == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[340]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[340]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_BEACON_EN_DELAYED is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_BEACON_EN_DELAYED);
    }

//initial config body504 end


//initial config body505 begin
    if(CP_LANE0_PMA_REG_TX_BEACON_EN_DELAYED_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[341]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_BEACON_EN_DELAYED_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[341]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[341]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_BEACON_EN_DELAYED_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_BEACON_EN_DELAYED_OW);
    }

//initial config body505 end


//initial config body506 begin
    if(CP_LANE0_PMA_REG_TX_JTAG_DATA == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[342]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_TX_JTAG_DATA == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[342]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[342]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_JTAG_DATA is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_TX_JTAG_DATA);
    }

//initial config body506 end


//initial config body507 begin
    if(CP_LANE0_PMA_REG_TX_RXDET_TIMER_SEL >= 0 && CP_LANE0_PMA_REG_TX_RXDET_TIMER_SEL <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[350:343]   :=  to_unsigned( CP_LANE0_PMA_REG_TX_RXDET_TIMER_SEL, 8) ^ 8'b01010111;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[350:343]   :=  to_unsigned( 0, 8) ^ 8'b01010111;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_RXDET_TIMER_SEL is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_RXDET_TIMER_SEL);
    }

//initial config body507 end


//initial config body508 begin
    if(CP_LANE0_PMA_REG_TX_CFG1_7_0 >= 0 && CP_LANE0_PMA_REG_TX_CFG1_7_0 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[358:351]  :=  CP_LANE0_PMA_REG_TX_CFG1_7_0;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[358:351]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_CFG1_7_0 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_CFG1_7_0);
    }

//initial config body508 end


//initial config body509 begin
    if(CP_LANE0_PMA_REG_TX_CFG1_15_8 >= 0 && CP_LANE0_PMA_REG_TX_CFG1_15_8 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[366:359]  :=  CP_LANE0_PMA_REG_TX_CFG1_15_8;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[366:359]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_CFG1_15_8 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_CFG1_15_8);
    }

//initial config body509 end


//initial config body510 begin
    if(CP_LANE0_PMA_REG_TX_CFG1_23_16 >= 0 && CP_LANE0_PMA_REG_TX_CFG1_23_16 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[374:367]  :=  CP_LANE0_PMA_REG_TX_CFG1_23_16;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[374:367]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_CFG1_23_16 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_CFG1_23_16);
    }

//initial config body510 end


//initial config body511 begin
    if(CP_LANE0_PMA_REG_TX_CFG1_31_24 >= 0 && CP_LANE0_PMA_REG_TX_CFG1_31_24 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE0[382:375]  :=  CP_LANE0_PMA_REG_TX_CFG1_31_24;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[382:375]  :=  0;
        error("Setting Error : The CP_LANE0_PMA_REG_TX_CFG1_31_24 is set to %d. Legal values is 0 to 255",CP_LANE0_PMA_REG_TX_CFG1_31_24);
    }

//initial config body511 end


//initial config body512 begin
    if(CP_LANE0_PMA_REG_CFG_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH_INT_TX_LANE0[383]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CFG_LANE_POWERUP == "ON")
    {
        SC_PMA_CH_INT_TX_LANE0[383]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[383]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CFG_LANE_POWERUP is set to %s. Legal values is OFF,ON",CP_LANE0_PMA_REG_CFG_LANE_POWERUP);
    }

//initial config body512 end


//initial config body513 begin
    if(CP_LANE0_PMA_REG_CFG_PMA_POR_N == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[384]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CFG_PMA_POR_N == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[384]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[384]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CFG_PMA_POR_N is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CFG_PMA_POR_N);
    }

//initial config body513 end


//initial config body514 begin
    if(CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[385]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[385]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[385]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH);
    }

//initial config body514 end


//initial config body515 begin
    if(CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_PISO == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[386]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_PISO == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[386]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[386]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_PISO is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_PISO);
    }

//initial config body515 end


//initial config body516 begin
    if(CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[387]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[387]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[387]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER);
    }

//initial config body516 end


//initial config body517 begin
    if(CP_LANE0_PMA_REG_CFG_TX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE0[388]  :=  1'b0;
    }
    else if (CP_LANE0_PMA_REG_CFG_TX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE0[388]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE0[388]  :=  1'b0;
        error("Setting Error : The CP_LANE0_PMA_REG_CFG_TX_PMA_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE0_PMA_REG_CFG_TX_PMA_RSTN);
    }

//initial config body517 end


//initial config body518 begin
    if(CP_LANE1_PCS_BYPASS_WORD_ALIGN == "FALSE")
    {
        SC_PCS_CH_INT_1[1]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_BYPASS_WORD_ALIGN == "TRUE")
    {
        SC_PCS_CH_INT_1[1]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[1]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_BYPASS_WORD_ALIGN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_BYPASS_WORD_ALIGN);
    }

//initial config body518 end


//initial config body519 begin
    if(CP_LANE1_PCS_BYPASS_DENC == "FALSE")
    {
        SC_PCS_CH_INT_1[2]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_BYPASS_DENC == "TRUE")
    {
        SC_PCS_CH_INT_1[2]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[2]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_BYPASS_DENC is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_BYPASS_DENC);
    }

//initial config body519 end


//initial config body520 begin
    if(CP_LANE1_PCS_BYPASS_BONDING == "FALSE")
    {
        SC_PCS_CH_INT_1[3]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_BYPASS_BONDING == "TRUE")
    {
        SC_PCS_CH_INT_1[3]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[3]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_BYPASS_BONDING is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_BYPASS_BONDING);
    }

//initial config body520 end


//initial config body521 begin
    if(CP_LANE1_PCS_BYPASS_CTC == "FALSE")
    {
        SC_PCS_CH_INT_1[4]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_BYPASS_CTC == "TRUE")
    {
        SC_PCS_CH_INT_1[4]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[4]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_BYPASS_CTC is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_BYPASS_CTC);
    }

//initial config body521 end


//initial config body522 begin
    if(CP_LANE1_PCS_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH_INT_1[5]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH_INT_1[5]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[5]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_BYPASS_GEAR);
    }

//initial config body522 end


//initial config body523 begin
    if(CP_LANE1_PCS_BYPASS_BRIDGE == "FALSE")
    {
        SC_PCS_CH_INT_1[6]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_BYPASS_BRIDGE == "TRUE")
    {
        SC_PCS_CH_INT_1[6]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[6]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_BYPASS_BRIDGE is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_BYPASS_BRIDGE);
    }

//initial config body523 end


//initial config body524 begin
    if(CP_LANE1_PCS_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH_INT_1[7]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH_INT_1[7]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[7]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_BYPASS_BRIDGE_FIFO);
    }

//initial config body524 end


//initial config body525 begin
    if(CP_LANE1_PCS_DATA_MODE == "X8")
    {
        SC_PCS_CH_INT_1[8]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_DATA_MODE == "X10")
    {
        SC_PCS_CH_INT_1[8]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_DATA_MODE == "X16")
    {
        SC_PCS_CH_INT_1[8]  :=  1'b1;
    }
    else if (CP_LANE1_PCS_DATA_MODE == "X20")
    {
        SC_PCS_CH_INT_1[8]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[8]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_DATA_MODE is set to %s. Legal values is X8,X10,X16,X20",CP_LANE1_PCS_DATA_MODE);
    }

//initial config body525 end


//initial config body526 begin
    if(CP_LANE1_PCS_RX_POLARITY_INV == "DELAY")
    {
        SC_PCS_CH_INT_1[10:9]  :=  2'b00;
    }
    else if (CP_LANE1_PCS_RX_POLARITY_INV == "BIT_POLARITY_INVERION")
    {
        SC_PCS_CH_INT_1[10:9]  :=  2'b01;
    }
    else if (CP_LANE1_PCS_RX_POLARITY_INV == "BIT_REVERSAL")
    {
        SC_PCS_CH_INT_1[10:9]  :=  2'b10;
    }
    else if (CP_LANE1_PCS_RX_POLARITY_INV == "BOTH")
    {
        SC_PCS_CH_INT_1[10:9]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_1[10:9]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PCS_RX_POLARITY_INV is set to %s. Legal values is DELAY,BIT_POLARITY_INVERION,BIT_REVERSAL,BOTH",CP_LANE1_PCS_RX_POLARITY_INV);
    }

//initial config body526 end


//initial config body527 begin
    if(CP_LANE1_PCS_ALIGN_MODE == "1GB")
    {
        SC_PCS_CH_INT_1[12:11]  :=  2'b00;
    }
    else if (CP_LANE1_PCS_ALIGN_MODE == "10GB")
    {
        SC_PCS_CH_INT_1[12:11]  :=  2'b01;
    }
    else if (CP_LANE1_PCS_ALIGN_MODE == "RAPIDIO")
    {
        SC_PCS_CH_INT_1[12:11]  :=  2'b10;
    }
    else if (CP_LANE1_PCS_ALIGN_MODE == "OUTSIDE")
    {
        SC_PCS_CH_INT_1[12:11]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_1[12:11]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PCS_ALIGN_MODE is set to %s. Legal values is 1GB,10GB,RAPIDIO,OUTSIDE",CP_LANE1_PCS_ALIGN_MODE);
    }

//initial config body527 end


//initial config body528 begin
    if(CP_LANE1_PCS_SAMP_16B == "X20")
    {
        SC_PCS_CH_INT_1[13]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_SAMP_16B == "X16")
    {
        SC_PCS_CH_INT_1[13]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[13]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_SAMP_16B is set to %s. Legal values is X20,X16",CP_LANE1_PCS_SAMP_16B);
    }

//initial config body528 end


//initial config body529 begin
    if(CP_LANE1_PCS_FARLP_PWR_REDUCTION == "FALSE")
    {
        SC_PCS_CH_INT_1[14]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_FARLP_PWR_REDUCTION == "TRUE")
    {
        SC_PCS_CH_INT_1[14]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[14]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_FARLP_PWR_REDUCTION is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_FARLP_PWR_REDUCTION);
    }

//initial config body529 end


//initial config body530 begin
    if(CP_LANE1_PCS_COMMA_REG0 >= 0 && CP_LANE1_PCS_COMMA_REG0 <= 1023)
    {
        SC_PCS_CH_INT_1[25:16]  :=  CP_LANE1_PCS_COMMA_REG0;
    }
    else
    {
        SC_PCS_CH_INT_1[25:16]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_COMMA_REG0 is set to %d. Legal values is 0 to 1023",CP_LANE1_PCS_COMMA_REG0);
    }

//initial config body530 end


//initial config body531 begin
    if(CP_LANE1_PCS_COMMA_MASK >= 0 && CP_LANE1_PCS_COMMA_MASK <= 1023)
    {
        SC_PCS_CH_INT_1[35:26]  :=  CP_LANE1_PCS_COMMA_MASK;
    }
    else
    {
        SC_PCS_CH_INT_1[35:26]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_COMMA_MASK is set to %d. Legal values is 0 to 1023",CP_LANE1_PCS_COMMA_MASK);
    }

//initial config body531 end


//initial config body532 begin
    if(CP_LANE1_PCS_CEB_MODE == "10GB")
    {
        SC_PCS_CH_INT_1[37:36]  :=  2'b00;
    }
    else if (CP_LANE1_PCS_CEB_MODE == "RAPIDIO")
    {
        SC_PCS_CH_INT_1[37:36]  :=  2'b01;
    }
    else if (CP_LANE1_PCS_CEB_MODE == "OUTSIDE")
    {
        SC_PCS_CH_INT_1[37:36]  :=  2'b10;
    }
    else
    {
        SC_PCS_CH_INT_1[37:36]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PCS_CEB_MODE is set to %s. Legal values is 10GB,RAPIDIO,OUTSIDE",CP_LANE1_PCS_CEB_MODE);
    }

//initial config body532 end


//initial config body533 begin
    if(CP_LANE1_PCS_CTC_MODE == "1SKIP")
    {
        SC_PCS_CH_INT_1[39:38]  :=  2'b00;
    }
    else if (CP_LANE1_PCS_CTC_MODE == "2SKIP")
    {
        SC_PCS_CH_INT_1[39:38]  :=  2'b01;
    }
    else if (CP_LANE1_PCS_CTC_MODE == "PCIE_2BYTE")
    {
        SC_PCS_CH_INT_1[39:38]  :=  2'b10;
    }
    else if (CP_LANE1_PCS_CTC_MODE == "4SKIP")
    {
        SC_PCS_CH_INT_1[39:38]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_1[39:38]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PCS_CTC_MODE is set to %s. Legal values is 1SKIP,2SKIP,PCIE_2BYTE,4SKIP",CP_LANE1_PCS_CTC_MODE);
    }

//initial config body533 end


//initial config body534 begin
    if(CP_LANE1_PCS_A_REG >= 0 && CP_LANE1_PCS_A_REG <= 255)
    {
        SC_PCS_CH_INT_1[47:40]  :=  CP_LANE1_PCS_A_REG;
    }
    else
    {
        SC_PCS_CH_INT_1[47:40]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_A_REG is set to %d. Legal values is 0 to 255",CP_LANE1_PCS_A_REG);
    }

//initial config body534 end


//initial config body535 begin
    if(CP_LANE1_PCS_GE_AUTO_EN == "FALSE")
    {
        SC_PCS_CH_INT_1[49]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_GE_AUTO_EN == "TRUE")
    {
        SC_PCS_CH_INT_1[49]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[49]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_GE_AUTO_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_GE_AUTO_EN);
    }

//initial config body535 end


//initial config body536 begin
    if(CP_LANE1_PCS_SKIP_REG0 >= 0 && CP_LANE1_PCS_SKIP_REG0 <= 511)
    {
        SC_PCS_CH_INT_1[58:50]  :=  CP_LANE1_PCS_SKIP_REG0;
    }
    else
    {
        SC_PCS_CH_INT_1[58:50]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_SKIP_REG0 is set to %d. Legal values is 0 to 511",CP_LANE1_PCS_SKIP_REG0);
    }

//initial config body536 end


//initial config body537 begin
    if(CP_LANE1_PCS_SKIP_REG1 >= 0 && CP_LANE1_PCS_SKIP_REG1 <= 511)
    {
        SC_PCS_CH_INT_1[68:60]  :=  CP_LANE1_PCS_SKIP_REG1;
    }
    else
    {
        SC_PCS_CH_INT_1[68:60]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_SKIP_REG1 is set to %d. Legal values is 0 to 511",CP_LANE1_PCS_SKIP_REG1);
    }

//initial config body537 end


//initial config body538 begin
    if(CP_LANE1_PCS_SKIP_REG2 >= 0 && CP_LANE1_PCS_SKIP_REG2 <= 511)
    {
        SC_PCS_CH_INT_1[78:70]  :=  CP_LANE1_PCS_SKIP_REG2;
    }
    else
    {
        SC_PCS_CH_INT_1[78:70]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_SKIP_REG2 is set to %d. Legal values is 0 to 511",CP_LANE1_PCS_SKIP_REG2);
    }

//initial config body538 end


//initial config body539 begin
    if(CP_LANE1_PCS_SKIP_REG3 >= 0 && CP_LANE1_PCS_SKIP_REG3 <= 511)
    {
        SC_PCS_CH_INT_1[88:80]  :=  CP_LANE1_PCS_SKIP_REG3;
    }
    else
    {
        SC_PCS_CH_INT_1[88:80]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_SKIP_REG3 is set to %d. Legal values is 0 to 511",CP_LANE1_PCS_SKIP_REG3);
    }

//initial config body539 end


//initial config body540 begin
    if(CP_LANE1_PCS_DEC_DUAL == "FALSE")
    {
        SC_PCS_CH_INT_1[90]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_DEC_DUAL == "TRUE")
    {
        SC_PCS_CH_INT_1[90]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[90]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_DEC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_DEC_DUAL);
    }

//initial config body540 end


//initial config body541 begin
    if(CP_LANE1_PCS_SPLIT == "FALSE")
    {
        SC_PCS_CH_INT_1[91]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_SPLIT == "TRUE")
    {
        SC_PCS_CH_INT_1[91]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[91]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_SPLIT);
    }

//initial config body541 end


//initial config body542 begin
    if(CP_LANE1_PCS_FIFOFLAG_CTC == "FALSE")
    {
        SC_PCS_CH_INT_1[92]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_FIFOFLAG_CTC == "TRUE")
    {
        SC_PCS_CH_INT_1[92]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[92]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_FIFOFLAG_CTC is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_FIFOFLAG_CTC);
    }

//initial config body542 end


//initial config body543 begin
    if(CP_LANE1_PCS_COMMA_DET_MODE == "COMMA_PATTERN")
    {
        SC_PCS_CH_INT_1[93]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_COMMA_DET_MODE == "RX_CLK_SLIP")
    {
        SC_PCS_CH_INT_1[93]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[93]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_COMMA_DET_MODE is set to %s. Legal values is COMMA_PATTERN,RX_CLK_SLIP",CP_LANE1_PCS_COMMA_DET_MODE);
    }

//initial config body543 end


//initial config body544 begin
    if(CP_LANE1_PCS_ERRDETECT_SILENCE == "FALSE")
    {
        SC_PCS_CH_INT_1[94]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_ERRDETECT_SILENCE == "TRUE")
    {
        SC_PCS_CH_INT_1[94]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[94]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_ERRDETECT_SILENCE is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_ERRDETECT_SILENCE);
    }

//initial config body544 end


//initial config body545 begin
    if(CP_LANE1_PCS_PMA_RCLK_POLINV == "PMA_RCLK")
    {
        SC_PCS_CH_INT_1[96]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_PMA_RCLK_POLINV == "REVERSE_OF_PMA_RCLK")
    {
        SC_PCS_CH_INT_1[96]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[96]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_PMA_RCLK_POLINV is set to %s. Legal values is PMA_RCLK,REVERSE_OF_PMA_RCLK",CP_LANE1_PCS_PMA_RCLK_POLINV);
    }

//initial config body545 end


//initial config body546 begin
    if(CP_LANE1_PCS_PCS_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_1[98:97]  :=  2'b00;
    }
    else if (CP_LANE1_PCS_PCS_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_1[98:97]  :=  2'b01;
    }
    else if (CP_LANE1_PCS_PCS_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH_INT_1[98:97]  :=  2'b10;
    }
    else
    {
        SC_PCS_CH_INT_1[98:97]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PCS_PCS_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,RCLK",CP_LANE1_PCS_PCS_RCLK_SEL);
    }

//initial config body546 end


//initial config body547 begin
    if(CP_LANE1_PCS_CB_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_1[100:99]  :=  2'b00;
    }
    else if (CP_LANE1_PCS_CB_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_1[100:99]  :=  2'b01;
    }
    else if (CP_LANE1_PCS_CB_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH_INT_1[100:99]  :=  2'b10;
    }
    else
    {
        SC_PCS_CH_INT_1[100:99]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PCS_CB_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK",CP_LANE1_PCS_CB_RCLK_SEL);
    }

//initial config body547 end


//initial config body548 begin
    if(CP_LANE1_PCS_AFTER_CTC_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_1[102:101]  :=  2'b00;
    }
    else if (CP_LANE1_PCS_AFTER_CTC_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_1[102:101]  :=  2'b01;
    }
    else if (CP_LANE1_PCS_AFTER_CTC_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH_INT_1[102:101]  :=  2'b10;
    }
    else if (CP_LANE1_PCS_AFTER_CTC_RCLK_SEL == "RCLK2")
    {
        SC_PCS_CH_INT_1[102:101]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_1[102:101]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PCS_AFTER_CTC_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK2",CP_LANE1_PCS_AFTER_CTC_RCLK_SEL);
    }

//initial config body548 end


//initial config body549 begin
    if(CP_LANE1_PCS_RCLK_POLINV == "RCLK")
    {
        SC_PCS_CH_INT_1[103]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_RCLK_POLINV == "REVERSE_OF_RCLK")
    {
        SC_PCS_CH_INT_1[103]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[103]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_RCLK_POLINV is set to %s. Legal values is RCLK,REVERSE_OF_RCLK",CP_LANE1_PCS_RCLK_POLINV);
    }

//initial config body549 end


//initial config body550 begin
    if(CP_LANE1_PCS_BRIDGE_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_1[105:104]  :=  2'b00;
    }
    else if (CP_LANE1_PCS_BRIDGE_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_1[105:104]  :=  2'b01;
    }
    else if (CP_LANE1_PCS_BRIDGE_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH_INT_1[105:104]  :=  2'b10;
    }
    else if (CP_LANE1_PCS_BRIDGE_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH_INT_1[105:104]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_1[105:104]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PCS_BRIDGE_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK",CP_LANE1_PCS_BRIDGE_RCLK_SEL);
    }

//initial config body550 end


//initial config body551 begin
    if(CP_LANE1_PCS_PCS_RCLK_EN == "FALSE")
    {
        SC_PCS_CH_INT_1[106]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_PCS_RCLK_EN == "TRUE")
    {
        SC_PCS_CH_INT_1[106]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[106]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_PCS_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_PCS_RCLK_EN);
    }

//initial config body551 end


//initial config body552 begin
    if(CP_LANE1_PCS_CB_RCLK_EN == "FALSE")
    {
        SC_PCS_CH_INT_1[107]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_CB_RCLK_EN == "TRUE")
    {
        SC_PCS_CH_INT_1[107]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[107]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_CB_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_CB_RCLK_EN);
    }

//initial config body552 end


//initial config body553 begin
    if(CP_LANE1_PCS_AFTER_CTC_RCLK_EN == "FALSE")
    {
        SC_PCS_CH_INT_1[108]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_AFTER_CTC_RCLK_EN == "TRUE")
    {
        SC_PCS_CH_INT_1[108]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[108]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_AFTER_CTC_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_AFTER_CTC_RCLK_EN);
    }

//initial config body553 end


//initial config body554 begin
    if(CP_LANE1_PCS_AFTER_CTC_RCLK_EN_GB == "FALSE")
    {
        SC_PCS_CH_INT_1[109]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_AFTER_CTC_RCLK_EN_GB == "TRUE")
    {
        SC_PCS_CH_INT_1[109]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[109]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_AFTER_CTC_RCLK_EN_GB is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_AFTER_CTC_RCLK_EN_GB);
    }

//initial config body554 end


//initial config body555 begin
    if(CP_LANE1_PCS_PCS_RX_RSTN == "FALSE")
    {
        SC_PCS_CH_INT_1[112]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_PCS_RX_RSTN == "TRUE")
    {
        SC_PCS_CH_INT_1[112]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[112]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_PCS_RX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_PCS_RX_RSTN);
    }

//initial config body555 end


//initial config body556 begin
    if(CP_LANE1_PCS_PCIE_SLAVE == "MASTER")
    {
        SC_PCS_CH_INT_1[114]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_PCIE_SLAVE == "SLAVE")
    {
        SC_PCS_CH_INT_1[114]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[114]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_PCIE_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_LANE1_PCS_PCIE_SLAVE);
    }

//initial config body556 end


//initial config body557 begin
    if(CP_LANE1_PCS_RX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH_INT_1[116:115]  :=  2'b00;
    }
    else if (CP_LANE1_PCS_RX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH_INT_1[116:115]  :=  2'b01;
    }
    else if (CP_LANE1_PCS_RX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH_INT_1[116:115]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_1[116:115]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PCS_RX_64B66B_67B is set to %s. Legal values is NORMAL,64B_66B,64B_67B",CP_LANE1_PCS_RX_64B66B_67B);
    }

//initial config body557 end


//initial config body558 begin
    if(CP_LANE1_PCS_RX_BRIDGE_CLK_POLINV == "RX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_1[117]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_RX_BRIDGE_CLK_POLINV == "REVERSE_OF_RX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_1[117]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[117]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_RX_BRIDGE_CLK_POLINV is set to %s. Legal values is RX_BRIDGE_CLK,REVERSE_OF_RX_BRIDGE_CLK",CP_LANE1_PCS_RX_BRIDGE_CLK_POLINV);
    }

//initial config body558 end


//initial config body559 begin
    if(CP_LANE1_PCS_PCS_CB_RSTN == "FALSE")
    {
        SC_PCS_CH_INT_1[120]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_PCS_CB_RSTN == "TRUE")
    {
        SC_PCS_CH_INT_1[120]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[120]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_PCS_CB_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_PCS_CB_RSTN);
    }

//initial config body559 end


//initial config body560 begin
    if(CP_LANE1_PCS_TX_BRIDGE_GEAR_SEL == "FALSE")
    {
        SC_PCS_CH_INT_1[128]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_BRIDGE_GEAR_SEL == "TRUE")
    {
        SC_PCS_CH_INT_1[128]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[128]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_BRIDGE_GEAR_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_TX_BRIDGE_GEAR_SEL);
    }

//initial config body560 end


//initial config body561 begin
    if(CP_LANE1_PCS_TX_BYPASS_BRIDGE_UINT == "FALSE")
    {
        SC_PCS_CH_INT_1[129]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_BYPASS_BRIDGE_UINT == "TRUE")
    {
        SC_PCS_CH_INT_1[129]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[129]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_BYPASS_BRIDGE_UINT is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_TX_BYPASS_BRIDGE_UINT);
    }

//initial config body561 end


//initial config body562 begin
    if(CP_LANE1_PCS_TX_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH_INT_1[130]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH_INT_1[130]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[130]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_TX_BYPASS_BRIDGE_FIFO);
    }

//initial config body562 end


//initial config body563 begin
    if(CP_LANE1_PCS_TX_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH_INT_1[131]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH_INT_1[131]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[131]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_TX_BYPASS_GEAR);
    }

//initial config body563 end


//initial config body564 begin
    if(CP_LANE1_PCS_TX_BYPASS_ENC == "FALSE")
    {
        SC_PCS_CH_INT_1[132]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_BYPASS_ENC == "TRUE")
    {
        SC_PCS_CH_INT_1[132]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[132]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_BYPASS_ENC is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_TX_BYPASS_ENC);
    }

//initial config body564 end


//initial config body565 begin
    if(CP_LANE1_PCS_TX_BYPASS_BIT_SLIP == "FALSE")
    {
        SC_PCS_CH_INT_1[133]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_BYPASS_BIT_SLIP == "TRUE")
    {
        SC_PCS_CH_INT_1[133]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[133]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_BYPASS_BIT_SLIP is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_TX_BYPASS_BIT_SLIP);
    }

//initial config body565 end


//initial config body566 begin
    if(CP_LANE1_PCS_TX_GEAR_SPLIT == "FALSE")
    {
        SC_PCS_CH_INT_1[136]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_GEAR_SPLIT == "TRUE")
    {
        SC_PCS_CH_INT_1[136]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[136]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_GEAR_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_TX_GEAR_SPLIT);
    }

//initial config body566 end


//initial config body567 begin
    if(CP_LANE1_PCS_TX_DRIVE_REG_MODE == "NO_CHANGE")
    {
        SC_PCS_CH_INT_1[138:137]  :=  2'b00;
    }
    else if (CP_LANE1_PCS_TX_DRIVE_REG_MODE == "EN_POLARIY_REV")
    {
        SC_PCS_CH_INT_1[138:137]  :=  2'b01;
    }
    else if (CP_LANE1_PCS_TX_DRIVE_REG_MODE == "EN_BIT_REV")
    {
        SC_PCS_CH_INT_1[138:137]  :=  2'b10;
    }
    else if (CP_LANE1_PCS_TX_DRIVE_REG_MODE == "EN_BOTH")
    {
        SC_PCS_CH_INT_1[138:137]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_1[138:137]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PCS_TX_DRIVE_REG_MODE is set to %s. Legal values is NO_CHANGE,EN_POLARIY_REV,EN_BIT_REV,EN_BOTH",CP_LANE1_PCS_TX_DRIVE_REG_MODE);
    }

//initial config body567 end


//initial config body568 begin
    if(CP_LANE1_PCS_TX_BIT_SLIP_CYCLES >= 0 && CP_LANE1_PCS_TX_BIT_SLIP_CYCLES <= 31)
    {
        SC_PCS_CH_INT_1[143:139]  :=  CP_LANE1_PCS_TX_BIT_SLIP_CYCLES;
    }
    else
    {
        SC_PCS_CH_INT_1[143:139]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_TX_BIT_SLIP_CYCLES is set to %d. Legal values is 0 to 31",CP_LANE1_PCS_TX_BIT_SLIP_CYCLES);
    }

//initial config body568 end


//initial config body569 begin
    if(CP_LANE1_PCS_INT_TX_MASK_0 == "FALSE")
    {
        SC_PCS_CH_INT_1[144]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_TX_MASK_0 == "TRUE")
    {
        SC_PCS_CH_INT_1[144]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[144]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_TX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_TX_MASK_0);
    }

//initial config body569 end


//initial config body570 begin
    if(CP_LANE1_PCS_INT_TX_MASK_1 == "FALSE")
    {
        SC_PCS_CH_INT_1[145]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_TX_MASK_1 == "TRUE")
    {
        SC_PCS_CH_INT_1[145]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[145]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_TX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_TX_MASK_1);
    }

//initial config body570 end


//initial config body571 begin
    if(CP_LANE1_PCS_INT_TX_MASK_2 == "FALSE")
    {
        SC_PCS_CH_INT_1[146]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_TX_MASK_2 == "TRUE")
    {
        SC_PCS_CH_INT_1[146]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[146]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_TX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_TX_MASK_2);
    }

//initial config body571 end


//initial config body572 begin
    if(CP_LANE1_PCS_INT_TX_CLR_0 == "FALSE")
    {
        SC_PCS_CH_INT_1[152]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_TX_CLR_0 == "TRUE")
    {
        SC_PCS_CH_INT_1[152]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[152]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_TX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_TX_CLR_0);
    }

//initial config body572 end


//initial config body573 begin
    if(CP_LANE1_PCS_INT_TX_CLR_1 == "FALSE")
    {
        SC_PCS_CH_INT_1[153]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_TX_CLR_1 == "TRUE")
    {
        SC_PCS_CH_INT_1[153]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[153]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_TX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_TX_CLR_1);
    }

//initial config body573 end


//initial config body574 begin
    if(CP_LANE1_PCS_INT_TX_CLR_2 == "FALSE")
    {
        SC_PCS_CH_INT_1[154]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_TX_CLR_2 == "TRUE")
    {
        SC_PCS_CH_INT_1[154]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[154]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_TX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_TX_CLR_2);
    }

//initial config body574 end


//initial config body575 begin
    if(CP_LANE1_PCS_TX_PMA_TCLK_POLINV == "PMA_TCLK")
    {
        SC_PCS_CH_INT_1[160]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_PMA_TCLK_POLINV == "REVERSE_OF_PMA_TCLK")
    {
        SC_PCS_CH_INT_1[160]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[160]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_PMA_TCLK_POLINV is set to %s. Legal values is PMA_TCLK,REVERSE_OF_PMA_TCLK",CP_LANE1_PCS_TX_PMA_TCLK_POLINV);
    }

//initial config body575 end


//initial config body576 begin
    if(CP_LANE1_PCS_TX_PCS_CLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH_INT_1[161]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_PCS_CLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH_INT_1[161]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[161]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_PCS_CLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_TX_PCS_CLK_EN_SEL);
    }

//initial config body576 end


//initial config body577 begin
    if(CP_LANE1_PCS_TX_BRIDGE_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH_INT_1[162]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_BRIDGE_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH_INT_1[162]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[162]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_BRIDGE_TCLK_SEL is set to %s. Legal values is TCLK,TCLK2",CP_LANE1_PCS_TX_BRIDGE_TCLK_SEL);
    }

//initial config body577 end


//initial config body578 begin
    if(CP_LANE1_PCS_TX_TCLK_POLINV == "TCLK")
    {
        SC_PCS_CH_INT_1[163]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_TCLK_POLINV == "REVERSE_OF_TCLK")
    {
        SC_PCS_CH_INT_1[163]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[163]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_TCLK_POLINV is set to %s. Legal values is TCLK,REVERSE_OF_TCLK",CP_LANE1_PCS_TX_TCLK_POLINV);
    }

//initial config body578 end


//initial config body579 begin
    if(CP_LANE1_PCS_PCS_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_1[164]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_PCS_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH_INT_1[164]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[164]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_PCS_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK",CP_LANE1_PCS_PCS_TCLK_SEL);
    }

//initial config body579 end


//initial config body580 begin
    if(CP_LANE1_PCS_TX_PCS_TX_RSTN == "FALSE")
    {
        SC_PCS_CH_INT_1[165]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_PCS_TX_RSTN == "TRUE")
    {
        SC_PCS_CH_INT_1[165]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[165]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_PCS_TX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_TX_PCS_TX_RSTN);
    }

//initial config body580 end


//initial config body581 begin
    if(CP_LANE1_PCS_TX_SLAVE == "MASTER")
    {
        SC_PCS_CH_INT_1[166]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_SLAVE == "SLAVE")
    {
        SC_PCS_CH_INT_1[166]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[166]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_LANE1_PCS_TX_SLAVE);
    }

//initial config body581 end


//initial config body582 begin
    if(CP_LANE1_PCS_TX_GEAR_CLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH_INT_1[167]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_GEAR_CLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH_INT_1[167]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[167]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_GEAR_CLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_TX_GEAR_CLK_EN_SEL);
    }

//initial config body582 end


//initial config body583 begin
    if(CP_LANE1_PCS_DATA_WIDTH_MODE == "X20")
    {
        SC_PCS_CH_INT_1[169:168]  :=  2'b00;
    }
    else if (CP_LANE1_PCS_DATA_WIDTH_MODE == "X16")
    {
        SC_PCS_CH_INT_1[169:168]  :=  2'b10;
    }
    else if (CP_LANE1_PCS_DATA_WIDTH_MODE == "X10")
    {
        SC_PCS_CH_INT_1[169:168]  :=  2'b01;
    }
    else if (CP_LANE1_PCS_DATA_WIDTH_MODE == "X8")
    {
        SC_PCS_CH_INT_1[169:168]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_1[169:168]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PCS_DATA_WIDTH_MODE is set to %s. Legal values is X20,X16,X10,X8",CP_LANE1_PCS_DATA_WIDTH_MODE);
    }

//initial config body583 end


//initial config body584 begin
    if(CP_LANE1_PCS_TX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH_INT_1[171:170]  :=  2'b00;
    }
    else if (CP_LANE1_PCS_TX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH_INT_1[171:170]  :=  2'b01;
    }
    else if (CP_LANE1_PCS_TX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH_INT_1[171:170]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_1[171:170]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PCS_TX_64B66B_67B is set to %s. Legal values is NORMAL,64B_66B,64B_67B",CP_LANE1_PCS_TX_64B66B_67B);
    }

//initial config body584 end


//initial config body585 begin
    if(CP_LANE1_PCS_GEAR_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_1[172]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_GEAR_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH_INT_1[172]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[172]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_GEAR_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK2",CP_LANE1_PCS_GEAR_TCLK_SEL);
    }

//initial config body585 end


//initial config body586 begin
    if(CP_LANE1_PCS_TX_TCLK2FABRIC_SEL == "FALSE")
    {
        SC_PCS_CH_INT_1[176]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_TCLK2FABRIC_SEL == "TRUE")
    {
        SC_PCS_CH_INT_1[176]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[176]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_TCLK2FABRIC_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_TX_TCLK2FABRIC_SEL);
    }

//initial config body586 end


//initial config body587 begin
    if(CP_LANE1_PCS_TX_OUTZZ == "FALSE")
    {
        SC_PCS_CH_INT_1[177]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_OUTZZ == "TRUE")
    {
        SC_PCS_CH_INT_1[177]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[177]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_OUTZZ is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_TX_OUTZZ);
    }

//initial config body587 end


//initial config body588 begin
    if(CP_LANE1_PCS_ENC_DUAL == "FALSE")
    {
        SC_PCS_CH_INT_1[178]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_ENC_DUAL == "TRUE")
    {
        SC_PCS_CH_INT_1[178]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[178]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_ENC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_ENC_DUAL);
    }

//initial config body588 end


//initial config body589 begin
    if(CP_LANE1_PCS_TX_BITSLIP_DATA_MODE == "X10")
    {
        SC_PCS_CH_INT_1[179]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_BITSLIP_DATA_MODE == "X20")
    {
        SC_PCS_CH_INT_1[179]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[179]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_BITSLIP_DATA_MODE is set to %s. Legal values is X10,X20",CP_LANE1_PCS_TX_BITSLIP_DATA_MODE);
    }

//initial config body589 end


//initial config body590 begin
    if(CP_LANE1_PCS_TX_BRIDGE_CLK_POLINV == "TX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_1[180]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_BRIDGE_CLK_POLINV == "REVERSE_OF_TX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_1[180]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[180]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_BRIDGE_CLK_POLINV is set to %s. Legal values is TX_BRIDGE_CLK,REVERSE_OF_TX_BRIDGE_CLK",CP_LANE1_PCS_TX_BRIDGE_CLK_POLINV);
    }

//initial config body590 end


//initial config body591 begin
    if(CP_LANE1_PCS_COMMA_REG1 >= 0 && CP_LANE1_PCS_COMMA_REG1 <= 1023)
    {
        SC_PCS_CH_INT_1[193:184]  :=  CP_LANE1_PCS_COMMA_REG1;
    }
    else
    {
        SC_PCS_CH_INT_1[193:184]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_COMMA_REG1 is set to %d. Legal values is 0 to 1023",CP_LANE1_PCS_COMMA_REG1);
    }

//initial config body591 end


//initial config body592 begin
    if(CP_LANE1_PCS_RAPID_IMAX >= 0 && CP_LANE1_PCS_RAPID_IMAX <= 7)
    {
        SC_PCS_CH_INT_1[202:200]  :=  CP_LANE1_PCS_RAPID_IMAX;
    }
    else
    {
        SC_PCS_CH_INT_1[202:200]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_RAPID_IMAX is set to %d. Legal values is 0 to 7",CP_LANE1_PCS_RAPID_IMAX);
    }

//initial config body592 end


//initial config body593 begin
    if(CP_LANE1_PCS_RAPID_VMIN_1 >= 0 && CP_LANE1_PCS_RAPID_VMIN_1 <= 255)
    {
        SC_PCS_CH_INT_1[215:208]  :=  CP_LANE1_PCS_RAPID_VMIN_1;
    }
    else
    {
        SC_PCS_CH_INT_1[215:208]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_RAPID_VMIN_1 is set to %d. Legal values is 0 to 255",CP_LANE1_PCS_RAPID_VMIN_1);
    }

//initial config body593 end


//initial config body594 begin
    if(CP_LANE1_PCS_RAPID_VMIN_2 >= 0 && CP_LANE1_PCS_RAPID_VMIN_2 <= 255)
    {
        SC_PCS_CH_INT_1[223:216]  :=  CP_LANE1_PCS_RAPID_VMIN_2;
    }
    else
    {
        SC_PCS_CH_INT_1[223:216]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_RAPID_VMIN_2 is set to %d. Legal values is 0 to 255",CP_LANE1_PCS_RAPID_VMIN_2);
    }

//initial config body594 end


//initial config body595 begin
    if(CP_LANE1_PCS_RX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH_INT_1[227:224]  :=  4'd0;
    }
    else if (CP_LANE1_PCS_RX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH_INT_1[227:224]  :=  4'd1;
    }
    else if (CP_LANE1_PCS_RX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH_INT_1[227:224]  :=  4'd2;
    }
    else if (CP_LANE1_PCS_RX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH_INT_1[227:224]  :=  4'd3;
    }
    else if (CP_LANE1_PCS_RX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH_INT_1[227:224]  :=  4'd4;
    }
    else
    {
        SC_PCS_CH_INT_1[227:224]  :=  4'd0;
        error("Setting Error : The CP_LANE1_PCS_RX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31",CP_LANE1_PCS_RX_PRBS_MODE);
    }

//initial config body595 end


//initial config body596 begin
    if(CP_LANE1_PCS_RX_ERRCNT_CLR == "FALSE")
    {
        SC_PCS_CH_INT_1[228]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_RX_ERRCNT_CLR == "TRUE")
    {
        SC_PCS_CH_INT_1[228]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[228]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_RX_ERRCNT_CLR is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_RX_ERRCNT_CLR);
    }

//initial config body596 end


//initial config body597 begin
    if(CP_LANE1_PCS_PRBS_ERR_LPBK == "FALSE")
    {
        SC_PCS_CH_INT_1[229]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_PRBS_ERR_LPBK == "TRUE")
    {
        SC_PCS_CH_INT_1[229]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[229]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_PRBS_ERR_LPBK is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_PRBS_ERR_LPBK);
    }

//initial config body597 end


//initial config body598 begin
    if(CP_LANE1_PCS_TX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH_INT_1[235:232]  :=  4'd0;
    }
    else if (CP_LANE1_PCS_TX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH_INT_1[235:232]  :=  4'd1;
    }
    else if (CP_LANE1_PCS_TX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH_INT_1[235:232]  :=  4'd2;
    }
    else if (CP_LANE1_PCS_TX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH_INT_1[235:232]  :=  4'd3;
    }
    else if (CP_LANE1_PCS_TX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH_INT_1[235:232]  :=  4'd4;
    }
    else if (CP_LANE1_PCS_TX_PRBS_MODE == "LONG_1")
    {
        SC_PCS_CH_INT_1[235:232]  :=  4'd5;
    }
    else if (CP_LANE1_PCS_TX_PRBS_MODE == "LONG_0")
    {
        SC_PCS_CH_INT_1[235:232]  :=  4'd6;
    }
    else if (CP_LANE1_PCS_TX_PRBS_MODE == "20UI")
    {
        SC_PCS_CH_INT_1[235:232]  :=  4'd7;
    }
    else if (CP_LANE1_PCS_TX_PRBS_MODE == "D10_2")
    {
        SC_PCS_CH_INT_1[235:232]  :=  4'd8;
    }
    else if (CP_LANE1_PCS_TX_PRBS_MODE == "PCIE")
    {
        SC_PCS_CH_INT_1[235:232]  :=  4'd9;
    }
    else
    {
        SC_PCS_CH_INT_1[235:232]  :=  4'd0;
        error("Setting Error : The CP_LANE1_PCS_TX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31,LONG_1,LONG_0,20UI,D10_2,PCIE",CP_LANE1_PCS_TX_PRBS_MODE);
    }

//initial config body598 end


//initial config body599 begin
    if(CP_LANE1_PCS_TX_INSERT_ER == "FALSE")
    {
        SC_PCS_CH_INT_1[236]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TX_INSERT_ER == "TRUE")
    {
        SC_PCS_CH_INT_1[236]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[236]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TX_INSERT_ER is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_TX_INSERT_ER);
    }

//initial config body599 end


//initial config body600 begin
    if(CP_LANE1_PCS_ENABLE_PRBS_GEN == "FALSE")
    {
        SC_PCS_CH_INT_1[237]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_ENABLE_PRBS_GEN == "TRUE")
    {
        SC_PCS_CH_INT_1[237]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[237]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_ENABLE_PRBS_GEN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_ENABLE_PRBS_GEN);
    }

//initial config body600 end


//initial config body601 begin
    if(CP_LANE1_PCS_DEFAULT_RADDR >= 0 && CP_LANE1_PCS_DEFAULT_RADDR <= 15)
    {
        SC_PCS_CH_INT_1[251:248]  :=  CP_LANE1_PCS_DEFAULT_RADDR;
    }
    else
    {
        SC_PCS_CH_INT_1[251:248]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_DEFAULT_RADDR is set to %d. Legal values is 0 to 15",CP_LANE1_PCS_DEFAULT_RADDR);
    }

//initial config body601 end


//initial config body602 begin
    if(CP_LANE1_PCS_MASTER_CHECK_OFFSET >= 0 && CP_LANE1_PCS_MASTER_CHECK_OFFSET <= 15)
    {
        SC_PCS_CH_INT_1[255:252]  :=  CP_LANE1_PCS_MASTER_CHECK_OFFSET;
    }
    else
    {
        SC_PCS_CH_INT_1[255:252]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_MASTER_CHECK_OFFSET is set to %d. Legal values is 0 to 15",CP_LANE1_PCS_MASTER_CHECK_OFFSET);
    }

//initial config body602 end


//initial config body603 begin
    if(CP_LANE1_PCS_DELAY_SET >= 0 && CP_LANE1_PCS_DELAY_SET <= 15)
    {
        SC_PCS_CH_INT_1[259:256]  :=  CP_LANE1_PCS_DELAY_SET;
    }
    else
    {
        SC_PCS_CH_INT_1[259:256]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_DELAY_SET is set to %d. Legal values is 0 to 15",CP_LANE1_PCS_DELAY_SET);
    }

//initial config body603 end


//initial config body604 begin
    if(CP_LANE1_PCS_SEACH_OFFSET == "20BIT")
    {
        SC_PCS_CH_INT_1[262:260]  :=  3'd0;
    }
    else if (CP_LANE1_PCS_SEACH_OFFSET == "30BIT")
    {
        SC_PCS_CH_INT_1[262:260]  :=  3'd1;
    }
    else if (CP_LANE1_PCS_SEACH_OFFSET == "40BIT")
    {
        SC_PCS_CH_INT_1[262:260]  :=  3'd2;
    }
    else if (CP_LANE1_PCS_SEACH_OFFSET == "50BIT")
    {
        SC_PCS_CH_INT_1[262:260]  :=  3'd3;
    }
    else if (CP_LANE1_PCS_SEACH_OFFSET == "60BIT")
    {
        SC_PCS_CH_INT_1[262:260]  :=  3'd4;
    }
    else if (CP_LANE1_PCS_SEACH_OFFSET == "70BIT")
    {
        SC_PCS_CH_INT_1[262:260]  :=  3'd5;
    }
    else if (CP_LANE1_PCS_SEACH_OFFSET == "80BIT")
    {
        SC_PCS_CH_INT_1[262:260]  :=  3'd6;
    }
    else
    {
        SC_PCS_CH_INT_1[262:260]  :=  3'd0;
        error("Setting Error : The CP_LANE1_PCS_SEACH_OFFSET is set to %s. Legal values is 20BIT,30BIT,40BIT,50BIT,60BIT,70BIT,80BIT",CP_LANE1_PCS_SEACH_OFFSET);
    }

//initial config body604 end


//initial config body605 begin
    if(CP_LANE1_PCS_CEB_RAPIDLS_MMAX >= 0 && CP_LANE1_PCS_CEB_RAPIDLS_MMAX <= 7)
    {
        SC_PCS_CH_INT_1[266:264]  :=  CP_LANE1_PCS_CEB_RAPIDLS_MMAX;
    }
    else
    {
        SC_PCS_CH_INT_1[266:264]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_CEB_RAPIDLS_MMAX is set to %d. Legal values is 0 to 7",CP_LANE1_PCS_CEB_RAPIDLS_MMAX);
    }

//initial config body605 end


//initial config body606 begin
    if(CP_LANE1_PCS_CTC_AFULL >= 0 && CP_LANE1_PCS_CTC_AFULL <= 31)
    {
        SC_PCS_CH_INT_1[276:272]  :=  CP_LANE1_PCS_CTC_AFULL;
    }
    else
    {
        SC_PCS_CH_INT_1[276:272]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_CTC_AFULL is set to %d. Legal values is 0 to 31",CP_LANE1_PCS_CTC_AFULL);
    }

//initial config body606 end


//initial config body607 begin
    if(CP_LANE1_PCS_CTC_AEMPTY >= 0 && CP_LANE1_PCS_CTC_AEMPTY <= 31)
    {
        SC_PCS_CH_INT_1[284:280]  :=  CP_LANE1_PCS_CTC_AEMPTY;
    }
    else
    {
        SC_PCS_CH_INT_1[284:280]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_CTC_AEMPTY is set to %d. Legal values is 0 to 31",CP_LANE1_PCS_CTC_AEMPTY);
    }

//initial config body607 end


//initial config body608 begin
    if(CP_LANE1_PCS_CTC_CONTI_SKP_SET >= 0 && CP_LANE1_PCS_CTC_CONTI_SKP_SET <= 1)
    {
        SC_PCS_CH_INT_1[285]  :=  CP_LANE1_PCS_CTC_CONTI_SKP_SET;
    }
    else
    {
        SC_PCS_CH_INT_1[285]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_CTC_CONTI_SKP_SET is set to %d. Legal values is 0 to 1",CP_LANE1_PCS_CTC_CONTI_SKP_SET);
    }

//initial config body608 end


//initial config body609 begin
    if(CP_LANE1_PCS_FAR_LOOP == "FALSE")
    {
        SC_PCS_CH_INT_1[288]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_FAR_LOOP == "TRUE")
    {
        SC_PCS_CH_INT_1[288]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[288]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_FAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_FAR_LOOP);
    }

//initial config body609 end


//initial config body610 begin
    if(CP_LANE1_PCS_NEAR_LOOP == "FALSE")
    {
        SC_PCS_CH_INT_1[289]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_NEAR_LOOP == "TRUE")
    {
        SC_PCS_CH_INT_1[289]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[289]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_NEAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_NEAR_LOOP);
    }

//initial config body610 end


//initial config body611 begin
    if(CP_LANE1_PCS_PMA_TX2RX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH_INT_1[290]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_PMA_TX2RX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH_INT_1[290]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[290]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_PMA_TX2RX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_PMA_TX2RX_PLOOP_EN);
    }

//initial config body611 end


//initial config body612 begin
    if(CP_LANE1_PCS_PMA_TX2RX_SLOOP_EN == "FALSE")
    {
        SC_PCS_CH_INT_1[291]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_PMA_TX2RX_SLOOP_EN == "TRUE")
    {
        SC_PCS_CH_INT_1[291]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[291]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_PMA_TX2RX_SLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_PMA_TX2RX_SLOOP_EN);
    }

//initial config body612 end


//initial config body613 begin
    if(CP_LANE1_PCS_PMA_RX2TX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH_INT_1[292]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_PMA_RX2TX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH_INT_1[292]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[292]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_PMA_RX2TX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_PMA_RX2TX_PLOOP_EN);
    }

//initial config body613 end


//initial config body614 begin
    if(CP_LANE1_PCS_INT_RX_MASK_0 == "FALSE")
    {
        SC_PCS_CH_INT_1[296]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_MASK_0 == "TRUE")
    {
        SC_PCS_CH_INT_1[296]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[296]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_MASK_0);
    }

//initial config body614 end


//initial config body615 begin
    if(CP_LANE1_PCS_INT_RX_MASK_1 == "FALSE")
    {
        SC_PCS_CH_INT_1[297]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_MASK_1 == "TRUE")
    {
        SC_PCS_CH_INT_1[297]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[297]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_MASK_1);
    }

//initial config body615 end


//initial config body616 begin
    if(CP_LANE1_PCS_INT_RX_MASK_2 == "FALSE")
    {
        SC_PCS_CH_INT_1[298]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_MASK_2 == "TRUE")
    {
        SC_PCS_CH_INT_1[298]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[298]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_MASK_2);
    }

//initial config body616 end


//initial config body617 begin
    if(CP_LANE1_PCS_INT_RX_MASK_3 == "FALSE")
    {
        SC_PCS_CH_INT_1[299]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_MASK_3 == "TRUE")
    {
        SC_PCS_CH_INT_1[299]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[299]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_MASK_3 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_MASK_3);
    }

//initial config body617 end


//initial config body618 begin
    if(CP_LANE1_PCS_INT_RX_MASK_4 == "FALSE")
    {
        SC_PCS_CH_INT_1[300]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_MASK_4 == "TRUE")
    {
        SC_PCS_CH_INT_1[300]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[300]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_MASK_4 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_MASK_4);
    }

//initial config body618 end


//initial config body619 begin
    if(CP_LANE1_PCS_INT_RX_MASK_5 == "FALSE")
    {
        SC_PCS_CH_INT_1[301]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_MASK_5 == "TRUE")
    {
        SC_PCS_CH_INT_1[301]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[301]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_MASK_5 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_MASK_5);
    }

//initial config body619 end


//initial config body620 begin
    if(CP_LANE1_PCS_INT_RX_MASK_6 == "FALSE")
    {
        SC_PCS_CH_INT_1[302]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_MASK_6 == "TRUE")
    {
        SC_PCS_CH_INT_1[302]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[302]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_MASK_6 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_MASK_6);
    }

//initial config body620 end


//initial config body621 begin
    if(CP_LANE1_PCS_INT_RX_MASK_7 == "FALSE")
    {
        SC_PCS_CH_INT_1[303]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_MASK_7 == "TRUE")
    {
        SC_PCS_CH_INT_1[303]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[303]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_MASK_7 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_MASK_7);
    }

//initial config body621 end


//initial config body622 begin
    if(CP_LANE1_PCS_INT_RX_CLR_0 == "FALSE")
    {
        SC_PCS_CH_INT_1[304]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_CLR_0 == "TRUE")
    {
        SC_PCS_CH_INT_1[304]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[304]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_CLR_0);
    }

//initial config body622 end


//initial config body623 begin
    if(CP_LANE1_PCS_INT_RX_CLR_1 == "FALSE")
    {
        SC_PCS_CH_INT_1[305]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_CLR_1 == "TRUE")
    {
        SC_PCS_CH_INT_1[305]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[305]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_CLR_1);
    }

//initial config body623 end


//initial config body624 begin
    if(CP_LANE1_PCS_INT_RX_CLR_2 == "FALSE")
    {
        SC_PCS_CH_INT_1[306]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_CLR_2 == "TRUE")
    {
        SC_PCS_CH_INT_1[306]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[306]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_CLR_2);
    }

//initial config body624 end


//initial config body625 begin
    if(CP_LANE1_PCS_INT_RX_CLR_3 == "FALSE")
    {
        SC_PCS_CH_INT_1[307]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_CLR_3 == "TRUE")
    {
        SC_PCS_CH_INT_1[307]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[307]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_CLR_3 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_CLR_3);
    }

//initial config body625 end


//initial config body626 begin
    if(CP_LANE1_PCS_INT_RX_CLR_4 == "FALSE")
    {
        SC_PCS_CH_INT_1[308]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_CLR_4 == "TRUE")
    {
        SC_PCS_CH_INT_1[308]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[308]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_CLR_4 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_CLR_4);
    }

//initial config body626 end


//initial config body627 begin
    if(CP_LANE1_PCS_INT_RX_CLR_5 == "FALSE")
    {
        SC_PCS_CH_INT_1[309]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_CLR_5 == "TRUE")
    {
        SC_PCS_CH_INT_1[309]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[309]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_CLR_5 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_CLR_5);
    }

//initial config body627 end


//initial config body628 begin
    if(CP_LANE1_PCS_INT_RX_CLR_6 == "FALSE")
    {
        SC_PCS_CH_INT_1[310]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_CLR_6 == "TRUE")
    {
        SC_PCS_CH_INT_1[310]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[310]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_CLR_6 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_CLR_6);
    }

//initial config body628 end


//initial config body629 begin
    if(CP_LANE1_PCS_INT_RX_CLR_7 == "FALSE")
    {
        SC_PCS_CH_INT_1[311]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_INT_RX_CLR_7 == "TRUE")
    {
        SC_PCS_CH_INT_1[311]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[311]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_INT_RX_CLR_7 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_INT_RX_CLR_7);
    }

//initial config body629 end


//initial config body630 begin
    if(CP_LANE1_PCS_CA_RSTN_RX == "FALSE")
    {
        SC_PCS_CH_INT_1[312]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_CA_RSTN_RX == "TRUE")
    {
        SC_PCS_CH_INT_1[312]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[312]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_CA_RSTN_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_CA_RSTN_RX);
    }

//initial config body630 end


//initial config body631 begin
    if(CP_LANE1_PCS_CA_DYN_DLY_EN_RX == "FALSE")
    {
        SC_PCS_CH_INT_1[313]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_CA_DYN_DLY_EN_RX == "TRUE")
    {
        SC_PCS_CH_INT_1[313]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[313]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_CA_DYN_DLY_EN_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_CA_DYN_DLY_EN_RX);
    }

//initial config body631 end


//initial config body632 begin
    if(CP_LANE1_PCS_CA_DYN_DLY_SEL_RX == "FALSE")
    {
        SC_PCS_CH_INT_1[314]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_CA_DYN_DLY_SEL_RX == "TRUE")
    {
        SC_PCS_CH_INT_1[314]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[314]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_CA_DYN_DLY_SEL_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_CA_DYN_DLY_SEL_RX);
    }

//initial config body632 end


//initial config body633 begin
    if(CP_LANE1_PCS_CA_RX >= 0 && CP_LANE1_PCS_CA_RX <= 255)
    {
        SC_PCS_CH_INT_1[322:315]  :=  CP_LANE1_PCS_CA_RX;
    }
    else
    {
        SC_PCS_CH_INT_1[322:315]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_CA_RX is set to %d. Legal values is 0 to 255",CP_LANE1_PCS_CA_RX);
    }

//initial config body633 end


//initial config body634 begin
    if(CP_LANE1_PCS_CA_RSTN_TX == "FALSE")
    {
        SC_PCS_CH_INT_1[323]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_CA_RSTN_TX == "TRUE")
    {
        SC_PCS_CH_INT_1[323]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[323]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_CA_RSTN_TX is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_CA_RSTN_TX);
    }

//initial config body634 end


//initial config body635 begin
    if(CP_LANE1_PCS_CA_DYN_DLY_EN_TX == "FALSE")
    {
        SC_PCS_CH_INT_1[324]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_CA_DYN_DLY_EN_TX == "TRUE")
    {
        SC_PCS_CH_INT_1[324]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[324]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_CA_DYN_DLY_EN_TX is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_CA_DYN_DLY_EN_TX);
    }

//initial config body635 end


//initial config body636 begin
    if(CP_LANE1_PCS_CA_DYN_DLY_SEL_TX == "FALSE")
    {
        SC_PCS_CH_INT_1[325]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_CA_DYN_DLY_SEL_TX == "TRUE")
    {
        SC_PCS_CH_INT_1[325]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[325]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_CA_DYN_DLY_SEL_TX is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PCS_CA_DYN_DLY_SEL_TX);
    }

//initial config body636 end


//initial config body637 begin
    if(CP_LANE1_PCS_CA_TX >= 0 && CP_LANE1_PCS_CA_TX <= 255)
    {
        SC_PCS_CH_INT_1[333:326]  :=  CP_LANE1_PCS_CA_TX;
    }
    else
    {
        SC_PCS_CH_INT_1[333:326]  :=  0;
        error("Setting Error : The CP_LANE1_PCS_CA_TX is set to %d. Legal values is 0 to 255",CP_LANE1_PCS_CA_TX);
    }

//initial config body637 end


//initial config body638 begin
    if(CP_LANE1_PCS_RXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_1[334]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_RXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_1[334]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[334]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_RXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE1_PCS_RXPRBS_PWR_REDUCTION);
    }

//initial config body638 end


//initial config body639 begin
    if(CP_LANE1_PCS_WDALIGN_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_1[335]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_WDALIGN_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_1[335]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[335]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_WDALIGN_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE1_PCS_WDALIGN_PWR_REDUCTION);
    }

//initial config body639 end


//initial config body640 begin
    if(CP_LANE1_PCS_RXDEC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_1[336]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_RXDEC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_1[336]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[336]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_RXDEC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE1_PCS_RXDEC_PWR_REDUCTION);
    }

//initial config body640 end


//initial config body641 begin
    if(CP_LANE1_PCS_RXCB_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_1[337]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_RXCB_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_1[337]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[337]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_RXCB_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE1_PCS_RXCB_PWR_REDUCTION);
    }

//initial config body641 end


//initial config body642 begin
    if(CP_LANE1_PCS_RXCTC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_1[338]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_RXCTC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_1[338]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[338]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_RXCTC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE1_PCS_RXCTC_PWR_REDUCTION);
    }

//initial config body642 end


//initial config body643 begin
    if(CP_LANE1_PCS_RXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_1[339]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_RXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_1[339]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[339]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_RXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE1_PCS_RXGEAR_PWR_REDUCTION);
    }

//initial config body643 end


//initial config body644 begin
    if(CP_LANE1_PCS_RXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_1[340]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_RXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_1[340]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[340]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_RXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE1_PCS_RXBRG_PWR_REDUCTION);
    }

//initial config body644 end


//initial config body645 begin
    if(CP_LANE1_PCS_RXTEST_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_1[341]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_RXTEST_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_1[341]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[341]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_RXTEST_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE1_PCS_RXTEST_PWR_REDUCTION);
    }

//initial config body645 end


//initial config body646 begin
    if(CP_LANE1_PCS_TXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_1[342]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_1[342]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[342]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE1_PCS_TXBRG_PWR_REDUCTION);
    }

//initial config body646 end


//initial config body647 begin
    if(CP_LANE1_PCS_TXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_1[343]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_1[343]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[343]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE1_PCS_TXGEAR_PWR_REDUCTION);
    }

//initial config body647 end


//initial config body648 begin
    if(CP_LANE1_PCS_TXENC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_1[344]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TXENC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_1[344]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[344]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TXENC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE1_PCS_TXENC_PWR_REDUCTION);
    }

//initial config body648 end


//initial config body649 begin
    if(CP_LANE1_PCS_TXBSLP_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_1[345]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TXBSLP_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_1[345]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[345]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TXBSLP_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE1_PCS_TXBSLP_PWR_REDUCTION);
    }

//initial config body649 end


//initial config body650 begin
    if(CP_LANE1_PCS_TXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_1[346]  :=  1'b0;
    }
    else if (CP_LANE1_PCS_TXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_1[346]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_1[346]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PCS_TXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE1_PCS_TXPRBS_PWR_REDUCTION);
    }

//initial config body650 end


//initial config body651 begin
    if(CP_LANE1_PMA_REG_RX_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE1[0]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE1[0]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[0]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_PD is set to %s. Legal values is ON,OFF",CP_LANE1_PMA_REG_RX_PD);
    }

//initial config body651 end


//initial config body652 begin
    if(CP_LANE1_PMA_REG_RX_PD_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[1]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_PD_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[1]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[1]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_PD_EN);
    }

//initial config body652 end


//initial config body653 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_2 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[2]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_RESERVED_2 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[2]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[2]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RESERVED_2);
    }

//initial config body653 end


//initial config body654 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_3 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[3]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_RESERVED_3 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[3]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[3]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_3 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RESERVED_3);
    }

//initial config body654 end


//initial config body655 begin
    if(CP_LANE1_PMA_REG_RX_DATAPATH_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE1[4]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_DATAPATH_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE1[4]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[4]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_DATAPATH_PD is set to %s. Legal values is ON,OFF",CP_LANE1_PMA_REG_RX_DATAPATH_PD);
    }

//initial config body655 end


//initial config body656 begin
    if(CP_LANE1_PMA_REG_RX_DATAPATH_PD_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[5]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_DATAPATH_PD_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[5]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[5]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_DATAPATH_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_DATAPATH_PD_EN);
    }

//initial config body656 end


//initial config body657 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE1[6]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE1[6]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[6]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_PD is set to %s. Legal values is ON,OFF",CP_LANE1_PMA_REG_RX_SIGDET_PD);
    }

//initial config body657 end


//initial config body658 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_PD_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[7]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_PD_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[7]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[7]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SIGDET_PD_EN);
    }

//initial config body658 end


//initial config body659 begin
    if(CP_LANE1_PMA_REG_RX_DCC_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[8]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_RX_DCC_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[8]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[8]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_DCC_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_DCC_RST_N);
    }

//initial config body659 end


//initial config body660 begin
    if(CP_LANE1_PMA_REG_RX_DCC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[9]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_DCC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[9]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[9]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_DCC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_DCC_RST_N_EN);
    }

//initial config body660 end


//initial config body661 begin
    if(CP_LANE1_PMA_REG_RX_CDR_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[10]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_RX_CDR_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[10]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[10]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_CDR_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_CDR_RST_N);
    }

//initial config body661 end


//initial config body662 begin
    if(CP_LANE1_PMA_REG_RX_CDR_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[11]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_CDR_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[11]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[11]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_CDR_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_CDR_RST_N_EN);
    }

//initial config body662 end


//initial config body663 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[12]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[12]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[12]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SIGDET_RST_N);
    }

//initial config body663 end


//initial config body664 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[13]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[13]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[13]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SIGDET_RST_N_EN);
    }

//initial config body664 end


//initial config body665 begin
    if(CP_LANE1_PMA_REG_RXPCLK_SLIP == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[14]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RXPCLK_SLIP == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[14]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[14]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RXPCLK_SLIP is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RXPCLK_SLIP);
    }

//initial config body665 end


//initial config body666 begin
    if(CP_LANE1_PMA_REG_RXPCLK_SLIP_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[15]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RXPCLK_SLIP_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[15]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[15]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RXPCLK_SLIP_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RXPCLK_SLIP_OW);
    }

//initial config body666 end


//initial config body667 begin
    if(CP_LANE1_PMA_REG_RX_PCLKSWITCH_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[16]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_RX_PCLKSWITCH_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[16]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[16]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_PCLKSWITCH_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_PCLKSWITCH_RST_N);
    }

//initial config body667 end


//initial config body668 begin
    if(CP_LANE1_PMA_REG_RX_PCLKSWITCH_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[17]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_PCLKSWITCH_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[17]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[17]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_PCLKSWITCH_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_PCLKSWITCH_RST_N_EN);
    }

//initial config body668 end


//initial config body669 begin
    if(CP_LANE1_PMA_REG_RX_PCLKSWITCH == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[18]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_PCLKSWITCH == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[18]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[18]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_PCLKSWITCH is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_PCLKSWITCH);
    }

//initial config body669 end


//initial config body670 begin
    if(CP_LANE1_PMA_REG_RX_PCLKSWITCH_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[19]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_PCLKSWITCH_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[19]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[19]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_PCLKSWITCH_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_PCLKSWITCH_EN);
    }

//initial config body670 end


//initial config body671 begin
    if(CP_LANE1_PMA_REG_RX_HIGHZ == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[20]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_HIGHZ == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[20]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[20]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_HIGHZ is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_HIGHZ);
    }

//initial config body671 end


//initial config body672 begin
    if(CP_LANE1_PMA_REG_RX_HIGHZ_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[21]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_HIGHZ_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[21]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[21]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_HIGHZ_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_HIGHZ_EN);
    }

//initial config body672 end


//initial config body673 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_CLK_WINDOW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[22]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_CLK_WINDOW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[22]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[22]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_CLK_WINDOW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SIGDET_CLK_WINDOW);
    }

//initial config body673 end


//initial config body674 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_CLK_WINDOW_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[23]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_CLK_WINDOW_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[23]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[23]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_CLK_WINDOW_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SIGDET_CLK_WINDOW_OW);
    }

//initial config body674 end


//initial config body675 begin
    if(CP_LANE1_PMA_REG_RX_PD_BIAS_RX == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[24]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_PD_BIAS_RX == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[24]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[24]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_PD_BIAS_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_PD_BIAS_RX);
    }

//initial config body675 end


//initial config body676 begin
    if(CP_LANE1_PMA_REG_RX_PD_BIAS_RX_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[25]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_PD_BIAS_RX_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[25]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[25]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_PD_BIAS_RX_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_PD_BIAS_RX_OW);
    }

//initial config body676 end


//initial config body677 begin
    if(CP_LANE1_PMA_REG_RX_RESET_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[26]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_RESET_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[26]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[26]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESET_N is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RESET_N);
    }

//initial config body677 end


//initial config body678 begin
    if(CP_LANE1_PMA_REG_RX_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[27]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[27]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[27]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RESET_N_OW);
    }

//initial config body678 end


//initial config body679 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_29_28 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_29_28 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE1[29:28]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_RESERVED_29_28, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[29:28]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_29_28 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_RESERVED_29_28);
    }

//initial config body679 end


//initial config body680 begin
    if(CP_LANE1_PMA_REG_RX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH_INT_RX_LANE1[32:30]   :=  to_unsigned( 0, 3) ^ 3'b011;
    }
    else if (CP_LANE1_PMA_REG_RX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH_INT_RX_LANE1[32:30]   :=  to_unsigned( 1, 3) ^ 3'b011;
    }
    else if (CP_LANE1_PMA_REG_RX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH_INT_RX_LANE1[32:30]   :=  to_unsigned( 2, 3) ^ 3'b011;
    }
    else if (CP_LANE1_PMA_REG_RX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH_INT_RX_LANE1[32:30]   :=  to_unsigned( 3, 3) ^ 3'b011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[32:30]   :=  to_unsigned( 0, 3) ^ 3'b011;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE1_PMA_REG_RX_BUSWIDTH);
    }

//initial config body680 end


//initial config body681 begin
    if(CP_LANE1_PMA_REG_RX_BUSWIDTH_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[33]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_BUSWIDTH_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[33]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[33]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_BUSWIDTH_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_BUSWIDTH_EN);
    }

//initial config body681 end


//initial config body682 begin
    if(CP_LANE1_PMA_REG_RX_RATE == "DIV4")
    {
        SC_PMA_CH_INT_RX_LANE1[35:34]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE1_PMA_REG_RX_RATE == "DIV2")
    {
        SC_PMA_CH_INT_RX_LANE1[35:34]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE1_PMA_REG_RX_RATE == "DIV1")
    {
        SC_PMA_CH_INT_RX_LANE1[35:34]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE1_PMA_REG_RX_RATE == "MUL2")
    {
        SC_PMA_CH_INT_RX_LANE1[35:34]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[35:34]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RATE is set to %s. Legal values is DIV4,DIV2,DIV1,MUL2",CP_LANE1_PMA_REG_RX_RATE);
    }

//initial config body682 end


//initial config body683 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_36 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[36]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_RESERVED_36 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[36]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[36]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_36 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RESERVED_36);
    }

//initial config body683 end


//initial config body684 begin
    if(CP_LANE1_PMA_REG_RX_RATE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[37]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_RATE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[37]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[37]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RATE_EN);
    }

//initial config body684 end


//initial config body685 begin
    if(CP_LANE1_PMA_REG_RX_RES_TRIM >= 0 && CP_LANE1_PMA_REG_RX_RES_TRIM <= 63)
    {
        SC_PMA_CH_INT_RX_LANE1[43:38]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_RES_TRIM, 6) ^ 6'b110111;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[43:38]   :=  to_unsigned( 0, 6) ^ 6'b110111;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RES_TRIM is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_RX_RES_TRIM);
    }

//initial config body685 end


//initial config body686 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_44 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[44]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_RESERVED_44 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[44]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[44]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_44 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RESERVED_44);
    }

//initial config body686 end


//initial config body687 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_45 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[45]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_RESERVED_45 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[45]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[45]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_45 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RESERVED_45);
    }

//initial config body687 end


//initial config body688 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_STATUS_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[46]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_STATUS_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[46]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[46]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_STATUS_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SIGDET_STATUS_EN);
    }

//initial config body688 end


//initial config body689 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_48_47 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_48_47 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE1[48:47]  :=  CP_LANE1_PMA_REG_RX_RESERVED_48_47;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[48:47]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_48_47 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_RESERVED_48_47);
    }

//initial config body689 end


//initial config body690 begin

 if(CP_LANE1_PMA_REG_RX_ICTRL_SIGDET >= 0 && CP_LANE1_PMA_REG_RX_ICTRL_SIGDET <= 15) 
 {
 SC_PMA_CH_INT_RX_LANE1[52:49]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_ICTRL_SIGDET, 4) ^ 4'b0101; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE1[52:49]   :=  to_unsigned( 0, 4) ^ 4'b0101; 
 error("Setting Error : The CP_LANE1_PMA_REG_RX_ICTRL_SIGDET is set to %d. Legal values is 0 to 15",CP_LANE1_PMA_REG_RX_ICTRL_SIGDET); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE1_PMA_REG_CDR_READY_THD >= 0 && CP_LANE1_PMA_REG_CDR_READY_THD <= 4095) 
 {
 SC_PMA_CH_INT_RX_LANE1[64:53]   :=  to_unsigned( CP_LANE1_PMA_REG_CDR_READY_THD, 12) ^ 12'b101010101110; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE1[64:53]   :=  to_unsigned( 0, 12) ^ 12'b101010101110; 
 error("Setting Error : The CP_LANE1_PMA_REG_CDR_READY_THD is set to %d. Legal values is 0 to 4095",CP_LANE1_PMA_REG_CDR_READY_THD); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE1_PMA_REG_RX_RESERVED_65 == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE1[65]  :=  1'b0; 
}
else if (CP_LANE1_PMA_REG_RX_RESERVED_65 == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE1[65]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE1[65]  :=  1'b0; 
 error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_65 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RESERVED_65);  
}

//initial config body690 end


//initial config body691 begin
    if(CP_LANE1_PMA_REG_RX_PCLK_EDGE_SEL == "POS_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE1[66]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_PCLK_EDGE_SEL == "NEG_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE1[66]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[66]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_PCLK_EDGE_SEL is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_LANE1_PMA_REG_RX_PCLK_EDGE_SEL);
    }

//initial config body691 end


//initial config body692 begin
    if(CP_LANE1_PMA_REG_RX_PIBUF_IC >= 0 && CP_LANE1_PMA_REG_RX_PIBUF_IC <= 3)
    {
        SC_PMA_CH_INT_RX_LANE1[68:67]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_PIBUF_IC, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[68:67]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_PIBUF_IC is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_PIBUF_IC);
    }

//initial config body692 end


//initial config body693 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_69 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[69]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_RESERVED_69 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[69]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[69]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_69 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RESERVED_69);
    }

//initial config body693 end


//initial config body694 begin

 if(CP_LANE1_PMA_REG_RX_DCC_IC_RX >= 0 && CP_LANE1_PMA_REG_RX_DCC_IC_RX <= 3) 
 {
 SC_PMA_CH_INT_RX_LANE1[71:70]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_DCC_IC_RX, 2) ^ 2'b11; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE1[71:70]   :=  to_unsigned( 0, 2) ^ 2'b11; 
 error("Setting Error : The CP_LANE1_PMA_REG_RX_DCC_IC_RX is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_DCC_IC_RX); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE1_PMA_REG_CDR_READY_CHECK_CTRL >= 0 && CP_LANE1_PMA_REG_CDR_READY_CHECK_CTRL <= 3) 
 {
 SC_PMA_CH_INT_RX_LANE1[73:72]   :=  to_unsigned( CP_LANE1_PMA_REG_CDR_READY_CHECK_CTRL, 2) ^ 2'b11; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE1[73:72]   :=  to_unsigned( 0, 2) ^ 2'b11; 
 error("Setting Error : The CP_LANE1_PMA_REG_CDR_READY_CHECK_CTRL is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_CDR_READY_CHECK_CTRL); 
}

//initial config body694 end


//initial config body695 begin
    if(CP_LANE1_PMA_REG_RX_ICTRL_TRX == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[75:74]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_RX_ICTRL_TRX == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[75:74]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_RX_ICTRL_TRX == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[75:74]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_RX_ICTRL_TRX == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[75:74]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[75:74]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_ICTRL_TRX is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE1_PMA_REG_RX_ICTRL_TRX);
    }

//initial config body695 end


//initial config body696 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_77_76 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_77_76 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE1[77:76]  :=  CP_LANE1_PMA_REG_RX_RESERVED_77_76;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[77:76]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_77_76 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_RESERVED_77_76);
    }

//initial config body696 end


//initial config body697 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_79_78 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_79_78 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE1[79:78]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_RESERVED_79_78, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[79:78]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_79_78 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_RESERVED_79_78);
    }

//initial config body697 end


//initial config body698 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_81_80 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_81_80 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE1[81:80]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_RESERVED_81_80, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[81:80]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_81_80 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_RESERVED_81_80);
    }

//initial config body698 end


//initial config body699 begin
    if(CP_LANE1_PMA_REG_RX_ICTRL_PIBUF == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[83:82]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_RX_ICTRL_PIBUF == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[83:82]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_RX_ICTRL_PIBUF == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[83:82]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_RX_ICTRL_PIBUF == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[83:82]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[83:82]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_ICTRL_PIBUF is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE1_PMA_REG_RX_ICTRL_PIBUF);
    }

//initial config body699 end


//initial config body700 begin
    if(CP_LANE1_PMA_REG_RX_ICTRL_PI == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[85:84]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_RX_ICTRL_PI == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[85:84]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_RX_ICTRL_PI == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[85:84]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_RX_ICTRL_PI == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[85:84]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[85:84]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_ICTRL_PI is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE1_PMA_REG_RX_ICTRL_PI);
    }

//initial config body700 end


//initial config body701 begin
    if(CP_LANE1_PMA_REG_RX_ICTRL_DCC == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[87:86]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_RX_ICTRL_DCC == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[87:86]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_RX_ICTRL_DCC == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[87:86]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_RX_ICTRL_DCC == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE1[87:86]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[87:86]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_ICTRL_DCC is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE1_PMA_REG_RX_ICTRL_DCC);
    }

//initial config body701 end


//initial config body702 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_89_88 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_89_88 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE1[89:88]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_RESERVED_89_88, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[89:88]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_89_88 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_RESERVED_89_88);
    }

//initial config body702 end


//initial config body703 begin
    if(CP_LANE1_PMA_REG_TX_RATE == "DIV4")
    {
        SC_PMA_CH_INT_RX_LANE1[91:90]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE1_PMA_REG_TX_RATE == "DIV2")
    {
        SC_PMA_CH_INT_RX_LANE1[91:90]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE1_PMA_REG_TX_RATE == "DIV1")
    {
        SC_PMA_CH_INT_RX_LANE1[91:90]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE1_PMA_REG_TX_RATE == "MUL2")
    {
        SC_PMA_CH_INT_RX_LANE1[91:90]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[91:90]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RATE is set to %s. Legal values is DIV4,DIV2,DIV1,MUL2",CP_LANE1_PMA_REG_TX_RATE);
    }

//initial config body703 end


//initial config body704 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_92 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[92]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_RESERVED_92 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[92]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[92]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_92 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RESERVED_92);
    }

//initial config body704 end


//initial config body705 begin
    if(CP_LANE1_PMA_REG_TX_RATE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[93]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RATE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[93]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[93]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RATE_EN);
    }

//initial config body705 end


//initial config body706 begin
    if(CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[94]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[94]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[94]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_RST_N);
    }

//initial config body706 end


//initial config body707 begin
    if(CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[95]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[95]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[95]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN);
    }

//initial config body707 end


//initial config body708 begin
    if(CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[96]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[96]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[96]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_EN);
    }

//initial config body708 end


//initial config body709 begin
    if(CP_LANE1_PMA_REG_TXCLK_SEL == "PLL")
    {
        SC_PMA_CH_INT_RX_LANE1[97]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TXCLK_SEL == "RXCLK")
    {
        SC_PMA_CH_INT_RX_LANE1[97]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[97]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TXCLK_SEL is set to %s. Legal values is PLL,RXCLK",CP_LANE1_PMA_REG_TXCLK_SEL);
    }

//initial config body709 end


//initial config body710 begin
    if(CP_LANE1_PMA_REG_RX_DATA_POLARITY == "NORMAL")
    {
        SC_PMA_CH_INT_RX_LANE1[98]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_DATA_POLARITY == "REVERSE")
    {
        SC_PMA_CH_INT_RX_LANE1[98]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[98]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_DATA_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_LANE1_PMA_REG_RX_DATA_POLARITY);
    }

//initial config body710 end


//initial config body711 begin
    if(CP_LANE1_PMA_REG_RX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[99]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[99]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[99]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_ERR_INSERT is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_ERR_INSERT);
    }

//initial config body711 end


//initial config body712 begin
    if(CP_LANE1_PMA_REG_UDP_CHK_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[100]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_UDP_CHK_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[100]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[100]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_UDP_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_UDP_CHK_EN);
    }

//initial config body712 end


//initial config body713 begin
    if(CP_LANE1_PMA_REG_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH_INT_RX_LANE1[102:101]  :=  2'b00;
    }
    else if (CP_LANE1_PMA_REG_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH_INT_RX_LANE1[102:101]  :=  2'b01;
    }
    else if (CP_LANE1_PMA_REG_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH_INT_RX_LANE1[102:101]  :=  2'b10;
    }
    else if (CP_LANE1_PMA_REG_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH_INT_RX_LANE1[102:101]  :=  2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[102:101]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PMA_REG_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_LANE1_PMA_REG_PRBS_SEL);
    }

//initial config body713 end


//initial config body714 begin
    if(CP_LANE1_PMA_REG_PRBS_CHK_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[103]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_PRBS_CHK_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[103]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[103]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_PRBS_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_PRBS_CHK_EN);
    }

//initial config body714 end


//initial config body715 begin
    if(CP_LANE1_PMA_REG_PRBS_CHK_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH_INT_RX_LANE1[105:104]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE1_PMA_REG_PRBS_CHK_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH_INT_RX_LANE1[105:104]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE1_PMA_REG_PRBS_CHK_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH_INT_RX_LANE1[105:104]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE1_PMA_REG_PRBS_CHK_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH_INT_RX_LANE1[105:104]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[105:104]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE1_PMA_REG_PRBS_CHK_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE1_PMA_REG_PRBS_CHK_WIDTH_SEL);
    }

//initial config body715 end


//initial config body716 begin
    if(CP_LANE1_PMA_REG_BIST_CHK_PAT_SEL == "PRBS")
    {
        SC_PMA_CH_INT_RX_LANE1[106]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_BIST_CHK_PAT_SEL == "CONSTANT")
    {
        SC_PMA_CH_INT_RX_LANE1[106]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[106]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_BIST_CHK_PAT_SEL is set to %s. Legal values is PRBS,CONSTANT",CP_LANE1_PMA_REG_BIST_CHK_PAT_SEL);
    }

//initial config body716 end


//initial config body717 begin
    if(CP_LANE1_PMA_REG_LOAD_ERR_CNT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[107]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_LOAD_ERR_CNT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[107]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[107]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_LOAD_ERR_CNT is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_LOAD_ERR_CNT);
    }

//initial config body717 end


//initial config body718 begin
    if(CP_LANE1_PMA_REG_CHK_COUNTER_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[108]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CHK_COUNTER_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[108]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[108]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CHK_COUNTER_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CHK_COUNTER_EN);
    }

//initial config body718 end


//initial config body719 begin
    if(CP_LANE1_PMA_REG_CDR_PROP_GAIN >= 0 && CP_LANE1_PMA_REG_CDR_PROP_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE1[111:109]   :=  to_unsigned( CP_LANE1_PMA_REG_CDR_PROP_GAIN, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[111:109]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_PROP_GAIN is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_REG_CDR_PROP_GAIN);
    }

//initial config body719 end


//initial config body720 begin
    if(CP_LANE1_PMA_REG_CDR_PROP_TURBO_GAIN >= 0 && CP_LANE1_PMA_REG_CDR_PROP_TURBO_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE1[114:112]   :=  to_unsigned( CP_LANE1_PMA_REG_CDR_PROP_TURBO_GAIN, 3) ^ 3'b110;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[114:112]   :=  to_unsigned( 0, 3) ^ 3'b110;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_PROP_TURBO_GAIN is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_REG_CDR_PROP_TURBO_GAIN);
    }

//initial config body720 end


//initial config body721 begin
    if(CP_LANE1_PMA_REG_CDR_INT_GAIN >= 0 && CP_LANE1_PMA_REG_CDR_INT_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE1[117:115]   :=  to_unsigned( CP_LANE1_PMA_REG_CDR_INT_GAIN, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[117:115]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_INT_GAIN is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_REG_CDR_INT_GAIN);
    }

//initial config body721 end


//initial config body722 begin
    if(CP_LANE1_PMA_REG_CDR_INT_TURBO_GAIN >= 0 && CP_LANE1_PMA_REG_CDR_INT_TURBO_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE1[120:118]   :=  to_unsigned( CP_LANE1_PMA_REG_CDR_INT_TURBO_GAIN, 3) ^ 3'b110;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[120:118]   :=  to_unsigned( 0, 3) ^ 3'b110;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_INT_TURBO_GAIN is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_REG_CDR_INT_TURBO_GAIN);
    }

//initial config body722 end


//initial config body723 begin
    if(CP_LANE1_PMA_REG_CDR_INT_SAT_MAX >= 0 && CP_LANE1_PMA_REG_CDR_INT_SAT_MAX <= 1023)
    {
        SC_PMA_CH_INT_RX_LANE1[130:121]   :=  to_unsigned( CP_LANE1_PMA_REG_CDR_INT_SAT_MAX, 10) ^ 10'b1111100000;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[130:121]   :=  to_unsigned( 0, 10) ^ 10'b1111100000;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_INT_SAT_MAX is set to %d. Legal values is 0 to 1023",CP_LANE1_PMA_REG_CDR_INT_SAT_MAX);
    }

//initial config body723 end


//initial config body724 begin
    if(CP_LANE1_PMA_REG_CDR_INT_SAT_MIN >= 0 && CP_LANE1_PMA_REG_CDR_INT_SAT_MIN <= 1023)
    {
        SC_PMA_CH_INT_RX_LANE1[140:131]   :=  to_unsigned( CP_LANE1_PMA_REG_CDR_INT_SAT_MIN, 10) ^ 10'b0000100000;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[140:131]   :=  to_unsigned( 0, 10) ^ 10'b0000100000;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_INT_SAT_MIN is set to %d. Legal values is 0 to 1023",CP_LANE1_PMA_REG_CDR_INT_SAT_MIN);
    }

//initial config body724 end


//initial config body725 begin
    if(CP_LANE1_PMA_REG_CDR_INT_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[141]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_INT_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[141]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[141]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_INT_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_INT_RST);
    }

//initial config body725 end


//initial config body726 begin
    if(CP_LANE1_PMA_REG_CDR_INT_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[142]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_INT_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[142]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[142]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_INT_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_INT_RST_OW);
    }

//initial config body726 end


//initial config body727 begin
    if(CP_LANE1_PMA_REG_CDR_PROP_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[143]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_PROP_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[143]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[143]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_PROP_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_PROP_RST);
    }

//initial config body727 end


//initial config body728 begin
    if(CP_LANE1_PMA_REG_CDR_PROP_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[144]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_PROP_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[144]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[144]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_PROP_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_PROP_RST_OW);
    }

//initial config body728 end


//initial config body729 begin
    if(CP_LANE1_PMA_REG_CDR_LOCK_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[145]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_LOCK_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[145]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[145]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_LOCK_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_LOCK_RST);
    }

//initial config body729 end


//initial config body730 begin
    if(CP_LANE1_PMA_REG_CDR_LOCK_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[146]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_LOCK_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[146]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[146]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_LOCK_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_LOCK_RST_OW);
    }

//initial config body730 end


//initial config body731 begin
    if(CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_SEL == 0)
    {
        SC_PMA_CH_INT_RX_LANE1[147]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_SEL == 1)
    {
        SC_PMA_CH_INT_RX_LANE1[147]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[147]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_SEL is set to %s. Legal values is 0,1",CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_SEL);
    }

//initial config body731 end


//initial config body732 begin
    if(CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_D >= 0 && CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_D <= 255)
    {
        SC_PMA_CH_INT_RX_LANE1[155:148]  :=  CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_D;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[155:148]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_D is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_D);
    }

//initial config body732 end


//initial config body733 begin
    if(CP_LANE1_PMA_REG_CDR_LOCK_TIMER == "0_8U")
    {
        SC_PMA_CH_INT_RX_LANE1[158:156]   :=  to_unsigned( 0, 3) ^ 3'b001;
    }
    else if (CP_LANE1_PMA_REG_CDR_LOCK_TIMER == "1_2U")
    {
        SC_PMA_CH_INT_RX_LANE1[158:156]   :=  to_unsigned( 1, 3) ^ 3'b001;
    }
    else if (CP_LANE1_PMA_REG_CDR_LOCK_TIMER == "1_6U")
    {
        SC_PMA_CH_INT_RX_LANE1[158:156]   :=  to_unsigned( 2, 3) ^ 3'b001;
    }
    else if (CP_LANE1_PMA_REG_CDR_LOCK_TIMER == "2_4U")
    {
        SC_PMA_CH_INT_RX_LANE1[158:156]   :=  to_unsigned( 3, 3) ^ 3'b001;
    }
    else if (CP_LANE1_PMA_REG_CDR_LOCK_TIMER == "3_2U")
    {
        SC_PMA_CH_INT_RX_LANE1[158:156]   :=  to_unsigned( 4, 3) ^ 3'b001;
    }
    else if (CP_LANE1_PMA_REG_CDR_LOCK_TIMER == "4_8U")
    {
        SC_PMA_CH_INT_RX_LANE1[158:156]   :=  to_unsigned( 5, 3) ^ 3'b001;
    }
    else if (CP_LANE1_PMA_REG_CDR_LOCK_TIMER == "12_8U")
    {
        SC_PMA_CH_INT_RX_LANE1[158:156]   :=  to_unsigned( 6, 3) ^ 3'b001;
    }
    else if (CP_LANE1_PMA_REG_CDR_LOCK_TIMER == "25_6U")
    {
        SC_PMA_CH_INT_RX_LANE1[158:156]   :=  to_unsigned( 7, 3) ^ 3'b001;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[158:156]   :=  to_unsigned( 0, 3) ^ 3'b001;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_LOCK_TIMER is set to %s. Legal values is 0_8U,1_2U,1_6U,2_4U,3_2U,4_8U,12_8U,25_6U",CP_LANE1_PMA_REG_CDR_LOCK_TIMER);
    }

//initial config body733 end


//initial config body734 begin
    if(CP_LANE1_PMA_REG_CDR_TURBO_MODE_TIMER == 0)
    {
        SC_PMA_CH_INT_RX_LANE1[160:159]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_CDR_TURBO_MODE_TIMER == 1)
    {
        SC_PMA_CH_INT_RX_LANE1[160:159]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_CDR_TURBO_MODE_TIMER == 2)
    {
        SC_PMA_CH_INT_RX_LANE1[160:159]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE1_PMA_REG_CDR_TURBO_MODE_TIMER == 3)
    {
        SC_PMA_CH_INT_RX_LANE1[160:159]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[160:159]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_TURBO_MODE_TIMER is set to %s. Legal values is 0,1,2,3",CP_LANE1_PMA_REG_CDR_TURBO_MODE_TIMER);
    }

//initial config body734 end


//initial config body735 begin
    if(CP_LANE1_PMA_REG_CDR_LOCK_VAL == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[161]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_LOCK_VAL == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[161]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[161]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_LOCK_VAL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_LOCK_VAL);
    }

//initial config body735 end


//initial config body736 begin
    if(CP_LANE1_PMA_REG_CDR_LOCK_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[162]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_LOCK_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[162]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[162]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_LOCK_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_LOCK_OW);
    }

//initial config body736 end


//initial config body737 begin
    if(CP_LANE1_PMA_REG_CDR_INT_SAT_DET_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[163]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_CDR_INT_SAT_DET_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[163]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[163]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_INT_SAT_DET_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_INT_SAT_DET_EN);
    }

//initial config body737 end


//initial config body738 begin
    if(CP_LANE1_PMA_REG_CDR_SAT_AUTO_DIS == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[164]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_SAT_AUTO_DIS == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[164]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[164]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_SAT_AUTO_DIS is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_SAT_AUTO_DIS);
    }

//initial config body738 end


//initial config body739 begin
    if(CP_LANE1_PMA_REG_CDR_GAIN_AUTO == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[165]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_GAIN_AUTO == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[165]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[165]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_GAIN_AUTO is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_GAIN_AUTO);
    }

//initial config body739 end


//initial config body740 begin
    if(CP_LANE1_PMA_REG_CDR_TURBO_GAIN_AUTO == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[166]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_TURBO_GAIN_AUTO == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[166]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[166]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_TURBO_GAIN_AUTO is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_TURBO_GAIN_AUTO);
    }

//initial config body740 end


//initial config body741 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_171_167 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_171_167 <= 31)
    {
        SC_PMA_CH_INT_RX_LANE1[171:167]  :=  CP_LANE1_PMA_REG_RX_RESERVED_171_167;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[171:167]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_171_167 is set to %d. Legal values is 0 to 31",CP_LANE1_PMA_REG_RX_RESERVED_171_167);
    }

//initial config body741 end


//initial config body742 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_175_172 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_175_172 <= 15)
    {
        SC_PMA_CH_INT_RX_LANE1[175:172]  :=  CP_LANE1_PMA_REG_RX_RESERVED_175_172;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[175:172]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_175_172 is set to %d. Legal values is 0 to 15",CP_LANE1_PMA_REG_RX_RESERVED_175_172);
    }

//initial config body742 end


//initial config body743 begin
    if(CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[176]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[176]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[176]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_EN);
    }

//initial config body743 end


//initial config body744 begin
    if(CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[177]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[177]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[177]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN);
    }

//initial config body744 end


//initial config body745 begin
    if(CP_LANE1_PMA_REG_CDR_PI_CTRL_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[178]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_PI_CTRL_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[178]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[178]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_PI_CTRL_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_PI_CTRL_RST);
    }

//initial config body745 end


//initial config body746 begin
    if(CP_LANE1_PMA_REG_CDR_PI_CTRL_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[179]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_PI_CTRL_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[179]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[179]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_PI_CTRL_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_PI_CTRL_RST_OW);
    }

//initial config body746 end


//initial config body747 begin
    if(CP_LANE1_PMA_REG_CDR_SAT_DET_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[180]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_SAT_DET_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[180]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[180]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_SAT_DET_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_SAT_DET_RST);
    }

//initial config body747 end


//initial config body748 begin
    if(CP_LANE1_PMA_REG_CDR_SAT_DET_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[181]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_SAT_DET_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[181]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[181]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_SAT_DET_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_SAT_DET_RST_OW);
    }

//initial config body748 end


//initial config body749 begin
    if(CP_LANE1_PMA_REG_CDR_SAT_DET_STICKY_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[182]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_SAT_DET_STICKY_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[182]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[182]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_SAT_DET_STICKY_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_SAT_DET_STICKY_RST);
    }

//initial config body749 end


//initial config body750 begin
    if(CP_LANE1_PMA_REG_CDR_SAT_DET_STICKY_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[183]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_SAT_DET_STICKY_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[183]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[183]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_SAT_DET_STICKY_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_SAT_DET_STICKY_RST_OW);
    }

//initial config body750 end


//initial config body751 begin
    if(CP_LANE1_PMA_REG_CDR_SIGDET_STATUS_DIS == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[184]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_SIGDET_STATUS_DIS == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[184]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[184]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_SIGDET_STATUS_DIS is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_SIGDET_STATUS_DIS);
    }

//initial config body751 end


//initial config body752 begin
    if(CP_LANE1_PMA_REG_CDR_SAT_DET_TIMER == 0)
    {
        SC_PMA_CH_INT_RX_LANE1[186:185]   :=  to_unsigned( 0, 2) ^ 2'b10;
    }
    else if (CP_LANE1_PMA_REG_CDR_SAT_DET_TIMER == 1)
    {
        SC_PMA_CH_INT_RX_LANE1[186:185]   :=  to_unsigned( 1, 2) ^ 2'b10;
    }
    else if (CP_LANE1_PMA_REG_CDR_SAT_DET_TIMER == 2)
    {
        SC_PMA_CH_INT_RX_LANE1[186:185]   :=  to_unsigned( 2, 2) ^ 2'b10;
    }
    else if (CP_LANE1_PMA_REG_CDR_SAT_DET_TIMER == 3)
    {
        SC_PMA_CH_INT_RX_LANE1[186:185]   :=  to_unsigned( 3, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[186:185]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_SAT_DET_TIMER is set to %s. Legal values is 0,1,2,3",CP_LANE1_PMA_REG_CDR_SAT_DET_TIMER);
    }

//initial config body752 end


//initial config body753 begin
    if(CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_VAL == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[187]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_VAL == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[187]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[187]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_VAL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_VAL);
    }

//initial config body753 end


//initial config body754 begin
    if(CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[188]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[188]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[188]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_OW);
    }

//initial config body754 end


//initial config body755 begin
    if(CP_LANE1_PMA_REG_CDR_TURBO_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[189]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_CDR_TURBO_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[189]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[189]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_TURBO_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_TURBO_MODE_EN);
    }

//initial config body755 end


//initial config body756 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_190 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[190]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_RESERVED_190 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[190]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[190]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_190 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RESERVED_190);
    }

//initial config body756 end


//initial config body757 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_193_191 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_193_191 <= 7)
    {
        SC_PMA_CH_INT_RX_LANE1[193:191]  :=  CP_LANE1_PMA_REG_RX_RESERVED_193_191;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[193:191]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_193_191 is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_REG_RX_RESERVED_193_191);
    }

//initial config body757 end


//initial config body758 begin
    if(CP_LANE1_PMA_REG_CDR_STATUS_FIFO_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[194]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_CDR_STATUS_FIFO_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[194]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[194]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_CDR_STATUS_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CDR_STATUS_FIFO_EN);
    }

//initial config body758 end


//initial config body759 begin
    if(CP_LANE1_PMA_REG_PMA_TEST_SEL == 0)
    {
        SC_PMA_CH_INT_RX_LANE1[197:195]  :=  3'b000;
    }
    else if (CP_LANE1_PMA_REG_PMA_TEST_SEL == 1)
    {
        SC_PMA_CH_INT_RX_LANE1[197:195]  :=  3'b001;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[197:195]  :=  3'b000;
        error("Setting Error : The CP_LANE1_PMA_REG_PMA_TEST_SEL is set to %s. Legal values is 0,1",CP_LANE1_PMA_REG_PMA_TEST_SEL);
    }

//initial config body759 end


//initial config body760 begin
    if(CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MIN >= 0 && CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MIN <= 63)
    {
        SC_PMA_CH_INT_RX_LANE1[203:198]   :=  to_unsigned( CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MIN, 6) ^ 6'b000011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[203:198]   :=  to_unsigned( 0, 6) ^ 6'b000011;
        error("Setting Error : The CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MIN is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MIN);
    }

//initial config body760 end


//initial config body761 begin
    if(CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MAX >= 0 && CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MAX <= 63)
    {
        SC_PMA_CH_INT_RX_LANE1[209:204]   :=  to_unsigned( CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MAX, 6) ^ 6'b001011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[209:204]   :=  to_unsigned( 0, 6) ^ 6'b001011;
        error("Setting Error : The CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MAX is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MAX);
    }

//initial config body761 end


//initial config body762 begin
    if(CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MIN >= 0 && CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MIN <= 255)
    {
        SC_PMA_CH_INT_RX_LANE1[217:210]   :=  to_unsigned( CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MIN, 8) ^ 8'b00001111;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[217:210]   :=  to_unsigned( 0, 8) ^ 8'b00001111;
        error("Setting Error : The CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MIN is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MIN);
    }

//initial config body762 end


//initial config body763 begin
    if(CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MAX >= 0 && CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MAX <= 255)
    {
        SC_PMA_CH_INT_RX_LANE1[225:218]   :=  to_unsigned( CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MAX, 8) ^ 8'b00100011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[225:218]   :=  to_unsigned( 0, 8) ^ 8'b00100011;
        error("Setting Error : The CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MAX is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MAX);
    }

//initial config body763 end


//initial config body764 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_227_226 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_227_226 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE1[227:226]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_RESERVED_227_226, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[227:226]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_227_226 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_RESERVED_227_226);
    }

//initial config body764 end


//initial config body765 begin
    if(CP_LANE1_PMA_REG_COMWAKE_STATUS_CLEAR == 0)
    {
        SC_PMA_CH_INT_RX_LANE1[228]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_COMWAKE_STATUS_CLEAR == 1)
    {
        SC_PMA_CH_INT_RX_LANE1[228]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[228]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_COMWAKE_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_LANE1_PMA_REG_COMWAKE_STATUS_CLEAR);
    }

//initial config body765 end


//initial config body766 begin
    if(CP_LANE1_PMA_REG_COMINIT_STATUS_CLEAR == 0)
    {
        SC_PMA_CH_INT_RX_LANE1[229]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_COMINIT_STATUS_CLEAR == 1)
    {
        SC_PMA_CH_INT_RX_LANE1[229]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[229]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_COMINIT_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_LANE1_PMA_REG_COMINIT_STATUS_CLEAR);
    }

//initial config body766 end


//initial config body767 begin
    if(CP_LANE1_PMA_REG_RX_SYNC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[230]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SYNC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[230]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[230]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SYNC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SYNC_RST_N_EN);
    }

//initial config body767 end


//initial config body768 begin
    if(CP_LANE1_PMA_REG_RX_SYNC_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[231]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_RX_SYNC_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[231]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[231]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SYNC_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SYNC_RST_N);
    }

//initial config body768 end


//initial config body769 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_233_232 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_233_232 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE1[233:232]  :=  CP_LANE1_PMA_REG_RX_RESERVED_233_232;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[233:232]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_233_232 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_RESERVED_233_232);
    }

//initial config body769 end


//initial config body770 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_235_234 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_235_234 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE1[235:234]  :=  CP_LANE1_PMA_REG_RX_RESERVED_235_234;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[235:234]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_235_234 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_RESERVED_235_234);
    }

//initial config body770 end


//initial config body771 begin
    if(CP_LANE1_PMA_REG_RX_SATA_COMINIT_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[236]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SATA_COMINIT_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[236]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[236]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SATA_COMINIT_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SATA_COMINIT_OW);
    }

//initial config body771 end


//initial config body772 begin
    if(CP_LANE1_PMA_REG_RX_SATA_COMINIT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[237]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SATA_COMINIT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[237]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[237]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SATA_COMINIT is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SATA_COMINIT);
    }

//initial config body772 end


//initial config body773 begin
    if(CP_LANE1_PMA_REG_RX_SATA_COMWAKE_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[238]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SATA_COMWAKE_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[238]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[238]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SATA_COMWAKE_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SATA_COMWAKE_OW);
    }

//initial config body773 end


//initial config body774 begin
    if(CP_LANE1_PMA_REG_RX_SATA_COMWAKE == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[239]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SATA_COMWAKE == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[239]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[239]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SATA_COMWAKE is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SATA_COMWAKE);
    }

//initial config body774 end


//initial config body775 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_241_240 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_241_240 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE1[241:240]  :=  CP_LANE1_PMA_REG_RX_RESERVED_241_240;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[241:240]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_241_240 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_RESERVED_241_240);
    }

//initial config body775 end


//initial config body776 begin
    if(CP_LANE1_PMA_REG_RX_DCC_DISABLE == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[242]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_DCC_DISABLE == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[242]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[242]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_DCC_DISABLE is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_DCC_DISABLE);
    }

//initial config body776 end


//initial config body777 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_243 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[243]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_RESERVED_243 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[243]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[243]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_243 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RESERVED_243);
    }

//initial config body777 end


//initial config body778 begin
    if(CP_LANE1_PMA_REG_RX_SLIP_SEL_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[244]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SLIP_SEL_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[244]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[244]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SLIP_SEL_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SLIP_SEL_EN);
    }

//initial config body778 end


//initial config body779 begin
    if(CP_LANE1_PMA_REG_RX_SLIP_SEL >= 0 && CP_LANE1_PMA_REG_RX_SLIP_SEL <= 15)
    {
        SC_PMA_CH_INT_RX_LANE1[248:245]  :=  CP_LANE1_PMA_REG_RX_SLIP_SEL;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[248:245]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SLIP_SEL is set to %d. Legal values is 0 to 15",CP_LANE1_PMA_REG_RX_SLIP_SEL);
    }

//initial config body779 end


//initial config body780 begin
    if(CP_LANE1_PMA_REG_RX_SLIP_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[249]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SLIP_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[249]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[249]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SLIP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SLIP_EN);
    }

//initial config body780 end


//initial config body781 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_STATUS_SEL >= 0 && CP_LANE1_PMA_REG_RX_SIGDET_STATUS_SEL <= 7)
    {
        SC_PMA_CH_INT_RX_LANE1[252:250]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_SIGDET_STATUS_SEL, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[252:250]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_STATUS_SEL is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_REG_RX_SIGDET_STATUS_SEL);
    }

//initial config body781 end


//initial config body782 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_FSM_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[253]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_FSM_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[253]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[253]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_FSM_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SIGDET_FSM_RST_N);
    }

//initial config body782 end


//initial config body783 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_254 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[254]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_RESERVED_254 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[254]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[254]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_254 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RESERVED_254);
    }

//initial config body783 end


//initial config body784 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_STATUS == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[255]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_STATUS == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[255]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[255]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_STATUS is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SIGDET_STATUS);
    }

//initial config body784 end


//initial config body785 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_VTH == "9MV")
    {
        SC_PMA_CH_INT_RX_LANE1[259:256]   :=  to_unsigned( 0, 4) ^ 4'b0010;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_VTH == "18MV")
    {
        SC_PMA_CH_INT_RX_LANE1[259:256]   :=  to_unsigned( 1, 4) ^ 4'b0010;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_VTH == "27MV")
    {
        SC_PMA_CH_INT_RX_LANE1[259:256]   :=  to_unsigned( 2, 4) ^ 4'b0010;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_VTH == "36MV")
    {
        SC_PMA_CH_INT_RX_LANE1[259:256]   :=  to_unsigned( 3, 4) ^ 4'b0010;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_VTH == "45MV")
    {
        SC_PMA_CH_INT_RX_LANE1[259:256]   :=  to_unsigned( 4, 4) ^ 4'b0010;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_VTH == "54MV")
    {
        SC_PMA_CH_INT_RX_LANE1[259:256]   :=  to_unsigned( 5, 4) ^ 4'b0010;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_VTH == "63MV")
    {
        SC_PMA_CH_INT_RX_LANE1[259:256]   :=  to_unsigned( 6, 4) ^ 4'b0010;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_VTH == "72MV")
    {
        SC_PMA_CH_INT_RX_LANE1[259:256]   :=  to_unsigned( 7, 4) ^ 4'b0010;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[259:256]   :=  to_unsigned( 0, 4) ^ 4'b0010;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_VTH is set to %s. Legal values is 9MV,18MV,27MV,36MV,45MV,54MV,63MV,72MV",CP_LANE1_PMA_REG_RX_SIGDET_VTH);
    }

//initial config body785 end


//initial config body786 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_GRM == 0)
    {
        SC_PMA_CH_INT_RX_LANE1[261:260]  :=  2'b00;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_GRM == 1)
    {
        SC_PMA_CH_INT_RX_LANE1[261:260]  :=  2'b01;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_GRM == 2)
    {
        SC_PMA_CH_INT_RX_LANE1[261:260]  :=  2'b10;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_GRM == 3)
    {
        SC_PMA_CH_INT_RX_LANE1[261:260]  :=  2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[261:260]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_GRM is set to %s. Legal values is 0,1,2,3",CP_LANE1_PMA_REG_RX_SIGDET_GRM);
    }

//initial config body786 end


//initial config body787 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_PULSE_EXT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[262]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_PULSE_EXT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[262]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[262]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_PULSE_EXT is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SIGDET_PULSE_EXT);
    }

//initial config body787 end


//initial config body788 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_CH2_SEL == 0)
    {
        SC_PMA_CH_INT_RX_LANE1[263]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_CH2_SEL == 1)
    {
        SC_PMA_CH_INT_RX_LANE1[263]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[263]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_CH2_SEL is set to %s. Legal values is 0,1",CP_LANE1_PMA_REG_RX_SIGDET_CH2_SEL);
    }

//initial config body788 end


//initial config body789 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW >= 0 && CP_LANE1_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW <= 31)
    {
        SC_PMA_CH_INT_RX_LANE1[268:264]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW, 5) ^ 5'b00011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[268:264]   :=  to_unsigned( 0, 5) ^ 5'b00011;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW is set to %d. Legal values is 0 to 31",CP_LANE1_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW);
    }

//initial config body789 end


//initial config body790 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_CHK_WINDOW_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[269]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_RX_SIGDET_CHK_WINDOW_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[269]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[269]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_CHK_WINDOW_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_SIGDET_CHK_WINDOW_EN);
    }

//initial config body790 end


//initial config body791 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING >= 0 && CP_LANE1_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING <= 7)
    {
        SC_PMA_CH_INT_RX_LANE1[272:270]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING, 3) ^ 3'b100;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[272:270]   :=  to_unsigned( 0, 3) ^ 3'b100;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING);
    }

//initial config body791 end


//initial config body792 begin
    if(CP_LANE1_PMA_REG_SLIP_FIFO_INV_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[273]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_SLIP_FIFO_INV_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[273]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[273]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_SLIP_FIFO_INV_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_SLIP_FIFO_INV_EN);
    }

//initial config body792 end


//initial config body793 begin
    if(CP_LANE1_PMA_REG_SLIP_FIFO_INV == "POS_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE1[274]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_SLIP_FIFO_INV == "NEG_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE1[274]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[274]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_SLIP_FIFO_INV is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_LANE1_PMA_REG_SLIP_FIFO_INV);
    }

//initial config body793 end


//initial config body794 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL >= 0 && CP_LANE1_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL <= 31)
    {
        SC_PMA_CH_INT_RX_LANE1[279:275]  :=  CP_LANE1_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[279:275]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL is set to %d. Legal values is 0 to 31",CP_LANE1_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL);
    }

//initial config body794 end


//initial config body795 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_4OOB_DET_SEL >= 0 && CP_LANE1_PMA_REG_RX_SIGDET_4OOB_DET_SEL <= 7)
    {
        SC_PMA_CH_INT_RX_LANE1[282:280]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_SIGDET_4OOB_DET_SEL, 3) ^ 3'b111;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[282:280]   :=  to_unsigned( 0, 3) ^ 3'b111;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_4OOB_DET_SEL is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_REG_RX_SIGDET_4OOB_DET_SEL);
    }

//initial config body795 end


//initial config body796 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_285_283 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_285_283 <= 7)
    {
        SC_PMA_CH_INT_RX_LANE1[285:283]  :=  CP_LANE1_PMA_REG_RX_RESERVED_285_283;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[285:283]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_285_283 is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_REG_RX_RESERVED_285_283);
    }

//initial config body796 end


//initial config body797 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_286 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[286]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_RESERVED_286 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[286]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[286]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_286 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RESERVED_286);
    }

//initial config body797 end


//initial config body798 begin
    if(CP_LANE1_PMA_REG_RX_SIGDET_IC_I >= 0 && CP_LANE1_PMA_REG_RX_SIGDET_IC_I <= 15)
    {
        SC_PMA_CH_INT_RX_LANE1[290:287]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_SIGDET_IC_I, 4) ^ 4'b1010;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[290:287]   :=  to_unsigned( 0, 4) ^ 4'b1010;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_SIGDET_IC_I is set to %d. Legal values is 0 to 15",CP_LANE1_PMA_REG_RX_SIGDET_IC_I);
    }

//initial config body798 end


//initial config body799 begin
    if(CP_LANE1_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[291]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[291]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[291]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW);
    }

//initial config body799 end


//initial config body800 begin
    if(CP_LANE1_PMA_REG_RX_OOB_DETECTOR_RESET_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[292]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_OOB_DETECTOR_RESET_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[292]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[292]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_OOB_DETECTOR_RESET_N is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_OOB_DETECTOR_RESET_N);
    }

//initial config body800 end


//initial config body801 begin
    if(CP_LANE1_PMA_REG_RX_OOB_DETECTOR_PD_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[293]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_OOB_DETECTOR_PD_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[293]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[293]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_OOB_DETECTOR_PD_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_OOB_DETECTOR_PD_OW);
    }

//initial config body801 end


//initial config body802 begin
    if(CP_LANE1_PMA_REG_RX_OOB_DETECTOR_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE1[294]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_OOB_DETECTOR_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE1[294]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[294]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_OOB_DETECTOR_PD is set to %s. Legal values is ON,OFF",CP_LANE1_PMA_REG_RX_OOB_DETECTOR_PD);
    }

//initial config body802 end


//initial config body803 begin
    if(CP_LANE1_PMA_REG_RX_LS_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[295]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_LS_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[295]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[295]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_LS_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_LS_MODE_EN);
    }

//initial config body803 end


//initial config body804 begin

 if(CP_LANE1_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE1[296]  :=  1'b0; 
}
else if (CP_LANE1_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE1[296]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE1[296]  :=  1'b0; 
 error("Setting Error : The CP_LANE1_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE1_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE1[297]  :=  1'b0; 
}
else if (CP_LANE1_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE1[297]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE1[297]  :=  1'b0; 
 error("Setting Error : The CP_LANE1_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL);  
}

//initial config body804 end


//initial config body805 begin
    if(CP_LANE1_PMA_REG_RX_EQ1_R_SET_TOP >= 0 && CP_LANE1_PMA_REG_RX_EQ1_R_SET_TOP <= 3)
    {
        SC_PMA_CH_INT_RX_LANE1[299:298]  :=  CP_LANE1_PMA_REG_RX_EQ1_R_SET_TOP;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[299:298]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_EQ1_R_SET_TOP is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_EQ1_R_SET_TOP);
    }

//initial config body805 end


//initial config body806 begin
    if(CP_LANE1_PMA_REG_RX_EQ1_R_SET_FB >= 0 && CP_LANE1_PMA_REG_RX_EQ1_R_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE1[303:300]  :=  CP_LANE1_PMA_REG_RX_EQ1_R_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[303:300]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_EQ1_R_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE1_PMA_REG_RX_EQ1_R_SET_FB);
    }

//initial config body806 end


//initial config body807 begin
    if(CP_LANE1_PMA_REG_RX_EQ1_C_SET_FB >= 0 && CP_LANE1_PMA_REG_RX_EQ1_C_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE1[307:304]  :=  CP_LANE1_PMA_REG_RX_EQ1_C_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[307:304]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_EQ1_C_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE1_PMA_REG_RX_EQ1_C_SET_FB);
    }

//initial config body807 end


//initial config body808 begin
    if(CP_LANE1_PMA_REG_RX_EQ1_OFF == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[308]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_EQ1_OFF == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[308]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[308]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_EQ1_OFF is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_EQ1_OFF);
    }

//initial config body808 end


//initial config body809 begin
    if(CP_LANE1_PMA_REG_RX_EQ2_R_SET_TOP >= 0 && CP_LANE1_PMA_REG_RX_EQ2_R_SET_TOP <= 3)
    {
        SC_PMA_CH_INT_RX_LANE1[310:309]  :=  CP_LANE1_PMA_REG_RX_EQ2_R_SET_TOP;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[310:309]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_EQ2_R_SET_TOP is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_EQ2_R_SET_TOP);
    }

//initial config body809 end


//initial config body810 begin
    if(CP_LANE1_PMA_REG_RX_EQ2_R_SET_FB >= 0 && CP_LANE1_PMA_REG_RX_EQ2_R_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE1[314:311]  :=  CP_LANE1_PMA_REG_RX_EQ2_R_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[314:311]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_EQ2_R_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE1_PMA_REG_RX_EQ2_R_SET_FB);
    }

//initial config body810 end


//initial config body811 begin
    if(CP_LANE1_PMA_REG_RX_EQ2_C_SET_FB >= 0 && CP_LANE1_PMA_REG_RX_EQ2_C_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE1[318:315]  :=  CP_LANE1_PMA_REG_RX_EQ2_C_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[318:315]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_EQ2_C_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE1_PMA_REG_RX_EQ2_C_SET_FB);
    }

//initial config body811 end


//initial config body812 begin
    if(CP_LANE1_PMA_REG_RX_EQ2_OFF == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[319]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_EQ2_OFF == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[319]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[319]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_EQ2_OFF is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_EQ2_OFF);
    }

//initial config body812 end


//initial config body813 begin
    if(CP_LANE1_PMA_REG_EQ_DAC >= 0 && CP_LANE1_PMA_REG_EQ_DAC <= 63)
    {
        SC_PMA_CH_INT_RX_LANE1[325:320]  :=  CP_LANE1_PMA_REG_EQ_DAC;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[325:320]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_EQ_DAC is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_EQ_DAC);
    }

//initial config body813 end


//initial config body814 begin
    if(CP_LANE1_PMA_REG_RX_ICTRL_EQ >= 0 && CP_LANE1_PMA_REG_RX_ICTRL_EQ <= 3)
    {
        SC_PMA_CH_INT_RX_LANE1[327:326]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_ICTRL_EQ, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[327:326]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_ICTRL_EQ is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_RX_ICTRL_EQ);
    }

//initial config body814 end


//initial config body815 begin
    if(CP_LANE1_PMA_REG_EQ_DC_CALIB_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[328]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_EQ_DC_CALIB_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[328]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[328]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_EQ_DC_CALIB_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_EQ_DC_CALIB_EN);
    }

//initial config body815 end


//initial config body816 begin
    if(CP_LANE1_PMA_REG_EQ_DC_CALIB_SEL == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[329]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_EQ_DC_CALIB_SEL == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[329]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[329]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_EQ_DC_CALIB_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_EQ_DC_CALIB_SEL);
    }

//initial config body816 end


//initial config body817 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_337_330 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_337_330 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE1[337:330]  :=  CP_LANE1_PMA_REG_RX_RESERVED_337_330;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[337:330]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_337_330 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_RX_RESERVED_337_330);
    }

//initial config body817 end


//initial config body818 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_345_338 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_345_338 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE1[345:338]  :=  CP_LANE1_PMA_REG_RX_RESERVED_345_338;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[345:338]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_345_338 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_RX_RESERVED_345_338);
    }

//initial config body818 end


//initial config body819 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_353_346 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_353_346 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE1[353:346]  :=  CP_LANE1_PMA_REG_RX_RESERVED_353_346;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[353:346]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_353_346 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_RX_RESERVED_353_346);
    }

//initial config body819 end


//initial config body820 begin
    if(CP_LANE1_PMA_REG_RX_RESERVED_361_354 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_361_354 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE1[361:354]  :=  CP_LANE1_PMA_REG_RX_RESERVED_361_354;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[361:354]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_361_354 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_RX_RESERVED_361_354);
    }

//initial config body820 end


//initial config body821 begin

 if(CP_LANE1_PMA_CTLE_CTRL_REG_I >= 0 && CP_LANE1_PMA_CTLE_CTRL_REG_I <= 15) 
 {
 SC_PMA_CH_INT_RX_LANE1[365:362]  :=  CP_LANE1_PMA_CTLE_CTRL_REG_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE1[365:362]  :=  0; 
 error("Setting Error : The CP_LANE1_PMA_CTLE_CTRL_REG_I is set to %d. Legal values is 0 to 15",CP_LANE1_PMA_CTLE_CTRL_REG_I); 
}
//}

 //initial//Altered  
 //{
 if(CP_LANE1_PMA_CTLE_REG_FORCE_SEL_I == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE1[366]  :=  1'b0; 
}
else if (CP_LANE1_PMA_CTLE_REG_FORCE_SEL_I == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE1[366]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE1[366]  :=  1'b0; 
 error("Setting Error : The CP_LANE1_PMA_CTLE_REG_FORCE_SEL_I is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_CTLE_REG_FORCE_SEL_I);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE1_PMA_CTLE_REG_HOLD_I == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE1[367]  :=  1'b0; 
}
else if (CP_LANE1_PMA_CTLE_REG_HOLD_I == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE1[367]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE1[367]  :=  1'b0; 
 error("Setting Error : The CP_LANE1_PMA_CTLE_REG_HOLD_I is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_CTLE_REG_HOLD_I);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE1_PMA_CTLE_REG_INIT_DAC_I >= 0 && CP_LANE1_PMA_CTLE_REG_INIT_DAC_I <= 15) 
 {
 SC_PMA_CH_INT_RX_LANE1[371:368]  :=  CP_LANE1_PMA_CTLE_REG_INIT_DAC_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE1[371:368]  :=  0; 
 error("Setting Error : The CP_LANE1_PMA_CTLE_REG_INIT_DAC_I is set to %d. Legal values is 0 to 15",CP_LANE1_PMA_CTLE_REG_INIT_DAC_I); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE1_PMA_CTLE_REG_POLARITY_I == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE1[372]  :=  1'b0; 
}
else if (CP_LANE1_PMA_CTLE_REG_POLARITY_I == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE1[372]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE1[372]  :=  1'b0; 
 error("Setting Error : The CP_LANE1_PMA_CTLE_REG_POLARITY_I is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_CTLE_REG_POLARITY_I);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE1_PMA_CTLE_REG_SHIFTER_GAIN_I >= 0 && CP_LANE1_PMA_CTLE_REG_SHIFTER_GAIN_I <= 7) 
 {
 SC_PMA_CH_INT_RX_LANE1[375:373]  :=  CP_LANE1_PMA_CTLE_REG_SHIFTER_GAIN_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE1[375:373]  :=  0; 
 error("Setting Error : The CP_LANE1_PMA_CTLE_REG_SHIFTER_GAIN_I is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_CTLE_REG_SHIFTER_GAIN_I); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE1_PMA_CTLE_REG_THRESHOLD_I >= 0 && CP_LANE1_PMA_CTLE_REG_THRESHOLD_I <= 4095) 
 {
 SC_PMA_CH_INT_RX_LANE1[387:376]  :=  CP_LANE1_PMA_CTLE_REG_THRESHOLD_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE1[387:376]  :=  0; 
 error("Setting Error : The  is set to %d. Legal values is 0 to 4095",CP_LANE1_PMA_CTLE_REG_THRESHOLD_I); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE1_PMA_REG_RX_RES_TRIM_EN == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE1[388]  :=  1'b0; 
}
else if (CP_LANE1_PMA_REG_RX_RES_TRIM_EN == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE1[388]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE1[388]  :=  1'b0; 
 error("Setting Error : The CP_LANE1_PMA_REG_RX_RES_TRIM_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_RES_TRIM_EN);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE1_PMA_REG_RX_RESERVED_393_389 >= 0 && CP_LANE1_PMA_REG_RX_RESERVED_393_389 <= 31) 
 {
 SC_PMA_CH_INT_RX_LANE1[393:389]  :=  CP_LANE1_PMA_REG_RX_RESERVED_393_389; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE1[393:389]  :=  0; 
 error("Setting Error : The CP_LANE1_PMA_REG_RX_RESERVED_393_389 is set to %d. Legal values is 0 to 31",CP_LANE1_PMA_REG_RX_RESERVED_393_389); 
}

//initial config body821 end


//initial config body822 begin
    if(CP_LANE1_PMA_CFG_RX_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE1[394]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_CFG_RX_LANE_POWERUP == "ON")
    {
        SC_PMA_CH_INT_RX_LANE1[394]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[394]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_CFG_RX_LANE_POWERUP is set to %s. Legal values is OFF,ON",CP_LANE1_PMA_CFG_RX_LANE_POWERUP);
    }

//initial config body822 end


//initial config body823 begin
    if(CP_LANE1_PMA_CFG_RX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[395]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_CFG_RX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[395]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[395]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_CFG_RX_PMA_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_CFG_RX_PMA_RSTN);
    }

//initial config body823 end


//initial config body824 begin
    if(CP_LANE1_PMA_INT_PMA_RX_MASK_0 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[396]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_INT_PMA_RX_MASK_0 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[396]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[396]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_INT_PMA_RX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_INT_PMA_RX_MASK_0);
    }

//initial config body824 end


//initial config body825 begin
    if(CP_LANE1_PMA_INT_PMA_RX_CLR_0 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[397]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_INT_PMA_RX_CLR_0 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[397]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[397]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_INT_PMA_RX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_INT_PMA_RX_CLR_0);
    }

//initial config body825 end


//initial config body826 begin
    if(CP_LANE1_PMA_CFG_CTLE_ADP_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE1[398]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_CFG_CTLE_ADP_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE1[398]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE1[398]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_CFG_CTLE_ADP_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_CFG_CTLE_ADP_RSTN);
    }

//initial config body826 end


//initial config body827 begin
    if(CP_LANE1_PMA_REG_TX_PD == "ON")
    {
        SC_PMA_CH_INT_TX_LANE1[0]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_PD == "OFF")
    {
        SC_PMA_CH_INT_TX_LANE1[0]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[0]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_PD is set to %s. Legal values is ON,OFF",CP_LANE1_PMA_REG_TX_PD);
    }

//initial config body827 end


//initial config body828 begin
    if(CP_LANE1_PMA_REG_TX_PD_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[1]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_TX_PD_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[1]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[1]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_PD_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_PD_OW);
    }

//initial config body828 end


//initial config body829 begin
    if(CP_LANE1_PMA_REG_TX_MAIN_PRE_Z == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[2]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_MAIN_PRE_Z == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[2]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[2]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_MAIN_PRE_Z is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_MAIN_PRE_Z);
    }

//initial config body829 end


//initial config body830 begin
    if(CP_LANE1_PMA_REG_TX_MAIN_PRE_Z_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[3]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_MAIN_PRE_Z_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[3]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[3]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_MAIN_PRE_Z_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_MAIN_PRE_Z_OW);
    }

//initial config body830 end


//initial config body831 begin
    if(CP_LANE1_PMA_REG_TX_BEACON_TIMER_SEL >= 0 && CP_LANE1_PMA_REG_TX_BEACON_TIMER_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE1[5:4]  :=  CP_LANE1_PMA_REG_TX_BEACON_TIMER_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[5:4]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_BEACON_TIMER_SEL is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_TX_BEACON_TIMER_SEL);
    }

//initial config body831 end


//initial config body832 begin
    if(CP_LANE1_PMA_REG_TX_RXDET_REQ_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[6]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RXDET_REQ_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[6]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[6]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RXDET_REQ_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RXDET_REQ_OW);
    }

//initial config body832 end


//initial config body833 begin
    if(CP_LANE1_PMA_REG_TX_RXDET_REQ == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[7]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RXDET_REQ == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[7]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[7]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RXDET_REQ is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RXDET_REQ);
    }

//initial config body833 end


//initial config body834 begin
    if(CP_LANE1_PMA_REG_TX_BEACON_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[8]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_BEACON_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[8]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[8]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_BEACON_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_BEACON_EN_OW);
    }

//initial config body834 end


//initial config body835 begin
    if(CP_LANE1_PMA_REG_TX_BEACON_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[9]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_BEACON_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[9]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[9]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_BEACON_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_BEACON_EN);
    }

//initial config body835 end


//initial config body836 begin
    if(CP_LANE1_PMA_REG_TX_EI_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[10]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_EI_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[10]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[10]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_EI_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_EI_EN_OW);
    }

//initial config body836 end


//initial config body837 begin
    if(CP_LANE1_PMA_REG_TX_EI_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[11]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_EI_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[11]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[11]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_EI_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_EI_EN);
    }

//initial config body837 end


//initial config body838 begin
    if(CP_LANE1_PMA_REG_TX_BIT_CONV == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[12]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_BIT_CONV == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[12]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[12]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_BIT_CONV is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_BIT_CONV);
    }

//initial config body838 end


//initial config body839 begin
    if(CP_LANE1_PMA_REG_TX_RES_CAL >= 0 && CP_LANE1_PMA_REG_TX_RES_CAL <= 63)
    {
        SC_PMA_CH_INT_TX_LANE1[18:13]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_RES_CAL, 6) ^ 6'b110010;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[18:13]   :=  to_unsigned( 0, 6) ^ 6'b110010;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RES_CAL is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_RES_CAL);
    }

//initial config body839 end


//initial config body840 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_19 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[19]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_19 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[19]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[19]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_19 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_19);
    }

//initial config body840 end


//initial config body841 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_25_20 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_25_20 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE1[25:20]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_RESERVED_25_20, 6) ^ 6'b100000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[25:20]   :=  to_unsigned( 0, 6) ^ 6'b100000;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_25_20 is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_RESERVED_25_20);
    }

//initial config body841 end


//initial config body842 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_33_26 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_33_26 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[33:26]  :=  CP_LANE1_PMA_REG_TX_RESERVED_33_26;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[33:26]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_33_26 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_RESERVED_33_26);
    }

//initial config body842 end


//initial config body843 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_41_34 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_41_34 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[41:34]  :=  CP_LANE1_PMA_REG_TX_RESERVED_41_34;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[41:34]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_41_34 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_RESERVED_41_34);
    }

//initial config body843 end


//initial config body844 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_49_42 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_49_42 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[49:42]  :=  CP_LANE1_PMA_REG_TX_RESERVED_49_42;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[49:42]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_49_42 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_RESERVED_49_42);
    }

//initial config body844 end


//initial config body845 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_57_50 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_57_50 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[57:50]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_RESERVED_57_50, 8) ^ 8'b01000000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[57:50]   :=  to_unsigned( 0, 8) ^ 8'b01000000;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_57_50 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_RESERVED_57_50);
    }

//initial config body845 end


//initial config body846 begin
    if(CP_LANE1_PMA_REG_TX_SYNC_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[58]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_SYNC_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[58]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[58]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_SYNC_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_SYNC_OW);
    }

//initial config body846 end


//initial config body847 begin
    if(CP_LANE1_PMA_REG_TX_SYNC == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[59]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_TX_SYNC == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[59]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[59]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_SYNC is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_SYNC);
    }

//initial config body847 end


//initial config body848 begin
    if(CP_LANE1_PMA_REG_TX_PD_POST == "ON")
    {
        SC_PMA_CH_INT_TX_LANE1[60]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_TX_PD_POST == "OFF")
    {
        SC_PMA_CH_INT_TX_LANE1[60]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[60]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_PD_POST is set to %s. Legal values is ON,OFF",CP_LANE1_PMA_REG_TX_PD_POST);
    }

//initial config body848 end


//initial config body849 begin
    if(CP_LANE1_PMA_REG_TX_PD_POST_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[61]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_TX_PD_POST_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[61]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[61]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_PD_POST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_PD_POST_OW);
    }

//initial config body849 end


//initial config body850 begin
    if(CP_LANE1_PMA_REG_TX_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[62]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[62]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[62]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESET_N_OW);
    }

//initial config body850 end


//initial config body851 begin
    if(CP_LANE1_PMA_REG_TX_RESET_N == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[63]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_TX_RESET_N == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[63]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[63]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESET_N is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESET_N);
    }

//initial config body851 end


//initial config body852 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_64 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[64]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_64 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[64]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[64]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_64 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_64);
    }

//initial config body852 end


//initial config body853 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_65 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[65]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_65 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[65]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[65]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_65 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_65);
    }

//initial config body853 end


//initial config body854 begin
    if(CP_LANE1_PMA_REG_TX_BUSWIDTH_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[66]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_BUSWIDTH_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[66]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[66]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_BUSWIDTH_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_BUSWIDTH_OW);
    }

//initial config body854 end


//initial config body855 begin
    if(CP_LANE1_PMA_REG_TX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH_INT_TX_LANE1[69:67]   :=  to_unsigned( 0, 3) ^ 3'b011;
    }
    else if (CP_LANE1_PMA_REG_TX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH_INT_TX_LANE1[69:67]   :=  to_unsigned( 1, 3) ^ 3'b011;
    }
    else if (CP_LANE1_PMA_REG_TX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH_INT_TX_LANE1[69:67]   :=  to_unsigned( 2, 3) ^ 3'b011;
    }
    else if (CP_LANE1_PMA_REG_TX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH_INT_TX_LANE1[69:67]   :=  to_unsigned( 3, 3) ^ 3'b011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[69:67]   :=  to_unsigned( 0, 3) ^ 3'b011;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE1_PMA_REG_TX_BUSWIDTH);
    }

//initial config body855 end


//initial config body856 begin
    if(CP_LANE1_PMA_REG_PLL_READY_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[70]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_PLL_READY_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[70]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[70]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_PLL_READY_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_PLL_READY_OW);
    }

//initial config body856 end


//initial config body857 begin
    if(CP_LANE1_PMA_REG_PLL_READY == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[71]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_PLL_READY == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[71]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[71]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_PLL_READY is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_PLL_READY);
    }

//initial config body857 end


//initial config body858 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_72 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[72]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_72 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[72]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[72]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_72 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_72);
    }

//initial config body858 end


//initial config body859 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_73 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[73]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_73 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[73]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[73]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_73 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_73);
    }

//initial config body859 end


//initial config body860 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_74 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[74]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_74 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[74]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[74]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_74 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_74);
    }

//initial config body860 end


//initial config body861 begin
    if(CP_LANE1_PMA_REG_EI_PCLK_DELAY_SEL >= 0 && CP_LANE1_PMA_REG_EI_PCLK_DELAY_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE1[76:75]  :=  CP_LANE1_PMA_REG_EI_PCLK_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[76:75]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_EI_PCLK_DELAY_SEL is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_EI_PCLK_DELAY_SEL);
    }

//initial config body861 end


//initial config body862 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_77 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[77]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_77 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[77]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[77]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_77 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_77);
    }

//initial config body862 end


//initial config body863 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_83_78 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_83_78 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE1[83:78]  :=  CP_LANE1_PMA_REG_TX_RESERVED_83_78;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[83:78]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_83_78 is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_RESERVED_83_78);
    }

//initial config body863 end


//initial config body864 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_89_84 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_89_84 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE1[89:84]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_RESERVED_89_84, 6) ^ 6'b010101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[89:84]   :=  to_unsigned( 0, 6) ^ 6'b010101;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_89_84 is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_RESERVED_89_84);
    }

//initial config body864 end


//initial config body865 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_95_90 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_95_90 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE1[95:90]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_RESERVED_95_90, 6) ^ 6'b100000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[95:90]   :=  to_unsigned( 0, 6) ^ 6'b100000;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_95_90 is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_RESERVED_95_90);
    }

//initial config body865 end


//initial config body866 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_101_96 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_101_96 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE1[101:96]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_RESERVED_101_96, 6) ^ 6'b111111;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[101:96]   :=  to_unsigned( 0, 6) ^ 6'b111111;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_101_96 is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_RESERVED_101_96);
    }

//initial config body866 end


//initial config body867 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_107_102 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_107_102 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE1[107:102]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_RESERVED_107_102, 6) ^ 6'b110101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[107:102]   :=  to_unsigned( 0, 6) ^ 6'b110101;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_107_102 is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_RESERVED_107_102);
    }

//initial config body867 end


//initial config body868 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_113_108 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_113_108 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE1[113:108]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_RESERVED_113_108, 6) ^ 6'b110000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[113:108]   :=  to_unsigned( 0, 6) ^ 6'b110000;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_113_108 is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_RESERVED_113_108);
    }

//initial config body868 end


//initial config body869 begin
    if(CP_LANE1_PMA_REG_TX_AMP_DAC0 >= 0 && CP_LANE1_PMA_REG_TX_AMP_DAC0 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE1[119:114]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_AMP_DAC0, 6) ^ 6'b011001;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[119:114]   :=  to_unsigned( 0, 6) ^ 6'b011001;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_AMP_DAC0 is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_AMP_DAC0);
    }

//initial config body869 end


//initial config body870 begin

 if(CP_LANE1_PMA_REG_TX_AMP_DAC1 >= 0 && CP_LANE1_PMA_REG_TX_AMP_DAC1 <= 63) 
 {
 SC_PMA_CH_INT_TX_LANE1[125:120]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_AMP_DAC1, 6) ^ 6'b010011; 
}
 else 
 {
 SC_PMA_CH_INT_TX_LANE1[125:120]   :=  to_unsigned( 0, 6) ^ 6'b010011; 
 error("Setting Error : The CP_LANE1_PMA_REG_TX_AMP_DAC1 is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_AMP_DAC1); 
}
//}

 //initial//Altered value 19 to 14
 //{
 if(CP_LANE1_PMA_REG_TX_AMP_DAC2 >= 0 && CP_LANE1_PMA_REG_TX_AMP_DAC2 <= 63) 
 {
 SC_PMA_CH_INT_TX_LANE1[131:126]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_AMP_DAC2, 6) ^ 6'b001110; 
}
 else 
 {
 SC_PMA_CH_INT_TX_LANE1[131:126]   :=  to_unsigned( 0, 6) ^ 6'b001110; 
 error("Setting Error : The CP_LANE1_PMA_REG_TX_AMP_DAC2 is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_AMP_DAC2); 
}

//initial config body870 end


//initial config body871 begin
    if(CP_LANE1_PMA_REG_TX_AMP_DAC3 >= 0 && CP_LANE1_PMA_REG_TX_AMP_DAC3 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE1[137:132]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_AMP_DAC3, 6) ^ 6'b001001;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[137:132]   :=  to_unsigned( 0, 6) ^ 6'b001001;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_AMP_DAC3 is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_AMP_DAC3);
    }

//initial config body871 end


//initial config body872 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_143_138 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_143_138 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE1[143:138]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_RESERVED_143_138, 6) ^ 6'b000101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[143:138]   :=  to_unsigned( 0, 6) ^ 6'b000101;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_143_138 is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_RESERVED_143_138);
    }

//initial config body872 end


//initial config body873 begin
    if(CP_LANE1_PMA_REG_TX_MARGIN >= 0 && CP_LANE1_PMA_REG_TX_MARGIN <= 7)
    {
        SC_PMA_CH_INT_TX_LANE1[146:144]  :=  CP_LANE1_PMA_REG_TX_MARGIN;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[146:144]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_MARGIN is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_REG_TX_MARGIN);
    }

//initial config body873 end


//initial config body874 begin
    if(CP_LANE1_PMA_REG_TX_MARGIN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[147]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_MARGIN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[147]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[147]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_MARGIN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_MARGIN_OW);
    }

//initial config body874 end


//initial config body875 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_149_148 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_149_148 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE1[149:148]  :=  CP_LANE1_PMA_REG_TX_RESERVED_149_148;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[149:148]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_149_148 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_TX_RESERVED_149_148);
    }

//initial config body875 end


//initial config body876 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_150 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[150]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_150 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[150]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[150]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_150 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_150);
    }

//initial config body876 end


//initial config body877 begin
    if(CP_LANE1_PMA_REG_TX_SWING == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[151]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_SWING == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[151]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[151]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_SWING is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_SWING);
    }

//initial config body877 end


//initial config body878 begin
    if(CP_LANE1_PMA_REG_TX_SWING_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[152]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_SWING_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[152]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[152]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_SWING_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_SWING_OW);
    }

//initial config body878 end


//initial config body879 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_153 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[153]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_153 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[153]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[153]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_153 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_153);
    }

//initial config body879 end


//initial config body880 begin
    if(CP_LANE1_PMA_REG_TX_RXDET_THRESHOLD == "28MV")
    {
        SC_PMA_CH_INT_TX_LANE1[155:154]   :=  to_unsigned( 0, 2) ^ 2'b10;
    }
    else if (CP_LANE1_PMA_REG_TX_RXDET_THRESHOLD == "56MV")
    {
        SC_PMA_CH_INT_TX_LANE1[155:154]   :=  to_unsigned( 1, 2) ^ 2'b10;
    }
    else if (CP_LANE1_PMA_REG_TX_RXDET_THRESHOLD == "84MV")
    {
        SC_PMA_CH_INT_TX_LANE1[155:154]   :=  to_unsigned( 2, 2) ^ 2'b10;
    }
    else if (CP_LANE1_PMA_REG_TX_RXDET_THRESHOLD == "112MV")
    {
        SC_PMA_CH_INT_TX_LANE1[155:154]   :=  to_unsigned( 3, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[155:154]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RXDET_THRESHOLD is set to %s. Legal values is 28MV,56MV,84MV,112MV",CP_LANE1_PMA_REG_TX_RXDET_THRESHOLD);
    }

//initial config body880 end


//initial config body881 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_157_156 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_157_156 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE1[157:156]  :=  CP_LANE1_PMA_REG_TX_RESERVED_157_156;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[157:156]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_157_156 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_TX_RESERVED_157_156);
    }

//initial config body881 end


//initial config body882 begin
    if(CP_LANE1_PMA_REG_TX_BEACON_OSC_CTRL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[158]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_BEACON_OSC_CTRL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[158]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[158]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_BEACON_OSC_CTRL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_BEACON_OSC_CTRL);
    }

//initial config body882 end


//initial config body883 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_160_159 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_160_159 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE1[160:159]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_RESERVED_160_159, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[160:159]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_160_159 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_TX_RESERVED_160_159);
    }

//initial config body883 end


//initial config body884 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_162_161 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_162_161 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE1[162:161]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_RESERVED_162_161, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[162:161]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_162_161 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_TX_RESERVED_162_161);
    }

//initial config body884 end


//initial config body885 begin
    if(CP_LANE1_PMA_REG_TX_TX2RX_SLPBACK_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[163]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_TX2RX_SLPBACK_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[163]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[163]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_TX2RX_SLPBACK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_TX2RX_SLPBACK_EN);
    }

//initial config body885 end


//initial config body886 begin
    if(CP_LANE1_PMA_REG_TX_PCLK_EDGE_SEL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[164]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_PCLK_EDGE_SEL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[164]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[164]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_PCLK_EDGE_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_PCLK_EDGE_SEL);
    }

//initial config body886 end


//initial config body887 begin
    if(CP_LANE1_PMA_REG_TX_RXDET_STATUS_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[165]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RXDET_STATUS_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[165]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[165]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RXDET_STATUS_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RXDET_STATUS_OW);
    }

//initial config body887 end


//initial config body888 begin
    if(CP_LANE1_PMA_REG_TX_RXDET_STATUS == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[166]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_TX_RXDET_STATUS == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[166]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[166]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RXDET_STATUS is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RXDET_STATUS);
    }

//initial config body888 end


//initial config body889 begin
    if(CP_LANE1_PMA_REG_TX_PRBS_GEN_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[167]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_PRBS_GEN_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[167]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[167]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_PRBS_GEN_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_PRBS_GEN_EN);
    }

//initial config body889 end


//initial config body890 begin
    if(CP_LANE1_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH_INT_TX_LANE1[169:168]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE1_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH_INT_TX_LANE1[169:168]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE1_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH_INT_TX_LANE1[169:168]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE1_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH_INT_TX_LANE1[169:168]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[169:168]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_PRBS_GEN_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE1_PMA_REG_TX_PRBS_GEN_WIDTH_SEL);
    }

//initial config body890 end


//initial config body891 begin
    if(CP_LANE1_PMA_REG_TX_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH_INT_TX_LANE1[171:170]  :=  2'b00;
    }
    else if (CP_LANE1_PMA_REG_TX_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH_INT_TX_LANE1[171:170]  :=  2'b01;
    }
    else if (CP_LANE1_PMA_REG_TX_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH_INT_TX_LANE1[171:170]  :=  2'b10;
    }
    else if (CP_LANE1_PMA_REG_TX_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH_INT_TX_LANE1[171:170]  :=  2'b11;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[171:170]  :=  2'b00;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_LANE1_PMA_REG_TX_PRBS_SEL);
    }

//initial config body891 end


//initial config body892 begin
    if(CP_LANE1_PMA_REG_TX_UDP_DATA_7_TO_0 >= 0 && CP_LANE1_PMA_REG_TX_UDP_DATA_7_TO_0 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[179:172]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_UDP_DATA_7_TO_0, 8) ^ 8'b00000101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[179:172]   :=  to_unsigned( 0, 8) ^ 8'b00000101;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_UDP_DATA_7_TO_0 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_UDP_DATA_7_TO_0);
    }

//initial config body892 end


//initial config body893 begin
    if(CP_LANE1_PMA_REG_TX_UDP_DATA_15_TO_8 >= 0 && CP_LANE1_PMA_REG_TX_UDP_DATA_15_TO_8 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[187:180]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_UDP_DATA_15_TO_8, 8) ^ 8'b11101011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[187:180]   :=  to_unsigned( 0, 8) ^ 8'b11101011;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_UDP_DATA_15_TO_8 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_UDP_DATA_15_TO_8);
    }

//initial config body893 end


//initial config body894 begin
    if(CP_LANE1_PMA_REG_TX_UDP_DATA_19_TO_16 >= 0 && CP_LANE1_PMA_REG_TX_UDP_DATA_19_TO_16 <= 15)
    {
        SC_PMA_CH_INT_TX_LANE1[191:188]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_UDP_DATA_19_TO_16, 4) ^ 4'b0011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[191:188]   :=  to_unsigned( 0, 4) ^ 4'b0011;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_UDP_DATA_19_TO_16 is set to %d. Legal values is 0 to 15",CP_LANE1_PMA_REG_TX_UDP_DATA_19_TO_16);
    }

//initial config body894 end


//initial config body895 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_192 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[192]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_192 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[192]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[192]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_192 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_192);
    }

//initial config body895 end


//initial config body896 begin
    if(CP_LANE1_PMA_REG_TX_FIFO_WP_CTRL >= 0 && CP_LANE1_PMA_REG_TX_FIFO_WP_CTRL <= 7)
    {
        SC_PMA_CH_INT_TX_LANE1[195:193]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_FIFO_WP_CTRL, 3) ^ 3'b010;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[195:193]   :=  to_unsigned( 0, 3) ^ 3'b010;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_FIFO_WP_CTRL is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_REG_TX_FIFO_WP_CTRL);
    }

//initial config body896 end


//initial config body897 begin
    if(CP_LANE1_PMA_REG_TX_FIFO_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[196]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_FIFO_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[196]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[196]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_FIFO_EN);
    }

//initial config body897 end


//initial config body898 begin
    if(CP_LANE1_PMA_REG_TX_DATA_MUX_SEL >= 0 && CP_LANE1_PMA_REG_TX_DATA_MUX_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE1[198:197]  :=  CP_LANE1_PMA_REG_TX_DATA_MUX_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[198:197]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_DATA_MUX_SEL is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_TX_DATA_MUX_SEL);
    }

//initial config body898 end


//initial config body899 begin
    if(CP_LANE1_PMA_REG_TX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[199]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[199]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[199]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_ERR_INSERT is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_ERR_INSERT);
    }

//initial config body899 end


//initial config body900 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_203_200 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_203_200 <= 15)
    {
        SC_PMA_CH_INT_TX_LANE1[203:200]  :=  CP_LANE1_PMA_REG_TX_RESERVED_203_200;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[203:200]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_203_200 is set to %d. Legal values is 0 to 15",CP_LANE1_PMA_REG_TX_RESERVED_203_200);
    }

//initial config body900 end


//initial config body901 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_204 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[204]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_204 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[204]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[204]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_204 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_204);
    }

//initial config body901 end


//initial config body902 begin
    if(CP_LANE1_PMA_REG_TX_SATA_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[205]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_SATA_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[205]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[205]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_SATA_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_SATA_EN);
    }

//initial config body902 end


//initial config body903 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_207_206 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_207_206 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE1[207:206]  :=  CP_LANE1_PMA_REG_TX_RESERVED_207_206;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[207:206]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_207_206 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_TX_RESERVED_207_206);
    }

//initial config body903 end


//initial config body904 begin
    if(CP_LANE1_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[208]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[208]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[208]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW);
    }

//initial config body904 end


//initial config body905 begin
    if(CP_LANE1_PMA_REG_RATE_CHANGE_TXPCLK_ON == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[209]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_RATE_CHANGE_TXPCLK_ON == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[209]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[209]  :=  1'b0^1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RATE_CHANGE_TXPCLK_ON is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RATE_CHANGE_TXPCLK_ON);
    }

//initial config body905 end


//initial config body906 begin
    if(CP_LANE1_PMA_REG_TX_CFG_POST1 >= 0 && CP_LANE1_PMA_REG_TX_CFG_POST1 <= 31)
    {
        SC_PMA_CH_INT_TX_LANE1[214:210]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_CFG_POST1, 5) ^ 5'b11000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[214:210]   :=  to_unsigned( 0, 5) ^ 5'b11000;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_CFG_POST1 is set to %d. Legal values is 0 to 31",CP_LANE1_PMA_REG_TX_CFG_POST1);
    }

//initial config body906 end


//initial config body907 begin
    if(CP_LANE1_PMA_REG_TX_CFG_POST2 >= 0 && CP_LANE1_PMA_REG_TX_CFG_POST2 <= 31)
    {
        SC_PMA_CH_INT_TX_LANE1[219:215]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_CFG_POST2, 5) ^ 5'b10011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[219:215]   :=  to_unsigned( 0, 5) ^ 5'b10011;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_CFG_POST2 is set to %d. Legal values is 0 to 31",CP_LANE1_PMA_REG_TX_CFG_POST2);
    }

//initial config body907 end


//initial config body908 begin
    if(CP_LANE1_PMA_REG_TX_DEEMP >= 0 && CP_LANE1_PMA_REG_TX_DEEMP <= 3)
    {
        SC_PMA_CH_INT_TX_LANE1[221:220]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_DEEMP, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[221:220]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_DEEMP is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_TX_DEEMP);
    }

//initial config body908 end


//initial config body909 begin
    if(CP_LANE1_PMA_REG_TX_DEEMP_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[222]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_TX_DEEMP_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[222]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[222]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_DEEMP_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_DEEMP_OW);
    }

//initial config body909 end


//initial config body910 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_224_223 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_224_223 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE1[224:223]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_RESERVED_224_223, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[224:223]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_224_223 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_TX_RESERVED_224_223);
    }

//initial config body910 end


//initial config body911 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_225 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[225]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_225 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[225]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[225]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_225 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_225);
    }

//initial config body911 end


//initial config body912 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_229_226 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_229_226 <= 15)
    {
        SC_PMA_CH_INT_TX_LANE1[229:226]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_RESERVED_229_226, 4) ^ 4'b0100;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[229:226]   :=  to_unsigned( 0, 4) ^ 4'b0100;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_229_226 is set to %d. Legal values is 0 to 15",CP_LANE1_PMA_REG_TX_RESERVED_229_226);
    }

//initial config body912 end


//initial config body913 begin
    if(CP_LANE1_PMA_REG_TX_OOB_DELAY_SEL >= 0 && CP_LANE1_PMA_REG_TX_OOB_DELAY_SEL <= 15)
    {
        SC_PMA_CH_INT_TX_LANE1[233:230]  :=  CP_LANE1_PMA_REG_TX_OOB_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[233:230]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_OOB_DELAY_SEL is set to %d. Legal values is 0 to 15",CP_LANE1_PMA_REG_TX_OOB_DELAY_SEL);
    }

//initial config body913 end


//initial config body914 begin
    if(CP_LANE1_PMA_REG_TX_POLARITY == "NORMAL")
    {
        SC_PMA_CH_INT_TX_LANE1[234]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_POLARITY == "REVERSE")
    {
        SC_PMA_CH_INT_TX_LANE1[234]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[234]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_LANE1_PMA_REG_TX_POLARITY);
    }

//initial config body914 end


//initial config body915 begin
    if(CP_LANE1_PMA_REG_ANA_TX_JTAG_DATA_O_SEL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[235]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_ANA_TX_JTAG_DATA_O_SEL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[235]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[235]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_ANA_TX_JTAG_DATA_O_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_ANA_TX_JTAG_DATA_O_SEL);
    }

//initial config body915 end


//initial config body916 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_236 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[236]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_236 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[236]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[236]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_236 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_236);
    }

//initial config body916 end


//initial config body917 begin
    if(CP_LANE1_PMA_REG_TX_LS_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[237]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_LS_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[237]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[237]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_LS_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_LS_MODE_EN);
    }

//initial config body917 end


//initial config body918 begin
    if(CP_LANE1_PMA_REG_TX_JTAG_MODE_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[238]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_JTAG_MODE_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[238]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[238]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_JTAG_MODE_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_JTAG_MODE_EN_OW);
    }

//initial config body918 end


//initial config body919 begin
    if(CP_LANE1_PMA_REG_TX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[239]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[239]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[239]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_JTAG_MODE_EN);
    }

//initial config body919 end


//initial config body920 begin
    if(CP_LANE1_PMA_REG_RX_JTAG_MODE_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[240]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_JTAG_MODE_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[240]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[240]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_JTAG_MODE_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_JTAG_MODE_EN_OW);
    }

//initial config body920 end


//initial config body921 begin
    if(CP_LANE1_PMA_REG_RX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[241]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_RX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[241]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[241]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_JTAG_MODE_EN);
    }

//initial config body921 end


//initial config body922 begin
    if(CP_LANE1_PMA_REG_RX_JTAG_OE == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[242]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_RX_JTAG_OE == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[242]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[242]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_JTAG_OE is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_RX_JTAG_OE);
    }

//initial config body922 end


//initial config body923 begin
    if(CP_LANE1_PMA_REG_RX_ACJTAG_VHYSTSEL >= 0 && CP_LANE1_PMA_REG_RX_ACJTAG_VHYSTSEL <= 7)
    {
        SC_PMA_CH_INT_TX_LANE1[245:243]  :=  CP_LANE1_PMA_REG_RX_ACJTAG_VHYSTSEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[245:243]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_ACJTAG_VHYSTSEL is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_REG_RX_ACJTAG_VHYSTSEL);
    }

//initial config body923 end


//initial config body924 begin
    if(CP_LANE1_PMA_REG_TX_RES_CAL_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[246]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RES_CAL_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[246]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[246]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RES_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RES_CAL_EN);
    }

//initial config body924 end


//initial config body925 begin
    if(CP_LANE1_PMA_REG_RX_TERM_MODE_CTRL >= 0 && CP_LANE1_PMA_REG_RX_TERM_MODE_CTRL <= 7)
    {
        SC_PMA_CH_INT_TX_LANE1[249:247]   :=  to_unsigned( CP_LANE1_PMA_REG_RX_TERM_MODE_CTRL, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[249:247]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE1_PMA_REG_RX_TERM_MODE_CTRL is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_REG_RX_TERM_MODE_CTRL);
    }

//initial config body925 end


//initial config body926 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_251_250 >= 0 && CP_LANE1_PMA_REG_TX_RESERVED_251_250 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE1[251:250]  :=  CP_LANE1_PMA_REG_TX_RESERVED_251_250;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[251:250]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_251_250 is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_TX_RESERVED_251_250);
    }

//initial config body926 end


//initial config body927 begin
    if(CP_LANE1_PMA_REG_PLPBK_TXPCLK_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[252]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_PLPBK_TXPCLK_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[252]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[252]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_PLPBK_TXPCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_PLPBK_TXPCLK_EN);
    }

//initial config body927 end


//initial config body928 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_253 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[253]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_253 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[253]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[253]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_253 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_253);
    }

//initial config body928 end


//initial config body929 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_254 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[254]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_254 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[254]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[254]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_254 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_254);
    }

//initial config body929 end


//initial config body930 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_255 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[255]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_255 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[255]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[255]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_255 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_255);
    }

//initial config body930 end


//initial config body931 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_256 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[256]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_256 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[256]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[256]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_256 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_256);
    }

//initial config body931 end


//initial config body932 begin
    if(CP_LANE1_PMA_REG_TX_RESERVED_257 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[257]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_RESERVED_257 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[257]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[257]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RESERVED_257 is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_RESERVED_257);
    }

//initial config body932 end


//initial config body933 begin
    if(CP_LANE1_PMA_REG_TX_PH_SEL >= 0 && CP_LANE1_PMA_REG_TX_PH_SEL <= 63)
    {
        SC_PMA_CH_INT_TX_LANE1[263:258]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_PH_SEL, 6) ^ 6'b000001;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[263:258]   :=  to_unsigned( 0, 6) ^ 6'b000001;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_PH_SEL is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_PH_SEL);
    }

//initial config body933 end


//initial config body934 begin
    if(CP_LANE1_PMA_REG_TX_CFG_PRE  >= 0 && CP_LANE1_PMA_REG_TX_CFG_PRE  <= 31)
    {
        SC_PMA_CH_INT_TX_LANE1[268:264]  :=  CP_LANE1_PMA_REG_TX_CFG_PRE;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[268:264]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_CFG_PRE  is set to %d. Legal values is 0 to 31",CP_LANE1_PMA_REG_TX_CFG_PRE );
    }

//initial config body934 end


//initial config body935 begin
    if(CP_LANE1_PMA_REG_TX_CFG_MAIN >= 0 && CP_LANE1_PMA_REG_TX_CFG_MAIN <= 63)
    {
        SC_PMA_CH_INT_TX_LANE1[274:269]  :=  CP_LANE1_PMA_REG_TX_CFG_MAIN;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[274:269]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_CFG_MAIN is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_CFG_MAIN);
    }

//initial config body935 end


//initial config body936 begin
    if(CP_LANE1_PMA_REG_CFG_POST >= 0 && CP_LANE1_PMA_REG_CFG_POST <= 31)
    {
        SC_PMA_CH_INT_TX_LANE1[279:275]  :=  CP_LANE1_PMA_REG_CFG_POST;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[279:275]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_CFG_POST is set to %d. Legal values is 0 to 31",CP_LANE1_PMA_REG_CFG_POST);
    }

//initial config body936 end


//initial config body937 begin
    if(CP_LANE1_PMA_REG_PD_MAIN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[280]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_PD_MAIN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[280]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[280]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_PD_MAIN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_PD_MAIN);
    }

//initial config body937 end


//initial config body938 begin
    if(CP_LANE1_PMA_REG_PD_PRE == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[281]  :=  1'b0^1'b1;
    }
    else if (CP_LANE1_PMA_REG_PD_PRE == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[281]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[281]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE1_PMA_REG_PD_PRE is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_PD_PRE);
    }

//initial config body938 end


//initial config body939 begin
    if(CP_LANE1_PMA_REG_TX_LS_DATA == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[282]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_LS_DATA == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[282]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[282]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_LS_DATA is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_LS_DATA);
    }

//initial config body939 end


//initial config body940 begin
    if(CP_LANE1_PMA_REG_TX_DCC_BUF_SZ_SEL >= 0 && CP_LANE1_PMA_REG_TX_DCC_BUF_SZ_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE1[284:283]  :=  CP_LANE1_PMA_REG_TX_DCC_BUF_SZ_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[284:283]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_DCC_BUF_SZ_SEL is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_TX_DCC_BUF_SZ_SEL);
    }

//initial config body940 end


//initial config body941 begin
    if(CP_LANE1_PMA_REG_TX_DCC_CAL_CUR_TUNE >= 0 && CP_LANE1_PMA_REG_TX_DCC_CAL_CUR_TUNE <= 63)
    {
        SC_PMA_CH_INT_TX_LANE1[290:285]  :=  CP_LANE1_PMA_REG_TX_DCC_CAL_CUR_TUNE;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[290:285]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_DCC_CAL_CUR_TUNE is set to %d. Legal values is 0 to 63",CP_LANE1_PMA_REG_TX_DCC_CAL_CUR_TUNE);
    }

//initial config body941 end


//initial config body942 begin
    if(CP_LANE1_PMA_REG_TX_DCC_CAL_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[291]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_DCC_CAL_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[291]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[291]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_DCC_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_DCC_CAL_EN);
    }

//initial config body942 end


//initial config body943 begin
    if(CP_LANE1_PMA_REG_TX_DCC_CUR_SS >= 0 && CP_LANE1_PMA_REG_TX_DCC_CUR_SS <= 3)
    {
        SC_PMA_CH_INT_TX_LANE1[293:292]  :=  CP_LANE1_PMA_REG_TX_DCC_CUR_SS;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[293:292]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_DCC_CUR_SS is set to %d. Legal values is 0 to 3",CP_LANE1_PMA_REG_TX_DCC_CUR_SS);
    }

//initial config body943 end


//initial config body944 begin
    if(CP_LANE1_PMA_REG_TX_DCC_FA_CTRL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[294]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_DCC_FA_CTRL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[294]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[294]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_DCC_FA_CTRL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_DCC_FA_CTRL);
    }

//initial config body944 end


//initial config body945 begin
    if(CP_LANE1_PMA_REG_TX_DCC_RI_CTRL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[295]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_DCC_RI_CTRL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[295]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[295]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_DCC_RI_CTRL is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_DCC_RI_CTRL);
    }

//initial config body945 end


//initial config body946 begin
    if(CP_LANE1_PMA_REG_ATB_SEL_2_TO_0 >= 0 && CP_LANE1_PMA_REG_ATB_SEL_2_TO_0 <= 7)
    {
        SC_PMA_CH_INT_TX_LANE1[298:296]  :=  CP_LANE1_PMA_REG_ATB_SEL_2_TO_0;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[298:296]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_ATB_SEL_2_TO_0 is set to %d. Legal values is 0 to 7",CP_LANE1_PMA_REG_ATB_SEL_2_TO_0);
    }

//initial config body946 end


//initial config body947 begin
    if(CP_LANE1_PMA_REG_ATB_SEL_9_TO_3 >= 0 && CP_LANE1_PMA_REG_ATB_SEL_9_TO_3 <= 127)
    {
        SC_PMA_CH_INT_TX_LANE1[305:299]  :=  CP_LANE1_PMA_REG_ATB_SEL_9_TO_3;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[305:299]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_ATB_SEL_9_TO_3 is set to %d. Legal values is 0 to 127",CP_LANE1_PMA_REG_ATB_SEL_9_TO_3);
    }

//initial config body947 end


//initial config body948 begin
    if(CP_LANE1_PMA_REG_TX_CFG_7_TO_0 >= 0 && CP_LANE1_PMA_REG_TX_CFG_7_TO_0 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[313:306]  :=  CP_LANE1_PMA_REG_TX_CFG_7_TO_0;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[313:306]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_CFG_7_TO_0 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_CFG_7_TO_0);
    }

//initial config body948 end


//initial config body949 begin
    if(CP_LANE1_PMA_REG_TX_CFG_15_TO_8 >= 0 && CP_LANE1_PMA_REG_TX_CFG_15_TO_8 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[321:314]  :=  CP_LANE1_PMA_REG_TX_CFG_15_TO_8;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[321:314]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_CFG_15_TO_8 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_CFG_15_TO_8);
    }

//initial config body949 end


//initial config body950 begin
    if(CP_LANE1_PMA_REG_TX_CFG_23_TO_16 >= 0 && CP_LANE1_PMA_REG_TX_CFG_23_TO_16 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[329:322]  :=  CP_LANE1_PMA_REG_TX_CFG_23_TO_16;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[329:322]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_CFG_23_TO_16 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_CFG_23_TO_16);
    }

//initial config body950 end


//initial config body951 begin
    if(CP_LANE1_PMA_REG_TX_CFG_31_TO_24 >= 0 && CP_LANE1_PMA_REG_TX_CFG_31_TO_24 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[337:330]  :=  CP_LANE1_PMA_REG_TX_CFG_31_TO_24;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[337:330]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_CFG_31_TO_24 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_CFG_31_TO_24);
    }

//initial config body951 end


//initial config body952 begin
    if(CP_LANE1_PMA_REG_TX_OOB_EI_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[338]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_OOB_EI_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[338]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[338]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_OOB_EI_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_OOB_EI_EN);
    }

//initial config body952 end


//initial config body953 begin
    if(CP_LANE1_PMA_REG_TX_OOB_EI_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[339]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_OOB_EI_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[339]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[339]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_OOB_EI_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_OOB_EI_EN_OW);
    }

//initial config body953 end


//initial config body954 begin
    if(CP_LANE1_PMA_REG_TX_BEACON_EN_DELAYED == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[340]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_BEACON_EN_DELAYED == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[340]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[340]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_BEACON_EN_DELAYED is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_BEACON_EN_DELAYED);
    }

//initial config body954 end


//initial config body955 begin
    if(CP_LANE1_PMA_REG_TX_BEACON_EN_DELAYED_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[341]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_BEACON_EN_DELAYED_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[341]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[341]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_BEACON_EN_DELAYED_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_BEACON_EN_DELAYED_OW);
    }

//initial config body955 end


//initial config body956 begin
    if(CP_LANE1_PMA_REG_TX_JTAG_DATA == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[342]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_TX_JTAG_DATA == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[342]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[342]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_JTAG_DATA is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_TX_JTAG_DATA);
    }

//initial config body956 end


//initial config body957 begin
    if(CP_LANE1_PMA_REG_TX_RXDET_TIMER_SEL >= 0 && CP_LANE1_PMA_REG_TX_RXDET_TIMER_SEL <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[350:343]   :=  to_unsigned( CP_LANE1_PMA_REG_TX_RXDET_TIMER_SEL, 8) ^ 8'b01010111;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[350:343]   :=  to_unsigned( 0, 8) ^ 8'b01010111;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_RXDET_TIMER_SEL is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_RXDET_TIMER_SEL);
    }

//initial config body957 end


//initial config body958 begin
    if(CP_LANE1_PMA_REG_TX_CFG1_7_0 >= 0 && CP_LANE1_PMA_REG_TX_CFG1_7_0 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[358:351]  :=  CP_LANE1_PMA_REG_TX_CFG1_7_0;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[358:351]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_CFG1_7_0 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_CFG1_7_0);
    }

//initial config body958 end


//initial config body959 begin
    if(CP_LANE1_PMA_REG_TX_CFG1_15_8 >= 0 && CP_LANE1_PMA_REG_TX_CFG1_15_8 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[366:359]  :=  CP_LANE1_PMA_REG_TX_CFG1_15_8;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[366:359]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_CFG1_15_8 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_CFG1_15_8);
    }

//initial config body959 end


//initial config body960 begin
    if(CP_LANE1_PMA_REG_TX_CFG1_23_16 >= 0 && CP_LANE1_PMA_REG_TX_CFG1_23_16 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[374:367]  :=  CP_LANE1_PMA_REG_TX_CFG1_23_16;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[374:367]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_CFG1_23_16 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_CFG1_23_16);
    }

//initial config body960 end


//initial config body961 begin
    if(CP_LANE1_PMA_REG_TX_CFG1_31_24 >= 0 && CP_LANE1_PMA_REG_TX_CFG1_31_24 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE1[382:375]  :=  CP_LANE1_PMA_REG_TX_CFG1_31_24;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[382:375]  :=  0;
        error("Setting Error : The CP_LANE1_PMA_REG_TX_CFG1_31_24 is set to %d. Legal values is 0 to 255",CP_LANE1_PMA_REG_TX_CFG1_31_24);
    }

//initial config body961 end


//initial config body962 begin
    if(CP_LANE1_PMA_REG_CFG_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH_INT_TX_LANE1[383]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CFG_LANE_POWERUP == "ON")
    {
        SC_PMA_CH_INT_TX_LANE1[383]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[383]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CFG_LANE_POWERUP is set to %s. Legal values is OFF,ON",CP_LANE1_PMA_REG_CFG_LANE_POWERUP);
    }

//initial config body962 end


//initial config body963 begin
    if(CP_LANE1_PMA_REG_CFG_PMA_POR_N == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[384]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CFG_PMA_POR_N == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[384]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[384]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CFG_PMA_POR_N is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CFG_PMA_POR_N);
    }

//initial config body963 end


//initial config body964 begin
    if(CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[385]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[385]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[385]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH);
    }

//initial config body964 end


//initial config body965 begin
    if(CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_PISO == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[386]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_PISO == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[386]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[386]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_PISO is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_PISO);
    }

//initial config body965 end


//initial config body966 begin
    if(CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[387]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[387]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[387]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER);
    }

//initial config body966 end


//initial config body967 begin
    if(CP_LANE1_PMA_REG_CFG_TX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE1[388]  :=  1'b0;
    }
    else if (CP_LANE1_PMA_REG_CFG_TX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE1[388]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE1[388]  :=  1'b0;
        error("Setting Error : The CP_LANE1_PMA_REG_CFG_TX_PMA_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE1_PMA_REG_CFG_TX_PMA_RSTN);
    }

//initial config body967 end


//initial config body968 begin
    if(CP_LANE2_PCS_BYPASS_WORD_ALIGN == "FALSE")
    {
        SC_PCS_CH_INT_2[1]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_BYPASS_WORD_ALIGN == "TRUE")
    {
        SC_PCS_CH_INT_2[1]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[1]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_BYPASS_WORD_ALIGN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_BYPASS_WORD_ALIGN);
    }

//initial config body968 end


//initial config body969 begin
    if(CP_LANE2_PCS_BYPASS_DENC == "FALSE")
    {
        SC_PCS_CH_INT_2[2]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_BYPASS_DENC == "TRUE")
    {
        SC_PCS_CH_INT_2[2]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[2]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_BYPASS_DENC is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_BYPASS_DENC);
    }

//initial config body969 end


//initial config body970 begin
    if(CP_LANE2_PCS_BYPASS_BONDING == "FALSE")
    {
        SC_PCS_CH_INT_2[3]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_BYPASS_BONDING == "TRUE")
    {
        SC_PCS_CH_INT_2[3]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[3]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_BYPASS_BONDING is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_BYPASS_BONDING);
    }

//initial config body970 end


//initial config body971 begin
    if(CP_LANE2_PCS_BYPASS_CTC == "FALSE")
    {
        SC_PCS_CH_INT_2[4]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_BYPASS_CTC == "TRUE")
    {
        SC_PCS_CH_INT_2[4]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[4]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_BYPASS_CTC is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_BYPASS_CTC);
    }

//initial config body971 end


//initial config body972 begin
    if(CP_LANE2_PCS_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH_INT_2[5]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH_INT_2[5]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[5]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_BYPASS_GEAR);
    }

//initial config body972 end


//initial config body973 begin
    if(CP_LANE2_PCS_BYPASS_BRIDGE == "FALSE")
    {
        SC_PCS_CH_INT_2[6]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_BYPASS_BRIDGE == "TRUE")
    {
        SC_PCS_CH_INT_2[6]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[6]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_BYPASS_BRIDGE is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_BYPASS_BRIDGE);
    }

//initial config body973 end


//initial config body974 begin
    if(CP_LANE2_PCS_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH_INT_2[7]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH_INT_2[7]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[7]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_BYPASS_BRIDGE_FIFO);
    }

//initial config body974 end


//initial config body975 begin
    if(CP_LANE2_PCS_DATA_MODE == "X8")
    {
        SC_PCS_CH_INT_2[8]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_DATA_MODE == "X10")
    {
        SC_PCS_CH_INT_2[8]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_DATA_MODE == "X16")
    {
        SC_PCS_CH_INT_2[8]  :=  1'b1;
    }
    else if (CP_LANE2_PCS_DATA_MODE == "X20")
    {
        SC_PCS_CH_INT_2[8]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[8]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_DATA_MODE is set to %s. Legal values is X8,X10,X16,X20",CP_LANE2_PCS_DATA_MODE);
    }

//initial config body975 end


//initial config body976 begin
    if(CP_LANE2_PCS_RX_POLARITY_INV == "DELAY")
    {
        SC_PCS_CH_INT_2[10:9]  :=  2'b00;
    }
    else if (CP_LANE2_PCS_RX_POLARITY_INV == "BIT_POLARITY_INVERION")
    {
        SC_PCS_CH_INT_2[10:9]  :=  2'b01;
    }
    else if (CP_LANE2_PCS_RX_POLARITY_INV == "BIT_REVERSAL")
    {
        SC_PCS_CH_INT_2[10:9]  :=  2'b10;
    }
    else if (CP_LANE2_PCS_RX_POLARITY_INV == "BOTH")
    {
        SC_PCS_CH_INT_2[10:9]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_2[10:9]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PCS_RX_POLARITY_INV is set to %s. Legal values is DELAY,BIT_POLARITY_INVERION,BIT_REVERSAL,BOTH",CP_LANE2_PCS_RX_POLARITY_INV);
    }

//initial config body976 end


//initial config body977 begin
    if(CP_LANE2_PCS_ALIGN_MODE == "1GB")
    {
        SC_PCS_CH_INT_2[12:11]  :=  2'b00;
    }
    else if (CP_LANE2_PCS_ALIGN_MODE == "10GB")
    {
        SC_PCS_CH_INT_2[12:11]  :=  2'b01;
    }
    else if (CP_LANE2_PCS_ALIGN_MODE == "RAPIDIO")
    {
        SC_PCS_CH_INT_2[12:11]  :=  2'b10;
    }
    else if (CP_LANE2_PCS_ALIGN_MODE == "OUTSIDE")
    {
        SC_PCS_CH_INT_2[12:11]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_2[12:11]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PCS_ALIGN_MODE is set to %s. Legal values is 1GB,10GB,RAPIDIO,OUTSIDE",CP_LANE2_PCS_ALIGN_MODE);
    }

//initial config body977 end


//initial config body978 begin
    if(CP_LANE2_PCS_SAMP_16B == "X20")
    {
        SC_PCS_CH_INT_2[13]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_SAMP_16B == "X16")
    {
        SC_PCS_CH_INT_2[13]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[13]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_SAMP_16B is set to %s. Legal values is X20,X16",CP_LANE2_PCS_SAMP_16B);
    }

//initial config body978 end


//initial config body979 begin
    if(CP_LANE2_PCS_FARLP_PWR_REDUCTION == "FALSE")
    {
        SC_PCS_CH_INT_2[14]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_FARLP_PWR_REDUCTION == "TRUE")
    {
        SC_PCS_CH_INT_2[14]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[14]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_FARLP_PWR_REDUCTION is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_FARLP_PWR_REDUCTION);
    }

//initial config body979 end


//initial config body980 begin
    if(CP_LANE2_PCS_COMMA_REG0 >= 0 && CP_LANE2_PCS_COMMA_REG0 <= 1023)
    {
        SC_PCS_CH_INT_2[25:16]  :=  CP_LANE2_PCS_COMMA_REG0;
    }
    else
    {
        SC_PCS_CH_INT_2[25:16]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_COMMA_REG0 is set to %d. Legal values is 0 to 1023",CP_LANE2_PCS_COMMA_REG0);
    }

//initial config body980 end


//initial config body981 begin
    if(CP_LANE2_PCS_COMMA_MASK >= 0 && CP_LANE2_PCS_COMMA_MASK <= 1023)
    {
        SC_PCS_CH_INT_2[35:26]  :=  CP_LANE2_PCS_COMMA_MASK;
    }
    else
    {
        SC_PCS_CH_INT_2[35:26]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_COMMA_MASK is set to %d. Legal values is 0 to 1023",CP_LANE2_PCS_COMMA_MASK);
    }

//initial config body981 end


//initial config body982 begin
    if(CP_LANE2_PCS_CEB_MODE == "10GB")
    {
        SC_PCS_CH_INT_2[37:36]  :=  2'b00;
    }
    else if (CP_LANE2_PCS_CEB_MODE == "RAPIDIO")
    {
        SC_PCS_CH_INT_2[37:36]  :=  2'b01;
    }
    else if (CP_LANE2_PCS_CEB_MODE == "OUTSIDE")
    {
        SC_PCS_CH_INT_2[37:36]  :=  2'b10;
    }
    else
    {
        SC_PCS_CH_INT_2[37:36]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PCS_CEB_MODE is set to %s. Legal values is 10GB,RAPIDIO,OUTSIDE",CP_LANE2_PCS_CEB_MODE);
    }

//initial config body982 end


//initial config body983 begin
    if(CP_LANE2_PCS_CTC_MODE == "1SKIP")
    {
        SC_PCS_CH_INT_2[39:38]  :=  2'b00;
    }
    else if (CP_LANE2_PCS_CTC_MODE == "2SKIP")
    {
        SC_PCS_CH_INT_2[39:38]  :=  2'b01;
    }
    else if (CP_LANE2_PCS_CTC_MODE == "PCIE_2BYTE")
    {
        SC_PCS_CH_INT_2[39:38]  :=  2'b10;
    }
    else if (CP_LANE2_PCS_CTC_MODE == "4SKIP")
    {
        SC_PCS_CH_INT_2[39:38]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_2[39:38]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PCS_CTC_MODE is set to %s. Legal values is 1SKIP,2SKIP,PCIE_2BYTE,4SKIP",CP_LANE2_PCS_CTC_MODE);
    }

//initial config body983 end


//initial config body984 begin
    if(CP_LANE2_PCS_A_REG >= 0 && CP_LANE2_PCS_A_REG <= 255)
    {
        SC_PCS_CH_INT_2[47:40]  :=  CP_LANE2_PCS_A_REG;
    }
    else
    {
        SC_PCS_CH_INT_2[47:40]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_A_REG is set to %d. Legal values is 0 to 255",CP_LANE2_PCS_A_REG);
    }

//initial config body984 end


//initial config body985 begin
    if(CP_LANE2_PCS_GE_AUTO_EN == "FALSE")
    {
        SC_PCS_CH_INT_2[49]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_GE_AUTO_EN == "TRUE")
    {
        SC_PCS_CH_INT_2[49]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[49]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_GE_AUTO_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_GE_AUTO_EN);
    }

//initial config body985 end


//initial config body986 begin
    if(CP_LANE2_PCS_SKIP_REG0 >= 0 && CP_LANE2_PCS_SKIP_REG0 <= 511)
    {
        SC_PCS_CH_INT_2[58:50]  :=  CP_LANE2_PCS_SKIP_REG0;
    }
    else
    {
        SC_PCS_CH_INT_2[58:50]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_SKIP_REG0 is set to %d. Legal values is 0 to 511",CP_LANE2_PCS_SKIP_REG0);
    }

//initial config body986 end


//initial config body987 begin
    if(CP_LANE2_PCS_SKIP_REG1 >= 0 && CP_LANE2_PCS_SKIP_REG1 <= 511)
    {
        SC_PCS_CH_INT_2[68:60]  :=  CP_LANE2_PCS_SKIP_REG1;
    }
    else
    {
        SC_PCS_CH_INT_2[68:60]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_SKIP_REG1 is set to %d. Legal values is 0 to 511",CP_LANE2_PCS_SKIP_REG1);
    }

//initial config body987 end


//initial config body988 begin
    if(CP_LANE2_PCS_SKIP_REG2 >= 0 && CP_LANE2_PCS_SKIP_REG2 <= 511)
    {
        SC_PCS_CH_INT_2[78:70]  :=  CP_LANE2_PCS_SKIP_REG2;
    }
    else
    {
        SC_PCS_CH_INT_2[78:70]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_SKIP_REG2 is set to %d. Legal values is 0 to 511",CP_LANE2_PCS_SKIP_REG2);
    }

//initial config body988 end


//initial config body989 begin
    if(CP_LANE2_PCS_SKIP_REG3 >= 0 && CP_LANE2_PCS_SKIP_REG3 <= 511)
    {
        SC_PCS_CH_INT_2[88:80]  :=  CP_LANE2_PCS_SKIP_REG3;
    }
    else
    {
        SC_PCS_CH_INT_2[88:80]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_SKIP_REG3 is set to %d. Legal values is 0 to 511",CP_LANE2_PCS_SKIP_REG3);
    }

//initial config body989 end


//initial config body990 begin
    if(CP_LANE2_PCS_DEC_DUAL == "FALSE")
    {
        SC_PCS_CH_INT_2[90]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_DEC_DUAL == "TRUE")
    {
        SC_PCS_CH_INT_2[90]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[90]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_DEC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_DEC_DUAL);
    }

//initial config body990 end


//initial config body991 begin
    if(CP_LANE2_PCS_SPLIT == "FALSE")
    {
        SC_PCS_CH_INT_2[91]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_SPLIT == "TRUE")
    {
        SC_PCS_CH_INT_2[91]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[91]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_SPLIT);
    }

//initial config body991 end


//initial config body992 begin
    if(CP_LANE2_PCS_FIFOFLAG_CTC == "FALSE")
    {
        SC_PCS_CH_INT_2[92]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_FIFOFLAG_CTC == "TRUE")
    {
        SC_PCS_CH_INT_2[92]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[92]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_FIFOFLAG_CTC is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_FIFOFLAG_CTC);
    }

//initial config body992 end


//initial config body993 begin
    if(CP_LANE2_PCS_COMMA_DET_MODE == "COMMA_PATTERN")
    {
        SC_PCS_CH_INT_2[93]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_COMMA_DET_MODE == "RX_CLK_SLIP")
    {
        SC_PCS_CH_INT_2[93]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[93]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_COMMA_DET_MODE is set to %s. Legal values is COMMA_PATTERN,RX_CLK_SLIP",CP_LANE2_PCS_COMMA_DET_MODE);
    }

//initial config body993 end


//initial config body994 begin
    if(CP_LANE2_PCS_ERRDETECT_SILENCE == "FALSE")
    {
        SC_PCS_CH_INT_2[94]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_ERRDETECT_SILENCE == "TRUE")
    {
        SC_PCS_CH_INT_2[94]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[94]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_ERRDETECT_SILENCE is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_ERRDETECT_SILENCE);
    }

//initial config body994 end


//initial config body995 begin
    if(CP_LANE2_PCS_PMA_RCLK_POLINV == "PMA_RCLK")
    {
        SC_PCS_CH_INT_2[96]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_PMA_RCLK_POLINV == "REVERSE_OF_PMA_RCLK")
    {
        SC_PCS_CH_INT_2[96]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[96]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_PMA_RCLK_POLINV is set to %s. Legal values is PMA_RCLK,REVERSE_OF_PMA_RCLK",CP_LANE2_PCS_PMA_RCLK_POLINV);
    }

//initial config body995 end


//initial config body996 begin
    if(CP_LANE2_PCS_PCS_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_2[98:97]  :=  2'b00;
    }
    else if (CP_LANE2_PCS_PCS_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_2[98:97]  :=  2'b01;
    }
    else if (CP_LANE2_PCS_PCS_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH_INT_2[98:97]  :=  2'b10;
    }
    else
    {
        SC_PCS_CH_INT_2[98:97]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PCS_PCS_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,RCLK",CP_LANE2_PCS_PCS_RCLK_SEL);
    }

//initial config body996 end


//initial config body997 begin
    if(CP_LANE2_PCS_CB_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_2[100:99]  :=  2'b00;
    }
    else if (CP_LANE2_PCS_CB_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_2[100:99]  :=  2'b01;
    }
    else if (CP_LANE2_PCS_CB_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH_INT_2[100:99]  :=  2'b10;
    }
    else
    {
        SC_PCS_CH_INT_2[100:99]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PCS_CB_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK",CP_LANE2_PCS_CB_RCLK_SEL);
    }

//initial config body997 end


//initial config body998 begin
    if(CP_LANE2_PCS_AFTER_CTC_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_2[102:101]  :=  2'b00;
    }
    else if (CP_LANE2_PCS_AFTER_CTC_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_2[102:101]  :=  2'b01;
    }
    else if (CP_LANE2_PCS_AFTER_CTC_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH_INT_2[102:101]  :=  2'b10;
    }
    else if (CP_LANE2_PCS_AFTER_CTC_RCLK_SEL == "RCLK2")
    {
        SC_PCS_CH_INT_2[102:101]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_2[102:101]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PCS_AFTER_CTC_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK2",CP_LANE2_PCS_AFTER_CTC_RCLK_SEL);
    }

//initial config body998 end


//initial config body999 begin
    if(CP_LANE2_PCS_RCLK_POLINV == "RCLK")
    {
        SC_PCS_CH_INT_2[103]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_RCLK_POLINV == "REVERSE_OF_RCLK")
    {
        SC_PCS_CH_INT_2[103]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[103]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_RCLK_POLINV is set to %s. Legal values is RCLK,REVERSE_OF_RCLK",CP_LANE2_PCS_RCLK_POLINV);
    }

//initial config body999 end


//initial config body1000 begin
    if(CP_LANE2_PCS_BRIDGE_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_2[105:104]  :=  2'b00;
    }
    else if (CP_LANE2_PCS_BRIDGE_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_2[105:104]  :=  2'b01;
    }
    else if (CP_LANE2_PCS_BRIDGE_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH_INT_2[105:104]  :=  2'b10;
    }
    else if (CP_LANE2_PCS_BRIDGE_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH_INT_2[105:104]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_2[105:104]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PCS_BRIDGE_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK",CP_LANE2_PCS_BRIDGE_RCLK_SEL);
    }

//initial config body1000 end


//initial config body1001 begin
    if(CP_LANE2_PCS_PCS_RCLK_EN == "FALSE")
    {
        SC_PCS_CH_INT_2[106]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_PCS_RCLK_EN == "TRUE")
    {
        SC_PCS_CH_INT_2[106]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[106]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_PCS_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_PCS_RCLK_EN);
    }

//initial config body1001 end


//initial config body1002 begin
    if(CP_LANE2_PCS_CB_RCLK_EN == "FALSE")
    {
        SC_PCS_CH_INT_2[107]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_CB_RCLK_EN == "TRUE")
    {
        SC_PCS_CH_INT_2[107]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[107]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_CB_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_CB_RCLK_EN);
    }

//initial config body1002 end


//initial config body1003 begin
    if(CP_LANE2_PCS_AFTER_CTC_RCLK_EN == "FALSE")
    {
        SC_PCS_CH_INT_2[108]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_AFTER_CTC_RCLK_EN == "TRUE")
    {
        SC_PCS_CH_INT_2[108]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[108]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_AFTER_CTC_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_AFTER_CTC_RCLK_EN);
    }

//initial config body1003 end


//initial config body1004 begin
    if(CP_LANE2_PCS_AFTER_CTC_RCLK_EN_GB == "FALSE")
    {
        SC_PCS_CH_INT_2[109]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_AFTER_CTC_RCLK_EN_GB == "TRUE")
    {
        SC_PCS_CH_INT_2[109]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[109]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_AFTER_CTC_RCLK_EN_GB is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_AFTER_CTC_RCLK_EN_GB);
    }

//initial config body1004 end


//initial config body1005 begin
    if(CP_LANE2_PCS_PCS_RX_RSTN == "FALSE")
    {
        SC_PCS_CH_INT_2[112]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_PCS_RX_RSTN == "TRUE")
    {
        SC_PCS_CH_INT_2[112]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[112]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_PCS_RX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_PCS_RX_RSTN);
    }

//initial config body1005 end


//initial config body1006 begin
    if(CP_LANE2_PCS_PCIE_SLAVE == "MASTER")
    {
        SC_PCS_CH_INT_2[114]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_PCIE_SLAVE == "SLAVE")
    {
        SC_PCS_CH_INT_2[114]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[114]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_PCIE_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_LANE2_PCS_PCIE_SLAVE);
    }

//initial config body1006 end


//initial config body1007 begin
    if(CP_LANE2_PCS_RX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH_INT_2[116:115]  :=  2'b00;
    }
    else if (CP_LANE2_PCS_RX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH_INT_2[116:115]  :=  2'b01;
    }
    else if (CP_LANE2_PCS_RX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH_INT_2[116:115]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_2[116:115]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PCS_RX_64B66B_67B is set to %s. Legal values is NORMAL,64B_66B,64B_67B",CP_LANE2_PCS_RX_64B66B_67B);
    }

//initial config body1007 end


//initial config body1008 begin
    if(CP_LANE2_PCS_RX_BRIDGE_CLK_POLINV == "RX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_2[117]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_RX_BRIDGE_CLK_POLINV == "REVERSE_OF_RX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_2[117]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[117]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_RX_BRIDGE_CLK_POLINV is set to %s. Legal values is RX_BRIDGE_CLK,REVERSE_OF_RX_BRIDGE_CLK",CP_LANE2_PCS_RX_BRIDGE_CLK_POLINV);
    }

//initial config body1008 end


//initial config body1009 begin
    if(CP_LANE2_PCS_PCS_CB_RSTN == "FALSE")
    {
        SC_PCS_CH_INT_2[120]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_PCS_CB_RSTN == "TRUE")
    {
        SC_PCS_CH_INT_2[120]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[120]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_PCS_CB_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_PCS_CB_RSTN);
    }

//initial config body1009 end


//initial config body1010 begin
    if(CP_LANE2_PCS_TX_BRIDGE_GEAR_SEL == "FALSE")
    {
        SC_PCS_CH_INT_2[128]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_BRIDGE_GEAR_SEL == "TRUE")
    {
        SC_PCS_CH_INT_2[128]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[128]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_BRIDGE_GEAR_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_TX_BRIDGE_GEAR_SEL);
    }

//initial config body1010 end


//initial config body1011 begin
    if(CP_LANE2_PCS_TX_BYPASS_BRIDGE_UINT == "FALSE")
    {
        SC_PCS_CH_INT_2[129]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_BYPASS_BRIDGE_UINT == "TRUE")
    {
        SC_PCS_CH_INT_2[129]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[129]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_BYPASS_BRIDGE_UINT is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_TX_BYPASS_BRIDGE_UINT);
    }

//initial config body1011 end


//initial config body1012 begin
    if(CP_LANE2_PCS_TX_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH_INT_2[130]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH_INT_2[130]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[130]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_TX_BYPASS_BRIDGE_FIFO);
    }

//initial config body1012 end


//initial config body1013 begin
    if(CP_LANE2_PCS_TX_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH_INT_2[131]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH_INT_2[131]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[131]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_TX_BYPASS_GEAR);
    }

//initial config body1013 end


//initial config body1014 begin
    if(CP_LANE2_PCS_TX_BYPASS_ENC == "FALSE")
    {
        SC_PCS_CH_INT_2[132]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_BYPASS_ENC == "TRUE")
    {
        SC_PCS_CH_INT_2[132]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[132]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_BYPASS_ENC is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_TX_BYPASS_ENC);
    }

//initial config body1014 end


//initial config body1015 begin
    if(CP_LANE2_PCS_TX_BYPASS_BIT_SLIP == "FALSE")
    {
        SC_PCS_CH_INT_2[133]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_BYPASS_BIT_SLIP == "TRUE")
    {
        SC_PCS_CH_INT_2[133]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[133]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_BYPASS_BIT_SLIP is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_TX_BYPASS_BIT_SLIP);
    }

//initial config body1015 end


//initial config body1016 begin
    if(CP_LANE2_PCS_TX_GEAR_SPLIT == "FALSE")
    {
        SC_PCS_CH_INT_2[136]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_GEAR_SPLIT == "TRUE")
    {
        SC_PCS_CH_INT_2[136]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[136]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_GEAR_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_TX_GEAR_SPLIT);
    }

//initial config body1016 end


//initial config body1017 begin
    if(CP_LANE2_PCS_TX_DRIVE_REG_MODE == "NO_CHANGE")
    {
        SC_PCS_CH_INT_2[138:137]  :=  2'b00;
    }
    else if (CP_LANE2_PCS_TX_DRIVE_REG_MODE == "EN_POLARIY_REV")
    {
        SC_PCS_CH_INT_2[138:137]  :=  2'b01;
    }
    else if (CP_LANE2_PCS_TX_DRIVE_REG_MODE == "EN_BIT_REV")
    {
        SC_PCS_CH_INT_2[138:137]  :=  2'b10;
    }
    else if (CP_LANE2_PCS_TX_DRIVE_REG_MODE == "EN_BOTH")
    {
        SC_PCS_CH_INT_2[138:137]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_2[138:137]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PCS_TX_DRIVE_REG_MODE is set to %s. Legal values is NO_CHANGE,EN_POLARIY_REV,EN_BIT_REV,EN_BOTH",CP_LANE2_PCS_TX_DRIVE_REG_MODE);
    }

//initial config body1017 end


//initial config body1018 begin
    if(CP_LANE2_PCS_TX_BIT_SLIP_CYCLES >= 0 && CP_LANE2_PCS_TX_BIT_SLIP_CYCLES <= 31)
    {
        SC_PCS_CH_INT_2[143:139]  :=  CP_LANE2_PCS_TX_BIT_SLIP_CYCLES;
    }
    else
    {
        SC_PCS_CH_INT_2[143:139]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_TX_BIT_SLIP_CYCLES is set to %d. Legal values is 0 to 31",CP_LANE2_PCS_TX_BIT_SLIP_CYCLES);
    }

//initial config body1018 end


//initial config body1019 begin
    if(CP_LANE2_PCS_INT_TX_MASK_0 == "FALSE")
    {
        SC_PCS_CH_INT_2[144]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_TX_MASK_0 == "TRUE")
    {
        SC_PCS_CH_INT_2[144]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[144]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_TX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_TX_MASK_0);
    }

//initial config body1019 end


//initial config body1020 begin
    if(CP_LANE2_PCS_INT_TX_MASK_1 == "FALSE")
    {
        SC_PCS_CH_INT_2[145]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_TX_MASK_1 == "TRUE")
    {
        SC_PCS_CH_INT_2[145]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[145]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_TX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_TX_MASK_1);
    }

//initial config body1020 end


//initial config body1021 begin
    if(CP_LANE2_PCS_INT_TX_MASK_2 == "FALSE")
    {
        SC_PCS_CH_INT_2[146]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_TX_MASK_2 == "TRUE")
    {
        SC_PCS_CH_INT_2[146]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[146]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_TX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_TX_MASK_2);
    }

//initial config body1021 end


//initial config body1022 begin
    if(CP_LANE2_PCS_INT_TX_CLR_0 == "FALSE")
    {
        SC_PCS_CH_INT_2[152]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_TX_CLR_0 == "TRUE")
    {
        SC_PCS_CH_INT_2[152]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[152]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_TX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_TX_CLR_0);
    }

//initial config body1022 end


//initial config body1023 begin
    if(CP_LANE2_PCS_INT_TX_CLR_1 == "FALSE")
    {
        SC_PCS_CH_INT_2[153]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_TX_CLR_1 == "TRUE")
    {
        SC_PCS_CH_INT_2[153]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[153]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_TX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_TX_CLR_1);
    }

//initial config body1023 end


//initial config body1024 begin
    if(CP_LANE2_PCS_INT_TX_CLR_2 == "FALSE")
    {
        SC_PCS_CH_INT_2[154]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_TX_CLR_2 == "TRUE")
    {
        SC_PCS_CH_INT_2[154]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[154]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_TX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_TX_CLR_2);
    }

//initial config body1024 end


//initial config body1025 begin
    if(CP_LANE2_PCS_TX_PMA_TCLK_POLINV == "PMA_TCLK")
    {
        SC_PCS_CH_INT_2[160]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_PMA_TCLK_POLINV == "REVERSE_OF_PMA_TCLK")
    {
        SC_PCS_CH_INT_2[160]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[160]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_PMA_TCLK_POLINV is set to %s. Legal values is PMA_TCLK,REVERSE_OF_PMA_TCLK",CP_LANE2_PCS_TX_PMA_TCLK_POLINV);
    }

//initial config body1025 end


//initial config body1026 begin
    if(CP_LANE2_PCS_TX_PCS_CLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH_INT_2[161]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_PCS_CLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH_INT_2[161]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[161]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_PCS_CLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_TX_PCS_CLK_EN_SEL);
    }

//initial config body1026 end


//initial config body1027 begin
    if(CP_LANE2_PCS_TX_BRIDGE_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH_INT_2[162]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_BRIDGE_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH_INT_2[162]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[162]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_BRIDGE_TCLK_SEL is set to %s. Legal values is TCLK,TCLK2",CP_LANE2_PCS_TX_BRIDGE_TCLK_SEL);
    }

//initial config body1027 end


//initial config body1028 begin
    if(CP_LANE2_PCS_TX_TCLK_POLINV == "TCLK")
    {
        SC_PCS_CH_INT_2[163]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_TCLK_POLINV == "REVERSE_OF_TCLK")
    {
        SC_PCS_CH_INT_2[163]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[163]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_TCLK_POLINV is set to %s. Legal values is TCLK,REVERSE_OF_TCLK",CP_LANE2_PCS_TX_TCLK_POLINV);
    }

//initial config body1028 end


//initial config body1029 begin
    if(CP_LANE2_PCS_PCS_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_2[164]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_PCS_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH_INT_2[164]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[164]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_PCS_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK",CP_LANE2_PCS_PCS_TCLK_SEL);
    }

//initial config body1029 end


//initial config body1030 begin
    if(CP_LANE2_PCS_TX_PCS_TX_RSTN == "FALSE")
    {
        SC_PCS_CH_INT_2[165]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_PCS_TX_RSTN == "TRUE")
    {
        SC_PCS_CH_INT_2[165]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[165]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_PCS_TX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_TX_PCS_TX_RSTN);
    }

//initial config body1030 end


//initial config body1031 begin
    if(CP_LANE2_PCS_TX_SLAVE == "MASTER")
    {
        SC_PCS_CH_INT_2[166]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_SLAVE == "SLAVE")
    {
        SC_PCS_CH_INT_2[166]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[166]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_LANE2_PCS_TX_SLAVE);
    }

//initial config body1031 end


//initial config body1032 begin
    if(CP_LANE2_PCS_TX_GEAR_CLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH_INT_2[167]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_GEAR_CLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH_INT_2[167]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[167]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_GEAR_CLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_TX_GEAR_CLK_EN_SEL);
    }

//initial config body1032 end


//initial config body1033 begin
    if(CP_LANE2_PCS_DATA_WIDTH_MODE == "X20")
    {
        SC_PCS_CH_INT_2[169:168]  :=  2'b00;
    }
    else if (CP_LANE2_PCS_DATA_WIDTH_MODE == "X16")
    {
        SC_PCS_CH_INT_2[169:168]  :=  2'b10;
    }
    else if (CP_LANE2_PCS_DATA_WIDTH_MODE == "X10")
    {
        SC_PCS_CH_INT_2[169:168]  :=  2'b01;
    }
    else if (CP_LANE2_PCS_DATA_WIDTH_MODE == "X8")
    {
        SC_PCS_CH_INT_2[169:168]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_2[169:168]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PCS_DATA_WIDTH_MODE is set to %s. Legal values is X20,X16,X10,X8",CP_LANE2_PCS_DATA_WIDTH_MODE);
    }

//initial config body1033 end


//initial config body1034 begin
    if(CP_LANE2_PCS_TX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH_INT_2[171:170]  :=  2'b00;
    }
    else if (CP_LANE2_PCS_TX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH_INT_2[171:170]  :=  2'b01;
    }
    else if (CP_LANE2_PCS_TX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH_INT_2[171:170]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_2[171:170]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PCS_TX_64B66B_67B is set to %s. Legal values is NORMAL,64B_66B,64B_67B",CP_LANE2_PCS_TX_64B66B_67B);
    }

//initial config body1034 end


//initial config body1035 begin
    if(CP_LANE2_PCS_GEAR_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_2[172]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_GEAR_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH_INT_2[172]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[172]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_GEAR_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK2",CP_LANE2_PCS_GEAR_TCLK_SEL);
    }

//initial config body1035 end


//initial config body1036 begin
    if(CP_LANE2_PCS_TX_TCLK2FABRIC_SEL == "FALSE")
    {
        SC_PCS_CH_INT_2[176]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_TCLK2FABRIC_SEL == "TRUE")
    {
        SC_PCS_CH_INT_2[176]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[176]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_TCLK2FABRIC_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_TX_TCLK2FABRIC_SEL);
    }

//initial config body1036 end


//initial config body1037 begin
    if(CP_LANE2_PCS_TX_OUTZZ == "FALSE")
    {
        SC_PCS_CH_INT_2[177]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_OUTZZ == "TRUE")
    {
        SC_PCS_CH_INT_2[177]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[177]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_OUTZZ is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_TX_OUTZZ);
    }

//initial config body1037 end


//initial config body1038 begin
    if(CP_LANE2_PCS_ENC_DUAL == "FALSE")
    {
        SC_PCS_CH_INT_2[178]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_ENC_DUAL == "TRUE")
    {
        SC_PCS_CH_INT_2[178]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[178]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_ENC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_ENC_DUAL);
    }

//initial config body1038 end


//initial config body1039 begin
    if(CP_LANE2_PCS_TX_BITSLIP_DATA_MODE == "X10")
    {
        SC_PCS_CH_INT_2[179]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_BITSLIP_DATA_MODE == "X20")
    {
        SC_PCS_CH_INT_2[179]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[179]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_BITSLIP_DATA_MODE is set to %s. Legal values is X10,X20",CP_LANE2_PCS_TX_BITSLIP_DATA_MODE);
    }

//initial config body1039 end


//initial config body1040 begin
    if(CP_LANE2_PCS_TX_BRIDGE_CLK_POLINV == "TX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_2[180]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_BRIDGE_CLK_POLINV == "REVERSE_OF_TX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_2[180]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[180]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_BRIDGE_CLK_POLINV is set to %s. Legal values is TX_BRIDGE_CLK,REVERSE_OF_TX_BRIDGE_CLK",CP_LANE2_PCS_TX_BRIDGE_CLK_POLINV);
    }

//initial config body1040 end


//initial config body1041 begin
    if(CP_LANE2_PCS_COMMA_REG1 >= 0 && CP_LANE2_PCS_COMMA_REG1 <= 1023)
    {
        SC_PCS_CH_INT_2[193:184]  :=  CP_LANE2_PCS_COMMA_REG1;
    }
    else
    {
        SC_PCS_CH_INT_2[193:184]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_COMMA_REG1 is set to %d. Legal values is 0 to 1023",CP_LANE2_PCS_COMMA_REG1);
    }

//initial config body1041 end


//initial config body1042 begin
    if(CP_LANE2_PCS_RAPID_IMAX >= 0 && CP_LANE2_PCS_RAPID_IMAX <= 7)
    {
        SC_PCS_CH_INT_2[202:200]  :=  CP_LANE2_PCS_RAPID_IMAX;
    }
    else
    {
        SC_PCS_CH_INT_2[202:200]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_RAPID_IMAX is set to %d. Legal values is 0 to 7",CP_LANE2_PCS_RAPID_IMAX);
    }

//initial config body1042 end


//initial config body1043 begin
    if(CP_LANE2_PCS_RAPID_VMIN_1 >= 0 && CP_LANE2_PCS_RAPID_VMIN_1 <= 255)
    {
        SC_PCS_CH_INT_2[215:208]  :=  CP_LANE2_PCS_RAPID_VMIN_1;
    }
    else
    {
        SC_PCS_CH_INT_2[215:208]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_RAPID_VMIN_1 is set to %d. Legal values is 0 to 255",CP_LANE2_PCS_RAPID_VMIN_1);
    }

//initial config body1043 end


//initial config body1044 begin
    if(CP_LANE2_PCS_RAPID_VMIN_2 >= 0 && CP_LANE2_PCS_RAPID_VMIN_2 <= 255)
    {
        SC_PCS_CH_INT_2[223:216]  :=  CP_LANE2_PCS_RAPID_VMIN_2;
    }
    else
    {
        SC_PCS_CH_INT_2[223:216]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_RAPID_VMIN_2 is set to %d. Legal values is 0 to 255",CP_LANE2_PCS_RAPID_VMIN_2);
    }

//initial config body1044 end


//initial config body1045 begin
    if(CP_LANE2_PCS_RX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH_INT_2[227:224]  :=  4'd0;
    }
    else if (CP_LANE2_PCS_RX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH_INT_2[227:224]  :=  4'd1;
    }
    else if (CP_LANE2_PCS_RX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH_INT_2[227:224]  :=  4'd2;
    }
    else if (CP_LANE2_PCS_RX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH_INT_2[227:224]  :=  4'd3;
    }
    else if (CP_LANE2_PCS_RX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH_INT_2[227:224]  :=  4'd4;
    }
    else
    {
        SC_PCS_CH_INT_2[227:224]  :=  4'd0;
        error("Setting Error : The CP_LANE2_PCS_RX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31",CP_LANE2_PCS_RX_PRBS_MODE);
    }

//initial config body1045 end


//initial config body1046 begin
    if(CP_LANE2_PCS_RX_ERRCNT_CLR == "FALSE")
    {
        SC_PCS_CH_INT_2[228]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_RX_ERRCNT_CLR == "TRUE")
    {
        SC_PCS_CH_INT_2[228]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[228]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_RX_ERRCNT_CLR is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_RX_ERRCNT_CLR);
    }

//initial config body1046 end


//initial config body1047 begin
    if(CP_LANE2_PCS_PRBS_ERR_LPBK == "FALSE")
    {
        SC_PCS_CH_INT_2[229]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_PRBS_ERR_LPBK == "TRUE")
    {
        SC_PCS_CH_INT_2[229]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[229]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_PRBS_ERR_LPBK is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_PRBS_ERR_LPBK);
    }

//initial config body1047 end


//initial config body1048 begin
    if(CP_LANE2_PCS_TX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH_INT_2[235:232]  :=  4'd0;
    }
    else if (CP_LANE2_PCS_TX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH_INT_2[235:232]  :=  4'd1;
    }
    else if (CP_LANE2_PCS_TX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH_INT_2[235:232]  :=  4'd2;
    }
    else if (CP_LANE2_PCS_TX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH_INT_2[235:232]  :=  4'd3;
    }
    else if (CP_LANE2_PCS_TX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH_INT_2[235:232]  :=  4'd4;
    }
    else if (CP_LANE2_PCS_TX_PRBS_MODE == "LONG_1")
    {
        SC_PCS_CH_INT_2[235:232]  :=  4'd5;
    }
    else if (CP_LANE2_PCS_TX_PRBS_MODE == "LONG_0")
    {
        SC_PCS_CH_INT_2[235:232]  :=  4'd6;
    }
    else if (CP_LANE2_PCS_TX_PRBS_MODE == "20UI")
    {
        SC_PCS_CH_INT_2[235:232]  :=  4'd7;
    }
    else if (CP_LANE2_PCS_TX_PRBS_MODE == "D10_2")
    {
        SC_PCS_CH_INT_2[235:232]  :=  4'd8;
    }
    else if (CP_LANE2_PCS_TX_PRBS_MODE == "PCIE")
    {
        SC_PCS_CH_INT_2[235:232]  :=  4'd9;
    }
    else
    {
        SC_PCS_CH_INT_2[235:232]  :=  4'd0;
        error("Setting Error : The CP_LANE2_PCS_TX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31,LONG_1,LONG_0,20UI,D10_2,PCIE",CP_LANE2_PCS_TX_PRBS_MODE);
    }

//initial config body1048 end


//initial config body1049 begin
    if(CP_LANE2_PCS_TX_INSERT_ER == "FALSE")
    {
        SC_PCS_CH_INT_2[236]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TX_INSERT_ER == "TRUE")
    {
        SC_PCS_CH_INT_2[236]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[236]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TX_INSERT_ER is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_TX_INSERT_ER);
    }

//initial config body1049 end


//initial config body1050 begin
    if(CP_LANE2_PCS_ENABLE_PRBS_GEN == "FALSE")
    {
        SC_PCS_CH_INT_2[237]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_ENABLE_PRBS_GEN == "TRUE")
    {
        SC_PCS_CH_INT_2[237]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[237]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_ENABLE_PRBS_GEN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_ENABLE_PRBS_GEN);
    }

//initial config body1050 end


//initial config body1051 begin
    if(CP_LANE2_PCS_DEFAULT_RADDR >= 0 && CP_LANE2_PCS_DEFAULT_RADDR <= 15)
    {
        SC_PCS_CH_INT_2[251:248]  :=  CP_LANE2_PCS_DEFAULT_RADDR;
    }
    else
    {
        SC_PCS_CH_INT_2[251:248]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_DEFAULT_RADDR is set to %d. Legal values is 0 to 15",CP_LANE2_PCS_DEFAULT_RADDR);
    }

//initial config body1051 end


//initial config body1052 begin
    if(CP_LANE2_PCS_MASTER_CHECK_OFFSET >= 0 && CP_LANE2_PCS_MASTER_CHECK_OFFSET <= 15)
    {
        SC_PCS_CH_INT_2[255:252]  :=  CP_LANE2_PCS_MASTER_CHECK_OFFSET;
    }
    else
    {
        SC_PCS_CH_INT_2[255:252]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_MASTER_CHECK_OFFSET is set to %d. Legal values is 0 to 15",CP_LANE2_PCS_MASTER_CHECK_OFFSET);
    }

//initial config body1052 end


//initial config body1053 begin
    if(CP_LANE2_PCS_DELAY_SET >= 0 && CP_LANE2_PCS_DELAY_SET <= 15)
    {
        SC_PCS_CH_INT_2[259:256]  :=  CP_LANE2_PCS_DELAY_SET;
    }
    else
    {
        SC_PCS_CH_INT_2[259:256]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_DELAY_SET is set to %d. Legal values is 0 to 15",CP_LANE2_PCS_DELAY_SET);
    }

//initial config body1053 end


//initial config body1054 begin
    if(CP_LANE2_PCS_SEACH_OFFSET == "20BIT")
    {
        SC_PCS_CH_INT_2[262:260]  :=  3'd0;
    }
    else if (CP_LANE2_PCS_SEACH_OFFSET == "30BIT")
    {
        SC_PCS_CH_INT_2[262:260]  :=  3'd1;
    }
    else if (CP_LANE2_PCS_SEACH_OFFSET == "40BIT")
    {
        SC_PCS_CH_INT_2[262:260]  :=  3'd2;
    }
    else if (CP_LANE2_PCS_SEACH_OFFSET == "50BIT")
    {
        SC_PCS_CH_INT_2[262:260]  :=  3'd3;
    }
    else if (CP_LANE2_PCS_SEACH_OFFSET == "60BIT")
    {
        SC_PCS_CH_INT_2[262:260]  :=  3'd4;
    }
    else if (CP_LANE2_PCS_SEACH_OFFSET == "70BIT")
    {
        SC_PCS_CH_INT_2[262:260]  :=  3'd5;
    }
    else if (CP_LANE2_PCS_SEACH_OFFSET == "80BIT")
    {
        SC_PCS_CH_INT_2[262:260]  :=  3'd6;
    }
    else
    {
        SC_PCS_CH_INT_2[262:260]  :=  3'd0;
        error("Setting Error : The CP_LANE2_PCS_SEACH_OFFSET is set to %s. Legal values is 20BIT,30BIT,40BIT,50BIT,60BIT,70BIT,80BIT",CP_LANE2_PCS_SEACH_OFFSET);
    }

//initial config body1054 end


//initial config body1055 begin
    if(CP_LANE2_PCS_CEB_RAPIDLS_MMAX >= 0 && CP_LANE2_PCS_CEB_RAPIDLS_MMAX <= 7)
    {
        SC_PCS_CH_INT_2[266:264]  :=  CP_LANE2_PCS_CEB_RAPIDLS_MMAX;
    }
    else
    {
        SC_PCS_CH_INT_2[266:264]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_CEB_RAPIDLS_MMAX is set to %d. Legal values is 0 to 7",CP_LANE2_PCS_CEB_RAPIDLS_MMAX);
    }

//initial config body1055 end


//initial config body1056 begin
    if(CP_LANE2_PCS_CTC_AFULL >= 0 && CP_LANE2_PCS_CTC_AFULL <= 31)
    {
        SC_PCS_CH_INT_2[276:272]  :=  CP_LANE2_PCS_CTC_AFULL;
    }
    else
    {
        SC_PCS_CH_INT_2[276:272]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_CTC_AFULL is set to %d. Legal values is 0 to 31",CP_LANE2_PCS_CTC_AFULL);
    }

//initial config body1056 end


//initial config body1057 begin
    if(CP_LANE2_PCS_CTC_AEMPTY >= 0 && CP_LANE2_PCS_CTC_AEMPTY <= 31)
    {
        SC_PCS_CH_INT_2[284:280]  :=  CP_LANE2_PCS_CTC_AEMPTY;
    }
    else
    {
        SC_PCS_CH_INT_2[284:280]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_CTC_AEMPTY is set to %d. Legal values is 0 to 31",CP_LANE2_PCS_CTC_AEMPTY);
    }

//initial config body1057 end


//initial config body1058 begin
    if(CP_LANE2_PCS_CTC_CONTI_SKP_SET >= 0 && CP_LANE2_PCS_CTC_CONTI_SKP_SET <= 1)
    {
        SC_PCS_CH_INT_2[285]  :=  CP_LANE2_PCS_CTC_CONTI_SKP_SET;
    }
    else
    {
        SC_PCS_CH_INT_2[285]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_CTC_CONTI_SKP_SET is set to %d. Legal values is 0 to 1",CP_LANE2_PCS_CTC_CONTI_SKP_SET);
    }

//initial config body1058 end


//initial config body1059 begin
    if(CP_LANE2_PCS_FAR_LOOP == "FALSE")
    {
        SC_PCS_CH_INT_2[288]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_FAR_LOOP == "TRUE")
    {
        SC_PCS_CH_INT_2[288]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[288]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_FAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_FAR_LOOP);
    }

//initial config body1059 end


//initial config body1060 begin
    if(CP_LANE2_PCS_NEAR_LOOP == "FALSE")
    {
        SC_PCS_CH_INT_2[289]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_NEAR_LOOP == "TRUE")
    {
        SC_PCS_CH_INT_2[289]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[289]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_NEAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_NEAR_LOOP);
    }

//initial config body1060 end


//initial config body1061 begin
    if(CP_LANE2_PCS_PMA_TX2RX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH_INT_2[290]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_PMA_TX2RX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH_INT_2[290]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[290]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_PMA_TX2RX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_PMA_TX2RX_PLOOP_EN);
    }

//initial config body1061 end


//initial config body1062 begin
    if(CP_LANE2_PCS_PMA_TX2RX_SLOOP_EN == "FALSE")
    {
        SC_PCS_CH_INT_2[291]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_PMA_TX2RX_SLOOP_EN == "TRUE")
    {
        SC_PCS_CH_INT_2[291]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[291]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_PMA_TX2RX_SLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_PMA_TX2RX_SLOOP_EN);
    }

//initial config body1062 end


//initial config body1063 begin
    if(CP_LANE2_PCS_PMA_RX2TX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH_INT_2[292]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_PMA_RX2TX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH_INT_2[292]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[292]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_PMA_RX2TX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_PMA_RX2TX_PLOOP_EN);
    }

//initial config body1063 end


//initial config body1064 begin
    if(CP_LANE2_PCS_INT_RX_MASK_0 == "FALSE")
    {
        SC_PCS_CH_INT_2[296]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_MASK_0 == "TRUE")
    {
        SC_PCS_CH_INT_2[296]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[296]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_MASK_0);
    }

//initial config body1064 end


//initial config body1065 begin
    if(CP_LANE2_PCS_INT_RX_MASK_1 == "FALSE")
    {
        SC_PCS_CH_INT_2[297]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_MASK_1 == "TRUE")
    {
        SC_PCS_CH_INT_2[297]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[297]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_MASK_1);
    }

//initial config body1065 end


//initial config body1066 begin
    if(CP_LANE2_PCS_INT_RX_MASK_2 == "FALSE")
    {
        SC_PCS_CH_INT_2[298]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_MASK_2 == "TRUE")
    {
        SC_PCS_CH_INT_2[298]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[298]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_MASK_2);
    }

//initial config body1066 end


//initial config body1067 begin
    if(CP_LANE2_PCS_INT_RX_MASK_3 == "FALSE")
    {
        SC_PCS_CH_INT_2[299]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_MASK_3 == "TRUE")
    {
        SC_PCS_CH_INT_2[299]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[299]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_MASK_3 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_MASK_3);
    }

//initial config body1067 end


//initial config body1068 begin
    if(CP_LANE2_PCS_INT_RX_MASK_4 == "FALSE")
    {
        SC_PCS_CH_INT_2[300]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_MASK_4 == "TRUE")
    {
        SC_PCS_CH_INT_2[300]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[300]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_MASK_4 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_MASK_4);
    }

//initial config body1068 end


//initial config body1069 begin
    if(CP_LANE2_PCS_INT_RX_MASK_5 == "FALSE")
    {
        SC_PCS_CH_INT_2[301]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_MASK_5 == "TRUE")
    {
        SC_PCS_CH_INT_2[301]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[301]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_MASK_5 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_MASK_5);
    }

//initial config body1069 end


//initial config body1070 begin
    if(CP_LANE2_PCS_INT_RX_MASK_6 == "FALSE")
    {
        SC_PCS_CH_INT_2[302]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_MASK_6 == "TRUE")
    {
        SC_PCS_CH_INT_2[302]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[302]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_MASK_6 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_MASK_6);
    }

//initial config body1070 end


//initial config body1071 begin
    if(CP_LANE2_PCS_INT_RX_MASK_7 == "FALSE")
    {
        SC_PCS_CH_INT_2[303]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_MASK_7 == "TRUE")
    {
        SC_PCS_CH_INT_2[303]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[303]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_MASK_7 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_MASK_7);
    }

//initial config body1071 end


//initial config body1072 begin
    if(CP_LANE2_PCS_INT_RX_CLR_0 == "FALSE")
    {
        SC_PCS_CH_INT_2[304]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_CLR_0 == "TRUE")
    {
        SC_PCS_CH_INT_2[304]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[304]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_CLR_0);
    }

//initial config body1072 end


//initial config body1073 begin
    if(CP_LANE2_PCS_INT_RX_CLR_1 == "FALSE")
    {
        SC_PCS_CH_INT_2[305]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_CLR_1 == "TRUE")
    {
        SC_PCS_CH_INT_2[305]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[305]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_CLR_1);
    }

//initial config body1073 end


//initial config body1074 begin
    if(CP_LANE2_PCS_INT_RX_CLR_2 == "FALSE")
    {
        SC_PCS_CH_INT_2[306]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_CLR_2 == "TRUE")
    {
        SC_PCS_CH_INT_2[306]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[306]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_CLR_2);
    }

//initial config body1074 end


//initial config body1075 begin
    if(CP_LANE2_PCS_INT_RX_CLR_3 == "FALSE")
    {
        SC_PCS_CH_INT_2[307]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_CLR_3 == "TRUE")
    {
        SC_PCS_CH_INT_2[307]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[307]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_CLR_3 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_CLR_3);
    }

//initial config body1075 end


//initial config body1076 begin
    if(CP_LANE2_PCS_INT_RX_CLR_4 == "FALSE")
    {
        SC_PCS_CH_INT_2[308]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_CLR_4 == "TRUE")
    {
        SC_PCS_CH_INT_2[308]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[308]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_CLR_4 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_CLR_4);
    }

//initial config body1076 end


//initial config body1077 begin
    if(CP_LANE2_PCS_INT_RX_CLR_5 == "FALSE")
    {
        SC_PCS_CH_INT_2[309]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_CLR_5 == "TRUE")
    {
        SC_PCS_CH_INT_2[309]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[309]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_CLR_5 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_CLR_5);
    }

//initial config body1077 end


//initial config body1078 begin
    if(CP_LANE2_PCS_INT_RX_CLR_6 == "FALSE")
    {
        SC_PCS_CH_INT_2[310]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_CLR_6 == "TRUE")
    {
        SC_PCS_CH_INT_2[310]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[310]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_CLR_6 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_CLR_6);
    }

//initial config body1078 end


//initial config body1079 begin
    if(CP_LANE2_PCS_INT_RX_CLR_7 == "FALSE")
    {
        SC_PCS_CH_INT_2[311]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_INT_RX_CLR_7 == "TRUE")
    {
        SC_PCS_CH_INT_2[311]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[311]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_INT_RX_CLR_7 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_INT_RX_CLR_7);
    }

//initial config body1079 end


//initial config body1080 begin
    if(CP_LANE2_PCS_CA_RSTN_RX == "FALSE")
    {
        SC_PCS_CH_INT_2[312]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_CA_RSTN_RX == "TRUE")
    {
        SC_PCS_CH_INT_2[312]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[312]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_CA_RSTN_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_CA_RSTN_RX);
    }

//initial config body1080 end


//initial config body1081 begin
    if(CP_LANE2_PCS_CA_DYN_DLY_EN_RX == "FALSE")
    {
        SC_PCS_CH_INT_2[313]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_CA_DYN_DLY_EN_RX == "TRUE")
    {
        SC_PCS_CH_INT_2[313]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[313]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_CA_DYN_DLY_EN_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_CA_DYN_DLY_EN_RX);
    }

//initial config body1081 end


//initial config body1082 begin
    if(CP_LANE2_PCS_CA_DYN_DLY_SEL_RX == "FALSE")
    {
        SC_PCS_CH_INT_2[314]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_CA_DYN_DLY_SEL_RX == "TRUE")
    {
        SC_PCS_CH_INT_2[314]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[314]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_CA_DYN_DLY_SEL_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_CA_DYN_DLY_SEL_RX);
    }

//initial config body1082 end


//initial config body1083 begin
    if(CP_LANE2_PCS_CA_RX >= 0 && CP_LANE2_PCS_CA_RX <= 255)
    {
        SC_PCS_CH_INT_2[322:315]  :=  CP_LANE2_PCS_CA_RX;
    }
    else
    {
        SC_PCS_CH_INT_2[322:315]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_CA_RX is set to %d. Legal values is 0 to 255",CP_LANE2_PCS_CA_RX);
    }

//initial config body1083 end


//initial config body1084 begin
    if(CP_LANE2_PCS_CA_RSTN_TX == "FALSE")
    {
        SC_PCS_CH_INT_2[323]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_CA_RSTN_TX == "TRUE")
    {
        SC_PCS_CH_INT_2[323]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[323]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_CA_RSTN_TX is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_CA_RSTN_TX);
    }

//initial config body1084 end


//initial config body1085 begin
    if(CP_LANE2_PCS_CA_DYN_DLY_EN_TX == "FALSE")
    {
        SC_PCS_CH_INT_2[324]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_CA_DYN_DLY_EN_TX == "TRUE")
    {
        SC_PCS_CH_INT_2[324]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[324]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_CA_DYN_DLY_EN_TX is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_CA_DYN_DLY_EN_TX);
    }

//initial config body1085 end


//initial config body1086 begin
    if(CP_LANE2_PCS_CA_DYN_DLY_SEL_TX == "FALSE")
    {
        SC_PCS_CH_INT_2[325]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_CA_DYN_DLY_SEL_TX == "TRUE")
    {
        SC_PCS_CH_INT_2[325]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[325]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_CA_DYN_DLY_SEL_TX is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PCS_CA_DYN_DLY_SEL_TX);
    }

//initial config body1086 end


//initial config body1087 begin
    if(CP_LANE2_PCS_CA_TX >= 0 && CP_LANE2_PCS_CA_TX <= 255)
    {
        SC_PCS_CH_INT_2[333:326]  :=  CP_LANE2_PCS_CA_TX;
    }
    else
    {
        SC_PCS_CH_INT_2[333:326]  :=  0;
        error("Setting Error : The CP_LANE2_PCS_CA_TX is set to %d. Legal values is 0 to 255",CP_LANE2_PCS_CA_TX);
    }

//initial config body1087 end


//initial config body1088 begin
    if(CP_LANE2_PCS_RXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_2[334]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_RXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_2[334]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[334]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_RXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE2_PCS_RXPRBS_PWR_REDUCTION);
    }

//initial config body1088 end


//initial config body1089 begin
    if(CP_LANE2_PCS_WDALIGN_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_2[335]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_WDALIGN_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_2[335]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[335]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_WDALIGN_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE2_PCS_WDALIGN_PWR_REDUCTION);
    }

//initial config body1089 end


//initial config body1090 begin
    if(CP_LANE2_PCS_RXDEC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_2[336]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_RXDEC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_2[336]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[336]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_RXDEC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE2_PCS_RXDEC_PWR_REDUCTION);
    }

//initial config body1090 end


//initial config body1091 begin
    if(CP_LANE2_PCS_RXCB_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_2[337]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_RXCB_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_2[337]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[337]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_RXCB_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE2_PCS_RXCB_PWR_REDUCTION);
    }

//initial config body1091 end


//initial config body1092 begin
    if(CP_LANE2_PCS_RXCTC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_2[338]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_RXCTC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_2[338]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[338]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_RXCTC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE2_PCS_RXCTC_PWR_REDUCTION);
    }

//initial config body1092 end


//initial config body1093 begin
    if(CP_LANE2_PCS_RXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_2[339]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_RXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_2[339]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[339]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_RXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE2_PCS_RXGEAR_PWR_REDUCTION);
    }

//initial config body1093 end


//initial config body1094 begin
    if(CP_LANE2_PCS_RXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_2[340]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_RXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_2[340]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[340]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_RXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE2_PCS_RXBRG_PWR_REDUCTION);
    }

//initial config body1094 end


//initial config body1095 begin
    if(CP_LANE2_PCS_RXTEST_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_2[341]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_RXTEST_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_2[341]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[341]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_RXTEST_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE2_PCS_RXTEST_PWR_REDUCTION);
    }

//initial config body1095 end


//initial config body1096 begin
    if(CP_LANE2_PCS_TXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_2[342]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_2[342]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[342]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE2_PCS_TXBRG_PWR_REDUCTION);
    }

//initial config body1096 end


//initial config body1097 begin
    if(CP_LANE2_PCS_TXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_2[343]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_2[343]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[343]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE2_PCS_TXGEAR_PWR_REDUCTION);
    }

//initial config body1097 end


//initial config body1098 begin
    if(CP_LANE2_PCS_TXENC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_2[344]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TXENC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_2[344]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[344]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TXENC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE2_PCS_TXENC_PWR_REDUCTION);
    }

//initial config body1098 end


//initial config body1099 begin
    if(CP_LANE2_PCS_TXBSLP_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_2[345]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TXBSLP_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_2[345]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[345]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TXBSLP_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE2_PCS_TXBSLP_PWR_REDUCTION);
    }

//initial config body1099 end


//initial config body1100 begin
    if(CP_LANE2_PCS_TXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_2[346]  :=  1'b0;
    }
    else if (CP_LANE2_PCS_TXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_2[346]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_2[346]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PCS_TXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE2_PCS_TXPRBS_PWR_REDUCTION);
    }

//initial config body1100 end


//initial config body1101 begin
    if(CP_LANE2_PMA_REG_RX_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE2[0]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE2[0]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[0]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_PD is set to %s. Legal values is ON,OFF",CP_LANE2_PMA_REG_RX_PD);
    }

//initial config body1101 end


//initial config body1102 begin
    if(CP_LANE2_PMA_REG_RX_PD_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[1]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_PD_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[1]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[1]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_PD_EN);
    }

//initial config body1102 end


//initial config body1103 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_2 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[2]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_RESERVED_2 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[2]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[2]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RESERVED_2);
    }

//initial config body1103 end


//initial config body1104 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_3 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[3]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_RESERVED_3 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[3]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[3]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_3 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RESERVED_3);
    }

//initial config body1104 end


//initial config body1105 begin
    if(CP_LANE2_PMA_REG_RX_DATAPATH_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE2[4]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_DATAPATH_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE2[4]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[4]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_DATAPATH_PD is set to %s. Legal values is ON,OFF",CP_LANE2_PMA_REG_RX_DATAPATH_PD);
    }

//initial config body1105 end


//initial config body1106 begin
    if(CP_LANE2_PMA_REG_RX_DATAPATH_PD_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[5]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_DATAPATH_PD_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[5]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[5]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_DATAPATH_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_DATAPATH_PD_EN);
    }

//initial config body1106 end


//initial config body1107 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE2[6]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE2[6]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[6]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_PD is set to %s. Legal values is ON,OFF",CP_LANE2_PMA_REG_RX_SIGDET_PD);
    }

//initial config body1107 end


//initial config body1108 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_PD_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[7]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_PD_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[7]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[7]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SIGDET_PD_EN);
    }

//initial config body1108 end


//initial config body1109 begin
    if(CP_LANE2_PMA_REG_RX_DCC_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[8]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_RX_DCC_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[8]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[8]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_DCC_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_DCC_RST_N);
    }

//initial config body1109 end


//initial config body1110 begin
    if(CP_LANE2_PMA_REG_RX_DCC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[9]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_DCC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[9]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[9]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_DCC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_DCC_RST_N_EN);
    }

//initial config body1110 end


//initial config body1111 begin
    if(CP_LANE2_PMA_REG_RX_CDR_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[10]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_RX_CDR_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[10]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[10]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_CDR_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_CDR_RST_N);
    }

//initial config body1111 end


//initial config body1112 begin
    if(CP_LANE2_PMA_REG_RX_CDR_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[11]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_CDR_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[11]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[11]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_CDR_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_CDR_RST_N_EN);
    }

//initial config body1112 end


//initial config body1113 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[12]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[12]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[12]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SIGDET_RST_N);
    }

//initial config body1113 end


//initial config body1114 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[13]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[13]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[13]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SIGDET_RST_N_EN);
    }

//initial config body1114 end


//initial config body1115 begin
    if(CP_LANE2_PMA_REG_RXPCLK_SLIP == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[14]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RXPCLK_SLIP == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[14]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[14]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RXPCLK_SLIP is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RXPCLK_SLIP);
    }

//initial config body1115 end


//initial config body1116 begin
    if(CP_LANE2_PMA_REG_RXPCLK_SLIP_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[15]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RXPCLK_SLIP_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[15]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[15]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RXPCLK_SLIP_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RXPCLK_SLIP_OW);
    }

//initial config body1116 end


//initial config body1117 begin
    if(CP_LANE2_PMA_REG_RX_PCLKSWITCH_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[16]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_RX_PCLKSWITCH_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[16]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[16]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_PCLKSWITCH_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_PCLKSWITCH_RST_N);
    }

//initial config body1117 end


//initial config body1118 begin
    if(CP_LANE2_PMA_REG_RX_PCLKSWITCH_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[17]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_PCLKSWITCH_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[17]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[17]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_PCLKSWITCH_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_PCLKSWITCH_RST_N_EN);
    }

//initial config body1118 end


//initial config body1119 begin
    if(CP_LANE2_PMA_REG_RX_PCLKSWITCH == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[18]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_PCLKSWITCH == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[18]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[18]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_PCLKSWITCH is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_PCLKSWITCH);
    }

//initial config body1119 end


//initial config body1120 begin
    if(CP_LANE2_PMA_REG_RX_PCLKSWITCH_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[19]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_PCLKSWITCH_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[19]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[19]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_PCLKSWITCH_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_PCLKSWITCH_EN);
    }

//initial config body1120 end


//initial config body1121 begin
    if(CP_LANE2_PMA_REG_RX_HIGHZ == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[20]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_HIGHZ == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[20]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[20]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_HIGHZ is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_HIGHZ);
    }

//initial config body1121 end


//initial config body1122 begin
    if(CP_LANE2_PMA_REG_RX_HIGHZ_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[21]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_HIGHZ_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[21]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[21]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_HIGHZ_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_HIGHZ_EN);
    }

//initial config body1122 end


//initial config body1123 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_CLK_WINDOW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[22]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_CLK_WINDOW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[22]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[22]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_CLK_WINDOW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SIGDET_CLK_WINDOW);
    }

//initial config body1123 end


//initial config body1124 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_CLK_WINDOW_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[23]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_CLK_WINDOW_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[23]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[23]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_CLK_WINDOW_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SIGDET_CLK_WINDOW_OW);
    }

//initial config body1124 end


//initial config body1125 begin
    if(CP_LANE2_PMA_REG_RX_PD_BIAS_RX == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[24]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_PD_BIAS_RX == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[24]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[24]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_PD_BIAS_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_PD_BIAS_RX);
    }

//initial config body1125 end


//initial config body1126 begin
    if(CP_LANE2_PMA_REG_RX_PD_BIAS_RX_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[25]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_PD_BIAS_RX_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[25]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[25]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_PD_BIAS_RX_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_PD_BIAS_RX_OW);
    }

//initial config body1126 end


//initial config body1127 begin
    if(CP_LANE2_PMA_REG_RX_RESET_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[26]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_RESET_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[26]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[26]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESET_N is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RESET_N);
    }

//initial config body1127 end


//initial config body1128 begin
    if(CP_LANE2_PMA_REG_RX_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[27]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[27]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[27]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RESET_N_OW);
    }

//initial config body1128 end


//initial config body1129 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_29_28 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_29_28 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE2[29:28]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_RESERVED_29_28, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[29:28]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_29_28 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_RESERVED_29_28);
    }

//initial config body1129 end


//initial config body1130 begin
    if(CP_LANE2_PMA_REG_RX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH_INT_RX_LANE2[32:30]   :=  to_unsigned( 0, 3) ^ 3'b011;
    }
    else if (CP_LANE2_PMA_REG_RX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH_INT_RX_LANE2[32:30]   :=  to_unsigned( 1, 3) ^ 3'b011;
    }
    else if (CP_LANE2_PMA_REG_RX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH_INT_RX_LANE2[32:30]   :=  to_unsigned( 2, 3) ^ 3'b011;
    }
    else if (CP_LANE2_PMA_REG_RX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH_INT_RX_LANE2[32:30]   :=  to_unsigned( 3, 3) ^ 3'b011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[32:30]   :=  to_unsigned( 0, 3) ^ 3'b011;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE2_PMA_REG_RX_BUSWIDTH);
    }

//initial config body1130 end


//initial config body1131 begin
    if(CP_LANE2_PMA_REG_RX_BUSWIDTH_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[33]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_BUSWIDTH_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[33]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[33]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_BUSWIDTH_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_BUSWIDTH_EN);
    }

//initial config body1131 end


//initial config body1132 begin
    if(CP_LANE2_PMA_REG_RX_RATE == "DIV4")
    {
        SC_PMA_CH_INT_RX_LANE2[35:34]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE2_PMA_REG_RX_RATE == "DIV2")
    {
        SC_PMA_CH_INT_RX_LANE2[35:34]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE2_PMA_REG_RX_RATE == "DIV1")
    {
        SC_PMA_CH_INT_RX_LANE2[35:34]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE2_PMA_REG_RX_RATE == "MUL2")
    {
        SC_PMA_CH_INT_RX_LANE2[35:34]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[35:34]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RATE is set to %s. Legal values is DIV4,DIV2,DIV1,MUL2",CP_LANE2_PMA_REG_RX_RATE);
    }

//initial config body1132 end


//initial config body1133 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_36 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[36]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_RESERVED_36 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[36]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[36]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_36 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RESERVED_36);
    }

//initial config body1133 end


//initial config body1134 begin
    if(CP_LANE2_PMA_REG_RX_RATE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[37]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_RATE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[37]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[37]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RATE_EN);
    }

//initial config body1134 end


//initial config body1135 begin
    if(CP_LANE2_PMA_REG_RX_RES_TRIM >= 0 && CP_LANE2_PMA_REG_RX_RES_TRIM <= 63)
    {
        SC_PMA_CH_INT_RX_LANE2[43:38]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_RES_TRIM, 6) ^ 6'b110111;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[43:38]   :=  to_unsigned( 0, 6) ^ 6'b110111;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RES_TRIM is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_RX_RES_TRIM);
    }

//initial config body1135 end


//initial config body1136 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_44 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[44]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_RESERVED_44 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[44]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[44]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_44 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RESERVED_44);
    }

//initial config body1136 end


//initial config body1137 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_45 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[45]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_RESERVED_45 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[45]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[45]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_45 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RESERVED_45);
    }

//initial config body1137 end


//initial config body1138 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_STATUS_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[46]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_STATUS_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[46]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[46]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_STATUS_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SIGDET_STATUS_EN);
    }

//initial config body1138 end


//initial config body1139 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_48_47 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_48_47 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE2[48:47]  :=  CP_LANE2_PMA_REG_RX_RESERVED_48_47;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[48:47]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_48_47 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_RESERVED_48_47);
    }

//initial config body1139 end


//initial config body1140 begin

 if(CP_LANE2_PMA_REG_RX_ICTRL_SIGDET >= 0 && CP_LANE2_PMA_REG_RX_ICTRL_SIGDET <= 15) 
 {
 SC_PMA_CH_INT_RX_LANE2[52:49]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_ICTRL_SIGDET, 4) ^ 4'b0101; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE2[52:49]   :=  to_unsigned( 0, 4) ^ 4'b0101; 
 error("Setting Error : The CP_LANE2_PMA_REG_RX_ICTRL_SIGDET is set to %d. Legal values is 0 to 15",CP_LANE2_PMA_REG_RX_ICTRL_SIGDET); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE2_PMA_REG_CDR_READY_THD >= 0 && CP_LANE2_PMA_REG_CDR_READY_THD <= 4095) 
 {
 SC_PMA_CH_INT_RX_LANE2[64:53]   :=  to_unsigned( CP_LANE2_PMA_REG_CDR_READY_THD, 12) ^ 12'b101010101110; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE2[64:53]   :=  to_unsigned( 0, 12) ^ 12'b101010101110; 
 error("Setting Error : The CP_LANE2_PMA_REG_CDR_READY_THD is set to %d. Legal values is 0 to 4095",CP_LANE2_PMA_REG_CDR_READY_THD); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE2_PMA_REG_RX_RESERVED_65 == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE2[65]  :=  1'b0; 
}
else if (CP_LANE2_PMA_REG_RX_RESERVED_65 == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE2[65]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE2[65]  :=  1'b0; 
 error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_65 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RESERVED_65);  
}

//initial config body1140 end


//initial config body1141 begin
    if(CP_LANE2_PMA_REG_RX_PCLK_EDGE_SEL == "POS_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE2[66]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_PCLK_EDGE_SEL == "NEG_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE2[66]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[66]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_PCLK_EDGE_SEL is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_LANE2_PMA_REG_RX_PCLK_EDGE_SEL);
    }

//initial config body1141 end


//initial config body1142 begin
    if(CP_LANE2_PMA_REG_RX_PIBUF_IC >= 0 && CP_LANE2_PMA_REG_RX_PIBUF_IC <= 3)
    {
        SC_PMA_CH_INT_RX_LANE2[68:67]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_PIBUF_IC, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[68:67]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_PIBUF_IC is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_PIBUF_IC);
    }

//initial config body1142 end


//initial config body1143 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_69 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[69]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_RESERVED_69 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[69]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[69]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_69 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RESERVED_69);
    }

//initial config body1143 end


//initial config body1144 begin

 if(CP_LANE2_PMA_REG_RX_DCC_IC_RX >= 0 && CP_LANE2_PMA_REG_RX_DCC_IC_RX <= 3) 
 {
 SC_PMA_CH_INT_RX_LANE2[71:70]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_DCC_IC_RX, 2) ^ 2'b11; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE2[71:70]   :=  to_unsigned( 0, 2) ^ 2'b11; 
 error("Setting Error : The CP_LANE2_PMA_REG_RX_DCC_IC_RX is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_DCC_IC_RX); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE2_PMA_REG_CDR_READY_CHECK_CTRL >= 0 && CP_LANE2_PMA_REG_CDR_READY_CHECK_CTRL <= 3) 
 {
 SC_PMA_CH_INT_RX_LANE2[73:72]   :=  to_unsigned( CP_LANE2_PMA_REG_CDR_READY_CHECK_CTRL, 2) ^ 2'b11; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE2[73:72]   :=  to_unsigned( 0, 2) ^ 2'b11; 
 error("Setting Error : The CP_LANE2_PMA_REG_CDR_READY_CHECK_CTRL is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_CDR_READY_CHECK_CTRL); 
}

//initial config body1144 end


//initial config body1145 begin
    if(CP_LANE2_PMA_REG_RX_ICTRL_TRX == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[75:74]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_RX_ICTRL_TRX == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[75:74]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_RX_ICTRL_TRX == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[75:74]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_RX_ICTRL_TRX == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[75:74]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[75:74]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_ICTRL_TRX is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE2_PMA_REG_RX_ICTRL_TRX);
    }

//initial config body1145 end


//initial config body1146 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_77_76 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_77_76 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE2[77:76]  :=  CP_LANE2_PMA_REG_RX_RESERVED_77_76;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[77:76]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_77_76 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_RESERVED_77_76);
    }

//initial config body1146 end


//initial config body1147 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_79_78 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_79_78 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE2[79:78]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_RESERVED_79_78, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[79:78]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_79_78 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_RESERVED_79_78);
    }

//initial config body1147 end


//initial config body1148 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_81_80 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_81_80 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE2[81:80]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_RESERVED_81_80, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[81:80]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_81_80 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_RESERVED_81_80);
    }

//initial config body1148 end


//initial config body1149 begin
    if(CP_LANE2_PMA_REG_RX_ICTRL_PIBUF == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[83:82]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_RX_ICTRL_PIBUF == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[83:82]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_RX_ICTRL_PIBUF == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[83:82]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_RX_ICTRL_PIBUF == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[83:82]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[83:82]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_ICTRL_PIBUF is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE2_PMA_REG_RX_ICTRL_PIBUF);
    }

//initial config body1149 end


//initial config body1150 begin
    if(CP_LANE2_PMA_REG_RX_ICTRL_PI == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[85:84]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_RX_ICTRL_PI == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[85:84]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_RX_ICTRL_PI == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[85:84]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_RX_ICTRL_PI == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[85:84]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[85:84]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_ICTRL_PI is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE2_PMA_REG_RX_ICTRL_PI);
    }

//initial config body1150 end


//initial config body1151 begin
    if(CP_LANE2_PMA_REG_RX_ICTRL_DCC == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[87:86]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_RX_ICTRL_DCC == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[87:86]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_RX_ICTRL_DCC == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[87:86]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_RX_ICTRL_DCC == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE2[87:86]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[87:86]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_ICTRL_DCC is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE2_PMA_REG_RX_ICTRL_DCC);
    }

//initial config body1151 end


//initial config body1152 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_89_88 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_89_88 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE2[89:88]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_RESERVED_89_88, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[89:88]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_89_88 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_RESERVED_89_88);
    }

//initial config body1152 end


//initial config body1153 begin
    if(CP_LANE2_PMA_REG_TX_RATE == "DIV4")
    {
        SC_PMA_CH_INT_RX_LANE2[91:90]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE2_PMA_REG_TX_RATE == "DIV2")
    {
        SC_PMA_CH_INT_RX_LANE2[91:90]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE2_PMA_REG_TX_RATE == "DIV1")
    {
        SC_PMA_CH_INT_RX_LANE2[91:90]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE2_PMA_REG_TX_RATE == "MUL2")
    {
        SC_PMA_CH_INT_RX_LANE2[91:90]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[91:90]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RATE is set to %s. Legal values is DIV4,DIV2,DIV1,MUL2",CP_LANE2_PMA_REG_TX_RATE);
    }

//initial config body1153 end


//initial config body1154 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_92 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[92]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_RESERVED_92 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[92]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[92]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_92 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RESERVED_92);
    }

//initial config body1154 end


//initial config body1155 begin
    if(CP_LANE2_PMA_REG_TX_RATE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[93]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RATE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[93]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[93]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RATE_EN);
    }

//initial config body1155 end


//initial config body1156 begin
    if(CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[94]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[94]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[94]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_RST_N);
    }

//initial config body1156 end


//initial config body1157 begin
    if(CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[95]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[95]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[95]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN);
    }

//initial config body1157 end


//initial config body1158 begin
    if(CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[96]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[96]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[96]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_EN);
    }

//initial config body1158 end


//initial config body1159 begin
    if(CP_LANE2_PMA_REG_TXCLK_SEL == "PLL")
    {
        SC_PMA_CH_INT_RX_LANE2[97]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TXCLK_SEL == "RXCLK")
    {
        SC_PMA_CH_INT_RX_LANE2[97]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[97]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TXCLK_SEL is set to %s. Legal values is PLL,RXCLK",CP_LANE2_PMA_REG_TXCLK_SEL);
    }

//initial config body1159 end


//initial config body1160 begin
    if(CP_LANE2_PMA_REG_RX_DATA_POLARITY == "NORMAL")
    {
        SC_PMA_CH_INT_RX_LANE2[98]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_DATA_POLARITY == "REVERSE")
    {
        SC_PMA_CH_INT_RX_LANE2[98]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[98]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_DATA_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_LANE2_PMA_REG_RX_DATA_POLARITY);
    }

//initial config body1160 end


//initial config body1161 begin
    if(CP_LANE2_PMA_REG_RX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[99]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[99]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[99]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_ERR_INSERT is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_ERR_INSERT);
    }

//initial config body1161 end


//initial config body1162 begin
    if(CP_LANE2_PMA_REG_UDP_CHK_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[100]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_UDP_CHK_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[100]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[100]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_UDP_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_UDP_CHK_EN);
    }

//initial config body1162 end


//initial config body1163 begin
    if(CP_LANE2_PMA_REG_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH_INT_RX_LANE2[102:101]  :=  2'b00;
    }
    else if (CP_LANE2_PMA_REG_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH_INT_RX_LANE2[102:101]  :=  2'b01;
    }
    else if (CP_LANE2_PMA_REG_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH_INT_RX_LANE2[102:101]  :=  2'b10;
    }
    else if (CP_LANE2_PMA_REG_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH_INT_RX_LANE2[102:101]  :=  2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[102:101]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PMA_REG_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_LANE2_PMA_REG_PRBS_SEL);
    }

//initial config body1163 end


//initial config body1164 begin
    if(CP_LANE2_PMA_REG_PRBS_CHK_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[103]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_PRBS_CHK_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[103]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[103]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_PRBS_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_PRBS_CHK_EN);
    }

//initial config body1164 end


//initial config body1165 begin
    if(CP_LANE2_PMA_REG_PRBS_CHK_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH_INT_RX_LANE2[105:104]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE2_PMA_REG_PRBS_CHK_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH_INT_RX_LANE2[105:104]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE2_PMA_REG_PRBS_CHK_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH_INT_RX_LANE2[105:104]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE2_PMA_REG_PRBS_CHK_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH_INT_RX_LANE2[105:104]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[105:104]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE2_PMA_REG_PRBS_CHK_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE2_PMA_REG_PRBS_CHK_WIDTH_SEL);
    }

//initial config body1165 end


//initial config body1166 begin
    if(CP_LANE2_PMA_REG_BIST_CHK_PAT_SEL == "PRBS")
    {
        SC_PMA_CH_INT_RX_LANE2[106]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_BIST_CHK_PAT_SEL == "CONSTANT")
    {
        SC_PMA_CH_INT_RX_LANE2[106]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[106]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_BIST_CHK_PAT_SEL is set to %s. Legal values is PRBS,CONSTANT",CP_LANE2_PMA_REG_BIST_CHK_PAT_SEL);
    }

//initial config body1166 end


//initial config body1167 begin
    if(CP_LANE2_PMA_REG_LOAD_ERR_CNT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[107]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_LOAD_ERR_CNT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[107]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[107]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_LOAD_ERR_CNT is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_LOAD_ERR_CNT);
    }

//initial config body1167 end


//initial config body1168 begin
    if(CP_LANE2_PMA_REG_CHK_COUNTER_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[108]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CHK_COUNTER_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[108]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[108]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CHK_COUNTER_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CHK_COUNTER_EN);
    }

//initial config body1168 end


//initial config body1169 begin
    if(CP_LANE2_PMA_REG_CDR_PROP_GAIN >= 0 && CP_LANE2_PMA_REG_CDR_PROP_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE2[111:109]   :=  to_unsigned( CP_LANE2_PMA_REG_CDR_PROP_GAIN, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[111:109]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_PROP_GAIN is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_REG_CDR_PROP_GAIN);
    }

//initial config body1169 end


//initial config body1170 begin
    if(CP_LANE2_PMA_REG_CDR_PROP_TURBO_GAIN >= 0 && CP_LANE2_PMA_REG_CDR_PROP_TURBO_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE2[114:112]   :=  to_unsigned( CP_LANE2_PMA_REG_CDR_PROP_TURBO_GAIN, 3) ^ 3'b110;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[114:112]   :=  to_unsigned( 0, 3) ^ 3'b110;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_PROP_TURBO_GAIN is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_REG_CDR_PROP_TURBO_GAIN);
    }

//initial config body1170 end


//initial config body1171 begin
    if(CP_LANE2_PMA_REG_CDR_INT_GAIN >= 0 && CP_LANE2_PMA_REG_CDR_INT_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE2[117:115]   :=  to_unsigned( CP_LANE2_PMA_REG_CDR_INT_GAIN, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[117:115]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_INT_GAIN is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_REG_CDR_INT_GAIN);
    }

//initial config body1171 end


//initial config body1172 begin
    if(CP_LANE2_PMA_REG_CDR_INT_TURBO_GAIN >= 0 && CP_LANE2_PMA_REG_CDR_INT_TURBO_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE2[120:118]   :=  to_unsigned( CP_LANE2_PMA_REG_CDR_INT_TURBO_GAIN, 3) ^ 3'b110;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[120:118]   :=  to_unsigned( 0, 3) ^ 3'b110;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_INT_TURBO_GAIN is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_REG_CDR_INT_TURBO_GAIN);
    }

//initial config body1172 end


//initial config body1173 begin
    if(CP_LANE2_PMA_REG_CDR_INT_SAT_MAX >= 0 && CP_LANE2_PMA_REG_CDR_INT_SAT_MAX <= 1023)
    {
        SC_PMA_CH_INT_RX_LANE2[130:121]   :=  to_unsigned( CP_LANE2_PMA_REG_CDR_INT_SAT_MAX, 10) ^ 10'b1111100000;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[130:121]   :=  to_unsigned( 0, 10) ^ 10'b1111100000;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_INT_SAT_MAX is set to %d. Legal values is 0 to 1023",CP_LANE2_PMA_REG_CDR_INT_SAT_MAX);
    }

//initial config body1173 end


//initial config body1174 begin
    if(CP_LANE2_PMA_REG_CDR_INT_SAT_MIN >= 0 && CP_LANE2_PMA_REG_CDR_INT_SAT_MIN <= 1023)
    {
        SC_PMA_CH_INT_RX_LANE2[140:131]   :=  to_unsigned( CP_LANE2_PMA_REG_CDR_INT_SAT_MIN, 10) ^ 10'b0000100000;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[140:131]   :=  to_unsigned( 0, 10) ^ 10'b0000100000;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_INT_SAT_MIN is set to %d. Legal values is 0 to 1023",CP_LANE2_PMA_REG_CDR_INT_SAT_MIN);
    }

//initial config body1174 end


//initial config body1175 begin
    if(CP_LANE2_PMA_REG_CDR_INT_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[141]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_INT_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[141]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[141]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_INT_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_INT_RST);
    }

//initial config body1175 end


//initial config body1176 begin
    if(CP_LANE2_PMA_REG_CDR_INT_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[142]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_INT_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[142]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[142]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_INT_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_INT_RST_OW);
    }

//initial config body1176 end


//initial config body1177 begin
    if(CP_LANE2_PMA_REG_CDR_PROP_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[143]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_PROP_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[143]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[143]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_PROP_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_PROP_RST);
    }

//initial config body1177 end


//initial config body1178 begin
    if(CP_LANE2_PMA_REG_CDR_PROP_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[144]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_PROP_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[144]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[144]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_PROP_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_PROP_RST_OW);
    }

//initial config body1178 end


//initial config body1179 begin
    if(CP_LANE2_PMA_REG_CDR_LOCK_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[145]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_LOCK_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[145]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[145]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_LOCK_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_LOCK_RST);
    }

//initial config body1179 end


//initial config body1180 begin
    if(CP_LANE2_PMA_REG_CDR_LOCK_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[146]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_LOCK_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[146]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[146]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_LOCK_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_LOCK_RST_OW);
    }

//initial config body1180 end


//initial config body1181 begin
    if(CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_SEL == 0)
    {
        SC_PMA_CH_INT_RX_LANE2[147]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_SEL == 1)
    {
        SC_PMA_CH_INT_RX_LANE2[147]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[147]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_SEL is set to %s. Legal values is 0,1",CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_SEL);
    }

//initial config body1181 end


//initial config body1182 begin
    if(CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_D >= 0 && CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_D <= 255)
    {
        SC_PMA_CH_INT_RX_LANE2[155:148]  :=  CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_D;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[155:148]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_D is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_D);
    }

//initial config body1182 end


//initial config body1183 begin
    if(CP_LANE2_PMA_REG_CDR_LOCK_TIMER == "0_8U")
    {
        SC_PMA_CH_INT_RX_LANE2[158:156]   :=  to_unsigned( 0, 3) ^ 3'b001;
    }
    else if (CP_LANE2_PMA_REG_CDR_LOCK_TIMER == "1_2U")
    {
        SC_PMA_CH_INT_RX_LANE2[158:156]   :=  to_unsigned( 1, 3) ^ 3'b001;
    }
    else if (CP_LANE2_PMA_REG_CDR_LOCK_TIMER == "1_6U")
    {
        SC_PMA_CH_INT_RX_LANE2[158:156]   :=  to_unsigned( 2, 3) ^ 3'b001;
    }
    else if (CP_LANE2_PMA_REG_CDR_LOCK_TIMER == "2_4U")
    {
        SC_PMA_CH_INT_RX_LANE2[158:156]   :=  to_unsigned( 3, 3) ^ 3'b001;
    }
    else if (CP_LANE2_PMA_REG_CDR_LOCK_TIMER == "3_2U")
    {
        SC_PMA_CH_INT_RX_LANE2[158:156]   :=  to_unsigned( 4, 3) ^ 3'b001;
    }
    else if (CP_LANE2_PMA_REG_CDR_LOCK_TIMER == "4_8U")
    {
        SC_PMA_CH_INT_RX_LANE2[158:156]   :=  to_unsigned( 5, 3) ^ 3'b001;
    }
    else if (CP_LANE2_PMA_REG_CDR_LOCK_TIMER == "12_8U")
    {
        SC_PMA_CH_INT_RX_LANE2[158:156]   :=  to_unsigned( 6, 3) ^ 3'b001;
    }
    else if (CP_LANE2_PMA_REG_CDR_LOCK_TIMER == "25_6U")
    {
        SC_PMA_CH_INT_RX_LANE2[158:156]   :=  to_unsigned( 7, 3) ^ 3'b001;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[158:156]   :=  to_unsigned( 0, 3) ^ 3'b001;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_LOCK_TIMER is set to %s. Legal values is 0_8U,1_2U,1_6U,2_4U,3_2U,4_8U,12_8U,25_6U",CP_LANE2_PMA_REG_CDR_LOCK_TIMER);
    }

//initial config body1183 end


//initial config body1184 begin
    if(CP_LANE2_PMA_REG_CDR_TURBO_MODE_TIMER == 0)
    {
        SC_PMA_CH_INT_RX_LANE2[160:159]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_CDR_TURBO_MODE_TIMER == 1)
    {
        SC_PMA_CH_INT_RX_LANE2[160:159]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_CDR_TURBO_MODE_TIMER == 2)
    {
        SC_PMA_CH_INT_RX_LANE2[160:159]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE2_PMA_REG_CDR_TURBO_MODE_TIMER == 3)
    {
        SC_PMA_CH_INT_RX_LANE2[160:159]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[160:159]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_TURBO_MODE_TIMER is set to %s. Legal values is 0,1,2,3",CP_LANE2_PMA_REG_CDR_TURBO_MODE_TIMER);
    }

//initial config body1184 end


//initial config body1185 begin
    if(CP_LANE2_PMA_REG_CDR_LOCK_VAL == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[161]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_LOCK_VAL == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[161]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[161]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_LOCK_VAL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_LOCK_VAL);
    }

//initial config body1185 end


//initial config body1186 begin
    if(CP_LANE2_PMA_REG_CDR_LOCK_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[162]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_LOCK_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[162]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[162]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_LOCK_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_LOCK_OW);
    }

//initial config body1186 end


//initial config body1187 begin
    if(CP_LANE2_PMA_REG_CDR_INT_SAT_DET_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[163]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_CDR_INT_SAT_DET_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[163]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[163]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_INT_SAT_DET_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_INT_SAT_DET_EN);
    }

//initial config body1187 end


//initial config body1188 begin
    if(CP_LANE2_PMA_REG_CDR_SAT_AUTO_DIS == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[164]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_SAT_AUTO_DIS == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[164]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[164]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_SAT_AUTO_DIS is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_SAT_AUTO_DIS);
    }

//initial config body1188 end


//initial config body1189 begin
    if(CP_LANE2_PMA_REG_CDR_GAIN_AUTO == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[165]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_GAIN_AUTO == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[165]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[165]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_GAIN_AUTO is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_GAIN_AUTO);
    }

//initial config body1189 end


//initial config body1190 begin
    if(CP_LANE2_PMA_REG_CDR_TURBO_GAIN_AUTO == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[166]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_TURBO_GAIN_AUTO == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[166]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[166]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_TURBO_GAIN_AUTO is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_TURBO_GAIN_AUTO);
    }

//initial config body1190 end


//initial config body1191 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_171_167 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_171_167 <= 31)
    {
        SC_PMA_CH_INT_RX_LANE2[171:167]  :=  CP_LANE2_PMA_REG_RX_RESERVED_171_167;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[171:167]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_171_167 is set to %d. Legal values is 0 to 31",CP_LANE2_PMA_REG_RX_RESERVED_171_167);
    }

//initial config body1191 end


//initial config body1192 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_175_172 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_175_172 <= 15)
    {
        SC_PMA_CH_INT_RX_LANE2[175:172]  :=  CP_LANE2_PMA_REG_RX_RESERVED_175_172;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[175:172]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_175_172 is set to %d. Legal values is 0 to 15",CP_LANE2_PMA_REG_RX_RESERVED_175_172);
    }

//initial config body1192 end


//initial config body1193 begin
    if(CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[176]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[176]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[176]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_EN);
    }

//initial config body1193 end


//initial config body1194 begin
    if(CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[177]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[177]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[177]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN);
    }

//initial config body1194 end


//initial config body1195 begin
    if(CP_LANE2_PMA_REG_CDR_PI_CTRL_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[178]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_PI_CTRL_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[178]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[178]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_PI_CTRL_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_PI_CTRL_RST);
    }

//initial config body1195 end


//initial config body1196 begin
    if(CP_LANE2_PMA_REG_CDR_PI_CTRL_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[179]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_PI_CTRL_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[179]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[179]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_PI_CTRL_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_PI_CTRL_RST_OW);
    }

//initial config body1196 end


//initial config body1197 begin
    if(CP_LANE2_PMA_REG_CDR_SAT_DET_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[180]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_SAT_DET_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[180]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[180]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_SAT_DET_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_SAT_DET_RST);
    }

//initial config body1197 end


//initial config body1198 begin
    if(CP_LANE2_PMA_REG_CDR_SAT_DET_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[181]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_SAT_DET_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[181]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[181]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_SAT_DET_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_SAT_DET_RST_OW);
    }

//initial config body1198 end


//initial config body1199 begin
    if(CP_LANE2_PMA_REG_CDR_SAT_DET_STICKY_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[182]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_SAT_DET_STICKY_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[182]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[182]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_SAT_DET_STICKY_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_SAT_DET_STICKY_RST);
    }

//initial config body1199 end


//initial config body1200 begin
    if(CP_LANE2_PMA_REG_CDR_SAT_DET_STICKY_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[183]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_SAT_DET_STICKY_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[183]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[183]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_SAT_DET_STICKY_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_SAT_DET_STICKY_RST_OW);
    }

//initial config body1200 end


//initial config body1201 begin
    if(CP_LANE2_PMA_REG_CDR_SIGDET_STATUS_DIS == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[184]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_SIGDET_STATUS_DIS == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[184]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[184]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_SIGDET_STATUS_DIS is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_SIGDET_STATUS_DIS);
    }

//initial config body1201 end


//initial config body1202 begin
    if(CP_LANE2_PMA_REG_CDR_SAT_DET_TIMER == 0)
    {
        SC_PMA_CH_INT_RX_LANE2[186:185]   :=  to_unsigned( 0, 2) ^ 2'b10;
    }
    else if (CP_LANE2_PMA_REG_CDR_SAT_DET_TIMER == 1)
    {
        SC_PMA_CH_INT_RX_LANE2[186:185]   :=  to_unsigned( 1, 2) ^ 2'b10;
    }
    else if (CP_LANE2_PMA_REG_CDR_SAT_DET_TIMER == 2)
    {
        SC_PMA_CH_INT_RX_LANE2[186:185]   :=  to_unsigned( 2, 2) ^ 2'b10;
    }
    else if (CP_LANE2_PMA_REG_CDR_SAT_DET_TIMER == 3)
    {
        SC_PMA_CH_INT_RX_LANE2[186:185]   :=  to_unsigned( 3, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[186:185]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_SAT_DET_TIMER is set to %s. Legal values is 0,1,2,3",CP_LANE2_PMA_REG_CDR_SAT_DET_TIMER);
    }

//initial config body1202 end


//initial config body1203 begin
    if(CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_VAL == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[187]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_VAL == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[187]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[187]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_VAL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_VAL);
    }

//initial config body1203 end


//initial config body1204 begin
    if(CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[188]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[188]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[188]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_OW);
    }

//initial config body1204 end


//initial config body1205 begin
    if(CP_LANE2_PMA_REG_CDR_TURBO_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[189]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_CDR_TURBO_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[189]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[189]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_TURBO_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_TURBO_MODE_EN);
    }

//initial config body1205 end


//initial config body1206 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_190 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[190]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_RESERVED_190 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[190]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[190]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_190 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RESERVED_190);
    }

//initial config body1206 end


//initial config body1207 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_193_191 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_193_191 <= 7)
    {
        SC_PMA_CH_INT_RX_LANE2[193:191]  :=  CP_LANE2_PMA_REG_RX_RESERVED_193_191;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[193:191]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_193_191 is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_REG_RX_RESERVED_193_191);
    }

//initial config body1207 end


//initial config body1208 begin
    if(CP_LANE2_PMA_REG_CDR_STATUS_FIFO_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[194]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_CDR_STATUS_FIFO_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[194]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[194]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_CDR_STATUS_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CDR_STATUS_FIFO_EN);
    }

//initial config body1208 end


//initial config body1209 begin
    if(CP_LANE2_PMA_REG_PMA_TEST_SEL == 0)
    {
        SC_PMA_CH_INT_RX_LANE2[197:195]  :=  3'b000;
    }
    else if (CP_LANE2_PMA_REG_PMA_TEST_SEL == 1)
    {
        SC_PMA_CH_INT_RX_LANE2[197:195]  :=  3'b001;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[197:195]  :=  3'b000;
        error("Setting Error : The CP_LANE2_PMA_REG_PMA_TEST_SEL is set to %s. Legal values is 0,1",CP_LANE2_PMA_REG_PMA_TEST_SEL);
    }

//initial config body1209 end


//initial config body1210 begin
    if(CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MIN >= 0 && CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MIN <= 63)
    {
        SC_PMA_CH_INT_RX_LANE2[203:198]   :=  to_unsigned( CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MIN, 6) ^ 6'b000011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[203:198]   :=  to_unsigned( 0, 6) ^ 6'b000011;
        error("Setting Error : The CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MIN is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MIN);
    }

//initial config body1210 end


//initial config body1211 begin
    if(CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MAX >= 0 && CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MAX <= 63)
    {
        SC_PMA_CH_INT_RX_LANE2[209:204]   :=  to_unsigned( CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MAX, 6) ^ 6'b001011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[209:204]   :=  to_unsigned( 0, 6) ^ 6'b001011;
        error("Setting Error : The CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MAX is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MAX);
    }

//initial config body1211 end


//initial config body1212 begin
    if(CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MIN >= 0 && CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MIN <= 255)
    {
        SC_PMA_CH_INT_RX_LANE2[217:210]   :=  to_unsigned( CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MIN, 8) ^ 8'b00001111;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[217:210]   :=  to_unsigned( 0, 8) ^ 8'b00001111;
        error("Setting Error : The CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MIN is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MIN);
    }

//initial config body1212 end


//initial config body1213 begin
    if(CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MAX >= 0 && CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MAX <= 255)
    {
        SC_PMA_CH_INT_RX_LANE2[225:218]   :=  to_unsigned( CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MAX, 8) ^ 8'b00100011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[225:218]   :=  to_unsigned( 0, 8) ^ 8'b00100011;
        error("Setting Error : The CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MAX is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MAX);
    }

//initial config body1213 end


//initial config body1214 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_227_226 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_227_226 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE2[227:226]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_RESERVED_227_226, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[227:226]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_227_226 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_RESERVED_227_226);
    }

//initial config body1214 end


//initial config body1215 begin
    if(CP_LANE2_PMA_REG_COMWAKE_STATUS_CLEAR == 0)
    {
        SC_PMA_CH_INT_RX_LANE2[228]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_COMWAKE_STATUS_CLEAR == 1)
    {
        SC_PMA_CH_INT_RX_LANE2[228]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[228]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_COMWAKE_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_LANE2_PMA_REG_COMWAKE_STATUS_CLEAR);
    }

//initial config body1215 end


//initial config body1216 begin
    if(CP_LANE2_PMA_REG_COMINIT_STATUS_CLEAR == 0)
    {
        SC_PMA_CH_INT_RX_LANE2[229]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_COMINIT_STATUS_CLEAR == 1)
    {
        SC_PMA_CH_INT_RX_LANE2[229]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[229]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_COMINIT_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_LANE2_PMA_REG_COMINIT_STATUS_CLEAR);
    }

//initial config body1216 end


//initial config body1217 begin
    if(CP_LANE2_PMA_REG_RX_SYNC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[230]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SYNC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[230]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[230]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SYNC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SYNC_RST_N_EN);
    }

//initial config body1217 end


//initial config body1218 begin
    if(CP_LANE2_PMA_REG_RX_SYNC_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[231]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_RX_SYNC_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[231]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[231]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SYNC_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SYNC_RST_N);
    }

//initial config body1218 end


//initial config body1219 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_233_232 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_233_232 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE2[233:232]  :=  CP_LANE2_PMA_REG_RX_RESERVED_233_232;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[233:232]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_233_232 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_RESERVED_233_232);
    }

//initial config body1219 end


//initial config body1220 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_235_234 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_235_234 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE2[235:234]  :=  CP_LANE2_PMA_REG_RX_RESERVED_235_234;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[235:234]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_235_234 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_RESERVED_235_234);
    }

//initial config body1220 end


//initial config body1221 begin
    if(CP_LANE2_PMA_REG_RX_SATA_COMINIT_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[236]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SATA_COMINIT_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[236]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[236]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SATA_COMINIT_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SATA_COMINIT_OW);
    }

//initial config body1221 end


//initial config body1222 begin
    if(CP_LANE2_PMA_REG_RX_SATA_COMINIT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[237]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SATA_COMINIT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[237]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[237]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SATA_COMINIT is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SATA_COMINIT);
    }

//initial config body1222 end


//initial config body1223 begin
    if(CP_LANE2_PMA_REG_RX_SATA_COMWAKE_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[238]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SATA_COMWAKE_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[238]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[238]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SATA_COMWAKE_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SATA_COMWAKE_OW);
    }

//initial config body1223 end


//initial config body1224 begin
    if(CP_LANE2_PMA_REG_RX_SATA_COMWAKE == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[239]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SATA_COMWAKE == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[239]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[239]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SATA_COMWAKE is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SATA_COMWAKE);
    }

//initial config body1224 end


//initial config body1225 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_241_240 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_241_240 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE2[241:240]  :=  CP_LANE2_PMA_REG_RX_RESERVED_241_240;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[241:240]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_241_240 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_RESERVED_241_240);
    }

//initial config body1225 end


//initial config body1226 begin
    if(CP_LANE2_PMA_REG_RX_DCC_DISABLE == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[242]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_DCC_DISABLE == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[242]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[242]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_DCC_DISABLE is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_DCC_DISABLE);
    }

//initial config body1226 end


//initial config body1227 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_243 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[243]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_RESERVED_243 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[243]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[243]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_243 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RESERVED_243);
    }

//initial config body1227 end


//initial config body1228 begin
    if(CP_LANE2_PMA_REG_RX_SLIP_SEL_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[244]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SLIP_SEL_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[244]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[244]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SLIP_SEL_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SLIP_SEL_EN);
    }

//initial config body1228 end


//initial config body1229 begin
    if(CP_LANE2_PMA_REG_RX_SLIP_SEL >= 0 && CP_LANE2_PMA_REG_RX_SLIP_SEL <= 15)
    {
        SC_PMA_CH_INT_RX_LANE2[248:245]  :=  CP_LANE2_PMA_REG_RX_SLIP_SEL;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[248:245]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SLIP_SEL is set to %d. Legal values is 0 to 15",CP_LANE2_PMA_REG_RX_SLIP_SEL);
    }

//initial config body1229 end


//initial config body1230 begin
    if(CP_LANE2_PMA_REG_RX_SLIP_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[249]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SLIP_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[249]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[249]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SLIP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SLIP_EN);
    }

//initial config body1230 end


//initial config body1231 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_STATUS_SEL >= 0 && CP_LANE2_PMA_REG_RX_SIGDET_STATUS_SEL <= 7)
    {
        SC_PMA_CH_INT_RX_LANE2[252:250]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_SIGDET_STATUS_SEL, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[252:250]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_STATUS_SEL is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_REG_RX_SIGDET_STATUS_SEL);
    }

//initial config body1231 end


//initial config body1232 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_FSM_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[253]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_FSM_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[253]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[253]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_FSM_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SIGDET_FSM_RST_N);
    }

//initial config body1232 end


//initial config body1233 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_254 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[254]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_RESERVED_254 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[254]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[254]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_254 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RESERVED_254);
    }

//initial config body1233 end


//initial config body1234 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_STATUS == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[255]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_STATUS == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[255]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[255]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_STATUS is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SIGDET_STATUS);
    }

//initial config body1234 end


//initial config body1235 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_VTH == "9MV")
    {
        SC_PMA_CH_INT_RX_LANE2[259:256]   :=  to_unsigned( 0, 4) ^ 4'b0010;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_VTH == "18MV")
    {
        SC_PMA_CH_INT_RX_LANE2[259:256]   :=  to_unsigned( 1, 4) ^ 4'b0010;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_VTH == "27MV")
    {
        SC_PMA_CH_INT_RX_LANE2[259:256]   :=  to_unsigned( 2, 4) ^ 4'b0010;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_VTH == "36MV")
    {
        SC_PMA_CH_INT_RX_LANE2[259:256]   :=  to_unsigned( 3, 4) ^ 4'b0010;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_VTH == "45MV")
    {
        SC_PMA_CH_INT_RX_LANE2[259:256]   :=  to_unsigned( 4, 4) ^ 4'b0010;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_VTH == "54MV")
    {
        SC_PMA_CH_INT_RX_LANE2[259:256]   :=  to_unsigned( 5, 4) ^ 4'b0010;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_VTH == "63MV")
    {
        SC_PMA_CH_INT_RX_LANE2[259:256]   :=  to_unsigned( 6, 4) ^ 4'b0010;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_VTH == "72MV")
    {
        SC_PMA_CH_INT_RX_LANE2[259:256]   :=  to_unsigned( 7, 4) ^ 4'b0010;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[259:256]   :=  to_unsigned( 0, 4) ^ 4'b0010;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_VTH is set to %s. Legal values is 9MV,18MV,27MV,36MV,45MV,54MV,63MV,72MV",CP_LANE2_PMA_REG_RX_SIGDET_VTH);
    }

//initial config body1235 end


//initial config body1236 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_GRM == 0)
    {
        SC_PMA_CH_INT_RX_LANE2[261:260]  :=  2'b00;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_GRM == 1)
    {
        SC_PMA_CH_INT_RX_LANE2[261:260]  :=  2'b01;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_GRM == 2)
    {
        SC_PMA_CH_INT_RX_LANE2[261:260]  :=  2'b10;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_GRM == 3)
    {
        SC_PMA_CH_INT_RX_LANE2[261:260]  :=  2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[261:260]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_GRM is set to %s. Legal values is 0,1,2,3",CP_LANE2_PMA_REG_RX_SIGDET_GRM);
    }

//initial config body1236 end


//initial config body1237 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_PULSE_EXT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[262]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_PULSE_EXT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[262]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[262]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_PULSE_EXT is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SIGDET_PULSE_EXT);
    }

//initial config body1237 end


//initial config body1238 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_CH2_SEL == 0)
    {
        SC_PMA_CH_INT_RX_LANE2[263]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_CH2_SEL == 1)
    {
        SC_PMA_CH_INT_RX_LANE2[263]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[263]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_CH2_SEL is set to %s. Legal values is 0,1",CP_LANE2_PMA_REG_RX_SIGDET_CH2_SEL);
    }

//initial config body1238 end


//initial config body1239 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW >= 0 && CP_LANE2_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW <= 31)
    {
        SC_PMA_CH_INT_RX_LANE2[268:264]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW, 5) ^ 5'b00011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[268:264]   :=  to_unsigned( 0, 5) ^ 5'b00011;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW is set to %d. Legal values is 0 to 31",CP_LANE2_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW);
    }

//initial config body1239 end


//initial config body1240 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_CHK_WINDOW_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[269]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_RX_SIGDET_CHK_WINDOW_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[269]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[269]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_CHK_WINDOW_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_SIGDET_CHK_WINDOW_EN);
    }

//initial config body1240 end


//initial config body1241 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING >= 0 && CP_LANE2_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING <= 7)
    {
        SC_PMA_CH_INT_RX_LANE2[272:270]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING, 3) ^ 3'b100;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[272:270]   :=  to_unsigned( 0, 3) ^ 3'b100;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING);
    }

//initial config body1241 end


//initial config body1242 begin
    if(CP_LANE2_PMA_REG_SLIP_FIFO_INV_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[273]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_SLIP_FIFO_INV_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[273]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[273]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_SLIP_FIFO_INV_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_SLIP_FIFO_INV_EN);
    }

//initial config body1242 end


//initial config body1243 begin
    if(CP_LANE2_PMA_REG_SLIP_FIFO_INV == "POS_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE2[274]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_SLIP_FIFO_INV == "NEG_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE2[274]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[274]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_SLIP_FIFO_INV is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_LANE2_PMA_REG_SLIP_FIFO_INV);
    }

//initial config body1243 end


//initial config body1244 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL >= 0 && CP_LANE2_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL <= 31)
    {
        SC_PMA_CH_INT_RX_LANE2[279:275]  :=  CP_LANE2_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[279:275]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL is set to %d. Legal values is 0 to 31",CP_LANE2_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL);
    }

//initial config body1244 end


//initial config body1245 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_4OOB_DET_SEL >= 0 && CP_LANE2_PMA_REG_RX_SIGDET_4OOB_DET_SEL <= 7)
    {
        SC_PMA_CH_INT_RX_LANE2[282:280]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_SIGDET_4OOB_DET_SEL, 3) ^ 3'b111;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[282:280]   :=  to_unsigned( 0, 3) ^ 3'b111;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_4OOB_DET_SEL is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_REG_RX_SIGDET_4OOB_DET_SEL);
    }

//initial config body1245 end


//initial config body1246 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_285_283 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_285_283 <= 7)
    {
        SC_PMA_CH_INT_RX_LANE2[285:283]  :=  CP_LANE2_PMA_REG_RX_RESERVED_285_283;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[285:283]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_285_283 is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_REG_RX_RESERVED_285_283);
    }

//initial config body1246 end


//initial config body1247 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_286 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[286]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_RESERVED_286 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[286]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[286]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_286 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RESERVED_286);
    }

//initial config body1247 end


//initial config body1248 begin
    if(CP_LANE2_PMA_REG_RX_SIGDET_IC_I >= 0 && CP_LANE2_PMA_REG_RX_SIGDET_IC_I <= 15)
    {
        SC_PMA_CH_INT_RX_LANE2[290:287]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_SIGDET_IC_I, 4) ^ 4'b1010;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[290:287]   :=  to_unsigned( 0, 4) ^ 4'b1010;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_SIGDET_IC_I is set to %d. Legal values is 0 to 15",CP_LANE2_PMA_REG_RX_SIGDET_IC_I);
    }

//initial config body1248 end


//initial config body1249 begin
    if(CP_LANE2_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[291]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[291]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[291]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW);
    }

//initial config body1249 end


//initial config body1250 begin
    if(CP_LANE2_PMA_REG_RX_OOB_DETECTOR_RESET_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[292]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_OOB_DETECTOR_RESET_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[292]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[292]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_OOB_DETECTOR_RESET_N is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_OOB_DETECTOR_RESET_N);
    }

//initial config body1250 end


//initial config body1251 begin
    if(CP_LANE2_PMA_REG_RX_OOB_DETECTOR_PD_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[293]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_OOB_DETECTOR_PD_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[293]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[293]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_OOB_DETECTOR_PD_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_OOB_DETECTOR_PD_OW);
    }

//initial config body1251 end


//initial config body1252 begin
    if(CP_LANE2_PMA_REG_RX_OOB_DETECTOR_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE2[294]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_OOB_DETECTOR_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE2[294]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[294]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_OOB_DETECTOR_PD is set to %s. Legal values is ON,OFF",CP_LANE2_PMA_REG_RX_OOB_DETECTOR_PD);
    }

//initial config body1252 end


//initial config body1253 begin
    if(CP_LANE2_PMA_REG_RX_LS_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[295]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_LS_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[295]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[295]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_LS_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_LS_MODE_EN);
    }

//initial config body1253 end


//initial config body1254 begin

 if(CP_LANE2_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE2[296]  :=  1'b0; 
}
else if (CP_LANE2_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE2[296]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE2[296]  :=  1'b0; 
 error("Setting Error : The CP_LANE2_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE2_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE2[297]  :=  1'b0; 
}
else if (CP_LANE2_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE2[297]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE2[297]  :=  1'b0; 
 error("Setting Error : The CP_LANE2_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL);  
}

//initial config body1254 end


//initial config body1255 begin
    if(CP_LANE2_PMA_REG_RX_EQ1_R_SET_TOP >= 0 && CP_LANE2_PMA_REG_RX_EQ1_R_SET_TOP <= 3)
    {
        SC_PMA_CH_INT_RX_LANE2[299:298]  :=  CP_LANE2_PMA_REG_RX_EQ1_R_SET_TOP;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[299:298]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_EQ1_R_SET_TOP is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_EQ1_R_SET_TOP);
    }

//initial config body1255 end


//initial config body1256 begin
    if(CP_LANE2_PMA_REG_RX_EQ1_R_SET_FB >= 0 && CP_LANE2_PMA_REG_RX_EQ1_R_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE2[303:300]  :=  CP_LANE2_PMA_REG_RX_EQ1_R_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[303:300]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_EQ1_R_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE2_PMA_REG_RX_EQ1_R_SET_FB);
    }

//initial config body1256 end


//initial config body1257 begin
    if(CP_LANE2_PMA_REG_RX_EQ1_C_SET_FB >= 0 && CP_LANE2_PMA_REG_RX_EQ1_C_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE2[307:304]  :=  CP_LANE2_PMA_REG_RX_EQ1_C_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[307:304]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_EQ1_C_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE2_PMA_REG_RX_EQ1_C_SET_FB);
    }

//initial config body1257 end


//initial config body1258 begin
    if(CP_LANE2_PMA_REG_RX_EQ1_OFF == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[308]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_EQ1_OFF == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[308]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[308]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_EQ1_OFF is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_EQ1_OFF);
    }

//initial config body1258 end


//initial config body1259 begin
    if(CP_LANE2_PMA_REG_RX_EQ2_R_SET_TOP >= 0 && CP_LANE2_PMA_REG_RX_EQ2_R_SET_TOP <= 3)
    {
        SC_PMA_CH_INT_RX_LANE2[310:309]  :=  CP_LANE2_PMA_REG_RX_EQ2_R_SET_TOP;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[310:309]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_EQ2_R_SET_TOP is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_EQ2_R_SET_TOP);
    }

//initial config body1259 end


//initial config body1260 begin
    if(CP_LANE2_PMA_REG_RX_EQ2_R_SET_FB >= 0 && CP_LANE2_PMA_REG_RX_EQ2_R_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE2[314:311]  :=  CP_LANE2_PMA_REG_RX_EQ2_R_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[314:311]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_EQ2_R_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE2_PMA_REG_RX_EQ2_R_SET_FB);
    }

//initial config body1260 end


//initial config body1261 begin
    if(CP_LANE2_PMA_REG_RX_EQ2_C_SET_FB >= 0 && CP_LANE2_PMA_REG_RX_EQ2_C_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE2[318:315]  :=  CP_LANE2_PMA_REG_RX_EQ2_C_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[318:315]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_EQ2_C_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE2_PMA_REG_RX_EQ2_C_SET_FB);
    }

//initial config body1261 end


//initial config body1262 begin
    if(CP_LANE2_PMA_REG_RX_EQ2_OFF == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[319]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_EQ2_OFF == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[319]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[319]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_EQ2_OFF is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_EQ2_OFF);
    }

//initial config body1262 end


//initial config body1263 begin
    if(CP_LANE2_PMA_REG_EQ_DAC >= 0 && CP_LANE2_PMA_REG_EQ_DAC <= 63)
    {
        SC_PMA_CH_INT_RX_LANE2[325:320]  :=  CP_LANE2_PMA_REG_EQ_DAC;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[325:320]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_EQ_DAC is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_EQ_DAC);
    }

//initial config body1263 end


//initial config body1264 begin
    if(CP_LANE2_PMA_REG_RX_ICTRL_EQ >= 0 && CP_LANE2_PMA_REG_RX_ICTRL_EQ <= 3)
    {
        SC_PMA_CH_INT_RX_LANE2[327:326]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_ICTRL_EQ, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[327:326]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_ICTRL_EQ is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_RX_ICTRL_EQ);
    }

//initial config body1264 end


//initial config body1265 begin
    if(CP_LANE2_PMA_REG_EQ_DC_CALIB_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[328]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_EQ_DC_CALIB_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[328]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[328]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_EQ_DC_CALIB_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_EQ_DC_CALIB_EN);
    }

//initial config body1265 end


//initial config body1266 begin
    if(CP_LANE2_PMA_REG_EQ_DC_CALIB_SEL == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[329]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_EQ_DC_CALIB_SEL == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[329]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[329]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_EQ_DC_CALIB_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_EQ_DC_CALIB_SEL);
    }

//initial config body1266 end


//initial config body1267 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_337_330 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_337_330 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE2[337:330]  :=  CP_LANE2_PMA_REG_RX_RESERVED_337_330;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[337:330]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_337_330 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_RX_RESERVED_337_330);
    }

//initial config body1267 end


//initial config body1268 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_345_338 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_345_338 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE2[345:338]  :=  CP_LANE2_PMA_REG_RX_RESERVED_345_338;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[345:338]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_345_338 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_RX_RESERVED_345_338);
    }

//initial config body1268 end


//initial config body1269 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_353_346 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_353_346 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE2[353:346]  :=  CP_LANE2_PMA_REG_RX_RESERVED_353_346;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[353:346]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_353_346 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_RX_RESERVED_353_346);
    }

//initial config body1269 end


//initial config body1270 begin
    if(CP_LANE2_PMA_REG_RX_RESERVED_361_354 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_361_354 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE2[361:354]  :=  CP_LANE2_PMA_REG_RX_RESERVED_361_354;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[361:354]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_361_354 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_RX_RESERVED_361_354);
    }

//initial config body1270 end


//initial config body1271 begin

 if(CP_LANE2_PMA_CTLE_CTRL_REG_I >= 0 && CP_LANE2_PMA_CTLE_CTRL_REG_I <= 15) 
 {
 SC_PMA_CH_INT_RX_LANE2[365:362]  :=  CP_LANE2_PMA_CTLE_CTRL_REG_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE2[365:362]  :=  0; 
 error("Setting Error : The CP_LANE2_PMA_CTLE_CTRL_REG_I is set to %d. Legal values is 0 to 15",CP_LANE2_PMA_CTLE_CTRL_REG_I); 
}
//}

 //initial//Altered  
 //{
 if(CP_LANE2_PMA_CTLE_REG_FORCE_SEL_I == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE2[366]  :=  1'b0; 
}
else if (CP_LANE2_PMA_CTLE_REG_FORCE_SEL_I == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE2[366]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE2[366]  :=  1'b0; 
 error("Setting Error : The CP_LANE2_PMA_CTLE_REG_FORCE_SEL_I is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_CTLE_REG_FORCE_SEL_I);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE2_PMA_CTLE_REG_HOLD_I == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE2[367]  :=  1'b0; 
}
else if (CP_LANE2_PMA_CTLE_REG_HOLD_I == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE2[367]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE2[367]  :=  1'b0; 
 error("Setting Error : The CP_LANE2_PMA_CTLE_REG_HOLD_I is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_CTLE_REG_HOLD_I);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE2_PMA_CTLE_REG_INIT_DAC_I >= 0 && CP_LANE2_PMA_CTLE_REG_INIT_DAC_I <= 15) 
 {
 SC_PMA_CH_INT_RX_LANE2[371:368]  :=  CP_LANE2_PMA_CTLE_REG_INIT_DAC_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE2[371:368]  :=  0; 
 error("Setting Error : The CP_LANE2_PMA_CTLE_REG_INIT_DAC_I is set to %d. Legal values is 0 to 15",CP_LANE2_PMA_CTLE_REG_INIT_DAC_I); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE2_PMA_CTLE_REG_POLARITY_I == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE2[372]  :=  1'b0; 
}
else if (CP_LANE2_PMA_CTLE_REG_POLARITY_I == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE2[372]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE2[372]  :=  1'b0; 
 error("Setting Error : The CP_LANE2_PMA_CTLE_REG_POLARITY_I is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_CTLE_REG_POLARITY_I);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE2_PMA_CTLE_REG_SHIFTER_GAIN_I >= 0 && CP_LANE2_PMA_CTLE_REG_SHIFTER_GAIN_I <= 7) 
 {
 SC_PMA_CH_INT_RX_LANE2[375:373]  :=  CP_LANE2_PMA_CTLE_REG_SHIFTER_GAIN_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE2[375:373]  :=  0; 
 error("Setting Error : The CP_LANE2_PMA_CTLE_REG_SHIFTER_GAIN_I is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_CTLE_REG_SHIFTER_GAIN_I); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE2_PMA_CTLE_REG_THRESHOLD_I >= 0 && CP_LANE2_PMA_CTLE_REG_THRESHOLD_I <= 4095) 
 {
 SC_PMA_CH_INT_RX_LANE2[387:376]  :=  CP_LANE2_PMA_CTLE_REG_THRESHOLD_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE2[387:376]  :=  0; 
 error("Setting Error : The  is set to %d. Legal values is 0 to 4095",CP_LANE2_PMA_CTLE_REG_THRESHOLD_I); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE2_PMA_REG_RX_RES_TRIM_EN == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE2[388]  :=  1'b0; 
}
else if (CP_LANE2_PMA_REG_RX_RES_TRIM_EN == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE2[388]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE2[388]  :=  1'b0; 
 error("Setting Error : The CP_LANE2_PMA_REG_RX_RES_TRIM_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_RES_TRIM_EN);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE2_PMA_REG_RX_RESERVED_393_389 >= 0 && CP_LANE2_PMA_REG_RX_RESERVED_393_389 <= 31) 
 {
 SC_PMA_CH_INT_RX_LANE2[393:389]  :=  CP_LANE2_PMA_REG_RX_RESERVED_393_389; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE2[393:389]  :=  0; 
 error("Setting Error : The CP_LANE2_PMA_REG_RX_RESERVED_393_389 is set to %d. Legal values is 0 to 31",CP_LANE2_PMA_REG_RX_RESERVED_393_389); 
}

//initial config body1271 end


//initial config body1272 begin
    if(CP_LANE2_PMA_CFG_RX_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE2[394]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_CFG_RX_LANE_POWERUP == "ON")
    {
        SC_PMA_CH_INT_RX_LANE2[394]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[394]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_CFG_RX_LANE_POWERUP is set to %s. Legal values is OFF,ON",CP_LANE2_PMA_CFG_RX_LANE_POWERUP);
    }

//initial config body1272 end


//initial config body1273 begin
    if(CP_LANE2_PMA_CFG_RX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[395]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_CFG_RX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[395]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[395]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_CFG_RX_PMA_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_CFG_RX_PMA_RSTN);
    }

//initial config body1273 end


//initial config body1274 begin
    if(CP_LANE2_PMA_INT_PMA_RX_MASK_0 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[396]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_INT_PMA_RX_MASK_0 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[396]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[396]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_INT_PMA_RX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_INT_PMA_RX_MASK_0);
    }

//initial config body1274 end


//initial config body1275 begin
    if(CP_LANE2_PMA_INT_PMA_RX_CLR_0 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[397]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_INT_PMA_RX_CLR_0 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[397]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[397]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_INT_PMA_RX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_INT_PMA_RX_CLR_0);
    }

//initial config body1275 end


//initial config body1276 begin
    if(CP_LANE2_PMA_CFG_CTLE_ADP_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE2[398]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_CFG_CTLE_ADP_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE2[398]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE2[398]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_CFG_CTLE_ADP_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_CFG_CTLE_ADP_RSTN);
    }

//initial config body1276 end


//initial config body1277 begin
    if(CP_LANE2_PMA_REG_TX_PD == "ON")
    {
        SC_PMA_CH_INT_TX_LANE2[0]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_PD == "OFF")
    {
        SC_PMA_CH_INT_TX_LANE2[0]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[0]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_PD is set to %s. Legal values is ON,OFF",CP_LANE2_PMA_REG_TX_PD);
    }

//initial config body1277 end


//initial config body1278 begin
    if(CP_LANE2_PMA_REG_TX_PD_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[1]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_TX_PD_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[1]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[1]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_PD_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_PD_OW);
    }

//initial config body1278 end


//initial config body1279 begin
    if(CP_LANE2_PMA_REG_TX_MAIN_PRE_Z == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[2]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_MAIN_PRE_Z == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[2]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[2]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_MAIN_PRE_Z is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_MAIN_PRE_Z);
    }

//initial config body1279 end


//initial config body1280 begin
    if(CP_LANE2_PMA_REG_TX_MAIN_PRE_Z_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[3]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_MAIN_PRE_Z_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[3]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[3]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_MAIN_PRE_Z_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_MAIN_PRE_Z_OW);
    }

//initial config body1280 end


//initial config body1281 begin
    if(CP_LANE2_PMA_REG_TX_BEACON_TIMER_SEL >= 0 && CP_LANE2_PMA_REG_TX_BEACON_TIMER_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE2[5:4]  :=  CP_LANE2_PMA_REG_TX_BEACON_TIMER_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[5:4]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_BEACON_TIMER_SEL is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_TX_BEACON_TIMER_SEL);
    }

//initial config body1281 end


//initial config body1282 begin
    if(CP_LANE2_PMA_REG_TX_RXDET_REQ_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[6]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RXDET_REQ_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[6]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[6]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RXDET_REQ_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RXDET_REQ_OW);
    }

//initial config body1282 end


//initial config body1283 begin
    if(CP_LANE2_PMA_REG_TX_RXDET_REQ == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[7]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RXDET_REQ == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[7]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[7]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RXDET_REQ is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RXDET_REQ);
    }

//initial config body1283 end


//initial config body1284 begin
    if(CP_LANE2_PMA_REG_TX_BEACON_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[8]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_BEACON_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[8]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[8]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_BEACON_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_BEACON_EN_OW);
    }

//initial config body1284 end


//initial config body1285 begin
    if(CP_LANE2_PMA_REG_TX_BEACON_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[9]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_BEACON_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[9]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[9]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_BEACON_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_BEACON_EN);
    }

//initial config body1285 end


//initial config body1286 begin
    if(CP_LANE2_PMA_REG_TX_EI_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[10]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_EI_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[10]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[10]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_EI_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_EI_EN_OW);
    }

//initial config body1286 end


//initial config body1287 begin
    if(CP_LANE2_PMA_REG_TX_EI_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[11]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_EI_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[11]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[11]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_EI_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_EI_EN);
    }

//initial config body1287 end


//initial config body1288 begin
    if(CP_LANE2_PMA_REG_TX_BIT_CONV == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[12]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_BIT_CONV == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[12]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[12]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_BIT_CONV is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_BIT_CONV);
    }

//initial config body1288 end


//initial config body1289 begin
    if(CP_LANE2_PMA_REG_TX_RES_CAL >= 0 && CP_LANE2_PMA_REG_TX_RES_CAL <= 63)
    {
        SC_PMA_CH_INT_TX_LANE2[18:13]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_RES_CAL, 6) ^ 6'b110010;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[18:13]   :=  to_unsigned( 0, 6) ^ 6'b110010;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RES_CAL is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_RES_CAL);
    }

//initial config body1289 end


//initial config body1290 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_19 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[19]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_19 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[19]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[19]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_19 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_19);
    }

//initial config body1290 end


//initial config body1291 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_25_20 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_25_20 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE2[25:20]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_RESERVED_25_20, 6) ^ 6'b100000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[25:20]   :=  to_unsigned( 0, 6) ^ 6'b100000;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_25_20 is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_RESERVED_25_20);
    }

//initial config body1291 end


//initial config body1292 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_33_26 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_33_26 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[33:26]  :=  CP_LANE2_PMA_REG_TX_RESERVED_33_26;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[33:26]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_33_26 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_RESERVED_33_26);
    }

//initial config body1292 end


//initial config body1293 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_41_34 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_41_34 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[41:34]  :=  CP_LANE2_PMA_REG_TX_RESERVED_41_34;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[41:34]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_41_34 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_RESERVED_41_34);
    }

//initial config body1293 end


//initial config body1294 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_49_42 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_49_42 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[49:42]  :=  CP_LANE2_PMA_REG_TX_RESERVED_49_42;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[49:42]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_49_42 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_RESERVED_49_42);
    }

//initial config body1294 end


//initial config body1295 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_57_50 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_57_50 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[57:50]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_RESERVED_57_50, 8) ^ 8'b01000000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[57:50]   :=  to_unsigned( 0, 8) ^ 8'b01000000;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_57_50 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_RESERVED_57_50);
    }

//initial config body1295 end


//initial config body1296 begin
    if(CP_LANE2_PMA_REG_TX_SYNC_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[58]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_SYNC_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[58]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[58]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_SYNC_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_SYNC_OW);
    }

//initial config body1296 end


//initial config body1297 begin
    if(CP_LANE2_PMA_REG_TX_SYNC == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[59]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_TX_SYNC == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[59]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[59]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_SYNC is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_SYNC);
    }

//initial config body1297 end


//initial config body1298 begin
    if(CP_LANE2_PMA_REG_TX_PD_POST == "ON")
    {
        SC_PMA_CH_INT_TX_LANE2[60]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_TX_PD_POST == "OFF")
    {
        SC_PMA_CH_INT_TX_LANE2[60]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[60]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_PD_POST is set to %s. Legal values is ON,OFF",CP_LANE2_PMA_REG_TX_PD_POST);
    }

//initial config body1298 end


//initial config body1299 begin
    if(CP_LANE2_PMA_REG_TX_PD_POST_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[61]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_TX_PD_POST_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[61]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[61]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_PD_POST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_PD_POST_OW);
    }

//initial config body1299 end


//initial config body1300 begin
    if(CP_LANE2_PMA_REG_TX_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[62]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[62]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[62]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESET_N_OW);
    }

//initial config body1300 end


//initial config body1301 begin
    if(CP_LANE2_PMA_REG_TX_RESET_N == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[63]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_TX_RESET_N == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[63]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[63]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESET_N is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESET_N);
    }

//initial config body1301 end


//initial config body1302 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_64 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[64]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_64 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[64]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[64]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_64 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_64);
    }

//initial config body1302 end


//initial config body1303 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_65 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[65]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_65 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[65]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[65]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_65 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_65);
    }

//initial config body1303 end


//initial config body1304 begin
    if(CP_LANE2_PMA_REG_TX_BUSWIDTH_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[66]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_BUSWIDTH_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[66]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[66]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_BUSWIDTH_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_BUSWIDTH_OW);
    }

//initial config body1304 end


//initial config body1305 begin
    if(CP_LANE2_PMA_REG_TX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH_INT_TX_LANE2[69:67]   :=  to_unsigned( 0, 3) ^ 3'b011;
    }
    else if (CP_LANE2_PMA_REG_TX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH_INT_TX_LANE2[69:67]   :=  to_unsigned( 1, 3) ^ 3'b011;
    }
    else if (CP_LANE2_PMA_REG_TX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH_INT_TX_LANE2[69:67]   :=  to_unsigned( 2, 3) ^ 3'b011;
    }
    else if (CP_LANE2_PMA_REG_TX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH_INT_TX_LANE2[69:67]   :=  to_unsigned( 3, 3) ^ 3'b011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[69:67]   :=  to_unsigned( 0, 3) ^ 3'b011;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE2_PMA_REG_TX_BUSWIDTH);
    }

//initial config body1305 end


//initial config body1306 begin
    if(CP_LANE2_PMA_REG_PLL_READY_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[70]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_PLL_READY_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[70]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[70]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_PLL_READY_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_PLL_READY_OW);
    }

//initial config body1306 end


//initial config body1307 begin
    if(CP_LANE2_PMA_REG_PLL_READY == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[71]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_PLL_READY == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[71]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[71]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_PLL_READY is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_PLL_READY);
    }

//initial config body1307 end


//initial config body1308 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_72 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[72]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_72 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[72]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[72]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_72 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_72);
    }

//initial config body1308 end


//initial config body1309 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_73 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[73]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_73 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[73]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[73]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_73 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_73);
    }

//initial config body1309 end


//initial config body1310 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_74 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[74]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_74 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[74]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[74]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_74 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_74);
    }

//initial config body1310 end


//initial config body1311 begin
    if(CP_LANE2_PMA_REG_EI_PCLK_DELAY_SEL >= 0 && CP_LANE2_PMA_REG_EI_PCLK_DELAY_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE2[76:75]  :=  CP_LANE2_PMA_REG_EI_PCLK_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[76:75]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_EI_PCLK_DELAY_SEL is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_EI_PCLK_DELAY_SEL);
    }

//initial config body1311 end


//initial config body1312 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_77 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[77]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_77 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[77]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[77]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_77 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_77);
    }

//initial config body1312 end


//initial config body1313 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_83_78 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_83_78 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE2[83:78]  :=  CP_LANE2_PMA_REG_TX_RESERVED_83_78;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[83:78]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_83_78 is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_RESERVED_83_78);
    }

//initial config body1313 end


//initial config body1314 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_89_84 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_89_84 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE2[89:84]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_RESERVED_89_84, 6) ^ 6'b010101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[89:84]   :=  to_unsigned( 0, 6) ^ 6'b010101;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_89_84 is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_RESERVED_89_84);
    }

//initial config body1314 end


//initial config body1315 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_95_90 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_95_90 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE2[95:90]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_RESERVED_95_90, 6) ^ 6'b100000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[95:90]   :=  to_unsigned( 0, 6) ^ 6'b100000;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_95_90 is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_RESERVED_95_90);
    }

//initial config body1315 end


//initial config body1316 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_101_96 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_101_96 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE2[101:96]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_RESERVED_101_96, 6) ^ 6'b111111;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[101:96]   :=  to_unsigned( 0, 6) ^ 6'b111111;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_101_96 is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_RESERVED_101_96);
    }

//initial config body1316 end


//initial config body1317 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_107_102 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_107_102 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE2[107:102]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_RESERVED_107_102, 6) ^ 6'b110101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[107:102]   :=  to_unsigned( 0, 6) ^ 6'b110101;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_107_102 is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_RESERVED_107_102);
    }

//initial config body1317 end


//initial config body1318 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_113_108 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_113_108 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE2[113:108]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_RESERVED_113_108, 6) ^ 6'b110000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[113:108]   :=  to_unsigned( 0, 6) ^ 6'b110000;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_113_108 is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_RESERVED_113_108);
    }

//initial config body1318 end


//initial config body1319 begin
    if(CP_LANE2_PMA_REG_TX_AMP_DAC0 >= 0 && CP_LANE2_PMA_REG_TX_AMP_DAC0 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE2[119:114]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_AMP_DAC0, 6) ^ 6'b011001;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[119:114]   :=  to_unsigned( 0, 6) ^ 6'b011001;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_AMP_DAC0 is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_AMP_DAC0);
    }

//initial config body1319 end


//initial config body1320 begin

 if(CP_LANE2_PMA_REG_TX_AMP_DAC1 >= 0 && CP_LANE2_PMA_REG_TX_AMP_DAC1 <= 63) 
 {
 SC_PMA_CH_INT_TX_LANE2[125:120]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_AMP_DAC1, 6) ^ 6'b010011; 
}
 else 
 {
 SC_PMA_CH_INT_TX_LANE2[125:120]   :=  to_unsigned( 0, 6) ^ 6'b010011; 
 error("Setting Error : The CP_LANE2_PMA_REG_TX_AMP_DAC1 is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_AMP_DAC1); 
}
//}

 //initial//Altered value 19 to 14
 //{
 if(CP_LANE2_PMA_REG_TX_AMP_DAC2 >= 0 && CP_LANE2_PMA_REG_TX_AMP_DAC2 <= 63) 
 {
 SC_PMA_CH_INT_TX_LANE2[131:126]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_AMP_DAC2, 6) ^ 6'b001110; 
}
 else 
 {
 SC_PMA_CH_INT_TX_LANE2[131:126]   :=  to_unsigned( 0, 6) ^ 6'b001110; 
 error("Setting Error : The CP_LANE2_PMA_REG_TX_AMP_DAC2 is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_AMP_DAC2); 
}

//initial config body1320 end


//initial config body1321 begin
    if(CP_LANE2_PMA_REG_TX_AMP_DAC3 >= 0 && CP_LANE2_PMA_REG_TX_AMP_DAC3 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE2[137:132]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_AMP_DAC3, 6) ^ 6'b001001;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[137:132]   :=  to_unsigned( 0, 6) ^ 6'b001001;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_AMP_DAC3 is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_AMP_DAC3);
    }

//initial config body1321 end


//initial config body1322 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_143_138 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_143_138 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE2[143:138]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_RESERVED_143_138, 6) ^ 6'b000101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[143:138]   :=  to_unsigned( 0, 6) ^ 6'b000101;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_143_138 is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_RESERVED_143_138);
    }

//initial config body1322 end


//initial config body1323 begin
    if(CP_LANE2_PMA_REG_TX_MARGIN >= 0 && CP_LANE2_PMA_REG_TX_MARGIN <= 7)
    {
        SC_PMA_CH_INT_TX_LANE2[146:144]  :=  CP_LANE2_PMA_REG_TX_MARGIN;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[146:144]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_MARGIN is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_REG_TX_MARGIN);
    }

//initial config body1323 end


//initial config body1324 begin
    if(CP_LANE2_PMA_REG_TX_MARGIN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[147]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_MARGIN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[147]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[147]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_MARGIN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_MARGIN_OW);
    }

//initial config body1324 end


//initial config body1325 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_149_148 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_149_148 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE2[149:148]  :=  CP_LANE2_PMA_REG_TX_RESERVED_149_148;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[149:148]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_149_148 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_TX_RESERVED_149_148);
    }

//initial config body1325 end


//initial config body1326 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_150 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[150]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_150 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[150]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[150]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_150 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_150);
    }

//initial config body1326 end


//initial config body1327 begin
    if(CP_LANE2_PMA_REG_TX_SWING == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[151]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_SWING == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[151]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[151]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_SWING is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_SWING);
    }

//initial config body1327 end


//initial config body1328 begin
    if(CP_LANE2_PMA_REG_TX_SWING_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[152]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_SWING_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[152]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[152]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_SWING_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_SWING_OW);
    }

//initial config body1328 end


//initial config body1329 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_153 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[153]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_153 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[153]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[153]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_153 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_153);
    }

//initial config body1329 end


//initial config body1330 begin
    if(CP_LANE2_PMA_REG_TX_RXDET_THRESHOLD == "28MV")
    {
        SC_PMA_CH_INT_TX_LANE2[155:154]   :=  to_unsigned( 0, 2) ^ 2'b10;
    }
    else if (CP_LANE2_PMA_REG_TX_RXDET_THRESHOLD == "56MV")
    {
        SC_PMA_CH_INT_TX_LANE2[155:154]   :=  to_unsigned( 1, 2) ^ 2'b10;
    }
    else if (CP_LANE2_PMA_REG_TX_RXDET_THRESHOLD == "84MV")
    {
        SC_PMA_CH_INT_TX_LANE2[155:154]   :=  to_unsigned( 2, 2) ^ 2'b10;
    }
    else if (CP_LANE2_PMA_REG_TX_RXDET_THRESHOLD == "112MV")
    {
        SC_PMA_CH_INT_TX_LANE2[155:154]   :=  to_unsigned( 3, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[155:154]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RXDET_THRESHOLD is set to %s. Legal values is 28MV,56MV,84MV,112MV",CP_LANE2_PMA_REG_TX_RXDET_THRESHOLD);
    }

//initial config body1330 end


//initial config body1331 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_157_156 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_157_156 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE2[157:156]  :=  CP_LANE2_PMA_REG_TX_RESERVED_157_156;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[157:156]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_157_156 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_TX_RESERVED_157_156);
    }

//initial config body1331 end


//initial config body1332 begin
    if(CP_LANE2_PMA_REG_TX_BEACON_OSC_CTRL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[158]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_BEACON_OSC_CTRL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[158]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[158]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_BEACON_OSC_CTRL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_BEACON_OSC_CTRL);
    }

//initial config body1332 end


//initial config body1333 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_160_159 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_160_159 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE2[160:159]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_RESERVED_160_159, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[160:159]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_160_159 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_TX_RESERVED_160_159);
    }

//initial config body1333 end


//initial config body1334 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_162_161 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_162_161 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE2[162:161]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_RESERVED_162_161, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[162:161]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_162_161 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_TX_RESERVED_162_161);
    }

//initial config body1334 end


//initial config body1335 begin
    if(CP_LANE2_PMA_REG_TX_TX2RX_SLPBACK_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[163]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_TX2RX_SLPBACK_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[163]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[163]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_TX2RX_SLPBACK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_TX2RX_SLPBACK_EN);
    }

//initial config body1335 end


//initial config body1336 begin
    if(CP_LANE2_PMA_REG_TX_PCLK_EDGE_SEL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[164]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_PCLK_EDGE_SEL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[164]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[164]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_PCLK_EDGE_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_PCLK_EDGE_SEL);
    }

//initial config body1336 end


//initial config body1337 begin
    if(CP_LANE2_PMA_REG_TX_RXDET_STATUS_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[165]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RXDET_STATUS_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[165]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[165]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RXDET_STATUS_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RXDET_STATUS_OW);
    }

//initial config body1337 end


//initial config body1338 begin
    if(CP_LANE2_PMA_REG_TX_RXDET_STATUS == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[166]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_TX_RXDET_STATUS == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[166]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[166]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RXDET_STATUS is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RXDET_STATUS);
    }

//initial config body1338 end


//initial config body1339 begin
    if(CP_LANE2_PMA_REG_TX_PRBS_GEN_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[167]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_PRBS_GEN_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[167]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[167]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_PRBS_GEN_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_PRBS_GEN_EN);
    }

//initial config body1339 end


//initial config body1340 begin
    if(CP_LANE2_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH_INT_TX_LANE2[169:168]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE2_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH_INT_TX_LANE2[169:168]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE2_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH_INT_TX_LANE2[169:168]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE2_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH_INT_TX_LANE2[169:168]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[169:168]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_PRBS_GEN_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE2_PMA_REG_TX_PRBS_GEN_WIDTH_SEL);
    }

//initial config body1340 end


//initial config body1341 begin
    if(CP_LANE2_PMA_REG_TX_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH_INT_TX_LANE2[171:170]  :=  2'b00;
    }
    else if (CP_LANE2_PMA_REG_TX_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH_INT_TX_LANE2[171:170]  :=  2'b01;
    }
    else if (CP_LANE2_PMA_REG_TX_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH_INT_TX_LANE2[171:170]  :=  2'b10;
    }
    else if (CP_LANE2_PMA_REG_TX_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH_INT_TX_LANE2[171:170]  :=  2'b11;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[171:170]  :=  2'b00;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_LANE2_PMA_REG_TX_PRBS_SEL);
    }

//initial config body1341 end


//initial config body1342 begin
    if(CP_LANE2_PMA_REG_TX_UDP_DATA_7_TO_0 >= 0 && CP_LANE2_PMA_REG_TX_UDP_DATA_7_TO_0 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[179:172]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_UDP_DATA_7_TO_0, 8) ^ 8'b00000101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[179:172]   :=  to_unsigned( 0, 8) ^ 8'b00000101;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_UDP_DATA_7_TO_0 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_UDP_DATA_7_TO_0);
    }

//initial config body1342 end


//initial config body1343 begin
    if(CP_LANE2_PMA_REG_TX_UDP_DATA_15_TO_8 >= 0 && CP_LANE2_PMA_REG_TX_UDP_DATA_15_TO_8 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[187:180]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_UDP_DATA_15_TO_8, 8) ^ 8'b11101011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[187:180]   :=  to_unsigned( 0, 8) ^ 8'b11101011;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_UDP_DATA_15_TO_8 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_UDP_DATA_15_TO_8);
    }

//initial config body1343 end


//initial config body1344 begin
    if(CP_LANE2_PMA_REG_TX_UDP_DATA_19_TO_16 >= 0 && CP_LANE2_PMA_REG_TX_UDP_DATA_19_TO_16 <= 15)
    {
        SC_PMA_CH_INT_TX_LANE2[191:188]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_UDP_DATA_19_TO_16, 4) ^ 4'b0011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[191:188]   :=  to_unsigned( 0, 4) ^ 4'b0011;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_UDP_DATA_19_TO_16 is set to %d. Legal values is 0 to 15",CP_LANE2_PMA_REG_TX_UDP_DATA_19_TO_16);
    }

//initial config body1344 end


//initial config body1345 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_192 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[192]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_192 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[192]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[192]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_192 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_192);
    }

//initial config body1345 end


//initial config body1346 begin
    if(CP_LANE2_PMA_REG_TX_FIFO_WP_CTRL >= 0 && CP_LANE2_PMA_REG_TX_FIFO_WP_CTRL <= 7)
    {
        SC_PMA_CH_INT_TX_LANE2[195:193]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_FIFO_WP_CTRL, 3) ^ 3'b010;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[195:193]   :=  to_unsigned( 0, 3) ^ 3'b010;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_FIFO_WP_CTRL is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_REG_TX_FIFO_WP_CTRL);
    }

//initial config body1346 end


//initial config body1347 begin
    if(CP_LANE2_PMA_REG_TX_FIFO_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[196]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_FIFO_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[196]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[196]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_FIFO_EN);
    }

//initial config body1347 end


//initial config body1348 begin
    if(CP_LANE2_PMA_REG_TX_DATA_MUX_SEL >= 0 && CP_LANE2_PMA_REG_TX_DATA_MUX_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE2[198:197]  :=  CP_LANE2_PMA_REG_TX_DATA_MUX_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[198:197]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_DATA_MUX_SEL is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_TX_DATA_MUX_SEL);
    }

//initial config body1348 end


//initial config body1349 begin
    if(CP_LANE2_PMA_REG_TX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[199]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[199]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[199]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_ERR_INSERT is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_ERR_INSERT);
    }

//initial config body1349 end


//initial config body1350 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_203_200 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_203_200 <= 15)
    {
        SC_PMA_CH_INT_TX_LANE2[203:200]  :=  CP_LANE2_PMA_REG_TX_RESERVED_203_200;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[203:200]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_203_200 is set to %d. Legal values is 0 to 15",CP_LANE2_PMA_REG_TX_RESERVED_203_200);
    }

//initial config body1350 end


//initial config body1351 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_204 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[204]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_204 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[204]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[204]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_204 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_204);
    }

//initial config body1351 end


//initial config body1352 begin
    if(CP_LANE2_PMA_REG_TX_SATA_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[205]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_SATA_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[205]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[205]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_SATA_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_SATA_EN);
    }

//initial config body1352 end


//initial config body1353 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_207_206 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_207_206 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE2[207:206]  :=  CP_LANE2_PMA_REG_TX_RESERVED_207_206;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[207:206]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_207_206 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_TX_RESERVED_207_206);
    }

//initial config body1353 end


//initial config body1354 begin
    if(CP_LANE2_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[208]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[208]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[208]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW);
    }

//initial config body1354 end


//initial config body1355 begin
    if(CP_LANE2_PMA_REG_RATE_CHANGE_TXPCLK_ON == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[209]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_RATE_CHANGE_TXPCLK_ON == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[209]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[209]  :=  1'b0^1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RATE_CHANGE_TXPCLK_ON is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RATE_CHANGE_TXPCLK_ON);
    }

//initial config body1355 end


//initial config body1356 begin
    if(CP_LANE2_PMA_REG_TX_CFG_POST1 >= 0 && CP_LANE2_PMA_REG_TX_CFG_POST1 <= 31)
    {
        SC_PMA_CH_INT_TX_LANE2[214:210]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_CFG_POST1, 5) ^ 5'b11000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[214:210]   :=  to_unsigned( 0, 5) ^ 5'b11000;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_CFG_POST1 is set to %d. Legal values is 0 to 31",CP_LANE2_PMA_REG_TX_CFG_POST1);
    }

//initial config body1356 end


//initial config body1357 begin
    if(CP_LANE2_PMA_REG_TX_CFG_POST2 >= 0 && CP_LANE2_PMA_REG_TX_CFG_POST2 <= 31)
    {
        SC_PMA_CH_INT_TX_LANE2[219:215]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_CFG_POST2, 5) ^ 5'b10011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[219:215]   :=  to_unsigned( 0, 5) ^ 5'b10011;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_CFG_POST2 is set to %d. Legal values is 0 to 31",CP_LANE2_PMA_REG_TX_CFG_POST2);
    }

//initial config body1357 end


//initial config body1358 begin
    if(CP_LANE2_PMA_REG_TX_DEEMP >= 0 && CP_LANE2_PMA_REG_TX_DEEMP <= 3)
    {
        SC_PMA_CH_INT_TX_LANE2[221:220]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_DEEMP, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[221:220]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_DEEMP is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_TX_DEEMP);
    }

//initial config body1358 end


//initial config body1359 begin
    if(CP_LANE2_PMA_REG_TX_DEEMP_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[222]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_TX_DEEMP_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[222]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[222]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_DEEMP_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_DEEMP_OW);
    }

//initial config body1359 end


//initial config body1360 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_224_223 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_224_223 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE2[224:223]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_RESERVED_224_223, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[224:223]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_224_223 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_TX_RESERVED_224_223);
    }

//initial config body1360 end


//initial config body1361 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_225 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[225]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_225 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[225]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[225]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_225 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_225);
    }

//initial config body1361 end


//initial config body1362 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_229_226 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_229_226 <= 15)
    {
        SC_PMA_CH_INT_TX_LANE2[229:226]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_RESERVED_229_226, 4) ^ 4'b0100;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[229:226]   :=  to_unsigned( 0, 4) ^ 4'b0100;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_229_226 is set to %d. Legal values is 0 to 15",CP_LANE2_PMA_REG_TX_RESERVED_229_226);
    }

//initial config body1362 end


//initial config body1363 begin
    if(CP_LANE2_PMA_REG_TX_OOB_DELAY_SEL >= 0 && CP_LANE2_PMA_REG_TX_OOB_DELAY_SEL <= 15)
    {
        SC_PMA_CH_INT_TX_LANE2[233:230]  :=  CP_LANE2_PMA_REG_TX_OOB_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[233:230]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_OOB_DELAY_SEL is set to %d. Legal values is 0 to 15",CP_LANE2_PMA_REG_TX_OOB_DELAY_SEL);
    }

//initial config body1363 end


//initial config body1364 begin
    if(CP_LANE2_PMA_REG_TX_POLARITY == "NORMAL")
    {
        SC_PMA_CH_INT_TX_LANE2[234]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_POLARITY == "REVERSE")
    {
        SC_PMA_CH_INT_TX_LANE2[234]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[234]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_LANE2_PMA_REG_TX_POLARITY);
    }

//initial config body1364 end


//initial config body1365 begin
    if(CP_LANE2_PMA_REG_ANA_TX_JTAG_DATA_O_SEL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[235]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_ANA_TX_JTAG_DATA_O_SEL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[235]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[235]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_ANA_TX_JTAG_DATA_O_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_ANA_TX_JTAG_DATA_O_SEL);
    }

//initial config body1365 end


//initial config body1366 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_236 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[236]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_236 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[236]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[236]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_236 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_236);
    }

//initial config body1366 end


//initial config body1367 begin
    if(CP_LANE2_PMA_REG_TX_LS_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[237]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_LS_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[237]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[237]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_LS_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_LS_MODE_EN);
    }

//initial config body1367 end


//initial config body1368 begin
    if(CP_LANE2_PMA_REG_TX_JTAG_MODE_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[238]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_JTAG_MODE_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[238]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[238]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_JTAG_MODE_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_JTAG_MODE_EN_OW);
    }

//initial config body1368 end


//initial config body1369 begin
    if(CP_LANE2_PMA_REG_TX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[239]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[239]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[239]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_JTAG_MODE_EN);
    }

//initial config body1369 end


//initial config body1370 begin
    if(CP_LANE2_PMA_REG_RX_JTAG_MODE_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[240]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_JTAG_MODE_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[240]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[240]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_JTAG_MODE_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_JTAG_MODE_EN_OW);
    }

//initial config body1370 end


//initial config body1371 begin
    if(CP_LANE2_PMA_REG_RX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[241]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_RX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[241]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[241]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_JTAG_MODE_EN);
    }

//initial config body1371 end


//initial config body1372 begin
    if(CP_LANE2_PMA_REG_RX_JTAG_OE == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[242]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_RX_JTAG_OE == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[242]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[242]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_JTAG_OE is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_RX_JTAG_OE);
    }

//initial config body1372 end


//initial config body1373 begin
    if(CP_LANE2_PMA_REG_RX_ACJTAG_VHYSTSEL >= 0 && CP_LANE2_PMA_REG_RX_ACJTAG_VHYSTSEL <= 7)
    {
        SC_PMA_CH_INT_TX_LANE2[245:243]  :=  CP_LANE2_PMA_REG_RX_ACJTAG_VHYSTSEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[245:243]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_ACJTAG_VHYSTSEL is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_REG_RX_ACJTAG_VHYSTSEL);
    }

//initial config body1373 end


//initial config body1374 begin
    if(CP_LANE2_PMA_REG_TX_RES_CAL_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[246]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RES_CAL_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[246]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[246]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RES_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RES_CAL_EN);
    }

//initial config body1374 end


//initial config body1375 begin
    if(CP_LANE2_PMA_REG_RX_TERM_MODE_CTRL >= 0 && CP_LANE2_PMA_REG_RX_TERM_MODE_CTRL <= 7)
    {
        SC_PMA_CH_INT_TX_LANE2[249:247]   :=  to_unsigned( CP_LANE2_PMA_REG_RX_TERM_MODE_CTRL, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[249:247]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE2_PMA_REG_RX_TERM_MODE_CTRL is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_REG_RX_TERM_MODE_CTRL);
    }

//initial config body1375 end


//initial config body1376 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_251_250 >= 0 && CP_LANE2_PMA_REG_TX_RESERVED_251_250 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE2[251:250]  :=  CP_LANE2_PMA_REG_TX_RESERVED_251_250;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[251:250]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_251_250 is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_TX_RESERVED_251_250);
    }

//initial config body1376 end


//initial config body1377 begin
    if(CP_LANE2_PMA_REG_PLPBK_TXPCLK_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[252]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_PLPBK_TXPCLK_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[252]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[252]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_PLPBK_TXPCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_PLPBK_TXPCLK_EN);
    }

//initial config body1377 end


//initial config body1378 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_253 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[253]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_253 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[253]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[253]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_253 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_253);
    }

//initial config body1378 end


//initial config body1379 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_254 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[254]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_254 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[254]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[254]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_254 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_254);
    }

//initial config body1379 end


//initial config body1380 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_255 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[255]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_255 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[255]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[255]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_255 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_255);
    }

//initial config body1380 end


//initial config body1381 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_256 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[256]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_256 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[256]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[256]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_256 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_256);
    }

//initial config body1381 end


//initial config body1382 begin
    if(CP_LANE2_PMA_REG_TX_RESERVED_257 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[257]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_RESERVED_257 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[257]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[257]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RESERVED_257 is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_RESERVED_257);
    }

//initial config body1382 end


//initial config body1383 begin
    if(CP_LANE2_PMA_REG_TX_PH_SEL >= 0 && CP_LANE2_PMA_REG_TX_PH_SEL <= 63)
    {
        SC_PMA_CH_INT_TX_LANE2[263:258]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_PH_SEL, 6) ^ 6'b000001;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[263:258]   :=  to_unsigned( 0, 6) ^ 6'b000001;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_PH_SEL is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_PH_SEL);
    }

//initial config body1383 end


//initial config body1384 begin
    if(CP_LANE2_PMA_REG_TX_CFG_PRE  >= 0 && CP_LANE2_PMA_REG_TX_CFG_PRE  <= 31)
    {
        SC_PMA_CH_INT_TX_LANE2[268:264]  :=  CP_LANE2_PMA_REG_TX_CFG_PRE;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[268:264]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_CFG_PRE  is set to %d. Legal values is 0 to 31",CP_LANE2_PMA_REG_TX_CFG_PRE );
    }

//initial config body1384 end


//initial config body1385 begin
    if(CP_LANE2_PMA_REG_TX_CFG_MAIN >= 0 && CP_LANE2_PMA_REG_TX_CFG_MAIN <= 63)
    {
        SC_PMA_CH_INT_TX_LANE2[274:269]  :=  CP_LANE2_PMA_REG_TX_CFG_MAIN;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[274:269]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_CFG_MAIN is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_CFG_MAIN);
    }

//initial config body1385 end


//initial config body1386 begin
    if(CP_LANE2_PMA_REG_CFG_POST >= 0 && CP_LANE2_PMA_REG_CFG_POST <= 31)
    {
        SC_PMA_CH_INT_TX_LANE2[279:275]  :=  CP_LANE2_PMA_REG_CFG_POST;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[279:275]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_CFG_POST is set to %d. Legal values is 0 to 31",CP_LANE2_PMA_REG_CFG_POST);
    }

//initial config body1386 end


//initial config body1387 begin
    if(CP_LANE2_PMA_REG_PD_MAIN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[280]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_PD_MAIN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[280]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[280]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_PD_MAIN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_PD_MAIN);
    }

//initial config body1387 end


//initial config body1388 begin
    if(CP_LANE2_PMA_REG_PD_PRE == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[281]  :=  1'b0^1'b1;
    }
    else if (CP_LANE2_PMA_REG_PD_PRE == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[281]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[281]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE2_PMA_REG_PD_PRE is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_PD_PRE);
    }

//initial config body1388 end


//initial config body1389 begin
    if(CP_LANE2_PMA_REG_TX_LS_DATA == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[282]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_LS_DATA == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[282]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[282]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_LS_DATA is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_LS_DATA);
    }

//initial config body1389 end


//initial config body1390 begin
    if(CP_LANE2_PMA_REG_TX_DCC_BUF_SZ_SEL >= 0 && CP_LANE2_PMA_REG_TX_DCC_BUF_SZ_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE2[284:283]  :=  CP_LANE2_PMA_REG_TX_DCC_BUF_SZ_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[284:283]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_DCC_BUF_SZ_SEL is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_TX_DCC_BUF_SZ_SEL);
    }

//initial config body1390 end


//initial config body1391 begin
    if(CP_LANE2_PMA_REG_TX_DCC_CAL_CUR_TUNE >= 0 && CP_LANE2_PMA_REG_TX_DCC_CAL_CUR_TUNE <= 63)
    {
        SC_PMA_CH_INT_TX_LANE2[290:285]  :=  CP_LANE2_PMA_REG_TX_DCC_CAL_CUR_TUNE;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[290:285]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_DCC_CAL_CUR_TUNE is set to %d. Legal values is 0 to 63",CP_LANE2_PMA_REG_TX_DCC_CAL_CUR_TUNE);
    }

//initial config body1391 end


//initial config body1392 begin
    if(CP_LANE2_PMA_REG_TX_DCC_CAL_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[291]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_DCC_CAL_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[291]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[291]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_DCC_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_DCC_CAL_EN);
    }

//initial config body1392 end


//initial config body1393 begin
    if(CP_LANE2_PMA_REG_TX_DCC_CUR_SS >= 0 && CP_LANE2_PMA_REG_TX_DCC_CUR_SS <= 3)
    {
        SC_PMA_CH_INT_TX_LANE2[293:292]  :=  CP_LANE2_PMA_REG_TX_DCC_CUR_SS;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[293:292]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_DCC_CUR_SS is set to %d. Legal values is 0 to 3",CP_LANE2_PMA_REG_TX_DCC_CUR_SS);
    }

//initial config body1393 end


//initial config body1394 begin
    if(CP_LANE2_PMA_REG_TX_DCC_FA_CTRL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[294]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_DCC_FA_CTRL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[294]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[294]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_DCC_FA_CTRL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_DCC_FA_CTRL);
    }

//initial config body1394 end


//initial config body1395 begin
    if(CP_LANE2_PMA_REG_TX_DCC_RI_CTRL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[295]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_DCC_RI_CTRL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[295]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[295]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_DCC_RI_CTRL is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_DCC_RI_CTRL);
    }

//initial config body1395 end


//initial config body1396 begin
    if(CP_LANE2_PMA_REG_ATB_SEL_2_TO_0 >= 0 && CP_LANE2_PMA_REG_ATB_SEL_2_TO_0 <= 7)
    {
        SC_PMA_CH_INT_TX_LANE2[298:296]  :=  CP_LANE2_PMA_REG_ATB_SEL_2_TO_0;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[298:296]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_ATB_SEL_2_TO_0 is set to %d. Legal values is 0 to 7",CP_LANE2_PMA_REG_ATB_SEL_2_TO_0);
    }

//initial config body1396 end


//initial config body1397 begin
    if(CP_LANE2_PMA_REG_ATB_SEL_9_TO_3 >= 0 && CP_LANE2_PMA_REG_ATB_SEL_9_TO_3 <= 127)
    {
        SC_PMA_CH_INT_TX_LANE2[305:299]  :=  CP_LANE2_PMA_REG_ATB_SEL_9_TO_3;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[305:299]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_ATB_SEL_9_TO_3 is set to %d. Legal values is 0 to 127",CP_LANE2_PMA_REG_ATB_SEL_9_TO_3);
    }

//initial config body1397 end


//initial config body1398 begin
    if(CP_LANE2_PMA_REG_TX_CFG_7_TO_0 >= 0 && CP_LANE2_PMA_REG_TX_CFG_7_TO_0 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[313:306]  :=  CP_LANE2_PMA_REG_TX_CFG_7_TO_0;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[313:306]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_CFG_7_TO_0 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_CFG_7_TO_0);
    }

//initial config body1398 end


//initial config body1399 begin
    if(CP_LANE2_PMA_REG_TX_CFG_15_TO_8 >= 0 && CP_LANE2_PMA_REG_TX_CFG_15_TO_8 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[321:314]  :=  CP_LANE2_PMA_REG_TX_CFG_15_TO_8;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[321:314]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_CFG_15_TO_8 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_CFG_15_TO_8);
    }

//initial config body1399 end


//initial config body1400 begin
    if(CP_LANE2_PMA_REG_TX_CFG_23_TO_16 >= 0 && CP_LANE2_PMA_REG_TX_CFG_23_TO_16 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[329:322]  :=  CP_LANE2_PMA_REG_TX_CFG_23_TO_16;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[329:322]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_CFG_23_TO_16 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_CFG_23_TO_16);
    }

//initial config body1400 end


//initial config body1401 begin
    if(CP_LANE2_PMA_REG_TX_CFG_31_TO_24 >= 0 && CP_LANE2_PMA_REG_TX_CFG_31_TO_24 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[337:330]  :=  CP_LANE2_PMA_REG_TX_CFG_31_TO_24;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[337:330]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_CFG_31_TO_24 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_CFG_31_TO_24);
    }

//initial config body1401 end


//initial config body1402 begin
    if(CP_LANE2_PMA_REG_TX_OOB_EI_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[338]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_OOB_EI_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[338]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[338]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_OOB_EI_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_OOB_EI_EN);
    }

//initial config body1402 end


//initial config body1403 begin
    if(CP_LANE2_PMA_REG_TX_OOB_EI_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[339]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_OOB_EI_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[339]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[339]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_OOB_EI_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_OOB_EI_EN_OW);
    }

//initial config body1403 end


//initial config body1404 begin
    if(CP_LANE2_PMA_REG_TX_BEACON_EN_DELAYED == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[340]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_BEACON_EN_DELAYED == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[340]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[340]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_BEACON_EN_DELAYED is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_BEACON_EN_DELAYED);
    }

//initial config body1404 end


//initial config body1405 begin
    if(CP_LANE2_PMA_REG_TX_BEACON_EN_DELAYED_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[341]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_BEACON_EN_DELAYED_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[341]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[341]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_BEACON_EN_DELAYED_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_BEACON_EN_DELAYED_OW);
    }

//initial config body1405 end


//initial config body1406 begin
    if(CP_LANE2_PMA_REG_TX_JTAG_DATA == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[342]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_TX_JTAG_DATA == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[342]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[342]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_JTAG_DATA is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_TX_JTAG_DATA);
    }

//initial config body1406 end


//initial config body1407 begin
    if(CP_LANE2_PMA_REG_TX_RXDET_TIMER_SEL >= 0 && CP_LANE2_PMA_REG_TX_RXDET_TIMER_SEL <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[350:343]   :=  to_unsigned( CP_LANE2_PMA_REG_TX_RXDET_TIMER_SEL, 8) ^ 8'b01010111;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[350:343]   :=  to_unsigned( 0, 8) ^ 8'b01010111;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_RXDET_TIMER_SEL is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_RXDET_TIMER_SEL);
    }

//initial config body1407 end


//initial config body1408 begin
    if(CP_LANE2_PMA_REG_TX_CFG1_7_0 >= 0 && CP_LANE2_PMA_REG_TX_CFG1_7_0 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[358:351]  :=  CP_LANE2_PMA_REG_TX_CFG1_7_0;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[358:351]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_CFG1_7_0 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_CFG1_7_0);
    }

//initial config body1408 end


//initial config body1409 begin
    if(CP_LANE2_PMA_REG_TX_CFG1_15_8 >= 0 && CP_LANE2_PMA_REG_TX_CFG1_15_8 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[366:359]  :=  CP_LANE2_PMA_REG_TX_CFG1_15_8;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[366:359]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_CFG1_15_8 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_CFG1_15_8);
    }

//initial config body1409 end


//initial config body1410 begin
    if(CP_LANE2_PMA_REG_TX_CFG1_23_16 >= 0 && CP_LANE2_PMA_REG_TX_CFG1_23_16 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[374:367]  :=  CP_LANE2_PMA_REG_TX_CFG1_23_16;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[374:367]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_CFG1_23_16 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_CFG1_23_16);
    }

//initial config body1410 end


//initial config body1411 begin
    if(CP_LANE2_PMA_REG_TX_CFG1_31_24 >= 0 && CP_LANE2_PMA_REG_TX_CFG1_31_24 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE2[382:375]  :=  CP_LANE2_PMA_REG_TX_CFG1_31_24;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[382:375]  :=  0;
        error("Setting Error : The CP_LANE2_PMA_REG_TX_CFG1_31_24 is set to %d. Legal values is 0 to 255",CP_LANE2_PMA_REG_TX_CFG1_31_24);
    }

//initial config body1411 end


//initial config body1412 begin
    if(CP_LANE2_PMA_REG_CFG_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH_INT_TX_LANE2[383]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CFG_LANE_POWERUP == "ON")
    {
        SC_PMA_CH_INT_TX_LANE2[383]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[383]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CFG_LANE_POWERUP is set to %s. Legal values is OFF,ON",CP_LANE2_PMA_REG_CFG_LANE_POWERUP);
    }

//initial config body1412 end


//initial config body1413 begin
    if(CP_LANE2_PMA_REG_CFG_PMA_POR_N == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[384]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CFG_PMA_POR_N == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[384]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[384]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CFG_PMA_POR_N is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CFG_PMA_POR_N);
    }

//initial config body1413 end


//initial config body1414 begin
    if(CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[385]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[385]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[385]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH);
    }

//initial config body1414 end


//initial config body1415 begin
    if(CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_PISO == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[386]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_PISO == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[386]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[386]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_PISO is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_PISO);
    }

//initial config body1415 end


//initial config body1416 begin
    if(CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[387]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[387]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[387]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER);
    }

//initial config body1416 end


//initial config body1417 begin
    if(CP_LANE2_PMA_REG_CFG_TX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE2[388]  :=  1'b0;
    }
    else if (CP_LANE2_PMA_REG_CFG_TX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE2[388]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE2[388]  :=  1'b0;
        error("Setting Error : The CP_LANE2_PMA_REG_CFG_TX_PMA_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE2_PMA_REG_CFG_TX_PMA_RSTN);
    }

//initial config body1417 end


//initial config body1418 begin
    if(CP_LANE3_PCS_BYPASS_WORD_ALIGN == "FALSE")
    {
        SC_PCS_CH_INT_3[1]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_BYPASS_WORD_ALIGN == "TRUE")
    {
        SC_PCS_CH_INT_3[1]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[1]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_BYPASS_WORD_ALIGN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_BYPASS_WORD_ALIGN);
    }

//initial config body1418 end


//initial config body1419 begin
    if(CP_LANE3_PCS_BYPASS_DENC == "FALSE")
    {
        SC_PCS_CH_INT_3[2]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_BYPASS_DENC == "TRUE")
    {
        SC_PCS_CH_INT_3[2]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[2]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_BYPASS_DENC is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_BYPASS_DENC);
    }

//initial config body1419 end


//initial config body1420 begin
    if(CP_LANE3_PCS_BYPASS_BONDING == "FALSE")
    {
        SC_PCS_CH_INT_3[3]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_BYPASS_BONDING == "TRUE")
    {
        SC_PCS_CH_INT_3[3]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[3]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_BYPASS_BONDING is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_BYPASS_BONDING);
    }

//initial config body1420 end


//initial config body1421 begin
    if(CP_LANE3_PCS_BYPASS_CTC == "FALSE")
    {
        SC_PCS_CH_INT_3[4]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_BYPASS_CTC == "TRUE")
    {
        SC_PCS_CH_INT_3[4]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[4]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_BYPASS_CTC is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_BYPASS_CTC);
    }

//initial config body1421 end


//initial config body1422 begin
    if(CP_LANE3_PCS_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH_INT_3[5]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH_INT_3[5]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[5]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_BYPASS_GEAR);
    }

//initial config body1422 end


//initial config body1423 begin
    if(CP_LANE3_PCS_BYPASS_BRIDGE == "FALSE")
    {
        SC_PCS_CH_INT_3[6]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_BYPASS_BRIDGE == "TRUE")
    {
        SC_PCS_CH_INT_3[6]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[6]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_BYPASS_BRIDGE is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_BYPASS_BRIDGE);
    }

//initial config body1423 end


//initial config body1424 begin
    if(CP_LANE3_PCS_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH_INT_3[7]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH_INT_3[7]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[7]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_BYPASS_BRIDGE_FIFO);
    }

//initial config body1424 end


//initial config body1425 begin
    if(CP_LANE3_PCS_DATA_MODE == "X8")
    {
        SC_PCS_CH_INT_3[8]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_DATA_MODE == "X10")
    {
        SC_PCS_CH_INT_3[8]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_DATA_MODE == "X16")
    {
        SC_PCS_CH_INT_3[8]  :=  1'b1;
    }
    else if (CP_LANE3_PCS_DATA_MODE == "X20")
    {
        SC_PCS_CH_INT_3[8]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[8]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_DATA_MODE is set to %s. Legal values is X8,X10,X16,X20",CP_LANE3_PCS_DATA_MODE);
    }

//initial config body1425 end


//initial config body1426 begin
    if(CP_LANE3_PCS_RX_POLARITY_INV == "DELAY")
    {
        SC_PCS_CH_INT_3[10:9]  :=  2'b00;
    }
    else if (CP_LANE3_PCS_RX_POLARITY_INV == "BIT_POLARITY_INVERION")
    {
        SC_PCS_CH_INT_3[10:9]  :=  2'b01;
    }
    else if (CP_LANE3_PCS_RX_POLARITY_INV == "BIT_REVERSAL")
    {
        SC_PCS_CH_INT_3[10:9]  :=  2'b10;
    }
    else if (CP_LANE3_PCS_RX_POLARITY_INV == "BOTH")
    {
        SC_PCS_CH_INT_3[10:9]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_3[10:9]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PCS_RX_POLARITY_INV is set to %s. Legal values is DELAY,BIT_POLARITY_INVERION,BIT_REVERSAL,BOTH",CP_LANE3_PCS_RX_POLARITY_INV);
    }

//initial config body1426 end


//initial config body1427 begin
    if(CP_LANE3_PCS_ALIGN_MODE == "1GB")
    {
        SC_PCS_CH_INT_3[12:11]  :=  2'b00;
    }
    else if (CP_LANE3_PCS_ALIGN_MODE == "10GB")
    {
        SC_PCS_CH_INT_3[12:11]  :=  2'b01;
    }
    else if (CP_LANE3_PCS_ALIGN_MODE == "RAPIDIO")
    {
        SC_PCS_CH_INT_3[12:11]  :=  2'b10;
    }
    else if (CP_LANE3_PCS_ALIGN_MODE == "OUTSIDE")
    {
        SC_PCS_CH_INT_3[12:11]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_3[12:11]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PCS_ALIGN_MODE is set to %s. Legal values is 1GB,10GB,RAPIDIO,OUTSIDE",CP_LANE3_PCS_ALIGN_MODE);
    }

//initial config body1427 end


//initial config body1428 begin
    if(CP_LANE3_PCS_SAMP_16B == "X20")
    {
        SC_PCS_CH_INT_3[13]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_SAMP_16B == "X16")
    {
        SC_PCS_CH_INT_3[13]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[13]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_SAMP_16B is set to %s. Legal values is X20,X16",CP_LANE3_PCS_SAMP_16B);
    }

//initial config body1428 end


//initial config body1429 begin
    if(CP_LANE3_PCS_FARLP_PWR_REDUCTION == "FALSE")
    {
        SC_PCS_CH_INT_3[14]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_FARLP_PWR_REDUCTION == "TRUE")
    {
        SC_PCS_CH_INT_3[14]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[14]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_FARLP_PWR_REDUCTION is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_FARLP_PWR_REDUCTION);
    }

//initial config body1429 end


//initial config body1430 begin
    if(CP_LANE3_PCS_COMMA_REG0 >= 0 && CP_LANE3_PCS_COMMA_REG0 <= 1023)
    {
        SC_PCS_CH_INT_3[25:16]  :=  CP_LANE3_PCS_COMMA_REG0;
    }
    else
    {
        SC_PCS_CH_INT_3[25:16]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_COMMA_REG0 is set to %d. Legal values is 0 to 1023",CP_LANE3_PCS_COMMA_REG0);
    }

//initial config body1430 end


//initial config body1431 begin
    if(CP_LANE3_PCS_COMMA_MASK >= 0 && CP_LANE3_PCS_COMMA_MASK <= 1023)
    {
        SC_PCS_CH_INT_3[35:26]  :=  CP_LANE3_PCS_COMMA_MASK;
    }
    else
    {
        SC_PCS_CH_INT_3[35:26]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_COMMA_MASK is set to %d. Legal values is 0 to 1023",CP_LANE3_PCS_COMMA_MASK);
    }

//initial config body1431 end


//initial config body1432 begin
    if(CP_LANE3_PCS_CEB_MODE == "10GB")
    {
        SC_PCS_CH_INT_3[37:36]  :=  2'b00;
    }
    else if (CP_LANE3_PCS_CEB_MODE == "RAPIDIO")
    {
        SC_PCS_CH_INT_3[37:36]  :=  2'b01;
    }
    else if (CP_LANE3_PCS_CEB_MODE == "OUTSIDE")
    {
        SC_PCS_CH_INT_3[37:36]  :=  2'b10;
    }
    else
    {
        SC_PCS_CH_INT_3[37:36]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PCS_CEB_MODE is set to %s. Legal values is 10GB,RAPIDIO,OUTSIDE",CP_LANE3_PCS_CEB_MODE);
    }

//initial config body1432 end


//initial config body1433 begin
    if(CP_LANE3_PCS_CTC_MODE == "1SKIP")
    {
        SC_PCS_CH_INT_3[39:38]  :=  2'b00;
    }
    else if (CP_LANE3_PCS_CTC_MODE == "2SKIP")
    {
        SC_PCS_CH_INT_3[39:38]  :=  2'b01;
    }
    else if (CP_LANE3_PCS_CTC_MODE == "PCIE_2BYTE")
    {
        SC_PCS_CH_INT_3[39:38]  :=  2'b10;
    }
    else if (CP_LANE3_PCS_CTC_MODE == "4SKIP")
    {
        SC_PCS_CH_INT_3[39:38]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_3[39:38]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PCS_CTC_MODE is set to %s. Legal values is 1SKIP,2SKIP,PCIE_2BYTE,4SKIP",CP_LANE3_PCS_CTC_MODE);
    }

//initial config body1433 end


//initial config body1434 begin
    if(CP_LANE3_PCS_A_REG >= 0 && CP_LANE3_PCS_A_REG <= 255)
    {
        SC_PCS_CH_INT_3[47:40]  :=  CP_LANE3_PCS_A_REG;
    }
    else
    {
        SC_PCS_CH_INT_3[47:40]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_A_REG is set to %d. Legal values is 0 to 255",CP_LANE3_PCS_A_REG);
    }

//initial config body1434 end


//initial config body1435 begin
    if(CP_LANE3_PCS_GE_AUTO_EN == "FALSE")
    {
        SC_PCS_CH_INT_3[49]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_GE_AUTO_EN == "TRUE")
    {
        SC_PCS_CH_INT_3[49]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[49]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_GE_AUTO_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_GE_AUTO_EN);
    }

//initial config body1435 end


//initial config body1436 begin
    if(CP_LANE3_PCS_SKIP_REG0 >= 0 && CP_LANE3_PCS_SKIP_REG0 <= 511)
    {
        SC_PCS_CH_INT_3[58:50]  :=  CP_LANE3_PCS_SKIP_REG0;
    }
    else
    {
        SC_PCS_CH_INT_3[58:50]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_SKIP_REG0 is set to %d. Legal values is 0 to 511",CP_LANE3_PCS_SKIP_REG0);
    }

//initial config body1436 end


//initial config body1437 begin
    if(CP_LANE3_PCS_SKIP_REG1 >= 0 && CP_LANE3_PCS_SKIP_REG1 <= 511)
    {
        SC_PCS_CH_INT_3[68:60]  :=  CP_LANE3_PCS_SKIP_REG1;
    }
    else
    {
        SC_PCS_CH_INT_3[68:60]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_SKIP_REG1 is set to %d. Legal values is 0 to 511",CP_LANE3_PCS_SKIP_REG1);
    }

//initial config body1437 end


//initial config body1438 begin
    if(CP_LANE3_PCS_SKIP_REG2 >= 0 && CP_LANE3_PCS_SKIP_REG2 <= 511)
    {
        SC_PCS_CH_INT_3[78:70]  :=  CP_LANE3_PCS_SKIP_REG2;
    }
    else
    {
        SC_PCS_CH_INT_3[78:70]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_SKIP_REG2 is set to %d. Legal values is 0 to 511",CP_LANE3_PCS_SKIP_REG2);
    }

//initial config body1438 end


//initial config body1439 begin
    if(CP_LANE3_PCS_SKIP_REG3 >= 0 && CP_LANE3_PCS_SKIP_REG3 <= 511)
    {
        SC_PCS_CH_INT_3[88:80]  :=  CP_LANE3_PCS_SKIP_REG3;
    }
    else
    {
        SC_PCS_CH_INT_3[88:80]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_SKIP_REG3 is set to %d. Legal values is 0 to 511",CP_LANE3_PCS_SKIP_REG3);
    }

//initial config body1439 end


//initial config body1440 begin
    if(CP_LANE3_PCS_DEC_DUAL == "FALSE")
    {
        SC_PCS_CH_INT_3[90]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_DEC_DUAL == "TRUE")
    {
        SC_PCS_CH_INT_3[90]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[90]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_DEC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_DEC_DUAL);
    }

//initial config body1440 end


//initial config body1441 begin
    if(CP_LANE3_PCS_SPLIT == "FALSE")
    {
        SC_PCS_CH_INT_3[91]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_SPLIT == "TRUE")
    {
        SC_PCS_CH_INT_3[91]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[91]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_SPLIT);
    }

//initial config body1441 end


//initial config body1442 begin
    if(CP_LANE3_PCS_FIFOFLAG_CTC == "FALSE")
    {
        SC_PCS_CH_INT_3[92]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_FIFOFLAG_CTC == "TRUE")
    {
        SC_PCS_CH_INT_3[92]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[92]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_FIFOFLAG_CTC is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_FIFOFLAG_CTC);
    }

//initial config body1442 end


//initial config body1443 begin
    if(CP_LANE3_PCS_COMMA_DET_MODE == "COMMA_PATTERN")
    {
        SC_PCS_CH_INT_3[93]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_COMMA_DET_MODE == "RX_CLK_SLIP")
    {
        SC_PCS_CH_INT_3[93]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[93]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_COMMA_DET_MODE is set to %s. Legal values is COMMA_PATTERN,RX_CLK_SLIP",CP_LANE3_PCS_COMMA_DET_MODE);
    }

//initial config body1443 end


//initial config body1444 begin
    if(CP_LANE3_PCS_ERRDETECT_SILENCE == "FALSE")
    {
        SC_PCS_CH_INT_3[94]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_ERRDETECT_SILENCE == "TRUE")
    {
        SC_PCS_CH_INT_3[94]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[94]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_ERRDETECT_SILENCE is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_ERRDETECT_SILENCE);
    }

//initial config body1444 end


//initial config body1445 begin
    if(CP_LANE3_PCS_PMA_RCLK_POLINV == "PMA_RCLK")
    {
        SC_PCS_CH_INT_3[96]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_PMA_RCLK_POLINV == "REVERSE_OF_PMA_RCLK")
    {
        SC_PCS_CH_INT_3[96]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[96]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_PMA_RCLK_POLINV is set to %s. Legal values is PMA_RCLK,REVERSE_OF_PMA_RCLK",CP_LANE3_PCS_PMA_RCLK_POLINV);
    }

//initial config body1445 end


//initial config body1446 begin
    if(CP_LANE3_PCS_PCS_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_3[98:97]  :=  2'b00;
    }
    else if (CP_LANE3_PCS_PCS_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_3[98:97]  :=  2'b01;
    }
    else if (CP_LANE3_PCS_PCS_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH_INT_3[98:97]  :=  2'b10;
    }
    else
    {
        SC_PCS_CH_INT_3[98:97]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PCS_PCS_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,RCLK",CP_LANE3_PCS_PCS_RCLK_SEL);
    }

//initial config body1446 end


//initial config body1447 begin
    if(CP_LANE3_PCS_CB_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_3[100:99]  :=  2'b00;
    }
    else if (CP_LANE3_PCS_CB_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_3[100:99]  :=  2'b01;
    }
    else if (CP_LANE3_PCS_CB_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH_INT_3[100:99]  :=  2'b10;
    }
    else
    {
        SC_PCS_CH_INT_3[100:99]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PCS_CB_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK",CP_LANE3_PCS_CB_RCLK_SEL);
    }

//initial config body1447 end


//initial config body1448 begin
    if(CP_LANE3_PCS_AFTER_CTC_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_3[102:101]  :=  2'b00;
    }
    else if (CP_LANE3_PCS_AFTER_CTC_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_3[102:101]  :=  2'b01;
    }
    else if (CP_LANE3_PCS_AFTER_CTC_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH_INT_3[102:101]  :=  2'b10;
    }
    else if (CP_LANE3_PCS_AFTER_CTC_RCLK_SEL == "RCLK2")
    {
        SC_PCS_CH_INT_3[102:101]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_3[102:101]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PCS_AFTER_CTC_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK2",CP_LANE3_PCS_AFTER_CTC_RCLK_SEL);
    }

//initial config body1448 end


//initial config body1449 begin
    if(CP_LANE3_PCS_RCLK_POLINV == "RCLK")
    {
        SC_PCS_CH_INT_3[103]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_RCLK_POLINV == "REVERSE_OF_RCLK")
    {
        SC_PCS_CH_INT_3[103]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[103]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_RCLK_POLINV is set to %s. Legal values is RCLK,REVERSE_OF_RCLK",CP_LANE3_PCS_RCLK_POLINV);
    }

//initial config body1449 end


//initial config body1450 begin
    if(CP_LANE3_PCS_BRIDGE_RCLK_SEL == "PMA_RCLK")
    {
        SC_PCS_CH_INT_3[105:104]  :=  2'b00;
    }
    else if (CP_LANE3_PCS_BRIDGE_RCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_3[105:104]  :=  2'b01;
    }
    else if (CP_LANE3_PCS_BRIDGE_RCLK_SEL == "MCB_RCLK")
    {
        SC_PCS_CH_INT_3[105:104]  :=  2'b10;
    }
    else if (CP_LANE3_PCS_BRIDGE_RCLK_SEL == "RCLK")
    {
        SC_PCS_CH_INT_3[105:104]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_3[105:104]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PCS_BRIDGE_RCLK_SEL is set to %s. Legal values is PMA_RCLK,PMA_TCLK,MCB_RCLK,RCLK",CP_LANE3_PCS_BRIDGE_RCLK_SEL);
    }

//initial config body1450 end


//initial config body1451 begin
    if(CP_LANE3_PCS_PCS_RCLK_EN == "FALSE")
    {
        SC_PCS_CH_INT_3[106]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_PCS_RCLK_EN == "TRUE")
    {
        SC_PCS_CH_INT_3[106]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[106]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_PCS_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_PCS_RCLK_EN);
    }

//initial config body1451 end


//initial config body1452 begin
    if(CP_LANE3_PCS_CB_RCLK_EN == "FALSE")
    {
        SC_PCS_CH_INT_3[107]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_CB_RCLK_EN == "TRUE")
    {
        SC_PCS_CH_INT_3[107]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[107]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_CB_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_CB_RCLK_EN);
    }

//initial config body1452 end


//initial config body1453 begin
    if(CP_LANE3_PCS_AFTER_CTC_RCLK_EN == "FALSE")
    {
        SC_PCS_CH_INT_3[108]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_AFTER_CTC_RCLK_EN == "TRUE")
    {
        SC_PCS_CH_INT_3[108]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[108]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_AFTER_CTC_RCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_AFTER_CTC_RCLK_EN);
    }

//initial config body1453 end


//initial config body1454 begin
    if(CP_LANE3_PCS_AFTER_CTC_RCLK_EN_GB == "FALSE")
    {
        SC_PCS_CH_INT_3[109]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_AFTER_CTC_RCLK_EN_GB == "TRUE")
    {
        SC_PCS_CH_INT_3[109]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[109]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_AFTER_CTC_RCLK_EN_GB is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_AFTER_CTC_RCLK_EN_GB);
    }

//initial config body1454 end


//initial config body1455 begin
    if(CP_LANE3_PCS_PCS_RX_RSTN == "FALSE")
    {
        SC_PCS_CH_INT_3[112]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_PCS_RX_RSTN == "TRUE")
    {
        SC_PCS_CH_INT_3[112]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[112]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_PCS_RX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_PCS_RX_RSTN);
    }

//initial config body1455 end


//initial config body1456 begin
    if(CP_LANE3_PCS_PCIE_SLAVE == "MASTER")
    {
        SC_PCS_CH_INT_3[114]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_PCIE_SLAVE == "SLAVE")
    {
        SC_PCS_CH_INT_3[114]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[114]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_PCIE_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_LANE3_PCS_PCIE_SLAVE);
    }

//initial config body1456 end


//initial config body1457 begin
    if(CP_LANE3_PCS_RX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH_INT_3[116:115]  :=  2'b00;
    }
    else if (CP_LANE3_PCS_RX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH_INT_3[116:115]  :=  2'b01;
    }
    else if (CP_LANE3_PCS_RX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH_INT_3[116:115]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_3[116:115]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PCS_RX_64B66B_67B is set to %s. Legal values is NORMAL,64B_66B,64B_67B",CP_LANE3_PCS_RX_64B66B_67B);
    }

//initial config body1457 end


//initial config body1458 begin
    if(CP_LANE3_PCS_RX_BRIDGE_CLK_POLINV == "RX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_3[117]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_RX_BRIDGE_CLK_POLINV == "REVERSE_OF_RX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_3[117]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[117]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_RX_BRIDGE_CLK_POLINV is set to %s. Legal values is RX_BRIDGE_CLK,REVERSE_OF_RX_BRIDGE_CLK",CP_LANE3_PCS_RX_BRIDGE_CLK_POLINV);
    }

//initial config body1458 end


//initial config body1459 begin
    if(CP_LANE3_PCS_PCS_CB_RSTN == "FALSE")
    {
        SC_PCS_CH_INT_3[120]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_PCS_CB_RSTN == "TRUE")
    {
        SC_PCS_CH_INT_3[120]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[120]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_PCS_CB_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_PCS_CB_RSTN);
    }

//initial config body1459 end


//initial config body1460 begin
    if(CP_LANE3_PCS_TX_BRIDGE_GEAR_SEL == "FALSE")
    {
        SC_PCS_CH_INT_3[128]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_BRIDGE_GEAR_SEL == "TRUE")
    {
        SC_PCS_CH_INT_3[128]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[128]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_BRIDGE_GEAR_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_TX_BRIDGE_GEAR_SEL);
    }

//initial config body1460 end


//initial config body1461 begin
    if(CP_LANE3_PCS_TX_BYPASS_BRIDGE_UINT == "FALSE")
    {
        SC_PCS_CH_INT_3[129]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_BYPASS_BRIDGE_UINT == "TRUE")
    {
        SC_PCS_CH_INT_3[129]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[129]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_BYPASS_BRIDGE_UINT is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_TX_BYPASS_BRIDGE_UINT);
    }

//initial config body1461 end


//initial config body1462 begin
    if(CP_LANE3_PCS_TX_BYPASS_BRIDGE_FIFO == "FALSE")
    {
        SC_PCS_CH_INT_3[130]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_BYPASS_BRIDGE_FIFO == "TRUE")
    {
        SC_PCS_CH_INT_3[130]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[130]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_BYPASS_BRIDGE_FIFO is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_TX_BYPASS_BRIDGE_FIFO);
    }

//initial config body1462 end


//initial config body1463 begin
    if(CP_LANE3_PCS_TX_BYPASS_GEAR == "FALSE")
    {
        SC_PCS_CH_INT_3[131]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_BYPASS_GEAR == "TRUE")
    {
        SC_PCS_CH_INT_3[131]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[131]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_BYPASS_GEAR is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_TX_BYPASS_GEAR);
    }

//initial config body1463 end


//initial config body1464 begin
    if(CP_LANE3_PCS_TX_BYPASS_ENC == "FALSE")
    {
        SC_PCS_CH_INT_3[132]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_BYPASS_ENC == "TRUE")
    {
        SC_PCS_CH_INT_3[132]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[132]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_BYPASS_ENC is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_TX_BYPASS_ENC);
    }

//initial config body1464 end


//initial config body1465 begin
    if(CP_LANE3_PCS_TX_BYPASS_BIT_SLIP == "FALSE")
    {
        SC_PCS_CH_INT_3[133]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_BYPASS_BIT_SLIP == "TRUE")
    {
        SC_PCS_CH_INT_3[133]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[133]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_BYPASS_BIT_SLIP is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_TX_BYPASS_BIT_SLIP);
    }

//initial config body1465 end


//initial config body1466 begin
    if(CP_LANE3_PCS_TX_GEAR_SPLIT == "FALSE")
    {
        SC_PCS_CH_INT_3[136]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_GEAR_SPLIT == "TRUE")
    {
        SC_PCS_CH_INT_3[136]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[136]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_GEAR_SPLIT is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_TX_GEAR_SPLIT);
    }

//initial config body1466 end


//initial config body1467 begin
    if(CP_LANE3_PCS_TX_DRIVE_REG_MODE == "NO_CHANGE")
    {
        SC_PCS_CH_INT_3[138:137]  :=  2'b00;
    }
    else if (CP_LANE3_PCS_TX_DRIVE_REG_MODE == "EN_POLARIY_REV")
    {
        SC_PCS_CH_INT_3[138:137]  :=  2'b01;
    }
    else if (CP_LANE3_PCS_TX_DRIVE_REG_MODE == "EN_BIT_REV")
    {
        SC_PCS_CH_INT_3[138:137]  :=  2'b10;
    }
    else if (CP_LANE3_PCS_TX_DRIVE_REG_MODE == "EN_BOTH")
    {
        SC_PCS_CH_INT_3[138:137]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_3[138:137]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PCS_TX_DRIVE_REG_MODE is set to %s. Legal values is NO_CHANGE,EN_POLARIY_REV,EN_BIT_REV,EN_BOTH",CP_LANE3_PCS_TX_DRIVE_REG_MODE);
    }

//initial config body1467 end


//initial config body1468 begin
    if(CP_LANE3_PCS_TX_BIT_SLIP_CYCLES >= 0 && CP_LANE3_PCS_TX_BIT_SLIP_CYCLES <= 31)
    {
        SC_PCS_CH_INT_3[143:139]  :=  CP_LANE3_PCS_TX_BIT_SLIP_CYCLES;
    }
    else
    {
        SC_PCS_CH_INT_3[143:139]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_TX_BIT_SLIP_CYCLES is set to %d. Legal values is 0 to 31",CP_LANE3_PCS_TX_BIT_SLIP_CYCLES);
    }

//initial config body1468 end


//initial config body1469 begin
    if(CP_LANE3_PCS_INT_TX_MASK_0 == "FALSE")
    {
        SC_PCS_CH_INT_3[144]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_TX_MASK_0 == "TRUE")
    {
        SC_PCS_CH_INT_3[144]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[144]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_TX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_TX_MASK_0);
    }

//initial config body1469 end


//initial config body1470 begin
    if(CP_LANE3_PCS_INT_TX_MASK_1 == "FALSE")
    {
        SC_PCS_CH_INT_3[145]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_TX_MASK_1 == "TRUE")
    {
        SC_PCS_CH_INT_3[145]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[145]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_TX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_TX_MASK_1);
    }

//initial config body1470 end


//initial config body1471 begin
    if(CP_LANE3_PCS_INT_TX_MASK_2 == "FALSE")
    {
        SC_PCS_CH_INT_3[146]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_TX_MASK_2 == "TRUE")
    {
        SC_PCS_CH_INT_3[146]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[146]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_TX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_TX_MASK_2);
    }

//initial config body1471 end


//initial config body1472 begin
    if(CP_LANE3_PCS_INT_TX_CLR_0 == "FALSE")
    {
        SC_PCS_CH_INT_3[152]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_TX_CLR_0 == "TRUE")
    {
        SC_PCS_CH_INT_3[152]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[152]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_TX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_TX_CLR_0);
    }

//initial config body1472 end


//initial config body1473 begin
    if(CP_LANE3_PCS_INT_TX_CLR_1 == "FALSE")
    {
        SC_PCS_CH_INT_3[153]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_TX_CLR_1 == "TRUE")
    {
        SC_PCS_CH_INT_3[153]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[153]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_TX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_TX_CLR_1);
    }

//initial config body1473 end


//initial config body1474 begin
    if(CP_LANE3_PCS_INT_TX_CLR_2 == "FALSE")
    {
        SC_PCS_CH_INT_3[154]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_TX_CLR_2 == "TRUE")
    {
        SC_PCS_CH_INT_3[154]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[154]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_TX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_TX_CLR_2);
    }

//initial config body1474 end


//initial config body1475 begin
    if(CP_LANE3_PCS_TX_PMA_TCLK_POLINV == "PMA_TCLK")
    {
        SC_PCS_CH_INT_3[160]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_PMA_TCLK_POLINV == "REVERSE_OF_PMA_TCLK")
    {
        SC_PCS_CH_INT_3[160]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[160]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_PMA_TCLK_POLINV is set to %s. Legal values is PMA_TCLK,REVERSE_OF_PMA_TCLK",CP_LANE3_PCS_TX_PMA_TCLK_POLINV);
    }

//initial config body1475 end


//initial config body1476 begin
    if(CP_LANE3_PCS_TX_PCS_CLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH_INT_3[161]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_PCS_CLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH_INT_3[161]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[161]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_PCS_CLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_TX_PCS_CLK_EN_SEL);
    }

//initial config body1476 end


//initial config body1477 begin
    if(CP_LANE3_PCS_TX_BRIDGE_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH_INT_3[162]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_BRIDGE_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH_INT_3[162]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[162]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_BRIDGE_TCLK_SEL is set to %s. Legal values is TCLK,TCLK2",CP_LANE3_PCS_TX_BRIDGE_TCLK_SEL);
    }

//initial config body1477 end


//initial config body1478 begin
    if(CP_LANE3_PCS_TX_TCLK_POLINV == "TCLK")
    {
        SC_PCS_CH_INT_3[163]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_TCLK_POLINV == "REVERSE_OF_TCLK")
    {
        SC_PCS_CH_INT_3[163]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[163]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_TCLK_POLINV is set to %s. Legal values is TCLK,REVERSE_OF_TCLK",CP_LANE3_PCS_TX_TCLK_POLINV);
    }

//initial config body1478 end


//initial config body1479 begin
    if(CP_LANE3_PCS_PCS_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_3[164]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_PCS_TCLK_SEL == "TCLK")
    {
        SC_PCS_CH_INT_3[164]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[164]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_PCS_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK",CP_LANE3_PCS_PCS_TCLK_SEL);
    }

//initial config body1479 end


//initial config body1480 begin
    if(CP_LANE3_PCS_TX_PCS_TX_RSTN == "FALSE")
    {
        SC_PCS_CH_INT_3[165]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_PCS_TX_RSTN == "TRUE")
    {
        SC_PCS_CH_INT_3[165]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[165]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_PCS_TX_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_TX_PCS_TX_RSTN);
    }

//initial config body1480 end


//initial config body1481 begin
    if(CP_LANE3_PCS_TX_SLAVE == "MASTER")
    {
        SC_PCS_CH_INT_3[166]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_SLAVE == "SLAVE")
    {
        SC_PCS_CH_INT_3[166]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[166]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_SLAVE is set to %s. Legal values is MASTER,SLAVE",CP_LANE3_PCS_TX_SLAVE);
    }

//initial config body1481 end


//initial config body1482 begin
    if(CP_LANE3_PCS_TX_GEAR_CLK_EN_SEL == "FALSE")
    {
        SC_PCS_CH_INT_3[167]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_GEAR_CLK_EN_SEL == "TRUE")
    {
        SC_PCS_CH_INT_3[167]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[167]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_GEAR_CLK_EN_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_TX_GEAR_CLK_EN_SEL);
    }

//initial config body1482 end


//initial config body1483 begin
    if(CP_LANE3_PCS_DATA_WIDTH_MODE == "X20")
    {
        SC_PCS_CH_INT_3[169:168]  :=  2'b00;
    }
    else if (CP_LANE3_PCS_DATA_WIDTH_MODE == "X16")
    {
        SC_PCS_CH_INT_3[169:168]  :=  2'b10;
    }
    else if (CP_LANE3_PCS_DATA_WIDTH_MODE == "X10")
    {
        SC_PCS_CH_INT_3[169:168]  :=  2'b01;
    }
    else if (CP_LANE3_PCS_DATA_WIDTH_MODE == "X8")
    {
        SC_PCS_CH_INT_3[169:168]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_3[169:168]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PCS_DATA_WIDTH_MODE is set to %s. Legal values is X20,X16,X10,X8",CP_LANE3_PCS_DATA_WIDTH_MODE);
    }

//initial config body1483 end


//initial config body1484 begin
    if(CP_LANE3_PCS_TX_64B66B_67B == "NORMAL")
    {
        SC_PCS_CH_INT_3[171:170]  :=  2'b00;
    }
    else if (CP_LANE3_PCS_TX_64B66B_67B == "64B_66B")
    {
        SC_PCS_CH_INT_3[171:170]  :=  2'b01;
    }
    else if (CP_LANE3_PCS_TX_64B66B_67B == "64B_67B")
    {
        SC_PCS_CH_INT_3[171:170]  :=  2'b11;
    }
    else
    {
        SC_PCS_CH_INT_3[171:170]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PCS_TX_64B66B_67B is set to %s. Legal values is NORMAL,64B_66B,64B_67B",CP_LANE3_PCS_TX_64B66B_67B);
    }

//initial config body1484 end


//initial config body1485 begin
    if(CP_LANE3_PCS_GEAR_TCLK_SEL == "PMA_TCLK")
    {
        SC_PCS_CH_INT_3[172]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_GEAR_TCLK_SEL == "TCLK2")
    {
        SC_PCS_CH_INT_3[172]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[172]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_GEAR_TCLK_SEL is set to %s. Legal values is PMA_TCLK,TCLK2",CP_LANE3_PCS_GEAR_TCLK_SEL);
    }

//initial config body1485 end


//initial config body1486 begin
    if(CP_LANE3_PCS_TX_TCLK2FABRIC_SEL == "FALSE")
    {
        SC_PCS_CH_INT_3[176]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_TCLK2FABRIC_SEL == "TRUE")
    {
        SC_PCS_CH_INT_3[176]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[176]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_TCLK2FABRIC_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_TX_TCLK2FABRIC_SEL);
    }

//initial config body1486 end


//initial config body1487 begin
    if(CP_LANE3_PCS_TX_OUTZZ == "FALSE")
    {
        SC_PCS_CH_INT_3[177]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_OUTZZ == "TRUE")
    {
        SC_PCS_CH_INT_3[177]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[177]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_OUTZZ is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_TX_OUTZZ);
    }

//initial config body1487 end


//initial config body1488 begin
    if(CP_LANE3_PCS_ENC_DUAL == "FALSE")
    {
        SC_PCS_CH_INT_3[178]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_ENC_DUAL == "TRUE")
    {
        SC_PCS_CH_INT_3[178]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[178]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_ENC_DUAL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_ENC_DUAL);
    }

//initial config body1488 end


//initial config body1489 begin
    if(CP_LANE3_PCS_TX_BITSLIP_DATA_MODE == "X10")
    {
        SC_PCS_CH_INT_3[179]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_BITSLIP_DATA_MODE == "X20")
    {
        SC_PCS_CH_INT_3[179]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[179]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_BITSLIP_DATA_MODE is set to %s. Legal values is X10,X20",CP_LANE3_PCS_TX_BITSLIP_DATA_MODE);
    }

//initial config body1489 end


//initial config body1490 begin
    if(CP_LANE3_PCS_TX_BRIDGE_CLK_POLINV == "TX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_3[180]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_BRIDGE_CLK_POLINV == "REVERSE_OF_TX_BRIDGE_CLK")
    {
        SC_PCS_CH_INT_3[180]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[180]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_BRIDGE_CLK_POLINV is set to %s. Legal values is TX_BRIDGE_CLK,REVERSE_OF_TX_BRIDGE_CLK",CP_LANE3_PCS_TX_BRIDGE_CLK_POLINV);
    }

//initial config body1490 end


//initial config body1491 begin
    if(CP_LANE3_PCS_COMMA_REG1 >= 0 && CP_LANE3_PCS_COMMA_REG1 <= 1023)
    {
        SC_PCS_CH_INT_3[193:184]  :=  CP_LANE3_PCS_COMMA_REG1;
    }
    else
    {
        SC_PCS_CH_INT_3[193:184]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_COMMA_REG1 is set to %d. Legal values is 0 to 1023",CP_LANE3_PCS_COMMA_REG1);
    }

//initial config body1491 end


//initial config body1492 begin
    if(CP_LANE3_PCS_RAPID_IMAX >= 0 && CP_LANE3_PCS_RAPID_IMAX <= 7)
    {
        SC_PCS_CH_INT_3[202:200]  :=  CP_LANE3_PCS_RAPID_IMAX;
    }
    else
    {
        SC_PCS_CH_INT_3[202:200]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_RAPID_IMAX is set to %d. Legal values is 0 to 7",CP_LANE3_PCS_RAPID_IMAX);
    }

//initial config body1492 end


//initial config body1493 begin
    if(CP_LANE3_PCS_RAPID_VMIN_1 >= 0 && CP_LANE3_PCS_RAPID_VMIN_1 <= 255)
    {
        SC_PCS_CH_INT_3[215:208]  :=  CP_LANE3_PCS_RAPID_VMIN_1;
    }
    else
    {
        SC_PCS_CH_INT_3[215:208]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_RAPID_VMIN_1 is set to %d. Legal values is 0 to 255",CP_LANE3_PCS_RAPID_VMIN_1);
    }

//initial config body1493 end


//initial config body1494 begin
    if(CP_LANE3_PCS_RAPID_VMIN_2 >= 0 && CP_LANE3_PCS_RAPID_VMIN_2 <= 255)
    {
        SC_PCS_CH_INT_3[223:216]  :=  CP_LANE3_PCS_RAPID_VMIN_2;
    }
    else
    {
        SC_PCS_CH_INT_3[223:216]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_RAPID_VMIN_2 is set to %d. Legal values is 0 to 255",CP_LANE3_PCS_RAPID_VMIN_2);
    }

//initial config body1494 end


//initial config body1495 begin
    if(CP_LANE3_PCS_RX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH_INT_3[227:224]  :=  4'd0;
    }
    else if (CP_LANE3_PCS_RX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH_INT_3[227:224]  :=  4'd1;
    }
    else if (CP_LANE3_PCS_RX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH_INT_3[227:224]  :=  4'd2;
    }
    else if (CP_LANE3_PCS_RX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH_INT_3[227:224]  :=  4'd3;
    }
    else if (CP_LANE3_PCS_RX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH_INT_3[227:224]  :=  4'd4;
    }
    else
    {
        SC_PCS_CH_INT_3[227:224]  :=  4'd0;
        error("Setting Error : The CP_LANE3_PCS_RX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31",CP_LANE3_PCS_RX_PRBS_MODE);
    }

//initial config body1495 end


//initial config body1496 begin
    if(CP_LANE3_PCS_RX_ERRCNT_CLR == "FALSE")
    {
        SC_PCS_CH_INT_3[228]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_RX_ERRCNT_CLR == "TRUE")
    {
        SC_PCS_CH_INT_3[228]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[228]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_RX_ERRCNT_CLR is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_RX_ERRCNT_CLR);
    }

//initial config body1496 end


//initial config body1497 begin
    if(CP_LANE3_PCS_PRBS_ERR_LPBK == "FALSE")
    {
        SC_PCS_CH_INT_3[229]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_PRBS_ERR_LPBK == "TRUE")
    {
        SC_PCS_CH_INT_3[229]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[229]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_PRBS_ERR_LPBK is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_PRBS_ERR_LPBK);
    }

//initial config body1497 end


//initial config body1498 begin
    if(CP_LANE3_PCS_TX_PRBS_MODE == "DISABLE")
    {
        SC_PCS_CH_INT_3[235:232]  :=  4'd0;
    }
    else if (CP_LANE3_PCS_TX_PRBS_MODE == "PRBS_7")
    {
        SC_PCS_CH_INT_3[235:232]  :=  4'd1;
    }
    else if (CP_LANE3_PCS_TX_PRBS_MODE == "PRBS_15")
    {
        SC_PCS_CH_INT_3[235:232]  :=  4'd2;
    }
    else if (CP_LANE3_PCS_TX_PRBS_MODE == "PRBS_23")
    {
        SC_PCS_CH_INT_3[235:232]  :=  4'd3;
    }
    else if (CP_LANE3_PCS_TX_PRBS_MODE == "PRBS_31")
    {
        SC_PCS_CH_INT_3[235:232]  :=  4'd4;
    }
    else if (CP_LANE3_PCS_TX_PRBS_MODE == "LONG_1")
    {
        SC_PCS_CH_INT_3[235:232]  :=  4'd5;
    }
    else if (CP_LANE3_PCS_TX_PRBS_MODE == "LONG_0")
    {
        SC_PCS_CH_INT_3[235:232]  :=  4'd6;
    }
    else if (CP_LANE3_PCS_TX_PRBS_MODE == "20UI")
    {
        SC_PCS_CH_INT_3[235:232]  :=  4'd7;
    }
    else if (CP_LANE3_PCS_TX_PRBS_MODE == "D10_2")
    {
        SC_PCS_CH_INT_3[235:232]  :=  4'd8;
    }
    else if (CP_LANE3_PCS_TX_PRBS_MODE == "PCIE")
    {
        SC_PCS_CH_INT_3[235:232]  :=  4'd9;
    }
    else
    {
        SC_PCS_CH_INT_3[235:232]  :=  4'd0;
        error("Setting Error : The CP_LANE3_PCS_TX_PRBS_MODE is set to %s. Legal values is DISABLE,PRBS_7,PRBS_15,PRBS_23,PRBS_31,LONG_1,LONG_0,20UI,D10_2,PCIE",CP_LANE3_PCS_TX_PRBS_MODE);
    }

//initial config body1498 end


//initial config body1499 begin
    if(CP_LANE3_PCS_TX_INSERT_ER == "FALSE")
    {
        SC_PCS_CH_INT_3[236]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TX_INSERT_ER == "TRUE")
    {
        SC_PCS_CH_INT_3[236]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[236]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TX_INSERT_ER is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_TX_INSERT_ER);
    }

//initial config body1499 end


//initial config body1500 begin
    if(CP_LANE3_PCS_ENABLE_PRBS_GEN == "FALSE")
    {
        SC_PCS_CH_INT_3[237]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_ENABLE_PRBS_GEN == "TRUE")
    {
        SC_PCS_CH_INT_3[237]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[237]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_ENABLE_PRBS_GEN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_ENABLE_PRBS_GEN);
    }

//initial config body1500 end


//initial config body1501 begin
    if(CP_LANE3_PCS_DEFAULT_RADDR >= 0 && CP_LANE3_PCS_DEFAULT_RADDR <= 15)
    {
        SC_PCS_CH_INT_3[251:248]  :=  CP_LANE3_PCS_DEFAULT_RADDR;
    }
    else
    {
        SC_PCS_CH_INT_3[251:248]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_DEFAULT_RADDR is set to %d. Legal values is 0 to 15",CP_LANE3_PCS_DEFAULT_RADDR);
    }

//initial config body1501 end


//initial config body1502 begin
    if(CP_LANE3_PCS_MASTER_CHECK_OFFSET >= 0 && CP_LANE3_PCS_MASTER_CHECK_OFFSET <= 15)
    {
        SC_PCS_CH_INT_3[255:252]  :=  CP_LANE3_PCS_MASTER_CHECK_OFFSET;
    }
    else
    {
        SC_PCS_CH_INT_3[255:252]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_MASTER_CHECK_OFFSET is set to %d. Legal values is 0 to 15",CP_LANE3_PCS_MASTER_CHECK_OFFSET);
    }

//initial config body1502 end


//initial config body1503 begin
    if(CP_LANE3_PCS_DELAY_SET >= 0 && CP_LANE3_PCS_DELAY_SET <= 15)
    {
        SC_PCS_CH_INT_3[259:256]  :=  CP_LANE3_PCS_DELAY_SET;
    }
    else
    {
        SC_PCS_CH_INT_3[259:256]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_DELAY_SET is set to %d. Legal values is 0 to 15",CP_LANE3_PCS_DELAY_SET);
    }

//initial config body1503 end


//initial config body1504 begin
    if(CP_LANE3_PCS_SEACH_OFFSET == "20BIT")
    {
        SC_PCS_CH_INT_3[262:260]  :=  3'd0;
    }
    else if (CP_LANE3_PCS_SEACH_OFFSET == "30BIT")
    {
        SC_PCS_CH_INT_3[262:260]  :=  3'd1;
    }
    else if (CP_LANE3_PCS_SEACH_OFFSET == "40BIT")
    {
        SC_PCS_CH_INT_3[262:260]  :=  3'd2;
    }
    else if (CP_LANE3_PCS_SEACH_OFFSET == "50BIT")
    {
        SC_PCS_CH_INT_3[262:260]  :=  3'd3;
    }
    else if (CP_LANE3_PCS_SEACH_OFFSET == "60BIT")
    {
        SC_PCS_CH_INT_3[262:260]  :=  3'd4;
    }
    else if (CP_LANE3_PCS_SEACH_OFFSET == "70BIT")
    {
        SC_PCS_CH_INT_3[262:260]  :=  3'd5;
    }
    else if (CP_LANE3_PCS_SEACH_OFFSET == "80BIT")
    {
        SC_PCS_CH_INT_3[262:260]  :=  3'd6;
    }
    else
    {
        SC_PCS_CH_INT_3[262:260]  :=  3'd0;
        error("Setting Error : The CP_LANE3_PCS_SEACH_OFFSET is set to %s. Legal values is 20BIT,30BIT,40BIT,50BIT,60BIT,70BIT,80BIT",CP_LANE3_PCS_SEACH_OFFSET);
    }

//initial config body1504 end


//initial config body1505 begin
    if(CP_LANE3_PCS_CEB_RAPIDLS_MMAX >= 0 && CP_LANE3_PCS_CEB_RAPIDLS_MMAX <= 7)
    {
        SC_PCS_CH_INT_3[266:264]  :=  CP_LANE3_PCS_CEB_RAPIDLS_MMAX;
    }
    else
    {
        SC_PCS_CH_INT_3[266:264]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_CEB_RAPIDLS_MMAX is set to %d. Legal values is 0 to 7",CP_LANE3_PCS_CEB_RAPIDLS_MMAX);
    }

//initial config body1505 end


//initial config body1506 begin
    if(CP_LANE3_PCS_CTC_AFULL >= 0 && CP_LANE3_PCS_CTC_AFULL <= 31)
    {
        SC_PCS_CH_INT_3[276:272]  :=  CP_LANE3_PCS_CTC_AFULL;
    }
    else
    {
        SC_PCS_CH_INT_3[276:272]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_CTC_AFULL is set to %d. Legal values is 0 to 31",CP_LANE3_PCS_CTC_AFULL);
    }

//initial config body1506 end


//initial config body1507 begin
    if(CP_LANE3_PCS_CTC_AEMPTY >= 0 && CP_LANE3_PCS_CTC_AEMPTY <= 31)
    {
        SC_PCS_CH_INT_3[284:280]  :=  CP_LANE3_PCS_CTC_AEMPTY;
    }
    else
    {
        SC_PCS_CH_INT_3[284:280]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_CTC_AEMPTY is set to %d. Legal values is 0 to 31",CP_LANE3_PCS_CTC_AEMPTY);
    }

//initial config body1507 end


//initial config body1508 begin
    if(CP_LANE3_PCS_CTC_CONTI_SKP_SET >= 0 && CP_LANE3_PCS_CTC_CONTI_SKP_SET <= 1)
    {
        SC_PCS_CH_INT_3[285]  :=  CP_LANE3_PCS_CTC_CONTI_SKP_SET;
    }
    else
    {
        SC_PCS_CH_INT_3[285]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_CTC_CONTI_SKP_SET is set to %d. Legal values is 0 to 1",CP_LANE3_PCS_CTC_CONTI_SKP_SET);
    }

//initial config body1508 end


//initial config body1509 begin
    if(CP_LANE3_PCS_FAR_LOOP == "FALSE")
    {
        SC_PCS_CH_INT_3[288]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_FAR_LOOP == "TRUE")
    {
        SC_PCS_CH_INT_3[288]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[288]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_FAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_FAR_LOOP);
    }

//initial config body1509 end


//initial config body1510 begin
    if(CP_LANE3_PCS_NEAR_LOOP == "FALSE")
    {
        SC_PCS_CH_INT_3[289]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_NEAR_LOOP == "TRUE")
    {
        SC_PCS_CH_INT_3[289]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[289]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_NEAR_LOOP is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_NEAR_LOOP);
    }

//initial config body1510 end


//initial config body1511 begin
    if(CP_LANE3_PCS_PMA_TX2RX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH_INT_3[290]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_PMA_TX2RX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH_INT_3[290]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[290]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_PMA_TX2RX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_PMA_TX2RX_PLOOP_EN);
    }

//initial config body1511 end


//initial config body1512 begin
    if(CP_LANE3_PCS_PMA_TX2RX_SLOOP_EN == "FALSE")
    {
        SC_PCS_CH_INT_3[291]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_PMA_TX2RX_SLOOP_EN == "TRUE")
    {
        SC_PCS_CH_INT_3[291]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[291]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_PMA_TX2RX_SLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_PMA_TX2RX_SLOOP_EN);
    }

//initial config body1512 end


//initial config body1513 begin
    if(CP_LANE3_PCS_PMA_RX2TX_PLOOP_EN == "FALSE")
    {
        SC_PCS_CH_INT_3[292]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_PMA_RX2TX_PLOOP_EN == "TRUE")
    {
        SC_PCS_CH_INT_3[292]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[292]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_PMA_RX2TX_PLOOP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_PMA_RX2TX_PLOOP_EN);
    }

//initial config body1513 end


//initial config body1514 begin
    if(CP_LANE3_PCS_INT_RX_MASK_0 == "FALSE")
    {
        SC_PCS_CH_INT_3[296]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_MASK_0 == "TRUE")
    {
        SC_PCS_CH_INT_3[296]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[296]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_MASK_0);
    }

//initial config body1514 end


//initial config body1515 begin
    if(CP_LANE3_PCS_INT_RX_MASK_1 == "FALSE")
    {
        SC_PCS_CH_INT_3[297]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_MASK_1 == "TRUE")
    {
        SC_PCS_CH_INT_3[297]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[297]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_MASK_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_MASK_1);
    }

//initial config body1515 end


//initial config body1516 begin
    if(CP_LANE3_PCS_INT_RX_MASK_2 == "FALSE")
    {
        SC_PCS_CH_INT_3[298]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_MASK_2 == "TRUE")
    {
        SC_PCS_CH_INT_3[298]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[298]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_MASK_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_MASK_2);
    }

//initial config body1516 end


//initial config body1517 begin
    if(CP_LANE3_PCS_INT_RX_MASK_3 == "FALSE")
    {
        SC_PCS_CH_INT_3[299]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_MASK_3 == "TRUE")
    {
        SC_PCS_CH_INT_3[299]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[299]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_MASK_3 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_MASK_3);
    }

//initial config body1517 end


//initial config body1518 begin
    if(CP_LANE3_PCS_INT_RX_MASK_4 == "FALSE")
    {
        SC_PCS_CH_INT_3[300]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_MASK_4 == "TRUE")
    {
        SC_PCS_CH_INT_3[300]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[300]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_MASK_4 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_MASK_4);
    }

//initial config body1518 end


//initial config body1519 begin
    if(CP_LANE3_PCS_INT_RX_MASK_5 == "FALSE")
    {
        SC_PCS_CH_INT_3[301]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_MASK_5 == "TRUE")
    {
        SC_PCS_CH_INT_3[301]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[301]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_MASK_5 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_MASK_5);
    }

//initial config body1519 end


//initial config body1520 begin
    if(CP_LANE3_PCS_INT_RX_MASK_6 == "FALSE")
    {
        SC_PCS_CH_INT_3[302]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_MASK_6 == "TRUE")
    {
        SC_PCS_CH_INT_3[302]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[302]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_MASK_6 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_MASK_6);
    }

//initial config body1520 end


//initial config body1521 begin
    if(CP_LANE3_PCS_INT_RX_MASK_7 == "FALSE")
    {
        SC_PCS_CH_INT_3[303]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_MASK_7 == "TRUE")
    {
        SC_PCS_CH_INT_3[303]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[303]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_MASK_7 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_MASK_7);
    }

//initial config body1521 end


//initial config body1522 begin
    if(CP_LANE3_PCS_INT_RX_CLR_0 == "FALSE")
    {
        SC_PCS_CH_INT_3[304]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_CLR_0 == "TRUE")
    {
        SC_PCS_CH_INT_3[304]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[304]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_CLR_0);
    }

//initial config body1522 end


//initial config body1523 begin
    if(CP_LANE3_PCS_INT_RX_CLR_1 == "FALSE")
    {
        SC_PCS_CH_INT_3[305]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_CLR_1 == "TRUE")
    {
        SC_PCS_CH_INT_3[305]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[305]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_CLR_1 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_CLR_1);
    }

//initial config body1523 end


//initial config body1524 begin
    if(CP_LANE3_PCS_INT_RX_CLR_2 == "FALSE")
    {
        SC_PCS_CH_INT_3[306]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_CLR_2 == "TRUE")
    {
        SC_PCS_CH_INT_3[306]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[306]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_CLR_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_CLR_2);
    }

//initial config body1524 end


//initial config body1525 begin
    if(CP_LANE3_PCS_INT_RX_CLR_3 == "FALSE")
    {
        SC_PCS_CH_INT_3[307]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_CLR_3 == "TRUE")
    {
        SC_PCS_CH_INT_3[307]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[307]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_CLR_3 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_CLR_3);
    }

//initial config body1525 end


//initial config body1526 begin
    if(CP_LANE3_PCS_INT_RX_CLR_4 == "FALSE")
    {
        SC_PCS_CH_INT_3[308]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_CLR_4 == "TRUE")
    {
        SC_PCS_CH_INT_3[308]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[308]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_CLR_4 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_CLR_4);
    }

//initial config body1526 end


//initial config body1527 begin
    if(CP_LANE3_PCS_INT_RX_CLR_5 == "FALSE")
    {
        SC_PCS_CH_INT_3[309]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_CLR_5 == "TRUE")
    {
        SC_PCS_CH_INT_3[309]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[309]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_CLR_5 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_CLR_5);
    }

//initial config body1527 end


//initial config body1528 begin
    if(CP_LANE3_PCS_INT_RX_CLR_6 == "FALSE")
    {
        SC_PCS_CH_INT_3[310]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_CLR_6 == "TRUE")
    {
        SC_PCS_CH_INT_3[310]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[310]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_CLR_6 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_CLR_6);
    }

//initial config body1528 end


//initial config body1529 begin
    if(CP_LANE3_PCS_INT_RX_CLR_7 == "FALSE")
    {
        SC_PCS_CH_INT_3[311]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_INT_RX_CLR_7 == "TRUE")
    {
        SC_PCS_CH_INT_3[311]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[311]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_INT_RX_CLR_7 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_INT_RX_CLR_7);
    }

//initial config body1529 end


//initial config body1530 begin
    if(CP_LANE3_PCS_CA_RSTN_RX == "FALSE")
    {
        SC_PCS_CH_INT_3[312]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_CA_RSTN_RX == "TRUE")
    {
        SC_PCS_CH_INT_3[312]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[312]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_CA_RSTN_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_CA_RSTN_RX);
    }

//initial config body1530 end


//initial config body1531 begin
    if(CP_LANE3_PCS_CA_DYN_DLY_EN_RX == "FALSE")
    {
        SC_PCS_CH_INT_3[313]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_CA_DYN_DLY_EN_RX == "TRUE")
    {
        SC_PCS_CH_INT_3[313]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[313]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_CA_DYN_DLY_EN_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_CA_DYN_DLY_EN_RX);
    }

//initial config body1531 end


//initial config body1532 begin
    if(CP_LANE3_PCS_CA_DYN_DLY_SEL_RX == "FALSE")
    {
        SC_PCS_CH_INT_3[314]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_CA_DYN_DLY_SEL_RX == "TRUE")
    {
        SC_PCS_CH_INT_3[314]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[314]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_CA_DYN_DLY_SEL_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_CA_DYN_DLY_SEL_RX);
    }

//initial config body1532 end


//initial config body1533 begin
    if(CP_LANE3_PCS_CA_RX >= 0 && CP_LANE3_PCS_CA_RX <= 255)
    {
        SC_PCS_CH_INT_3[322:315]  :=  CP_LANE3_PCS_CA_RX;
    }
    else
    {
        SC_PCS_CH_INT_3[322:315]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_CA_RX is set to %d. Legal values is 0 to 255",CP_LANE3_PCS_CA_RX);
    }

//initial config body1533 end


//initial config body1534 begin
    if(CP_LANE3_PCS_CA_RSTN_TX == "FALSE")
    {
        SC_PCS_CH_INT_3[323]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_CA_RSTN_TX == "TRUE")
    {
        SC_PCS_CH_INT_3[323]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[323]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_CA_RSTN_TX is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_CA_RSTN_TX);
    }

//initial config body1534 end


//initial config body1535 begin
    if(CP_LANE3_PCS_CA_DYN_DLY_EN_TX == "FALSE")
    {
        SC_PCS_CH_INT_3[324]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_CA_DYN_DLY_EN_TX == "TRUE")
    {
        SC_PCS_CH_INT_3[324]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[324]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_CA_DYN_DLY_EN_TX is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_CA_DYN_DLY_EN_TX);
    }

//initial config body1535 end


//initial config body1536 begin
    if(CP_LANE3_PCS_CA_DYN_DLY_SEL_TX == "FALSE")
    {
        SC_PCS_CH_INT_3[325]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_CA_DYN_DLY_SEL_TX == "TRUE")
    {
        SC_PCS_CH_INT_3[325]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[325]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_CA_DYN_DLY_SEL_TX is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PCS_CA_DYN_DLY_SEL_TX);
    }

//initial config body1536 end


//initial config body1537 begin
    if(CP_LANE3_PCS_CA_TX >= 0 && CP_LANE3_PCS_CA_TX <= 255)
    {
        SC_PCS_CH_INT_3[333:326]  :=  CP_LANE3_PCS_CA_TX;
    }
    else
    {
        SC_PCS_CH_INT_3[333:326]  :=  0;
        error("Setting Error : The CP_LANE3_PCS_CA_TX is set to %d. Legal values is 0 to 255",CP_LANE3_PCS_CA_TX);
    }

//initial config body1537 end


//initial config body1538 begin
    if(CP_LANE3_PCS_RXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_3[334]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_RXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_3[334]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[334]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_RXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE3_PCS_RXPRBS_PWR_REDUCTION);
    }

//initial config body1538 end


//initial config body1539 begin
    if(CP_LANE3_PCS_WDALIGN_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_3[335]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_WDALIGN_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_3[335]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[335]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_WDALIGN_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE3_PCS_WDALIGN_PWR_REDUCTION);
    }

//initial config body1539 end


//initial config body1540 begin
    if(CP_LANE3_PCS_RXDEC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_3[336]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_RXDEC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_3[336]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[336]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_RXDEC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE3_PCS_RXDEC_PWR_REDUCTION);
    }

//initial config body1540 end


//initial config body1541 begin
    if(CP_LANE3_PCS_RXCB_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_3[337]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_RXCB_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_3[337]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[337]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_RXCB_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE3_PCS_RXCB_PWR_REDUCTION);
    }

//initial config body1541 end


//initial config body1542 begin
    if(CP_LANE3_PCS_RXCTC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_3[338]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_RXCTC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_3[338]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[338]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_RXCTC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE3_PCS_RXCTC_PWR_REDUCTION);
    }

//initial config body1542 end


//initial config body1543 begin
    if(CP_LANE3_PCS_RXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_3[339]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_RXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_3[339]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[339]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_RXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE3_PCS_RXGEAR_PWR_REDUCTION);
    }

//initial config body1543 end


//initial config body1544 begin
    if(CP_LANE3_PCS_RXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_3[340]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_RXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_3[340]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[340]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_RXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE3_PCS_RXBRG_PWR_REDUCTION);
    }

//initial config body1544 end


//initial config body1545 begin
    if(CP_LANE3_PCS_RXTEST_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_3[341]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_RXTEST_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_3[341]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[341]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_RXTEST_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE3_PCS_RXTEST_PWR_REDUCTION);
    }

//initial config body1545 end


//initial config body1546 begin
    if(CP_LANE3_PCS_TXBRG_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_3[342]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TXBRG_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_3[342]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[342]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TXBRG_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE3_PCS_TXBRG_PWR_REDUCTION);
    }

//initial config body1546 end


//initial config body1547 begin
    if(CP_LANE3_PCS_TXGEAR_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_3[343]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TXGEAR_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_3[343]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[343]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TXGEAR_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE3_PCS_TXGEAR_PWR_REDUCTION);
    }

//initial config body1547 end


//initial config body1548 begin
    if(CP_LANE3_PCS_TXENC_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_3[344]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TXENC_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_3[344]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[344]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TXENC_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE3_PCS_TXENC_PWR_REDUCTION);
    }

//initial config body1548 end


//initial config body1549 begin
    if(CP_LANE3_PCS_TXBSLP_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_3[345]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TXBSLP_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_3[345]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[345]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TXBSLP_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE3_PCS_TXBSLP_PWR_REDUCTION);
    }

//initial config body1549 end


//initial config body1550 begin
    if(CP_LANE3_PCS_TXPRBS_PWR_REDUCTION == "NORMAL")
    {
        SC_PCS_CH_INT_3[346]  :=  1'b0;
    }
    else if (CP_LANE3_PCS_TXPRBS_PWR_REDUCTION == "POWER_REDUCTION")
    {
        SC_PCS_CH_INT_3[346]  :=  1'b1;
    }
    else
    {
        SC_PCS_CH_INT_3[346]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PCS_TXPRBS_PWR_REDUCTION is set to %s. Legal values is NORMAL,POWER_REDUCTION",CP_LANE3_PCS_TXPRBS_PWR_REDUCTION);
    }

//initial config body1550 end


//initial config body1551 begin
    if(CP_LANE3_PMA_REG_RX_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE3[0]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE3[0]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[0]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_PD is set to %s. Legal values is ON,OFF",CP_LANE3_PMA_REG_RX_PD);
    }

//initial config body1551 end


//initial config body1552 begin
    if(CP_LANE3_PMA_REG_RX_PD_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[1]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_PD_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[1]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[1]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_PD_EN);
    }

//initial config body1552 end


//initial config body1553 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_2 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[2]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_RESERVED_2 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[2]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[2]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_2 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RESERVED_2);
    }

//initial config body1553 end


//initial config body1554 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_3 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[3]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_RESERVED_3 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[3]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[3]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_3 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RESERVED_3);
    }

//initial config body1554 end


//initial config body1555 begin
    if(CP_LANE3_PMA_REG_RX_DATAPATH_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE3[4]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_DATAPATH_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE3[4]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[4]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_DATAPATH_PD is set to %s. Legal values is ON,OFF",CP_LANE3_PMA_REG_RX_DATAPATH_PD);
    }

//initial config body1555 end


//initial config body1556 begin
    if(CP_LANE3_PMA_REG_RX_DATAPATH_PD_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[5]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_DATAPATH_PD_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[5]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[5]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_DATAPATH_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_DATAPATH_PD_EN);
    }

//initial config body1556 end


//initial config body1557 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE3[6]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE3[6]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[6]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_PD is set to %s. Legal values is ON,OFF",CP_LANE3_PMA_REG_RX_SIGDET_PD);
    }

//initial config body1557 end


//initial config body1558 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_PD_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[7]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_PD_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[7]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[7]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_PD_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SIGDET_PD_EN);
    }

//initial config body1558 end


//initial config body1559 begin
    if(CP_LANE3_PMA_REG_RX_DCC_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[8]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_RX_DCC_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[8]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[8]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_DCC_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_DCC_RST_N);
    }

//initial config body1559 end


//initial config body1560 begin
    if(CP_LANE3_PMA_REG_RX_DCC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[9]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_DCC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[9]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[9]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_DCC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_DCC_RST_N_EN);
    }

//initial config body1560 end


//initial config body1561 begin
    if(CP_LANE3_PMA_REG_RX_CDR_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[10]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_RX_CDR_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[10]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[10]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_CDR_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_CDR_RST_N);
    }

//initial config body1561 end


//initial config body1562 begin
    if(CP_LANE3_PMA_REG_RX_CDR_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[11]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_CDR_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[11]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[11]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_CDR_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_CDR_RST_N_EN);
    }

//initial config body1562 end


//initial config body1563 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[12]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[12]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[12]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SIGDET_RST_N);
    }

//initial config body1563 end


//initial config body1564 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[13]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[13]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[13]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SIGDET_RST_N_EN);
    }

//initial config body1564 end


//initial config body1565 begin
    if(CP_LANE3_PMA_REG_RXPCLK_SLIP == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[14]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RXPCLK_SLIP == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[14]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[14]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RXPCLK_SLIP is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RXPCLK_SLIP);
    }

//initial config body1565 end


//initial config body1566 begin
    if(CP_LANE3_PMA_REG_RXPCLK_SLIP_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[15]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RXPCLK_SLIP_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[15]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[15]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RXPCLK_SLIP_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RXPCLK_SLIP_OW);
    }

//initial config body1566 end


//initial config body1567 begin
    if(CP_LANE3_PMA_REG_RX_PCLKSWITCH_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[16]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_RX_PCLKSWITCH_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[16]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[16]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_PCLKSWITCH_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_PCLKSWITCH_RST_N);
    }

//initial config body1567 end


//initial config body1568 begin
    if(CP_LANE3_PMA_REG_RX_PCLKSWITCH_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[17]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_PCLKSWITCH_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[17]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[17]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_PCLKSWITCH_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_PCLKSWITCH_RST_N_EN);
    }

//initial config body1568 end


//initial config body1569 begin
    if(CP_LANE3_PMA_REG_RX_PCLKSWITCH == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[18]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_PCLKSWITCH == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[18]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[18]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_PCLKSWITCH is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_PCLKSWITCH);
    }

//initial config body1569 end


//initial config body1570 begin
    if(CP_LANE3_PMA_REG_RX_PCLKSWITCH_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[19]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_PCLKSWITCH_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[19]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[19]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_PCLKSWITCH_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_PCLKSWITCH_EN);
    }

//initial config body1570 end


//initial config body1571 begin
    if(CP_LANE3_PMA_REG_RX_HIGHZ == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[20]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_HIGHZ == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[20]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[20]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_HIGHZ is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_HIGHZ);
    }

//initial config body1571 end


//initial config body1572 begin
    if(CP_LANE3_PMA_REG_RX_HIGHZ_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[21]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_HIGHZ_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[21]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[21]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_HIGHZ_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_HIGHZ_EN);
    }

//initial config body1572 end


//initial config body1573 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_CLK_WINDOW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[22]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_CLK_WINDOW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[22]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[22]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_CLK_WINDOW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SIGDET_CLK_WINDOW);
    }

//initial config body1573 end


//initial config body1574 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_CLK_WINDOW_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[23]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_CLK_WINDOW_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[23]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[23]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_CLK_WINDOW_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SIGDET_CLK_WINDOW_OW);
    }

//initial config body1574 end


//initial config body1575 begin
    if(CP_LANE3_PMA_REG_RX_PD_BIAS_RX == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[24]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_PD_BIAS_RX == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[24]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[24]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_PD_BIAS_RX is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_PD_BIAS_RX);
    }

//initial config body1575 end


//initial config body1576 begin
    if(CP_LANE3_PMA_REG_RX_PD_BIAS_RX_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[25]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_PD_BIAS_RX_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[25]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[25]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_PD_BIAS_RX_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_PD_BIAS_RX_OW);
    }

//initial config body1576 end


//initial config body1577 begin
    if(CP_LANE3_PMA_REG_RX_RESET_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[26]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_RESET_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[26]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[26]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESET_N is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RESET_N);
    }

//initial config body1577 end


//initial config body1578 begin
    if(CP_LANE3_PMA_REG_RX_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[27]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[27]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[27]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RESET_N_OW);
    }

//initial config body1578 end


//initial config body1579 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_29_28 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_29_28 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE3[29:28]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_RESERVED_29_28, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[29:28]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_29_28 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_RESERVED_29_28);
    }

//initial config body1579 end


//initial config body1580 begin
    if(CP_LANE3_PMA_REG_RX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH_INT_RX_LANE3[32:30]   :=  to_unsigned( 0, 3) ^ 3'b011;
    }
    else if (CP_LANE3_PMA_REG_RX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH_INT_RX_LANE3[32:30]   :=  to_unsigned( 1, 3) ^ 3'b011;
    }
    else if (CP_LANE3_PMA_REG_RX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH_INT_RX_LANE3[32:30]   :=  to_unsigned( 2, 3) ^ 3'b011;
    }
    else if (CP_LANE3_PMA_REG_RX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH_INT_RX_LANE3[32:30]   :=  to_unsigned( 3, 3) ^ 3'b011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[32:30]   :=  to_unsigned( 0, 3) ^ 3'b011;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE3_PMA_REG_RX_BUSWIDTH);
    }

//initial config body1580 end


//initial config body1581 begin
    if(CP_LANE3_PMA_REG_RX_BUSWIDTH_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[33]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_BUSWIDTH_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[33]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[33]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_BUSWIDTH_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_BUSWIDTH_EN);
    }

//initial config body1581 end


//initial config body1582 begin
    if(CP_LANE3_PMA_REG_RX_RATE == "DIV4")
    {
        SC_PMA_CH_INT_RX_LANE3[35:34]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE3_PMA_REG_RX_RATE == "DIV2")
    {
        SC_PMA_CH_INT_RX_LANE3[35:34]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE3_PMA_REG_RX_RATE == "DIV1")
    {
        SC_PMA_CH_INT_RX_LANE3[35:34]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE3_PMA_REG_RX_RATE == "MUL2")
    {
        SC_PMA_CH_INT_RX_LANE3[35:34]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[35:34]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RATE is set to %s. Legal values is DIV4,DIV2,DIV1,MUL2",CP_LANE3_PMA_REG_RX_RATE);
    }

//initial config body1582 end


//initial config body1583 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_36 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[36]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_RESERVED_36 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[36]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[36]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_36 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RESERVED_36);
    }

//initial config body1583 end


//initial config body1584 begin
    if(CP_LANE3_PMA_REG_RX_RATE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[37]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_RATE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[37]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[37]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RATE_EN);
    }

//initial config body1584 end


//initial config body1585 begin
    if(CP_LANE3_PMA_REG_RX_RES_TRIM >= 0 && CP_LANE3_PMA_REG_RX_RES_TRIM <= 63)
    {
        SC_PMA_CH_INT_RX_LANE3[43:38]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_RES_TRIM, 6) ^ 6'b110111;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[43:38]   :=  to_unsigned( 0, 6) ^ 6'b110111;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RES_TRIM is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_RX_RES_TRIM);
    }

//initial config body1585 end


//initial config body1586 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_44 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[44]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_RESERVED_44 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[44]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[44]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_44 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RESERVED_44);
    }

//initial config body1586 end


//initial config body1587 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_45 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[45]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_RESERVED_45 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[45]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[45]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_45 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RESERVED_45);
    }

//initial config body1587 end


//initial config body1588 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_STATUS_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[46]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_STATUS_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[46]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[46]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_STATUS_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SIGDET_STATUS_EN);
    }

//initial config body1588 end


//initial config body1589 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_48_47 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_48_47 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE3[48:47]  :=  CP_LANE3_PMA_REG_RX_RESERVED_48_47;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[48:47]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_48_47 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_RESERVED_48_47);
    }

//initial config body1589 end


//initial config body1590 begin

 if(CP_LANE3_PMA_REG_RX_ICTRL_SIGDET >= 0 && CP_LANE3_PMA_REG_RX_ICTRL_SIGDET <= 15) 
 {
 SC_PMA_CH_INT_RX_LANE3[52:49]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_ICTRL_SIGDET, 4) ^ 4'b0101; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE3[52:49]   :=  to_unsigned( 0, 4) ^ 4'b0101; 
 error("Setting Error : The CP_LANE3_PMA_REG_RX_ICTRL_SIGDET is set to %d. Legal values is 0 to 15",CP_LANE3_PMA_REG_RX_ICTRL_SIGDET); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE3_PMA_REG_CDR_READY_THD >= 0 && CP_LANE3_PMA_REG_CDR_READY_THD <= 4095) 
 {
 SC_PMA_CH_INT_RX_LANE3[64:53]   :=  to_unsigned( CP_LANE3_PMA_REG_CDR_READY_THD, 12) ^ 12'b101010101110; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE3[64:53]   :=  to_unsigned( 0, 12) ^ 12'b101010101110; 
 error("Setting Error : The CP_LANE3_PMA_REG_CDR_READY_THD is set to %d. Legal values is 0 to 4095",CP_LANE3_PMA_REG_CDR_READY_THD); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE3_PMA_REG_RX_RESERVED_65 == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE3[65]  :=  1'b0; 
}
else if (CP_LANE3_PMA_REG_RX_RESERVED_65 == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE3[65]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE3[65]  :=  1'b0; 
 error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_65 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RESERVED_65);  
}

//initial config body1590 end


//initial config body1591 begin
    if(CP_LANE3_PMA_REG_RX_PCLK_EDGE_SEL == "POS_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE3[66]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_PCLK_EDGE_SEL == "NEG_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE3[66]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[66]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_PCLK_EDGE_SEL is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_LANE3_PMA_REG_RX_PCLK_EDGE_SEL);
    }

//initial config body1591 end


//initial config body1592 begin
    if(CP_LANE3_PMA_REG_RX_PIBUF_IC >= 0 && CP_LANE3_PMA_REG_RX_PIBUF_IC <= 3)
    {
        SC_PMA_CH_INT_RX_LANE3[68:67]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_PIBUF_IC, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[68:67]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_PIBUF_IC is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_PIBUF_IC);
    }

//initial config body1592 end


//initial config body1593 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_69 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[69]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_RESERVED_69 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[69]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[69]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_69 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RESERVED_69);
    }

//initial config body1593 end


//initial config body1594 begin

 if(CP_LANE3_PMA_REG_RX_DCC_IC_RX >= 0 && CP_LANE3_PMA_REG_RX_DCC_IC_RX <= 3) 
 {
 SC_PMA_CH_INT_RX_LANE3[71:70]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_DCC_IC_RX, 2) ^ 2'b11; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE3[71:70]   :=  to_unsigned( 0, 2) ^ 2'b11; 
 error("Setting Error : The CP_LANE3_PMA_REG_RX_DCC_IC_RX is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_DCC_IC_RX); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE3_PMA_REG_CDR_READY_CHECK_CTRL >= 0 && CP_LANE3_PMA_REG_CDR_READY_CHECK_CTRL <= 3) 
 {
 SC_PMA_CH_INT_RX_LANE3[73:72]   :=  to_unsigned( CP_LANE3_PMA_REG_CDR_READY_CHECK_CTRL, 2) ^ 2'b11; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE3[73:72]   :=  to_unsigned( 0, 2) ^ 2'b11; 
 error("Setting Error : The CP_LANE3_PMA_REG_CDR_READY_CHECK_CTRL is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_CDR_READY_CHECK_CTRL); 
}

//initial config body1594 end


//initial config body1595 begin
    if(CP_LANE3_PMA_REG_RX_ICTRL_TRX == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[75:74]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_RX_ICTRL_TRX == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[75:74]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_RX_ICTRL_TRX == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[75:74]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_RX_ICTRL_TRX == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[75:74]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[75:74]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_ICTRL_TRX is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE3_PMA_REG_RX_ICTRL_TRX);
    }

//initial config body1595 end


//initial config body1596 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_77_76 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_77_76 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE3[77:76]  :=  CP_LANE3_PMA_REG_RX_RESERVED_77_76;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[77:76]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_77_76 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_RESERVED_77_76);
    }

//initial config body1596 end


//initial config body1597 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_79_78 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_79_78 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE3[79:78]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_RESERVED_79_78, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[79:78]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_79_78 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_RESERVED_79_78);
    }

//initial config body1597 end


//initial config body1598 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_81_80 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_81_80 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE3[81:80]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_RESERVED_81_80, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[81:80]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_81_80 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_RESERVED_81_80);
    }

//initial config body1598 end


//initial config body1599 begin
    if(CP_LANE3_PMA_REG_RX_ICTRL_PIBUF == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[83:82]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_RX_ICTRL_PIBUF == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[83:82]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_RX_ICTRL_PIBUF == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[83:82]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_RX_ICTRL_PIBUF == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[83:82]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[83:82]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_ICTRL_PIBUF is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE3_PMA_REG_RX_ICTRL_PIBUF);
    }

//initial config body1599 end


//initial config body1600 begin
    if(CP_LANE3_PMA_REG_RX_ICTRL_PI == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[85:84]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_RX_ICTRL_PI == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[85:84]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_RX_ICTRL_PI == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[85:84]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_RX_ICTRL_PI == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[85:84]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[85:84]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_ICTRL_PI is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE3_PMA_REG_RX_ICTRL_PI);
    }

//initial config body1600 end


//initial config body1601 begin
    if(CP_LANE3_PMA_REG_RX_ICTRL_DCC == "87_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[87:86]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_RX_ICTRL_DCC == "100PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[87:86]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_RX_ICTRL_DCC == "112_5PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[87:86]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_RX_ICTRL_DCC == "125PCT")
    {
        SC_PMA_CH_INT_RX_LANE3[87:86]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[87:86]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_ICTRL_DCC is set to %s. Legal values is 87_5PCT,100PCT,112_5PCT,125PCT",CP_LANE3_PMA_REG_RX_ICTRL_DCC);
    }

//initial config body1601 end


//initial config body1602 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_89_88 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_89_88 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE3[89:88]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_RESERVED_89_88, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[89:88]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_89_88 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_RESERVED_89_88);
    }

//initial config body1602 end


//initial config body1603 begin
    if(CP_LANE3_PMA_REG_TX_RATE == "DIV4")
    {
        SC_PMA_CH_INT_RX_LANE3[91:90]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE3_PMA_REG_TX_RATE == "DIV2")
    {
        SC_PMA_CH_INT_RX_LANE3[91:90]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE3_PMA_REG_TX_RATE == "DIV1")
    {
        SC_PMA_CH_INT_RX_LANE3[91:90]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE3_PMA_REG_TX_RATE == "MUL2")
    {
        SC_PMA_CH_INT_RX_LANE3[91:90]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[91:90]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RATE is set to %s. Legal values is DIV4,DIV2,DIV1,MUL2",CP_LANE3_PMA_REG_TX_RATE);
    }

//initial config body1603 end


//initial config body1604 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_92 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[92]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_RESERVED_92 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[92]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[92]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_92 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RESERVED_92);
    }

//initial config body1604 end


//initial config body1605 begin
    if(CP_LANE3_PMA_REG_TX_RATE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[93]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RATE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[93]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[93]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RATE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RATE_EN);
    }

//initial config body1605 end


//initial config body1606 begin
    if(CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[94]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[94]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[94]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_RST_N);
    }

//initial config body1606 end


//initial config body1607 begin
    if(CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[95]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[95]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[95]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN);
    }

//initial config body1607 end


//initial config body1608 begin
    if(CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[96]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[96]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[96]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_EN);
    }

//initial config body1608 end


//initial config body1609 begin
    if(CP_LANE3_PMA_REG_TXCLK_SEL == "PLL")
    {
        SC_PMA_CH_INT_RX_LANE3[97]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TXCLK_SEL == "RXCLK")
    {
        SC_PMA_CH_INT_RX_LANE3[97]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[97]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TXCLK_SEL is set to %s. Legal values is PLL,RXCLK",CP_LANE3_PMA_REG_TXCLK_SEL);
    }

//initial config body1609 end


//initial config body1610 begin
    if(CP_LANE3_PMA_REG_RX_DATA_POLARITY == "NORMAL")
    {
        SC_PMA_CH_INT_RX_LANE3[98]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_DATA_POLARITY == "REVERSE")
    {
        SC_PMA_CH_INT_RX_LANE3[98]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[98]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_DATA_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_LANE3_PMA_REG_RX_DATA_POLARITY);
    }

//initial config body1610 end


//initial config body1611 begin
    if(CP_LANE3_PMA_REG_RX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[99]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[99]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[99]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_ERR_INSERT is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_ERR_INSERT);
    }

//initial config body1611 end


//initial config body1612 begin
    if(CP_LANE3_PMA_REG_UDP_CHK_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[100]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_UDP_CHK_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[100]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[100]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_UDP_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_UDP_CHK_EN);
    }

//initial config body1612 end


//initial config body1613 begin
    if(CP_LANE3_PMA_REG_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH_INT_RX_LANE3[102:101]  :=  2'b00;
    }
    else if (CP_LANE3_PMA_REG_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH_INT_RX_LANE3[102:101]  :=  2'b01;
    }
    else if (CP_LANE3_PMA_REG_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH_INT_RX_LANE3[102:101]  :=  2'b10;
    }
    else if (CP_LANE3_PMA_REG_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH_INT_RX_LANE3[102:101]  :=  2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[102:101]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PMA_REG_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_LANE3_PMA_REG_PRBS_SEL);
    }

//initial config body1613 end


//initial config body1614 begin
    if(CP_LANE3_PMA_REG_PRBS_CHK_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[103]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_PRBS_CHK_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[103]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[103]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_PRBS_CHK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_PRBS_CHK_EN);
    }

//initial config body1614 end


//initial config body1615 begin
    if(CP_LANE3_PMA_REG_PRBS_CHK_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH_INT_RX_LANE3[105:104]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE3_PMA_REG_PRBS_CHK_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH_INT_RX_LANE3[105:104]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE3_PMA_REG_PRBS_CHK_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH_INT_RX_LANE3[105:104]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE3_PMA_REG_PRBS_CHK_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH_INT_RX_LANE3[105:104]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[105:104]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE3_PMA_REG_PRBS_CHK_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE3_PMA_REG_PRBS_CHK_WIDTH_SEL);
    }

//initial config body1615 end


//initial config body1616 begin
    if(CP_LANE3_PMA_REG_BIST_CHK_PAT_SEL == "PRBS")
    {
        SC_PMA_CH_INT_RX_LANE3[106]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_BIST_CHK_PAT_SEL == "CONSTANT")
    {
        SC_PMA_CH_INT_RX_LANE3[106]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[106]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_BIST_CHK_PAT_SEL is set to %s. Legal values is PRBS,CONSTANT",CP_LANE3_PMA_REG_BIST_CHK_PAT_SEL);
    }

//initial config body1616 end


//initial config body1617 begin
    if(CP_LANE3_PMA_REG_LOAD_ERR_CNT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[107]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_LOAD_ERR_CNT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[107]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[107]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_LOAD_ERR_CNT is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_LOAD_ERR_CNT);
    }

//initial config body1617 end


//initial config body1618 begin
    if(CP_LANE3_PMA_REG_CHK_COUNTER_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[108]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CHK_COUNTER_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[108]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[108]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CHK_COUNTER_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CHK_COUNTER_EN);
    }

//initial config body1618 end


//initial config body1619 begin
    if(CP_LANE3_PMA_REG_CDR_PROP_GAIN >= 0 && CP_LANE3_PMA_REG_CDR_PROP_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE3[111:109]   :=  to_unsigned( CP_LANE3_PMA_REG_CDR_PROP_GAIN, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[111:109]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_PROP_GAIN is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_REG_CDR_PROP_GAIN);
    }

//initial config body1619 end


//initial config body1620 begin
    if(CP_LANE3_PMA_REG_CDR_PROP_TURBO_GAIN >= 0 && CP_LANE3_PMA_REG_CDR_PROP_TURBO_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE3[114:112]   :=  to_unsigned( CP_LANE3_PMA_REG_CDR_PROP_TURBO_GAIN, 3) ^ 3'b110;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[114:112]   :=  to_unsigned( 0, 3) ^ 3'b110;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_PROP_TURBO_GAIN is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_REG_CDR_PROP_TURBO_GAIN);
    }

//initial config body1620 end


//initial config body1621 begin
    if(CP_LANE3_PMA_REG_CDR_INT_GAIN >= 0 && CP_LANE3_PMA_REG_CDR_INT_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE3[117:115]   :=  to_unsigned( CP_LANE3_PMA_REG_CDR_INT_GAIN, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[117:115]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_INT_GAIN is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_REG_CDR_INT_GAIN);
    }

//initial config body1621 end


//initial config body1622 begin
    if(CP_LANE3_PMA_REG_CDR_INT_TURBO_GAIN >= 0 && CP_LANE3_PMA_REG_CDR_INT_TURBO_GAIN <= 7)
    {
        SC_PMA_CH_INT_RX_LANE3[120:118]   :=  to_unsigned( CP_LANE3_PMA_REG_CDR_INT_TURBO_GAIN, 3) ^ 3'b110;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[120:118]   :=  to_unsigned( 0, 3) ^ 3'b110;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_INT_TURBO_GAIN is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_REG_CDR_INT_TURBO_GAIN);
    }

//initial config body1622 end


//initial config body1623 begin
    if(CP_LANE3_PMA_REG_CDR_INT_SAT_MAX >= 0 && CP_LANE3_PMA_REG_CDR_INT_SAT_MAX <= 1023)
    {
        SC_PMA_CH_INT_RX_LANE3[130:121]   :=  to_unsigned( CP_LANE3_PMA_REG_CDR_INT_SAT_MAX, 10) ^ 10'b1111100000;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[130:121]   :=  to_unsigned( 0, 10) ^ 10'b1111100000;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_INT_SAT_MAX is set to %d. Legal values is 0 to 1023",CP_LANE3_PMA_REG_CDR_INT_SAT_MAX);
    }

//initial config body1623 end


//initial config body1624 begin
    if(CP_LANE3_PMA_REG_CDR_INT_SAT_MIN >= 0 && CP_LANE3_PMA_REG_CDR_INT_SAT_MIN <= 1023)
    {
        SC_PMA_CH_INT_RX_LANE3[140:131]   :=  to_unsigned( CP_LANE3_PMA_REG_CDR_INT_SAT_MIN, 10) ^ 10'b0000100000;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[140:131]   :=  to_unsigned( 0, 10) ^ 10'b0000100000;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_INT_SAT_MIN is set to %d. Legal values is 0 to 1023",CP_LANE3_PMA_REG_CDR_INT_SAT_MIN);
    }

//initial config body1624 end


//initial config body1625 begin
    if(CP_LANE3_PMA_REG_CDR_INT_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[141]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_INT_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[141]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[141]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_INT_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_INT_RST);
    }

//initial config body1625 end


//initial config body1626 begin
    if(CP_LANE3_PMA_REG_CDR_INT_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[142]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_INT_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[142]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[142]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_INT_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_INT_RST_OW);
    }

//initial config body1626 end


//initial config body1627 begin
    if(CP_LANE3_PMA_REG_CDR_PROP_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[143]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_PROP_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[143]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[143]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_PROP_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_PROP_RST);
    }

//initial config body1627 end


//initial config body1628 begin
    if(CP_LANE3_PMA_REG_CDR_PROP_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[144]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_PROP_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[144]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[144]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_PROP_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_PROP_RST_OW);
    }

//initial config body1628 end


//initial config body1629 begin
    if(CP_LANE3_PMA_REG_CDR_LOCK_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[145]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_LOCK_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[145]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[145]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_LOCK_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_LOCK_RST);
    }

//initial config body1629 end


//initial config body1630 begin
    if(CP_LANE3_PMA_REG_CDR_LOCK_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[146]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_LOCK_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[146]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[146]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_LOCK_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_LOCK_RST_OW);
    }

//initial config body1630 end


//initial config body1631 begin
    if(CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_SEL == 0)
    {
        SC_PMA_CH_INT_RX_LANE3[147]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_SEL == 1)
    {
        SC_PMA_CH_INT_RX_LANE3[147]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[147]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_SEL is set to %s. Legal values is 0,1",CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_SEL);
    }

//initial config body1631 end


//initial config body1632 begin
    if(CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_D >= 0 && CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_D <= 255)
    {
        SC_PMA_CH_INT_RX_LANE3[155:148]  :=  CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_D;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[155:148]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_D is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_D);
    }

//initial config body1632 end


//initial config body1633 begin
    if(CP_LANE3_PMA_REG_CDR_LOCK_TIMER == "0_8U")
    {
        SC_PMA_CH_INT_RX_LANE3[158:156]   :=  to_unsigned( 0, 3) ^ 3'b001;
    }
    else if (CP_LANE3_PMA_REG_CDR_LOCK_TIMER == "1_2U")
    {
        SC_PMA_CH_INT_RX_LANE3[158:156]   :=  to_unsigned( 1, 3) ^ 3'b001;
    }
    else if (CP_LANE3_PMA_REG_CDR_LOCK_TIMER == "1_6U")
    {
        SC_PMA_CH_INT_RX_LANE3[158:156]   :=  to_unsigned( 2, 3) ^ 3'b001;
    }
    else if (CP_LANE3_PMA_REG_CDR_LOCK_TIMER == "2_4U")
    {
        SC_PMA_CH_INT_RX_LANE3[158:156]   :=  to_unsigned( 3, 3) ^ 3'b001;
    }
    else if (CP_LANE3_PMA_REG_CDR_LOCK_TIMER == "3_2U")
    {
        SC_PMA_CH_INT_RX_LANE3[158:156]   :=  to_unsigned( 4, 3) ^ 3'b001;
    }
    else if (CP_LANE3_PMA_REG_CDR_LOCK_TIMER == "4_8U")
    {
        SC_PMA_CH_INT_RX_LANE3[158:156]   :=  to_unsigned( 5, 3) ^ 3'b001;
    }
    else if (CP_LANE3_PMA_REG_CDR_LOCK_TIMER == "12_8U")
    {
        SC_PMA_CH_INT_RX_LANE3[158:156]   :=  to_unsigned( 6, 3) ^ 3'b001;
    }
    else if (CP_LANE3_PMA_REG_CDR_LOCK_TIMER == "25_6U")
    {
        SC_PMA_CH_INT_RX_LANE3[158:156]   :=  to_unsigned( 7, 3) ^ 3'b001;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[158:156]   :=  to_unsigned( 0, 3) ^ 3'b001;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_LOCK_TIMER is set to %s. Legal values is 0_8U,1_2U,1_6U,2_4U,3_2U,4_8U,12_8U,25_6U",CP_LANE3_PMA_REG_CDR_LOCK_TIMER);
    }

//initial config body1633 end


//initial config body1634 begin
    if(CP_LANE3_PMA_REG_CDR_TURBO_MODE_TIMER == 0)
    {
        SC_PMA_CH_INT_RX_LANE3[160:159]   :=  to_unsigned( 0, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_CDR_TURBO_MODE_TIMER == 1)
    {
        SC_PMA_CH_INT_RX_LANE3[160:159]   :=  to_unsigned( 1, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_CDR_TURBO_MODE_TIMER == 2)
    {
        SC_PMA_CH_INT_RX_LANE3[160:159]   :=  to_unsigned( 2, 2) ^ 2'b01;
    }
    else if (CP_LANE3_PMA_REG_CDR_TURBO_MODE_TIMER == 3)
    {
        SC_PMA_CH_INT_RX_LANE3[160:159]   :=  to_unsigned( 3, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[160:159]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_TURBO_MODE_TIMER is set to %s. Legal values is 0,1,2,3",CP_LANE3_PMA_REG_CDR_TURBO_MODE_TIMER);
    }

//initial config body1634 end


//initial config body1635 begin
    if(CP_LANE3_PMA_REG_CDR_LOCK_VAL == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[161]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_LOCK_VAL == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[161]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[161]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_LOCK_VAL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_LOCK_VAL);
    }

//initial config body1635 end


//initial config body1636 begin
    if(CP_LANE3_PMA_REG_CDR_LOCK_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[162]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_LOCK_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[162]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[162]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_LOCK_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_LOCK_OW);
    }

//initial config body1636 end


//initial config body1637 begin
    if(CP_LANE3_PMA_REG_CDR_INT_SAT_DET_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[163]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_CDR_INT_SAT_DET_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[163]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[163]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_INT_SAT_DET_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_INT_SAT_DET_EN);
    }

//initial config body1637 end


//initial config body1638 begin
    if(CP_LANE3_PMA_REG_CDR_SAT_AUTO_DIS == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[164]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_SAT_AUTO_DIS == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[164]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[164]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_SAT_AUTO_DIS is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_SAT_AUTO_DIS);
    }

//initial config body1638 end


//initial config body1639 begin
    if(CP_LANE3_PMA_REG_CDR_GAIN_AUTO == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[165]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_GAIN_AUTO == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[165]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[165]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_GAIN_AUTO is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_GAIN_AUTO);
    }

//initial config body1639 end


//initial config body1640 begin
    if(CP_LANE3_PMA_REG_CDR_TURBO_GAIN_AUTO == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[166]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_TURBO_GAIN_AUTO == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[166]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[166]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_TURBO_GAIN_AUTO is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_TURBO_GAIN_AUTO);
    }

//initial config body1640 end


//initial config body1641 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_171_167 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_171_167 <= 31)
    {
        SC_PMA_CH_INT_RX_LANE3[171:167]  :=  CP_LANE3_PMA_REG_RX_RESERVED_171_167;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[171:167]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_171_167 is set to %d. Legal values is 0 to 31",CP_LANE3_PMA_REG_RX_RESERVED_171_167);
    }

//initial config body1641 end


//initial config body1642 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_175_172 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_175_172 <= 15)
    {
        SC_PMA_CH_INT_RX_LANE3[175:172]  :=  CP_LANE3_PMA_REG_RX_RESERVED_175_172;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[175:172]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_175_172 is set to %d. Legal values is 0 to 15",CP_LANE3_PMA_REG_RX_RESERVED_175_172);
    }

//initial config body1642 end


//initial config body1643 begin
    if(CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[176]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[176]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[176]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_EN);
    }

//initial config body1643 end


//initial config body1644 begin
    if(CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[177]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[177]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[177]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN);
    }

//initial config body1644 end


//initial config body1645 begin
    if(CP_LANE3_PMA_REG_CDR_PI_CTRL_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[178]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_PI_CTRL_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[178]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[178]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_PI_CTRL_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_PI_CTRL_RST);
    }

//initial config body1645 end


//initial config body1646 begin
    if(CP_LANE3_PMA_REG_CDR_PI_CTRL_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[179]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_PI_CTRL_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[179]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[179]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_PI_CTRL_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_PI_CTRL_RST_OW);
    }

//initial config body1646 end


//initial config body1647 begin
    if(CP_LANE3_PMA_REG_CDR_SAT_DET_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[180]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_SAT_DET_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[180]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[180]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_SAT_DET_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_SAT_DET_RST);
    }

//initial config body1647 end


//initial config body1648 begin
    if(CP_LANE3_PMA_REG_CDR_SAT_DET_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[181]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_SAT_DET_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[181]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[181]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_SAT_DET_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_SAT_DET_RST_OW);
    }

//initial config body1648 end


//initial config body1649 begin
    if(CP_LANE3_PMA_REG_CDR_SAT_DET_STICKY_RST == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[182]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_SAT_DET_STICKY_RST == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[182]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[182]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_SAT_DET_STICKY_RST is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_SAT_DET_STICKY_RST);
    }

//initial config body1649 end


//initial config body1650 begin
    if(CP_LANE3_PMA_REG_CDR_SAT_DET_STICKY_RST_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[183]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_SAT_DET_STICKY_RST_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[183]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[183]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_SAT_DET_STICKY_RST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_SAT_DET_STICKY_RST_OW);
    }

//initial config body1650 end


//initial config body1651 begin
    if(CP_LANE3_PMA_REG_CDR_SIGDET_STATUS_DIS == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[184]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_SIGDET_STATUS_DIS == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[184]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[184]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_SIGDET_STATUS_DIS is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_SIGDET_STATUS_DIS);
    }

//initial config body1651 end


//initial config body1652 begin
    if(CP_LANE3_PMA_REG_CDR_SAT_DET_TIMER == 0)
    {
        SC_PMA_CH_INT_RX_LANE3[186:185]   :=  to_unsigned( 0, 2) ^ 2'b10;
    }
    else if (CP_LANE3_PMA_REG_CDR_SAT_DET_TIMER == 1)
    {
        SC_PMA_CH_INT_RX_LANE3[186:185]   :=  to_unsigned( 1, 2) ^ 2'b10;
    }
    else if (CP_LANE3_PMA_REG_CDR_SAT_DET_TIMER == 2)
    {
        SC_PMA_CH_INT_RX_LANE3[186:185]   :=  to_unsigned( 2, 2) ^ 2'b10;
    }
    else if (CP_LANE3_PMA_REG_CDR_SAT_DET_TIMER == 3)
    {
        SC_PMA_CH_INT_RX_LANE3[186:185]   :=  to_unsigned( 3, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[186:185]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_SAT_DET_TIMER is set to %s. Legal values is 0,1,2,3",CP_LANE3_PMA_REG_CDR_SAT_DET_TIMER);
    }

//initial config body1652 end


//initial config body1653 begin
    if(CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_VAL == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[187]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_VAL == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[187]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[187]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_VAL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_VAL);
    }

//initial config body1653 end


//initial config body1654 begin
    if(CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[188]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[188]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[188]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_OW);
    }

//initial config body1654 end


//initial config body1655 begin
    if(CP_LANE3_PMA_REG_CDR_TURBO_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[189]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_CDR_TURBO_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[189]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[189]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_TURBO_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_TURBO_MODE_EN);
    }

//initial config body1655 end


//initial config body1656 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_190 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[190]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_RESERVED_190 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[190]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[190]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_190 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RESERVED_190);
    }

//initial config body1656 end


//initial config body1657 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_193_191 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_193_191 <= 7)
    {
        SC_PMA_CH_INT_RX_LANE3[193:191]  :=  CP_LANE3_PMA_REG_RX_RESERVED_193_191;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[193:191]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_193_191 is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_REG_RX_RESERVED_193_191);
    }

//initial config body1657 end


//initial config body1658 begin
    if(CP_LANE3_PMA_REG_CDR_STATUS_FIFO_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[194]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_CDR_STATUS_FIFO_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[194]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[194]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_CDR_STATUS_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CDR_STATUS_FIFO_EN);
    }

//initial config body1658 end


//initial config body1659 begin
    if(CP_LANE3_PMA_REG_PMA_TEST_SEL == 0)
    {
        SC_PMA_CH_INT_RX_LANE3[197:195]  :=  3'b000;
    }
    else if (CP_LANE3_PMA_REG_PMA_TEST_SEL == 1)
    {
        SC_PMA_CH_INT_RX_LANE3[197:195]  :=  3'b001;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[197:195]  :=  3'b000;
        error("Setting Error : The CP_LANE3_PMA_REG_PMA_TEST_SEL is set to %s. Legal values is 0,1",CP_LANE3_PMA_REG_PMA_TEST_SEL);
    }

//initial config body1659 end


//initial config body1660 begin
    if(CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MIN >= 0 && CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MIN <= 63)
    {
        SC_PMA_CH_INT_RX_LANE3[203:198]   :=  to_unsigned( CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MIN, 6) ^ 6'b000011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[203:198]   :=  to_unsigned( 0, 6) ^ 6'b000011;
        error("Setting Error : The CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MIN is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MIN);
    }

//initial config body1660 end


//initial config body1661 begin
    if(CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MAX >= 0 && CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MAX <= 63)
    {
        SC_PMA_CH_INT_RX_LANE3[209:204]   :=  to_unsigned( CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MAX, 6) ^ 6'b001011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[209:204]   :=  to_unsigned( 0, 6) ^ 6'b001011;
        error("Setting Error : The CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MAX is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MAX);
    }

//initial config body1661 end


//initial config body1662 begin
    if(CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MIN >= 0 && CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MIN <= 255)
    {
        SC_PMA_CH_INT_RX_LANE3[217:210]   :=  to_unsigned( CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MIN, 8) ^ 8'b00001111;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[217:210]   :=  to_unsigned( 0, 8) ^ 8'b00001111;
        error("Setting Error : The CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MIN is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MIN);
    }

//initial config body1662 end


//initial config body1663 begin
    if(CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MAX >= 0 && CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MAX <= 255)
    {
        SC_PMA_CH_INT_RX_LANE3[225:218]   :=  to_unsigned( CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MAX, 8) ^ 8'b00100011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[225:218]   :=  to_unsigned( 0, 8) ^ 8'b00100011;
        error("Setting Error : The CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MAX is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MAX);
    }

//initial config body1663 end


//initial config body1664 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_227_226 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_227_226 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE3[227:226]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_RESERVED_227_226, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[227:226]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_227_226 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_RESERVED_227_226);
    }

//initial config body1664 end


//initial config body1665 begin
    if(CP_LANE3_PMA_REG_COMWAKE_STATUS_CLEAR == 0)
    {
        SC_PMA_CH_INT_RX_LANE3[228]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_COMWAKE_STATUS_CLEAR == 1)
    {
        SC_PMA_CH_INT_RX_LANE3[228]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[228]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_COMWAKE_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_LANE3_PMA_REG_COMWAKE_STATUS_CLEAR);
    }

//initial config body1665 end


//initial config body1666 begin
    if(CP_LANE3_PMA_REG_COMINIT_STATUS_CLEAR == 0)
    {
        SC_PMA_CH_INT_RX_LANE3[229]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_COMINIT_STATUS_CLEAR == 1)
    {
        SC_PMA_CH_INT_RX_LANE3[229]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[229]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_COMINIT_STATUS_CLEAR is set to %s. Legal values is 0,1",CP_LANE3_PMA_REG_COMINIT_STATUS_CLEAR);
    }

//initial config body1666 end


//initial config body1667 begin
    if(CP_LANE3_PMA_REG_RX_SYNC_RST_N_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[230]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SYNC_RST_N_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[230]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[230]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SYNC_RST_N_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SYNC_RST_N_EN);
    }

//initial config body1667 end


//initial config body1668 begin
    if(CP_LANE3_PMA_REG_RX_SYNC_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[231]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_RX_SYNC_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[231]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[231]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SYNC_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SYNC_RST_N);
    }

//initial config body1668 end


//initial config body1669 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_233_232 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_233_232 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE3[233:232]  :=  CP_LANE3_PMA_REG_RX_RESERVED_233_232;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[233:232]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_233_232 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_RESERVED_233_232);
    }

//initial config body1669 end


//initial config body1670 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_235_234 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_235_234 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE3[235:234]  :=  CP_LANE3_PMA_REG_RX_RESERVED_235_234;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[235:234]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_235_234 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_RESERVED_235_234);
    }

//initial config body1670 end


//initial config body1671 begin
    if(CP_LANE3_PMA_REG_RX_SATA_COMINIT_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[236]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SATA_COMINIT_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[236]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[236]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SATA_COMINIT_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SATA_COMINIT_OW);
    }

//initial config body1671 end


//initial config body1672 begin
    if(CP_LANE3_PMA_REG_RX_SATA_COMINIT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[237]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SATA_COMINIT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[237]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[237]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SATA_COMINIT is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SATA_COMINIT);
    }

//initial config body1672 end


//initial config body1673 begin
    if(CP_LANE3_PMA_REG_RX_SATA_COMWAKE_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[238]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SATA_COMWAKE_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[238]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[238]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SATA_COMWAKE_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SATA_COMWAKE_OW);
    }

//initial config body1673 end


//initial config body1674 begin
    if(CP_LANE3_PMA_REG_RX_SATA_COMWAKE == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[239]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SATA_COMWAKE == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[239]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[239]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SATA_COMWAKE is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SATA_COMWAKE);
    }

//initial config body1674 end


//initial config body1675 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_241_240 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_241_240 <= 3)
    {
        SC_PMA_CH_INT_RX_LANE3[241:240]  :=  CP_LANE3_PMA_REG_RX_RESERVED_241_240;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[241:240]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_241_240 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_RESERVED_241_240);
    }

//initial config body1675 end


//initial config body1676 begin
    if(CP_LANE3_PMA_REG_RX_DCC_DISABLE == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[242]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_DCC_DISABLE == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[242]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[242]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_DCC_DISABLE is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_DCC_DISABLE);
    }

//initial config body1676 end


//initial config body1677 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_243 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[243]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_RESERVED_243 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[243]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[243]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_243 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RESERVED_243);
    }

//initial config body1677 end


//initial config body1678 begin
    if(CP_LANE3_PMA_REG_RX_SLIP_SEL_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[244]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SLIP_SEL_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[244]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[244]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SLIP_SEL_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SLIP_SEL_EN);
    }

//initial config body1678 end


//initial config body1679 begin
    if(CP_LANE3_PMA_REG_RX_SLIP_SEL >= 0 && CP_LANE3_PMA_REG_RX_SLIP_SEL <= 15)
    {
        SC_PMA_CH_INT_RX_LANE3[248:245]  :=  CP_LANE3_PMA_REG_RX_SLIP_SEL;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[248:245]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SLIP_SEL is set to %d. Legal values is 0 to 15",CP_LANE3_PMA_REG_RX_SLIP_SEL);
    }

//initial config body1679 end


//initial config body1680 begin
    if(CP_LANE3_PMA_REG_RX_SLIP_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[249]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SLIP_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[249]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[249]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SLIP_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SLIP_EN);
    }

//initial config body1680 end


//initial config body1681 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_STATUS_SEL >= 0 && CP_LANE3_PMA_REG_RX_SIGDET_STATUS_SEL <= 7)
    {
        SC_PMA_CH_INT_RX_LANE3[252:250]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_SIGDET_STATUS_SEL, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[252:250]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_STATUS_SEL is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_REG_RX_SIGDET_STATUS_SEL);
    }

//initial config body1681 end


//initial config body1682 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_FSM_RST_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[253]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_FSM_RST_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[253]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[253]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_FSM_RST_N is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SIGDET_FSM_RST_N);
    }

//initial config body1682 end


//initial config body1683 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_254 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[254]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_RESERVED_254 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[254]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[254]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_254 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RESERVED_254);
    }

//initial config body1683 end


//initial config body1684 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_STATUS == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[255]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_STATUS == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[255]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[255]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_STATUS is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SIGDET_STATUS);
    }

//initial config body1684 end


//initial config body1685 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_VTH == "9MV")
    {
        SC_PMA_CH_INT_RX_LANE3[259:256]   :=  to_unsigned( 0, 4) ^ 4'b0010;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_VTH == "18MV")
    {
        SC_PMA_CH_INT_RX_LANE3[259:256]   :=  to_unsigned( 1, 4) ^ 4'b0010;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_VTH == "27MV")
    {
        SC_PMA_CH_INT_RX_LANE3[259:256]   :=  to_unsigned( 2, 4) ^ 4'b0010;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_VTH == "36MV")
    {
        SC_PMA_CH_INT_RX_LANE3[259:256]   :=  to_unsigned( 3, 4) ^ 4'b0010;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_VTH == "45MV")
    {
        SC_PMA_CH_INT_RX_LANE3[259:256]   :=  to_unsigned( 4, 4) ^ 4'b0010;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_VTH == "54MV")
    {
        SC_PMA_CH_INT_RX_LANE3[259:256]   :=  to_unsigned( 5, 4) ^ 4'b0010;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_VTH == "63MV")
    {
        SC_PMA_CH_INT_RX_LANE3[259:256]   :=  to_unsigned( 6, 4) ^ 4'b0010;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_VTH == "72MV")
    {
        SC_PMA_CH_INT_RX_LANE3[259:256]   :=  to_unsigned( 7, 4) ^ 4'b0010;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[259:256]   :=  to_unsigned( 0, 4) ^ 4'b0010;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_VTH is set to %s. Legal values is 9MV,18MV,27MV,36MV,45MV,54MV,63MV,72MV",CP_LANE3_PMA_REG_RX_SIGDET_VTH);
    }

//initial config body1685 end


//initial config body1686 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_GRM == 0)
    {
        SC_PMA_CH_INT_RX_LANE3[261:260]  :=  2'b00;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_GRM == 1)
    {
        SC_PMA_CH_INT_RX_LANE3[261:260]  :=  2'b01;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_GRM == 2)
    {
        SC_PMA_CH_INT_RX_LANE3[261:260]  :=  2'b10;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_GRM == 3)
    {
        SC_PMA_CH_INT_RX_LANE3[261:260]  :=  2'b11;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[261:260]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_GRM is set to %s. Legal values is 0,1,2,3",CP_LANE3_PMA_REG_RX_SIGDET_GRM);
    }

//initial config body1686 end


//initial config body1687 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_PULSE_EXT == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[262]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_PULSE_EXT == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[262]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[262]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_PULSE_EXT is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SIGDET_PULSE_EXT);
    }

//initial config body1687 end


//initial config body1688 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_CH2_SEL == 0)
    {
        SC_PMA_CH_INT_RX_LANE3[263]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_CH2_SEL == 1)
    {
        SC_PMA_CH_INT_RX_LANE3[263]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[263]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_CH2_SEL is set to %s. Legal values is 0,1",CP_LANE3_PMA_REG_RX_SIGDET_CH2_SEL);
    }

//initial config body1688 end


//initial config body1689 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW >= 0 && CP_LANE3_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW <= 31)
    {
        SC_PMA_CH_INT_RX_LANE3[268:264]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW, 5) ^ 5'b00011;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[268:264]   :=  to_unsigned( 0, 5) ^ 5'b00011;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW is set to %d. Legal values is 0 to 31",CP_LANE3_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW);
    }

//initial config body1689 end


//initial config body1690 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_CHK_WINDOW_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[269]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_RX_SIGDET_CHK_WINDOW_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[269]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[269]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_CHK_WINDOW_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_SIGDET_CHK_WINDOW_EN);
    }

//initial config body1690 end


//initial config body1691 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING >= 0 && CP_LANE3_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING <= 7)
    {
        SC_PMA_CH_INT_RX_LANE3[272:270]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING, 3) ^ 3'b100;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[272:270]   :=  to_unsigned( 0, 3) ^ 3'b100;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING);
    }

//initial config body1691 end


//initial config body1692 begin
    if(CP_LANE3_PMA_REG_SLIP_FIFO_INV_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[273]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_SLIP_FIFO_INV_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[273]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[273]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_SLIP_FIFO_INV_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_SLIP_FIFO_INV_EN);
    }

//initial config body1692 end


//initial config body1693 begin
    if(CP_LANE3_PMA_REG_SLIP_FIFO_INV == "POS_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE3[274]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_SLIP_FIFO_INV == "NEG_EDGE")
    {
        SC_PMA_CH_INT_RX_LANE3[274]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[274]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_SLIP_FIFO_INV is set to %s. Legal values is POS_EDGE,NEG_EDGE",CP_LANE3_PMA_REG_SLIP_FIFO_INV);
    }

//initial config body1693 end


//initial config body1694 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL >= 0 && CP_LANE3_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL <= 31)
    {
        SC_PMA_CH_INT_RX_LANE3[279:275]  :=  CP_LANE3_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[279:275]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL is set to %d. Legal values is 0 to 31",CP_LANE3_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL);
    }

//initial config body1694 end


//initial config body1695 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_4OOB_DET_SEL >= 0 && CP_LANE3_PMA_REG_RX_SIGDET_4OOB_DET_SEL <= 7)
    {
        SC_PMA_CH_INT_RX_LANE3[282:280]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_SIGDET_4OOB_DET_SEL, 3) ^ 3'b111;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[282:280]   :=  to_unsigned( 0, 3) ^ 3'b111;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_4OOB_DET_SEL is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_REG_RX_SIGDET_4OOB_DET_SEL);
    }

//initial config body1695 end


//initial config body1696 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_285_283 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_285_283 <= 7)
    {
        SC_PMA_CH_INT_RX_LANE3[285:283]  :=  CP_LANE3_PMA_REG_RX_RESERVED_285_283;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[285:283]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_285_283 is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_REG_RX_RESERVED_285_283);
    }

//initial config body1696 end


//initial config body1697 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_286 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[286]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_RESERVED_286 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[286]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[286]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_286 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RESERVED_286);
    }

//initial config body1697 end


//initial config body1698 begin
    if(CP_LANE3_PMA_REG_RX_SIGDET_IC_I >= 0 && CP_LANE3_PMA_REG_RX_SIGDET_IC_I <= 15)
    {
        SC_PMA_CH_INT_RX_LANE3[290:287]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_SIGDET_IC_I, 4) ^ 4'b1010;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[290:287]   :=  to_unsigned( 0, 4) ^ 4'b1010;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_SIGDET_IC_I is set to %d. Legal values is 0 to 15",CP_LANE3_PMA_REG_RX_SIGDET_IC_I);
    }

//initial config body1698 end


//initial config body1699 begin
    if(CP_LANE3_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[291]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[291]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[291]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW);
    }

//initial config body1699 end


//initial config body1700 begin
    if(CP_LANE3_PMA_REG_RX_OOB_DETECTOR_RESET_N == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[292]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_OOB_DETECTOR_RESET_N == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[292]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[292]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_OOB_DETECTOR_RESET_N is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_OOB_DETECTOR_RESET_N);
    }

//initial config body1700 end


//initial config body1701 begin
    if(CP_LANE3_PMA_REG_RX_OOB_DETECTOR_PD_OW == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[293]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_OOB_DETECTOR_PD_OW == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[293]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[293]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_OOB_DETECTOR_PD_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_OOB_DETECTOR_PD_OW);
    }

//initial config body1701 end


//initial config body1702 begin
    if(CP_LANE3_PMA_REG_RX_OOB_DETECTOR_PD == "ON")
    {
        SC_PMA_CH_INT_RX_LANE3[294]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_OOB_DETECTOR_PD == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE3[294]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[294]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_OOB_DETECTOR_PD is set to %s. Legal values is ON,OFF",CP_LANE3_PMA_REG_RX_OOB_DETECTOR_PD);
    }

//initial config body1702 end


//initial config body1703 begin
    if(CP_LANE3_PMA_REG_RX_LS_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[295]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_LS_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[295]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[295]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_LS_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_LS_MODE_EN);
    }

//initial config body1703 end


//initial config body1704 begin

 if(CP_LANE3_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE3[296]  :=  1'b0; 
}
else if (CP_LANE3_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE3[296]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE3[296]  :=  1'b0; 
 error("Setting Error : The CP_LANE3_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE3_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE3[297]  :=  1'b0; 
}
else if (CP_LANE3_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE3[297]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE3[297]  :=  1'b0; 
 error("Setting Error : The CP_LANE3_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL);  
}

//initial config body1704 end


//initial config body1705 begin
    if(CP_LANE3_PMA_REG_RX_EQ1_R_SET_TOP >= 0 && CP_LANE3_PMA_REG_RX_EQ1_R_SET_TOP <= 3)
    {
        SC_PMA_CH_INT_RX_LANE3[299:298]  :=  CP_LANE3_PMA_REG_RX_EQ1_R_SET_TOP;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[299:298]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_EQ1_R_SET_TOP is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_EQ1_R_SET_TOP);
    }

//initial config body1705 end


//initial config body1706 begin
    if(CP_LANE3_PMA_REG_RX_EQ1_R_SET_FB >= 0 && CP_LANE3_PMA_REG_RX_EQ1_R_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE3[303:300]  :=  CP_LANE3_PMA_REG_RX_EQ1_R_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[303:300]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_EQ1_R_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE3_PMA_REG_RX_EQ1_R_SET_FB);
    }

//initial config body1706 end


//initial config body1707 begin
    if(CP_LANE3_PMA_REG_RX_EQ1_C_SET_FB >= 0 && CP_LANE3_PMA_REG_RX_EQ1_C_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE3[307:304]  :=  CP_LANE3_PMA_REG_RX_EQ1_C_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[307:304]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_EQ1_C_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE3_PMA_REG_RX_EQ1_C_SET_FB);
    }

//initial config body1707 end


//initial config body1708 begin
    if(CP_LANE3_PMA_REG_RX_EQ1_OFF == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[308]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_EQ1_OFF == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[308]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[308]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_EQ1_OFF is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_EQ1_OFF);
    }

//initial config body1708 end


//initial config body1709 begin
    if(CP_LANE3_PMA_REG_RX_EQ2_R_SET_TOP >= 0 && CP_LANE3_PMA_REG_RX_EQ2_R_SET_TOP <= 3)
    {
        SC_PMA_CH_INT_RX_LANE3[310:309]  :=  CP_LANE3_PMA_REG_RX_EQ2_R_SET_TOP;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[310:309]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_EQ2_R_SET_TOP is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_EQ2_R_SET_TOP);
    }

//initial config body1709 end


//initial config body1710 begin
    if(CP_LANE3_PMA_REG_RX_EQ2_R_SET_FB >= 0 && CP_LANE3_PMA_REG_RX_EQ2_R_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE3[314:311]  :=  CP_LANE3_PMA_REG_RX_EQ2_R_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[314:311]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_EQ2_R_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE3_PMA_REG_RX_EQ2_R_SET_FB);
    }

//initial config body1710 end


//initial config body1711 begin
    if(CP_LANE3_PMA_REG_RX_EQ2_C_SET_FB >= 0 && CP_LANE3_PMA_REG_RX_EQ2_C_SET_FB <= 15)
    {
        SC_PMA_CH_INT_RX_LANE3[318:315]  :=  CP_LANE3_PMA_REG_RX_EQ2_C_SET_FB;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[318:315]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_EQ2_C_SET_FB is set to %d. Legal values is 0 to 15",CP_LANE3_PMA_REG_RX_EQ2_C_SET_FB);
    }

//initial config body1711 end


//initial config body1712 begin
    if(CP_LANE3_PMA_REG_RX_EQ2_OFF == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[319]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_EQ2_OFF == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[319]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[319]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_EQ2_OFF is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_EQ2_OFF);
    }

//initial config body1712 end


//initial config body1713 begin
    if(CP_LANE3_PMA_REG_EQ_DAC >= 0 && CP_LANE3_PMA_REG_EQ_DAC <= 63)
    {
        SC_PMA_CH_INT_RX_LANE3[325:320]  :=  CP_LANE3_PMA_REG_EQ_DAC;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[325:320]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_EQ_DAC is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_EQ_DAC);
    }

//initial config body1713 end


//initial config body1714 begin
    if(CP_LANE3_PMA_REG_RX_ICTRL_EQ >= 0 && CP_LANE3_PMA_REG_RX_ICTRL_EQ <= 3)
    {
        SC_PMA_CH_INT_RX_LANE3[327:326]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_ICTRL_EQ, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[327:326]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_ICTRL_EQ is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_RX_ICTRL_EQ);
    }

//initial config body1714 end


//initial config body1715 begin
    if(CP_LANE3_PMA_REG_EQ_DC_CALIB_EN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[328]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_EQ_DC_CALIB_EN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[328]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[328]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_EQ_DC_CALIB_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_EQ_DC_CALIB_EN);
    }

//initial config body1715 end


//initial config body1716 begin
    if(CP_LANE3_PMA_REG_EQ_DC_CALIB_SEL == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[329]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_EQ_DC_CALIB_SEL == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[329]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[329]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_EQ_DC_CALIB_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_EQ_DC_CALIB_SEL);
    }

//initial config body1716 end


//initial config body1717 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_337_330 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_337_330 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE3[337:330]  :=  CP_LANE3_PMA_REG_RX_RESERVED_337_330;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[337:330]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_337_330 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_RX_RESERVED_337_330);
    }

//initial config body1717 end


//initial config body1718 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_345_338 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_345_338 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE3[345:338]  :=  CP_LANE3_PMA_REG_RX_RESERVED_345_338;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[345:338]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_345_338 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_RX_RESERVED_345_338);
    }

//initial config body1718 end


//initial config body1719 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_353_346 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_353_346 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE3[353:346]  :=  CP_LANE3_PMA_REG_RX_RESERVED_353_346;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[353:346]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_353_346 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_RX_RESERVED_353_346);
    }

//initial config body1719 end


//initial config body1720 begin
    if(CP_LANE3_PMA_REG_RX_RESERVED_361_354 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_361_354 <= 255)
    {
        SC_PMA_CH_INT_RX_LANE3[361:354]  :=  CP_LANE3_PMA_REG_RX_RESERVED_361_354;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[361:354]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_361_354 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_RX_RESERVED_361_354);
    }

//initial config body1720 end


//initial config body1721 begin

 if(CP_LANE3_PMA_CTLE_CTRL_REG_I >= 0 && CP_LANE3_PMA_CTLE_CTRL_REG_I <= 15) 
 {
 SC_PMA_CH_INT_RX_LANE3[365:362]  :=  CP_LANE3_PMA_CTLE_CTRL_REG_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE3[365:362]  :=  0; 
 error("Setting Error : The CP_LANE3_PMA_CTLE_CTRL_REG_I is set to %d. Legal values is 0 to 15",CP_LANE3_PMA_CTLE_CTRL_REG_I); 
}
//}

 //initial//Altered  
 //{
 if(CP_LANE3_PMA_CTLE_REG_FORCE_SEL_I == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE3[366]  :=  1'b0; 
}
else if (CP_LANE3_PMA_CTLE_REG_FORCE_SEL_I == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE3[366]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE3[366]  :=  1'b0; 
 error("Setting Error : The CP_LANE3_PMA_CTLE_REG_FORCE_SEL_I is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_CTLE_REG_FORCE_SEL_I);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE3_PMA_CTLE_REG_HOLD_I == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE3[367]  :=  1'b0; 
}
else if (CP_LANE3_PMA_CTLE_REG_HOLD_I == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE3[367]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE3[367]  :=  1'b0; 
 error("Setting Error : The CP_LANE3_PMA_CTLE_REG_HOLD_I is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_CTLE_REG_HOLD_I);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE3_PMA_CTLE_REG_INIT_DAC_I >= 0 && CP_LANE3_PMA_CTLE_REG_INIT_DAC_I <= 15) 
 {
 SC_PMA_CH_INT_RX_LANE3[371:368]  :=  CP_LANE3_PMA_CTLE_REG_INIT_DAC_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE3[371:368]  :=  0; 
 error("Setting Error : The CP_LANE3_PMA_CTLE_REG_INIT_DAC_I is set to %d. Legal values is 0 to 15",CP_LANE3_PMA_CTLE_REG_INIT_DAC_I); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE3_PMA_CTLE_REG_POLARITY_I == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE3[372]  :=  1'b0; 
}
else if (CP_LANE3_PMA_CTLE_REG_POLARITY_I == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE3[372]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE3[372]  :=  1'b0; 
 error("Setting Error : The CP_LANE3_PMA_CTLE_REG_POLARITY_I is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_CTLE_REG_POLARITY_I);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE3_PMA_CTLE_REG_SHIFTER_GAIN_I >= 0 && CP_LANE3_PMA_CTLE_REG_SHIFTER_GAIN_I <= 7) 
 {
 SC_PMA_CH_INT_RX_LANE3[375:373]  :=  CP_LANE3_PMA_CTLE_REG_SHIFTER_GAIN_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE3[375:373]  :=  0; 
 error("Setting Error : The CP_LANE3_PMA_CTLE_REG_SHIFTER_GAIN_I is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_CTLE_REG_SHIFTER_GAIN_I); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE3_PMA_CTLE_REG_THRESHOLD_I >= 0 && CP_LANE3_PMA_CTLE_REG_THRESHOLD_I <= 4095) 
 {
 SC_PMA_CH_INT_RX_LANE3[387:376]  :=  CP_LANE3_PMA_CTLE_REG_THRESHOLD_I; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE3[387:376]  :=  0; 
 error("Setting Error : The  is set to %d. Legal values is 0 to 4095",CP_LANE3_PMA_CTLE_REG_THRESHOLD_I); 
}
//}

 //initial//Altered 
 //{
 if(CP_LANE3_PMA_REG_RX_RES_TRIM_EN == "FALSE") 
 {
 SC_PMA_CH_INT_RX_LANE3[388]  :=  1'b0; 
}
else if (CP_LANE3_PMA_REG_RX_RES_TRIM_EN == "TRUE") 
 {
 SC_PMA_CH_INT_RX_LANE3[388]  :=  1'b1; 
}
else 
 {
 SC_PMA_CH_INT_RX_LANE3[388]  :=  1'b0; 
 error("Setting Error : The CP_LANE3_PMA_REG_RX_RES_TRIM_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_RES_TRIM_EN);  
}
//}

 //initial//Altered 
 //{
 if(CP_LANE3_PMA_REG_RX_RESERVED_393_389 >= 0 && CP_LANE3_PMA_REG_RX_RESERVED_393_389 <= 31) 
 {
 SC_PMA_CH_INT_RX_LANE3[393:389]  :=  CP_LANE3_PMA_REG_RX_RESERVED_393_389; 
}
 else 
 {
 SC_PMA_CH_INT_RX_LANE3[393:389]  :=  0; 
 error("Setting Error : The CP_LANE3_PMA_REG_RX_RESERVED_393_389 is set to %d. Legal values is 0 to 31",CP_LANE3_PMA_REG_RX_RESERVED_393_389); 
}

//initial config body1721 end


//initial config body1722 begin
    if(CP_LANE3_PMA_CFG_RX_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH_INT_RX_LANE3[394]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_CFG_RX_LANE_POWERUP == "ON")
    {
        SC_PMA_CH_INT_RX_LANE3[394]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[394]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_CFG_RX_LANE_POWERUP is set to %s. Legal values is OFF,ON",CP_LANE3_PMA_CFG_RX_LANE_POWERUP);
    }

//initial config body1722 end


//initial config body1723 begin
    if(CP_LANE3_PMA_CFG_RX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[395]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_CFG_RX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[395]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[395]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_CFG_RX_PMA_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_CFG_RX_PMA_RSTN);
    }

//initial config body1723 end


//initial config body1724 begin
    if(CP_LANE3_PMA_INT_PMA_RX_MASK_0 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[396]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_INT_PMA_RX_MASK_0 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[396]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[396]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_INT_PMA_RX_MASK_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_INT_PMA_RX_MASK_0);
    }

//initial config body1724 end


//initial config body1725 begin
    if(CP_LANE3_PMA_INT_PMA_RX_CLR_0 == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[397]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_INT_PMA_RX_CLR_0 == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[397]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[397]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_INT_PMA_RX_CLR_0 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_INT_PMA_RX_CLR_0);
    }

//initial config body1725 end


//initial config body1726 begin
    if(CP_LANE3_PMA_CFG_CTLE_ADP_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_RX_LANE3[398]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_CFG_CTLE_ADP_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_RX_LANE3[398]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_RX_LANE3[398]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_CFG_CTLE_ADP_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_CFG_CTLE_ADP_RSTN);
    }

//initial config body1726 end


//initial config body1727 begin
    if(CP_LANE3_PMA_REG_TX_PD == "ON")
    {
        SC_PMA_CH_INT_TX_LANE3[0]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_PD == "OFF")
    {
        SC_PMA_CH_INT_TX_LANE3[0]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[0]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_PD is set to %s. Legal values is ON,OFF",CP_LANE3_PMA_REG_TX_PD);
    }

//initial config body1727 end


//initial config body1728 begin
    if(CP_LANE3_PMA_REG_TX_PD_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[1]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_TX_PD_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[1]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[1]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_PD_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_PD_OW);
    }

//initial config body1728 end


//initial config body1729 begin
    if(CP_LANE3_PMA_REG_TX_MAIN_PRE_Z == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[2]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_MAIN_PRE_Z == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[2]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[2]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_MAIN_PRE_Z is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_MAIN_PRE_Z);
    }

//initial config body1729 end


//initial config body1730 begin
    if(CP_LANE3_PMA_REG_TX_MAIN_PRE_Z_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[3]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_MAIN_PRE_Z_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[3]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[3]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_MAIN_PRE_Z_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_MAIN_PRE_Z_OW);
    }

//initial config body1730 end


//initial config body1731 begin
    if(CP_LANE3_PMA_REG_TX_BEACON_TIMER_SEL >= 0 && CP_LANE3_PMA_REG_TX_BEACON_TIMER_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE3[5:4]  :=  CP_LANE3_PMA_REG_TX_BEACON_TIMER_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[5:4]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_BEACON_TIMER_SEL is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_TX_BEACON_TIMER_SEL);
    }

//initial config body1731 end


//initial config body1732 begin
    if(CP_LANE3_PMA_REG_TX_RXDET_REQ_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[6]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RXDET_REQ_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[6]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[6]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RXDET_REQ_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RXDET_REQ_OW);
    }

//initial config body1732 end


//initial config body1733 begin
    if(CP_LANE3_PMA_REG_TX_RXDET_REQ == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[7]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RXDET_REQ == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[7]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[7]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RXDET_REQ is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RXDET_REQ);
    }

//initial config body1733 end


//initial config body1734 begin
    if(CP_LANE3_PMA_REG_TX_BEACON_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[8]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_BEACON_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[8]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[8]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_BEACON_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_BEACON_EN_OW);
    }

//initial config body1734 end


//initial config body1735 begin
    if(CP_LANE3_PMA_REG_TX_BEACON_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[9]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_BEACON_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[9]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[9]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_BEACON_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_BEACON_EN);
    }

//initial config body1735 end


//initial config body1736 begin
    if(CP_LANE3_PMA_REG_TX_EI_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[10]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_EI_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[10]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[10]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_EI_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_EI_EN_OW);
    }

//initial config body1736 end


//initial config body1737 begin
    if(CP_LANE3_PMA_REG_TX_EI_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[11]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_EI_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[11]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[11]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_EI_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_EI_EN);
    }

//initial config body1737 end


//initial config body1738 begin
    if(CP_LANE3_PMA_REG_TX_BIT_CONV == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[12]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_BIT_CONV == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[12]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[12]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_BIT_CONV is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_BIT_CONV);
    }

//initial config body1738 end


//initial config body1739 begin
    if(CP_LANE3_PMA_REG_TX_RES_CAL >= 0 && CP_LANE3_PMA_REG_TX_RES_CAL <= 63)
    {
        SC_PMA_CH_INT_TX_LANE3[18:13]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_RES_CAL, 6) ^ 6'b110010;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[18:13]   :=  to_unsigned( 0, 6) ^ 6'b110010;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RES_CAL is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_RES_CAL);
    }

//initial config body1739 end


//initial config body1740 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_19 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[19]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_19 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[19]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[19]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_19 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_19);
    }

//initial config body1740 end


//initial config body1741 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_25_20 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_25_20 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE3[25:20]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_RESERVED_25_20, 6) ^ 6'b100000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[25:20]   :=  to_unsigned( 0, 6) ^ 6'b100000;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_25_20 is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_RESERVED_25_20);
    }

//initial config body1741 end


//initial config body1742 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_33_26 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_33_26 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[33:26]  :=  CP_LANE3_PMA_REG_TX_RESERVED_33_26;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[33:26]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_33_26 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_RESERVED_33_26);
    }

//initial config body1742 end


//initial config body1743 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_41_34 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_41_34 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[41:34]  :=  CP_LANE3_PMA_REG_TX_RESERVED_41_34;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[41:34]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_41_34 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_RESERVED_41_34);
    }

//initial config body1743 end


//initial config body1744 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_49_42 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_49_42 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[49:42]  :=  CP_LANE3_PMA_REG_TX_RESERVED_49_42;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[49:42]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_49_42 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_RESERVED_49_42);
    }

//initial config body1744 end


//initial config body1745 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_57_50 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_57_50 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[57:50]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_RESERVED_57_50, 8) ^ 8'b01000000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[57:50]   :=  to_unsigned( 0, 8) ^ 8'b01000000;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_57_50 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_RESERVED_57_50);
    }

//initial config body1745 end


//initial config body1746 begin
    if(CP_LANE3_PMA_REG_TX_SYNC_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[58]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_SYNC_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[58]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[58]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_SYNC_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_SYNC_OW);
    }

//initial config body1746 end


//initial config body1747 begin
    if(CP_LANE3_PMA_REG_TX_SYNC == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[59]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_TX_SYNC == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[59]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[59]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_SYNC is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_SYNC);
    }

//initial config body1747 end


//initial config body1748 begin
    if(CP_LANE3_PMA_REG_TX_PD_POST == "ON")
    {
        SC_PMA_CH_INT_TX_LANE3[60]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_TX_PD_POST == "OFF")
    {
        SC_PMA_CH_INT_TX_LANE3[60]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[60]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_PD_POST is set to %s. Legal values is ON,OFF",CP_LANE3_PMA_REG_TX_PD_POST);
    }

//initial config body1748 end


//initial config body1749 begin
    if(CP_LANE3_PMA_REG_TX_PD_POST_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[61]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_TX_PD_POST_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[61]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[61]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_PD_POST_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_PD_POST_OW);
    }

//initial config body1749 end


//initial config body1750 begin
    if(CP_LANE3_PMA_REG_TX_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[62]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[62]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[62]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESET_N_OW);
    }

//initial config body1750 end


//initial config body1751 begin
    if(CP_LANE3_PMA_REG_TX_RESET_N == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[63]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_TX_RESET_N == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[63]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[63]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESET_N is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESET_N);
    }

//initial config body1751 end


//initial config body1752 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_64 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[64]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_64 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[64]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[64]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_64 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_64);
    }

//initial config body1752 end


//initial config body1753 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_65 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[65]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_65 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[65]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[65]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_65 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_65);
    }

//initial config body1753 end


//initial config body1754 begin
    if(CP_LANE3_PMA_REG_TX_BUSWIDTH_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[66]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_BUSWIDTH_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[66]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[66]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_BUSWIDTH_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_BUSWIDTH_OW);
    }

//initial config body1754 end


//initial config body1755 begin
    if(CP_LANE3_PMA_REG_TX_BUSWIDTH == "8BIT")
    {
        SC_PMA_CH_INT_TX_LANE3[69:67]   :=  to_unsigned( 0, 3) ^ 3'b011;
    }
    else if (CP_LANE3_PMA_REG_TX_BUSWIDTH == "10BIT")
    {
        SC_PMA_CH_INT_TX_LANE3[69:67]   :=  to_unsigned( 1, 3) ^ 3'b011;
    }
    else if (CP_LANE3_PMA_REG_TX_BUSWIDTH == "16BIT")
    {
        SC_PMA_CH_INT_TX_LANE3[69:67]   :=  to_unsigned( 2, 3) ^ 3'b011;
    }
    else if (CP_LANE3_PMA_REG_TX_BUSWIDTH == "20BIT")
    {
        SC_PMA_CH_INT_TX_LANE3[69:67]   :=  to_unsigned( 3, 3) ^ 3'b011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[69:67]   :=  to_unsigned( 0, 3) ^ 3'b011;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_BUSWIDTH is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE3_PMA_REG_TX_BUSWIDTH);
    }

//initial config body1755 end


//initial config body1756 begin
    if(CP_LANE3_PMA_REG_PLL_READY_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[70]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_PLL_READY_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[70]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[70]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_PLL_READY_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_PLL_READY_OW);
    }

//initial config body1756 end


//initial config body1757 begin
    if(CP_LANE3_PMA_REG_PLL_READY == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[71]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_PLL_READY == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[71]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[71]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_PLL_READY is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_PLL_READY);
    }

//initial config body1757 end


//initial config body1758 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_72 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[72]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_72 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[72]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[72]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_72 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_72);
    }

//initial config body1758 end


//initial config body1759 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_73 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[73]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_73 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[73]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[73]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_73 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_73);
    }

//initial config body1759 end


//initial config body1760 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_74 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[74]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_74 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[74]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[74]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_74 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_74);
    }

//initial config body1760 end


//initial config body1761 begin
    if(CP_LANE3_PMA_REG_EI_PCLK_DELAY_SEL >= 0 && CP_LANE3_PMA_REG_EI_PCLK_DELAY_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE3[76:75]  :=  CP_LANE3_PMA_REG_EI_PCLK_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[76:75]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_EI_PCLK_DELAY_SEL is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_EI_PCLK_DELAY_SEL);
    }

//initial config body1761 end


//initial config body1762 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_77 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[77]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_77 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[77]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[77]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_77 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_77);
    }

//initial config body1762 end


//initial config body1763 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_83_78 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_83_78 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE3[83:78]  :=  CP_LANE3_PMA_REG_TX_RESERVED_83_78;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[83:78]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_83_78 is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_RESERVED_83_78);
    }

//initial config body1763 end


//initial config body1764 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_89_84 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_89_84 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE3[89:84]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_RESERVED_89_84, 6) ^ 6'b010101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[89:84]   :=  to_unsigned( 0, 6) ^ 6'b010101;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_89_84 is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_RESERVED_89_84);
    }

//initial config body1764 end


//initial config body1765 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_95_90 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_95_90 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE3[95:90]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_RESERVED_95_90, 6) ^ 6'b100000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[95:90]   :=  to_unsigned( 0, 6) ^ 6'b100000;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_95_90 is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_RESERVED_95_90);
    }

//initial config body1765 end


//initial config body1766 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_101_96 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_101_96 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE3[101:96]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_RESERVED_101_96, 6) ^ 6'b111111;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[101:96]   :=  to_unsigned( 0, 6) ^ 6'b111111;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_101_96 is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_RESERVED_101_96);
    }

//initial config body1766 end


//initial config body1767 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_107_102 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_107_102 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE3[107:102]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_RESERVED_107_102, 6) ^ 6'b110101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[107:102]   :=  to_unsigned( 0, 6) ^ 6'b110101;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_107_102 is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_RESERVED_107_102);
    }

//initial config body1767 end


//initial config body1768 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_113_108 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_113_108 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE3[113:108]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_RESERVED_113_108, 6) ^ 6'b110000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[113:108]   :=  to_unsigned( 0, 6) ^ 6'b110000;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_113_108 is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_RESERVED_113_108);
    }

//initial config body1768 end


//initial config body1769 begin
    if(CP_LANE3_PMA_REG_TX_AMP_DAC0 >= 0 && CP_LANE3_PMA_REG_TX_AMP_DAC0 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE3[119:114]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_AMP_DAC0, 6) ^ 6'b011001;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[119:114]   :=  to_unsigned( 0, 6) ^ 6'b011001;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_AMP_DAC0 is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_AMP_DAC0);
    }

//initial config body1769 end


//initial config body1770 begin

 if(CP_LANE3_PMA_REG_TX_AMP_DAC1 >= 0 && CP_LANE3_PMA_REG_TX_AMP_DAC1 <= 63) 
 {
 SC_PMA_CH_INT_TX_LANE3[125:120]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_AMP_DAC1, 6) ^ 6'b010011; 
}
 else 
 {
 SC_PMA_CH_INT_TX_LANE3[125:120]   :=  to_unsigned( 0, 6) ^ 6'b010011; 
 error("Setting Error : The CP_LANE3_PMA_REG_TX_AMP_DAC1 is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_AMP_DAC1); 
}
//}

 //initial//Altered value 19 to 14
 //{
 if(CP_LANE3_PMA_REG_TX_AMP_DAC2 >= 0 && CP_LANE3_PMA_REG_TX_AMP_DAC2 <= 63) 
 {
 SC_PMA_CH_INT_TX_LANE3[131:126]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_AMP_DAC2, 6) ^ 6'b001110; 
}
 else 
 {
 SC_PMA_CH_INT_TX_LANE3[131:126]   :=  to_unsigned( 0, 6) ^ 6'b001110; 
 error("Setting Error : The CP_LANE3_PMA_REG_TX_AMP_DAC2 is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_AMP_DAC2); 
}

//initial config body1770 end


//initial config body1771 begin
    if(CP_LANE3_PMA_REG_TX_AMP_DAC3 >= 0 && CP_LANE3_PMA_REG_TX_AMP_DAC3 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE3[137:132]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_AMP_DAC3, 6) ^ 6'b001001;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[137:132]   :=  to_unsigned( 0, 6) ^ 6'b001001;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_AMP_DAC3 is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_AMP_DAC3);
    }

//initial config body1771 end


//initial config body1772 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_143_138 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_143_138 <= 63)
    {
        SC_PMA_CH_INT_TX_LANE3[143:138]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_RESERVED_143_138, 6) ^ 6'b000101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[143:138]   :=  to_unsigned( 0, 6) ^ 6'b000101;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_143_138 is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_RESERVED_143_138);
    }

//initial config body1772 end


//initial config body1773 begin
    if(CP_LANE3_PMA_REG_TX_MARGIN >= 0 && CP_LANE3_PMA_REG_TX_MARGIN <= 7)
    {
        SC_PMA_CH_INT_TX_LANE3[146:144]  :=  CP_LANE3_PMA_REG_TX_MARGIN;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[146:144]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_MARGIN is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_REG_TX_MARGIN);
    }

//initial config body1773 end


//initial config body1774 begin
    if(CP_LANE3_PMA_REG_TX_MARGIN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[147]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_MARGIN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[147]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[147]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_MARGIN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_MARGIN_OW);
    }

//initial config body1774 end


//initial config body1775 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_149_148 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_149_148 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE3[149:148]  :=  CP_LANE3_PMA_REG_TX_RESERVED_149_148;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[149:148]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_149_148 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_TX_RESERVED_149_148);
    }

//initial config body1775 end


//initial config body1776 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_150 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[150]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_150 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[150]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[150]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_150 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_150);
    }

//initial config body1776 end


//initial config body1777 begin
    if(CP_LANE3_PMA_REG_TX_SWING == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[151]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_SWING == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[151]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[151]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_SWING is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_SWING);
    }

//initial config body1777 end


//initial config body1778 begin
    if(CP_LANE3_PMA_REG_TX_SWING_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[152]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_SWING_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[152]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[152]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_SWING_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_SWING_OW);
    }

//initial config body1778 end


//initial config body1779 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_153 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[153]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_153 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[153]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[153]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_153 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_153);
    }

//initial config body1779 end


//initial config body1780 begin
    if(CP_LANE3_PMA_REG_TX_RXDET_THRESHOLD == "28MV")
    {
        SC_PMA_CH_INT_TX_LANE3[155:154]   :=  to_unsigned( 0, 2) ^ 2'b10;
    }
    else if (CP_LANE3_PMA_REG_TX_RXDET_THRESHOLD == "56MV")
    {
        SC_PMA_CH_INT_TX_LANE3[155:154]   :=  to_unsigned( 1, 2) ^ 2'b10;
    }
    else if (CP_LANE3_PMA_REG_TX_RXDET_THRESHOLD == "84MV")
    {
        SC_PMA_CH_INT_TX_LANE3[155:154]   :=  to_unsigned( 2, 2) ^ 2'b10;
    }
    else if (CP_LANE3_PMA_REG_TX_RXDET_THRESHOLD == "112MV")
    {
        SC_PMA_CH_INT_TX_LANE3[155:154]   :=  to_unsigned( 3, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[155:154]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RXDET_THRESHOLD is set to %s. Legal values is 28MV,56MV,84MV,112MV",CP_LANE3_PMA_REG_TX_RXDET_THRESHOLD);
    }

//initial config body1780 end


//initial config body1781 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_157_156 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_157_156 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE3[157:156]  :=  CP_LANE3_PMA_REG_TX_RESERVED_157_156;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[157:156]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_157_156 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_TX_RESERVED_157_156);
    }

//initial config body1781 end


//initial config body1782 begin
    if(CP_LANE3_PMA_REG_TX_BEACON_OSC_CTRL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[158]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_BEACON_OSC_CTRL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[158]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[158]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_BEACON_OSC_CTRL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_BEACON_OSC_CTRL);
    }

//initial config body1782 end


//initial config body1783 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_160_159 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_160_159 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE3[160:159]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_RESERVED_160_159, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[160:159]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_160_159 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_TX_RESERVED_160_159);
    }

//initial config body1783 end


//initial config body1784 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_162_161 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_162_161 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE3[162:161]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_RESERVED_162_161, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[162:161]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_162_161 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_TX_RESERVED_162_161);
    }

//initial config body1784 end


//initial config body1785 begin
    if(CP_LANE3_PMA_REG_TX_TX2RX_SLPBACK_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[163]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_TX2RX_SLPBACK_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[163]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[163]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_TX2RX_SLPBACK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_TX2RX_SLPBACK_EN);
    }

//initial config body1785 end


//initial config body1786 begin
    if(CP_LANE3_PMA_REG_TX_PCLK_EDGE_SEL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[164]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_PCLK_EDGE_SEL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[164]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[164]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_PCLK_EDGE_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_PCLK_EDGE_SEL);
    }

//initial config body1786 end


//initial config body1787 begin
    if(CP_LANE3_PMA_REG_TX_RXDET_STATUS_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[165]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RXDET_STATUS_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[165]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[165]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RXDET_STATUS_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RXDET_STATUS_OW);
    }

//initial config body1787 end


//initial config body1788 begin
    if(CP_LANE3_PMA_REG_TX_RXDET_STATUS == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[166]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_TX_RXDET_STATUS == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[166]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[166]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RXDET_STATUS is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RXDET_STATUS);
    }

//initial config body1788 end


//initial config body1789 begin
    if(CP_LANE3_PMA_REG_TX_PRBS_GEN_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[167]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_PRBS_GEN_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[167]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[167]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_PRBS_GEN_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_PRBS_GEN_EN);
    }

//initial config body1789 end


//initial config body1790 begin
    if(CP_LANE3_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "8BIT")
    {
        SC_PMA_CH_INT_TX_LANE3[169:168]   :=  to_unsigned( 0, 2) ^ 2'b11;
    }
    else if (CP_LANE3_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "10BIT")
    {
        SC_PMA_CH_INT_TX_LANE3[169:168]   :=  to_unsigned( 1, 2) ^ 2'b11;
    }
    else if (CP_LANE3_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "16BIT")
    {
        SC_PMA_CH_INT_TX_LANE3[169:168]   :=  to_unsigned( 2, 2) ^ 2'b11;
    }
    else if (CP_LANE3_PMA_REG_TX_PRBS_GEN_WIDTH_SEL == "20BIT")
    {
        SC_PMA_CH_INT_TX_LANE3[169:168]   :=  to_unsigned( 3, 2) ^ 2'b11;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[169:168]   :=  to_unsigned( 0, 2) ^ 2'b11;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_PRBS_GEN_WIDTH_SEL is set to %s. Legal values is 8BIT,10BIT,16BIT,20BIT",CP_LANE3_PMA_REG_TX_PRBS_GEN_WIDTH_SEL);
    }

//initial config body1790 end


//initial config body1791 begin
    if(CP_LANE3_PMA_REG_TX_PRBS_SEL == "PRBS7")
    {
        SC_PMA_CH_INT_TX_LANE3[171:170]  :=  2'b00;
    }
    else if (CP_LANE3_PMA_REG_TX_PRBS_SEL == "PRBS15")
    {
        SC_PMA_CH_INT_TX_LANE3[171:170]  :=  2'b01;
    }
    else if (CP_LANE3_PMA_REG_TX_PRBS_SEL == "PRBS23")
    {
        SC_PMA_CH_INT_TX_LANE3[171:170]  :=  2'b10;
    }
    else if (CP_LANE3_PMA_REG_TX_PRBS_SEL == "PRBS31")
    {
        SC_PMA_CH_INT_TX_LANE3[171:170]  :=  2'b11;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[171:170]  :=  2'b00;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_PRBS_SEL is set to %s. Legal values is PRBS7,PRBS15,PRBS23,PRBS31",CP_LANE3_PMA_REG_TX_PRBS_SEL);
    }

//initial config body1791 end


//initial config body1792 begin
    if(CP_LANE3_PMA_REG_TX_UDP_DATA_7_TO_0 >= 0 && CP_LANE3_PMA_REG_TX_UDP_DATA_7_TO_0 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[179:172]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_UDP_DATA_7_TO_0, 8) ^ 8'b00000101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[179:172]   :=  to_unsigned( 0, 8) ^ 8'b00000101;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_UDP_DATA_7_TO_0 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_UDP_DATA_7_TO_0);
    }

//initial config body1792 end


//initial config body1793 begin
    if(CP_LANE3_PMA_REG_TX_UDP_DATA_15_TO_8 >= 0 && CP_LANE3_PMA_REG_TX_UDP_DATA_15_TO_8 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[187:180]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_UDP_DATA_15_TO_8, 8) ^ 8'b11101011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[187:180]   :=  to_unsigned( 0, 8) ^ 8'b11101011;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_UDP_DATA_15_TO_8 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_UDP_DATA_15_TO_8);
    }

//initial config body1793 end


//initial config body1794 begin
    if(CP_LANE3_PMA_REG_TX_UDP_DATA_19_TO_16 >= 0 && CP_LANE3_PMA_REG_TX_UDP_DATA_19_TO_16 <= 15)
    {
        SC_PMA_CH_INT_TX_LANE3[191:188]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_UDP_DATA_19_TO_16, 4) ^ 4'b0011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[191:188]   :=  to_unsigned( 0, 4) ^ 4'b0011;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_UDP_DATA_19_TO_16 is set to %d. Legal values is 0 to 15",CP_LANE3_PMA_REG_TX_UDP_DATA_19_TO_16);
    }

//initial config body1794 end


//initial config body1795 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_192 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[192]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_192 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[192]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[192]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_192 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_192);
    }

//initial config body1795 end


//initial config body1796 begin
    if(CP_LANE3_PMA_REG_TX_FIFO_WP_CTRL >= 0 && CP_LANE3_PMA_REG_TX_FIFO_WP_CTRL <= 7)
    {
        SC_PMA_CH_INT_TX_LANE3[195:193]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_FIFO_WP_CTRL, 3) ^ 3'b010;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[195:193]   :=  to_unsigned( 0, 3) ^ 3'b010;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_FIFO_WP_CTRL is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_REG_TX_FIFO_WP_CTRL);
    }

//initial config body1796 end


//initial config body1797 begin
    if(CP_LANE3_PMA_REG_TX_FIFO_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[196]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_FIFO_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[196]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[196]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_FIFO_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_FIFO_EN);
    }

//initial config body1797 end


//initial config body1798 begin
    if(CP_LANE3_PMA_REG_TX_DATA_MUX_SEL >= 0 && CP_LANE3_PMA_REG_TX_DATA_MUX_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE3[198:197]  :=  CP_LANE3_PMA_REG_TX_DATA_MUX_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[198:197]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_DATA_MUX_SEL is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_TX_DATA_MUX_SEL);
    }

//initial config body1798 end


//initial config body1799 begin
    if(CP_LANE3_PMA_REG_TX_ERR_INSERT == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[199]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_ERR_INSERT == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[199]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[199]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_ERR_INSERT is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_ERR_INSERT);
    }

//initial config body1799 end


//initial config body1800 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_203_200 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_203_200 <= 15)
    {
        SC_PMA_CH_INT_TX_LANE3[203:200]  :=  CP_LANE3_PMA_REG_TX_RESERVED_203_200;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[203:200]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_203_200 is set to %d. Legal values is 0 to 15",CP_LANE3_PMA_REG_TX_RESERVED_203_200);
    }

//initial config body1800 end


//initial config body1801 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_204 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[204]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_204 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[204]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[204]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_204 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_204);
    }

//initial config body1801 end


//initial config body1802 begin
    if(CP_LANE3_PMA_REG_TX_SATA_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[205]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_SATA_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[205]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[205]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_SATA_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_SATA_EN);
    }

//initial config body1802 end


//initial config body1803 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_207_206 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_207_206 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE3[207:206]  :=  CP_LANE3_PMA_REG_TX_RESERVED_207_206;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[207:206]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_207_206 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_TX_RESERVED_207_206);
    }

//initial config body1803 end


//initial config body1804 begin
    if(CP_LANE3_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[208]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[208]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[208]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW);
    }

//initial config body1804 end


//initial config body1805 begin
    if(CP_LANE3_PMA_REG_RATE_CHANGE_TXPCLK_ON == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[209]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_RATE_CHANGE_TXPCLK_ON == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[209]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[209]  :=  1'b0^1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RATE_CHANGE_TXPCLK_ON is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RATE_CHANGE_TXPCLK_ON);
    }

//initial config body1805 end


//initial config body1806 begin
    if(CP_LANE3_PMA_REG_TX_CFG_POST1 >= 0 && CP_LANE3_PMA_REG_TX_CFG_POST1 <= 31)
    {
        SC_PMA_CH_INT_TX_LANE3[214:210]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_CFG_POST1, 5) ^ 5'b11000;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[214:210]   :=  to_unsigned( 0, 5) ^ 5'b11000;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_CFG_POST1 is set to %d. Legal values is 0 to 31",CP_LANE3_PMA_REG_TX_CFG_POST1);
    }

//initial config body1806 end


//initial config body1807 begin
    if(CP_LANE3_PMA_REG_TX_CFG_POST2 >= 0 && CP_LANE3_PMA_REG_TX_CFG_POST2 <= 31)
    {
        SC_PMA_CH_INT_TX_LANE3[219:215]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_CFG_POST2, 5) ^ 5'b10011;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[219:215]   :=  to_unsigned( 0, 5) ^ 5'b10011;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_CFG_POST2 is set to %d. Legal values is 0 to 31",CP_LANE3_PMA_REG_TX_CFG_POST2);
    }

//initial config body1807 end


//initial config body1808 begin
    if(CP_LANE3_PMA_REG_TX_DEEMP >= 0 && CP_LANE3_PMA_REG_TX_DEEMP <= 3)
    {
        SC_PMA_CH_INT_TX_LANE3[221:220]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_DEEMP, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[221:220]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_DEEMP is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_TX_DEEMP);
    }

//initial config body1808 end


//initial config body1809 begin
    if(CP_LANE3_PMA_REG_TX_DEEMP_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[222]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_TX_DEEMP_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[222]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[222]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_DEEMP_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_DEEMP_OW);
    }

//initial config body1809 end


//initial config body1810 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_224_223 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_224_223 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE3[224:223]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_RESERVED_224_223, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[224:223]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_224_223 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_TX_RESERVED_224_223);
    }

//initial config body1810 end


//initial config body1811 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_225 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[225]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_225 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[225]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[225]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_225 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_225);
    }

//initial config body1811 end


//initial config body1812 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_229_226 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_229_226 <= 15)
    {
        SC_PMA_CH_INT_TX_LANE3[229:226]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_RESERVED_229_226, 4) ^ 4'b0100;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[229:226]   :=  to_unsigned( 0, 4) ^ 4'b0100;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_229_226 is set to %d. Legal values is 0 to 15",CP_LANE3_PMA_REG_TX_RESERVED_229_226);
    }

//initial config body1812 end


//initial config body1813 begin
    if(CP_LANE3_PMA_REG_TX_OOB_DELAY_SEL >= 0 && CP_LANE3_PMA_REG_TX_OOB_DELAY_SEL <= 15)
    {
        SC_PMA_CH_INT_TX_LANE3[233:230]  :=  CP_LANE3_PMA_REG_TX_OOB_DELAY_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[233:230]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_OOB_DELAY_SEL is set to %d. Legal values is 0 to 15",CP_LANE3_PMA_REG_TX_OOB_DELAY_SEL);
    }

//initial config body1813 end


//initial config body1814 begin
    if(CP_LANE3_PMA_REG_TX_POLARITY == "NORMAL")
    {
        SC_PMA_CH_INT_TX_LANE3[234]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_POLARITY == "REVERSE")
    {
        SC_PMA_CH_INT_TX_LANE3[234]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[234]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_POLARITY is set to %s. Legal values is NORMAL,REVERSE",CP_LANE3_PMA_REG_TX_POLARITY);
    }

//initial config body1814 end


//initial config body1815 begin
    if(CP_LANE3_PMA_REG_ANA_TX_JTAG_DATA_O_SEL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[235]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_ANA_TX_JTAG_DATA_O_SEL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[235]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[235]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_ANA_TX_JTAG_DATA_O_SEL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_ANA_TX_JTAG_DATA_O_SEL);
    }

//initial config body1815 end


//initial config body1816 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_236 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[236]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_236 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[236]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[236]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_236 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_236);
    }

//initial config body1816 end


//initial config body1817 begin
    if(CP_LANE3_PMA_REG_TX_LS_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[237]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_LS_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[237]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[237]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_LS_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_LS_MODE_EN);
    }

//initial config body1817 end


//initial config body1818 begin
    if(CP_LANE3_PMA_REG_TX_JTAG_MODE_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[238]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_JTAG_MODE_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[238]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[238]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_JTAG_MODE_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_JTAG_MODE_EN_OW);
    }

//initial config body1818 end


//initial config body1819 begin
    if(CP_LANE3_PMA_REG_TX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[239]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[239]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[239]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_JTAG_MODE_EN);
    }

//initial config body1819 end


//initial config body1820 begin
    if(CP_LANE3_PMA_REG_RX_JTAG_MODE_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[240]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_JTAG_MODE_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[240]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[240]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_JTAG_MODE_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_JTAG_MODE_EN_OW);
    }

//initial config body1820 end


//initial config body1821 begin
    if(CP_LANE3_PMA_REG_RX_JTAG_MODE_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[241]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_RX_JTAG_MODE_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[241]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[241]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_JTAG_MODE_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_JTAG_MODE_EN);
    }

//initial config body1821 end


//initial config body1822 begin
    if(CP_LANE3_PMA_REG_RX_JTAG_OE == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[242]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_RX_JTAG_OE == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[242]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[242]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_JTAG_OE is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_RX_JTAG_OE);
    }

//initial config body1822 end


//initial config body1823 begin
    if(CP_LANE3_PMA_REG_RX_ACJTAG_VHYSTSEL >= 0 && CP_LANE3_PMA_REG_RX_ACJTAG_VHYSTSEL <= 7)
    {
        SC_PMA_CH_INT_TX_LANE3[245:243]  :=  CP_LANE3_PMA_REG_RX_ACJTAG_VHYSTSEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[245:243]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_ACJTAG_VHYSTSEL is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_REG_RX_ACJTAG_VHYSTSEL);
    }

//initial config body1823 end


//initial config body1824 begin
    if(CP_LANE3_PMA_REG_TX_RES_CAL_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[246]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RES_CAL_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[246]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[246]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RES_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RES_CAL_EN);
    }

//initial config body1824 end


//initial config body1825 begin
    if(CP_LANE3_PMA_REG_RX_TERM_MODE_CTRL >= 0 && CP_LANE3_PMA_REG_RX_TERM_MODE_CTRL <= 7)
    {
        SC_PMA_CH_INT_TX_LANE3[249:247]   :=  to_unsigned( CP_LANE3_PMA_REG_RX_TERM_MODE_CTRL, 3) ^ 3'b101;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[249:247]   :=  to_unsigned( 0, 3) ^ 3'b101;
        error("Setting Error : The CP_LANE3_PMA_REG_RX_TERM_MODE_CTRL is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_REG_RX_TERM_MODE_CTRL);
    }

//initial config body1825 end


//initial config body1826 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_251_250 >= 0 && CP_LANE3_PMA_REG_TX_RESERVED_251_250 <= 3)
    {
        SC_PMA_CH_INT_TX_LANE3[251:250]  :=  CP_LANE3_PMA_REG_TX_RESERVED_251_250;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[251:250]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_251_250 is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_TX_RESERVED_251_250);
    }

//initial config body1826 end


//initial config body1827 begin
    if(CP_LANE3_PMA_REG_PLPBK_TXPCLK_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[252]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_PLPBK_TXPCLK_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[252]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[252]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_PLPBK_TXPCLK_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_PLPBK_TXPCLK_EN);
    }

//initial config body1827 end


//initial config body1828 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_253 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[253]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_253 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[253]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[253]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_253 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_253);
    }

//initial config body1828 end


//initial config body1829 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_254 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[254]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_254 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[254]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[254]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_254 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_254);
    }

//initial config body1829 end


//initial config body1830 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_255 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[255]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_255 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[255]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[255]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_255 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_255);
    }

//initial config body1830 end


//initial config body1831 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_256 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[256]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_256 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[256]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[256]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_256 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_256);
    }

//initial config body1831 end


//initial config body1832 begin
    if(CP_LANE3_PMA_REG_TX_RESERVED_257 == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[257]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_RESERVED_257 == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[257]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[257]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RESERVED_257 is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_RESERVED_257);
    }

//initial config body1832 end


//initial config body1833 begin
    if(CP_LANE3_PMA_REG_TX_PH_SEL >= 0 && CP_LANE3_PMA_REG_TX_PH_SEL <= 63)
    {
        SC_PMA_CH_INT_TX_LANE3[263:258]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_PH_SEL, 6) ^ 6'b000001;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[263:258]   :=  to_unsigned( 0, 6) ^ 6'b000001;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_PH_SEL is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_PH_SEL);
    }

//initial config body1833 end


//initial config body1834 begin
    if(CP_LANE3_PMA_REG_TX_CFG_PRE  >= 0 && CP_LANE3_PMA_REG_TX_CFG_PRE  <= 31)
    {
        SC_PMA_CH_INT_TX_LANE3[268:264]  :=  CP_LANE3_PMA_REG_TX_CFG_PRE;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[268:264]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_CFG_PRE  is set to %d. Legal values is 0 to 31",CP_LANE3_PMA_REG_TX_CFG_PRE );
    }

//initial config body1834 end


//initial config body1835 begin
    if(CP_LANE3_PMA_REG_TX_CFG_MAIN >= 0 && CP_LANE3_PMA_REG_TX_CFG_MAIN <= 63)
    {
        SC_PMA_CH_INT_TX_LANE3[274:269]  :=  CP_LANE3_PMA_REG_TX_CFG_MAIN;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[274:269]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_CFG_MAIN is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_CFG_MAIN);
    }

//initial config body1835 end


//initial config body1836 begin
    if(CP_LANE3_PMA_REG_CFG_POST >= 0 && CP_LANE3_PMA_REG_CFG_POST <= 31)
    {
        SC_PMA_CH_INT_TX_LANE3[279:275]  :=  CP_LANE3_PMA_REG_CFG_POST;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[279:275]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_CFG_POST is set to %d. Legal values is 0 to 31",CP_LANE3_PMA_REG_CFG_POST);
    }

//initial config body1836 end


//initial config body1837 begin
    if(CP_LANE3_PMA_REG_PD_MAIN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[280]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_PD_MAIN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[280]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[280]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_PD_MAIN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_PD_MAIN);
    }

//initial config body1837 end


//initial config body1838 begin
    if(CP_LANE3_PMA_REG_PD_PRE == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[281]  :=  1'b0^1'b1;
    }
    else if (CP_LANE3_PMA_REG_PD_PRE == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[281]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[281]  :=  1'b0^1'b1;
        error("Setting Error : The CP_LANE3_PMA_REG_PD_PRE is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_PD_PRE);
    }

//initial config body1838 end


//initial config body1839 begin
    if(CP_LANE3_PMA_REG_TX_LS_DATA == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[282]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_LS_DATA == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[282]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[282]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_LS_DATA is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_LS_DATA);
    }

//initial config body1839 end


//initial config body1840 begin
    if(CP_LANE3_PMA_REG_TX_DCC_BUF_SZ_SEL >= 0 && CP_LANE3_PMA_REG_TX_DCC_BUF_SZ_SEL <= 3)
    {
        SC_PMA_CH_INT_TX_LANE3[284:283]  :=  CP_LANE3_PMA_REG_TX_DCC_BUF_SZ_SEL;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[284:283]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_DCC_BUF_SZ_SEL is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_TX_DCC_BUF_SZ_SEL);
    }

//initial config body1840 end


//initial config body1841 begin
    if(CP_LANE3_PMA_REG_TX_DCC_CAL_CUR_TUNE >= 0 && CP_LANE3_PMA_REG_TX_DCC_CAL_CUR_TUNE <= 63)
    {
        SC_PMA_CH_INT_TX_LANE3[290:285]  :=  CP_LANE3_PMA_REG_TX_DCC_CAL_CUR_TUNE;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[290:285]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_DCC_CAL_CUR_TUNE is set to %d. Legal values is 0 to 63",CP_LANE3_PMA_REG_TX_DCC_CAL_CUR_TUNE);
    }

//initial config body1841 end


//initial config body1842 begin
    if(CP_LANE3_PMA_REG_TX_DCC_CAL_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[291]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_DCC_CAL_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[291]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[291]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_DCC_CAL_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_DCC_CAL_EN);
    }

//initial config body1842 end


//initial config body1843 begin
    if(CP_LANE3_PMA_REG_TX_DCC_CUR_SS >= 0 && CP_LANE3_PMA_REG_TX_DCC_CUR_SS <= 3)
    {
        SC_PMA_CH_INT_TX_LANE3[293:292]  :=  CP_LANE3_PMA_REG_TX_DCC_CUR_SS;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[293:292]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_DCC_CUR_SS is set to %d. Legal values is 0 to 3",CP_LANE3_PMA_REG_TX_DCC_CUR_SS);
    }

//initial config body1843 end


//initial config body1844 begin
    if(CP_LANE3_PMA_REG_TX_DCC_FA_CTRL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[294]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_DCC_FA_CTRL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[294]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[294]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_DCC_FA_CTRL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_DCC_FA_CTRL);
    }

//initial config body1844 end


//initial config body1845 begin
    if(CP_LANE3_PMA_REG_TX_DCC_RI_CTRL == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[295]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_DCC_RI_CTRL == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[295]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[295]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_DCC_RI_CTRL is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_DCC_RI_CTRL);
    }

//initial config body1845 end


//initial config body1846 begin
    if(CP_LANE3_PMA_REG_ATB_SEL_2_TO_0 >= 0 && CP_LANE3_PMA_REG_ATB_SEL_2_TO_0 <= 7)
    {
        SC_PMA_CH_INT_TX_LANE3[298:296]  :=  CP_LANE3_PMA_REG_ATB_SEL_2_TO_0;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[298:296]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_ATB_SEL_2_TO_0 is set to %d. Legal values is 0 to 7",CP_LANE3_PMA_REG_ATB_SEL_2_TO_0);
    }

//initial config body1846 end


//initial config body1847 begin
    if(CP_LANE3_PMA_REG_ATB_SEL_9_TO_3 >= 0 && CP_LANE3_PMA_REG_ATB_SEL_9_TO_3 <= 127)
    {
        SC_PMA_CH_INT_TX_LANE3[305:299]  :=  CP_LANE3_PMA_REG_ATB_SEL_9_TO_3;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[305:299]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_ATB_SEL_9_TO_3 is set to %d. Legal values is 0 to 127",CP_LANE3_PMA_REG_ATB_SEL_9_TO_3);
    }

//initial config body1847 end


//initial config body1848 begin
    if(CP_LANE3_PMA_REG_TX_CFG_7_TO_0 >= 0 && CP_LANE3_PMA_REG_TX_CFG_7_TO_0 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[313:306]  :=  CP_LANE3_PMA_REG_TX_CFG_7_TO_0;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[313:306]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_CFG_7_TO_0 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_CFG_7_TO_0);
    }

//initial config body1848 end


//initial config body1849 begin
    if(CP_LANE3_PMA_REG_TX_CFG_15_TO_8 >= 0 && CP_LANE3_PMA_REG_TX_CFG_15_TO_8 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[321:314]  :=  CP_LANE3_PMA_REG_TX_CFG_15_TO_8;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[321:314]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_CFG_15_TO_8 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_CFG_15_TO_8);
    }

//initial config body1849 end


//initial config body1850 begin
    if(CP_LANE3_PMA_REG_TX_CFG_23_TO_16 >= 0 && CP_LANE3_PMA_REG_TX_CFG_23_TO_16 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[329:322]  :=  CP_LANE3_PMA_REG_TX_CFG_23_TO_16;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[329:322]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_CFG_23_TO_16 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_CFG_23_TO_16);
    }

//initial config body1850 end


//initial config body1851 begin
    if(CP_LANE3_PMA_REG_TX_CFG_31_TO_24 >= 0 && CP_LANE3_PMA_REG_TX_CFG_31_TO_24 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[337:330]  :=  CP_LANE3_PMA_REG_TX_CFG_31_TO_24;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[337:330]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_CFG_31_TO_24 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_CFG_31_TO_24);
    }

//initial config body1851 end


//initial config body1852 begin
    if(CP_LANE3_PMA_REG_TX_OOB_EI_EN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[338]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_OOB_EI_EN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[338]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[338]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_OOB_EI_EN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_OOB_EI_EN);
    }

//initial config body1852 end


//initial config body1853 begin
    if(CP_LANE3_PMA_REG_TX_OOB_EI_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[339]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_OOB_EI_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[339]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[339]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_OOB_EI_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_OOB_EI_EN_OW);
    }

//initial config body1853 end


//initial config body1854 begin
    if(CP_LANE3_PMA_REG_TX_BEACON_EN_DELAYED == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[340]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_BEACON_EN_DELAYED == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[340]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[340]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_BEACON_EN_DELAYED is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_BEACON_EN_DELAYED);
    }

//initial config body1854 end


//initial config body1855 begin
    if(CP_LANE3_PMA_REG_TX_BEACON_EN_DELAYED_OW == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[341]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_BEACON_EN_DELAYED_OW == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[341]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[341]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_BEACON_EN_DELAYED_OW is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_BEACON_EN_DELAYED_OW);
    }

//initial config body1855 end


//initial config body1856 begin
    if(CP_LANE3_PMA_REG_TX_JTAG_DATA == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[342]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_TX_JTAG_DATA == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[342]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[342]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_JTAG_DATA is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_TX_JTAG_DATA);
    }

//initial config body1856 end


//initial config body1857 begin
    if(CP_LANE3_PMA_REG_TX_RXDET_TIMER_SEL >= 0 && CP_LANE3_PMA_REG_TX_RXDET_TIMER_SEL <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[350:343]   :=  to_unsigned( CP_LANE3_PMA_REG_TX_RXDET_TIMER_SEL, 8) ^ 8'b01010111;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[350:343]   :=  to_unsigned( 0, 8) ^ 8'b01010111;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_RXDET_TIMER_SEL is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_RXDET_TIMER_SEL);
    }

//initial config body1857 end


//initial config body1858 begin
    if(CP_LANE3_PMA_REG_TX_CFG1_7_0 >= 0 && CP_LANE3_PMA_REG_TX_CFG1_7_0 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[358:351]  :=  CP_LANE3_PMA_REG_TX_CFG1_7_0;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[358:351]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_CFG1_7_0 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_CFG1_7_0);
    }

//initial config body1858 end


//initial config body1859 begin
    if(CP_LANE3_PMA_REG_TX_CFG1_15_8 >= 0 && CP_LANE3_PMA_REG_TX_CFG1_15_8 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[366:359]  :=  CP_LANE3_PMA_REG_TX_CFG1_15_8;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[366:359]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_CFG1_15_8 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_CFG1_15_8);
    }

//initial config body1859 end


//initial config body1860 begin
    if(CP_LANE3_PMA_REG_TX_CFG1_23_16 >= 0 && CP_LANE3_PMA_REG_TX_CFG1_23_16 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[374:367]  :=  CP_LANE3_PMA_REG_TX_CFG1_23_16;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[374:367]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_CFG1_23_16 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_CFG1_23_16);
    }

//initial config body1860 end


//initial config body1861 begin
    if(CP_LANE3_PMA_REG_TX_CFG1_31_24 >= 0 && CP_LANE3_PMA_REG_TX_CFG1_31_24 <= 255)
    {
        SC_PMA_CH_INT_TX_LANE3[382:375]  :=  CP_LANE3_PMA_REG_TX_CFG1_31_24;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[382:375]  :=  0;
        error("Setting Error : The CP_LANE3_PMA_REG_TX_CFG1_31_24 is set to %d. Legal values is 0 to 255",CP_LANE3_PMA_REG_TX_CFG1_31_24);
    }

//initial config body1861 end


//initial config body1862 begin
    if(CP_LANE3_PMA_REG_CFG_LANE_POWERUP == "OFF")
    {
        SC_PMA_CH_INT_TX_LANE3[383]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CFG_LANE_POWERUP == "ON")
    {
        SC_PMA_CH_INT_TX_LANE3[383]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[383]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CFG_LANE_POWERUP is set to %s. Legal values is OFF,ON",CP_LANE3_PMA_REG_CFG_LANE_POWERUP);
    }

//initial config body1862 end


//initial config body1863 begin
    if(CP_LANE3_PMA_REG_CFG_PMA_POR_N == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[384]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CFG_PMA_POR_N == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[384]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[384]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CFG_PMA_POR_N is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CFG_PMA_POR_N);
    }

//initial config body1863 end


//initial config body1864 begin
    if(CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[385]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[385]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[385]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH);
    }

//initial config body1864 end


//initial config body1865 begin
    if(CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_PISO == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[386]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_PISO == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[386]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[386]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_PISO is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_PISO);
    }

//initial config body1865 end


//initial config body1866 begin
    if(CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[387]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[387]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[387]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER);
    }

//initial config body1866 end


//initial config body1867 begin
    if(CP_LANE3_PMA_REG_CFG_TX_PMA_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_TX_LANE3[388]  :=  1'b0;
    }
    else if (CP_LANE3_PMA_REG_CFG_TX_PMA_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_TX_LANE3[388]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_TX_LANE3[388]  :=  1'b0;
        error("Setting Error : The CP_LANE3_PMA_REG_CFG_TX_PMA_RSTN is set to %s. Legal values is FALSE,TRUE",CP_LANE3_PMA_REG_CFG_TX_PMA_RSTN);
    }

//initial config body1867 end


//initial config body1868 begin
    if(CP_PLL0_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[186]  :=  1'b0^1'b1;
    }
    else if (CP_PLL0_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[186]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[186]  :=  1'b0^1'b1;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL);
    }

//initial config body1868 end


//initial config body1869 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_PFDDELAY_EN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[0]  :=  1'b0^1'b1;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_PFDDELAY_EN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[0]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[0]  :=  1'b0^1'b1;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_PFDDELAY_EN is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_PLL_PFDDELAY_EN);
    }

//initial config body1869 end


//initial config body1870 begin
    if(CP_PLL0_PMA_PLL_REG_PFDDELAYSEL >= 0 && CP_PLL0_PMA_PLL_REG_PFDDELAYSEL <= 3)
    {
        SC_PMA_CH_INT_PLL_0[2:1]   :=  to_unsigned( CP_PLL0_PMA_PLL_REG_PFDDELAYSEL, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[2:1]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PFDDELAYSEL is set to %d. Legal values is 0 to 3",CP_PLL0_PMA_PLL_REG_PFDDELAYSEL);
    }

//initial config body1870 end


//initial config body1871 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_VCTRL_SET >= 0 && CP_PLL0_PMA_PLL_REG_PLL_VCTRL_SET <= 3)
    {
        SC_PMA_CH_INT_PLL_0[4:3]  :=  CP_PLL0_PMA_PLL_REG_PLL_VCTRL_SET;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[4:3]  :=  0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_VCTRL_SET is set to %d. Legal values is 0 to 3",CP_PLL0_PMA_PLL_REG_PLL_VCTRL_SET);
    }

//initial config body1871 end


//initial config body1872 begin
    if(CP_PLL0_PMA_PLL_REG_READY_OR_LOCK == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[5]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_READY_OR_LOCK == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[5]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[5]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_READY_OR_LOCK is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_READY_OR_LOCK);
    }

//initial config body1872 end


//initial config body1873 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_CP >= 0 && CP_PLL0_PMA_PLL_REG_PLL_CP <= 1023)
    {
        SC_PMA_CH_INT_PLL_0[15:6]   :=  to_unsigned( CP_PLL0_PMA_PLL_REG_PLL_CP, 10) ^ 10'b0000011111;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[15:6]   :=  to_unsigned( 0, 10) ^ 10'b0000011111;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_CP is set to %d. Legal values is 0 to 1023",CP_PLL0_PMA_PLL_REG_PLL_CP);
    }

//initial config body1873 end


//initial config body1874 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_REFDIV >= 0 && CP_PLL0_PMA_PLL_REG_PLL_REFDIV <= 31)
    {
        SC_PMA_CH_INT_PLL_0[20:16]   :=  to_unsigned( CP_PLL0_PMA_PLL_REG_PLL_REFDIV, 5) ^ 5'b10000;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[20:16]   :=  to_unsigned( 0, 5) ^ 5'b10000;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_REFDIV is set to %d. Legal values is 0 to 31",CP_PLL0_PMA_PLL_REG_PLL_REFDIV);
    }

//initial config body1874 end


//initial config body1875 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[21]  :=  1'b0^1'b1;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[21]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[21]  :=  1'b0^1'b1;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN);
    }

//initial config body1875 end


//initial config body1876 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_READY == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[22]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_READY == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[22]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[22]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_READY is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_PLL_READY);
    }

//initial config body1876 end


//initial config body1877 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_READY_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[23]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_READY_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[23]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[23]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_READY_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_PLL_READY_OW);
    }

//initial config body1877 end


//initial config body1878 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_FBDIV >= 0 && CP_PLL0_PMA_PLL_REG_PLL_FBDIV <= 63)
    {
        SC_PMA_CH_INT_PLL_0[29:24]   :=  to_unsigned( CP_PLL0_PMA_PLL_REG_PLL_FBDIV, 6) ^ 6'b100100;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[29:24]   :=  to_unsigned( 0, 6) ^ 6'b100100;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_FBDIV is set to %d. Legal values is 0 to 63",CP_PLL0_PMA_PLL_REG_PLL_FBDIV);
    }

//initial config body1878 end


//initial config body1879 begin
    if(CP_PLL0_PMA_PLL_REG_LPF_RES >= 0 && CP_PLL0_PMA_PLL_REG_LPF_RES <= 15)
    {
        SC_PMA_CH_INT_PLL_0[35:32]   :=  to_unsigned( CP_PLL0_PMA_PLL_REG_LPF_RES, 4) ^ 4'b0001;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[35:32]   :=  to_unsigned( 0, 4) ^ 4'b0001;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_LPF_RES is set to %d. Legal values is 0 to 15",CP_PLL0_PMA_PLL_REG_LPF_RES);
    }

//initial config body1879 end


//initial config body1880 begin
    if(CP_PLL0_PMA_PLL_REG_JTAG_OE == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[36]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_JTAG_OE == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[36]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[36]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_JTAG_OE is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_JTAG_OE);
    }

//initial config body1880 end


//initial config body1881 begin
    if(CP_PLL0_PMA_PLL_REG_JTAG_VHYSTSEL >= 0 && CP_PLL0_PMA_PLL_REG_JTAG_VHYSTSEL <= 7)
    {
        SC_PMA_CH_INT_PLL_0[39:37]  :=  CP_PLL0_PMA_PLL_REG_JTAG_VHYSTSEL;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[39:37]  :=  0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_JTAG_VHYSTSEL is set to %d. Legal values is 0 to 7",CP_PLL0_PMA_PLL_REG_JTAG_VHYSTSEL);
    }

//initial config body1881 end


//initial config body1882 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[40]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[40]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[40]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN_OW);
    }

//initial config body1882 end


//initial config body1883 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_FBCT >= 0 && CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_FBCT <= 7)
    {
        SC_PMA_CH_INT_PLL_0[43:41]   :=  to_unsigned( CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_FBCT, 3) ^ 3'b111;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[43:41]   :=  to_unsigned( 0, 3) ^ 3'b111;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_FBCT is set to %d. Legal values is 0 to 7",CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_FBCT);
    }

//initial config body1883 end


//initial config body1884 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_ITER >= 0 && CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_ITER <= 7)
    {
        SC_PMA_CH_INT_PLL_0[46:44]   :=  to_unsigned( CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_ITER, 3) ^ 3'b011;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[46:44]   :=  to_unsigned( 0, 3) ^ 3'b011;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_ITER is set to %d. Legal values is 0 to 7",CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_ITER);
    }

//initial config body1884 end


//initial config body1885 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_MODE == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[47]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_MODE == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[47]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[47]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_MODE is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_MODE);
    }

//initial config body1885 end


//initial config body1886 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_LOCKCT >= 0 && CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_LOCKCT <= 7)
    {
        SC_PMA_CH_INT_PLL_0[50:48]   :=  to_unsigned( CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_LOCKCT, 3) ^ 3'b100;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[50:48]   :=  to_unsigned( 0, 3) ^ 3'b100;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_LOCKCT is set to %d. Legal values is 0 to 7",CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_LOCKCT);
    }

//initial config body1886 end


//initial config body1887 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_REFCT >= 0 && CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_REFCT <= 7)
    {
        SC_PMA_CH_INT_PLL_0[53:51]   :=  to_unsigned( CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_REFCT, 3) ^ 3'b111;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[53:51]   :=  to_unsigned( 0, 3) ^ 3'b111;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_REFCT is set to %d. Legal values is 0 to 7",CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_REFCT);
    }

//initial config body1887 end


//initial config body1888 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[54]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[54]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[54]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N);
    }

//initial config body1888 end


//initial config body1889 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[55]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[55]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[55]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW);
    }

//initial config body1889 end


//initial config body1890 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_LOCKED == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[56]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_LOCKED == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[56]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[56]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_LOCKED is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_PLL_LOCKED);
    }

//initial config body1890 end


//initial config body1891 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_LOCKED_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[57]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_LOCKED_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[57]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[57]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_LOCKED_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_PLL_LOCKED_OW);
    }

//initial config body1891 end


//initial config body1892 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[58]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[58]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[58]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR);
    }

//initial config body1892 end


//initial config body1893 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[59]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[59]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[59]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED);
    }

//initial config body1893 end


//initial config body1894 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_UNLOCKDET_ITER == 0)
    {
        SC_PMA_CH_INT_PLL_0[61:60]   :=  to_unsigned( 0, 2) ^ 2'b10;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_UNLOCKDET_ITER == 1)
    {
        SC_PMA_CH_INT_PLL_0[61:60]   :=  to_unsigned( 1, 2) ^ 2'b10;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_UNLOCKDET_ITER == 2)
    {
        SC_PMA_CH_INT_PLL_0[61:60]   :=  to_unsigned( 2, 2) ^ 2'b10;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_UNLOCKDET_ITER == 3)
    {
        SC_PMA_CH_INT_PLL_0[61:60]   :=  to_unsigned( 3, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[61:60]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_UNLOCKDET_ITER is set to %s. Legal values is 0,1,2,3",CP_PLL0_PMA_PLL_REG_PLL_UNLOCKDET_ITER);
    }

//initial config body1894 end


//initial config body1895 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[62]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[62]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[62]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_OW);
    }

//initial config body1895 end


//initial config body1896 begin
    if(CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[63]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[63]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[63]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR);
    }

//initial config body1896 end


//initial config body1897 begin
    if(CP_PLL0_PMA_PLL_REG_I_CTRL_MAX >= 0 && CP_PLL0_PMA_PLL_REG_I_CTRL_MAX <= 63)
    {
        SC_PMA_CH_INT_PLL_0[69:64]  :=  CP_PLL0_PMA_PLL_REG_I_CTRL_MAX;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[69:64]  :=  0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_I_CTRL_MAX is set to %d. Legal values is 0 to 63",CP_PLL0_PMA_PLL_REG_I_CTRL_MAX);
    }

//initial config body1897 end


//initial config body1898 begin
    if(CP_PLL0_PMA_PLL_REG_REFCLK_TEST_EN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[70]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_REFCLK_TEST_EN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[70]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[70]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_REFCLK_TEST_EN is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_REFCLK_TEST_EN);
    }

//initial config body1898 end


//initial config body1899 begin
    if(CP_PLL0_PMA_PLL_REG_RESCAL_EN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[71]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_RESCAL_EN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[71]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[71]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_RESCAL_EN is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_RESCAL_EN);
    }

//initial config body1899 end


//initial config body1900 begin
    if(CP_PLL0_PMA_PLL_REG_I_CTRL_MIN >= 0 && CP_PLL0_PMA_PLL_REG_I_CTRL_MIN <= 63)
    {
        SC_PMA_CH_INT_PLL_0[77:72]  :=  CP_PLL0_PMA_PLL_REG_I_CTRL_MIN;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[77:72]  :=  0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_I_CTRL_MIN is set to %d. Legal values is 0 to 63",CP_PLL0_PMA_PLL_REG_I_CTRL_MIN);
    }

//initial config body1900 end


//initial config body1901 begin
    if(CP_PLL0_PMA_PLL_REG_RESCAL_DONE_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[78]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_RESCAL_DONE_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[78]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[78]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_RESCAL_DONE_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_RESCAL_DONE_OW);
    }

//initial config body1901 end


//initial config body1902 begin
    if(CP_PLL0_PMA_PLL_REG_RESCAL_DONE_VAL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[79]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_RESCAL_DONE_VAL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[79]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[79]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_RESCAL_DONE_VAL is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_RESCAL_DONE_VAL);
    }

//initial config body1902 end


//initial config body1903 begin
    if(CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE >= 0 && CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE <= 63)
    {
        SC_PMA_CH_INT_PLL_0[85:80]  :=  CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[85:80]  :=  0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE is set to %d. Legal values is 0 to 63",CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE);
    }

//initial config body1903 end


//initial config body1904 begin
    if(CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[86]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[86]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[86]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_OW);
    }

//initial config body1904 end


//initial config body1905 begin
    if(CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_PMA == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[87]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_PMA == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[87]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[87]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_PMA is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_PMA);
    }

//initial config body1905 end


//initial config body1906 begin
    if(CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_VAL >= 0 && CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_VAL <= 63)
    {
        SC_PMA_CH_INT_PLL_0[93:88]  :=  CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_VAL;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[93:88]  :=  0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_VAL is set to %d. Legal values is 0 to 63",CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_VAL);
    }

//initial config body1906 end


//initial config body1907 begin
    if(CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[94]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[94]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[94]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW);
    }

//initial config body1907 end


//initial config body1908 begin
    if(CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[95]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[95]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[95]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL);
    }

//initial config body1908 end


//initial config body1909 begin
    if(CP_PLL0_PMA_PLL_REG_RESCAL_ITER_VALID_SEL >= 0 && CP_PLL0_PMA_PLL_REG_RESCAL_ITER_VALID_SEL <= 3)
    {
        SC_PMA_CH_INT_PLL_0[97:96]  :=  CP_PLL0_PMA_PLL_REG_RESCAL_ITER_VALID_SEL;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[97:96]  :=  0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_RESCAL_ITER_VALID_SEL is set to %d. Legal values is 0 to 3",CP_PLL0_PMA_PLL_REG_RESCAL_ITER_VALID_SEL);
    }

//initial config body1909 end


//initial config body1910 begin
    if(CP_PLL0_PMA_PLL_REG_RESCAL_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[98]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_RESCAL_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[98]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[98]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_RESCAL_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_RESCAL_RESET_N_OW);
    }

//initial config body1910 end


//initial config body1911 begin
    if(CP_PLL0_PMA_PLL_REG_RESCAL_RST_N_VAL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[99]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_RESCAL_RST_N_VAL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[99]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[99]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_RESCAL_RST_N_VAL is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_RESCAL_RST_N_VAL);
    }

//initial config body1911 end


//initial config body1912 begin
    if(CP_PLL0_PMA_PLL_REG_RESCAL_WAIT_SEL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[100]  :=  1'b0^1'b1;
    }
    else if (CP_PLL0_PMA_PLL_REG_RESCAL_WAIT_SEL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[100]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[100]  :=  1'b0^1'b1;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_RESCAL_WAIT_SEL is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_RESCAL_WAIT_SEL);
    }

//initial config body1912 end


//initial config body1913 begin
    if(CP_PLL0_PMA_PLL_REFCLK2LANE_PD_L == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[101]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REFCLK2LANE_PD_L == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[101]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[101]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REFCLK2LANE_PD_L is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REFCLK2LANE_PD_L);
    }

//initial config body1913 end


//initial config body1914 begin
    if(CP_PLL0_PMA_PLL_REFCLK2LANE_PD_R == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[102]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REFCLK2LANE_PD_R == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[102]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[102]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REFCLK2LANE_PD_R is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REFCLK2LANE_PD_R);
    }

//initial config body1914 end


//initial config body1915 begin
    if(CP_PLL0_PMA_PLL_REG_LOCKDET_REPEAT == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[160]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_LOCKDET_REPEAT == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[160]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[160]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_LOCKDET_REPEAT is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_LOCKDET_REPEAT);
    }

//initial config body1915 end


//initial config body1916 begin
    if(CP_PLL0_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[161]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[161]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[161]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR);
    }

//initial config body1916 end


//initial config body1917 begin
    if(CP_PLL0_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[162]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[162]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[162]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR);
    }

//initial config body1917 end


//initial config body1918 begin
    if(CP_PLL0_PMA_PLL_REG_TEST_SEL == 0)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b00000;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 1)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b00001;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 2)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b00010;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 3)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b00011;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 4)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b00100;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 5)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b00101;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 6)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b00110;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 7)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b00111;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 8)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b01000;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 9)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b01001;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 10)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b01010;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 11)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b01011;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 12)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b01100;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 13)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b01101;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 14)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b01110;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 15)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b01111;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 16)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b10000;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 17)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b10001;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 18)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b10010;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 19)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b10011;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SEL == 20)
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b10100;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[180:176]  :=  5'b00000;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_TEST_SEL is set to %s. Legal values is 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",CP_PLL0_PMA_PLL_REG_TEST_SEL);
    }

//initial config body1918 end


//initial config body1919 begin
    if(CP_PLL0_PMA_PLL_REG_TEST_V_EN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[181]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_V_EN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[181]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[181]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_TEST_V_EN is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_TEST_V_EN);
    }

//initial config body1919 end


//initial config body1920 begin
    if(CP_PLL0_PMA_PLL_REG_TEST_SIG_HALF_EN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[182]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_TEST_SIG_HALF_EN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[182]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[182]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_TEST_SIG_HALF_EN is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_TEST_SIG_HALF_EN);
    }

//initial config body1920 end


//initial config body1921 begin
    if(CP_PLL0_PMA_PLL_REG_REFCLK_PAD_SEL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[188]  :=  1'b0;
    }
    else if (CP_PLL0_PMA_PLL_REG_REFCLK_PAD_SEL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[188]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[188]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PMA_PLL_REG_REFCLK_PAD_SEL is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PMA_PLL_REG_REFCLK_PAD_SEL);
    }

//initial config body1921 end


//initial config body1922 begin
    if(CP_PLL0_PARM_CFG_HSST_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[256]  :=  1'b0;
    }
    else if (CP_PLL0_PARM_CFG_HSST_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[256]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[256]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PARM_CFG_HSST_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PARM_CFG_HSST_RSTN);
    }

//initial config body1922 end


//initial config body1923 begin
    if(CP_PLL0_PARM_PLL_POWERUP == "OFF")
    {
        SC_PMA_CH_INT_PLL_0[257]  :=  1'b0;
    }
    else if (CP_PLL0_PARM_PLL_POWERUP == "ON")
    {
        SC_PMA_CH_INT_PLL_0[257]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[257]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PARM_PLL_POWERUP is set to %s. Legal values is OFF,ON",CP_PLL0_PARM_PLL_POWERUP);
    }

//initial config body1923 end


//initial config body1924 begin
    if(CP_PLL0_PARM_PLL_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_0[258]  :=  1'b0;
    }
    else if (CP_PLL0_PARM_PLL_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_0[258]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_0[258]  :=  1'b0;
        error("Setting Error : The CP_PLL0_PARM_PLL_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PLL0_PARM_PLL_RSTN);
    }

//initial config body1924 end


//initial config body1925 begin
    if(CP_PLL1_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[186]  :=  1'b0^1'b1;
    }
    else if (CP_PLL1_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[186]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[186]  :=  1'b0^1'b1;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL);
    }

//initial config body1925 end


//initial config body1926 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_PFDDELAY_EN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[0]  :=  1'b0^1'b1;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_PFDDELAY_EN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[0]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[0]  :=  1'b0^1'b1;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_PFDDELAY_EN is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_PLL_PFDDELAY_EN);
    }

//initial config body1926 end


//initial config body1927 begin
    if(CP_PLL1_PMA_PLL_REG_PFDDELAYSEL >= 0 && CP_PLL1_PMA_PLL_REG_PFDDELAYSEL <= 3)
    {
        SC_PMA_CH_INT_PLL_1[2:1]   :=  to_unsigned( CP_PLL1_PMA_PLL_REG_PFDDELAYSEL, 2) ^ 2'b01;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[2:1]   :=  to_unsigned( 0, 2) ^ 2'b01;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PFDDELAYSEL is set to %d. Legal values is 0 to 3",CP_PLL1_PMA_PLL_REG_PFDDELAYSEL);
    }

//initial config body1927 end


//initial config body1928 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_VCTRL_SET >= 0 && CP_PLL1_PMA_PLL_REG_PLL_VCTRL_SET <= 3)
    {
        SC_PMA_CH_INT_PLL_1[4:3]  :=  CP_PLL1_PMA_PLL_REG_PLL_VCTRL_SET;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[4:3]  :=  0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_VCTRL_SET is set to %d. Legal values is 0 to 3",CP_PLL1_PMA_PLL_REG_PLL_VCTRL_SET);
    }

//initial config body1928 end


//initial config body1929 begin
    if(CP_PLL1_PMA_PLL_REG_READY_OR_LOCK == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[5]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_READY_OR_LOCK == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[5]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[5]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_READY_OR_LOCK is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_READY_OR_LOCK);
    }

//initial config body1929 end


//initial config body1930 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_CP >= 0 && CP_PLL1_PMA_PLL_REG_PLL_CP <= 1023)
    {
        SC_PMA_CH_INT_PLL_1[15:6]   :=  to_unsigned( CP_PLL1_PMA_PLL_REG_PLL_CP, 10) ^ 10'b0000011111;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[15:6]   :=  to_unsigned( 0, 10) ^ 10'b0000011111;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_CP is set to %d. Legal values is 0 to 1023",CP_PLL1_PMA_PLL_REG_PLL_CP);
    }

//initial config body1930 end


//initial config body1931 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_REFDIV >= 0 && CP_PLL1_PMA_PLL_REG_PLL_REFDIV <= 31)
    {
        SC_PMA_CH_INT_PLL_1[20:16]   :=  to_unsigned( CP_PLL1_PMA_PLL_REG_PLL_REFDIV, 5) ^ 5'b10000;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[20:16]   :=  to_unsigned( 0, 5) ^ 5'b10000;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_REFDIV is set to %d. Legal values is 0 to 31",CP_PLL1_PMA_PLL_REG_PLL_REFDIV);
    }

//initial config body1931 end


//initial config body1932 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_EN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[21]  :=  1'b0^1'b1;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_EN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[21]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[21]  :=  1'b0^1'b1;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_EN is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_EN);
    }

//initial config body1932 end


//initial config body1933 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_READY == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[22]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_READY == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[22]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[22]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_READY is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_PLL_READY);
    }

//initial config body1933 end


//initial config body1934 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_READY_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[23]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_READY_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[23]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[23]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_READY_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_PLL_READY_OW);
    }

//initial config body1934 end


//initial config body1935 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_FBDIV >= 0 && CP_PLL1_PMA_PLL_REG_PLL_FBDIV <= 63)
    {
        SC_PMA_CH_INT_PLL_1[29:24]   :=  to_unsigned( CP_PLL1_PMA_PLL_REG_PLL_FBDIV, 6) ^ 6'b100100;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[29:24]   :=  to_unsigned( 0, 6) ^ 6'b100100;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_FBDIV is set to %d. Legal values is 0 to 63",CP_PLL1_PMA_PLL_REG_PLL_FBDIV);
    }

//initial config body1935 end


//initial config body1936 begin
    if(CP_PLL1_PMA_PLL_REG_LPF_RES >= 0 && CP_PLL1_PMA_PLL_REG_LPF_RES <= 15)
    {
        SC_PMA_CH_INT_PLL_1[35:32]   :=  to_unsigned( CP_PLL1_PMA_PLL_REG_LPF_RES, 4) ^ 4'b0001;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[35:32]   :=  to_unsigned( 0, 4) ^ 4'b0001;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_LPF_RES is set to %d. Legal values is 0 to 15",CP_PLL1_PMA_PLL_REG_LPF_RES);
    }

//initial config body1936 end


//initial config body1937 begin
    if(CP_PLL1_PMA_PLL_REG_JTAG_OE == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[36]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_JTAG_OE == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[36]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[36]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_JTAG_OE is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_JTAG_OE);
    }

//initial config body1937 end


//initial config body1938 begin
    if(CP_PLL1_PMA_PLL_REG_JTAG_VHYSTSEL >= 0 && CP_PLL1_PMA_PLL_REG_JTAG_VHYSTSEL <= 7)
    {
        SC_PMA_CH_INT_PLL_1[39:37]  :=  CP_PLL1_PMA_PLL_REG_JTAG_VHYSTSEL;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[39:37]  :=  0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_JTAG_VHYSTSEL is set to %d. Legal values is 0 to 7",CP_PLL1_PMA_PLL_REG_JTAG_VHYSTSEL);
    }

//initial config body1938 end


//initial config body1939 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_EN_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[40]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_EN_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[40]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[40]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_EN_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_EN_OW);
    }

//initial config body1939 end


//initial config body1940 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_FBCT >= 0 && CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_FBCT <= 7)
    {
        SC_PMA_CH_INT_PLL_1[43:41]   :=  to_unsigned( CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_FBCT, 3) ^ 3'b111;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[43:41]   :=  to_unsigned( 0, 3) ^ 3'b111;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_FBCT is set to %d. Legal values is 0 to 7",CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_FBCT);
    }

//initial config body1940 end


//initial config body1941 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_ITER >= 0 && CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_ITER <= 7)
    {
        SC_PMA_CH_INT_PLL_1[46:44]   :=  to_unsigned( CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_ITER, 3) ^ 3'b011;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[46:44]   :=  to_unsigned( 0, 3) ^ 3'b011;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_ITER is set to %d. Legal values is 0 to 7",CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_ITER);
    }

//initial config body1941 end


//initial config body1942 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_MODE == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[47]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_MODE == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[47]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[47]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_MODE is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_MODE);
    }

//initial config body1942 end


//initial config body1943 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_LOCKCT >= 0 && CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_LOCKCT <= 7)
    {
        SC_PMA_CH_INT_PLL_1[50:48]   :=  to_unsigned( CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_LOCKCT, 3) ^ 3'b100;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[50:48]   :=  to_unsigned( 0, 3) ^ 3'b100;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_LOCKCT is set to %d. Legal values is 0 to 7",CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_LOCKCT);
    }

//initial config body1943 end


//initial config body1944 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_REFCT >= 0 && CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_REFCT <= 7)
    {
        SC_PMA_CH_INT_PLL_1[53:51]   :=  to_unsigned( CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_REFCT, 3) ^ 3'b111;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[53:51]   :=  to_unsigned( 0, 3) ^ 3'b111;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_REFCT is set to %d. Legal values is 0 to 7",CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_REFCT);
    }

//initial config body1944 end


//initial config body1945 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_RESET_N == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[54]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_RESET_N == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[54]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[54]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_RESET_N is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_RESET_N);
    }

//initial config body1945 end


//initial config body1946 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[55]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[55]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[55]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW);
    }

//initial config body1946 end


//initial config body1947 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_LOCKED == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[56]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_LOCKED == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[56]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[56]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_LOCKED is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_PLL_LOCKED);
    }

//initial config body1947 end


//initial config body1948 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_LOCKED_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[57]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_LOCKED_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[57]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[57]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_LOCKED_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_PLL_LOCKED_OW);
    }

//initial config body1948 end


//initial config body1949 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[58]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[58]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[58]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR);
    }

//initial config body1949 end


//initial config body1950 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[59]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[59]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[59]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED);
    }

//initial config body1950 end


//initial config body1951 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_UNLOCKDET_ITER == 0)
    {
        SC_PMA_CH_INT_PLL_1[61:60]   :=  to_unsigned( 0, 2) ^ 2'b10;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_UNLOCKDET_ITER == 1)
    {
        SC_PMA_CH_INT_PLL_1[61:60]   :=  to_unsigned( 1, 2) ^ 2'b10;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_UNLOCKDET_ITER == 2)
    {
        SC_PMA_CH_INT_PLL_1[61:60]   :=  to_unsigned( 2, 2) ^ 2'b10;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_UNLOCKDET_ITER == 3)
    {
        SC_PMA_CH_INT_PLL_1[61:60]   :=  to_unsigned( 3, 2) ^ 2'b10;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[61:60]   :=  to_unsigned( 0, 2) ^ 2'b10;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_UNLOCKDET_ITER is set to %s. Legal values is 0,1,2,3",CP_PLL1_PMA_PLL_REG_PLL_UNLOCKDET_ITER);
    }

//initial config body1951 end


//initial config body1952 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[62]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[62]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[62]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED_OW);
    }

//initial config body1952 end


//initial config body1953 begin
    if(CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[63]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[63]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[63]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR);
    }

//initial config body1953 end


//initial config body1954 begin
    if(CP_PLL1_PMA_PLL_REG_I_CTRL_MAX >= 0 && CP_PLL1_PMA_PLL_REG_I_CTRL_MAX <= 63)
    {
        SC_PMA_CH_INT_PLL_1[69:64]  :=  CP_PLL1_PMA_PLL_REG_I_CTRL_MAX;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[69:64]  :=  0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_I_CTRL_MAX is set to %d. Legal values is 0 to 63",CP_PLL1_PMA_PLL_REG_I_CTRL_MAX);
    }

//initial config body1954 end


//initial config body1955 begin
    if(CP_PLL1_PMA_PLL_REG_REFCLK_TEST_EN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[70]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_REFCLK_TEST_EN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[70]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[70]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_REFCLK_TEST_EN is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_REFCLK_TEST_EN);
    }

//initial config body1955 end


//initial config body1956 begin
    if(CP_PLL1_PMA_PLL_REG_RESCAL_EN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[71]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_RESCAL_EN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[71]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[71]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_RESCAL_EN is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_RESCAL_EN);
    }

//initial config body1956 end


//initial config body1957 begin
    if(CP_PLL1_PMA_PLL_REG_I_CTRL_MIN >= 0 && CP_PLL1_PMA_PLL_REG_I_CTRL_MIN <= 63)
    {
        SC_PMA_CH_INT_PLL_1[77:72]  :=  CP_PLL1_PMA_PLL_REG_I_CTRL_MIN;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[77:72]  :=  0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_I_CTRL_MIN is set to %d. Legal values is 0 to 63",CP_PLL1_PMA_PLL_REG_I_CTRL_MIN);
    }

//initial config body1957 end


//initial config body1958 begin
    if(CP_PLL1_PMA_PLL_REG_RESCAL_DONE_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[78]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_RESCAL_DONE_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[78]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[78]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_RESCAL_DONE_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_RESCAL_DONE_OW);
    }

//initial config body1958 end


//initial config body1959 begin
    if(CP_PLL1_PMA_PLL_REG_RESCAL_DONE_VAL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[79]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_RESCAL_DONE_VAL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[79]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[79]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_RESCAL_DONE_VAL is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_RESCAL_DONE_VAL);
    }

//initial config body1959 end


//initial config body1960 begin
    if(CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE >= 0 && CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE <= 63)
    {
        SC_PMA_CH_INT_PLL_1[85:80]  :=  CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[85:80]  :=  0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE is set to %d. Legal values is 0 to 63",CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE);
    }

//initial config body1960 end


//initial config body1961 begin
    if(CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[86]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[86]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[86]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_OW);
    }

//initial config body1961 end


//initial config body1962 begin
    if(CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_PMA == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[87]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_PMA == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[87]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[87]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_PMA is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_PMA);
    }

//initial config body1962 end


//initial config body1963 begin
    if(CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_VAL >= 0 && CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_VAL <= 63)
    {
        SC_PMA_CH_INT_PLL_1[93:88]  :=  CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_VAL;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[93:88]  :=  0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_VAL is set to %d. Legal values is 0 to 63",CP_PLL1_PMA_PLL_REG_RESCAL_I_CODE_VAL);
    }

//initial config body1963 end


//initial config body1964 begin
    if(CP_PLL1_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[94]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[94]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[94]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW);
    }

//initial config body1964 end


//initial config body1965 begin
    if(CP_PLL1_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[95]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[95]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[95]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL);
    }

//initial config body1965 end


//initial config body1966 begin
    if(CP_PLL1_PMA_PLL_REG_RESCAL_ITER_VALID_SEL >= 0 && CP_PLL1_PMA_PLL_REG_RESCAL_ITER_VALID_SEL <= 3)
    {
        SC_PMA_CH_INT_PLL_1[97:96]  :=  CP_PLL1_PMA_PLL_REG_RESCAL_ITER_VALID_SEL;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[97:96]  :=  0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_RESCAL_ITER_VALID_SEL is set to %d. Legal values is 0 to 3",CP_PLL1_PMA_PLL_REG_RESCAL_ITER_VALID_SEL);
    }

//initial config body1966 end


//initial config body1967 begin
    if(CP_PLL1_PMA_PLL_REG_RESCAL_RESET_N_OW == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[98]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_RESCAL_RESET_N_OW == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[98]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[98]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_RESCAL_RESET_N_OW is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_RESCAL_RESET_N_OW);
    }

//initial config body1967 end


//initial config body1968 begin
    if(CP_PLL1_PMA_PLL_REG_RESCAL_RST_N_VAL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[99]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_RESCAL_RST_N_VAL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[99]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[99]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_RESCAL_RST_N_VAL is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_RESCAL_RST_N_VAL);
    }

//initial config body1968 end


//initial config body1969 begin
    if(CP_PLL1_PMA_PLL_REG_RESCAL_WAIT_SEL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[100]  :=  1'b0^1'b1;
    }
    else if (CP_PLL1_PMA_PLL_REG_RESCAL_WAIT_SEL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[100]  :=  1'b1^1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[100]  :=  1'b0^1'b1;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_RESCAL_WAIT_SEL is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_RESCAL_WAIT_SEL);
    }

//initial config body1969 end


//initial config body1970 begin
    if(CP_PLL1_PMA_PLL_REFCLK2LANE_PD_L == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[101]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REFCLK2LANE_PD_L == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[101]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[101]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REFCLK2LANE_PD_L is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REFCLK2LANE_PD_L);
    }

//initial config body1970 end


//initial config body1971 begin
    if(CP_PLL1_PMA_PLL_REFCLK2LANE_PD_R == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[102]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REFCLK2LANE_PD_R == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[102]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[102]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REFCLK2LANE_PD_R is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REFCLK2LANE_PD_R);
    }

//initial config body1971 end


//initial config body1972 begin
    if(CP_PLL1_PMA_PLL_REG_LOCKDET_REPEAT == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[160]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_LOCKDET_REPEAT == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[160]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[160]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_LOCKDET_REPEAT is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_LOCKDET_REPEAT);
    }

//initial config body1972 end


//initial config body1973 begin
    if(CP_PLL1_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[161]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[161]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[161]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR);
    }

//initial config body1973 end


//initial config body1974 begin
    if(CP_PLL1_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[162]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[162]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[162]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR);
    }

//initial config body1974 end


//initial config body1975 begin
    if(CP_PLL1_PMA_PLL_REG_TEST_SEL == 0)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b00000;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 1)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b00001;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 2)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b00010;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 3)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b00011;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 4)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b00100;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 5)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b00101;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 6)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b00110;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 7)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b00111;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 8)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b01000;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 9)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b01001;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 10)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b01010;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 11)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b01011;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 12)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b01100;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 13)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b01101;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 14)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b01110;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 15)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b01111;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 16)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b10000;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 17)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b10001;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 18)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b10010;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 19)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b10011;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SEL == 20)
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b10100;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[180:176]  :=  5'b00000;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_TEST_SEL is set to %s. Legal values is 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",CP_PLL1_PMA_PLL_REG_TEST_SEL);
    }

//initial config body1975 end


//initial config body1976 begin
    if(CP_PLL1_PMA_PLL_REG_TEST_V_EN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[181]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_V_EN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[181]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[181]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_TEST_V_EN is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_TEST_V_EN);
    }

//initial config body1976 end


//initial config body1977 begin
    if(CP_PLL1_PMA_PLL_REG_TEST_SIG_HALF_EN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[182]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_TEST_SIG_HALF_EN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[182]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[182]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_TEST_SIG_HALF_EN is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_TEST_SIG_HALF_EN);
    }

//initial config body1977 end


//initial config body1978 begin
    if(CP_PLL1_PMA_PLL_REG_REFCLK_PAD_SEL == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[188]  :=  1'b0;
    }
    else if (CP_PLL1_PMA_PLL_REG_REFCLK_PAD_SEL == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[188]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[188]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PMA_PLL_REG_REFCLK_PAD_SEL is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PMA_PLL_REG_REFCLK_PAD_SEL);
    }

//initial config body1978 end


//initial config body1979 begin
    if(CP_PLL1_PARM_CFG_HSST_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[256]  :=  1'b0;
    }
    else if (CP_PLL1_PARM_CFG_HSST_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[256]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[256]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PARM_CFG_HSST_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PARM_CFG_HSST_RSTN);
    }

//initial config body1979 end


//initial config body1980 begin
    if(CP_PLL1_PARM_PLL_POWERUP == "OFF")
    {
        SC_PMA_CH_INT_PLL_1[257]  :=  1'b0;
    }
    else if (CP_PLL1_PARM_PLL_POWERUP == "ON")
    {
        SC_PMA_CH_INT_PLL_1[257]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[257]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PARM_PLL_POWERUP is set to %s. Legal values is OFF,ON",CP_PLL1_PARM_PLL_POWERUP);
    }

//initial config body1980 end


//initial config body1981 begin
    if(CP_PLL1_PARM_PLL_RSTN == "FALSE")
    {
        SC_PMA_CH_INT_PLL_1[258]  :=  1'b0;
    }
    else if (CP_PLL1_PARM_PLL_RSTN == "TRUE")
    {
        SC_PMA_CH_INT_PLL_1[258]  :=  1'b1;
    }
    else
    {
        SC_PMA_CH_INT_PLL_1[258]  :=  1'b0;
        error("Setting Error : The CP_PLL1_PARM_PLL_RSTN is set to %s. Legal values is FALSE,TRUE",CP_PLL1_PARM_PLL_RSTN);
    }

//initial config body1981 end

};

//grid device configure body end



/* timing hsstlp_tnl of HSSTLP
{
    operator V_HSSTLP_LANE HSSTLP_LANE_LANE0
    parameter map
    (
        MUX_BIAS                                   =>       CP_LANE0_MUX_BIAS                                            ,
        PD_CLK                                     =>       CP_LANE0_PD_CLK                                              ,
        REG_SYNC                                   =>       CP_LANE0_REG_SYNC                                            ,
        REG_SYNC_OW                                =>       CP_LANE0_REG_SYNC_OW                                         ,
        PLL_LOCK_OW                                =>       CP_LANE0_PLL_LOCK_OW                                         ,
        PLL_LOCK_OW_EN                             =>       CP_LANE0_PLL_LOCK_OW_EN                                      ,
        PCS_SLAVE                                  =>       CP_LANE0_PCS_SLAVE                                           ,
        PCS_BYPASS_WORD_ALIGN                      =>       CP_LANE0_PCS_BYPASS_WORD_ALIGN                               ,
        PCS_BYPASS_DENC                            =>       CP_LANE0_PCS_BYPASS_DENC                                     ,
        PCS_BYPASS_BONDING                         =>       CP_LANE0_PCS_BYPASS_BONDING                                  ,
        PCS_BYPASS_CTC                             =>       CP_LANE0_PCS_BYPASS_CTC                                      ,
        PCS_BYPASS_GEAR                            =>       CP_LANE0_PCS_BYPASS_GEAR                                     ,
        PCS_BYPASS_BRIDGE                          =>       CP_LANE0_PCS_BYPASS_BRIDGE                                   ,
        PCS_BYPASS_BRIDGE_FIFO                     =>       CP_LANE0_PCS_BYPASS_BRIDGE_FIFO                              ,
        PCS_DATA_MODE                              =>       CP_LANE0_PCS_DATA_MODE                                       ,
        PCS_RX_POLARITY_INV                        =>       CP_LANE0_PCS_RX_POLARITY_INV                                 ,
        PCS_ALIGN_MODE                             =>       CP_LANE0_PCS_ALIGN_MODE                                      ,
        PCS_SAMP_16B                               =>       CP_LANE0_PCS_SAMP_16B                                        ,
        PCS_FARLP_PWR_REDUCTION                    =>       CP_LANE0_PCS_FARLP_PWR_REDUCTION                             ,
        PCS_COMMA_REG0                             =>       CP_LANE0_PCS_COMMA_REG0                                      ,
        PCS_COMMA_MASK                             =>       CP_LANE0_PCS_COMMA_MASK                                      ,
        PCS_CEB_MODE                               =>       CP_LANE0_PCS_CEB_MODE                                        ,
        PCS_CTC_MODE                               =>       CP_LANE0_PCS_CTC_MODE                                        ,
        PCS_A_REG                                  =>       CP_LANE0_PCS_A_REG                                           ,
        PCS_GE_AUTO_EN                             =>       CP_LANE0_PCS_GE_AUTO_EN                                      ,
        PCS_SKIP_REG0                              =>       CP_LANE0_PCS_SKIP_REG0                                       ,
        PCS_SKIP_REG1                              =>       CP_LANE0_PCS_SKIP_REG1                                       ,
        PCS_SKIP_REG2                              =>       CP_LANE0_PCS_SKIP_REG2                                       ,
        PCS_SKIP_REG3                              =>       CP_LANE0_PCS_SKIP_REG3                                       ,
        PCS_DEC_DUAL                               =>       CP_LANE0_PCS_DEC_DUAL                                        ,
        PCS_SPLIT                                  =>       CP_LANE0_PCS_SPLIT                                           ,
        PCS_FIFOFLAG_CTC                           =>       CP_LANE0_PCS_FIFOFLAG_CTC                                    ,
        PCS_COMMA_DET_MODE                         =>       CP_LANE0_PCS_COMMA_DET_MODE                                  ,
        PCS_ERRDETECT_SILENCE                      =>       CP_LANE0_PCS_ERRDETECT_SILENCE                               ,
        PCS_PMA_RCLK_POLINV                        =>       CP_LANE0_PCS_PMA_RCLK_POLINV                                 ,
        PCS_PCS_RCLK_SEL                           =>       CP_LANE0_PCS_PCS_RCLK_SEL                                    ,
        PCS_CB_RCLK_SEL                            =>       CP_LANE0_PCS_CB_RCLK_SEL                                     ,
        PCS_AFTER_CTC_RCLK_SEL                     =>       CP_LANE0_PCS_AFTER_CTC_RCLK_SEL                              ,
        PCS_RCLK_POLINV                            =>       CP_LANE0_PCS_RCLK_POLINV                                     ,
        PCS_BRIDGE_RCLK_SEL                        =>       CP_LANE0_PCS_BRIDGE_RCLK_SEL                                 ,
        PCS_PCS_RCLK_EN                            =>       CP_LANE0_PCS_PCS_RCLK_EN                                     ,
        PCS_CB_RCLK_EN                             =>       CP_LANE0_PCS_CB_RCLK_EN                                      ,
        PCS_AFTER_CTC_RCLK_EN                      =>       CP_LANE0_PCS_AFTER_CTC_RCLK_EN                               ,
        PCS_AFTER_CTC_RCLK_EN_GB                   =>       CP_LANE0_PCS_AFTER_CTC_RCLK_EN_GB                            ,
        PCS_PCS_RX_RSTN                            =>       CP_LANE0_PCS_PCS_RX_RSTN                                     ,
        PCS_PCIE_SLAVE                             =>       CP_LANE0_PCS_PCIE_SLAVE                                      ,
        PCS_RX_64B66B_67B                          =>       CP_LANE0_PCS_RX_64B66B_67B                                   ,
        PCS_RX_BRIDGE_CLK_POLINV                   =>       CP_LANE0_PCS_RX_BRIDGE_CLK_POLINV                            ,
        PCS_PCS_CB_RSTN                            =>       CP_LANE0_PCS_PCS_CB_RSTN                                     ,
        PCS_TX_BRIDGE_GEAR_SEL                     =>       CP_LANE0_PCS_TX_BRIDGE_GEAR_SEL                              ,
        PCS_TX_BYPASS_BRIDGE_UINT                  =>       CP_LANE0_PCS_TX_BYPASS_BRIDGE_UINT                           ,
        PCS_TX_BYPASS_BRIDGE_FIFO                  =>       CP_LANE0_PCS_TX_BYPASS_BRIDGE_FIFO                           ,
        PCS_TX_BYPASS_GEAR                         =>       CP_LANE0_PCS_TX_BYPASS_GEAR                                  ,
        PCS_TX_BYPASS_ENC                          =>       CP_LANE0_PCS_TX_BYPASS_ENC                                   ,
        PCS_TX_BYPASS_BIT_SLIP                     =>       CP_LANE0_PCS_TX_BYPASS_BIT_SLIP                              ,
        PCS_TX_GEAR_SPLIT                          =>       CP_LANE0_PCS_TX_GEAR_SPLIT                                   ,
        PCS_TX_DRIVE_REG_MODE                      =>       CP_LANE0_PCS_TX_DRIVE_REG_MODE                               ,
        PCS_TX_BIT_SLIP_CYCLES                     =>       CP_LANE0_PCS_TX_BIT_SLIP_CYCLES                              ,
        PCS_INT_TX_MASK_0                          =>       CP_LANE0_PCS_INT_TX_MASK_0                                   ,
        PCS_INT_TX_MASK_1                          =>       CP_LANE0_PCS_INT_TX_MASK_1                                   ,
        PCS_INT_TX_MASK_2                          =>       CP_LANE0_PCS_INT_TX_MASK_2                                   ,
        PCS_INT_TX_CLR_0                           =>       CP_LANE0_PCS_INT_TX_CLR_0                                    ,
        PCS_INT_TX_CLR_1                           =>       CP_LANE0_PCS_INT_TX_CLR_1                                    ,
        PCS_INT_TX_CLR_2                           =>       CP_LANE0_PCS_INT_TX_CLR_2                                    ,
        PCS_TX_PMA_TCLK_POLINV                     =>       CP_LANE0_PCS_TX_PMA_TCLK_POLINV                              ,
        PCS_TX_PCS_CLK_EN_SEL                      =>       CP_LANE0_PCS_TX_PCS_CLK_EN_SEL                               ,
        PCS_TX_BRIDGE_TCLK_SEL                     =>       CP_LANE0_PCS_TX_BRIDGE_TCLK_SEL                              ,
        PCS_TX_TCLK_POLINV                         =>       CP_LANE0_PCS_TX_TCLK_POLINV                                  ,
        PCS_PCS_TCLK_SEL                           =>       CP_LANE0_PCS_PCS_TCLK_SEL                                    ,
        PCS_TX_PCS_TX_RSTN                         =>       CP_LANE0_PCS_TX_PCS_TX_RSTN                                  ,
        PCS_TX_SLAVE                               =>       CP_LANE0_PCS_TX_SLAVE                                        ,
        PCS_TX_GEAR_CLK_EN_SEL                     =>       CP_LANE0_PCS_TX_GEAR_CLK_EN_SEL                              ,
        PCS_DATA_WIDTH_MODE                        =>       CP_LANE0_PCS_DATA_WIDTH_MODE                                 ,
        PCS_TX_64B66B_67B                          =>       CP_LANE0_PCS_TX_64B66B_67B                                   ,
        PCS_GEAR_TCLK_SEL                          =>       CP_LANE0_PCS_GEAR_TCLK_SEL                                   ,
        PCS_TX_TCLK2FABRIC_SEL                     =>       CP_LANE0_PCS_TX_TCLK2FABRIC_SEL                              ,
        PCS_TX_OUTZZ                               =>       CP_LANE0_PCS_TX_OUTZZ                                        ,
        PCS_ENC_DUAL                               =>       CP_LANE0_PCS_ENC_DUAL                                        ,
        PCS_TX_BITSLIP_DATA_MODE                   =>       CP_LANE0_PCS_TX_BITSLIP_DATA_MODE                            ,
        PCS_TX_BRIDGE_CLK_POLINV                   =>       CP_LANE0_PCS_TX_BRIDGE_CLK_POLINV                            ,
        PCS_COMMA_REG1                             =>       CP_LANE0_PCS_COMMA_REG1                                      ,
        PCS_RAPID_IMAX                             =>       CP_LANE0_PCS_RAPID_IMAX                                      ,
        PCS_RAPID_VMIN_1                           =>       CP_LANE0_PCS_RAPID_VMIN_1                                    ,
        PCS_RAPID_VMIN_2                           =>       CP_LANE0_PCS_RAPID_VMIN_2                                    ,
        PCS_RX_PRBS_MODE                           =>       CP_LANE0_PCS_RX_PRBS_MODE                                    ,
        PCS_RX_ERRCNT_CLR                          =>       CP_LANE0_PCS_RX_ERRCNT_CLR                                   ,
        PCS_PRBS_ERR_LPBK                          =>       CP_LANE0_PCS_PRBS_ERR_LPBK                                   ,
        PCS_TX_PRBS_MODE                           =>       CP_LANE0_PCS_TX_PRBS_MODE                                    ,
        PCS_TX_INSERT_ER                           =>       CP_LANE0_PCS_TX_INSERT_ER                                    ,
        PCS_ENABLE_PRBS_GEN                        =>       CP_LANE0_PCS_ENABLE_PRBS_GEN                                 ,
        PCS_DEFAULT_RADDR                          =>       CP_LANE0_PCS_DEFAULT_RADDR                                   ,
        PCS_MASTER_CHECK_OFFSET                    =>       CP_LANE0_PCS_MASTER_CHECK_OFFSET                             ,
        PCS_DELAY_SET                              =>       CP_LANE0_PCS_DELAY_SET                                       ,
        PCS_SEACH_OFFSET                           =>       CP_LANE0_PCS_SEACH_OFFSET                                    ,
        PCS_CEB_RAPIDLS_MMAX                       =>       CP_LANE0_PCS_CEB_RAPIDLS_MMAX                                ,
        PCS_CTC_AFULL                              =>       CP_LANE0_PCS_CTC_AFULL                                       ,
        PCS_CTC_AEMPTY                             =>       CP_LANE0_PCS_CTC_AEMPTY                                      ,
        PCS_CTC_CONTI_SKP_SET                      =>       CP_LANE0_PCS_CTC_CONTI_SKP_SET                               ,
        PCS_FAR_LOOP                               =>       CP_LANE0_PCS_FAR_LOOP                                        ,
        PCS_NEAR_LOOP                              =>       CP_LANE0_PCS_NEAR_LOOP                                       ,
        PCS_PMA_TX2RX_PLOOP_EN                     =>       CP_LANE0_PCS_PMA_TX2RX_PLOOP_EN                              ,
        PCS_PMA_TX2RX_SLOOP_EN                     =>       CP_LANE0_PCS_PMA_TX2RX_SLOOP_EN                              ,
        PCS_PMA_RX2TX_PLOOP_EN                     =>       CP_LANE0_PCS_PMA_RX2TX_PLOOP_EN                              ,
        PCS_INT_RX_MASK_0                          =>       CP_LANE0_PCS_INT_RX_MASK_0                                   ,
        PCS_INT_RX_MASK_1                          =>       CP_LANE0_PCS_INT_RX_MASK_1                                   ,
        PCS_INT_RX_MASK_2                          =>       CP_LANE0_PCS_INT_RX_MASK_2                                   ,
        PCS_INT_RX_MASK_3                          =>       CP_LANE0_PCS_INT_RX_MASK_3                                   ,
        PCS_INT_RX_MASK_4                          =>       CP_LANE0_PCS_INT_RX_MASK_4                                   ,
        PCS_INT_RX_MASK_5                          =>       CP_LANE0_PCS_INT_RX_MASK_5                                   ,
        PCS_INT_RX_MASK_6                          =>       CP_LANE0_PCS_INT_RX_MASK_6                                   ,
        PCS_INT_RX_MASK_7                          =>       CP_LANE0_PCS_INT_RX_MASK_7                                   ,
        PCS_INT_RX_CLR_0                           =>       CP_LANE0_PCS_INT_RX_CLR_0                                    ,
        PCS_INT_RX_CLR_1                           =>       CP_LANE0_PCS_INT_RX_CLR_1                                    ,
        PCS_INT_RX_CLR_2                           =>       CP_LANE0_PCS_INT_RX_CLR_2                                    ,
        PCS_INT_RX_CLR_3                           =>       CP_LANE0_PCS_INT_RX_CLR_3                                    ,
        PCS_INT_RX_CLR_4                           =>       CP_LANE0_PCS_INT_RX_CLR_4                                    ,
        PCS_INT_RX_CLR_5                           =>       CP_LANE0_PCS_INT_RX_CLR_5                                    ,
        PCS_INT_RX_CLR_6                           =>       CP_LANE0_PCS_INT_RX_CLR_6                                    ,
        PCS_INT_RX_CLR_7                           =>       CP_LANE0_PCS_INT_RX_CLR_7                                    ,
        PCS_CA_RSTN_RX                             =>       CP_LANE0_PCS_CA_RSTN_RX                                      ,
        PCS_CA_DYN_DLY_EN_RX                       =>       CP_LANE0_PCS_CA_DYN_DLY_EN_RX                                ,
        PCS_CA_DYN_DLY_SEL_RX                      =>       CP_LANE0_PCS_CA_DYN_DLY_SEL_RX                               ,
        PCS_CA_RX                                  =>       CP_LANE0_PCS_CA_RX                                           ,
        PCS_CA_RSTN_TX                             =>       CP_LANE0_PCS_CA_RSTN_TX                                      ,
        PCS_CA_DYN_DLY_EN_TX                       =>       CP_LANE0_PCS_CA_DYN_DLY_EN_TX                                ,
        PCS_CA_DYN_DLY_SEL_TX                      =>       CP_LANE0_PCS_CA_DYN_DLY_SEL_TX                               ,
        PCS_CA_TX                                  =>       CP_LANE0_PCS_CA_TX                                           ,
        PCS_RXPRBS_PWR_REDUCTION                   =>       CP_LANE0_PCS_RXPRBS_PWR_REDUCTION                            ,
        PCS_WDALIGN_PWR_REDUCTION                  =>       CP_LANE0_PCS_WDALIGN_PWR_REDUCTION                           ,
        PCS_RXDEC_PWR_REDUCTION                    =>       CP_LANE0_PCS_RXDEC_PWR_REDUCTION                             ,
        PCS_RXCB_PWR_REDUCTION                     =>       CP_LANE0_PCS_RXCB_PWR_REDUCTION                              ,
        PCS_RXCTC_PWR_REDUCTION                    =>       CP_LANE0_PCS_RXCTC_PWR_REDUCTION                             ,
        PCS_RXGEAR_PWR_REDUCTION                   =>       CP_LANE0_PCS_RXGEAR_PWR_REDUCTION                            ,
        PCS_RXBRG_PWR_REDUCTION                    =>       CP_LANE0_PCS_RXBRG_PWR_REDUCTION                             ,
        PCS_RXTEST_PWR_REDUCTION                   =>       CP_LANE0_PCS_RXTEST_PWR_REDUCTION                            ,
        PCS_TXBRG_PWR_REDUCTION                    =>       CP_LANE0_PCS_TXBRG_PWR_REDUCTION                            ,
        PCS_TXGEAR_PWR_REDUCTION                   =>       CP_LANE0_PCS_TXGEAR_PWR_REDUCTION                           ,
        PCS_TXENC_PWR_REDUCTION                    =>       CP_LANE0_PCS_TXENC_PWR_REDUCTION                            ,
        PCS_TXBSLP_PWR_REDUCTION                   =>       CP_LANE0_PCS_TXBSLP_PWR_REDUCTION                           ,
        PCS_TXPRBS_PWR_REDUCTION                   =>       CP_LANE0_PCS_TXPRBS_PWR_REDUCTION                           ,
        PMA_REG_RX_PD                              =>       CP_LANE0_PMA_REG_RX_PD                                       ,
        PMA_REG_RX_PD_EN                           =>       CP_LANE0_PMA_REG_RX_PD_EN                                    ,
        PMA_REG_RX_RESERVED_2                      =>       CP_LANE0_PMA_REG_RX_RESERVED_2                               ,
        PMA_REG_RX_RESERVED_3                      =>       CP_LANE0_PMA_REG_RX_RESERVED_3                               ,
        PMA_REG_RX_DATAPATH_PD                     =>       CP_LANE0_PMA_REG_RX_DATAPATH_PD                              ,
        PMA_REG_RX_DATAPATH_PD_EN                  =>       CP_LANE0_PMA_REG_RX_DATAPATH_PD_EN                           ,
        PMA_REG_RX_SIGDET_PD                       =>       CP_LANE0_PMA_REG_RX_SIGDET_PD                                ,
        PMA_REG_RX_SIGDET_PD_EN                    =>       CP_LANE0_PMA_REG_RX_SIGDET_PD_EN                             ,
        PMA_REG_RX_DCC_RST_N                       =>       CP_LANE0_PMA_REG_RX_DCC_RST_N                                ,
        PMA_REG_RX_DCC_RST_N_EN                    =>       CP_LANE0_PMA_REG_RX_DCC_RST_N_EN                             ,
        PMA_REG_RX_CDR_RST_N                       =>       CP_LANE0_PMA_REG_RX_CDR_RST_N                                ,
        PMA_REG_RX_CDR_RST_N_EN                    =>       CP_LANE0_PMA_REG_RX_CDR_RST_N_EN                             ,
        PMA_REG_RX_SIGDET_RST_N                    =>       CP_LANE0_PMA_REG_RX_SIGDET_RST_N                             ,
        PMA_REG_RX_SIGDET_RST_N_EN                 =>       CP_LANE0_PMA_REG_RX_SIGDET_RST_N_EN                          ,
        PMA_REG_RXPCLK_SLIP                        =>       CP_LANE0_PMA_REG_RXPCLK_SLIP                                 ,
        PMA_REG_RXPCLK_SLIP_OW                     =>       CP_LANE0_PMA_REG_RXPCLK_SLIP_OW                              ,
        PMA_REG_RX_PCLKSWITCH_RST_N                =>       CP_LANE0_PMA_REG_RX_PCLKSWITCH_RST_N                         ,
        PMA_REG_RX_PCLKSWITCH_RST_N_EN             =>       CP_LANE0_PMA_REG_RX_PCLKSWITCH_RST_N_EN                      ,
        PMA_REG_RX_PCLKSWITCH                      =>       CP_LANE0_PMA_REG_RX_PCLKSWITCH                               ,
        PMA_REG_RX_PCLKSWITCH_EN                   =>       CP_LANE0_PMA_REG_RX_PCLKSWITCH_EN                            ,
        PMA_REG_RX_HIGHZ                           =>       CP_LANE0_PMA_REG_RX_HIGHZ                                    ,
        PMA_REG_RX_HIGHZ_EN                        =>       CP_LANE0_PMA_REG_RX_HIGHZ_EN                                 ,
        PMA_REG_RX_SIGDET_CLK_WINDOW               =>       CP_LANE0_PMA_REG_RX_SIGDET_CLK_WINDOW                        ,
        PMA_REG_RX_SIGDET_CLK_WINDOW_OW            =>       CP_LANE0_PMA_REG_RX_SIGDET_CLK_WINDOW_OW                     ,
        PMA_REG_RX_PD_BIAS_RX                      =>       CP_LANE0_PMA_REG_RX_PD_BIAS_RX                               ,
        PMA_REG_RX_PD_BIAS_RX_OW                   =>       CP_LANE0_PMA_REG_RX_PD_BIAS_RX_OW                            ,
        PMA_REG_RX_RESET_N                         =>       CP_LANE0_PMA_REG_RX_RESET_N                                  ,
        PMA_REG_RX_RESET_N_OW                      =>       CP_LANE0_PMA_REG_RX_RESET_N_OW                               ,
        PMA_REG_RX_RESERVED_29_28                  =>       CP_LANE0_PMA_REG_RX_RESERVED_29_28                           ,
        PMA_REG_RX_BUSWIDTH                        =>       CP_LANE0_PMA_REG_RX_BUSWIDTH                                 ,
        PMA_REG_RX_BUSWIDTH_EN                     =>       CP_LANE0_PMA_REG_RX_BUSWIDTH_EN                              ,
        PMA_REG_RX_RATE                            =>       CP_LANE0_PMA_REG_RX_RATE                                     ,
        PMA_REG_RX_RESERVED_36                     =>       CP_LANE0_PMA_REG_RX_RESERVED_36                              ,
        PMA_REG_RX_RATE_EN                         =>       CP_LANE0_PMA_REG_RX_RATE_EN                                  ,
        PMA_REG_RX_RES_TRIM                        =>       CP_LANE0_PMA_REG_RX_RES_TRIM                                 ,
        PMA_REG_RX_RESERVED_44                     =>       CP_LANE0_PMA_REG_RX_RESERVED_44                              ,
        PMA_REG_RX_RESERVED_45                     =>       CP_LANE0_PMA_REG_RX_RESERVED_45                              ,
        PMA_REG_RX_SIGDET_STATUS_EN                =>       CP_LANE0_PMA_REG_RX_SIGDET_STATUS_EN                         ,
        PMA_REG_RX_RESERVED_48_47                  =>       CP_LANE0_PMA_REG_RX_RESERVED_48_47                           ,
        PMA_REG_RX_ICTRL_SIGDET                    =>       CP_LANE0_PMA_REG_RX_ICTRL_SIGDET                             ,
        PMA_REG_CDR_READY_THD                      =>       CP_LANE0_PMA_REG_CDR_READY_THD                               ,
        PMA_REG_RX_RESERVED_65                     =>       CP_LANE0_PMA_REG_RX_RESERVED_65                              ,
        PMA_REG_RX_PCLK_EDGE_SEL                   =>       CP_LANE0_PMA_REG_RX_PCLK_EDGE_SEL                            ,
        PMA_REG_RX_PIBUF_IC                        =>       CP_LANE0_PMA_REG_RX_PIBUF_IC                                 ,
        PMA_REG_RX_RESERVED_69                     =>       CP_LANE0_PMA_REG_RX_RESERVED_69                              ,
        PMA_REG_RX_DCC_IC_RX                       =>       CP_LANE0_PMA_REG_RX_DCC_IC_RX                                ,
        PMA_REG_CDR_READY_CHECK_CTRL               =>       CP_LANE0_PMA_REG_CDR_READY_CHECK_CTRL                        ,
        PMA_REG_RX_ICTRL_TRX                       =>       CP_LANE0_PMA_REG_RX_ICTRL_TRX                                ,
        PMA_REG_RX_RESERVED_77_76                  =>       CP_LANE0_PMA_REG_RX_RESERVED_77_76                           ,
        PMA_REG_RX_RESERVED_79_78                  =>       CP_LANE0_PMA_REG_RX_RESERVED_79_78                           ,
        PMA_REG_RX_RESERVED_81_80                  =>       CP_LANE0_PMA_REG_RX_RESERVED_81_80                           ,
        PMA_REG_RX_ICTRL_PIBUF                     =>       CP_LANE0_PMA_REG_RX_ICTRL_PIBUF                              ,
        PMA_REG_RX_ICTRL_PI                        =>       CP_LANE0_PMA_REG_RX_ICTRL_PI                                 ,
        PMA_REG_RX_ICTRL_DCC                       =>       CP_LANE0_PMA_REG_RX_ICTRL_DCC                                ,
        PMA_REG_RX_RESERVED_89_88                  =>       CP_LANE0_PMA_REG_RX_RESERVED_89_88                           ,
        PMA_REG_TX_RATE                            =>       CP_LANE0_PMA_REG_TX_RATE                                     ,
        PMA_REG_RX_RESERVED_92                     =>       CP_LANE0_PMA_REG_RX_RESERVED_92                              ,
        PMA_REG_TX_RATE_EN                         =>       CP_LANE0_PMA_REG_TX_RATE_EN                                  ,
        PMA_REG_RX_TX2RX_PLPBK_RST_N               =>       CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_RST_N                        ,
        PMA_REG_RX_TX2RX_PLPBK_RST_N_EN            =>       CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN                     ,
        PMA_REG_RX_TX2RX_PLPBK_EN                  =>       CP_LANE0_PMA_REG_RX_TX2RX_PLPBK_EN                           ,
        PMA_REG_TXCLK_SEL                          =>       CP_LANE0_PMA_REG_TXCLK_SEL                                   ,
        PMA_REG_RX_DATA_POLARITY                   =>       CP_LANE0_PMA_REG_RX_DATA_POLARITY                            ,
        PMA_REG_RX_ERR_INSERT                      =>       CP_LANE0_PMA_REG_RX_ERR_INSERT                               ,
        PMA_REG_UDP_CHK_EN                         =>       CP_LANE0_PMA_REG_UDP_CHK_EN                                  ,
        PMA_REG_PRBS_SEL                           =>       CP_LANE0_PMA_REG_PRBS_SEL                                    ,
        PMA_REG_PRBS_CHK_EN                        =>       CP_LANE0_PMA_REG_PRBS_CHK_EN                                 ,
        PMA_REG_PRBS_CHK_WIDTH_SEL                 =>       CP_LANE0_PMA_REG_PRBS_CHK_WIDTH_SEL                          ,
        PMA_REG_BIST_CHK_PAT_SEL                   =>       CP_LANE0_PMA_REG_BIST_CHK_PAT_SEL                            ,
        PMA_REG_LOAD_ERR_CNT                       =>       CP_LANE0_PMA_REG_LOAD_ERR_CNT                                ,
        PMA_REG_CHK_COUNTER_EN                     =>       CP_LANE0_PMA_REG_CHK_COUNTER_EN                              ,
        PMA_REG_CDR_PROP_GAIN                      =>       CP_LANE0_PMA_REG_CDR_PROP_GAIN                               ,
        PMA_REG_CDR_PROP_TURBO_GAIN                =>       CP_LANE0_PMA_REG_CDR_PROP_TURBO_GAIN                         ,
        PMA_REG_CDR_INT_GAIN                       =>       CP_LANE0_PMA_REG_CDR_INT_GAIN                                ,
        PMA_REG_CDR_INT_TURBO_GAIN                 =>       CP_LANE0_PMA_REG_CDR_INT_TURBO_GAIN                          ,
        PMA_REG_CDR_INT_SAT_MAX                    =>       CP_LANE0_PMA_REG_CDR_INT_SAT_MAX                             ,
        PMA_REG_CDR_INT_SAT_MIN                    =>       CP_LANE0_PMA_REG_CDR_INT_SAT_MIN                             ,
        PMA_REG_CDR_INT_RST                        =>       CP_LANE0_PMA_REG_CDR_INT_RST                                 ,
        PMA_REG_CDR_INT_RST_OW                     =>       CP_LANE0_PMA_REG_CDR_INT_RST_OW                              ,
        PMA_REG_CDR_PROP_RST                       =>       CP_LANE0_PMA_REG_CDR_PROP_RST                                ,
        PMA_REG_CDR_PROP_RST_OW                    =>       CP_LANE0_PMA_REG_CDR_PROP_RST_OW                             ,
        PMA_REG_CDR_LOCK_RST                       =>       CP_LANE0_PMA_REG_CDR_LOCK_RST                                ,
        PMA_REG_CDR_LOCK_RST_OW                    =>       CP_LANE0_PMA_REG_CDR_LOCK_RST_OW                             ,
        PMA_REG_CDR_RX_PI_FORCE_SEL                =>       CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_SEL                         ,
        PMA_REG_CDR_RX_PI_FORCE_D                  =>       CP_LANE0_PMA_REG_CDR_RX_PI_FORCE_D                           ,
        PMA_REG_CDR_LOCK_TIMER                     =>       CP_LANE0_PMA_REG_CDR_LOCK_TIMER                              ,
        PMA_REG_CDR_TURBO_MODE_TIMER               =>       CP_LANE0_PMA_REG_CDR_TURBO_MODE_TIMER                        ,
        PMA_REG_CDR_LOCK_VAL                       =>       CP_LANE0_PMA_REG_CDR_LOCK_VAL                                ,
        PMA_REG_CDR_LOCK_OW                        =>       CP_LANE0_PMA_REG_CDR_LOCK_OW                                 ,
        PMA_REG_CDR_INT_SAT_DET_EN                 =>       CP_LANE0_PMA_REG_CDR_INT_SAT_DET_EN                          ,
        PMA_REG_CDR_SAT_AUTO_DIS                   =>       CP_LANE0_PMA_REG_CDR_SAT_AUTO_DIS                            ,
        PMA_REG_CDR_GAIN_AUTO                      =>       CP_LANE0_PMA_REG_CDR_GAIN_AUTO                               ,
        PMA_REG_CDR_TURBO_GAIN_AUTO                =>       CP_LANE0_PMA_REG_CDR_TURBO_GAIN_AUTO                         ,
        PMA_REG_RX_RESERVED_171_167                =>       CP_LANE0_PMA_REG_RX_RESERVED_171_167                         ,
        PMA_REG_RX_RESERVED_175_172                =>       CP_LANE0_PMA_REG_RX_RESERVED_175_172                         ,
        PMA_REG_CDR_SAT_DET_STATUS_EN              =>       CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_EN                       ,
        PMA_REG_CDR_SAT_DET_STATUS_RESET_EN        =>       CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN                 ,
        PMA_REG_CDR_PI_CTRL_RST                    =>       CP_LANE0_PMA_REG_CDR_PI_CTRL_RST                             ,
        PMA_REG_CDR_PI_CTRL_RST_OW                 =>       CP_LANE0_PMA_REG_CDR_PI_CTRL_RST_OW                          ,
        PMA_REG_CDR_SAT_DET_RST                    =>       CP_LANE0_PMA_REG_CDR_SAT_DET_RST                             ,
        PMA_REG_CDR_SAT_DET_RST_OW                 =>       CP_LANE0_PMA_REG_CDR_SAT_DET_RST_OW                          ,
        PMA_REG_CDR_SAT_DET_STICKY_RST             =>       CP_LANE0_PMA_REG_CDR_SAT_DET_STICKY_RST                      ,
        PMA_REG_CDR_SAT_DET_STICKY_RST_OW          =>       CP_LANE0_PMA_REG_CDR_SAT_DET_STICKY_RST_OW                   ,
        PMA_REG_CDR_SIGDET_STATUS_DIS              =>       CP_LANE0_PMA_REG_CDR_SIGDET_STATUS_DIS                       ,
        PMA_REG_CDR_SAT_DET_TIMER                  =>       CP_LANE0_PMA_REG_CDR_SAT_DET_TIMER                           ,
        PMA_REG_CDR_SAT_DET_STATUS_VAL             =>       CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_VAL                      ,
        PMA_REG_CDR_SAT_DET_STATUS_OW              =>       CP_LANE0_PMA_REG_CDR_SAT_DET_STATUS_OW                       ,
        PMA_REG_CDR_TURBO_MODE_EN                  =>       CP_LANE0_PMA_REG_CDR_TURBO_MODE_EN                           ,
        PMA_REG_RX_RESERVED_190                    =>       CP_LANE0_PMA_REG_RX_RESERVED_190                             ,
        PMA_REG_RX_RESERVED_193_191                =>       CP_LANE0_PMA_REG_RX_RESERVED_193_191                         ,
        PMA_REG_CDR_STATUS_FIFO_EN                 =>       CP_LANE0_PMA_REG_CDR_STATUS_FIFO_EN                          ,
        PMA_REG_PMA_TEST_SEL                       =>       CP_LANE0_PMA_REG_PMA_TEST_SEL                                ,
        PMA_REG_OOB_COMWAKE_GAP_MIN                =>       CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MIN                         ,
        PMA_REG_OOB_COMWAKE_GAP_MAX                =>       CP_LANE0_PMA_REG_OOB_COMWAKE_GAP_MAX                         ,
        PMA_REG_OOB_COMINIT_GAP_MIN                =>       CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MIN                         ,
        PMA_REG_OOB_COMINIT_GAP_MAX                =>       CP_LANE0_PMA_REG_OOB_COMINIT_GAP_MAX                         ,
        PMA_REG_RX_RESERVED_227_226                =>       CP_LANE0_PMA_REG_RX_RESERVED_227_226                         ,
        PMA_REG_COMWAKE_STATUS_CLEAR               =>       CP_LANE0_PMA_REG_COMWAKE_STATUS_CLEAR                        ,
        PMA_REG_COMINIT_STATUS_CLEAR               =>       CP_LANE0_PMA_REG_COMINIT_STATUS_CLEAR                        ,
        PMA_REG_RX_SYNC_RST_N_EN                   =>       CP_LANE0_PMA_REG_RX_SYNC_RST_N_EN                            ,
        PMA_REG_RX_SYNC_RST_N                      =>       CP_LANE0_PMA_REG_RX_SYNC_RST_N                               ,
        PMA_REG_RX_RESERVED_233_232                =>       CP_LANE0_PMA_REG_RX_RESERVED_233_232                         ,
        PMA_REG_RX_RESERVED_235_234                =>       CP_LANE0_PMA_REG_RX_RESERVED_235_234                         ,
        PMA_REG_RX_SATA_COMINIT_OW                 =>       CP_LANE0_PMA_REG_RX_SATA_COMINIT_OW                          ,
        PMA_REG_RX_SATA_COMINIT                    =>       CP_LANE0_PMA_REG_RX_SATA_COMINIT                             ,
        PMA_REG_RX_SATA_COMWAKE_OW                 =>       CP_LANE0_PMA_REG_RX_SATA_COMWAKE_OW                          ,
        PMA_REG_RX_SATA_COMWAKE                    =>       CP_LANE0_PMA_REG_RX_SATA_COMWAKE                             ,
        PMA_REG_RX_RESERVED_241_240                =>       CP_LANE0_PMA_REG_RX_RESERVED_241_240                         ,
        PMA_REG_RX_DCC_DISABLE                     =>       CP_LANE0_PMA_REG_RX_DCC_DISABLE                              ,
        PMA_REG_RX_RESERVED_243                    =>       CP_LANE0_PMA_REG_RX_RESERVED_243                             ,
        PMA_REG_RX_SLIP_SEL_EN                     =>       CP_LANE0_PMA_REG_RX_SLIP_SEL_EN                              ,
        PMA_REG_RX_SLIP_SEL                        =>       CP_LANE0_PMA_REG_RX_SLIP_SEL                                 ,
        PMA_REG_RX_SLIP_EN                         =>       CP_LANE0_PMA_REG_RX_SLIP_EN                                  ,
        PMA_REG_RX_SIGDET_STATUS_SEL               =>       CP_LANE0_PMA_REG_RX_SIGDET_STATUS_SEL                        ,
        PMA_REG_RX_SIGDET_FSM_RST_N                =>       CP_LANE0_PMA_REG_RX_SIGDET_FSM_RST_N                         ,
        PMA_REG_RX_RESERVED_254                    =>       CP_LANE0_PMA_REG_RX_RESERVED_254                             ,
        PMA_REG_RX_SIGDET_STATUS                   =>       CP_LANE0_PMA_REG_RX_SIGDET_STATUS                            ,
        PMA_REG_RX_SIGDET_VTH                      =>       CP_LANE0_PMA_REG_RX_SIGDET_VTH                               ,
        PMA_REG_RX_SIGDET_GRM                      =>       CP_LANE0_PMA_REG_RX_SIGDET_GRM                               ,
        PMA_REG_RX_SIGDET_PULSE_EXT                =>       CP_LANE0_PMA_REG_RX_SIGDET_PULSE_EXT                         ,
        PMA_REG_RX_SIGDET_CH2_SEL                  =>       CP_LANE0_PMA_REG_RX_SIGDET_CH2_SEL                           ,
        PMA_REG_RX_SIGDET_CH2_CHK_WINDOW           =>       CP_LANE0_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW                    ,
        PMA_REG_RX_SIGDET_CHK_WINDOW_EN            =>       CP_LANE0_PMA_REG_RX_SIGDET_CHK_WINDOW_EN                     ,
        PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING      =>       CP_LANE0_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING               ,
        PMA_REG_SLIP_FIFO_INV_EN                   =>       CP_LANE0_PMA_REG_SLIP_FIFO_INV_EN                            ,
        PMA_REG_SLIP_FIFO_INV                      =>       CP_LANE0_PMA_REG_SLIP_FIFO_INV                               ,
        PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL        =>       CP_LANE0_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL                 ,
        PMA_REG_RX_SIGDET_4OOB_DET_SEL             =>       CP_LANE0_PMA_REG_RX_SIGDET_4OOB_DET_SEL                      ,
        PMA_REG_RX_RESERVED_285_283                =>       CP_LANE0_PMA_REG_RX_RESERVED_285_283                         ,
        PMA_REG_RX_RESERVED_286                    =>       CP_LANE0_PMA_REG_RX_RESERVED_286                             ,
        PMA_REG_RX_SIGDET_IC_I                     =>       CP_LANE0_PMA_REG_RX_SIGDET_IC_I                              ,
        PMA_REG_RX_OOB_DETECTOR_RESET_N_OW         =>       CP_LANE0_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW                  ,
        PMA_REG_RX_OOB_DETECTOR_RESET_N            =>       CP_LANE0_PMA_REG_RX_OOB_DETECTOR_RESET_N                     ,
        PMA_REG_RX_OOB_DETECTOR_PD_OW              =>       CP_LANE0_PMA_REG_RX_OOB_DETECTOR_PD_OW                       ,
        PMA_REG_RX_OOB_DETECTOR_PD                 =>       CP_LANE0_PMA_REG_RX_OOB_DETECTOR_PD                          ,
        PMA_REG_RX_LS_MODE_EN                      =>       CP_LANE0_PMA_REG_RX_LS_MODE_EN                               ,
        PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL          =>       CP_LANE0_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL                   ,
        PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL          =>       CP_LANE0_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL                   ,
        PMA_REG_RX_EQ1_R_SET_TOP                   =>       CP_LANE0_PMA_REG_RX_EQ1_R_SET_TOP                            ,
        PMA_REG_RX_EQ1_R_SET_FB                    =>       CP_LANE0_PMA_REG_RX_EQ1_R_SET_FB                             ,
        PMA_REG_RX_EQ1_C_SET_FB                    =>       CP_LANE0_PMA_REG_RX_EQ1_C_SET_FB                             ,
        PMA_REG_RX_EQ1_OFF                         =>       CP_LANE0_PMA_REG_RX_EQ1_OFF                                  ,
        PMA_REG_RX_EQ2_R_SET_TOP                   =>       CP_LANE0_PMA_REG_RX_EQ2_R_SET_TOP                            ,
        PMA_REG_RX_EQ2_R_SET_FB                    =>       CP_LANE0_PMA_REG_RX_EQ2_R_SET_FB                             ,
        PMA_REG_RX_EQ2_C_SET_FB                    =>       CP_LANE0_PMA_REG_RX_EQ2_C_SET_FB                             ,
        PMA_REG_RX_EQ2_OFF                         =>       CP_LANE0_PMA_REG_RX_EQ2_OFF                                  ,
        PMA_REG_EQ_DAC                             =>       CP_LANE0_PMA_REG_EQ_DAC                                      ,
        PMA_REG_RX_ICTRL_EQ                        =>       CP_LANE0_PMA_REG_RX_ICTRL_EQ                                 ,
        PMA_REG_EQ_DC_CALIB_EN                     =>       CP_LANE0_PMA_REG_EQ_DC_CALIB_EN                              ,
        PMA_REG_EQ_DC_CALIB_SEL                    =>       CP_LANE0_PMA_REG_EQ_DC_CALIB_SEL                             ,
        PMA_REG_RX_RESERVED_337_330                =>       CP_LANE0_PMA_REG_RX_RESERVED_337_330                         ,
        PMA_REG_RX_RESERVED_345_338                =>       CP_LANE0_PMA_REG_RX_RESERVED_345_338                         ,
        PMA_REG_RX_RESERVED_353_346                =>       CP_LANE0_PMA_REG_RX_RESERVED_353_346                         ,
        PMA_REG_RX_RESERVED_361_354                =>       CP_LANE0_PMA_REG_RX_RESERVED_361_354                         ,
        PMA_CTLE_CTRL_REG_I                        =>       CP_LANE0_PMA_CTLE_CTRL_REG_I                                 ,
        PMA_CTLE_REG_FORCE_SEL_I                   =>       CP_LANE0_PMA_CTLE_REG_FORCE_SEL_I                            ,
        PMA_CTLE_REG_HOLD_I                        =>       CP_LANE0_PMA_CTLE_REG_HOLD_I                                 ,
        PMA_CTLE_REG_INIT_DAC_I                    =>       CP_LANE0_PMA_CTLE_REG_INIT_DAC_I                             ,
        PMA_CTLE_REG_POLARITY_I                    =>       CP_LANE0_PMA_CTLE_REG_POLARITY_I                             ,
        PMA_CTLE_REG_SHIFTER_GAIN_I                =>       CP_LANE0_PMA_CTLE_REG_SHIFTER_GAIN_I                         ,
        PMA_CTLE_REG_THRESHOLD_I                   =>       CP_LANE0_PMA_CTLE_REG_THRESHOLD_I                            ,
        PMA_REG_RX_RES_TRIM_EN                     =>       CP_LANE0_PMA_REG_RX_RES_TRIM_EN                              ,
        PMA_REG_RX_RESERVED_393_389                =>       CP_LANE0_PMA_REG_RX_RESERVED_393_389                         ,
        PMA_CFG_RX_LANE_POWERUP                    =>       CP_LANE0_PMA_CFG_RX_LANE_POWERUP                             ,
        PMA_CFG_RX_PMA_RSTN                        =>       CP_LANE0_PMA_CFG_RX_PMA_RSTN                                 ,
        PMA_INT_PMA_RX_MASK_0                      =>       CP_LANE0_PMA_INT_PMA_RX_MASK_0                               ,
        PMA_INT_PMA_RX_CLR_0                       =>       CP_LANE0_PMA_INT_PMA_RX_CLR_0                                ,
        PMA_CFG_CTLE_ADP_RSTN                      =>       CP_LANE0_PMA_CFG_CTLE_ADP_RSTN                               ,
        PMA_REG_TX_PD                              =>       CP_LANE0_PMA_REG_TX_PD                                       ,
        PMA_REG_TX_PD_OW                           =>       CP_LANE0_PMA_REG_TX_PD_OW                                    ,
        PMA_REG_TX_MAIN_PRE_Z                      =>       CP_LANE0_PMA_REG_TX_MAIN_PRE_Z                               ,
        PMA_REG_TX_MAIN_PRE_Z_OW                   =>       CP_LANE0_PMA_REG_TX_MAIN_PRE_Z_OW                            ,
        PMA_REG_TX_BEACON_TIMER_SEL                =>       CP_LANE0_PMA_REG_TX_BEACON_TIMER_SEL                         ,
        PMA_REG_TX_RXDET_REQ_OW                    =>       CP_LANE0_PMA_REG_TX_RXDET_REQ_OW                             ,
        PMA_REG_TX_RXDET_REQ                       =>       CP_LANE0_PMA_REG_TX_RXDET_REQ                                ,
        PMA_REG_TX_BEACON_EN_OW                    =>       CP_LANE0_PMA_REG_TX_BEACON_EN_OW                             ,
        PMA_REG_TX_BEACON_EN                       =>       CP_LANE0_PMA_REG_TX_BEACON_EN                                ,
        PMA_REG_TX_EI_EN_OW                        =>       CP_LANE0_PMA_REG_TX_EI_EN_OW                                 ,
        PMA_REG_TX_EI_EN                           =>       CP_LANE0_PMA_REG_TX_EI_EN                                    ,
        PMA_REG_TX_BIT_CONV                        =>       CP_LANE0_PMA_REG_TX_BIT_CONV                                 ,
        PMA_REG_TX_RES_CAL                         =>       CP_LANE0_PMA_REG_TX_RES_CAL                                  ,
        PMA_REG_TX_RESERVED_19                     =>       CP_LANE0_PMA_REG_TX_RESERVED_19                              ,
        PMA_REG_TX_RESERVED_25_20                  =>       CP_LANE0_PMA_REG_TX_RESERVED_25_20                           ,
        PMA_REG_TX_RESERVED_33_26                  =>       CP_LANE0_PMA_REG_TX_RESERVED_33_26                           ,
        PMA_REG_TX_RESERVED_41_34                  =>       CP_LANE0_PMA_REG_TX_RESERVED_41_34                           ,
        PMA_REG_TX_RESERVED_49_42                  =>       CP_LANE0_PMA_REG_TX_RESERVED_49_42                           ,
        PMA_REG_TX_RESERVED_57_50                  =>       CP_LANE0_PMA_REG_TX_RESERVED_57_50                           ,
        PMA_REG_TX_SYNC_OW                         =>       CP_LANE0_PMA_REG_TX_SYNC_OW                                  ,
        PMA_REG_TX_SYNC                            =>       CP_LANE0_PMA_REG_TX_SYNC                                     ,
        PMA_REG_TX_PD_POST                         =>       CP_LANE0_PMA_REG_TX_PD_POST                                  ,
        PMA_REG_TX_PD_POST_OW                      =>       CP_LANE0_PMA_REG_TX_PD_POST_OW                               ,
        PMA_REG_TX_RESET_N_OW                      =>       CP_LANE0_PMA_REG_TX_RESET_N_OW                               ,
        PMA_REG_TX_RESET_N                         =>       CP_LANE0_PMA_REG_TX_RESET_N                                  ,
        PMA_REG_TX_RESERVED_64                     =>       CP_LANE0_PMA_REG_TX_RESERVED_64                              ,
        PMA_REG_TX_RESERVED_65                     =>       CP_LANE0_PMA_REG_TX_RESERVED_65                              ,
        PMA_REG_TX_BUSWIDTH_OW                     =>       CP_LANE0_PMA_REG_TX_BUSWIDTH_OW                              ,
        PMA_REG_TX_BUSWIDTH                        =>       CP_LANE0_PMA_REG_TX_BUSWIDTH                                 ,
        PMA_REG_PLL_READY_OW                       =>       CP_LANE0_PMA_REG_PLL_READY_OW                                ,
        PMA_REG_PLL_READY                          =>       CP_LANE0_PMA_REG_PLL_READY                                   ,
        PMA_REG_TX_RESERVED_72                     =>       CP_LANE0_PMA_REG_TX_RESERVED_72                              ,
        PMA_REG_TX_RESERVED_73                     =>       CP_LANE0_PMA_REG_TX_RESERVED_73                              ,
        PMA_REG_TX_RESERVED_74                     =>       CP_LANE0_PMA_REG_TX_RESERVED_74                              ,
        PMA_REG_EI_PCLK_DELAY_SEL                  =>       CP_LANE0_PMA_REG_EI_PCLK_DELAY_SEL                           ,
        PMA_REG_TX_RESERVED_77                     =>       CP_LANE0_PMA_REG_TX_RESERVED_77                              ,
        PMA_REG_TX_RESERVED_83_78                  =>       CP_LANE0_PMA_REG_TX_RESERVED_83_78                           ,
        PMA_REG_TX_RESERVED_89_84                  =>       CP_LANE0_PMA_REG_TX_RESERVED_89_84                           ,
        PMA_REG_TX_RESERVED_95_90                  =>       CP_LANE0_PMA_REG_TX_RESERVED_95_90                           ,
        PMA_REG_TX_RESERVED_101_96                 =>       CP_LANE0_PMA_REG_TX_RESERVED_101_96                          ,
        PMA_REG_TX_RESERVED_107_102                =>       CP_LANE0_PMA_REG_TX_RESERVED_107_102                         ,
        PMA_REG_TX_RESERVED_113_108                =>       CP_LANE0_PMA_REG_TX_RESERVED_113_108                         ,
        PMA_REG_TX_AMP_DAC0                        =>       CP_LANE0_PMA_REG_TX_AMP_DAC0                                 ,
        PMA_REG_TX_AMP_DAC1                        =>       CP_LANE0_PMA_REG_TX_AMP_DAC1                                 ,
        PMA_REG_TX_AMP_DAC2                        =>       CP_LANE0_PMA_REG_TX_AMP_DAC2                                 ,
        PMA_REG_TX_AMP_DAC3                        =>       CP_LANE0_PMA_REG_TX_AMP_DAC3                                 ,
        PMA_REG_TX_RESERVED_143_138                =>       CP_LANE0_PMA_REG_TX_RESERVED_143_138                         ,
        PMA_REG_TX_MARGIN                          =>       CP_LANE0_PMA_REG_TX_MARGIN                                   ,
        PMA_REG_TX_MARGIN_OW                       =>       CP_LANE0_PMA_REG_TX_MARGIN_OW                                ,
        PMA_REG_TX_RESERVED_149_148                =>       CP_LANE0_PMA_REG_TX_RESERVED_149_148                         ,
        PMA_REG_TX_RESERVED_150                    =>       CP_LANE0_PMA_REG_TX_RESERVED_150                             ,
        PMA_REG_TX_SWING                           =>       CP_LANE0_PMA_REG_TX_SWING                                    ,
        PMA_REG_TX_SWING_OW                        =>       CP_LANE0_PMA_REG_TX_SWING_OW                                 ,
        PMA_REG_TX_RESERVED_153                    =>       CP_LANE0_PMA_REG_TX_RESERVED_153                             ,
        PMA_REG_TX_RXDET_THRESHOLD                 =>       CP_LANE0_PMA_REG_TX_RXDET_THRESHOLD                          ,
        PMA_REG_TX_RESERVED_157_156                =>       CP_LANE0_PMA_REG_TX_RESERVED_157_156                         ,
        PMA_REG_TX_BEACON_OSC_CTRL                 =>       CP_LANE0_PMA_REG_TX_BEACON_OSC_CTRL                          ,
        PMA_REG_TX_RESERVED_160_159                =>       CP_LANE0_PMA_REG_TX_RESERVED_160_159                         ,
        PMA_REG_TX_RESERVED_162_161                =>       CP_LANE0_PMA_REG_TX_RESERVED_162_161                         ,
        PMA_REG_TX_TX2RX_SLPBACK_EN                =>       CP_LANE0_PMA_REG_TX_TX2RX_SLPBACK_EN                         ,
        PMA_REG_TX_PCLK_EDGE_SEL                   =>       CP_LANE0_PMA_REG_TX_PCLK_EDGE_SEL                            ,
        PMA_REG_TX_RXDET_STATUS_OW                 =>       CP_LANE0_PMA_REG_TX_RXDET_STATUS_OW                          ,
        PMA_REG_TX_RXDET_STATUS                    =>       CP_LANE0_PMA_REG_TX_RXDET_STATUS                             ,
        PMA_REG_TX_PRBS_GEN_EN                     =>       CP_LANE0_PMA_REG_TX_PRBS_GEN_EN                              ,
        PMA_REG_TX_PRBS_GEN_WIDTH_SEL              =>       CP_LANE0_PMA_REG_TX_PRBS_GEN_WIDTH_SEL                       ,
        PMA_REG_TX_PRBS_SEL                        =>       CP_LANE0_PMA_REG_TX_PRBS_SEL                                 ,
        PMA_REG_TX_UDP_DATA_7_TO_0                 =>       CP_LANE0_PMA_REG_TX_UDP_DATA_7_TO_0                          ,
        PMA_REG_TX_UDP_DATA_15_TO_8                =>       CP_LANE0_PMA_REG_TX_UDP_DATA_15_TO_8                         ,
        PMA_REG_TX_UDP_DATA_19_TO_16               =>       CP_LANE0_PMA_REG_TX_UDP_DATA_19_TO_16                        ,
        PMA_REG_TX_RESERVED_192                    =>       CP_LANE0_PMA_REG_TX_RESERVED_192                             ,
        PMA_REG_TX_FIFO_WP_CTRL                    =>       CP_LANE0_PMA_REG_TX_FIFO_WP_CTRL                             ,
        PMA_REG_TX_FIFO_EN                         =>       CP_LANE0_PMA_REG_TX_FIFO_EN                                  ,
        PMA_REG_TX_DATA_MUX_SEL                    =>       CP_LANE0_PMA_REG_TX_DATA_MUX_SEL                             ,
        PMA_REG_TX_ERR_INSERT                      =>       CP_LANE0_PMA_REG_TX_ERR_INSERT                               ,
        PMA_REG_TX_RESERVED_203_200                =>       CP_LANE0_PMA_REG_TX_RESERVED_203_200                         ,
        PMA_REG_TX_RESERVED_204                    =>       CP_LANE0_PMA_REG_TX_RESERVED_204                             ,
        PMA_REG_TX_SATA_EN                         =>       CP_LANE0_PMA_REG_TX_SATA_EN                                  ,
        PMA_REG_TX_RESERVED_207_206                =>       CP_LANE0_PMA_REG_TX_RESERVED_207_206                         ,
        PMA_REG_RATE_CHANGE_TXPCLK_ON_OW           =>       CP_LANE0_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW                    ,
        PMA_REG_RATE_CHANGE_TXPCLK_ON              =>       CP_LANE0_PMA_REG_RATE_CHANGE_TXPCLK_ON                       ,
        PMA_REG_TX_CFG_POST1                       =>       CP_LANE0_PMA_REG_TX_CFG_POST1                                ,
        PMA_REG_TX_CFG_POST2                       =>       CP_LANE0_PMA_REG_TX_CFG_POST2                                ,
        PMA_REG_TX_DEEMP                           =>       CP_LANE0_PMA_REG_TX_DEEMP                                    ,
        PMA_REG_TX_DEEMP_OW                        =>       CP_LANE0_PMA_REG_TX_DEEMP_OW                                 ,
        PMA_REG_TX_RESERVED_224_223                =>       CP_LANE0_PMA_REG_TX_RESERVED_224_223                         ,
        PMA_REG_TX_RESERVED_225                    =>       CP_LANE0_PMA_REG_TX_RESERVED_225                             ,
        PMA_REG_TX_RESERVED_229_226                =>       CP_LANE0_PMA_REG_TX_RESERVED_229_226                         ,
        PMA_REG_TX_OOB_DELAY_SEL                   =>       CP_LANE0_PMA_REG_TX_OOB_DELAY_SEL                            ,
        PMA_REG_TX_POLARITY                        =>       CP_LANE0_PMA_REG_TX_POLARITY                                 ,
        PMA_REG_ANA_TX_JTAG_DATA_O_SEL             =>       CP_LANE0_PMA_REG_ANA_TX_JTAG_DATA_O_SEL                      ,
        PMA_REG_TX_RESERVED_236                    =>       CP_LANE0_PMA_REG_TX_RESERVED_236                             ,
        PMA_REG_TX_LS_MODE_EN                      =>       CP_LANE0_PMA_REG_TX_LS_MODE_EN                               ,
        PMA_REG_TX_JTAG_MODE_EN_OW                 =>       CP_LANE0_PMA_REG_TX_JTAG_MODE_EN_OW                          ,
        PMA_REG_TX_JTAG_MODE_EN                    =>       CP_LANE0_PMA_REG_TX_JTAG_MODE_EN                             ,
        PMA_REG_RX_JTAG_MODE_EN_OW                 =>       CP_LANE0_PMA_REG_RX_JTAG_MODE_EN_OW                          ,
        PMA_REG_RX_JTAG_MODE_EN                    =>       CP_LANE0_PMA_REG_RX_JTAG_MODE_EN                             ,
        PMA_REG_RX_JTAG_OE                         =>       CP_LANE0_PMA_REG_RX_JTAG_OE                                  ,
        PMA_REG_RX_ACJTAG_VHYSTSEL                 =>       CP_LANE0_PMA_REG_RX_ACJTAG_VHYSTSEL                          ,
        PMA_REG_TX_RES_CAL_EN                      =>       CP_LANE0_PMA_REG_TX_RES_CAL_EN                               ,
        PMA_REG_RX_TERM_MODE_CTRL                  =>       CP_LANE0_PMA_REG_RX_TERM_MODE_CTRL                           ,
        PMA_REG_TX_RESERVED_251_250                =>       CP_LANE0_PMA_REG_TX_RESERVED_251_250                         ,
        PMA_REG_PLPBK_TXPCLK_EN                    =>       CP_LANE0_PMA_REG_PLPBK_TXPCLK_EN                             ,
        PMA_REG_TX_RESERVED_253                    =>       CP_LANE0_PMA_REG_TX_RESERVED_253                             ,
        PMA_REG_TX_RESERVED_254                    =>       CP_LANE0_PMA_REG_TX_RESERVED_254                             ,
        PMA_REG_TX_RESERVED_255                    =>       CP_LANE0_PMA_REG_TX_RESERVED_255                             ,
        PMA_REG_TX_RESERVED_256                    =>       CP_LANE0_PMA_REG_TX_RESERVED_256                             ,
        PMA_REG_TX_RESERVED_257                    =>       CP_LANE0_PMA_REG_TX_RESERVED_257                             ,
        PMA_REG_TX_PH_SEL                          =>       CP_LANE0_PMA_REG_TX_PH_SEL                                   ,
        PMA_REG_TX_CFG_PRE                         =>       CP_LANE0_PMA_REG_TX_CFG_PRE                                  ,
        PMA_REG_TX_CFG_MAIN                        =>       CP_LANE0_PMA_REG_TX_CFG_MAIN                                 ,
        PMA_REG_CFG_POST                           =>       CP_LANE0_PMA_REG_CFG_POST                                    ,
        PMA_REG_PD_MAIN                            =>       CP_LANE0_PMA_REG_PD_MAIN                                     ,
        PMA_REG_PD_PRE                             =>       CP_LANE0_PMA_REG_PD_PRE                                      ,
        PMA_REG_TX_LS_DATA                         =>       CP_LANE0_PMA_REG_TX_LS_DATA                                  ,
        PMA_REG_TX_DCC_BUF_SZ_SEL                  =>       CP_LANE0_PMA_REG_TX_DCC_BUF_SZ_SEL                           ,
        PMA_REG_TX_DCC_CAL_CUR_TUNE                =>       CP_LANE0_PMA_REG_TX_DCC_CAL_CUR_TUNE                         ,
        PMA_REG_TX_DCC_CAL_EN                      =>       CP_LANE0_PMA_REG_TX_DCC_CAL_EN                               ,
        PMA_REG_TX_DCC_CUR_SS                      =>       CP_LANE0_PMA_REG_TX_DCC_CUR_SS                               ,
        PMA_REG_TX_DCC_FA_CTRL                     =>       CP_LANE0_PMA_REG_TX_DCC_FA_CTRL                              ,
        PMA_REG_TX_DCC_RI_CTRL                     =>       CP_LANE0_PMA_REG_TX_DCC_RI_CTRL                              ,
        PMA_REG_ATB_SEL_2_TO_0                     =>       CP_LANE0_PMA_REG_ATB_SEL_2_TO_0                              ,
        PMA_REG_ATB_SEL_9_TO_3                     =>       CP_LANE0_PMA_REG_ATB_SEL_9_TO_3                              ,
        PMA_REG_TX_CFG_7_TO_0                      =>       CP_LANE0_PMA_REG_TX_CFG_7_TO_0                               ,
        PMA_REG_TX_CFG_15_TO_8                     =>       CP_LANE0_PMA_REG_TX_CFG_15_TO_8                              ,
        PMA_REG_TX_CFG_23_TO_16                    =>       CP_LANE0_PMA_REG_TX_CFG_23_TO_16                             ,
        PMA_REG_TX_CFG_31_TO_24                    =>       CP_LANE0_PMA_REG_TX_CFG_31_TO_24                             ,
        PMA_REG_TX_OOB_EI_EN                       =>       CP_LANE0_PMA_REG_TX_OOB_EI_EN                                ,
        PMA_REG_TX_OOB_EI_EN_OW                    =>       CP_LANE0_PMA_REG_TX_OOB_EI_EN_OW                             ,
        PMA_REG_TX_BEACON_EN_DELAYED               =>       CP_LANE0_PMA_REG_TX_BEACON_EN_DELAYED                        ,
        PMA_REG_TX_BEACON_EN_DELAYED_OW            =>       CP_LANE0_PMA_REG_TX_BEACON_EN_DELAYED_OW                     ,
        PMA_REG_TX_JTAG_DATA                       =>       CP_LANE0_PMA_REG_TX_JTAG_DATA                                ,
        PMA_REG_TX_RXDET_TIMER_SEL                 =>       CP_LANE0_PMA_REG_TX_RXDET_TIMER_SEL                          ,
        PMA_REG_TX_CFG1_7_0                        =>       CP_LANE0_PMA_REG_TX_CFG1_7_0                                 ,
        PMA_REG_TX_CFG1_15_8                       =>       CP_LANE0_PMA_REG_TX_CFG1_15_8                                ,
        PMA_REG_TX_CFG1_23_16                      =>       CP_LANE0_PMA_REG_TX_CFG1_23_16                               ,
        PMA_REG_TX_CFG1_31_24                      =>       CP_LANE0_PMA_REG_TX_CFG1_31_24                               ,
        PMA_REG_CFG_LANE_POWERUP                   =>       CP_LANE0_PMA_REG_CFG_LANE_POWERUP                            ,
        PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH        =>       CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH                 ,
        PMA_REG_CFG_TX_LANE_POWERUP_PISO           =>       CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_PISO                    ,
        PMA_REG_CFG_TX_LANE_POWERUP_DRIVER         =>       CP_LANE0_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER
    )
    port map
    (
        P_TX_SDN                          =>       PAD_TX_SDN0                              ,//PAD PIN  
        P_TX_SDP                          =>       PAD_TX_SDP0                              ,//PAD PIN  
        P_PCS_RX_MCB_STATUS               =>       PCS_RX_MCB_STATUS[0]                   ,
        P_PCS_LSM_SYNCED                  =>       PCS_LSM_SYNCED[0]                      ,
        P_CFG_READY                       =>       CFG_READY_0                           ,
        P_CFG_RDATA                       =>       CFG_RDATA_0                           ,
        P_CFG_INT                         =>       CFG_INT_0                             ,
        P_RDATA                           =>       RDATA_0                               ,
        P_RCLK2FABRIC                     =>       RCLK2FABRIC[0]                         ,
        P_TCLK2FABRIC                     =>       TCLK2FABRIC[0]                         ,
        P_RX_SIGDET_STATUS                =>       RX_SIGDET_STATUS_0                    ,
        P_RX_SATA_COMINIT                 =>       RX_SATA_COMINIT_0                     ,
        P_RX_SATA_COMWAKE                 =>       RX_SATA_COMWAKE_0                     ,
        P_RX_LS_DATA                      =>       RX_LS_DATA_0                          ,
        P_RX_READY                        =>       RX_READY_0                            ,
        P_TEST_STATUS                     =>       TEST_STATUS_0                         ,
        P_TX_RXDET_STATUS                 =>       TX_RXDET_STATUS_0                     ,
        P_CA_ALIGN_RX                     =>       CA_ALIGN_RX[0]                         ,
        P_CA_ALIGN_TX                     =>       CA_ALIGN_TX[0]                         ,
        //PMA_RCLK                          =>     PMA_RCLK                              ,
        //LANE_COUT_BUS_FORWARD           =>       LANE_COUT_BUS_FORWARD               ,
        //APATTERN_STATUS_COUT              =>     APATTERN_STATUS_COUT                  ,
        TXPCLK_PLL                        =>       TXPCLK_PLL_0                            ,
        P_RX_SDN                          =>       PAD_RX_SDN0                              ,//PAD PIN  
        P_RX_SDP                          =>       PAD_RX_SDP0                              ,//PAD PIN  
        P_RX_CLK_FR_CORE                  =>       RX0_CLK_FR_CORE                      ,
        P_RCLK2_FR_CORE                   =>       RCLK2_0_FR_CORE                       ,
        P_TX_CLK_FR_CORE                  =>       TX0_CLK_FR_CORE                      ,
        P_TCLK2_FR_CORE                   =>       TCLK2_0_FR_CORE                       ,
        P_PCS_TX_RST                      =>       PCS_TX_RST_0                          ,
        P_PCS_RX_RST                      =>       PCS_RX_RST_0                          ,
        P_PCS_CB_RST                      =>       PCS_CB_RST_0                          ,
        P_RXGEAR_SLIP                     =>       RXGEAR_SLIP_0                         ,
        P_CFG_CLK                         =>       CFG_CLK_0                             ,
        P_CFG_RST                         =>       CFG_RST_0                             ,
        P_CFG_PSEL                        =>       CFG_PSEL_0                            ,
        P_CFG_ENABLE                      =>       CFG_ENABLE_0                          ,
        P_CFG_WRITE                       =>       CFG_WRITE_0                           ,
        P_CFG_ADDR                        =>       CFG_ADDR_0                            ,
        P_CFG_WDATA                       =>       CFG_WDATA_0                           ,
        P_TDATA                           =>       TDATA_0                               ,
        P_PCS_WORD_ALIGN_EN               =>       PCS_WORD_ALIGN_EN[0]                   ,
        P_RX_POLARITY_INVERT              =>       RX_POLARITY_INVERT[0]                  ,
        P_CEB_ADETECT_EN                  =>       CEB_ADETECT_EN[0]                      ,
        P_PCS_MCB_EXT_EN                  =>       PCS_MCB_EXT_EN[0]                      ,
        P_PCS_NEAREND_LOOP                =>       PCS_NEAREND_LOOP[0]                    ,
        P_PCS_FAREND_LOOP                 =>       PCS_FAREND_LOOP[0]                     ,
        P_PMA_NEAREND_PLOOP               =>       PMA_NEAREND_PLOOP[0]                   ,
        P_PMA_NEAREND_SLOOP               =>       PMA_NEAREND_SLOOP[0]                   ,
        P_PMA_FAREND_PLOOP                =>       PMA_FAREND_PLOOP[0]                    ,
        P_LANE_PD                         =>       LANE_PD_0                             ,
        P_LANE_RST                        =>       LANE_RST_0                            ,
        P_RX_LANE_PD                      =>       RX_LANE_PD_0                          ,
        P_RX_PMA_RST                      =>       RX_PMA_RST_0                          ,
        P_CTLE_ADP_RST                    =>       CTLE_ADP_RST_0                        ,
        P_TX_DEEMP                        =>       TX_DEEMP_0                            ,
        P_TX_LS_DATA                      =>       TX_LS_DATA_0                          ,
        P_TX_BEACON_EN                    =>       TX_BEACON_EN_0                        ,
        P_TX_SWING                        =>       TX_SWING_0                            ,
        P_TX_RXDET_REQ                    =>       TX_RXDET_REQ_0                        ,
        P_TX_RATE                         =>       TX_RATE_0                             ,
        P_TX_BUSWIDTH                     =>       TX_BUSWIDTH_0                         ,
        P_TX_MARGIN                       =>       TX_MARGIN_0                           ,
        P_TX_PMA_RST                      =>       TX_PMA_RST_0                          ,
        P_TX_LANE_PD_CLKPATH              =>       TX_LANE_PD_CLKPATH_0                  ,
        P_TX_LANE_PD_PISO                 =>       TX_LANE_PD_PISO_0                     ,
        P_TX_LANE_PD_DRIVER               =>       TX_LANE_PD_DRIVER_0                   ,
        P_RX_RATE                         =>       RX_RATE_0                             ,
        P_RX_BUSWIDTH                     =>       RX_BUSWIDTH_0                         ,
        P_RX_HIGHZ                        =>       RX_HIGHZ_0                            ,
        P_CIM_CLK_ALIGNER_RX              =>       CIM_CLK_ALIGNER_RX0                  ,
        P_CIM_CLK_ALIGNER_TX              =>       CIM_CLK_ALIGNER_TX0                  ,
        P_CIM_DYN_DLY_SEL_RX              =>       CIM_DYN_DLY_SEL_RX0                  ,
        P_CIM_DYN_DLY_SEL_TX              =>       CIM_DYN_DLY_SEL_TX0                  ,
        P_CIM_START_ALIGN_RX              =>       CIM_START_ALIGN_RX0                  ,
        P_CIM_START_ALIGN_TX              =>       CIM_START_ALIGN_TX0                  ,
        //MCB_RCLK                          =>     MCB_RCLK                              ,
        SYNC                              =>       SYNC_CH0                                  ,
        RATE_CHANGE                       =>       RATE_CHANGE_CH0                           ,
        PLL_LOCK_SEL                      =>       PLL_LOCK_SEL_0                          ,
        //LANE_CIN_BUS_FORWARD               =>    LANE_CIN_BUS_FORWARD                   ,
        //APATTERN_STATUS_CIN               =>     APATTERN_STATUS_CIN                   ,
        CLK_TXP                           =>       CLK_TXP_0                               ,
        CLK_TXN                           =>       CLK_TXN_0                               ,
        CLK_RX0                           =>       CLK_RX0_0                               ,
        CLK_RX90                          =>       CLK_RX90_0                              ,
        CLK_RX180                         =>       CLK_RX180_0                             ,
        CLK_RX270                         =>       CLK_RX270_0                             ,
        PLL_PD_I                          =>       PLL_PD_I_0                              ,
        PLL_RESET_I                       =>       PLL_RESET_I_0                           ,
        PLL_REFCLK_I                      =>       PLL_REFCLK_I_0                          //,
        //PLL_RES_TRIM_I                    =>     PLL_RES_TRIM_I                        ,
        //HSST_RST                          =>       HSST_RST
    );
    operator V_HSSTLP_LANE HSSTLP_LANE_LANE1
    parameter map
    (
        MUX_BIAS                                    =>     CP_LANE1_MUX_BIAS                                            ,
        PD_CLK                                      =>     CP_LANE1_PD_CLK                                              ,
        REG_SYNC                                    =>     CP_LANE1_REG_SYNC                                            ,
        REG_SYNC_OW                                 =>     CP_LANE1_REG_SYNC_OW                                         ,
        PLL_LOCK_OW                                 =>     CP_LANE1_PLL_LOCK_OW                                         ,
        PLL_LOCK_OW_EN                              =>     CP_LANE1_PLL_LOCK_OW_EN                                      ,
        PCS_SLAVE                              =>     CP_LANE1_PCS_SLAVE                                           ,
        PCS_BYPASS_WORD_ALIGN                       =>     CP_LANE1_PCS_BYPASS_WORD_ALIGN                               ,
        PCS_BYPASS_DENC                             =>     CP_LANE1_PCS_BYPASS_DENC                                     ,
        PCS_BYPASS_BONDING                          =>     CP_LANE1_PCS_BYPASS_BONDING                                  ,
        PCS_BYPASS_CTC                              =>     CP_LANE1_PCS_BYPASS_CTC                                      ,
        PCS_BYPASS_GEAR                             =>     CP_LANE1_PCS_BYPASS_GEAR                                     ,
        PCS_BYPASS_BRIDGE                           =>     CP_LANE1_PCS_BYPASS_BRIDGE                                   ,
        PCS_BYPASS_BRIDGE_FIFO                      =>     CP_LANE1_PCS_BYPASS_BRIDGE_FIFO                              ,
        PCS_DATA_MODE                               =>     CP_LANE1_PCS_DATA_MODE                                       ,
        PCS_RX_POLARITY_INV                         =>     CP_LANE1_PCS_RX_POLARITY_INV                                 ,
        PCS_ALIGN_MODE                              =>     CP_LANE1_PCS_ALIGN_MODE                                      ,
        PCS_SAMP_16B                                =>     CP_LANE1_PCS_SAMP_16B                                        ,
        PCS_FARLP_PWR_REDUCTION                     =>     CP_LANE1_PCS_FARLP_PWR_REDUCTION                             ,
        PCS_COMMA_REG0                              =>     CP_LANE1_PCS_COMMA_REG0                                      ,
        PCS_COMMA_MASK                              =>     CP_LANE1_PCS_COMMA_MASK                                      ,
        PCS_CEB_MODE                                =>     CP_LANE1_PCS_CEB_MODE                                        ,
        PCS_CTC_MODE                                =>     CP_LANE1_PCS_CTC_MODE                                        ,
        PCS_A_REG                                   =>     CP_LANE1_PCS_A_REG                                           ,
        PCS_GE_AUTO_EN                              =>     CP_LANE1_PCS_GE_AUTO_EN                                      ,
        PCS_SKIP_REG0                               =>     CP_LANE1_PCS_SKIP_REG0                                       ,
        PCS_SKIP_REG1                               =>     CP_LANE1_PCS_SKIP_REG1                                       ,
        PCS_SKIP_REG2                               =>     CP_LANE1_PCS_SKIP_REG2                                       ,
        PCS_SKIP_REG3                               =>     CP_LANE1_PCS_SKIP_REG3                                       ,
        PCS_DEC_DUAL                                =>     CP_LANE1_PCS_DEC_DUAL                                        ,
        PCS_SPLIT                                   =>     CP_LANE1_PCS_SPLIT                                           ,
        PCS_FIFOFLAG_CTC                            =>     CP_LANE1_PCS_FIFOFLAG_CTC                                    ,
        PCS_COMMA_DET_MODE                          =>     CP_LANE1_PCS_COMMA_DET_MODE                                  ,
        PCS_ERRDETECT_SILENCE                       =>     CP_LANE1_PCS_ERRDETECT_SILENCE                               ,
        PCS_PMA_RCLK_POLINV                         =>     CP_LANE1_PCS_PMA_RCLK_POLINV                                 ,
        PCS_PCS_RCLK_SEL                            =>     CP_LANE1_PCS_PCS_RCLK_SEL                                    ,
        PCS_CB_RCLK_SEL                             =>     CP_LANE1_PCS_CB_RCLK_SEL                                     ,
        PCS_AFTER_CTC_RCLK_SEL                      =>     CP_LANE1_PCS_AFTER_CTC_RCLK_SEL                              ,
        PCS_RCLK_POLINV                             =>     CP_LANE1_PCS_RCLK_POLINV                                     ,
        PCS_BRIDGE_RCLK_SEL                         =>     CP_LANE1_PCS_BRIDGE_RCLK_SEL                                 ,
        PCS_PCS_RCLK_EN                             =>     CP_LANE1_PCS_PCS_RCLK_EN                                     ,
        PCS_CB_RCLK_EN                              =>     CP_LANE1_PCS_CB_RCLK_EN                                      ,
        PCS_AFTER_CTC_RCLK_EN                       =>     CP_LANE1_PCS_AFTER_CTC_RCLK_EN                               ,
        PCS_AFTER_CTC_RCLK_EN_GB                    =>     CP_LANE1_PCS_AFTER_CTC_RCLK_EN_GB                            ,
        PCS_PCS_RX_RSTN                             =>     CP_LANE1_PCS_PCS_RX_RSTN                                     ,
        PCS_PCIE_SLAVE                              =>     CP_LANE1_PCS_PCIE_SLAVE                                      ,
        PCS_RX_64B66B_67B                           =>     CP_LANE1_PCS_RX_64B66B_67B                                   ,
        PCS_RX_BRIDGE_CLK_POLINV                    =>     CP_LANE1_PCS_RX_BRIDGE_CLK_POLINV                            ,
        PCS_PCS_CB_RSTN                             =>     CP_LANE1_PCS_PCS_CB_RSTN                                     ,
        PCS_TX_BRIDGE_GEAR_SEL                      =>     CP_LANE1_PCS_TX_BRIDGE_GEAR_SEL                              ,
        PCS_TX_BYPASS_BRIDGE_UINT                   =>     CP_LANE1_PCS_TX_BYPASS_BRIDGE_UINT                           ,
        PCS_TX_BYPASS_BRIDGE_FIFO                   =>     CP_LANE1_PCS_TX_BYPASS_BRIDGE_FIFO                           ,
        PCS_TX_BYPASS_GEAR                          =>     CP_LANE1_PCS_TX_BYPASS_GEAR                                  ,
        PCS_TX_BYPASS_ENC                           =>     CP_LANE1_PCS_TX_BYPASS_ENC                                   ,
        PCS_TX_BYPASS_BIT_SLIP                      =>     CP_LANE1_PCS_TX_BYPASS_BIT_SLIP                              ,
        PCS_TX_GEAR_SPLIT                           =>     CP_LANE1_PCS_TX_GEAR_SPLIT                                   ,
        PCS_TX_DRIVE_REG_MODE                       =>     CP_LANE1_PCS_TX_DRIVE_REG_MODE                               ,
        PCS_TX_BIT_SLIP_CYCLES                      =>     CP_LANE1_PCS_TX_BIT_SLIP_CYCLES                              ,
        PCS_INT_TX_MASK_0                           =>     CP_LANE1_PCS_INT_TX_MASK_0                                   ,
        PCS_INT_TX_MASK_1                           =>     CP_LANE1_PCS_INT_TX_MASK_1                                   ,
        PCS_INT_TX_MASK_2                           =>     CP_LANE1_PCS_INT_TX_MASK_2                                   ,
        PCS_INT_TX_CLR_0                            =>     CP_LANE1_PCS_INT_TX_CLR_0                                    ,
        PCS_INT_TX_CLR_1                            =>     CP_LANE1_PCS_INT_TX_CLR_1                                    ,
        PCS_INT_TX_CLR_2                            =>     CP_LANE1_PCS_INT_TX_CLR_2                                    ,
        PCS_TX_PMA_TCLK_POLINV                      =>     CP_LANE1_PCS_TX_PMA_TCLK_POLINV                              ,
        PCS_TX_PCS_CLK_EN_SEL                       =>     CP_LANE1_PCS_TX_PCS_CLK_EN_SEL                               ,
        PCS_TX_BRIDGE_TCLK_SEL                      =>     CP_LANE1_PCS_TX_BRIDGE_TCLK_SEL                              ,
        PCS_TX_TCLK_POLINV                          =>     CP_LANE1_PCS_TX_TCLK_POLINV                                  ,
        PCS_PCS_TCLK_SEL                            =>     CP_LANE1_PCS_PCS_TCLK_SEL                                    ,
        PCS_TX_PCS_TX_RSTN                          =>     CP_LANE1_PCS_TX_PCS_TX_RSTN                                  ,
        PCS_TX_SLAVE                                =>     CP_LANE1_PCS_TX_SLAVE                                        ,
        PCS_TX_GEAR_CLK_EN_SEL                      =>     CP_LANE1_PCS_TX_GEAR_CLK_EN_SEL                              ,
        PCS_DATA_WIDTH_MODE                         =>     CP_LANE1_PCS_DATA_WIDTH_MODE                                 ,
        PCS_TX_64B66B_67B                           =>     CP_LANE1_PCS_TX_64B66B_67B                                   ,
        PCS_GEAR_TCLK_SEL                           =>     CP_LANE1_PCS_GEAR_TCLK_SEL                                   ,
        PCS_TX_TCLK2FABRIC_SEL                      =>     CP_LANE1_PCS_TX_TCLK2FABRIC_SEL                              ,
        PCS_TX_OUTZZ                                =>     CP_LANE1_PCS_TX_OUTZZ                                        ,
        PCS_ENC_DUAL                                =>     CP_LANE1_PCS_ENC_DUAL                                        ,
        PCS_TX_BITSLIP_DATA_MODE                    =>     CP_LANE1_PCS_TX_BITSLIP_DATA_MODE                            ,
        PCS_TX_BRIDGE_CLK_POLINV                    =>     CP_LANE1_PCS_TX_BRIDGE_CLK_POLINV                            ,
        PCS_COMMA_REG1                              =>     CP_LANE1_PCS_COMMA_REG1                                      ,
        PCS_RAPID_IMAX                              =>     CP_LANE1_PCS_RAPID_IMAX                                      ,
        PCS_RAPID_VMIN_1                            =>     CP_LANE1_PCS_RAPID_VMIN_1                                    ,
        PCS_RAPID_VMIN_2                            =>     CP_LANE1_PCS_RAPID_VMIN_2                                    ,
        PCS_RX_PRBS_MODE                            =>     CP_LANE1_PCS_RX_PRBS_MODE                                    ,
        PCS_RX_ERRCNT_CLR                           =>     CP_LANE1_PCS_RX_ERRCNT_CLR                                   ,
        PCS_PRBS_ERR_LPBK                           =>     CP_LANE1_PCS_PRBS_ERR_LPBK                                   ,
        PCS_TX_PRBS_MODE                            =>     CP_LANE1_PCS_TX_PRBS_MODE                                    ,
        PCS_TX_INSERT_ER                            =>     CP_LANE1_PCS_TX_INSERT_ER                                    ,
        PCS_ENABLE_PRBS_GEN                         =>     CP_LANE1_PCS_ENABLE_PRBS_GEN                                 ,
        PCS_DEFAULT_RADDR                           =>     CP_LANE1_PCS_DEFAULT_RADDR                                   ,
        PCS_MASTER_CHECK_OFFSET                     =>     CP_LANE1_PCS_MASTER_CHECK_OFFSET                             ,
        PCS_DELAY_SET                               =>     CP_LANE1_PCS_DELAY_SET                                       ,
        PCS_SEACH_OFFSET                            =>     CP_LANE1_PCS_SEACH_OFFSET                                    ,
        PCS_CEB_RAPIDLS_MMAX                        =>     CP_LANE1_PCS_CEB_RAPIDLS_MMAX                                ,
        PCS_CTC_AFULL                               =>     CP_LANE1_PCS_CTC_AFULL                                       ,
        PCS_CTC_AEMPTY                              =>     CP_LANE1_PCS_CTC_AEMPTY                                      ,
        PCS_CTC_CONTI_SKP_SET                       =>     CP_LANE1_PCS_CTC_CONTI_SKP_SET                               ,
        PCS_FAR_LOOP                                =>     CP_LANE1_PCS_FAR_LOOP                                        ,
        PCS_NEAR_LOOP                               =>     CP_LANE1_PCS_NEAR_LOOP                                       ,
        PCS_PMA_TX2RX_PLOOP_EN                      =>     CP_LANE1_PCS_PMA_TX2RX_PLOOP_EN                              ,
        PCS_PMA_TX2RX_SLOOP_EN                      =>     CP_LANE1_PCS_PMA_TX2RX_SLOOP_EN                              ,
        PCS_PMA_RX2TX_PLOOP_EN                      =>     CP_LANE1_PCS_PMA_RX2TX_PLOOP_EN                              ,
        PCS_INT_RX_MASK_0                           =>     CP_LANE1_PCS_INT_RX_MASK_0                                   ,
        PCS_INT_RX_MASK_1                           =>     CP_LANE1_PCS_INT_RX_MASK_1                                   ,
        PCS_INT_RX_MASK_2                           =>     CP_LANE1_PCS_INT_RX_MASK_2                                   ,
        PCS_INT_RX_MASK_3                           =>     CP_LANE1_PCS_INT_RX_MASK_3                                   ,
        PCS_INT_RX_MASK_4                           =>     CP_LANE1_PCS_INT_RX_MASK_4                                   ,
        PCS_INT_RX_MASK_5                           =>     CP_LANE1_PCS_INT_RX_MASK_5                                   ,
        PCS_INT_RX_MASK_6                           =>     CP_LANE1_PCS_INT_RX_MASK_6                                   ,
        PCS_INT_RX_MASK_7                           =>     CP_LANE1_PCS_INT_RX_MASK_7                                   ,
        PCS_INT_RX_CLR_0                            =>     CP_LANE1_PCS_INT_RX_CLR_0                                    ,
        PCS_INT_RX_CLR_1                            =>     CP_LANE1_PCS_INT_RX_CLR_1                                    ,
        PCS_INT_RX_CLR_2                            =>     CP_LANE1_PCS_INT_RX_CLR_2                                    ,
        PCS_INT_RX_CLR_3                            =>     CP_LANE1_PCS_INT_RX_CLR_3                                    ,
        PCS_INT_RX_CLR_4                            =>     CP_LANE1_PCS_INT_RX_CLR_4                                    ,
        PCS_INT_RX_CLR_5                            =>     CP_LANE1_PCS_INT_RX_CLR_5                                    ,
        PCS_INT_RX_CLR_6                            =>     CP_LANE1_PCS_INT_RX_CLR_6                                    ,
        PCS_INT_RX_CLR_7                            =>     CP_LANE1_PCS_INT_RX_CLR_7                                    ,
        PCS_CA_RSTN_RX                              =>     CP_LANE1_PCS_CA_RSTN_RX                                      ,
        PCS_CA_DYN_DLY_EN_RX                        =>     CP_LANE1_PCS_CA_DYN_DLY_EN_RX                                ,
        PCS_CA_DYN_DLY_SEL_RX                       =>     CP_LANE1_PCS_CA_DYN_DLY_SEL_RX                               ,
        PCS_CA_RX                                   =>     CP_LANE1_PCS_CA_RX                                           ,
        PCS_CA_RSTN_TX                              =>     CP_LANE1_PCS_CA_RSTN_TX                                      ,
        PCS_CA_DYN_DLY_EN_TX                        =>     CP_LANE1_PCS_CA_DYN_DLY_EN_TX                                ,
        PCS_CA_DYN_DLY_SEL_TX                       =>     CP_LANE1_PCS_CA_DYN_DLY_SEL_TX                               ,
        PCS_CA_TX                                   =>     CP_LANE1_PCS_CA_TX                                           ,
        PCS_RXPRBS_PWR_REDUCTION                    =>     CP_LANE1_PCS_RXPRBS_PWR_REDUCTION                            ,
        PCS_WDALIGN_PWR_REDUCTION                   =>     CP_LANE1_PCS_WDALIGN_PWR_REDUCTION                           ,
        PCS_RXDEC_PWR_REDUCTION                     =>     CP_LANE1_PCS_RXDEC_PWR_REDUCTION                             ,
        PCS_RXCB_PWR_REDUCTION                      =>     CP_LANE1_PCS_RXCB_PWR_REDUCTION                              ,
        PCS_RXCTC_PWR_REDUCTION                     =>     CP_LANE1_PCS_RXCTC_PWR_REDUCTION                             ,
        PCS_RXGEAR_PWR_REDUCTION                    =>     CP_LANE1_PCS_RXGEAR_PWR_REDUCTION                            ,
        PCS_RXBRG_PWR_REDUCTION                     =>     CP_LANE1_PCS_RXBRG_PWR_REDUCTION                             ,
        PCS_RXTEST_PWR_REDUCTION                    =>     CP_LANE1_PCS_RXTEST_PWR_REDUCTION                            ,
        PCS_TXBRG_PWR_REDUCTION                    =>     CP_LANE1_PCS_TXBRG_PWR_REDUCTION                            ,
        PCS_TXGEAR_PWR_REDUCTION                   =>     CP_LANE1_PCS_TXGEAR_PWR_REDUCTION                           ,
        PCS_TXENC_PWR_REDUCTION                    =>     CP_LANE1_PCS_TXENC_PWR_REDUCTION                            ,
        PCS_TXBSLP_PWR_REDUCTION                   =>     CP_LANE1_PCS_TXBSLP_PWR_REDUCTION                           ,
        PCS_TXPRBS_PWR_REDUCTION                   =>     CP_LANE1_PCS_TXPRBS_PWR_REDUCTION                           ,
        PMA_REG_RX_PD                               =>     CP_LANE1_PMA_REG_RX_PD                                       ,
        PMA_REG_RX_PD_EN                            =>     CP_LANE1_PMA_REG_RX_PD_EN                                    ,
        PMA_REG_RX_RESERVED_2                       =>     CP_LANE1_PMA_REG_RX_RESERVED_2                               ,
        PMA_REG_RX_RESERVED_3                       =>     CP_LANE1_PMA_REG_RX_RESERVED_3                               ,
        PMA_REG_RX_DATAPATH_PD                      =>     CP_LANE1_PMA_REG_RX_DATAPATH_PD                              ,
        PMA_REG_RX_DATAPATH_PD_EN                   =>     CP_LANE1_PMA_REG_RX_DATAPATH_PD_EN                           ,
        PMA_REG_RX_SIGDET_PD                        =>     CP_LANE1_PMA_REG_RX_SIGDET_PD                                ,
        PMA_REG_RX_SIGDET_PD_EN                     =>     CP_LANE1_PMA_REG_RX_SIGDET_PD_EN                             ,
        PMA_REG_RX_DCC_RST_N                        =>     CP_LANE1_PMA_REG_RX_DCC_RST_N                                ,
        PMA_REG_RX_DCC_RST_N_EN                     =>     CP_LANE1_PMA_REG_RX_DCC_RST_N_EN                             ,
        PMA_REG_RX_CDR_RST_N                        =>     CP_LANE1_PMA_REG_RX_CDR_RST_N                                ,
        PMA_REG_RX_CDR_RST_N_EN                     =>     CP_LANE1_PMA_REG_RX_CDR_RST_N_EN                             ,
        PMA_REG_RX_SIGDET_RST_N                     =>     CP_LANE1_PMA_REG_RX_SIGDET_RST_N                             ,
        PMA_REG_RX_SIGDET_RST_N_EN                  =>     CP_LANE1_PMA_REG_RX_SIGDET_RST_N_EN                          ,
        PMA_REG_RXPCLK_SLIP                         =>     CP_LANE1_PMA_REG_RXPCLK_SLIP                                 ,
        PMA_REG_RXPCLK_SLIP_OW                      =>     CP_LANE1_PMA_REG_RXPCLK_SLIP_OW                              ,
        PMA_REG_RX_PCLKSWITCH_RST_N                 =>     CP_LANE1_PMA_REG_RX_PCLKSWITCH_RST_N                         ,
        PMA_REG_RX_PCLKSWITCH_RST_N_EN              =>     CP_LANE1_PMA_REG_RX_PCLKSWITCH_RST_N_EN                      ,
        PMA_REG_RX_PCLKSWITCH                       =>     CP_LANE1_PMA_REG_RX_PCLKSWITCH                               ,
        PMA_REG_RX_PCLKSWITCH_EN                    =>     CP_LANE1_PMA_REG_RX_PCLKSWITCH_EN                            ,
        PMA_REG_RX_HIGHZ                            =>     CP_LANE1_PMA_REG_RX_HIGHZ                                    ,
        PMA_REG_RX_HIGHZ_EN                         =>     CP_LANE1_PMA_REG_RX_HIGHZ_EN                                 ,
        PMA_REG_RX_SIGDET_CLK_WINDOW                =>     CP_LANE1_PMA_REG_RX_SIGDET_CLK_WINDOW                        ,
        PMA_REG_RX_SIGDET_CLK_WINDOW_OW             =>     CP_LANE1_PMA_REG_RX_SIGDET_CLK_WINDOW_OW                     ,
        PMA_REG_RX_PD_BIAS_RX                       =>     CP_LANE1_PMA_REG_RX_PD_BIAS_RX                               ,
        PMA_REG_RX_PD_BIAS_RX_OW                    =>     CP_LANE1_PMA_REG_RX_PD_BIAS_RX_OW                            ,
        PMA_REG_RX_RESET_N                          =>     CP_LANE1_PMA_REG_RX_RESET_N                                  ,
        PMA_REG_RX_RESET_N_OW                       =>     CP_LANE1_PMA_REG_RX_RESET_N_OW                               ,
        PMA_REG_RX_RESERVED_29_28                   =>     CP_LANE1_PMA_REG_RX_RESERVED_29_28                           ,
        PMA_REG_RX_BUSWIDTH                         =>     CP_LANE1_PMA_REG_RX_BUSWIDTH                                 ,
        PMA_REG_RX_BUSWIDTH_EN                      =>     CP_LANE1_PMA_REG_RX_BUSWIDTH_EN                              ,
        PMA_REG_RX_RATE                             =>     CP_LANE1_PMA_REG_RX_RATE                                     ,
        PMA_REG_RX_RESERVED_36                      =>     CP_LANE1_PMA_REG_RX_RESERVED_36                              ,
        PMA_REG_RX_RATE_EN                          =>     CP_LANE1_PMA_REG_RX_RATE_EN                                  ,
        PMA_REG_RX_RES_TRIM                         =>     CP_LANE1_PMA_REG_RX_RES_TRIM                                 ,
        PMA_REG_RX_RESERVED_44                      =>     CP_LANE1_PMA_REG_RX_RESERVED_44                              ,
        PMA_REG_RX_RESERVED_45                      =>     CP_LANE1_PMA_REG_RX_RESERVED_45                              ,
        PMA_REG_RX_SIGDET_STATUS_EN                 =>     CP_LANE1_PMA_REG_RX_SIGDET_STATUS_EN                         ,
        PMA_REG_RX_RESERVED_48_47                   =>     CP_LANE1_PMA_REG_RX_RESERVED_48_47                           ,
        PMA_REG_RX_ICTRL_SIGDET                     =>     CP_LANE1_PMA_REG_RX_ICTRL_SIGDET                             ,
        PMA_REG_CDR_READY_THD                       =>     CP_LANE1_PMA_REG_CDR_READY_THD                               ,
        PMA_REG_RX_RESERVED_65                      =>     CP_LANE1_PMA_REG_RX_RESERVED_65                              ,
        PMA_REG_RX_PCLK_EDGE_SEL                    =>     CP_LANE1_PMA_REG_RX_PCLK_EDGE_SEL                            ,
        PMA_REG_RX_PIBUF_IC                         =>     CP_LANE1_PMA_REG_RX_PIBUF_IC                                 ,
        PMA_REG_RX_RESERVED_69                      =>     CP_LANE1_PMA_REG_RX_RESERVED_69                              ,
        PMA_REG_RX_DCC_IC_RX                        =>     CP_LANE1_PMA_REG_RX_DCC_IC_RX                                ,
        PMA_REG_CDR_READY_CHECK_CTRL                =>     CP_LANE1_PMA_REG_CDR_READY_CHECK_CTRL                        ,
        PMA_REG_RX_ICTRL_TRX                        =>     CP_LANE1_PMA_REG_RX_ICTRL_TRX                                ,
        PMA_REG_RX_RESERVED_77_76                   =>     CP_LANE1_PMA_REG_RX_RESERVED_77_76                           ,
        PMA_REG_RX_RESERVED_79_78                   =>     CP_LANE1_PMA_REG_RX_RESERVED_79_78                           ,
        PMA_REG_RX_RESERVED_81_80                   =>     CP_LANE1_PMA_REG_RX_RESERVED_81_80                           ,
        PMA_REG_RX_ICTRL_PIBUF                      =>     CP_LANE1_PMA_REG_RX_ICTRL_PIBUF                              ,
        PMA_REG_RX_ICTRL_PI                         =>     CP_LANE1_PMA_REG_RX_ICTRL_PI                                 ,
        PMA_REG_RX_ICTRL_DCC                        =>     CP_LANE1_PMA_REG_RX_ICTRL_DCC                                ,
        PMA_REG_RX_RESERVED_89_88                   =>     CP_LANE1_PMA_REG_RX_RESERVED_89_88                           ,
        PMA_REG_TX_RATE                             =>     CP_LANE1_PMA_REG_TX_RATE                                     ,
        PMA_REG_RX_RESERVED_92                      =>     CP_LANE1_PMA_REG_RX_RESERVED_92                              ,
        PMA_REG_TX_RATE_EN                          =>     CP_LANE1_PMA_REG_TX_RATE_EN                                  ,
        PMA_REG_RX_TX2RX_PLPBK_RST_N                =>     CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_RST_N                        ,
        PMA_REG_RX_TX2RX_PLPBK_RST_N_EN             =>     CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN                     ,
        PMA_REG_RX_TX2RX_PLPBK_EN                   =>     CP_LANE1_PMA_REG_RX_TX2RX_PLPBK_EN                           ,
        PMA_REG_TXCLK_SEL                           =>     CP_LANE1_PMA_REG_TXCLK_SEL                                   ,
        PMA_REG_RX_DATA_POLARITY                    =>     CP_LANE1_PMA_REG_RX_DATA_POLARITY                            ,
        PMA_REG_RX_ERR_INSERT                       =>     CP_LANE1_PMA_REG_RX_ERR_INSERT                               ,
        PMA_REG_UDP_CHK_EN                          =>     CP_LANE1_PMA_REG_UDP_CHK_EN                                  ,
        PMA_REG_PRBS_SEL                            =>     CP_LANE1_PMA_REG_PRBS_SEL                                    ,
        PMA_REG_PRBS_CHK_EN                         =>     CP_LANE1_PMA_REG_PRBS_CHK_EN                                 ,
        PMA_REG_PRBS_CHK_WIDTH_SEL                  =>     CP_LANE1_PMA_REG_PRBS_CHK_WIDTH_SEL                          ,
        PMA_REG_BIST_CHK_PAT_SEL                    =>     CP_LANE1_PMA_REG_BIST_CHK_PAT_SEL                            ,
        PMA_REG_LOAD_ERR_CNT                        =>     CP_LANE1_PMA_REG_LOAD_ERR_CNT                                ,
        PMA_REG_CHK_COUNTER_EN                      =>     CP_LANE1_PMA_REG_CHK_COUNTER_EN                              ,
        PMA_REG_CDR_PROP_GAIN                       =>     CP_LANE1_PMA_REG_CDR_PROP_GAIN                               ,
        PMA_REG_CDR_PROP_TURBO_GAIN                 =>     CP_LANE1_PMA_REG_CDR_PROP_TURBO_GAIN                         ,
        PMA_REG_CDR_INT_GAIN                        =>     CP_LANE1_PMA_REG_CDR_INT_GAIN                                ,
        PMA_REG_CDR_INT_TURBO_GAIN                  =>     CP_LANE1_PMA_REG_CDR_INT_TURBO_GAIN                          ,
        PMA_REG_CDR_INT_SAT_MAX                     =>     CP_LANE1_PMA_REG_CDR_INT_SAT_MAX                             ,
        PMA_REG_CDR_INT_SAT_MIN                     =>     CP_LANE1_PMA_REG_CDR_INT_SAT_MIN                             ,
        PMA_REG_CDR_INT_RST                         =>     CP_LANE1_PMA_REG_CDR_INT_RST                                 ,
        PMA_REG_CDR_INT_RST_OW                      =>     CP_LANE1_PMA_REG_CDR_INT_RST_OW                              ,
        PMA_REG_CDR_PROP_RST                        =>     CP_LANE1_PMA_REG_CDR_PROP_RST                                ,
        PMA_REG_CDR_PROP_RST_OW                     =>     CP_LANE1_PMA_REG_CDR_PROP_RST_OW                             ,
        PMA_REG_CDR_LOCK_RST                        =>     CP_LANE1_PMA_REG_CDR_LOCK_RST                                ,
        PMA_REG_CDR_LOCK_RST_OW                     =>     CP_LANE1_PMA_REG_CDR_LOCK_RST_OW                             ,
        PMA_REG_CDR_RX_PI_FORCE_SEL                 =>     CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_SEL                         ,
        PMA_REG_CDR_RX_PI_FORCE_D                   =>     CP_LANE1_PMA_REG_CDR_RX_PI_FORCE_D                           ,
        PMA_REG_CDR_LOCK_TIMER                      =>     CP_LANE1_PMA_REG_CDR_LOCK_TIMER                              ,
        PMA_REG_CDR_TURBO_MODE_TIMER                =>     CP_LANE1_PMA_REG_CDR_TURBO_MODE_TIMER                        ,
        PMA_REG_CDR_LOCK_VAL                        =>     CP_LANE1_PMA_REG_CDR_LOCK_VAL                                ,
        PMA_REG_CDR_LOCK_OW                         =>     CP_LANE1_PMA_REG_CDR_LOCK_OW                                 ,
        PMA_REG_CDR_INT_SAT_DET_EN                  =>     CP_LANE1_PMA_REG_CDR_INT_SAT_DET_EN                          ,
        PMA_REG_CDR_SAT_AUTO_DIS                    =>     CP_LANE1_PMA_REG_CDR_SAT_AUTO_DIS                            ,
        PMA_REG_CDR_GAIN_AUTO                       =>     CP_LANE1_PMA_REG_CDR_GAIN_AUTO                               ,
        PMA_REG_CDR_TURBO_GAIN_AUTO                 =>     CP_LANE1_PMA_REG_CDR_TURBO_GAIN_AUTO                         ,
        PMA_REG_RX_RESERVED_171_167                 =>     CP_LANE1_PMA_REG_RX_RESERVED_171_167                         ,
        PMA_REG_RX_RESERVED_175_172                 =>     CP_LANE1_PMA_REG_RX_RESERVED_175_172                         ,
        PMA_REG_CDR_SAT_DET_STATUS_EN               =>     CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_EN                       ,
        PMA_REG_CDR_SAT_DET_STATUS_RESET_EN         =>     CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN                 ,
        PMA_REG_CDR_PI_CTRL_RST                     =>     CP_LANE1_PMA_REG_CDR_PI_CTRL_RST                             ,
        PMA_REG_CDR_PI_CTRL_RST_OW                  =>     CP_LANE1_PMA_REG_CDR_PI_CTRL_RST_OW                          ,
        PMA_REG_CDR_SAT_DET_RST                     =>     CP_LANE1_PMA_REG_CDR_SAT_DET_RST                             ,
        PMA_REG_CDR_SAT_DET_RST_OW                  =>     CP_LANE1_PMA_REG_CDR_SAT_DET_RST_OW                          ,
        PMA_REG_CDR_SAT_DET_STICKY_RST              =>     CP_LANE1_PMA_REG_CDR_SAT_DET_STICKY_RST                      ,
        PMA_REG_CDR_SAT_DET_STICKY_RST_OW           =>     CP_LANE1_PMA_REG_CDR_SAT_DET_STICKY_RST_OW                   ,
        PMA_REG_CDR_SIGDET_STATUS_DIS               =>     CP_LANE1_PMA_REG_CDR_SIGDET_STATUS_DIS                       ,
        PMA_REG_CDR_SAT_DET_TIMER                   =>     CP_LANE1_PMA_REG_CDR_SAT_DET_TIMER                           ,
        PMA_REG_CDR_SAT_DET_STATUS_VAL              =>     CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_VAL                      ,
        PMA_REG_CDR_SAT_DET_STATUS_OW               =>     CP_LANE1_PMA_REG_CDR_SAT_DET_STATUS_OW                       ,
        PMA_REG_CDR_TURBO_MODE_EN                   =>     CP_LANE1_PMA_REG_CDR_TURBO_MODE_EN                           ,
        PMA_REG_RX_RESERVED_190                     =>     CP_LANE1_PMA_REG_RX_RESERVED_190                             ,
        PMA_REG_RX_RESERVED_193_191                 =>     CP_LANE1_PMA_REG_RX_RESERVED_193_191                         ,
        PMA_REG_CDR_STATUS_FIFO_EN                  =>     CP_LANE1_PMA_REG_CDR_STATUS_FIFO_EN                          ,
        PMA_REG_PMA_TEST_SEL                        =>     CP_LANE1_PMA_REG_PMA_TEST_SEL                                ,
        PMA_REG_OOB_COMWAKE_GAP_MIN                 =>     CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MIN                         ,
        PMA_REG_OOB_COMWAKE_GAP_MAX                 =>     CP_LANE1_PMA_REG_OOB_COMWAKE_GAP_MAX                         ,
        PMA_REG_OOB_COMINIT_GAP_MIN                 =>     CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MIN                         ,
        PMA_REG_OOB_COMINIT_GAP_MAX                 =>     CP_LANE1_PMA_REG_OOB_COMINIT_GAP_MAX                         ,
        PMA_REG_RX_RESERVED_227_226                 =>     CP_LANE1_PMA_REG_RX_RESERVED_227_226                         ,
        PMA_REG_COMWAKE_STATUS_CLEAR                =>     CP_LANE1_PMA_REG_COMWAKE_STATUS_CLEAR                        ,
        PMA_REG_COMINIT_STATUS_CLEAR                =>     CP_LANE1_PMA_REG_COMINIT_STATUS_CLEAR                        ,
        PMA_REG_RX_SYNC_RST_N_EN                    =>     CP_LANE1_PMA_REG_RX_SYNC_RST_N_EN                            ,
        PMA_REG_RX_SYNC_RST_N                       =>     CP_LANE1_PMA_REG_RX_SYNC_RST_N                               ,
        PMA_REG_RX_RESERVED_233_232                 =>     CP_LANE1_PMA_REG_RX_RESERVED_233_232                         ,
        PMA_REG_RX_RESERVED_235_234                 =>     CP_LANE1_PMA_REG_RX_RESERVED_235_234                         ,
        PMA_REG_RX_SATA_COMINIT_OW                  =>     CP_LANE1_PMA_REG_RX_SATA_COMINIT_OW                          ,
        PMA_REG_RX_SATA_COMINIT                     =>     CP_LANE1_PMA_REG_RX_SATA_COMINIT                             ,
        PMA_REG_RX_SATA_COMWAKE_OW                  =>     CP_LANE1_PMA_REG_RX_SATA_COMWAKE_OW                          ,
        PMA_REG_RX_SATA_COMWAKE                     =>     CP_LANE1_PMA_REG_RX_SATA_COMWAKE                             ,
        PMA_REG_RX_RESERVED_241_240                 =>     CP_LANE1_PMA_REG_RX_RESERVED_241_240                         ,
        PMA_REG_RX_DCC_DISABLE                      =>     CP_LANE1_PMA_REG_RX_DCC_DISABLE                              ,
        PMA_REG_RX_RESERVED_243                     =>     CP_LANE1_PMA_REG_RX_RESERVED_243                             ,
        PMA_REG_RX_SLIP_SEL_EN                      =>     CP_LANE1_PMA_REG_RX_SLIP_SEL_EN                              ,
        PMA_REG_RX_SLIP_SEL                         =>     CP_LANE1_PMA_REG_RX_SLIP_SEL                                 ,
        PMA_REG_RX_SLIP_EN                          =>     CP_LANE1_PMA_REG_RX_SLIP_EN                                  ,
        PMA_REG_RX_SIGDET_STATUS_SEL                =>     CP_LANE1_PMA_REG_RX_SIGDET_STATUS_SEL                        ,
        PMA_REG_RX_SIGDET_FSM_RST_N                 =>     CP_LANE1_PMA_REG_RX_SIGDET_FSM_RST_N                         ,
        PMA_REG_RX_RESERVED_254                     =>     CP_LANE1_PMA_REG_RX_RESERVED_254                             ,
        PMA_REG_RX_SIGDET_STATUS                    =>     CP_LANE1_PMA_REG_RX_SIGDET_STATUS                            ,
        PMA_REG_RX_SIGDET_VTH                       =>     CP_LANE1_PMA_REG_RX_SIGDET_VTH                               ,
        PMA_REG_RX_SIGDET_GRM                       =>     CP_LANE1_PMA_REG_RX_SIGDET_GRM                               ,
        PMA_REG_RX_SIGDET_PULSE_EXT                 =>     CP_LANE1_PMA_REG_RX_SIGDET_PULSE_EXT                         ,
        PMA_REG_RX_SIGDET_CH2_SEL                   =>     CP_LANE1_PMA_REG_RX_SIGDET_CH2_SEL                           ,
        PMA_REG_RX_SIGDET_CH2_CHK_WINDOW            =>     CP_LANE1_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW                    ,
        PMA_REG_RX_SIGDET_CHK_WINDOW_EN             =>     CP_LANE1_PMA_REG_RX_SIGDET_CHK_WINDOW_EN                     ,
        PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING       =>     CP_LANE1_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING               ,
        PMA_REG_SLIP_FIFO_INV_EN                    =>     CP_LANE1_PMA_REG_SLIP_FIFO_INV_EN                            ,
        PMA_REG_SLIP_FIFO_INV                       =>     CP_LANE1_PMA_REG_SLIP_FIFO_INV                               ,
        PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL         =>     CP_LANE1_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL                 ,
        PMA_REG_RX_SIGDET_4OOB_DET_SEL              =>     CP_LANE1_PMA_REG_RX_SIGDET_4OOB_DET_SEL                      ,
        PMA_REG_RX_RESERVED_285_283                 =>     CP_LANE1_PMA_REG_RX_RESERVED_285_283                         ,
        PMA_REG_RX_RESERVED_286                     =>     CP_LANE1_PMA_REG_RX_RESERVED_286                             ,
        PMA_REG_RX_SIGDET_IC_I                      =>     CP_LANE1_PMA_REG_RX_SIGDET_IC_I                              ,
        PMA_REG_RX_OOB_DETECTOR_RESET_N_OW          =>     CP_LANE1_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW                  ,
        PMA_REG_RX_OOB_DETECTOR_RESET_N             =>     CP_LANE1_PMA_REG_RX_OOB_DETECTOR_RESET_N                     ,
        PMA_REG_RX_OOB_DETECTOR_PD_OW               =>     CP_LANE1_PMA_REG_RX_OOB_DETECTOR_PD_OW                       ,
        PMA_REG_RX_OOB_DETECTOR_PD                  =>     CP_LANE1_PMA_REG_RX_OOB_DETECTOR_PD                          ,
        PMA_REG_RX_LS_MODE_EN                       =>     CP_LANE1_PMA_REG_RX_LS_MODE_EN                               ,
        PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL           =>     CP_LANE1_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL                   ,
        PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL           =>     CP_LANE1_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL                   ,
        PMA_REG_RX_EQ1_R_SET_TOP                    =>     CP_LANE1_PMA_REG_RX_EQ1_R_SET_TOP                            ,
        PMA_REG_RX_EQ1_R_SET_FB                     =>     CP_LANE1_PMA_REG_RX_EQ1_R_SET_FB                             ,
        PMA_REG_RX_EQ1_C_SET_FB                     =>     CP_LANE1_PMA_REG_RX_EQ1_C_SET_FB                             ,
        PMA_REG_RX_EQ1_OFF                          =>     CP_LANE1_PMA_REG_RX_EQ1_OFF                                  ,
        PMA_REG_RX_EQ2_R_SET_TOP                    =>     CP_LANE1_PMA_REG_RX_EQ2_R_SET_TOP                            ,
        PMA_REG_RX_EQ2_R_SET_FB                     =>     CP_LANE1_PMA_REG_RX_EQ2_R_SET_FB                             ,
        PMA_REG_RX_EQ2_C_SET_FB                     =>     CP_LANE1_PMA_REG_RX_EQ2_C_SET_FB                             ,
        PMA_REG_RX_EQ2_OFF                          =>     CP_LANE1_PMA_REG_RX_EQ2_OFF                                  ,
        PMA_REG_EQ_DAC                              =>     CP_LANE1_PMA_REG_EQ_DAC                                      ,
        PMA_REG_RX_ICTRL_EQ                         =>     CP_LANE1_PMA_REG_RX_ICTRL_EQ                                 ,
        PMA_REG_EQ_DC_CALIB_EN                      =>     CP_LANE1_PMA_REG_EQ_DC_CALIB_EN                              ,
        PMA_REG_EQ_DC_CALIB_SEL                     =>     CP_LANE1_PMA_REG_EQ_DC_CALIB_SEL                             ,
        PMA_REG_RX_RESERVED_337_330                 =>     CP_LANE1_PMA_REG_RX_RESERVED_337_330                         ,
        PMA_REG_RX_RESERVED_345_338                 =>     CP_LANE1_PMA_REG_RX_RESERVED_345_338                         ,
        PMA_REG_RX_RESERVED_353_346                 =>     CP_LANE1_PMA_REG_RX_RESERVED_353_346                         ,
        PMA_REG_RX_RESERVED_361_354                 =>     CP_LANE1_PMA_REG_RX_RESERVED_361_354                         ,
        PMA_CTLE_CTRL_REG_I                         =>     CP_LANE1_PMA_CTLE_CTRL_REG_I                                 ,
        PMA_CTLE_REG_FORCE_SEL_I                    =>     CP_LANE1_PMA_CTLE_REG_FORCE_SEL_I                            ,
        PMA_CTLE_REG_HOLD_I                         =>     CP_LANE1_PMA_CTLE_REG_HOLD_I                                 ,
        PMA_CTLE_REG_INIT_DAC_I                     =>     CP_LANE1_PMA_CTLE_REG_INIT_DAC_I                             ,
        PMA_CTLE_REG_POLARITY_I                     =>     CP_LANE1_PMA_CTLE_REG_POLARITY_I                             ,
        PMA_CTLE_REG_SHIFTER_GAIN_I                 =>     CP_LANE1_PMA_CTLE_REG_SHIFTER_GAIN_I                         ,
        PMA_CTLE_REG_THRESHOLD_I                    =>     CP_LANE1_PMA_CTLE_REG_THRESHOLD_I                            ,
        PMA_REG_RX_RES_TRIM_EN                      =>     CP_LANE1_PMA_REG_RX_RES_TRIM_EN                              ,
        PMA_REG_RX_RESERVED_393_389                 =>     CP_LANE1_PMA_REG_RX_RESERVED_393_389                         ,
        PMA_CFG_RX_LANE_POWERUP                     =>     CP_LANE1_PMA_CFG_RX_LANE_POWERUP                             ,
        PMA_CFG_RX_PMA_RSTN                         =>     CP_LANE1_PMA_CFG_RX_PMA_RSTN                                 ,
        PMA_INT_PMA_RX_MASK_0                       =>     CP_LANE1_PMA_INT_PMA_RX_MASK_0                               ,
        PMA_INT_PMA_RX_CLR_0                        =>     CP_LANE1_PMA_INT_PMA_RX_CLR_0                                ,
        PMA_CFG_CTLE_ADP_RSTN                       =>     CP_LANE1_PMA_CFG_CTLE_ADP_RSTN                               ,
        PMA_REG_TX_PD                               =>     CP_LANE1_PMA_REG_TX_PD                                       ,
        PMA_REG_TX_PD_OW                            =>     CP_LANE1_PMA_REG_TX_PD_OW                                    ,
        PMA_REG_TX_MAIN_PRE_Z                       =>     CP_LANE1_PMA_REG_TX_MAIN_PRE_Z                               ,
        PMA_REG_TX_MAIN_PRE_Z_OW                    =>     CP_LANE1_PMA_REG_TX_MAIN_PRE_Z_OW                            ,
        PMA_REG_TX_BEACON_TIMER_SEL                 =>     CP_LANE1_PMA_REG_TX_BEACON_TIMER_SEL                         ,
        PMA_REG_TX_RXDET_REQ_OW                     =>     CP_LANE1_PMA_REG_TX_RXDET_REQ_OW                             ,
        PMA_REG_TX_RXDET_REQ                        =>     CP_LANE1_PMA_REG_TX_RXDET_REQ                                ,
        PMA_REG_TX_BEACON_EN_OW                     =>     CP_LANE1_PMA_REG_TX_BEACON_EN_OW                             ,
        PMA_REG_TX_BEACON_EN                        =>     CP_LANE1_PMA_REG_TX_BEACON_EN                                ,
        PMA_REG_TX_EI_EN_OW                         =>     CP_LANE1_PMA_REG_TX_EI_EN_OW                                 ,
        PMA_REG_TX_EI_EN                            =>     CP_LANE1_PMA_REG_TX_EI_EN                                    ,
        PMA_REG_TX_BIT_CONV                         =>     CP_LANE1_PMA_REG_TX_BIT_CONV                                 ,
        PMA_REG_TX_RES_CAL                          =>     CP_LANE1_PMA_REG_TX_RES_CAL                                  ,
        PMA_REG_TX_RESERVED_19                      =>     CP_LANE1_PMA_REG_TX_RESERVED_19                              ,
        PMA_REG_TX_RESERVED_25_20                  =>     CP_LANE1_PMA_REG_TX_RESERVED_25_20                           ,
        PMA_REG_TX_RESERVED_33_26                   =>     CP_LANE1_PMA_REG_TX_RESERVED_33_26                           ,
        PMA_REG_TX_RESERVED_41_34                   =>     CP_LANE1_PMA_REG_TX_RESERVED_41_34                           ,
        PMA_REG_TX_RESERVED_49_42                   =>     CP_LANE1_PMA_REG_TX_RESERVED_49_42                           ,
        PMA_REG_TX_RESERVED_57_50                   =>     CP_LANE1_PMA_REG_TX_RESERVED_57_50                           ,
        PMA_REG_TX_SYNC_OW                          =>     CP_LANE1_PMA_REG_TX_SYNC_OW                                  ,
        PMA_REG_TX_SYNC                             =>     CP_LANE1_PMA_REG_TX_SYNC                                     ,
        PMA_REG_TX_PD_POST                          =>     CP_LANE1_PMA_REG_TX_PD_POST                                  ,
        PMA_REG_TX_PD_POST_OW                       =>     CP_LANE1_PMA_REG_TX_PD_POST_OW                               ,
        PMA_REG_TX_RESET_N_OW                       =>     CP_LANE1_PMA_REG_TX_RESET_N_OW                               ,
        PMA_REG_TX_RESET_N                          =>     CP_LANE1_PMA_REG_TX_RESET_N                                  ,
        PMA_REG_TX_RESERVED_64                      =>     CP_LANE1_PMA_REG_TX_RESERVED_64                              ,
        PMA_REG_TX_RESERVED_65                      =>     CP_LANE1_PMA_REG_TX_RESERVED_65                              ,
        PMA_REG_TX_BUSWIDTH_OW                      =>     CP_LANE1_PMA_REG_TX_BUSWIDTH_OW                              ,
        PMA_REG_TX_BUSWIDTH                         =>     CP_LANE1_PMA_REG_TX_BUSWIDTH                                 ,
        PMA_REG_PLL_READY_OW                        =>     CP_LANE1_PMA_REG_PLL_READY_OW                                ,
        PMA_REG_PLL_READY                           =>     CP_LANE1_PMA_REG_PLL_READY                                   ,
        PMA_REG_TX_RESERVED_72                      =>     CP_LANE1_PMA_REG_TX_RESERVED_72                              ,
        PMA_REG_TX_RESERVED_73                      =>     CP_LANE1_PMA_REG_TX_RESERVED_73                              ,
        PMA_REG_TX_RESERVED_74                      =>     CP_LANE1_PMA_REG_TX_RESERVED_74                              ,
        PMA_REG_EI_PCLK_DELAY_SEL                   =>     CP_LANE1_PMA_REG_EI_PCLK_DELAY_SEL                           ,
        PMA_REG_TX_RESERVED_77                      =>     CP_LANE1_PMA_REG_TX_RESERVED_77                              ,
        PMA_REG_TX_RESERVED_83_78                   =>     CP_LANE1_PMA_REG_TX_RESERVED_83_78                           ,
        PMA_REG_TX_RESERVED_89_84                   =>     CP_LANE1_PMA_REG_TX_RESERVED_89_84                           ,
        PMA_REG_TX_RESERVED_95_90                   =>     CP_LANE1_PMA_REG_TX_RESERVED_95_90                           ,
        PMA_REG_TX_RESERVED_101_96                  =>     CP_LANE1_PMA_REG_TX_RESERVED_101_96                          ,
        PMA_REG_TX_RESERVED_107_102                 =>     CP_LANE1_PMA_REG_TX_RESERVED_107_102                         ,
        PMA_REG_TX_RESERVED_113_108                 =>     CP_LANE1_PMA_REG_TX_RESERVED_113_108                         ,
        PMA_REG_TX_AMP_DAC0                         =>     CP_LANE1_PMA_REG_TX_AMP_DAC0                                 ,
        PMA_REG_TX_AMP_DAC1                         =>     CP_LANE1_PMA_REG_TX_AMP_DAC1                                 ,
        PMA_REG_TX_AMP_DAC2                         =>     CP_LANE1_PMA_REG_TX_AMP_DAC2                                 ,
        PMA_REG_TX_AMP_DAC3                         =>     CP_LANE1_PMA_REG_TX_AMP_DAC3                                 ,
        PMA_REG_TX_RESERVED_143_138                 =>     CP_LANE1_PMA_REG_TX_RESERVED_143_138                         ,
        PMA_REG_TX_MARGIN                           =>     CP_LANE1_PMA_REG_TX_MARGIN                                   ,
        PMA_REG_TX_MARGIN_OW                        =>     CP_LANE1_PMA_REG_TX_MARGIN_OW                                ,
        PMA_REG_TX_RESERVED_149_148                 =>     CP_LANE1_PMA_REG_TX_RESERVED_149_148                         ,
        PMA_REG_TX_RESERVED_150                     =>     CP_LANE1_PMA_REG_TX_RESERVED_150                             ,
        PMA_REG_TX_SWING                            =>     CP_LANE1_PMA_REG_TX_SWING                                    ,
        PMA_REG_TX_SWING_OW                         =>     CP_LANE1_PMA_REG_TX_SWING_OW                                 ,
        PMA_REG_TX_RESERVED_153                     =>     CP_LANE1_PMA_REG_TX_RESERVED_153                             ,
        PMA_REG_TX_RXDET_THRESHOLD                  =>     CP_LANE1_PMA_REG_TX_RXDET_THRESHOLD                          ,
        PMA_REG_TX_RESERVED_157_156                 =>     CP_LANE1_PMA_REG_TX_RESERVED_157_156                         ,
        PMA_REG_TX_BEACON_OSC_CTRL                  =>     CP_LANE1_PMA_REG_TX_BEACON_OSC_CTRL                          ,
        PMA_REG_TX_RESERVED_160_159                 =>     CP_LANE1_PMA_REG_TX_RESERVED_160_159                         ,
        PMA_REG_TX_RESERVED_162_161                 =>     CP_LANE1_PMA_REG_TX_RESERVED_162_161                         ,
        PMA_REG_TX_TX2RX_SLPBACK_EN                 =>     CP_LANE1_PMA_REG_TX_TX2RX_SLPBACK_EN                         ,
        PMA_REG_TX_PCLK_EDGE_SEL                    =>     CP_LANE1_PMA_REG_TX_PCLK_EDGE_SEL                            ,
        PMA_REG_TX_RXDET_STATUS_OW                  =>     CP_LANE1_PMA_REG_TX_RXDET_STATUS_OW                          ,
        PMA_REG_TX_RXDET_STATUS                     =>     CP_LANE1_PMA_REG_TX_RXDET_STATUS                             ,
        PMA_REG_TX_PRBS_GEN_EN                      =>     CP_LANE1_PMA_REG_TX_PRBS_GEN_EN                              ,
        PMA_REG_TX_PRBS_GEN_WIDTH_SEL               =>     CP_LANE1_PMA_REG_TX_PRBS_GEN_WIDTH_SEL                       ,
        PMA_REG_TX_PRBS_SEL                         =>     CP_LANE1_PMA_REG_TX_PRBS_SEL                                 ,
        PMA_REG_TX_UDP_DATA_7_TO_0                  =>     CP_LANE1_PMA_REG_TX_UDP_DATA_7_TO_0                          ,
        PMA_REG_TX_UDP_DATA_15_TO_8                 =>     CP_LANE1_PMA_REG_TX_UDP_DATA_15_TO_8                         ,
        PMA_REG_TX_UDP_DATA_19_TO_16                =>     CP_LANE1_PMA_REG_TX_UDP_DATA_19_TO_16                        ,
        PMA_REG_TX_RESERVED_192                     =>     CP_LANE1_PMA_REG_TX_RESERVED_192                             ,
        PMA_REG_TX_FIFO_WP_CTRL                     =>     CP_LANE1_PMA_REG_TX_FIFO_WP_CTRL                             ,
        PMA_REG_TX_FIFO_EN                          =>     CP_LANE1_PMA_REG_TX_FIFO_EN                                  ,
        PMA_REG_TX_DATA_MUX_SEL                     =>     CP_LANE1_PMA_REG_TX_DATA_MUX_SEL                             ,
        PMA_REG_TX_ERR_INSERT                       =>     CP_LANE1_PMA_REG_TX_ERR_INSERT                               ,
        PMA_REG_TX_RESERVED_203_200                 =>     CP_LANE1_PMA_REG_TX_RESERVED_203_200                         ,
        PMA_REG_TX_RESERVED_204                     =>     CP_LANE1_PMA_REG_TX_RESERVED_204                             ,
        PMA_REG_TX_SATA_EN                          =>     CP_LANE1_PMA_REG_TX_SATA_EN                                  ,
        PMA_REG_TX_RESERVED_207_206                 =>     CP_LANE1_PMA_REG_TX_RESERVED_207_206                         ,
        PMA_REG_RATE_CHANGE_TXPCLK_ON_OW            =>     CP_LANE1_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW                    ,
        PMA_REG_RATE_CHANGE_TXPCLK_ON               =>     CP_LANE1_PMA_REG_RATE_CHANGE_TXPCLK_ON                       ,
        PMA_REG_TX_CFG_POST1                        =>     CP_LANE1_PMA_REG_TX_CFG_POST1                                ,
        PMA_REG_TX_CFG_POST2                        =>     CP_LANE1_PMA_REG_TX_CFG_POST2                                ,
        PMA_REG_TX_DEEMP                            =>     CP_LANE1_PMA_REG_TX_DEEMP                                    ,
        PMA_REG_TX_DEEMP_OW                         =>     CP_LANE1_PMA_REG_TX_DEEMP_OW                                 ,
        PMA_REG_TX_RESERVED_224_223                 =>     CP_LANE1_PMA_REG_TX_RESERVED_224_223                         ,
        PMA_REG_TX_RESERVED_225                     =>     CP_LANE1_PMA_REG_TX_RESERVED_225                             ,
        PMA_REG_TX_RESERVED_229_226                 =>     CP_LANE1_PMA_REG_TX_RESERVED_229_226                         ,
        PMA_REG_TX_OOB_DELAY_SEL                    =>     CP_LANE1_PMA_REG_TX_OOB_DELAY_SEL                            ,
        PMA_REG_TX_POLARITY                         =>     CP_LANE1_PMA_REG_TX_POLARITY                                 ,
        PMA_REG_ANA_TX_JTAG_DATA_O_SEL              =>     CP_LANE1_PMA_REG_ANA_TX_JTAG_DATA_O_SEL                      ,
        PMA_REG_TX_RESERVED_236                     =>     CP_LANE1_PMA_REG_TX_RESERVED_236                             ,
        PMA_REG_TX_LS_MODE_EN                       =>     CP_LANE1_PMA_REG_TX_LS_MODE_EN                               ,
        PMA_REG_TX_JTAG_MODE_EN_OW                  =>     CP_LANE1_PMA_REG_TX_JTAG_MODE_EN_OW                          ,
        PMA_REG_TX_JTAG_MODE_EN                     =>     CP_LANE1_PMA_REG_TX_JTAG_MODE_EN                             ,
        PMA_REG_RX_JTAG_MODE_EN_OW                  =>     CP_LANE1_PMA_REG_RX_JTAG_MODE_EN_OW                          ,
        PMA_REG_RX_JTAG_MODE_EN                     =>     CP_LANE1_PMA_REG_RX_JTAG_MODE_EN                             ,
        PMA_REG_RX_JTAG_OE                          =>     CP_LANE1_PMA_REG_RX_JTAG_OE                                  ,
        PMA_REG_RX_ACJTAG_VHYSTSEL                  =>     CP_LANE1_PMA_REG_RX_ACJTAG_VHYSTSEL                          ,
        PMA_REG_TX_RES_CAL_EN                       =>     CP_LANE1_PMA_REG_TX_RES_CAL_EN                               ,
        PMA_REG_RX_TERM_MODE_CTRL                   =>     CP_LANE1_PMA_REG_RX_TERM_MODE_CTRL                           ,
        PMA_REG_TX_RESERVED_251_250                 =>     CP_LANE1_PMA_REG_TX_RESERVED_251_250                         ,
        PMA_REG_PLPBK_TXPCLK_EN                     =>     CP_LANE1_PMA_REG_PLPBK_TXPCLK_EN                             ,
        PMA_REG_TX_RESERVED_253                     =>     CP_LANE1_PMA_REG_TX_RESERVED_253                             ,
        PMA_REG_TX_RESERVED_254                     =>     CP_LANE1_PMA_REG_TX_RESERVED_254                             ,
        PMA_REG_TX_RESERVED_255                     =>     CP_LANE1_PMA_REG_TX_RESERVED_255                             ,
        PMA_REG_TX_RESERVED_256                     =>     CP_LANE1_PMA_REG_TX_RESERVED_256                             ,
        PMA_REG_TX_RESERVED_257                     =>     CP_LANE1_PMA_REG_TX_RESERVED_257                             ,
        PMA_REG_TX_PH_SEL                           =>     CP_LANE1_PMA_REG_TX_PH_SEL                                   ,
        PMA_REG_TX_CFG_PRE                          =>     CP_LANE1_PMA_REG_TX_CFG_PRE                                  ,
        PMA_REG_TX_CFG_MAIN                         =>     CP_LANE1_PMA_REG_TX_CFG_MAIN                                 ,
        PMA_REG_CFG_POST                            =>     CP_LANE1_PMA_REG_CFG_POST                                    ,
        PMA_REG_PD_MAIN                             =>     CP_LANE1_PMA_REG_PD_MAIN                                     ,
        PMA_REG_PD_PRE                              =>     CP_LANE1_PMA_REG_PD_PRE                                      ,
        PMA_REG_TX_LS_DATA                          =>     CP_LANE1_PMA_REG_TX_LS_DATA                                  ,
        PMA_REG_TX_DCC_BUF_SZ_SEL                   =>     CP_LANE1_PMA_REG_TX_DCC_BUF_SZ_SEL                           ,
        PMA_REG_TX_DCC_CAL_CUR_TUNE                 =>     CP_LANE1_PMA_REG_TX_DCC_CAL_CUR_TUNE                         ,
        PMA_REG_TX_DCC_CAL_EN                       =>     CP_LANE1_PMA_REG_TX_DCC_CAL_EN                               ,
        PMA_REG_TX_DCC_CUR_SS                       =>     CP_LANE1_PMA_REG_TX_DCC_CUR_SS                               ,
        PMA_REG_TX_DCC_FA_CTRL                      =>     CP_LANE1_PMA_REG_TX_DCC_FA_CTRL                              ,
        PMA_REG_TX_DCC_RI_CTRL                      =>     CP_LANE1_PMA_REG_TX_DCC_RI_CTRL                              ,
        PMA_REG_ATB_SEL_2_TO_0                      =>     CP_LANE1_PMA_REG_ATB_SEL_2_TO_0                              ,
        PMA_REG_ATB_SEL_9_TO_3                      =>     CP_LANE1_PMA_REG_ATB_SEL_9_TO_3                              ,
        PMA_REG_TX_CFG_7_TO_0                       =>     CP_LANE1_PMA_REG_TX_CFG_7_TO_0                               ,
        PMA_REG_TX_CFG_15_TO_8                      =>     CP_LANE1_PMA_REG_TX_CFG_15_TO_8                              ,
        PMA_REG_TX_CFG_23_TO_16                     =>     CP_LANE1_PMA_REG_TX_CFG_23_TO_16                             ,
        PMA_REG_TX_CFG_31_TO_24                     =>     CP_LANE1_PMA_REG_TX_CFG_31_TO_24                             ,
        PMA_REG_TX_OOB_EI_EN                        =>     CP_LANE1_PMA_REG_TX_OOB_EI_EN                                ,
        PMA_REG_TX_OOB_EI_EN_OW                     =>     CP_LANE1_PMA_REG_TX_OOB_EI_EN_OW                             ,
        PMA_REG_TX_BEACON_EN_DELAYED                =>     CP_LANE1_PMA_REG_TX_BEACON_EN_DELAYED                        ,
        PMA_REG_TX_BEACON_EN_DELAYED_OW             =>     CP_LANE1_PMA_REG_TX_BEACON_EN_DELAYED_OW                     ,
        PMA_REG_TX_JTAG_DATA                        =>     CP_LANE1_PMA_REG_TX_JTAG_DATA                                ,
        PMA_REG_TX_RXDET_TIMER_SEL                  =>     CP_LANE1_PMA_REG_TX_RXDET_TIMER_SEL                          ,
        PMA_REG_TX_CFG1_7_0                         =>     CP_LANE1_PMA_REG_TX_CFG1_7_0                                 ,
        PMA_REG_TX_CFG1_15_8                        =>     CP_LANE1_PMA_REG_TX_CFG1_15_8                                ,
        PMA_REG_TX_CFG1_23_16                       =>     CP_LANE1_PMA_REG_TX_CFG1_23_16                               ,
        PMA_REG_TX_CFG1_31_24                       =>     CP_LANE1_PMA_REG_TX_CFG1_31_24                               ,
        PMA_REG_CFG_LANE_POWERUP                    =>     CP_LANE1_PMA_REG_CFG_LANE_POWERUP                            ,
        PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH         =>     CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH                 ,
        PMA_REG_CFG_TX_LANE_POWERUP_PISO            =>     CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_PISO                    ,
        PMA_REG_CFG_TX_LANE_POWERUP_DRIVER          =>     CP_LANE1_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER 
    )
    port map
    (
        P_TX_SDN                           =>     PAD_TX_SDN1                              ,//PAD PIN  
        P_TX_SDP                           =>     PAD_TX_SDP1                              ,//PAD PIN  
        P_PCS_RX_MCB_STATUS                =>     PCS_RX_MCB_STATUS[1]                   ,
        P_PCS_LSM_SYNCED                   =>     PCS_LSM_SYNCED[1]                      ,
        P_CFG_READY                        =>     CFG_READY_1                           ,
        P_CFG_RDATA                        =>     CFG_RDATA_1                           ,
        P_CFG_INT                          =>     CFG_INT_1                             ,
        P_RDATA                            =>     RDATA_1                               ,
        P_RCLK2FABRIC                      =>     RCLK2FABRIC[1]                         ,
        P_TCLK2FABRIC                      =>     TCLK2FABRIC[1]                         ,
        P_RX_SIGDET_STATUS                 =>     RX_SIGDET_STATUS_1                    ,
        P_RX_SATA_COMINIT                  =>     RX_SATA_COMINIT_1                     ,
        P_RX_SATA_COMWAKE                  =>     RX_SATA_COMWAKE_1                     ,
        P_RX_LS_DATA                       =>     RX_LS_DATA_1                          ,
        P_RX_READY                         =>     RX_READY_1                            ,
        P_TEST_STATUS                      =>     TEST_STATUS_1                         ,
        P_TX_RXDET_STATUS                  =>     TX_RXDET_STATUS_1                     ,
        P_CA_ALIGN_RX                      =>     CA_ALIGN_RX[1]                         ,
        P_CA_ALIGN_TX                      =>     CA_ALIGN_TX[1]                         ,
        //PMA_RCLK                         =>     PMA_RCLK                              ,
        //LANE_COUT_BUS_FORWARD            =>     LANE_COUT_BUS_FORWARD               ,
        //APATTERN_STATUS_COUT             =>     APATTERN_STATUS_COUT                  ,
        TXPCLK_PLL                         =>     TXPCLK_PLL_1                            ,
        P_RX_SDN                           =>     PAD_RX_SDN1                              ,//PAD PIN
        P_RX_SDP                           =>     PAD_RX_SDP1                              ,//PAD PIN
        P_RX_CLK_FR_CORE                   =>     RX1_CLK_FR_CORE                      ,
        P_RCLK2_FR_CORE                    =>     RCLK2_1_FR_CORE                       ,
        P_TX_CLK_FR_CORE                   =>     TX1_CLK_FR_CORE                      ,
        P_TCLK2_FR_CORE                    =>     TCLK2_1_FR_CORE                       ,
        P_PCS_TX_RST                       =>     PCS_TX_RST_1                          ,
        P_PCS_RX_RST                       =>     PCS_RX_RST_1                          ,
        P_PCS_CB_RST                       =>     PCS_CB_RST_1                          ,
        P_RXGEAR_SLIP                      =>     RXGEAR_SLIP_1                         ,
        P_CFG_CLK                          =>     CFG_CLK_1                             ,
        P_CFG_RST                          =>     CFG_RST_1                             ,
        P_CFG_PSEL                         =>     CFG_PSEL_1                            ,
        P_CFG_ENABLE                       =>     CFG_ENABLE_1                          ,
        P_CFG_WRITE                        =>     CFG_WRITE_1                           ,
        P_CFG_ADDR                         =>     CFG_ADDR_1                            ,
        P_CFG_WDATA                        =>     CFG_WDATA_1                           ,
        P_TDATA                            =>     TDATA_1                               ,
        P_PCS_WORD_ALIGN_EN                =>     PCS_WORD_ALIGN_EN[1]                   ,
        P_RX_POLARITY_INVERT               =>     RX_POLARITY_INVERT[1]                  ,
        P_CEB_ADETECT_EN                   =>     CEB_ADETECT_EN[1]                      ,
        P_PCS_MCB_EXT_EN                   =>     PCS_MCB_EXT_EN[1]                      ,
        P_PCS_NEAREND_LOOP                 =>     PCS_NEAREND_LOOP[1]                    ,
        P_PCS_FAREND_LOOP                  =>     PCS_FAREND_LOOP[1]                     ,
        P_PMA_NEAREND_PLOOP                =>     PMA_NEAREND_PLOOP[1]                   ,
        P_PMA_NEAREND_SLOOP                =>     PMA_NEAREND_SLOOP[1]                   ,
        P_PMA_FAREND_PLOOP                 =>     PMA_FAREND_PLOOP[1]                    ,
        P_LANE_PD                          =>     LANE_PD_1                             ,
        P_LANE_RST                         =>     LANE_RST_1                            ,
        P_RX_LANE_PD                       =>     RX_LANE_PD_1                          ,
        P_RX_PMA_RST                       =>     RX_PMA_RST_1                          ,
        P_CTLE_ADP_RST                     =>     CTLE_ADP_RST_1                        ,
        P_TX_DEEMP                         =>     TX_DEEMP_1                            ,
        P_TX_LS_DATA                       =>     TX_LS_DATA_1                          ,
        P_TX_BEACON_EN                     =>     TX_BEACON_EN_1                        ,
        P_TX_SWING                         =>     TX_SWING_1                            ,
        P_TX_RXDET_REQ                     =>     TX_RXDET_REQ_1                        ,
        P_TX_RATE                          =>     TX_RATE_1                             ,
        P_TX_BUSWIDTH                      =>     TX_BUSWIDTH_1                         ,
        P_TX_MARGIN                        =>     TX_MARGIN_1                           ,
        P_TX_PMA_RST                       =>     TX_PMA_RST_1                          ,
        P_TX_LANE_PD_CLKPATH               =>     TX_LANE_PD_CLKPATH_1                  ,
        P_TX_LANE_PD_PISO                  =>     TX_LANE_PD_PISO_1                     ,
        P_TX_LANE_PD_DRIVER                =>     TX_LANE_PD_DRIVER_1                   ,
        P_RX_RATE                          =>     RX_RATE_1                             ,
        P_RX_BUSWIDTH                      =>     RX_BUSWIDTH_1                         ,
        P_RX_HIGHZ                         =>     RX_HIGHZ_1                            ,
        P_CIM_CLK_ALIGNER_RX               =>     CIM_CLK_ALIGNER_RX1                  ,
        P_CIM_CLK_ALIGNER_TX               =>     CIM_CLK_ALIGNER_TX1                  ,
        P_CIM_DYN_DLY_SEL_RX               =>     CIM_DYN_DLY_SEL_RX1                  ,
        P_CIM_DYN_DLY_SEL_TX               =>     CIM_DYN_DLY_SEL_TX1                  ,
        P_CIM_START_ALIGN_RX               =>     CIM_START_ALIGN_RX1                  ,
        P_CIM_START_ALIGN_TX               =>     CIM_START_ALIGN_TX1                  ,
        //MCB_RCLK                         =>     MCB_RCLK                              ,
        SYNC                               =>     SYNC_CH1                                  ,
        RATE_CHANGE                        =>     RATE_CHANGE_CH1                           ,
        PLL_LOCK_SEL                       =>     PLL_LOCK_SEL_1                          ,
        //LANE_CIN_BUS_FORWARD             =>     LANE_CIN_BUS_FORWARD                ,
        //APATTERN_STATUS_CIN              =>     APATTERN_STATUS_CIN                   ,
        CLK_TXP                            =>     CLK_TXP_1                               ,
        CLK_TXN                            =>     CLK_TXN_1                               ,
        CLK_RX0                            =>     CLK_RX0_1                               ,
        CLK_RX90                           =>     CLK_RX90_1                              ,
        CLK_RX180                          =>     CLK_RX180_1                             ,
        CLK_RX270                          =>     CLK_RX270_1                             ,
        PLL_PD_I                           =>     PLL_PD_I_1                              ,
        PLL_RESET_I                        =>     PLL_RESET_I_1                           ,
        PLL_REFCLK_I                       =>     PLL_REFCLK_I_1                          //,
        //PLL_RES_TRIM_I                   =>     PLL_RES_TRIM_I                          ,
        //HSST_RST                           =>     HSST_RST
    );
    operator V_HSSTLP_LANE HSSTLP_LANE_LANE2
    parameter map
    (
        MUX_BIAS                                    =>     CP_LANE2_MUX_BIAS                                            ,
        PD_CLK                                      =>     CP_LANE2_PD_CLK                                              ,
        REG_SYNC                                    =>     CP_LANE2_REG_SYNC                                            ,
        REG_SYNC_OW                                 =>     CP_LANE2_REG_SYNC_OW                                         ,
        PLL_LOCK_OW                                 =>     CP_LANE2_PLL_LOCK_OW                                         ,
        PLL_LOCK_OW_EN                              =>     CP_LANE2_PLL_LOCK_OW_EN                                      ,
        PCS_SLAVE                              =>     CP_LANE2_PCS_SLAVE                                           ,
        PCS_BYPASS_WORD_ALIGN                       =>     CP_LANE2_PCS_BYPASS_WORD_ALIGN                               ,
        PCS_BYPASS_DENC                             =>     CP_LANE2_PCS_BYPASS_DENC                                     ,
        PCS_BYPASS_BONDING                          =>     CP_LANE2_PCS_BYPASS_BONDING                                  ,
        PCS_BYPASS_CTC                              =>     CP_LANE2_PCS_BYPASS_CTC                                      ,
        PCS_BYPASS_GEAR                             =>     CP_LANE2_PCS_BYPASS_GEAR                                     ,
        PCS_BYPASS_BRIDGE                           =>     CP_LANE2_PCS_BYPASS_BRIDGE                                   ,
        PCS_BYPASS_BRIDGE_FIFO                      =>     CP_LANE2_PCS_BYPASS_BRIDGE_FIFO                              ,
        PCS_DATA_MODE                               =>     CP_LANE2_PCS_DATA_MODE                                       ,
        PCS_RX_POLARITY_INV                         =>     CP_LANE2_PCS_RX_POLARITY_INV                                 ,
        PCS_ALIGN_MODE                              =>     CP_LANE2_PCS_ALIGN_MODE                                      ,
        PCS_SAMP_16B                                =>     CP_LANE2_PCS_SAMP_16B                                        ,
        PCS_FARLP_PWR_REDUCTION                     =>     CP_LANE2_PCS_FARLP_PWR_REDUCTION                             ,
        PCS_COMMA_REG0                              =>     CP_LANE2_PCS_COMMA_REG0                                      ,
        PCS_COMMA_MASK                              =>     CP_LANE2_PCS_COMMA_MASK                                      ,
        PCS_CEB_MODE                                =>     CP_LANE2_PCS_CEB_MODE                                        ,
        PCS_CTC_MODE                                =>     CP_LANE2_PCS_CTC_MODE                                        ,
        PCS_A_REG                                   =>     CP_LANE2_PCS_A_REG                                           ,
        PCS_GE_AUTO_EN                              =>     CP_LANE2_PCS_GE_AUTO_EN                                      ,
        PCS_SKIP_REG0                               =>     CP_LANE2_PCS_SKIP_REG0                                       ,
        PCS_SKIP_REG1                               =>     CP_LANE2_PCS_SKIP_REG1                                       ,
        PCS_SKIP_REG2                               =>     CP_LANE2_PCS_SKIP_REG2                                       ,
        PCS_SKIP_REG3                               =>     CP_LANE2_PCS_SKIP_REG3                                       ,
        PCS_DEC_DUAL                                =>     CP_LANE2_PCS_DEC_DUAL                                        ,
        PCS_SPLIT                                   =>     CP_LANE2_PCS_SPLIT                                           ,
        PCS_FIFOFLAG_CTC                            =>     CP_LANE2_PCS_FIFOFLAG_CTC                                    ,
        PCS_COMMA_DET_MODE                          =>     CP_LANE2_PCS_COMMA_DET_MODE                                  ,
        PCS_ERRDETECT_SILENCE                       =>     CP_LANE2_PCS_ERRDETECT_SILENCE                               ,
        PCS_PMA_RCLK_POLINV                         =>     CP_LANE2_PCS_PMA_RCLK_POLINV                                 ,
        PCS_PCS_RCLK_SEL                            =>     CP_LANE2_PCS_PCS_RCLK_SEL                                    ,
        PCS_CB_RCLK_SEL                             =>     CP_LANE2_PCS_CB_RCLK_SEL                                     ,
        PCS_AFTER_CTC_RCLK_SEL                      =>     CP_LANE2_PCS_AFTER_CTC_RCLK_SEL                              ,
        PCS_RCLK_POLINV                             =>     CP_LANE2_PCS_RCLK_POLINV                                     ,
        PCS_BRIDGE_RCLK_SEL                         =>     CP_LANE2_PCS_BRIDGE_RCLK_SEL                                 ,
        PCS_PCS_RCLK_EN                             =>     CP_LANE2_PCS_PCS_RCLK_EN                                     ,
        PCS_CB_RCLK_EN                              =>     CP_LANE2_PCS_CB_RCLK_EN                                      ,
        PCS_AFTER_CTC_RCLK_EN                       =>     CP_LANE2_PCS_AFTER_CTC_RCLK_EN                               ,
        PCS_AFTER_CTC_RCLK_EN_GB                    =>     CP_LANE2_PCS_AFTER_CTC_RCLK_EN_GB                            ,
        PCS_PCS_RX_RSTN                             =>     CP_LANE2_PCS_PCS_RX_RSTN                                     ,
        PCS_PCIE_SLAVE                              =>     CP_LANE2_PCS_PCIE_SLAVE                                      ,
        PCS_RX_64B66B_67B                           =>     CP_LANE2_PCS_RX_64B66B_67B                                   ,
        PCS_RX_BRIDGE_CLK_POLINV                    =>     CP_LANE2_PCS_RX_BRIDGE_CLK_POLINV                            ,
        PCS_PCS_CB_RSTN                             =>     CP_LANE2_PCS_PCS_CB_RSTN                                     ,
        PCS_TX_BRIDGE_GEAR_SEL                      =>     CP_LANE2_PCS_TX_BRIDGE_GEAR_SEL                              ,
        PCS_TX_BYPASS_BRIDGE_UINT                   =>     CP_LANE2_PCS_TX_BYPASS_BRIDGE_UINT                           ,
        PCS_TX_BYPASS_BRIDGE_FIFO                   =>     CP_LANE2_PCS_TX_BYPASS_BRIDGE_FIFO                           ,
        PCS_TX_BYPASS_GEAR                          =>     CP_LANE2_PCS_TX_BYPASS_GEAR                                  ,
        PCS_TX_BYPASS_ENC                           =>     CP_LANE2_PCS_TX_BYPASS_ENC                                   ,
        PCS_TX_BYPASS_BIT_SLIP                      =>     CP_LANE2_PCS_TX_BYPASS_BIT_SLIP                              ,
        PCS_TX_GEAR_SPLIT                           =>     CP_LANE2_PCS_TX_GEAR_SPLIT                                   ,
        PCS_TX_DRIVE_REG_MODE                       =>     CP_LANE2_PCS_TX_DRIVE_REG_MODE                               ,
        PCS_TX_BIT_SLIP_CYCLES                      =>     CP_LANE2_PCS_TX_BIT_SLIP_CYCLES                              ,
        PCS_INT_TX_MASK_0                           =>     CP_LANE2_PCS_INT_TX_MASK_0                                   ,
        PCS_INT_TX_MASK_1                           =>     CP_LANE2_PCS_INT_TX_MASK_1                                   ,
        PCS_INT_TX_MASK_2                           =>     CP_LANE2_PCS_INT_TX_MASK_2                                   ,
        PCS_INT_TX_CLR_0                            =>     CP_LANE2_PCS_INT_TX_CLR_0                                    ,
        PCS_INT_TX_CLR_1                            =>     CP_LANE2_PCS_INT_TX_CLR_1                                    ,
        PCS_INT_TX_CLR_2                            =>     CP_LANE2_PCS_INT_TX_CLR_2                                    ,
        PCS_TX_PMA_TCLK_POLINV                      =>     CP_LANE2_PCS_TX_PMA_TCLK_POLINV                              ,
        PCS_TX_PCS_CLK_EN_SEL                       =>     CP_LANE2_PCS_TX_PCS_CLK_EN_SEL                               ,
        PCS_TX_BRIDGE_TCLK_SEL                      =>     CP_LANE2_PCS_TX_BRIDGE_TCLK_SEL                              ,
        PCS_TX_TCLK_POLINV                          =>     CP_LANE2_PCS_TX_TCLK_POLINV                                  ,
        PCS_PCS_TCLK_SEL                            =>     CP_LANE2_PCS_PCS_TCLK_SEL                                    ,
        PCS_TX_PCS_TX_RSTN                          =>     CP_LANE2_PCS_TX_PCS_TX_RSTN                                  ,
        PCS_TX_SLAVE                                =>     CP_LANE2_PCS_TX_SLAVE                                        ,
        PCS_TX_GEAR_CLK_EN_SEL                      =>     CP_LANE2_PCS_TX_GEAR_CLK_EN_SEL                              ,
        PCS_DATA_WIDTH_MODE                         =>     CP_LANE2_PCS_DATA_WIDTH_MODE                                 ,
        PCS_TX_64B66B_67B                           =>     CP_LANE2_PCS_TX_64B66B_67B                                   ,
        PCS_GEAR_TCLK_SEL                           =>     CP_LANE2_PCS_GEAR_TCLK_SEL                                   ,
        PCS_TX_TCLK2FABRIC_SEL                      =>     CP_LANE2_PCS_TX_TCLK2FABRIC_SEL                              ,
        PCS_TX_OUTZZ                                =>     CP_LANE2_PCS_TX_OUTZZ                                        ,
        PCS_ENC_DUAL                                =>     CP_LANE2_PCS_ENC_DUAL                                        ,
        PCS_TX_BITSLIP_DATA_MODE                    =>     CP_LANE2_PCS_TX_BITSLIP_DATA_MODE                            ,
        PCS_TX_BRIDGE_CLK_POLINV                    =>     CP_LANE2_PCS_TX_BRIDGE_CLK_POLINV                            ,
        PCS_COMMA_REG1                              =>     CP_LANE2_PCS_COMMA_REG1                                      ,
        PCS_RAPID_IMAX                              =>     CP_LANE2_PCS_RAPID_IMAX                                      ,
        PCS_RAPID_VMIN_1                            =>     CP_LANE2_PCS_RAPID_VMIN_1                                    ,
        PCS_RAPID_VMIN_2                            =>     CP_LANE2_PCS_RAPID_VMIN_2                                    ,
        PCS_RX_PRBS_MODE                            =>     CP_LANE2_PCS_RX_PRBS_MODE                                    ,
        PCS_RX_ERRCNT_CLR                           =>     CP_LANE2_PCS_RX_ERRCNT_CLR                                   ,
        PCS_PRBS_ERR_LPBK                           =>     CP_LANE2_PCS_PRBS_ERR_LPBK                                   ,
        PCS_TX_PRBS_MODE                            =>     CP_LANE2_PCS_TX_PRBS_MODE                                    ,
        PCS_TX_INSERT_ER                            =>     CP_LANE2_PCS_TX_INSERT_ER                                    ,
        PCS_ENABLE_PRBS_GEN                         =>     CP_LANE2_PCS_ENABLE_PRBS_GEN                                 ,
        PCS_DEFAULT_RADDR                           =>     CP_LANE2_PCS_DEFAULT_RADDR                                   ,
        PCS_MASTER_CHECK_OFFSET                     =>     CP_LANE2_PCS_MASTER_CHECK_OFFSET                             ,
        PCS_DELAY_SET                               =>     CP_LANE2_PCS_DELAY_SET                                       ,
        PCS_SEACH_OFFSET                            =>     CP_LANE2_PCS_SEACH_OFFSET                                    ,
        PCS_CEB_RAPIDLS_MMAX                        =>     CP_LANE2_PCS_CEB_RAPIDLS_MMAX                                ,
        PCS_CTC_AFULL                               =>     CP_LANE2_PCS_CTC_AFULL                                       ,
        PCS_CTC_AEMPTY                              =>     CP_LANE2_PCS_CTC_AEMPTY                                      ,
        PCS_CTC_CONTI_SKP_SET                       =>     CP_LANE2_PCS_CTC_CONTI_SKP_SET                               ,
        PCS_FAR_LOOP                                =>     CP_LANE2_PCS_FAR_LOOP                                        ,
        PCS_NEAR_LOOP                               =>     CP_LANE2_PCS_NEAR_LOOP                                       ,
        PCS_PMA_TX2RX_PLOOP_EN                      =>     CP_LANE2_PCS_PMA_TX2RX_PLOOP_EN                              ,
        PCS_PMA_TX2RX_SLOOP_EN                      =>     CP_LANE2_PCS_PMA_TX2RX_SLOOP_EN                              ,
        PCS_PMA_RX2TX_PLOOP_EN                      =>     CP_LANE2_PCS_PMA_RX2TX_PLOOP_EN                              ,
        PCS_INT_RX_MASK_0                           =>     CP_LANE2_PCS_INT_RX_MASK_0                                   ,
        PCS_INT_RX_MASK_1                           =>     CP_LANE2_PCS_INT_RX_MASK_1                                   ,
        PCS_INT_RX_MASK_2                           =>     CP_LANE2_PCS_INT_RX_MASK_2                                   ,
        PCS_INT_RX_MASK_3                           =>     CP_LANE2_PCS_INT_RX_MASK_3                                   ,
        PCS_INT_RX_MASK_4                           =>     CP_LANE2_PCS_INT_RX_MASK_4                                   ,
        PCS_INT_RX_MASK_5                           =>     CP_LANE2_PCS_INT_RX_MASK_5                                   ,
        PCS_INT_RX_MASK_6                           =>     CP_LANE2_PCS_INT_RX_MASK_6                                   ,
        PCS_INT_RX_MASK_7                           =>     CP_LANE2_PCS_INT_RX_MASK_7                                   ,
        PCS_INT_RX_CLR_0                            =>     CP_LANE2_PCS_INT_RX_CLR_0                                    ,
        PCS_INT_RX_CLR_1                            =>     CP_LANE2_PCS_INT_RX_CLR_1                                    ,
        PCS_INT_RX_CLR_2                            =>     CP_LANE2_PCS_INT_RX_CLR_2                                    ,
        PCS_INT_RX_CLR_3                            =>     CP_LANE2_PCS_INT_RX_CLR_3                                    ,
        PCS_INT_RX_CLR_4                            =>     CP_LANE2_PCS_INT_RX_CLR_4                                    ,
        PCS_INT_RX_CLR_5                            =>     CP_LANE2_PCS_INT_RX_CLR_5                                    ,
        PCS_INT_RX_CLR_6                            =>     CP_LANE2_PCS_INT_RX_CLR_6                                    ,
        PCS_INT_RX_CLR_7                            =>     CP_LANE2_PCS_INT_RX_CLR_7                                    ,
        PCS_CA_RSTN_RX                              =>     CP_LANE2_PCS_CA_RSTN_RX                                      ,
        PCS_CA_DYN_DLY_EN_RX                        =>     CP_LANE2_PCS_CA_DYN_DLY_EN_RX                                ,
        PCS_CA_DYN_DLY_SEL_RX                       =>     CP_LANE2_PCS_CA_DYN_DLY_SEL_RX                               ,
        PCS_CA_RX                                   =>     CP_LANE2_PCS_CA_RX                                           ,
        PCS_CA_RSTN_TX                              =>     CP_LANE2_PCS_CA_RSTN_TX                                      ,
        PCS_CA_DYN_DLY_EN_TX                        =>     CP_LANE2_PCS_CA_DYN_DLY_EN_TX                                ,
        PCS_CA_DYN_DLY_SEL_TX                       =>     CP_LANE2_PCS_CA_DYN_DLY_SEL_TX                               ,
        PCS_CA_TX                                   =>     CP_LANE2_PCS_CA_TX                                           ,
        PCS_RXPRBS_PWR_REDUCTION                    =>     CP_LANE2_PCS_RXPRBS_PWR_REDUCTION                            ,
        PCS_WDALIGN_PWR_REDUCTION                   =>     CP_LANE2_PCS_WDALIGN_PWR_REDUCTION                           ,
        PCS_RXDEC_PWR_REDUCTION                     =>     CP_LANE2_PCS_RXDEC_PWR_REDUCTION                             ,
        PCS_RXCB_PWR_REDUCTION                      =>     CP_LANE2_PCS_RXCB_PWR_REDUCTION                              ,
        PCS_RXCTC_PWR_REDUCTION                     =>     CP_LANE2_PCS_RXCTC_PWR_REDUCTION                             ,
        PCS_RXGEAR_PWR_REDUCTION                    =>     CP_LANE2_PCS_RXGEAR_PWR_REDUCTION                            ,
        PCS_RXBRG_PWR_REDUCTION                     =>     CP_LANE2_PCS_RXBRG_PWR_REDUCTION                             ,
        PCS_RXTEST_PWR_REDUCTION                    =>     CP_LANE2_PCS_RXTEST_PWR_REDUCTION                            ,
        PCS_TXBRG_PWR_REDUCTION                    =>     CP_LANE2_PCS_TXBRG_PWR_REDUCTION                            ,
        PCS_TXGEAR_PWR_REDUCTION                   =>     CP_LANE2_PCS_TXGEAR_PWR_REDUCTION                           ,
        PCS_TXENC_PWR_REDUCTION                    =>     CP_LANE2_PCS_TXENC_PWR_REDUCTION                            ,
        PCS_TXBSLP_PWR_REDUCTION                   =>     CP_LANE2_PCS_TXBSLP_PWR_REDUCTION                           ,
        PCS_TXPRBS_PWR_REDUCTION                   =>     CP_LANE2_PCS_TXPRBS_PWR_REDUCTION                           ,
        PMA_REG_RX_PD                               =>     CP_LANE2_PMA_REG_RX_PD                                       ,
        PMA_REG_RX_PD_EN                            =>     CP_LANE2_PMA_REG_RX_PD_EN                                    ,
        PMA_REG_RX_RESERVED_2                       =>     CP_LANE2_PMA_REG_RX_RESERVED_2                               ,
        PMA_REG_RX_RESERVED_3                       =>     CP_LANE2_PMA_REG_RX_RESERVED_3                               ,
        PMA_REG_RX_DATAPATH_PD                      =>     CP_LANE2_PMA_REG_RX_DATAPATH_PD                              ,
        PMA_REG_RX_DATAPATH_PD_EN                   =>     CP_LANE2_PMA_REG_RX_DATAPATH_PD_EN                           ,
        PMA_REG_RX_SIGDET_PD                        =>     CP_LANE2_PMA_REG_RX_SIGDET_PD                                ,
        PMA_REG_RX_SIGDET_PD_EN                     =>     CP_LANE2_PMA_REG_RX_SIGDET_PD_EN                             ,
        PMA_REG_RX_DCC_RST_N                        =>     CP_LANE2_PMA_REG_RX_DCC_RST_N                                ,
        PMA_REG_RX_DCC_RST_N_EN                     =>     CP_LANE2_PMA_REG_RX_DCC_RST_N_EN                             ,
        PMA_REG_RX_CDR_RST_N                        =>     CP_LANE2_PMA_REG_RX_CDR_RST_N                                ,
        PMA_REG_RX_CDR_RST_N_EN                     =>     CP_LANE2_PMA_REG_RX_CDR_RST_N_EN                             ,
        PMA_REG_RX_SIGDET_RST_N                     =>     CP_LANE2_PMA_REG_RX_SIGDET_RST_N                             ,
        PMA_REG_RX_SIGDET_RST_N_EN                  =>     CP_LANE2_PMA_REG_RX_SIGDET_RST_N_EN                          ,
        PMA_REG_RXPCLK_SLIP                         =>     CP_LANE2_PMA_REG_RXPCLK_SLIP                                 ,
        PMA_REG_RXPCLK_SLIP_OW                      =>     CP_LANE2_PMA_REG_RXPCLK_SLIP_OW                              ,
        PMA_REG_RX_PCLKSWITCH_RST_N                 =>     CP_LANE2_PMA_REG_RX_PCLKSWITCH_RST_N                         ,
        PMA_REG_RX_PCLKSWITCH_RST_N_EN              =>     CP_LANE2_PMA_REG_RX_PCLKSWITCH_RST_N_EN                      ,
        PMA_REG_RX_PCLKSWITCH                       =>     CP_LANE2_PMA_REG_RX_PCLKSWITCH                               ,
        PMA_REG_RX_PCLKSWITCH_EN                    =>     CP_LANE2_PMA_REG_RX_PCLKSWITCH_EN                            ,
        PMA_REG_RX_HIGHZ                            =>     CP_LANE2_PMA_REG_RX_HIGHZ                                    ,
        PMA_REG_RX_HIGHZ_EN                         =>     CP_LANE2_PMA_REG_RX_HIGHZ_EN                                 ,
        PMA_REG_RX_SIGDET_CLK_WINDOW                =>     CP_LANE2_PMA_REG_RX_SIGDET_CLK_WINDOW                        ,
        PMA_REG_RX_SIGDET_CLK_WINDOW_OW             =>     CP_LANE2_PMA_REG_RX_SIGDET_CLK_WINDOW_OW                     ,
        PMA_REG_RX_PD_BIAS_RX                       =>     CP_LANE2_PMA_REG_RX_PD_BIAS_RX                               ,
        PMA_REG_RX_PD_BIAS_RX_OW                    =>     CP_LANE2_PMA_REG_RX_PD_BIAS_RX_OW                            ,
        PMA_REG_RX_RESET_N                          =>     CP_LANE2_PMA_REG_RX_RESET_N                                  ,
        PMA_REG_RX_RESET_N_OW                       =>     CP_LANE2_PMA_REG_RX_RESET_N_OW                               ,
        PMA_REG_RX_RESERVED_29_28                   =>     CP_LANE2_PMA_REG_RX_RESERVED_29_28                           ,
        PMA_REG_RX_BUSWIDTH                         =>     CP_LANE2_PMA_REG_RX_BUSWIDTH                                 ,
        PMA_REG_RX_BUSWIDTH_EN                      =>     CP_LANE2_PMA_REG_RX_BUSWIDTH_EN                              ,
        PMA_REG_RX_RATE                             =>     CP_LANE2_PMA_REG_RX_RATE                                     ,
        PMA_REG_RX_RESERVED_36                      =>     CP_LANE2_PMA_REG_RX_RESERVED_36                              ,
        PMA_REG_RX_RATE_EN                          =>     CP_LANE2_PMA_REG_RX_RATE_EN                                  ,
        PMA_REG_RX_RES_TRIM                         =>     CP_LANE2_PMA_REG_RX_RES_TRIM                                 ,
        PMA_REG_RX_RESERVED_44                      =>     CP_LANE2_PMA_REG_RX_RESERVED_44                              ,
        PMA_REG_RX_RESERVED_45                      =>     CP_LANE2_PMA_REG_RX_RESERVED_45                              ,
        PMA_REG_RX_SIGDET_STATUS_EN                 =>     CP_LANE2_PMA_REG_RX_SIGDET_STATUS_EN                         ,
        PMA_REG_RX_RESERVED_48_47                   =>     CP_LANE2_PMA_REG_RX_RESERVED_48_47                           ,
        PMA_REG_RX_ICTRL_SIGDET                     =>     CP_LANE2_PMA_REG_RX_ICTRL_SIGDET                             ,
        PMA_REG_CDR_READY_THD                       =>     CP_LANE2_PMA_REG_CDR_READY_THD                               ,
        PMA_REG_RX_RESERVED_65                      =>     CP_LANE2_PMA_REG_RX_RESERVED_65                              ,
        PMA_REG_RX_PCLK_EDGE_SEL                    =>     CP_LANE2_PMA_REG_RX_PCLK_EDGE_SEL                            ,
        PMA_REG_RX_PIBUF_IC                         =>     CP_LANE2_PMA_REG_RX_PIBUF_IC                                 ,
        PMA_REG_RX_RESERVED_69                      =>     CP_LANE2_PMA_REG_RX_RESERVED_69                              ,
        PMA_REG_RX_DCC_IC_RX                        =>     CP_LANE2_PMA_REG_RX_DCC_IC_RX                                ,
        PMA_REG_CDR_READY_CHECK_CTRL                =>     CP_LANE2_PMA_REG_CDR_READY_CHECK_CTRL                        ,
        PMA_REG_RX_ICTRL_TRX                        =>     CP_LANE2_PMA_REG_RX_ICTRL_TRX                                ,
        PMA_REG_RX_RESERVED_77_76                   =>     CP_LANE2_PMA_REG_RX_RESERVED_77_76                           ,
        PMA_REG_RX_RESERVED_79_78                   =>     CP_LANE2_PMA_REG_RX_RESERVED_79_78                           ,
        PMA_REG_RX_RESERVED_81_80                   =>     CP_LANE2_PMA_REG_RX_RESERVED_81_80                           ,
        PMA_REG_RX_ICTRL_PIBUF                      =>     CP_LANE2_PMA_REG_RX_ICTRL_PIBUF                              ,
        PMA_REG_RX_ICTRL_PI                         =>     CP_LANE2_PMA_REG_RX_ICTRL_PI                                 ,
        PMA_REG_RX_ICTRL_DCC                        =>     CP_LANE2_PMA_REG_RX_ICTRL_DCC                                ,
        PMA_REG_RX_RESERVED_89_88                   =>     CP_LANE2_PMA_REG_RX_RESERVED_89_88                           ,
        PMA_REG_TX_RATE                             =>     CP_LANE2_PMA_REG_TX_RATE                                     ,
        PMA_REG_RX_RESERVED_92                      =>     CP_LANE2_PMA_REG_RX_RESERVED_92                              ,
        PMA_REG_TX_RATE_EN                          =>     CP_LANE2_PMA_REG_TX_RATE_EN                                  ,
        PMA_REG_RX_TX2RX_PLPBK_RST_N                =>     CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_RST_N                        ,
        PMA_REG_RX_TX2RX_PLPBK_RST_N_EN             =>     CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN                     ,
        PMA_REG_RX_TX2RX_PLPBK_EN                   =>     CP_LANE2_PMA_REG_RX_TX2RX_PLPBK_EN                           ,
        PMA_REG_TXCLK_SEL                           =>     CP_LANE2_PMA_REG_TXCLK_SEL                                   ,
        PMA_REG_RX_DATA_POLARITY                    =>     CP_LANE2_PMA_REG_RX_DATA_POLARITY                            ,
        PMA_REG_RX_ERR_INSERT                       =>     CP_LANE2_PMA_REG_RX_ERR_INSERT                               ,
        PMA_REG_UDP_CHK_EN                          =>     CP_LANE2_PMA_REG_UDP_CHK_EN                                  ,
        PMA_REG_PRBS_SEL                            =>     CP_LANE2_PMA_REG_PRBS_SEL                                    ,
        PMA_REG_PRBS_CHK_EN                         =>     CP_LANE2_PMA_REG_PRBS_CHK_EN                                 ,
        PMA_REG_PRBS_CHK_WIDTH_SEL                  =>     CP_LANE2_PMA_REG_PRBS_CHK_WIDTH_SEL                          ,
        PMA_REG_BIST_CHK_PAT_SEL                    =>     CP_LANE2_PMA_REG_BIST_CHK_PAT_SEL                            ,
        PMA_REG_LOAD_ERR_CNT                        =>     CP_LANE2_PMA_REG_LOAD_ERR_CNT                                ,
        PMA_REG_CHK_COUNTER_EN                      =>     CP_LANE2_PMA_REG_CHK_COUNTER_EN                              ,
        PMA_REG_CDR_PROP_GAIN                       =>     CP_LANE2_PMA_REG_CDR_PROP_GAIN                               ,
        PMA_REG_CDR_PROP_TURBO_GAIN                 =>     CP_LANE2_PMA_REG_CDR_PROP_TURBO_GAIN                         ,
        PMA_REG_CDR_INT_GAIN                        =>     CP_LANE2_PMA_REG_CDR_INT_GAIN                                ,
        PMA_REG_CDR_INT_TURBO_GAIN                  =>     CP_LANE2_PMA_REG_CDR_INT_TURBO_GAIN                          ,
        PMA_REG_CDR_INT_SAT_MAX                     =>     CP_LANE2_PMA_REG_CDR_INT_SAT_MAX                             ,
        PMA_REG_CDR_INT_SAT_MIN                     =>     CP_LANE2_PMA_REG_CDR_INT_SAT_MIN                             ,
        PMA_REG_CDR_INT_RST                         =>     CP_LANE2_PMA_REG_CDR_INT_RST                                 ,
        PMA_REG_CDR_INT_RST_OW                      =>     CP_LANE2_PMA_REG_CDR_INT_RST_OW                              ,
        PMA_REG_CDR_PROP_RST                        =>     CP_LANE2_PMA_REG_CDR_PROP_RST                                ,
        PMA_REG_CDR_PROP_RST_OW                     =>     CP_LANE2_PMA_REG_CDR_PROP_RST_OW                             ,
        PMA_REG_CDR_LOCK_RST                        =>     CP_LANE2_PMA_REG_CDR_LOCK_RST                                ,
        PMA_REG_CDR_LOCK_RST_OW                     =>     CP_LANE2_PMA_REG_CDR_LOCK_RST_OW                             ,
        PMA_REG_CDR_RX_PI_FORCE_SEL                 =>     CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_SEL                         ,
        PMA_REG_CDR_RX_PI_FORCE_D                   =>     CP_LANE2_PMA_REG_CDR_RX_PI_FORCE_D                           ,
        PMA_REG_CDR_LOCK_TIMER                      =>     CP_LANE2_PMA_REG_CDR_LOCK_TIMER                              ,
        PMA_REG_CDR_TURBO_MODE_TIMER                =>     CP_LANE2_PMA_REG_CDR_TURBO_MODE_TIMER                        ,
        PMA_REG_CDR_LOCK_VAL                        =>     CP_LANE2_PMA_REG_CDR_LOCK_VAL                                ,
        PMA_REG_CDR_LOCK_OW                         =>     CP_LANE2_PMA_REG_CDR_LOCK_OW                                 ,
        PMA_REG_CDR_INT_SAT_DET_EN                  =>     CP_LANE2_PMA_REG_CDR_INT_SAT_DET_EN                          ,
        PMA_REG_CDR_SAT_AUTO_DIS                    =>     CP_LANE2_PMA_REG_CDR_SAT_AUTO_DIS                            ,
        PMA_REG_CDR_GAIN_AUTO                       =>     CP_LANE2_PMA_REG_CDR_GAIN_AUTO                               ,
        PMA_REG_CDR_TURBO_GAIN_AUTO                 =>     CP_LANE2_PMA_REG_CDR_TURBO_GAIN_AUTO                         ,
        PMA_REG_RX_RESERVED_171_167                 =>     CP_LANE2_PMA_REG_RX_RESERVED_171_167                         ,
        PMA_REG_RX_RESERVED_175_172                 =>     CP_LANE2_PMA_REG_RX_RESERVED_175_172                         ,
        PMA_REG_CDR_SAT_DET_STATUS_EN               =>     CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_EN                       ,
        PMA_REG_CDR_SAT_DET_STATUS_RESET_EN         =>     CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN                 ,
        PMA_REG_CDR_PI_CTRL_RST                     =>     CP_LANE2_PMA_REG_CDR_PI_CTRL_RST                             ,
        PMA_REG_CDR_PI_CTRL_RST_OW                  =>     CP_LANE2_PMA_REG_CDR_PI_CTRL_RST_OW                          ,
        PMA_REG_CDR_SAT_DET_RST                     =>     CP_LANE2_PMA_REG_CDR_SAT_DET_RST                             ,
        PMA_REG_CDR_SAT_DET_RST_OW                  =>     CP_LANE2_PMA_REG_CDR_SAT_DET_RST_OW                          ,
        PMA_REG_CDR_SAT_DET_STICKY_RST              =>     CP_LANE2_PMA_REG_CDR_SAT_DET_STICKY_RST                      ,
        PMA_REG_CDR_SAT_DET_STICKY_RST_OW           =>     CP_LANE2_PMA_REG_CDR_SAT_DET_STICKY_RST_OW                   ,
        PMA_REG_CDR_SIGDET_STATUS_DIS               =>     CP_LANE2_PMA_REG_CDR_SIGDET_STATUS_DIS                       ,
        PMA_REG_CDR_SAT_DET_TIMER                   =>     CP_LANE2_PMA_REG_CDR_SAT_DET_TIMER                           ,
        PMA_REG_CDR_SAT_DET_STATUS_VAL              =>     CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_VAL                      ,
        PMA_REG_CDR_SAT_DET_STATUS_OW               =>     CP_LANE2_PMA_REG_CDR_SAT_DET_STATUS_OW                       ,
        PMA_REG_CDR_TURBO_MODE_EN                   =>     CP_LANE2_PMA_REG_CDR_TURBO_MODE_EN                           ,
        PMA_REG_RX_RESERVED_190                     =>     CP_LANE2_PMA_REG_RX_RESERVED_190                             ,
        PMA_REG_RX_RESERVED_193_191                 =>     CP_LANE2_PMA_REG_RX_RESERVED_193_191                         ,
        PMA_REG_CDR_STATUS_FIFO_EN                  =>     CP_LANE2_PMA_REG_CDR_STATUS_FIFO_EN                          ,
        PMA_REG_PMA_TEST_SEL                        =>     CP_LANE2_PMA_REG_PMA_TEST_SEL                                ,
        PMA_REG_OOB_COMWAKE_GAP_MIN                 =>     CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MIN                         ,
        PMA_REG_OOB_COMWAKE_GAP_MAX                 =>     CP_LANE2_PMA_REG_OOB_COMWAKE_GAP_MAX                         ,
        PMA_REG_OOB_COMINIT_GAP_MIN                 =>     CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MIN                         ,
        PMA_REG_OOB_COMINIT_GAP_MAX                 =>     CP_LANE2_PMA_REG_OOB_COMINIT_GAP_MAX                         ,
        PMA_REG_RX_RESERVED_227_226                 =>     CP_LANE2_PMA_REG_RX_RESERVED_227_226                         ,
        PMA_REG_COMWAKE_STATUS_CLEAR                =>     CP_LANE2_PMA_REG_COMWAKE_STATUS_CLEAR                        ,
        PMA_REG_COMINIT_STATUS_CLEAR                =>     CP_LANE2_PMA_REG_COMINIT_STATUS_CLEAR                        ,
        PMA_REG_RX_SYNC_RST_N_EN                    =>     CP_LANE2_PMA_REG_RX_SYNC_RST_N_EN                            ,
        PMA_REG_RX_SYNC_RST_N                       =>     CP_LANE2_PMA_REG_RX_SYNC_RST_N                               ,
        PMA_REG_RX_RESERVED_233_232                 =>     CP_LANE2_PMA_REG_RX_RESERVED_233_232                         ,
        PMA_REG_RX_RESERVED_235_234                 =>     CP_LANE2_PMA_REG_RX_RESERVED_235_234                         ,
        PMA_REG_RX_SATA_COMINIT_OW                  =>     CP_LANE2_PMA_REG_RX_SATA_COMINIT_OW                          ,
        PMA_REG_RX_SATA_COMINIT                     =>     CP_LANE2_PMA_REG_RX_SATA_COMINIT                             ,
        PMA_REG_RX_SATA_COMWAKE_OW                  =>     CP_LANE2_PMA_REG_RX_SATA_COMWAKE_OW                          ,
        PMA_REG_RX_SATA_COMWAKE                     =>     CP_LANE2_PMA_REG_RX_SATA_COMWAKE                             ,
        PMA_REG_RX_RESERVED_241_240                 =>     CP_LANE2_PMA_REG_RX_RESERVED_241_240                         ,
        PMA_REG_RX_DCC_DISABLE                      =>     CP_LANE2_PMA_REG_RX_DCC_DISABLE                              ,
        PMA_REG_RX_RESERVED_243                     =>     CP_LANE2_PMA_REG_RX_RESERVED_243                             ,
        PMA_REG_RX_SLIP_SEL_EN                      =>     CP_LANE2_PMA_REG_RX_SLIP_SEL_EN                              ,
        PMA_REG_RX_SLIP_SEL                         =>     CP_LANE2_PMA_REG_RX_SLIP_SEL                                 ,
        PMA_REG_RX_SLIP_EN                          =>     CP_LANE2_PMA_REG_RX_SLIP_EN                                  ,
        PMA_REG_RX_SIGDET_STATUS_SEL                =>     CP_LANE2_PMA_REG_RX_SIGDET_STATUS_SEL                        ,
        PMA_REG_RX_SIGDET_FSM_RST_N                 =>     CP_LANE2_PMA_REG_RX_SIGDET_FSM_RST_N                         ,
        PMA_REG_RX_RESERVED_254                     =>     CP_LANE2_PMA_REG_RX_RESERVED_254                             ,
        PMA_REG_RX_SIGDET_STATUS                    =>     CP_LANE2_PMA_REG_RX_SIGDET_STATUS                            ,
        PMA_REG_RX_SIGDET_VTH                       =>     CP_LANE2_PMA_REG_RX_SIGDET_VTH                               ,
        PMA_REG_RX_SIGDET_GRM                       =>     CP_LANE2_PMA_REG_RX_SIGDET_GRM                               ,
        PMA_REG_RX_SIGDET_PULSE_EXT                 =>     CP_LANE2_PMA_REG_RX_SIGDET_PULSE_EXT                         ,
        PMA_REG_RX_SIGDET_CH2_SEL                   =>     CP_LANE2_PMA_REG_RX_SIGDET_CH2_SEL                           ,
        PMA_REG_RX_SIGDET_CH2_CHK_WINDOW            =>     CP_LANE2_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW                    ,
        PMA_REG_RX_SIGDET_CHK_WINDOW_EN             =>     CP_LANE2_PMA_REG_RX_SIGDET_CHK_WINDOW_EN                     ,
        PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING       =>     CP_LANE2_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING               ,
        PMA_REG_SLIP_FIFO_INV_EN                    =>     CP_LANE2_PMA_REG_SLIP_FIFO_INV_EN                            ,
        PMA_REG_SLIP_FIFO_INV                       =>     CP_LANE2_PMA_REG_SLIP_FIFO_INV                               ,
        PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL         =>     CP_LANE2_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL                 ,
        PMA_REG_RX_SIGDET_4OOB_DET_SEL              =>     CP_LANE2_PMA_REG_RX_SIGDET_4OOB_DET_SEL                      ,
        PMA_REG_RX_RESERVED_285_283                 =>     CP_LANE2_PMA_REG_RX_RESERVED_285_283                         ,
        PMA_REG_RX_RESERVED_286                     =>     CP_LANE2_PMA_REG_RX_RESERVED_286                             ,
        PMA_REG_RX_SIGDET_IC_I                      =>     CP_LANE2_PMA_REG_RX_SIGDET_IC_I                              ,
        PMA_REG_RX_OOB_DETECTOR_RESET_N_OW          =>     CP_LANE2_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW                  ,
        PMA_REG_RX_OOB_DETECTOR_RESET_N             =>     CP_LANE2_PMA_REG_RX_OOB_DETECTOR_RESET_N                     ,
        PMA_REG_RX_OOB_DETECTOR_PD_OW               =>     CP_LANE2_PMA_REG_RX_OOB_DETECTOR_PD_OW                       ,
        PMA_REG_RX_OOB_DETECTOR_PD                  =>     CP_LANE2_PMA_REG_RX_OOB_DETECTOR_PD                          ,
        PMA_REG_RX_LS_MODE_EN                       =>     CP_LANE2_PMA_REG_RX_LS_MODE_EN                               ,
        PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL           =>     CP_LANE2_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL                   ,
        PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL           =>     CP_LANE2_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL                   ,
        PMA_REG_RX_EQ1_R_SET_TOP                    =>     CP_LANE2_PMA_REG_RX_EQ1_R_SET_TOP                            ,
        PMA_REG_RX_EQ1_R_SET_FB                     =>     CP_LANE2_PMA_REG_RX_EQ1_R_SET_FB                             ,
        PMA_REG_RX_EQ1_C_SET_FB                     =>     CP_LANE2_PMA_REG_RX_EQ1_C_SET_FB                             ,
        PMA_REG_RX_EQ1_OFF                          =>     CP_LANE2_PMA_REG_RX_EQ1_OFF                                  ,
        PMA_REG_RX_EQ2_R_SET_TOP                    =>     CP_LANE2_PMA_REG_RX_EQ2_R_SET_TOP                            ,
        PMA_REG_RX_EQ2_R_SET_FB                     =>     CP_LANE2_PMA_REG_RX_EQ2_R_SET_FB                             ,
        PMA_REG_RX_EQ2_C_SET_FB                     =>     CP_LANE2_PMA_REG_RX_EQ2_C_SET_FB                             ,
        PMA_REG_RX_EQ2_OFF                          =>     CP_LANE2_PMA_REG_RX_EQ2_OFF                                  ,
        PMA_REG_EQ_DAC                              =>     CP_LANE2_PMA_REG_EQ_DAC                                      ,
        PMA_REG_RX_ICTRL_EQ                         =>     CP_LANE2_PMA_REG_RX_ICTRL_EQ                                 ,
        PMA_REG_EQ_DC_CALIB_EN                      =>     CP_LANE2_PMA_REG_EQ_DC_CALIB_EN                              ,
        PMA_REG_EQ_DC_CALIB_SEL                     =>     CP_LANE2_PMA_REG_EQ_DC_CALIB_SEL                             ,
        PMA_REG_RX_RESERVED_337_330                 =>     CP_LANE2_PMA_REG_RX_RESERVED_337_330                         ,
        PMA_REG_RX_RESERVED_345_338                 =>     CP_LANE2_PMA_REG_RX_RESERVED_345_338                         ,
        PMA_REG_RX_RESERVED_353_346                 =>     CP_LANE2_PMA_REG_RX_RESERVED_353_346                         ,
        PMA_REG_RX_RESERVED_361_354                 =>     CP_LANE2_PMA_REG_RX_RESERVED_361_354                         ,
        PMA_CTLE_CTRL_REG_I                         =>     CP_LANE2_PMA_CTLE_CTRL_REG_I                                 ,
        PMA_CTLE_REG_FORCE_SEL_I                    =>     CP_LANE2_PMA_CTLE_REG_FORCE_SEL_I                            ,
        PMA_CTLE_REG_HOLD_I                         =>     CP_LANE2_PMA_CTLE_REG_HOLD_I                                 ,
        PMA_CTLE_REG_INIT_DAC_I                     =>     CP_LANE2_PMA_CTLE_REG_INIT_DAC_I                             ,
        PMA_CTLE_REG_POLARITY_I                     =>     CP_LANE2_PMA_CTLE_REG_POLARITY_I                             ,
        PMA_CTLE_REG_SHIFTER_GAIN_I                 =>     CP_LANE2_PMA_CTLE_REG_SHIFTER_GAIN_I                         ,
        PMA_CTLE_REG_THRESHOLD_I                    =>     CP_LANE2_PMA_CTLE_REG_THRESHOLD_I                            ,
        PMA_REG_RX_RES_TRIM_EN                      =>     CP_LANE2_PMA_REG_RX_RES_TRIM_EN                              ,
        PMA_REG_RX_RESERVED_393_389                 =>     CP_LANE2_PMA_REG_RX_RESERVED_393_389                         ,
        PMA_CFG_RX_LANE_POWERUP                     =>     CP_LANE2_PMA_CFG_RX_LANE_POWERUP                             ,
        PMA_CFG_RX_PMA_RSTN                         =>     CP_LANE2_PMA_CFG_RX_PMA_RSTN                                 ,
        PMA_INT_PMA_RX_MASK_0                       =>     CP_LANE2_PMA_INT_PMA_RX_MASK_0                               ,
        PMA_INT_PMA_RX_CLR_0                        =>     CP_LANE2_PMA_INT_PMA_RX_CLR_0                                ,
        PMA_CFG_CTLE_ADP_RSTN                       =>     CP_LANE2_PMA_CFG_CTLE_ADP_RSTN                               ,
        PMA_REG_TX_PD                               =>     CP_LANE2_PMA_REG_TX_PD                                       ,
        PMA_REG_TX_PD_OW                            =>     CP_LANE2_PMA_REG_TX_PD_OW                                    ,
        PMA_REG_TX_MAIN_PRE_Z                       =>     CP_LANE2_PMA_REG_TX_MAIN_PRE_Z                               ,
        PMA_REG_TX_MAIN_PRE_Z_OW                    =>     CP_LANE2_PMA_REG_TX_MAIN_PRE_Z_OW                            ,
        PMA_REG_TX_BEACON_TIMER_SEL                 =>     CP_LANE2_PMA_REG_TX_BEACON_TIMER_SEL                         ,
        PMA_REG_TX_RXDET_REQ_OW                     =>     CP_LANE2_PMA_REG_TX_RXDET_REQ_OW                             ,
        PMA_REG_TX_RXDET_REQ                        =>     CP_LANE2_PMA_REG_TX_RXDET_REQ                                ,
        PMA_REG_TX_BEACON_EN_OW                     =>     CP_LANE2_PMA_REG_TX_BEACON_EN_OW                             ,
        PMA_REG_TX_BEACON_EN                        =>     CP_LANE2_PMA_REG_TX_BEACON_EN                                ,
        PMA_REG_TX_EI_EN_OW                         =>     CP_LANE2_PMA_REG_TX_EI_EN_OW                                 ,
        PMA_REG_TX_EI_EN                            =>     CP_LANE2_PMA_REG_TX_EI_EN                                    ,
        PMA_REG_TX_BIT_CONV                         =>     CP_LANE2_PMA_REG_TX_BIT_CONV                                 ,
        PMA_REG_TX_RES_CAL                          =>     CP_LANE2_PMA_REG_TX_RES_CAL                                  ,
        PMA_REG_TX_RESERVED_19                      =>     CP_LANE2_PMA_REG_TX_RESERVED_19                              ,
        PMA_REG_TX_RESERVED_25_20                  =>     CP_LANE2_PMA_REG_TX_RESERVED_25_20                           ,
        PMA_REG_TX_RESERVED_33_26                   =>     CP_LANE2_PMA_REG_TX_RESERVED_33_26                           ,
        PMA_REG_TX_RESERVED_41_34                   =>     CP_LANE2_PMA_REG_TX_RESERVED_41_34                           ,
        PMA_REG_TX_RESERVED_49_42                   =>     CP_LANE2_PMA_REG_TX_RESERVED_49_42                           ,
        PMA_REG_TX_RESERVED_57_50                   =>     CP_LANE2_PMA_REG_TX_RESERVED_57_50                           ,
        PMA_REG_TX_SYNC_OW                          =>     CP_LANE2_PMA_REG_TX_SYNC_OW                                  ,
        PMA_REG_TX_SYNC                             =>     CP_LANE2_PMA_REG_TX_SYNC                                     ,
        PMA_REG_TX_PD_POST                          =>     CP_LANE2_PMA_REG_TX_PD_POST                                  ,
        PMA_REG_TX_PD_POST_OW                       =>     CP_LANE2_PMA_REG_TX_PD_POST_OW                               ,
        PMA_REG_TX_RESET_N_OW                       =>     CP_LANE2_PMA_REG_TX_RESET_N_OW                               ,
        PMA_REG_TX_RESET_N                          =>     CP_LANE2_PMA_REG_TX_RESET_N                                  ,
        PMA_REG_TX_RESERVED_64                      =>     CP_LANE2_PMA_REG_TX_RESERVED_64                              ,
        PMA_REG_TX_RESERVED_65                      =>     CP_LANE2_PMA_REG_TX_RESERVED_65                              ,
        PMA_REG_TX_BUSWIDTH_OW                      =>     CP_LANE2_PMA_REG_TX_BUSWIDTH_OW                              ,
        PMA_REG_TX_BUSWIDTH                         =>     CP_LANE2_PMA_REG_TX_BUSWIDTH                                 ,
        PMA_REG_PLL_READY_OW                        =>     CP_LANE2_PMA_REG_PLL_READY_OW                                ,
        PMA_REG_PLL_READY                           =>     CP_LANE2_PMA_REG_PLL_READY                                   ,
        PMA_REG_TX_RESERVED_72                      =>     CP_LANE2_PMA_REG_TX_RESERVED_72                              ,
        PMA_REG_TX_RESERVED_73                      =>     CP_LANE2_PMA_REG_TX_RESERVED_73                              ,
        PMA_REG_TX_RESERVED_74                      =>     CP_LANE2_PMA_REG_TX_RESERVED_74                              ,
        PMA_REG_EI_PCLK_DELAY_SEL                   =>     CP_LANE2_PMA_REG_EI_PCLK_DELAY_SEL                           ,
        PMA_REG_TX_RESERVED_77                      =>     CP_LANE2_PMA_REG_TX_RESERVED_77                              ,
        PMA_REG_TX_RESERVED_83_78                   =>     CP_LANE2_PMA_REG_TX_RESERVED_83_78                           ,
        PMA_REG_TX_RESERVED_89_84                   =>     CP_LANE2_PMA_REG_TX_RESERVED_89_84                           ,
        PMA_REG_TX_RESERVED_95_90                   =>     CP_LANE2_PMA_REG_TX_RESERVED_95_90                           ,
        PMA_REG_TX_RESERVED_101_96                  =>     CP_LANE2_PMA_REG_TX_RESERVED_101_96                          ,
        PMA_REG_TX_RESERVED_107_102                 =>     CP_LANE2_PMA_REG_TX_RESERVED_107_102                         ,
        PMA_REG_TX_RESERVED_113_108                 =>     CP_LANE2_PMA_REG_TX_RESERVED_113_108                         ,
        PMA_REG_TX_AMP_DAC0                         =>     CP_LANE2_PMA_REG_TX_AMP_DAC0                                 ,
        PMA_REG_TX_AMP_DAC1                         =>     CP_LANE2_PMA_REG_TX_AMP_DAC1                                 ,
        PMA_REG_TX_AMP_DAC2                         =>     CP_LANE2_PMA_REG_TX_AMP_DAC2                                 ,
        PMA_REG_TX_AMP_DAC3                         =>     CP_LANE2_PMA_REG_TX_AMP_DAC3                                 ,
        PMA_REG_TX_RESERVED_143_138                 =>     CP_LANE2_PMA_REG_TX_RESERVED_143_138                         ,
        PMA_REG_TX_MARGIN                           =>     CP_LANE2_PMA_REG_TX_MARGIN                                   ,
        PMA_REG_TX_MARGIN_OW                        =>     CP_LANE2_PMA_REG_TX_MARGIN_OW                                ,
        PMA_REG_TX_RESERVED_149_148                 =>     CP_LANE2_PMA_REG_TX_RESERVED_149_148                         ,
        PMA_REG_TX_RESERVED_150                     =>     CP_LANE2_PMA_REG_TX_RESERVED_150                             ,
        PMA_REG_TX_SWING                            =>     CP_LANE2_PMA_REG_TX_SWING                                    ,
        PMA_REG_TX_SWING_OW                         =>     CP_LANE2_PMA_REG_TX_SWING_OW                                 ,
        PMA_REG_TX_RESERVED_153                     =>     CP_LANE2_PMA_REG_TX_RESERVED_153                             ,
        PMA_REG_TX_RXDET_THRESHOLD                  =>     CP_LANE2_PMA_REG_TX_RXDET_THRESHOLD                          ,
        PMA_REG_TX_RESERVED_157_156                 =>     CP_LANE2_PMA_REG_TX_RESERVED_157_156                         ,
        PMA_REG_TX_BEACON_OSC_CTRL                  =>     CP_LANE2_PMA_REG_TX_BEACON_OSC_CTRL                          ,
        PMA_REG_TX_RESERVED_160_159                 =>     CP_LANE2_PMA_REG_TX_RESERVED_160_159                         ,
        PMA_REG_TX_RESERVED_162_161                 =>     CP_LANE2_PMA_REG_TX_RESERVED_162_161                         ,
        PMA_REG_TX_TX2RX_SLPBACK_EN                 =>     CP_LANE2_PMA_REG_TX_TX2RX_SLPBACK_EN                         ,
        PMA_REG_TX_PCLK_EDGE_SEL                    =>     CP_LANE2_PMA_REG_TX_PCLK_EDGE_SEL                            ,
        PMA_REG_TX_RXDET_STATUS_OW                  =>     CP_LANE2_PMA_REG_TX_RXDET_STATUS_OW                          ,
        PMA_REG_TX_RXDET_STATUS                     =>     CP_LANE2_PMA_REG_TX_RXDET_STATUS                             ,
        PMA_REG_TX_PRBS_GEN_EN                      =>     CP_LANE2_PMA_REG_TX_PRBS_GEN_EN                              ,
        PMA_REG_TX_PRBS_GEN_WIDTH_SEL               =>     CP_LANE2_PMA_REG_TX_PRBS_GEN_WIDTH_SEL                       ,
        PMA_REG_TX_PRBS_SEL                         =>     CP_LANE2_PMA_REG_TX_PRBS_SEL                                 ,
        PMA_REG_TX_UDP_DATA_7_TO_0                  =>     CP_LANE2_PMA_REG_TX_UDP_DATA_7_TO_0                          ,
        PMA_REG_TX_UDP_DATA_15_TO_8                 =>     CP_LANE2_PMA_REG_TX_UDP_DATA_15_TO_8                         ,
        PMA_REG_TX_UDP_DATA_19_TO_16                =>     CP_LANE2_PMA_REG_TX_UDP_DATA_19_TO_16                        ,
        PMA_REG_TX_RESERVED_192                     =>     CP_LANE2_PMA_REG_TX_RESERVED_192                             ,
        PMA_REG_TX_FIFO_WP_CTRL                     =>     CP_LANE2_PMA_REG_TX_FIFO_WP_CTRL                             ,
        PMA_REG_TX_FIFO_EN                          =>     CP_LANE2_PMA_REG_TX_FIFO_EN                                  ,
        PMA_REG_TX_DATA_MUX_SEL                     =>     CP_LANE2_PMA_REG_TX_DATA_MUX_SEL                             ,
        PMA_REG_TX_ERR_INSERT                       =>     CP_LANE2_PMA_REG_TX_ERR_INSERT                               ,
        PMA_REG_TX_RESERVED_203_200                 =>     CP_LANE2_PMA_REG_TX_RESERVED_203_200                         ,
        PMA_REG_TX_RESERVED_204                     =>     CP_LANE2_PMA_REG_TX_RESERVED_204                             ,
        PMA_REG_TX_SATA_EN                          =>     CP_LANE2_PMA_REG_TX_SATA_EN                                  ,
        PMA_REG_TX_RESERVED_207_206                 =>     CP_LANE2_PMA_REG_TX_RESERVED_207_206                         ,
        PMA_REG_RATE_CHANGE_TXPCLK_ON_OW            =>     CP_LANE2_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW                    ,
        PMA_REG_RATE_CHANGE_TXPCLK_ON               =>     CP_LANE2_PMA_REG_RATE_CHANGE_TXPCLK_ON                       ,
        PMA_REG_TX_CFG_POST1                        =>     CP_LANE2_PMA_REG_TX_CFG_POST1                                ,
        PMA_REG_TX_CFG_POST2                        =>     CP_LANE2_PMA_REG_TX_CFG_POST2                                ,
        PMA_REG_TX_DEEMP                            =>     CP_LANE2_PMA_REG_TX_DEEMP                                    ,
        PMA_REG_TX_DEEMP_OW                         =>     CP_LANE2_PMA_REG_TX_DEEMP_OW                                 ,
        PMA_REG_TX_RESERVED_224_223                 =>     CP_LANE2_PMA_REG_TX_RESERVED_224_223                         ,
        PMA_REG_TX_RESERVED_225                     =>     CP_LANE2_PMA_REG_TX_RESERVED_225                             ,
        PMA_REG_TX_RESERVED_229_226                 =>     CP_LANE2_PMA_REG_TX_RESERVED_229_226                         ,
        PMA_REG_TX_OOB_DELAY_SEL                    =>     CP_LANE2_PMA_REG_TX_OOB_DELAY_SEL                            ,
        PMA_REG_TX_POLARITY                         =>     CP_LANE2_PMA_REG_TX_POLARITY                                 ,
        PMA_REG_ANA_TX_JTAG_DATA_O_SEL              =>     CP_LANE2_PMA_REG_ANA_TX_JTAG_DATA_O_SEL                      ,
        PMA_REG_TX_RESERVED_236                     =>     CP_LANE2_PMA_REG_TX_RESERVED_236                             ,
        PMA_REG_TX_LS_MODE_EN                       =>     CP_LANE2_PMA_REG_TX_LS_MODE_EN                               ,
        PMA_REG_TX_JTAG_MODE_EN_OW                  =>     CP_LANE2_PMA_REG_TX_JTAG_MODE_EN_OW                          ,
        PMA_REG_TX_JTAG_MODE_EN                     =>     CP_LANE2_PMA_REG_TX_JTAG_MODE_EN                             ,
        PMA_REG_RX_JTAG_MODE_EN_OW                  =>     CP_LANE2_PMA_REG_RX_JTAG_MODE_EN_OW                          ,
        PMA_REG_RX_JTAG_MODE_EN                     =>     CP_LANE2_PMA_REG_RX_JTAG_MODE_EN                             ,
        PMA_REG_RX_JTAG_OE                          =>     CP_LANE2_PMA_REG_RX_JTAG_OE                                  ,
        PMA_REG_RX_ACJTAG_VHYSTSEL                  =>     CP_LANE2_PMA_REG_RX_ACJTAG_VHYSTSEL                          ,
        PMA_REG_TX_RES_CAL_EN                       =>     CP_LANE2_PMA_REG_TX_RES_CAL_EN                               ,
        PMA_REG_RX_TERM_MODE_CTRL                   =>     CP_LANE2_PMA_REG_RX_TERM_MODE_CTRL                           ,
        PMA_REG_TX_RESERVED_251_250                 =>     CP_LANE2_PMA_REG_TX_RESERVED_251_250                         ,
        PMA_REG_PLPBK_TXPCLK_EN                     =>     CP_LANE2_PMA_REG_PLPBK_TXPCLK_EN                             ,
        PMA_REG_TX_RESERVED_253                     =>     CP_LANE2_PMA_REG_TX_RESERVED_253                             ,
        PMA_REG_TX_RESERVED_254                     =>     CP_LANE2_PMA_REG_TX_RESERVED_254                             ,
        PMA_REG_TX_RESERVED_255                     =>     CP_LANE2_PMA_REG_TX_RESERVED_255                             ,
        PMA_REG_TX_RESERVED_256                     =>     CP_LANE2_PMA_REG_TX_RESERVED_256                             ,
        PMA_REG_TX_RESERVED_257                     =>     CP_LANE2_PMA_REG_TX_RESERVED_257                             ,
        PMA_REG_TX_PH_SEL                           =>     CP_LANE2_PMA_REG_TX_PH_SEL                                   ,
        PMA_REG_TX_CFG_PRE                          =>     CP_LANE2_PMA_REG_TX_CFG_PRE                                  ,
        PMA_REG_TX_CFG_MAIN                         =>     CP_LANE2_PMA_REG_TX_CFG_MAIN                                 ,
        PMA_REG_CFG_POST                            =>     CP_LANE2_PMA_REG_CFG_POST                                    ,
        PMA_REG_PD_MAIN                             =>     CP_LANE2_PMA_REG_PD_MAIN                                     ,
        PMA_REG_PD_PRE                              =>     CP_LANE2_PMA_REG_PD_PRE                                      ,
        PMA_REG_TX_LS_DATA                          =>     CP_LANE2_PMA_REG_TX_LS_DATA                                  ,
        PMA_REG_TX_DCC_BUF_SZ_SEL                   =>     CP_LANE2_PMA_REG_TX_DCC_BUF_SZ_SEL                           ,
        PMA_REG_TX_DCC_CAL_CUR_TUNE                 =>     CP_LANE2_PMA_REG_TX_DCC_CAL_CUR_TUNE                         ,
        PMA_REG_TX_DCC_CAL_EN                       =>     CP_LANE2_PMA_REG_TX_DCC_CAL_EN                               ,
        PMA_REG_TX_DCC_CUR_SS                       =>     CP_LANE2_PMA_REG_TX_DCC_CUR_SS                               ,
        PMA_REG_TX_DCC_FA_CTRL                      =>     CP_LANE2_PMA_REG_TX_DCC_FA_CTRL                              ,
        PMA_REG_TX_DCC_RI_CTRL                      =>     CP_LANE2_PMA_REG_TX_DCC_RI_CTRL                              ,
        PMA_REG_ATB_SEL_2_TO_0                      =>     CP_LANE2_PMA_REG_ATB_SEL_2_TO_0                              ,
        PMA_REG_ATB_SEL_9_TO_3                      =>     CP_LANE2_PMA_REG_ATB_SEL_9_TO_3                              ,
        PMA_REG_TX_CFG_7_TO_0                       =>     CP_LANE2_PMA_REG_TX_CFG_7_TO_0                               ,
        PMA_REG_TX_CFG_15_TO_8                      =>     CP_LANE2_PMA_REG_TX_CFG_15_TO_8                              ,
        PMA_REG_TX_CFG_23_TO_16                     =>     CP_LANE2_PMA_REG_TX_CFG_23_TO_16                             ,
        PMA_REG_TX_CFG_31_TO_24                     =>     CP_LANE2_PMA_REG_TX_CFG_31_TO_24                             ,
        PMA_REG_TX_OOB_EI_EN                        =>     CP_LANE2_PMA_REG_TX_OOB_EI_EN                                ,
        PMA_REG_TX_OOB_EI_EN_OW                     =>     CP_LANE2_PMA_REG_TX_OOB_EI_EN_OW                             ,
        PMA_REG_TX_BEACON_EN_DELAYED                =>     CP_LANE2_PMA_REG_TX_BEACON_EN_DELAYED                        ,
        PMA_REG_TX_BEACON_EN_DELAYED_OW             =>     CP_LANE2_PMA_REG_TX_BEACON_EN_DELAYED_OW                     ,
        PMA_REG_TX_JTAG_DATA                        =>     CP_LANE2_PMA_REG_TX_JTAG_DATA                                ,
        PMA_REG_TX_RXDET_TIMER_SEL                  =>     CP_LANE2_PMA_REG_TX_RXDET_TIMER_SEL                          ,
        PMA_REG_TX_CFG1_7_0                         =>     CP_LANE2_PMA_REG_TX_CFG1_7_0                                 ,
        PMA_REG_TX_CFG1_15_8                        =>     CP_LANE2_PMA_REG_TX_CFG1_15_8                                ,
        PMA_REG_TX_CFG1_23_16                       =>     CP_LANE2_PMA_REG_TX_CFG1_23_16                               ,
        PMA_REG_TX_CFG1_31_24                       =>     CP_LANE2_PMA_REG_TX_CFG1_31_24                               ,
        PMA_REG_CFG_LANE_POWERUP                    =>     CP_LANE2_PMA_REG_CFG_LANE_POWERUP                            ,
        PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH         =>     CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH                 ,
        PMA_REG_CFG_TX_LANE_POWERUP_PISO            =>     CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_PISO                    ,
        PMA_REG_CFG_TX_LANE_POWERUP_DRIVER          =>     CP_LANE2_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER
    )
    port map
    (
        P_TX_SDN                           =>     PAD_TX_SDN2                              ,//PAD PIN  
        P_TX_SDP                           =>     PAD_TX_SDP2                              ,//PAD PIN  
        P_PCS_RX_MCB_STATUS                =>     PCS_RX_MCB_STATUS[2]                   ,
        P_PCS_LSM_SYNCED                   =>     PCS_LSM_SYNCED[2]                      ,
        P_CFG_READY                        =>     CFG_READY_2                           ,
        P_CFG_RDATA                        =>     CFG_RDATA_2                           ,
        P_CFG_INT                          =>     CFG_INT_2                             ,
        P_RDATA                            =>     RDATA_2                               ,
        P_RCLK2FABRIC                      =>     RCLK2FABRIC[2]                         ,
        P_TCLK2FABRIC                      =>     TCLK2FABRIC[2]                         ,
        P_RX_SIGDET_STATUS                 =>     RX_SIGDET_STATUS_2                    ,
        P_RX_SATA_COMINIT                  =>     RX_SATA_COMINIT_2                     ,
        P_RX_SATA_COMWAKE                  =>     RX_SATA_COMWAKE_2                     ,
        P_RX_LS_DATA                       =>     RX_LS_DATA_2                          ,
        P_RX_READY                         =>     RX_READY_2                            ,
        P_TEST_STATUS                      =>     TEST_STATUS_2                         ,
        P_TX_RXDET_STATUS                  =>     TX_RXDET_STATUS_2                     ,
        P_CA_ALIGN_RX                      =>     CA_ALIGN_RX[2]                         ,
        P_CA_ALIGN_TX                      =>     CA_ALIGN_TX[2]                         ,
        //PMA_RCLK                         =>     PMA_RCLK                              ,
        //LANE_COUT_BUS_FORWARD            =>     LANE_COUT_BUS_FORWARD               ,
        //APATTERN_STATUS_COUT             =>     APATTERN_STATUS_COUT                  ,
        TXPCLK_PLL                         =>     TXPCLK_PLL_2                            ,
        P_RX_SDN                           =>     PAD_RX_SDN2                              ,//PAD PIN  
        P_RX_SDP                           =>     PAD_RX_SDP2                              ,//PAD PIN  
        P_RX_CLK_FR_CORE                   =>     RX2_CLK_FR_CORE                      ,
        P_RCLK2_FR_CORE                    =>     RCLK2_2_FR_CORE                       ,
        P_TX_CLK_FR_CORE                   =>     TX2_CLK_FR_CORE                      ,
        P_TCLK2_FR_CORE                    =>     TCLK2_2_FR_CORE                       ,
        P_PCS_TX_RST                       =>     PCS_TX_RST_2                          ,
        P_PCS_RX_RST                       =>     PCS_RX_RST_2                          ,
        P_PCS_CB_RST                       =>     PCS_CB_RST_2                          ,
        P_RXGEAR_SLIP                      =>     RXGEAR_SLIP_2                         ,
        P_CFG_CLK                          =>     CFG_CLK_2                             ,
        P_CFG_RST                          =>     CFG_RST_2                             ,
        P_CFG_PSEL                         =>     CFG_PSEL_2                            ,
        P_CFG_ENABLE                       =>     CFG_ENABLE_2                          ,
        P_CFG_WRITE                        =>     CFG_WRITE_2                           ,
        P_CFG_ADDR                         =>     CFG_ADDR_2                            ,
        P_CFG_WDATA                        =>     CFG_WDATA_2                           ,
        P_TDATA                            =>     TDATA_2                               ,
        P_PCS_WORD_ALIGN_EN                =>     PCS_WORD_ALIGN_EN[2]                   ,
        P_RX_POLARITY_INVERT               =>     RX_POLARITY_INVERT[2]                  ,
        P_CEB_ADETECT_EN                   =>     CEB_ADETECT_EN[2]                      ,
        P_PCS_MCB_EXT_EN                   =>     PCS_MCB_EXT_EN[2]                      ,
        P_PCS_NEAREND_LOOP                 =>     PCS_NEAREND_LOOP[2]                    ,
        P_PCS_FAREND_LOOP                  =>     PCS_FAREND_LOOP[2]                     ,
        P_PMA_NEAREND_PLOOP                =>     PMA_NEAREND_PLOOP[2]                   ,
        P_PMA_NEAREND_SLOOP                =>     PMA_NEAREND_SLOOP[2]                   ,
        P_PMA_FAREND_PLOOP                 =>     PMA_FAREND_PLOOP[2]                    ,
        P_LANE_PD                          =>     LANE_PD_2                             ,
        P_LANE_RST                         =>     LANE_RST_2                            ,
        P_RX_LANE_PD                       =>     RX_LANE_PD_2                          ,
        P_RX_PMA_RST                       =>     RX_PMA_RST_2                          ,
        P_CTLE_ADP_RST                     =>     CTLE_ADP_RST_2                        ,
        P_TX_DEEMP                         =>     TX_DEEMP_2                            ,
        P_TX_LS_DATA                       =>     TX_LS_DATA_2                          ,
        P_TX_BEACON_EN                     =>     TX_BEACON_EN_2                        ,
        P_TX_SWING                         =>     TX_SWING_2                            ,
        P_TX_RXDET_REQ                     =>     TX_RXDET_REQ_2                        ,
        P_TX_RATE                          =>     TX_RATE_2                             ,
        P_TX_BUSWIDTH                      =>     TX_BUSWIDTH_2                         ,
        P_TX_MARGIN                        =>     TX_MARGIN_2                           ,
        P_TX_PMA_RST                       =>     TX_PMA_RST_2                          ,
        P_TX_LANE_PD_CLKPATH               =>     TX_LANE_PD_CLKPATH_2                  ,
        P_TX_LANE_PD_PISO                  =>     TX_LANE_PD_PISO_2                     ,
        P_TX_LANE_PD_DRIVER                =>     TX_LANE_PD_DRIVER_2                   ,
        P_RX_RATE                          =>     RX_RATE_2                             ,
        P_RX_BUSWIDTH                      =>     RX_BUSWIDTH_2                         ,
        P_RX_HIGHZ                         =>     RX_HIGHZ_2                            ,
        P_CIM_CLK_ALIGNER_RX               =>     CIM_CLK_ALIGNER_RX2                  ,
        P_CIM_CLK_ALIGNER_TX               =>     CIM_CLK_ALIGNER_TX2                  ,
        P_CIM_DYN_DLY_SEL_RX               =>     CIM_DYN_DLY_SEL_RX2                  ,
        P_CIM_DYN_DLY_SEL_TX               =>     CIM_DYN_DLY_SEL_TX2                  ,
        P_CIM_START_ALIGN_RX               =>     CIM_START_ALIGN_RX2                  ,
        P_CIM_START_ALIGN_TX               =>     CIM_START_ALIGN_TX2                  ,
        //MCB_RCLK                         =>     MCB_RCLK                              ,
        SYNC                               =>     SYNC_CH2                                  ,
        RATE_CHANGE                        =>     RATE_CHANGE_CH2                           ,
        PLL_LOCK_SEL                       =>     PLL_LOCK_SEL_2                          ,
        //LANE_CIN_BUS_FORWARD             =>     LANE_CIN_BUS_FORWARD                ,
        //APATTERN_STATUS_CIN              =>     APATTERN_STATUS_CIN                   ,
        CLK_TXP                            =>     CLK_TXP_2                               ,
        CLK_TXN                            =>     CLK_TXN_2                               ,
        CLK_RX0                            =>     CLK_RX0_2                               ,
        CLK_RX90                           =>     CLK_RX90_2                              ,
        CLK_RX180                          =>     CLK_RX180_2                             ,
        CLK_RX270                          =>     CLK_RX270_2                             ,
        PLL_PD_I                           =>     PLL_PD_I_2                              ,
        PLL_RESET_I                        =>     PLL_RESET_I_2                           ,
        PLL_REFCLK_I                       =>     PLL_REFCLK_I_2                          //,
        //PLL_RES_TRIM_I                   =>     PLL_RES_TRIM_I                          ,
        //HSST_RST                           =>     HSST_RST
    );
    
    operator V_HSSTLP_LANE HSSTLP_LANE_LANE3
    parameter map
    (
        MUX_BIAS                                    =>     CP_LANE3_MUX_BIAS                                            ,
        PD_CLK                                      =>     CP_LANE3_PD_CLK                                              ,
        REG_SYNC                                    =>     CP_LANE3_REG_SYNC                                            ,
        REG_SYNC_OW                                 =>     CP_LANE3_REG_SYNC_OW                                         ,
        PLL_LOCK_OW                                 =>     CP_LANE3_PLL_LOCK_OW                                         ,
        PLL_LOCK_OW_EN                              =>     CP_LANE3_PLL_LOCK_OW_EN                                      ,
        PCS_SLAVE                              =>     CP_LANE3_PCS_SLAVE                                           ,
        PCS_BYPASS_WORD_ALIGN                       =>     CP_LANE3_PCS_BYPASS_WORD_ALIGN                               ,
        PCS_BYPASS_DENC                             =>     CP_LANE3_PCS_BYPASS_DENC                                     ,
        PCS_BYPASS_BONDING                          =>     CP_LANE3_PCS_BYPASS_BONDING                                  ,
        PCS_BYPASS_CTC                              =>     CP_LANE3_PCS_BYPASS_CTC                                      ,
        PCS_BYPASS_GEAR                             =>     CP_LANE3_PCS_BYPASS_GEAR                                     ,
        PCS_BYPASS_BRIDGE                           =>     CP_LANE3_PCS_BYPASS_BRIDGE                                   ,
        PCS_BYPASS_BRIDGE_FIFO                      =>     CP_LANE3_PCS_BYPASS_BRIDGE_FIFO                              ,
        PCS_DATA_MODE                               =>     CP_LANE3_PCS_DATA_MODE                                       ,
        PCS_RX_POLARITY_INV                         =>     CP_LANE3_PCS_RX_POLARITY_INV                                 ,
        PCS_ALIGN_MODE                              =>     CP_LANE3_PCS_ALIGN_MODE                                      ,
        PCS_SAMP_16B                                =>     CP_LANE3_PCS_SAMP_16B                                        ,
        PCS_FARLP_PWR_REDUCTION                     =>     CP_LANE3_PCS_FARLP_PWR_REDUCTION                             ,
        PCS_COMMA_REG0                              =>     CP_LANE3_PCS_COMMA_REG0                                      ,
        PCS_COMMA_MASK                              =>     CP_LANE3_PCS_COMMA_MASK                                      ,
        PCS_CEB_MODE                                =>     CP_LANE3_PCS_CEB_MODE                                        ,
        PCS_CTC_MODE                                =>     CP_LANE3_PCS_CTC_MODE                                        ,
        PCS_A_REG                                   =>     CP_LANE3_PCS_A_REG                                           ,
        PCS_GE_AUTO_EN                              =>     CP_LANE3_PCS_GE_AUTO_EN                                      ,
        PCS_SKIP_REG0                               =>     CP_LANE3_PCS_SKIP_REG0                                       ,
        PCS_SKIP_REG1                               =>     CP_LANE3_PCS_SKIP_REG1                                       ,
        PCS_SKIP_REG2                               =>     CP_LANE3_PCS_SKIP_REG2                                       ,
        PCS_SKIP_REG3                               =>     CP_LANE3_PCS_SKIP_REG3                                       ,
        PCS_DEC_DUAL                                =>     CP_LANE3_PCS_DEC_DUAL                                        ,
        PCS_SPLIT                                   =>     CP_LANE3_PCS_SPLIT                                           ,
        PCS_FIFOFLAG_CTC                            =>     CP_LANE3_PCS_FIFOFLAG_CTC                                    ,
        PCS_COMMA_DET_MODE                          =>     CP_LANE3_PCS_COMMA_DET_MODE                                  ,
        PCS_ERRDETECT_SILENCE                       =>     CP_LANE3_PCS_ERRDETECT_SILENCE                               ,
        PCS_PMA_RCLK_POLINV                         =>     CP_LANE3_PCS_PMA_RCLK_POLINV                                 ,
        PCS_PCS_RCLK_SEL                            =>     CP_LANE3_PCS_PCS_RCLK_SEL                                    ,
        PCS_CB_RCLK_SEL                             =>     CP_LANE3_PCS_CB_RCLK_SEL                                     ,
        PCS_AFTER_CTC_RCLK_SEL                      =>     CP_LANE3_PCS_AFTER_CTC_RCLK_SEL                              ,
        PCS_RCLK_POLINV                             =>     CP_LANE3_PCS_RCLK_POLINV                                     ,
        PCS_BRIDGE_RCLK_SEL                         =>     CP_LANE3_PCS_BRIDGE_RCLK_SEL                                 ,
        PCS_PCS_RCLK_EN                             =>     CP_LANE3_PCS_PCS_RCLK_EN                                     ,
        PCS_CB_RCLK_EN                              =>     CP_LANE3_PCS_CB_RCLK_EN                                      ,
        PCS_AFTER_CTC_RCLK_EN                       =>     CP_LANE3_PCS_AFTER_CTC_RCLK_EN                               ,
        PCS_AFTER_CTC_RCLK_EN_GB                    =>     CP_LANE3_PCS_AFTER_CTC_RCLK_EN_GB                            ,
        PCS_PCS_RX_RSTN                             =>     CP_LANE3_PCS_PCS_RX_RSTN                                     ,
        PCS_PCIE_SLAVE                              =>     CP_LANE3_PCS_PCIE_SLAVE                                      ,
        PCS_RX_64B66B_67B                           =>     CP_LANE3_PCS_RX_64B66B_67B                                   ,
        PCS_RX_BRIDGE_CLK_POLINV                    =>     CP_LANE3_PCS_RX_BRIDGE_CLK_POLINV                            ,
        PCS_PCS_CB_RSTN                             =>     CP_LANE3_PCS_PCS_CB_RSTN                                     ,
        PCS_TX_BRIDGE_GEAR_SEL                      =>     CP_LANE3_PCS_TX_BRIDGE_GEAR_SEL                              ,
        PCS_TX_BYPASS_BRIDGE_UINT                   =>     CP_LANE3_PCS_TX_BYPASS_BRIDGE_UINT                           ,
        PCS_TX_BYPASS_BRIDGE_FIFO                   =>     CP_LANE3_PCS_TX_BYPASS_BRIDGE_FIFO                           ,
        PCS_TX_BYPASS_GEAR                          =>     CP_LANE3_PCS_TX_BYPASS_GEAR                                  ,
        PCS_TX_BYPASS_ENC                           =>     CP_LANE3_PCS_TX_BYPASS_ENC                                   ,
        PCS_TX_BYPASS_BIT_SLIP                      =>     CP_LANE3_PCS_TX_BYPASS_BIT_SLIP                              ,
        PCS_TX_GEAR_SPLIT                           =>     CP_LANE3_PCS_TX_GEAR_SPLIT                                   ,
        PCS_TX_DRIVE_REG_MODE                       =>     CP_LANE3_PCS_TX_DRIVE_REG_MODE                               ,
        PCS_TX_BIT_SLIP_CYCLES                      =>     CP_LANE3_PCS_TX_BIT_SLIP_CYCLES                              ,
        PCS_INT_TX_MASK_0                           =>     CP_LANE3_PCS_INT_TX_MASK_0                                   ,
        PCS_INT_TX_MASK_1                           =>     CP_LANE3_PCS_INT_TX_MASK_1                                   ,
        PCS_INT_TX_MASK_2                           =>     CP_LANE3_PCS_INT_TX_MASK_2                                   ,
        PCS_INT_TX_CLR_0                            =>     CP_LANE3_PCS_INT_TX_CLR_0                                    ,
        PCS_INT_TX_CLR_1                            =>     CP_LANE3_PCS_INT_TX_CLR_1                                    ,
        PCS_INT_TX_CLR_2                            =>     CP_LANE3_PCS_INT_TX_CLR_2                                    ,
        PCS_TX_PMA_TCLK_POLINV                      =>     CP_LANE3_PCS_TX_PMA_TCLK_POLINV                              ,
        PCS_TX_PCS_CLK_EN_SEL                       =>     CP_LANE3_PCS_TX_PCS_CLK_EN_SEL                               ,
        PCS_TX_BRIDGE_TCLK_SEL                      =>     CP_LANE3_PCS_TX_BRIDGE_TCLK_SEL                              ,
        PCS_TX_TCLK_POLINV                          =>     CP_LANE3_PCS_TX_TCLK_POLINV                                  ,
        PCS_PCS_TCLK_SEL                            =>     CP_LANE3_PCS_PCS_TCLK_SEL                                    ,
        PCS_TX_PCS_TX_RSTN                          =>     CP_LANE3_PCS_TX_PCS_TX_RSTN                                  ,
        PCS_TX_SLAVE                                =>     CP_LANE3_PCS_TX_SLAVE                                        ,
        PCS_TX_GEAR_CLK_EN_SEL                      =>     CP_LANE3_PCS_TX_GEAR_CLK_EN_SEL                              ,
        PCS_DATA_WIDTH_MODE                         =>     CP_LANE3_PCS_DATA_WIDTH_MODE                                 ,
        PCS_TX_64B66B_67B                           =>     CP_LANE3_PCS_TX_64B66B_67B                                   ,
        PCS_GEAR_TCLK_SEL                           =>     CP_LANE3_PCS_GEAR_TCLK_SEL                                   ,
        PCS_TX_TCLK2FABRIC_SEL                      =>     CP_LANE3_PCS_TX_TCLK2FABRIC_SEL                              ,
        PCS_TX_OUTZZ                                =>     CP_LANE3_PCS_TX_OUTZZ                                        ,
        PCS_ENC_DUAL                                =>     CP_LANE3_PCS_ENC_DUAL                                        ,
        PCS_TX_BITSLIP_DATA_MODE                    =>     CP_LANE3_PCS_TX_BITSLIP_DATA_MODE                            ,
        PCS_TX_BRIDGE_CLK_POLINV                    =>     CP_LANE3_PCS_TX_BRIDGE_CLK_POLINV                            ,
        PCS_COMMA_REG1                              =>     CP_LANE3_PCS_COMMA_REG1                                      ,
        PCS_RAPID_IMAX                              =>     CP_LANE3_PCS_RAPID_IMAX                                      ,
        PCS_RAPID_VMIN_1                            =>     CP_LANE3_PCS_RAPID_VMIN_1                                    ,
        PCS_RAPID_VMIN_2                            =>     CP_LANE3_PCS_RAPID_VMIN_2                                    ,
        PCS_RX_PRBS_MODE                            =>     CP_LANE3_PCS_RX_PRBS_MODE                                    ,
        PCS_RX_ERRCNT_CLR                           =>     CP_LANE3_PCS_RX_ERRCNT_CLR                                   ,
        PCS_PRBS_ERR_LPBK                           =>     CP_LANE3_PCS_PRBS_ERR_LPBK                                   ,
        PCS_TX_PRBS_MODE                            =>     CP_LANE3_PCS_TX_PRBS_MODE                                    ,
        PCS_TX_INSERT_ER                            =>     CP_LANE3_PCS_TX_INSERT_ER                                    ,
        PCS_ENABLE_PRBS_GEN                         =>     CP_LANE3_PCS_ENABLE_PRBS_GEN                                 ,
        PCS_DEFAULT_RADDR                           =>     CP_LANE3_PCS_DEFAULT_RADDR                                   ,
        PCS_MASTER_CHECK_OFFSET                     =>     CP_LANE3_PCS_MASTER_CHECK_OFFSET                             ,
        PCS_DELAY_SET                               =>     CP_LANE3_PCS_DELAY_SET                                       ,
        PCS_SEACH_OFFSET                            =>     CP_LANE3_PCS_SEACH_OFFSET                                    ,
        PCS_CEB_RAPIDLS_MMAX                        =>     CP_LANE3_PCS_CEB_RAPIDLS_MMAX                                ,
        PCS_CTC_AFULL                               =>     CP_LANE3_PCS_CTC_AFULL                                       ,
        PCS_CTC_AEMPTY                              =>     CP_LANE3_PCS_CTC_AEMPTY                                      ,
        PCS_CTC_CONTI_SKP_SET                       =>     CP_LANE3_PCS_CTC_CONTI_SKP_SET                               ,
        PCS_FAR_LOOP                                =>     CP_LANE3_PCS_FAR_LOOP                                        ,
        PCS_NEAR_LOOP                               =>     CP_LANE3_PCS_NEAR_LOOP                                       ,
        PCS_PMA_TX2RX_PLOOP_EN                      =>     CP_LANE3_PCS_PMA_TX2RX_PLOOP_EN                              ,
        PCS_PMA_TX2RX_SLOOP_EN                      =>     CP_LANE3_PCS_PMA_TX2RX_SLOOP_EN                              ,
        PCS_PMA_RX2TX_PLOOP_EN                      =>     CP_LANE3_PCS_PMA_RX2TX_PLOOP_EN                              ,
        PCS_INT_RX_MASK_0                           =>     CP_LANE3_PCS_INT_RX_MASK_0                                   ,
        PCS_INT_RX_MASK_1                           =>     CP_LANE3_PCS_INT_RX_MASK_1                                   ,
        PCS_INT_RX_MASK_2                           =>     CP_LANE3_PCS_INT_RX_MASK_2                                   ,
        PCS_INT_RX_MASK_3                           =>     CP_LANE3_PCS_INT_RX_MASK_3                                   ,
        PCS_INT_RX_MASK_4                           =>     CP_LANE3_PCS_INT_RX_MASK_4                                   ,
        PCS_INT_RX_MASK_5                           =>     CP_LANE3_PCS_INT_RX_MASK_5                                   ,
        PCS_INT_RX_MASK_6                           =>     CP_LANE3_PCS_INT_RX_MASK_6                                   ,
        PCS_INT_RX_MASK_7                           =>     CP_LANE3_PCS_INT_RX_MASK_7                                   ,
        PCS_INT_RX_CLR_0                            =>     CP_LANE3_PCS_INT_RX_CLR_0                                    ,
        PCS_INT_RX_CLR_1                            =>     CP_LANE3_PCS_INT_RX_CLR_1                                    ,
        PCS_INT_RX_CLR_2                            =>     CP_LANE3_PCS_INT_RX_CLR_2                                    ,
        PCS_INT_RX_CLR_3                            =>     CP_LANE3_PCS_INT_RX_CLR_3                                    ,
        PCS_INT_RX_CLR_4                            =>     CP_LANE3_PCS_INT_RX_CLR_4                                    ,
        PCS_INT_RX_CLR_5                            =>     CP_LANE3_PCS_INT_RX_CLR_5                                    ,
        PCS_INT_RX_CLR_6                            =>     CP_LANE3_PCS_INT_RX_CLR_6                                    ,
        PCS_INT_RX_CLR_7                            =>     CP_LANE3_PCS_INT_RX_CLR_7                                    ,
        PCS_CA_RSTN_RX                              =>     CP_LANE3_PCS_CA_RSTN_RX                                      ,
        PCS_CA_DYN_DLY_EN_RX                        =>     CP_LANE3_PCS_CA_DYN_DLY_EN_RX                                ,
        PCS_CA_DYN_DLY_SEL_RX                       =>     CP_LANE3_PCS_CA_DYN_DLY_SEL_RX                               ,
        PCS_CA_RX                                   =>     CP_LANE3_PCS_CA_RX                                           ,
        PCS_CA_RSTN_TX                              =>     CP_LANE3_PCS_CA_RSTN_TX                                      ,
        PCS_CA_DYN_DLY_EN_TX                        =>     CP_LANE3_PCS_CA_DYN_DLY_EN_TX                                ,
        PCS_CA_DYN_DLY_SEL_TX                       =>     CP_LANE3_PCS_CA_DYN_DLY_SEL_TX                               ,
        PCS_CA_TX                                   =>     CP_LANE3_PCS_CA_TX                                           ,
        PCS_RXPRBS_PWR_REDUCTION                    =>     CP_LANE3_PCS_RXPRBS_PWR_REDUCTION                            ,
        PCS_WDALIGN_PWR_REDUCTION                   =>     CP_LANE3_PCS_WDALIGN_PWR_REDUCTION                           ,
        PCS_RXDEC_PWR_REDUCTION                     =>     CP_LANE3_PCS_RXDEC_PWR_REDUCTION                             ,
        PCS_RXCB_PWR_REDUCTION                      =>     CP_LANE3_PCS_RXCB_PWR_REDUCTION                              ,
        PCS_RXCTC_PWR_REDUCTION                     =>     CP_LANE3_PCS_RXCTC_PWR_REDUCTION                             ,
        PCS_RXGEAR_PWR_REDUCTION                    =>     CP_LANE3_PCS_RXGEAR_PWR_REDUCTION                            ,
        PCS_RXBRG_PWR_REDUCTION                     =>     CP_LANE3_PCS_RXBRG_PWR_REDUCTION                             ,
        PCS_RXTEST_PWR_REDUCTION                    =>     CP_LANE3_PCS_RXTEST_PWR_REDUCTION                            ,
        PCS_TXBRG_PWR_REDUCTION                    =>     CP_LANE3_PCS_TXBRG_PWR_REDUCTION                            ,
        PCS_TXGEAR_PWR_REDUCTION                   =>     CP_LANE3_PCS_TXGEAR_PWR_REDUCTION                           ,
        PCS_TXENC_PWR_REDUCTION                    =>     CP_LANE3_PCS_TXENC_PWR_REDUCTION                            ,
        PCS_TXBSLP_PWR_REDUCTION                   =>     CP_LANE3_PCS_TXBSLP_PWR_REDUCTION                           ,
        PCS_TXPRBS_PWR_REDUCTION                   =>     CP_LANE3_PCS_TXPRBS_PWR_REDUCTION                           ,
        PMA_REG_RX_PD                               =>     CP_LANE3_PMA_REG_RX_PD                                       ,
        PMA_REG_RX_PD_EN                            =>     CP_LANE3_PMA_REG_RX_PD_EN                                    ,
        PMA_REG_RX_RESERVED_2                       =>     CP_LANE3_PMA_REG_RX_RESERVED_2                               ,
        PMA_REG_RX_RESERVED_3                       =>     CP_LANE3_PMA_REG_RX_RESERVED_3                               ,
        PMA_REG_RX_DATAPATH_PD                      =>     CP_LANE3_PMA_REG_RX_DATAPATH_PD                              ,
        PMA_REG_RX_DATAPATH_PD_EN                   =>     CP_LANE3_PMA_REG_RX_DATAPATH_PD_EN                           ,
        PMA_REG_RX_SIGDET_PD                        =>     CP_LANE3_PMA_REG_RX_SIGDET_PD                                ,
        PMA_REG_RX_SIGDET_PD_EN                     =>     CP_LANE3_PMA_REG_RX_SIGDET_PD_EN                             ,
        PMA_REG_RX_DCC_RST_N                        =>     CP_LANE3_PMA_REG_RX_DCC_RST_N                                ,
        PMA_REG_RX_DCC_RST_N_EN                     =>     CP_LANE3_PMA_REG_RX_DCC_RST_N_EN                             ,
        PMA_REG_RX_CDR_RST_N                        =>     CP_LANE3_PMA_REG_RX_CDR_RST_N                                ,
        PMA_REG_RX_CDR_RST_N_EN                     =>     CP_LANE3_PMA_REG_RX_CDR_RST_N_EN                             ,
        PMA_REG_RX_SIGDET_RST_N                     =>     CP_LANE3_PMA_REG_RX_SIGDET_RST_N                             ,
        PMA_REG_RX_SIGDET_RST_N_EN                  =>     CP_LANE3_PMA_REG_RX_SIGDET_RST_N_EN                          ,
        PMA_REG_RXPCLK_SLIP                         =>     CP_LANE3_PMA_REG_RXPCLK_SLIP                                 ,
        PMA_REG_RXPCLK_SLIP_OW                      =>     CP_LANE3_PMA_REG_RXPCLK_SLIP_OW                              ,
        PMA_REG_RX_PCLKSWITCH_RST_N                 =>     CP_LANE3_PMA_REG_RX_PCLKSWITCH_RST_N                         ,
        PMA_REG_RX_PCLKSWITCH_RST_N_EN              =>     CP_LANE3_PMA_REG_RX_PCLKSWITCH_RST_N_EN                      ,
        PMA_REG_RX_PCLKSWITCH                       =>     CP_LANE3_PMA_REG_RX_PCLKSWITCH                               ,
        PMA_REG_RX_PCLKSWITCH_EN                    =>     CP_LANE3_PMA_REG_RX_PCLKSWITCH_EN                            ,
        PMA_REG_RX_HIGHZ                            =>     CP_LANE3_PMA_REG_RX_HIGHZ                                    ,
        PMA_REG_RX_HIGHZ_EN                         =>     CP_LANE3_PMA_REG_RX_HIGHZ_EN                                 ,
        PMA_REG_RX_SIGDET_CLK_WINDOW                =>     CP_LANE3_PMA_REG_RX_SIGDET_CLK_WINDOW                        ,
        PMA_REG_RX_SIGDET_CLK_WINDOW_OW             =>     CP_LANE3_PMA_REG_RX_SIGDET_CLK_WINDOW_OW                     ,
        PMA_REG_RX_PD_BIAS_RX                       =>     CP_LANE3_PMA_REG_RX_PD_BIAS_RX                               ,
        PMA_REG_RX_PD_BIAS_RX_OW                    =>     CP_LANE3_PMA_REG_RX_PD_BIAS_RX_OW                            ,
        PMA_REG_RX_RESET_N                          =>     CP_LANE3_PMA_REG_RX_RESET_N                                  ,
        PMA_REG_RX_RESET_N_OW                       =>     CP_LANE3_PMA_REG_RX_RESET_N_OW                               ,
        PMA_REG_RX_RESERVED_29_28                   =>     CP_LANE3_PMA_REG_RX_RESERVED_29_28                           ,
        PMA_REG_RX_BUSWIDTH                         =>     CP_LANE3_PMA_REG_RX_BUSWIDTH                                 ,
        PMA_REG_RX_BUSWIDTH_EN                      =>     CP_LANE3_PMA_REG_RX_BUSWIDTH_EN                              ,
        PMA_REG_RX_RATE                             =>     CP_LANE3_PMA_REG_RX_RATE                                     ,
        PMA_REG_RX_RESERVED_36                      =>     CP_LANE3_PMA_REG_RX_RESERVED_36                              ,
        PMA_REG_RX_RATE_EN                          =>     CP_LANE3_PMA_REG_RX_RATE_EN                                  ,
        PMA_REG_RX_RES_TRIM                         =>     CP_LANE3_PMA_REG_RX_RES_TRIM                                 ,
        PMA_REG_RX_RESERVED_44                      =>     CP_LANE3_PMA_REG_RX_RESERVED_44                              ,
        PMA_REG_RX_RESERVED_45                      =>     CP_LANE3_PMA_REG_RX_RESERVED_45                              ,
        PMA_REG_RX_SIGDET_STATUS_EN                 =>     CP_LANE3_PMA_REG_RX_SIGDET_STATUS_EN                         ,
        PMA_REG_RX_RESERVED_48_47                   =>     CP_LANE3_PMA_REG_RX_RESERVED_48_47                           ,
        PMA_REG_RX_ICTRL_SIGDET                     =>     CP_LANE3_PMA_REG_RX_ICTRL_SIGDET                             ,
        PMA_REG_CDR_READY_THD                       =>     CP_LANE3_PMA_REG_CDR_READY_THD                               ,
        PMA_REG_RX_RESERVED_65                      =>     CP_LANE3_PMA_REG_RX_RESERVED_65                              ,
        PMA_REG_RX_PCLK_EDGE_SEL                    =>     CP_LANE3_PMA_REG_RX_PCLK_EDGE_SEL                            ,
        PMA_REG_RX_PIBUF_IC                         =>     CP_LANE3_PMA_REG_RX_PIBUF_IC                                 ,
        PMA_REG_RX_RESERVED_69                      =>     CP_LANE3_PMA_REG_RX_RESERVED_69                              ,
        PMA_REG_RX_DCC_IC_RX                        =>     CP_LANE3_PMA_REG_RX_DCC_IC_RX                                ,
        PMA_REG_CDR_READY_CHECK_CTRL                =>     CP_LANE3_PMA_REG_CDR_READY_CHECK_CTRL                        ,
        PMA_REG_RX_ICTRL_TRX                        =>     CP_LANE3_PMA_REG_RX_ICTRL_TRX                                ,
        PMA_REG_RX_RESERVED_77_76                   =>     CP_LANE3_PMA_REG_RX_RESERVED_77_76                           ,
        PMA_REG_RX_RESERVED_79_78                   =>     CP_LANE3_PMA_REG_RX_RESERVED_79_78                           ,
        PMA_REG_RX_RESERVED_81_80                   =>     CP_LANE3_PMA_REG_RX_RESERVED_81_80                           ,
        PMA_REG_RX_ICTRL_PIBUF                      =>     CP_LANE3_PMA_REG_RX_ICTRL_PIBUF                              ,
        PMA_REG_RX_ICTRL_PI                         =>     CP_LANE3_PMA_REG_RX_ICTRL_PI                                 ,
        PMA_REG_RX_ICTRL_DCC                        =>     CP_LANE3_PMA_REG_RX_ICTRL_DCC                                ,
        PMA_REG_RX_RESERVED_89_88                   =>     CP_LANE3_PMA_REG_RX_RESERVED_89_88                           ,
        PMA_REG_TX_RATE                             =>     CP_LANE3_PMA_REG_TX_RATE                                     ,
        PMA_REG_RX_RESERVED_92                      =>     CP_LANE3_PMA_REG_RX_RESERVED_92                              ,
        PMA_REG_TX_RATE_EN                          =>     CP_LANE3_PMA_REG_TX_RATE_EN                                  ,
        PMA_REG_RX_TX2RX_PLPBK_RST_N                =>     CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_RST_N                        ,
        PMA_REG_RX_TX2RX_PLPBK_RST_N_EN             =>     CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_RST_N_EN                     ,
        PMA_REG_RX_TX2RX_PLPBK_EN                   =>     CP_LANE3_PMA_REG_RX_TX2RX_PLPBK_EN                           ,
        PMA_REG_TXCLK_SEL                           =>     CP_LANE3_PMA_REG_TXCLK_SEL                                   ,
        PMA_REG_RX_DATA_POLARITY                    =>     CP_LANE3_PMA_REG_RX_DATA_POLARITY                            ,
        PMA_REG_RX_ERR_INSERT                       =>     CP_LANE3_PMA_REG_RX_ERR_INSERT                               ,
        PMA_REG_UDP_CHK_EN                          =>     CP_LANE3_PMA_REG_UDP_CHK_EN                                  ,
        PMA_REG_PRBS_SEL                            =>     CP_LANE3_PMA_REG_PRBS_SEL                                    ,
        PMA_REG_PRBS_CHK_EN                         =>     CP_LANE3_PMA_REG_PRBS_CHK_EN                                 ,
        PMA_REG_PRBS_CHK_WIDTH_SEL                  =>     CP_LANE3_PMA_REG_PRBS_CHK_WIDTH_SEL                          ,
        PMA_REG_BIST_CHK_PAT_SEL                    =>     CP_LANE3_PMA_REG_BIST_CHK_PAT_SEL                            ,
        PMA_REG_LOAD_ERR_CNT                        =>     CP_LANE3_PMA_REG_LOAD_ERR_CNT                                ,
        PMA_REG_CHK_COUNTER_EN                      =>     CP_LANE3_PMA_REG_CHK_COUNTER_EN                              ,
        PMA_REG_CDR_PROP_GAIN                       =>     CP_LANE3_PMA_REG_CDR_PROP_GAIN                               ,
        PMA_REG_CDR_PROP_TURBO_GAIN                 =>     CP_LANE3_PMA_REG_CDR_PROP_TURBO_GAIN                         ,
        PMA_REG_CDR_INT_GAIN                        =>     CP_LANE3_PMA_REG_CDR_INT_GAIN                                ,
        PMA_REG_CDR_INT_TURBO_GAIN                  =>     CP_LANE3_PMA_REG_CDR_INT_TURBO_GAIN                          ,
        PMA_REG_CDR_INT_SAT_MAX                     =>     CP_LANE3_PMA_REG_CDR_INT_SAT_MAX                             ,
        PMA_REG_CDR_INT_SAT_MIN                     =>     CP_LANE3_PMA_REG_CDR_INT_SAT_MIN                             ,
        PMA_REG_CDR_INT_RST                         =>     CP_LANE3_PMA_REG_CDR_INT_RST                                 ,
        PMA_REG_CDR_INT_RST_OW                      =>     CP_LANE3_PMA_REG_CDR_INT_RST_OW                              ,
        PMA_REG_CDR_PROP_RST                        =>     CP_LANE3_PMA_REG_CDR_PROP_RST                                ,
        PMA_REG_CDR_PROP_RST_OW                     =>     CP_LANE3_PMA_REG_CDR_PROP_RST_OW                             ,
        PMA_REG_CDR_LOCK_RST                        =>     CP_LANE3_PMA_REG_CDR_LOCK_RST                                ,
        PMA_REG_CDR_LOCK_RST_OW                     =>     CP_LANE3_PMA_REG_CDR_LOCK_RST_OW                             ,
        PMA_REG_CDR_RX_PI_FORCE_SEL                 =>     CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_SEL                         ,
        PMA_REG_CDR_RX_PI_FORCE_D                   =>     CP_LANE3_PMA_REG_CDR_RX_PI_FORCE_D                           ,
        PMA_REG_CDR_LOCK_TIMER                      =>     CP_LANE3_PMA_REG_CDR_LOCK_TIMER                              ,
        PMA_REG_CDR_TURBO_MODE_TIMER                =>     CP_LANE3_PMA_REG_CDR_TURBO_MODE_TIMER                        ,
        PMA_REG_CDR_LOCK_VAL                        =>     CP_LANE3_PMA_REG_CDR_LOCK_VAL                                ,
        PMA_REG_CDR_LOCK_OW                         =>     CP_LANE3_PMA_REG_CDR_LOCK_OW                                 ,
        PMA_REG_CDR_INT_SAT_DET_EN                  =>     CP_LANE3_PMA_REG_CDR_INT_SAT_DET_EN                          ,
        PMA_REG_CDR_SAT_AUTO_DIS                    =>     CP_LANE3_PMA_REG_CDR_SAT_AUTO_DIS                            ,
        PMA_REG_CDR_GAIN_AUTO                       =>     CP_LANE3_PMA_REG_CDR_GAIN_AUTO                               ,
        PMA_REG_CDR_TURBO_GAIN_AUTO                 =>     CP_LANE3_PMA_REG_CDR_TURBO_GAIN_AUTO                         ,
        PMA_REG_RX_RESERVED_171_167                 =>     CP_LANE3_PMA_REG_RX_RESERVED_171_167                         ,
        PMA_REG_RX_RESERVED_175_172                 =>     CP_LANE3_PMA_REG_RX_RESERVED_175_172                         ,
        PMA_REG_CDR_SAT_DET_STATUS_EN               =>     CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_EN                       ,
        PMA_REG_CDR_SAT_DET_STATUS_RESET_EN         =>     CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_RESET_EN                 ,
        PMA_REG_CDR_PI_CTRL_RST                     =>     CP_LANE3_PMA_REG_CDR_PI_CTRL_RST                             ,
        PMA_REG_CDR_PI_CTRL_RST_OW                  =>     CP_LANE3_PMA_REG_CDR_PI_CTRL_RST_OW                          ,
        PMA_REG_CDR_SAT_DET_RST                     =>     CP_LANE3_PMA_REG_CDR_SAT_DET_RST                             ,
        PMA_REG_CDR_SAT_DET_RST_OW                  =>     CP_LANE3_PMA_REG_CDR_SAT_DET_RST_OW                          ,
        PMA_REG_CDR_SAT_DET_STICKY_RST              =>     CP_LANE3_PMA_REG_CDR_SAT_DET_STICKY_RST                      ,
        PMA_REG_CDR_SAT_DET_STICKY_RST_OW           =>     CP_LANE3_PMA_REG_CDR_SAT_DET_STICKY_RST_OW                   ,
        PMA_REG_CDR_SIGDET_STATUS_DIS               =>     CP_LANE3_PMA_REG_CDR_SIGDET_STATUS_DIS                       ,
        PMA_REG_CDR_SAT_DET_TIMER                   =>     CP_LANE3_PMA_REG_CDR_SAT_DET_TIMER                           ,
        PMA_REG_CDR_SAT_DET_STATUS_VAL              =>     CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_VAL                      ,
        PMA_REG_CDR_SAT_DET_STATUS_OW               =>     CP_LANE3_PMA_REG_CDR_SAT_DET_STATUS_OW                       ,
        PMA_REG_CDR_TURBO_MODE_EN                   =>     CP_LANE3_PMA_REG_CDR_TURBO_MODE_EN                           ,
        PMA_REG_RX_RESERVED_190                     =>     CP_LANE3_PMA_REG_RX_RESERVED_190                             ,
        PMA_REG_RX_RESERVED_193_191                 =>     CP_LANE3_PMA_REG_RX_RESERVED_193_191                         ,
        PMA_REG_CDR_STATUS_FIFO_EN                  =>     CP_LANE3_PMA_REG_CDR_STATUS_FIFO_EN                          ,
        PMA_REG_PMA_TEST_SEL                        =>     CP_LANE3_PMA_REG_PMA_TEST_SEL                                ,
        PMA_REG_OOB_COMWAKE_GAP_MIN                 =>     CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MIN                         ,
        PMA_REG_OOB_COMWAKE_GAP_MAX                 =>     CP_LANE3_PMA_REG_OOB_COMWAKE_GAP_MAX                         ,
        PMA_REG_OOB_COMINIT_GAP_MIN                 =>     CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MIN                         ,
        PMA_REG_OOB_COMINIT_GAP_MAX                 =>     CP_LANE3_PMA_REG_OOB_COMINIT_GAP_MAX                         ,
        PMA_REG_RX_RESERVED_227_226                 =>     CP_LANE3_PMA_REG_RX_RESERVED_227_226                         ,
        PMA_REG_COMWAKE_STATUS_CLEAR                =>     CP_LANE3_PMA_REG_COMWAKE_STATUS_CLEAR                        ,
        PMA_REG_COMINIT_STATUS_CLEAR                =>     CP_LANE3_PMA_REG_COMINIT_STATUS_CLEAR                        ,
        PMA_REG_RX_SYNC_RST_N_EN                    =>     CP_LANE3_PMA_REG_RX_SYNC_RST_N_EN                            ,
        PMA_REG_RX_SYNC_RST_N                       =>     CP_LANE3_PMA_REG_RX_SYNC_RST_N                               ,
        PMA_REG_RX_RESERVED_233_232                 =>     CP_LANE3_PMA_REG_RX_RESERVED_233_232                         ,
        PMA_REG_RX_RESERVED_235_234                 =>     CP_LANE3_PMA_REG_RX_RESERVED_235_234                         ,
        PMA_REG_RX_SATA_COMINIT_OW                  =>     CP_LANE3_PMA_REG_RX_SATA_COMINIT_OW                          ,
        PMA_REG_RX_SATA_COMINIT                     =>     CP_LANE3_PMA_REG_RX_SATA_COMINIT                             ,
        PMA_REG_RX_SATA_COMWAKE_OW                  =>     CP_LANE3_PMA_REG_RX_SATA_COMWAKE_OW                          ,
        PMA_REG_RX_SATA_COMWAKE                     =>     CP_LANE3_PMA_REG_RX_SATA_COMWAKE                             ,
        PMA_REG_RX_RESERVED_241_240                 =>     CP_LANE3_PMA_REG_RX_RESERVED_241_240                         ,
        PMA_REG_RX_DCC_DISABLE                      =>     CP_LANE3_PMA_REG_RX_DCC_DISABLE                              ,
        PMA_REG_RX_RESERVED_243                     =>     CP_LANE3_PMA_REG_RX_RESERVED_243                             ,
        PMA_REG_RX_SLIP_SEL_EN                      =>     CP_LANE3_PMA_REG_RX_SLIP_SEL_EN                              ,
        PMA_REG_RX_SLIP_SEL                         =>     CP_LANE3_PMA_REG_RX_SLIP_SEL                                 ,
        PMA_REG_RX_SLIP_EN                          =>     CP_LANE3_PMA_REG_RX_SLIP_EN                                  ,
        PMA_REG_RX_SIGDET_STATUS_SEL                =>     CP_LANE3_PMA_REG_RX_SIGDET_STATUS_SEL                        ,
        PMA_REG_RX_SIGDET_FSM_RST_N                 =>     CP_LANE3_PMA_REG_RX_SIGDET_FSM_RST_N                         ,
        PMA_REG_RX_RESERVED_254                     =>     CP_LANE3_PMA_REG_RX_RESERVED_254                             ,
        PMA_REG_RX_SIGDET_STATUS                    =>     CP_LANE3_PMA_REG_RX_SIGDET_STATUS                            ,
        PMA_REG_RX_SIGDET_VTH                       =>     CP_LANE3_PMA_REG_RX_SIGDET_VTH                               ,
        PMA_REG_RX_SIGDET_GRM                       =>     CP_LANE3_PMA_REG_RX_SIGDET_GRM                               ,
        PMA_REG_RX_SIGDET_PULSE_EXT                 =>     CP_LANE3_PMA_REG_RX_SIGDET_PULSE_EXT                         ,
        PMA_REG_RX_SIGDET_CH2_SEL                   =>     CP_LANE3_PMA_REG_RX_SIGDET_CH2_SEL                           ,
        PMA_REG_RX_SIGDET_CH2_CHK_WINDOW            =>     CP_LANE3_PMA_REG_RX_SIGDET_CH2_CHK_WINDOW                    ,
        PMA_REG_RX_SIGDET_CHK_WINDOW_EN             =>     CP_LANE3_PMA_REG_RX_SIGDET_CHK_WINDOW_EN                     ,
        PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING       =>     CP_LANE3_PMA_REG_RX_SIGDET_NOSIG_COUNT_SETTING               ,
        PMA_REG_SLIP_FIFO_INV_EN                    =>     CP_LANE3_PMA_REG_SLIP_FIFO_INV_EN                            ,
        PMA_REG_SLIP_FIFO_INV                       =>     CP_LANE3_PMA_REG_SLIP_FIFO_INV                               ,
        PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL         =>     CP_LANE3_PMA_REG_RX_SIGDET_OOB_DET_COUNT_VAL                 ,
        PMA_REG_RX_SIGDET_4OOB_DET_SEL              =>     CP_LANE3_PMA_REG_RX_SIGDET_4OOB_DET_SEL                      ,
        PMA_REG_RX_RESERVED_285_283                 =>     CP_LANE3_PMA_REG_RX_RESERVED_285_283                         ,
        PMA_REG_RX_RESERVED_286                     =>     CP_LANE3_PMA_REG_RX_RESERVED_286                             ,
        PMA_REG_RX_SIGDET_IC_I                      =>     CP_LANE3_PMA_REG_RX_SIGDET_IC_I                              ,
        PMA_REG_RX_OOB_DETECTOR_RESET_N_OW          =>     CP_LANE3_PMA_REG_RX_OOB_DETECTOR_RESET_N_OW                  ,
        PMA_REG_RX_OOB_DETECTOR_RESET_N             =>     CP_LANE3_PMA_REG_RX_OOB_DETECTOR_RESET_N                     ,
        PMA_REG_RX_OOB_DETECTOR_PD_OW               =>     CP_LANE3_PMA_REG_RX_OOB_DETECTOR_PD_OW                       ,
        PMA_REG_RX_OOB_DETECTOR_PD                  =>     CP_LANE3_PMA_REG_RX_OOB_DETECTOR_PD                          ,
        PMA_REG_RX_LS_MODE_EN                       =>     CP_LANE3_PMA_REG_RX_LS_MODE_EN                               ,
        PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL           =>     CP_LANE3_PMA_REG_ANA_RX_EQ1_R_SET_FB_O_SEL                   ,
        PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL           =>     CP_LANE3_PMA_REG_ANA_RX_EQ2_R_SET_FB_O_SEL                   ,
        PMA_REG_RX_EQ1_R_SET_TOP                    =>     CP_LANE3_PMA_REG_RX_EQ1_R_SET_TOP                            ,
        PMA_REG_RX_EQ1_R_SET_FB                     =>     CP_LANE3_PMA_REG_RX_EQ1_R_SET_FB                             ,
        PMA_REG_RX_EQ1_C_SET_FB                     =>     CP_LANE3_PMA_REG_RX_EQ1_C_SET_FB                             ,
        PMA_REG_RX_EQ1_OFF                          =>     CP_LANE3_PMA_REG_RX_EQ1_OFF                                  ,
        PMA_REG_RX_EQ2_R_SET_TOP                    =>     CP_LANE3_PMA_REG_RX_EQ2_R_SET_TOP                            ,
        PMA_REG_RX_EQ2_R_SET_FB                     =>     CP_LANE3_PMA_REG_RX_EQ2_R_SET_FB                             ,
        PMA_REG_RX_EQ2_C_SET_FB                     =>     CP_LANE3_PMA_REG_RX_EQ2_C_SET_FB                             ,
        PMA_REG_RX_EQ2_OFF                          =>     CP_LANE3_PMA_REG_RX_EQ2_OFF                                  ,
        PMA_REG_EQ_DAC                              =>     CP_LANE3_PMA_REG_EQ_DAC                                      ,
        PMA_REG_RX_ICTRL_EQ                         =>     CP_LANE3_PMA_REG_RX_ICTRL_EQ                                 ,
        PMA_REG_EQ_DC_CALIB_EN                      =>     CP_LANE3_PMA_REG_EQ_DC_CALIB_EN                              ,
        PMA_REG_EQ_DC_CALIB_SEL                     =>     CP_LANE3_PMA_REG_EQ_DC_CALIB_SEL                             ,
        PMA_REG_RX_RESERVED_337_330                 =>     CP_LANE3_PMA_REG_RX_RESERVED_337_330                         ,
        PMA_REG_RX_RESERVED_345_338                 =>     CP_LANE3_PMA_REG_RX_RESERVED_345_338                         ,
        PMA_REG_RX_RESERVED_353_346                 =>     CP_LANE3_PMA_REG_RX_RESERVED_353_346                         ,
        PMA_REG_RX_RESERVED_361_354                 =>     CP_LANE3_PMA_REG_RX_RESERVED_361_354                         ,
        PMA_CTLE_CTRL_REG_I                         =>     CP_LANE3_PMA_CTLE_CTRL_REG_I                                 ,
        PMA_CTLE_REG_FORCE_SEL_I                    =>     CP_LANE3_PMA_CTLE_REG_FORCE_SEL_I                            ,
        PMA_CTLE_REG_HOLD_I                         =>     CP_LANE3_PMA_CTLE_REG_HOLD_I                                 ,
        PMA_CTLE_REG_INIT_DAC_I                     =>     CP_LANE3_PMA_CTLE_REG_INIT_DAC_I                             ,
        PMA_CTLE_REG_POLARITY_I                     =>     CP_LANE3_PMA_CTLE_REG_POLARITY_I                             ,
        PMA_CTLE_REG_SHIFTER_GAIN_I                 =>     CP_LANE3_PMA_CTLE_REG_SHIFTER_GAIN_I                         ,
        PMA_CTLE_REG_THRESHOLD_I                    =>     CP_LANE3_PMA_CTLE_REG_THRESHOLD_I                            ,
        PMA_REG_RX_RES_TRIM_EN                      =>     CP_LANE3_PMA_REG_RX_RES_TRIM_EN                              ,
        PMA_REG_RX_RESERVED_393_389                 =>     CP_LANE3_PMA_REG_RX_RESERVED_393_389                         ,
        PMA_CFG_RX_LANE_POWERUP                     =>     CP_LANE3_PMA_CFG_RX_LANE_POWERUP                             ,
        PMA_CFG_RX_PMA_RSTN                         =>     CP_LANE3_PMA_CFG_RX_PMA_RSTN                                 ,
        PMA_INT_PMA_RX_MASK_0                       =>     CP_LANE3_PMA_INT_PMA_RX_MASK_0                               ,
        PMA_INT_PMA_RX_CLR_0                        =>     CP_LANE3_PMA_INT_PMA_RX_CLR_0                                ,
        PMA_CFG_CTLE_ADP_RSTN                       =>     CP_LANE3_PMA_CFG_CTLE_ADP_RSTN                               ,
        PMA_REG_TX_PD                               =>     CP_LANE3_PMA_REG_TX_PD                                       ,
        PMA_REG_TX_PD_OW                            =>     CP_LANE3_PMA_REG_TX_PD_OW                                    ,
        PMA_REG_TX_MAIN_PRE_Z                       =>     CP_LANE3_PMA_REG_TX_MAIN_PRE_Z                               ,
        PMA_REG_TX_MAIN_PRE_Z_OW                    =>     CP_LANE3_PMA_REG_TX_MAIN_PRE_Z_OW                            ,
        PMA_REG_TX_BEACON_TIMER_SEL                 =>     CP_LANE3_PMA_REG_TX_BEACON_TIMER_SEL                         ,
        PMA_REG_TX_RXDET_REQ_OW                     =>     CP_LANE3_PMA_REG_TX_RXDET_REQ_OW                             ,
        PMA_REG_TX_RXDET_REQ                        =>     CP_LANE3_PMA_REG_TX_RXDET_REQ                                ,
        PMA_REG_TX_BEACON_EN_OW                     =>     CP_LANE3_PMA_REG_TX_BEACON_EN_OW                             ,
        PMA_REG_TX_BEACON_EN                        =>     CP_LANE3_PMA_REG_TX_BEACON_EN                                ,
        PMA_REG_TX_EI_EN_OW                         =>     CP_LANE3_PMA_REG_TX_EI_EN_OW                                 ,
        PMA_REG_TX_EI_EN                            =>     CP_LANE3_PMA_REG_TX_EI_EN                                    ,
        PMA_REG_TX_BIT_CONV                         =>     CP_LANE3_PMA_REG_TX_BIT_CONV                                 ,
        PMA_REG_TX_RES_CAL                          =>     CP_LANE3_PMA_REG_TX_RES_CAL                                  ,
        PMA_REG_TX_RESERVED_19                      =>     CP_LANE3_PMA_REG_TX_RESERVED_19                              ,
        PMA_REG_TX_RESERVED_25_20                  =>     CP_LANE3_PMA_REG_TX_RESERVED_25_20                           ,
        PMA_REG_TX_RESERVED_33_26                   =>     CP_LANE3_PMA_REG_TX_RESERVED_33_26                           ,
        PMA_REG_TX_RESERVED_41_34                   =>     CP_LANE3_PMA_REG_TX_RESERVED_41_34                           ,
        PMA_REG_TX_RESERVED_49_42                   =>     CP_LANE3_PMA_REG_TX_RESERVED_49_42                           ,
        PMA_REG_TX_RESERVED_57_50                   =>     CP_LANE3_PMA_REG_TX_RESERVED_57_50                           ,
        PMA_REG_TX_SYNC_OW                          =>     CP_LANE3_PMA_REG_TX_SYNC_OW                                  ,
        PMA_REG_TX_SYNC                             =>     CP_LANE3_PMA_REG_TX_SYNC                                     ,
        PMA_REG_TX_PD_POST                          =>     CP_LANE3_PMA_REG_TX_PD_POST                                  ,
        PMA_REG_TX_PD_POST_OW                       =>     CP_LANE3_PMA_REG_TX_PD_POST_OW                               ,
        PMA_REG_TX_RESET_N_OW                       =>     CP_LANE3_PMA_REG_TX_RESET_N_OW                               ,
        PMA_REG_TX_RESET_N                          =>     CP_LANE3_PMA_REG_TX_RESET_N                                  ,
        PMA_REG_TX_RESERVED_64                      =>     CP_LANE3_PMA_REG_TX_RESERVED_64                              ,
        PMA_REG_TX_RESERVED_65                      =>     CP_LANE3_PMA_REG_TX_RESERVED_65                              ,
        PMA_REG_TX_BUSWIDTH_OW                      =>     CP_LANE3_PMA_REG_TX_BUSWIDTH_OW                              ,
        PMA_REG_TX_BUSWIDTH                         =>     CP_LANE3_PMA_REG_TX_BUSWIDTH                                 ,
        PMA_REG_PLL_READY_OW                        =>     CP_LANE3_PMA_REG_PLL_READY_OW                                ,
        PMA_REG_PLL_READY                           =>     CP_LANE3_PMA_REG_PLL_READY                                   ,
        PMA_REG_TX_RESERVED_72                      =>     CP_LANE3_PMA_REG_TX_RESERVED_72                              ,
        PMA_REG_TX_RESERVED_73                      =>     CP_LANE3_PMA_REG_TX_RESERVED_73                              ,
        PMA_REG_TX_RESERVED_74                      =>     CP_LANE3_PMA_REG_TX_RESERVED_74                              ,
        PMA_REG_EI_PCLK_DELAY_SEL                   =>     CP_LANE3_PMA_REG_EI_PCLK_DELAY_SEL                           ,
        PMA_REG_TX_RESERVED_77                      =>     CP_LANE3_PMA_REG_TX_RESERVED_77                              ,
        PMA_REG_TX_RESERVED_83_78                   =>     CP_LANE3_PMA_REG_TX_RESERVED_83_78                           ,
        PMA_REG_TX_RESERVED_89_84                   =>     CP_LANE3_PMA_REG_TX_RESERVED_89_84                           ,
        PMA_REG_TX_RESERVED_95_90                   =>     CP_LANE3_PMA_REG_TX_RESERVED_95_90                           ,
        PMA_REG_TX_RESERVED_101_96                  =>     CP_LANE3_PMA_REG_TX_RESERVED_101_96                          ,
        PMA_REG_TX_RESERVED_107_102                 =>     CP_LANE3_PMA_REG_TX_RESERVED_107_102                         ,
        PMA_REG_TX_RESERVED_113_108                 =>     CP_LANE3_PMA_REG_TX_RESERVED_113_108                         ,
        PMA_REG_TX_AMP_DAC0                         =>     CP_LANE3_PMA_REG_TX_AMP_DAC0                                 ,
        PMA_REG_TX_AMP_DAC1                         =>     CP_LANE3_PMA_REG_TX_AMP_DAC1                                 ,
        PMA_REG_TX_AMP_DAC2                         =>     CP_LANE3_PMA_REG_TX_AMP_DAC2                                 ,
        PMA_REG_TX_AMP_DAC3                         =>     CP_LANE3_PMA_REG_TX_AMP_DAC3                                 ,
        PMA_REG_TX_RESERVED_143_138                 =>     CP_LANE3_PMA_REG_TX_RESERVED_143_138                         ,
        PMA_REG_TX_MARGIN                           =>     CP_LANE3_PMA_REG_TX_MARGIN                                   ,
        PMA_REG_TX_MARGIN_OW                        =>     CP_LANE3_PMA_REG_TX_MARGIN_OW                                ,
        PMA_REG_TX_RESERVED_149_148                 =>     CP_LANE3_PMA_REG_TX_RESERVED_149_148                         ,
        PMA_REG_TX_RESERVED_150                     =>     CP_LANE3_PMA_REG_TX_RESERVED_150                             ,
        PMA_REG_TX_SWING                            =>     CP_LANE3_PMA_REG_TX_SWING                                    ,
        PMA_REG_TX_SWING_OW                         =>     CP_LANE3_PMA_REG_TX_SWING_OW                                 ,
        PMA_REG_TX_RESERVED_153                     =>     CP_LANE3_PMA_REG_TX_RESERVED_153                             ,
        PMA_REG_TX_RXDET_THRESHOLD                  =>     CP_LANE3_PMA_REG_TX_RXDET_THRESHOLD                          ,
        PMA_REG_TX_RESERVED_157_156                 =>     CP_LANE3_PMA_REG_TX_RESERVED_157_156                         ,
        PMA_REG_TX_BEACON_OSC_CTRL                  =>     CP_LANE3_PMA_REG_TX_BEACON_OSC_CTRL                          ,
        PMA_REG_TX_RESERVED_160_159                 =>     CP_LANE3_PMA_REG_TX_RESERVED_160_159                         ,
        PMA_REG_TX_RESERVED_162_161                 =>     CP_LANE3_PMA_REG_TX_RESERVED_162_161                         ,
        PMA_REG_TX_TX2RX_SLPBACK_EN                 =>     CP_LANE3_PMA_REG_TX_TX2RX_SLPBACK_EN                         ,
        PMA_REG_TX_PCLK_EDGE_SEL                    =>     CP_LANE3_PMA_REG_TX_PCLK_EDGE_SEL                            ,
        PMA_REG_TX_RXDET_STATUS_OW                  =>     CP_LANE3_PMA_REG_TX_RXDET_STATUS_OW                          ,
        PMA_REG_TX_RXDET_STATUS                     =>     CP_LANE3_PMA_REG_TX_RXDET_STATUS                             ,
        PMA_REG_TX_PRBS_GEN_EN                      =>     CP_LANE3_PMA_REG_TX_PRBS_GEN_EN                              ,
        PMA_REG_TX_PRBS_GEN_WIDTH_SEL               =>     CP_LANE3_PMA_REG_TX_PRBS_GEN_WIDTH_SEL                       ,
        PMA_REG_TX_PRBS_SEL                         =>     CP_LANE3_PMA_REG_TX_PRBS_SEL                                 ,
        PMA_REG_TX_UDP_DATA_7_TO_0                  =>     CP_LANE3_PMA_REG_TX_UDP_DATA_7_TO_0                          ,
        PMA_REG_TX_UDP_DATA_15_TO_8                 =>     CP_LANE3_PMA_REG_TX_UDP_DATA_15_TO_8                         ,
        PMA_REG_TX_UDP_DATA_19_TO_16                =>     CP_LANE3_PMA_REG_TX_UDP_DATA_19_TO_16                        ,
        PMA_REG_TX_RESERVED_192                     =>     CP_LANE3_PMA_REG_TX_RESERVED_192                             ,
        PMA_REG_TX_FIFO_WP_CTRL                     =>     CP_LANE3_PMA_REG_TX_FIFO_WP_CTRL                             ,
        PMA_REG_TX_FIFO_EN                          =>     CP_LANE3_PMA_REG_TX_FIFO_EN                                  ,
        PMA_REG_TX_DATA_MUX_SEL                     =>     CP_LANE3_PMA_REG_TX_DATA_MUX_SEL                             ,
        PMA_REG_TX_ERR_INSERT                       =>     CP_LANE3_PMA_REG_TX_ERR_INSERT                               ,
        PMA_REG_TX_RESERVED_203_200                 =>     CP_LANE3_PMA_REG_TX_RESERVED_203_200                         ,
        PMA_REG_TX_RESERVED_204                     =>     CP_LANE3_PMA_REG_TX_RESERVED_204                             ,
        PMA_REG_TX_SATA_EN                          =>     CP_LANE3_PMA_REG_TX_SATA_EN                                  ,
        PMA_REG_TX_RESERVED_207_206                 =>     CP_LANE3_PMA_REG_TX_RESERVED_207_206                         ,
        PMA_REG_RATE_CHANGE_TXPCLK_ON_OW            =>     CP_LANE3_PMA_REG_RATE_CHANGE_TXPCLK_ON_OW                    ,
        PMA_REG_RATE_CHANGE_TXPCLK_ON               =>     CP_LANE3_PMA_REG_RATE_CHANGE_TXPCLK_ON                       ,
        PMA_REG_TX_CFG_POST1                        =>     CP_LANE3_PMA_REG_TX_CFG_POST1                                ,
        PMA_REG_TX_CFG_POST2                        =>     CP_LANE3_PMA_REG_TX_CFG_POST2                                ,
        PMA_REG_TX_DEEMP                            =>     CP_LANE3_PMA_REG_TX_DEEMP                                    ,
        PMA_REG_TX_DEEMP_OW                         =>     CP_LANE3_PMA_REG_TX_DEEMP_OW                                 ,
        PMA_REG_TX_RESERVED_224_223                 =>     CP_LANE3_PMA_REG_TX_RESERVED_224_223                         ,
        PMA_REG_TX_RESERVED_225                     =>     CP_LANE3_PMA_REG_TX_RESERVED_225                             ,
        PMA_REG_TX_RESERVED_229_226                 =>     CP_LANE3_PMA_REG_TX_RESERVED_229_226                         ,
        PMA_REG_TX_OOB_DELAY_SEL                    =>     CP_LANE3_PMA_REG_TX_OOB_DELAY_SEL                            ,
        PMA_REG_TX_POLARITY                         =>     CP_LANE3_PMA_REG_TX_POLARITY                                 ,
        PMA_REG_ANA_TX_JTAG_DATA_O_SEL              =>     CP_LANE3_PMA_REG_ANA_TX_JTAG_DATA_O_SEL                      ,
        PMA_REG_TX_RESERVED_236                     =>     CP_LANE3_PMA_REG_TX_RESERVED_236                             ,
        PMA_REG_TX_LS_MODE_EN                       =>     CP_LANE3_PMA_REG_TX_LS_MODE_EN                               ,
        PMA_REG_TX_JTAG_MODE_EN_OW                  =>     CP_LANE3_PMA_REG_TX_JTAG_MODE_EN_OW                          ,
        PMA_REG_TX_JTAG_MODE_EN                     =>     CP_LANE3_PMA_REG_TX_JTAG_MODE_EN                             ,
        PMA_REG_RX_JTAG_MODE_EN_OW                  =>     CP_LANE3_PMA_REG_RX_JTAG_MODE_EN_OW                          ,
        PMA_REG_RX_JTAG_MODE_EN                     =>     CP_LANE3_PMA_REG_RX_JTAG_MODE_EN                             ,
        PMA_REG_RX_JTAG_OE                          =>     CP_LANE3_PMA_REG_RX_JTAG_OE                                  ,
        PMA_REG_RX_ACJTAG_VHYSTSEL                  =>     CP_LANE3_PMA_REG_RX_ACJTAG_VHYSTSEL                          ,
        PMA_REG_TX_RES_CAL_EN                       =>     CP_LANE3_PMA_REG_TX_RES_CAL_EN                               ,
        PMA_REG_RX_TERM_MODE_CTRL                   =>     CP_LANE3_PMA_REG_RX_TERM_MODE_CTRL                           ,
        PMA_REG_TX_RESERVED_251_250                 =>     CP_LANE3_PMA_REG_TX_RESERVED_251_250                         ,
        PMA_REG_PLPBK_TXPCLK_EN                     =>     CP_LANE3_PMA_REG_PLPBK_TXPCLK_EN                             ,
        PMA_REG_TX_RESERVED_253                     =>     CP_LANE3_PMA_REG_TX_RESERVED_253                             ,
        PMA_REG_TX_RESERVED_254                     =>     CP_LANE3_PMA_REG_TX_RESERVED_254                             ,
        PMA_REG_TX_RESERVED_255                     =>     CP_LANE3_PMA_REG_TX_RESERVED_255                             ,
        PMA_REG_TX_RESERVED_256                     =>     CP_LANE3_PMA_REG_TX_RESERVED_256                             ,
        PMA_REG_TX_RESERVED_257                     =>     CP_LANE3_PMA_REG_TX_RESERVED_257                             ,
        PMA_REG_TX_PH_SEL                           =>     CP_LANE3_PMA_REG_TX_PH_SEL                                   ,
        PMA_REG_TX_CFG_PRE                          =>     CP_LANE3_PMA_REG_TX_CFG_PRE                                  ,
        PMA_REG_TX_CFG_MAIN                         =>     CP_LANE3_PMA_REG_TX_CFG_MAIN                                 ,
        PMA_REG_CFG_POST                            =>     CP_LANE3_PMA_REG_CFG_POST                                    ,
        PMA_REG_PD_MAIN                             =>     CP_LANE3_PMA_REG_PD_MAIN                                     ,
        PMA_REG_PD_PRE                              =>     CP_LANE3_PMA_REG_PD_PRE                                      ,
        PMA_REG_TX_LS_DATA                          =>     CP_LANE3_PMA_REG_TX_LS_DATA                                  ,
        PMA_REG_TX_DCC_BUF_SZ_SEL                   =>     CP_LANE3_PMA_REG_TX_DCC_BUF_SZ_SEL                           ,
        PMA_REG_TX_DCC_CAL_CUR_TUNE                 =>     CP_LANE3_PMA_REG_TX_DCC_CAL_CUR_TUNE                         ,
        PMA_REG_TX_DCC_CAL_EN                       =>     CP_LANE3_PMA_REG_TX_DCC_CAL_EN                               ,
        PMA_REG_TX_DCC_CUR_SS                       =>     CP_LANE3_PMA_REG_TX_DCC_CUR_SS                               ,
        PMA_REG_TX_DCC_FA_CTRL                      =>     CP_LANE3_PMA_REG_TX_DCC_FA_CTRL                              ,
        PMA_REG_TX_DCC_RI_CTRL                      =>     CP_LANE3_PMA_REG_TX_DCC_RI_CTRL                              ,
        PMA_REG_ATB_SEL_2_TO_0                      =>     CP_LANE3_PMA_REG_ATB_SEL_2_TO_0                              ,
        PMA_REG_ATB_SEL_9_TO_3                      =>     CP_LANE3_PMA_REG_ATB_SEL_9_TO_3                              ,
        PMA_REG_TX_CFG_7_TO_0                       =>     CP_LANE3_PMA_REG_TX_CFG_7_TO_0                               ,
        PMA_REG_TX_CFG_15_TO_8                      =>     CP_LANE3_PMA_REG_TX_CFG_15_TO_8                              ,
        PMA_REG_TX_CFG_23_TO_16                     =>     CP_LANE3_PMA_REG_TX_CFG_23_TO_16                             ,
        PMA_REG_TX_CFG_31_TO_24                     =>     CP_LANE3_PMA_REG_TX_CFG_31_TO_24                             ,
        PMA_REG_TX_OOB_EI_EN                        =>     CP_LANE3_PMA_REG_TX_OOB_EI_EN                                ,
        PMA_REG_TX_OOB_EI_EN_OW                     =>     CP_LANE3_PMA_REG_TX_OOB_EI_EN_OW                             ,
        PMA_REG_TX_BEACON_EN_DELAYED                =>     CP_LANE3_PMA_REG_TX_BEACON_EN_DELAYED                        ,
        PMA_REG_TX_BEACON_EN_DELAYED_OW             =>     CP_LANE3_PMA_REG_TX_BEACON_EN_DELAYED_OW                     ,
        PMA_REG_TX_JTAG_DATA                        =>     CP_LANE3_PMA_REG_TX_JTAG_DATA                                ,
        PMA_REG_TX_RXDET_TIMER_SEL                  =>     CP_LANE3_PMA_REG_TX_RXDET_TIMER_SEL                          ,
        PMA_REG_TX_CFG1_7_0                         =>     CP_LANE3_PMA_REG_TX_CFG1_7_0                                 ,
        PMA_REG_TX_CFG1_15_8                        =>     CP_LANE3_PMA_REG_TX_CFG1_15_8                                ,
        PMA_REG_TX_CFG1_23_16                       =>     CP_LANE3_PMA_REG_TX_CFG1_23_16                               ,
        PMA_REG_TX_CFG1_31_24                       =>     CP_LANE3_PMA_REG_TX_CFG1_31_24                               ,
        PMA_REG_CFG_LANE_POWERUP                    =>     CP_LANE3_PMA_REG_CFG_LANE_POWERUP                            ,
        PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH         =>     CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_CLKPATH                 ,
        PMA_REG_CFG_TX_LANE_POWERUP_PISO            =>     CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_PISO                    ,
        PMA_REG_CFG_TX_LANE_POWERUP_DRIVER          =>     CP_LANE3_PMA_REG_CFG_TX_LANE_POWERUP_DRIVER
    )
    port map
    (
        P_TX_SDN                           =>     PAD_TX_SDN3                              ,//PAD PIN  
        P_TX_SDP                           =>     PAD_TX_SDP3                              ,//PAD PIN  
        P_PCS_RX_MCB_STATUS                =>     PCS_RX_MCB_STATUS[3]                   ,
        P_PCS_LSM_SYNCED                   =>     PCS_LSM_SYNCED[3]                      ,
        P_CFG_READY                        =>     CFG_READY_3                           ,
        P_CFG_RDATA                        =>     CFG_RDATA_3                           ,
        P_CFG_INT                          =>     CFG_INT_3                             ,
        P_RDATA                            =>     RDATA_3                               ,
        P_RCLK2FABRIC                      =>     RCLK2FABRIC[3]                         ,
        P_TCLK2FABRIC                      =>     TCLK2FABRIC[3]                         ,
        P_RX_SIGDET_STATUS                 =>     RX_SIGDET_STATUS_3                    ,
        P_RX_SATA_COMINIT                  =>     RX_SATA_COMINIT_3                     ,
        P_RX_SATA_COMWAKE                  =>     RX_SATA_COMWAKE_3                     ,
        P_RX_LS_DATA                       =>     RX_LS_DATA_3                          ,
        P_RX_READY                         =>     RX_READY_3                            ,
        P_TEST_STATUS                      =>     TEST_STATUS_3                         ,
        P_TX_RXDET_STATUS                  =>     TX_RXDET_STATUS_3                     ,
        P_CA_ALIGN_RX                      =>     CA_ALIGN_RX[3]                         ,
        P_CA_ALIGN_TX                      =>     CA_ALIGN_TX[3]                         ,
        //PMA_RCLK                           =>     PMA_RCLK                              ,
        //LANE_COUT_BUS_FORWARD              =>     LANE_COUT_BUS_FORWARD               ,
        //APATTERN_STATUS_COUT               =>     APATTERN_STATUS_COUT                  ,
        TXPCLK_PLL                         =>     TXPCLK_PLL_3                            ,
        P_RX_SDN                           =>     PAD_RX_SDN3                              ,//PAD PIN  
        P_RX_SDP                           =>     PAD_RX_SDP3                              ,//PAD PIN  
        P_RX_CLK_FR_CORE                   =>     RX3_CLK_FR_CORE                      ,
        P_RCLK2_FR_CORE                    =>     RCLK2_3_FR_CORE                       ,
        P_TX_CLK_FR_CORE                   =>     TX3_CLK_FR_CORE                      ,
        P_TCLK2_FR_CORE                    =>     TCLK2_3_FR_CORE                       ,
        P_PCS_TX_RST                       =>     PCS_TX_RST_3                          ,
        P_PCS_RX_RST                       =>     PCS_RX_RST_3                          ,
        P_PCS_CB_RST                       =>     PCS_CB_RST_3                          ,
        P_RXGEAR_SLIP                      =>     RXGEAR_SLIP_3                         ,
        P_CFG_CLK                          =>     CFG_CLK_3                             ,
        P_CFG_RST                          =>     CFG_RST_3                             ,
        P_CFG_PSEL                         =>     CFG_PSEL_3                            ,
        P_CFG_ENABLE                       =>     CFG_ENABLE_3                          ,
        P_CFG_WRITE                        =>     CFG_WRITE_3                           ,
        P_CFG_ADDR                         =>     CFG_ADDR_3                            ,
        P_CFG_WDATA                        =>     CFG_WDATA_3                           ,
        P_TDATA                            =>     TDATA_3                               ,
        P_PCS_WORD_ALIGN_EN                =>     PCS_WORD_ALIGN_EN[3]                   ,
        P_RX_POLARITY_INVERT               =>     RX_POLARITY_INVERT[3]                  ,
        P_CEB_ADETECT_EN                   =>     CEB_ADETECT_EN[3]                      ,
        P_PCS_MCB_EXT_EN                   =>     PCS_MCB_EXT_EN[3]                      ,
        P_PCS_NEAREND_LOOP                 =>     PCS_NEAREND_LOOP[3]                    ,
        P_PCS_FAREND_LOOP                  =>     PCS_FAREND_LOOP[3]                     ,
        P_PMA_NEAREND_PLOOP                =>     PMA_NEAREND_PLOOP[3]                   ,
        P_PMA_NEAREND_SLOOP                =>     PMA_NEAREND_SLOOP[3]                   ,
        P_PMA_FAREND_PLOOP                 =>     PMA_FAREND_PLOOP[3]                    ,
        P_LANE_PD                          =>     LANE_PD_3                             ,
        P_LANE_RST                         =>     LANE_RST_3                            ,
        P_RX_LANE_PD                       =>     RX_LANE_PD_3                          ,
        P_RX_PMA_RST                       =>     RX_PMA_RST_3                          ,
        P_CTLE_ADP_RST                     =>     CTLE_ADP_RST_3                        ,
        P_TX_DEEMP                         =>     TX_DEEMP_3                            ,
        P_TX_LS_DATA                       =>     TX_LS_DATA_3                          ,
        P_TX_BEACON_EN                     =>     TX_BEACON_EN_3                        ,
        P_TX_SWING                         =>     TX_SWING_3                            ,
        P_TX_RXDET_REQ                     =>     TX_RXDET_REQ_3                        ,
        P_TX_RATE                          =>     TX_RATE_3                             ,
        P_TX_BUSWIDTH                      =>     TX_BUSWIDTH_3                        ,
        P_TX_MARGIN                        =>     TX_MARGIN_3                           ,
        P_TX_PMA_RST                       =>     TX_PMA_RST_3                          ,
        P_TX_LANE_PD_CLKPATH               =>     TX_LANE_PD_CLKPATH_3                  ,
        P_TX_LANE_PD_PISO                  =>     TX_LANE_PD_PISO_3                     ,
        P_TX_LANE_PD_DRIVER                =>     TX_LANE_PD_DRIVER_3                   ,
        P_RX_RATE                          =>     RX_RATE_3                             ,
        P_RX_BUSWIDTH                      =>     RX_BUSWIDTH_3                         ,
        P_RX_HIGHZ                         =>     RX_HIGHZ_3                            ,
        P_CIM_CLK_ALIGNER_RX               =>     CIM_CLK_ALIGNER_RX3                  ,
        P_CIM_CLK_ALIGNER_TX               =>     CIM_CLK_ALIGNER_TX3                  ,
        P_CIM_DYN_DLY_SEL_RX               =>     CIM_DYN_DLY_SEL_RX3                  ,
        P_CIM_DYN_DLY_SEL_TX               =>     CIM_DYN_DLY_SEL_TX3                  ,
        P_CIM_START_ALIGN_RX               =>     CIM_START_ALIGN_RX3                  ,
        P_CIM_START_ALIGN_TX               =>     CIM_START_ALIGN_TX3                  ,
        //MCB_RCLK                           =>     MCB_RCLK                              ,
        SYNC                               =>     SYNC_CH3                                  ,
        RATE_CHANGE                        =>     RATE_CHANGE_CH3                           ,
        PLL_LOCK_SEL                       =>     PLL_LOCK_SEL_3                          ,
        //LANE_CIN_BUS_FORWARD               =>     LANE_CIN_BUS_FORWARD                ,
        //APATTERN_STATUS_CIN                =>     APATTERN_STATUS_CIN                   ,
        CLK_TXP                            =>     CLK_TXP_3                               ,
        CLK_TXN                            =>     CLK_TXN_3                               ,
        CLK_RX0                            =>     CLK_RX0_3                               ,
        CLK_RX90                           =>     CLK_RX90_3                              ,
        CLK_RX180                          =>     CLK_RX180_3                             ,
        CLK_RX270                          =>     CLK_RX270_3                             ,
        PLL_PD_I                           =>     PLL_PD_I_3                              ,
        PLL_RESET_I                        =>     PLL_RESET_I_3                           ,
        PLL_REFCLK_I                       =>     PLL_REFCLK_I_3                          //,
        //PLL_RES_TRIM_I                   =>       PLL_RES_TRIM_I
        //HSST_RST                           =>       HSST_RST
    );
    operator V_HSSTLP_PLL HSSTLP_LANE_PLL0
    parameter map
    (
        TX_SYNCK_PD                                   =>        CP_PLL0_TX_SYNCK_PD                                   ,
        PMA_PLL_REG_REFCLK_TERM_IMP_CTRL              =>        CP_PLL0_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL              ,
        PMA_PLL_REG_BG_TRIM                           =>        CP_PMA_PLL_REG_BG_TRIM                                ,//
        PMA_PLL_REG_IBUP_A1                           =>        CP_PMA_PLL_REG_IBUP_A1                                ,//
        PMA_PLL_REG_IBUP_A2                           =>        CP_PMA_PLL_REG_IBUP_A2                                ,//
        PMA_PLL_REG_IBUP_PD                           =>        CP_PMA_PLL_REG_IBUP_PD                                ,//
        PMA_PLL_REG_V2I_BIAS_SEL                      =>        CP_PMA_PLL_REG_V2I_BIAS_SEL                           ,//
        PMA_PLL_REG_V2I_EN                            =>        CP_PMA_PLL_REG_V2I_EN                                 ,//
        PMA_PLL_REG_V2I_TB_SEL                        =>        CP_PMA_PLL_REG_V2I_TB_SEL                             ,//
        PMA_PLL_REG_V2I_RCALTEST_PD                   =>        CP_PMA_PLL_REG_V2I_RCALTEST_PD                        ,//
        PMA_PLL_REG_RES_CAL_TEST                      =>        CP_PMA_PLL_REG_RES_CAL_TEST                           ,//
        PMA_RES_CAL_DIV                               =>        CP_PMA_RES_CAL_DIV                                    ,//
        PMA_RES_CAL_CLK_SEL                           =>        CP_PMA_RES_CAL_CLK_SEL                                ,//
        PMA_PLL_REG_PLL_PFDDELAY_EN                   =>        CP_PLL0_PMA_PLL_REG_PLL_PFDDELAY_EN                   ,
        PMA_PLL_REG_PFDDELAYSEL                       =>        CP_PLL0_PMA_PLL_REG_PFDDELAYSEL                       ,
        PMA_PLL_REG_PLL_VCTRL_SET                     =>        CP_PLL0_PMA_PLL_REG_PLL_VCTRL_SET                     ,
        PMA_PLL_REG_READY_OR_LOCK                     =>        CP_PLL0_PMA_PLL_REG_READY_OR_LOCK                     ,
        PMA_PLL_REG_PLL_CP                            =>        CP_PLL0_PMA_PLL_REG_PLL_CP                            ,
        PMA_PLL_REG_PLL_REFDIV                        =>        CP_PLL0_PMA_PLL_REG_PLL_REFDIV                        ,
        PMA_PLL_REG_PLL_LOCKDET_EN                    =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN                    ,
        PMA_PLL_REG_PLL_READY                         =>        CP_PLL0_PMA_PLL_REG_PLL_READY                         ,
        PMA_PLL_REG_PLL_READY_OW                      =>        CP_PLL0_PMA_PLL_REG_PLL_READY_OW                      ,
        PMA_PLL_REG_PLL_FBDIV                         =>        CP_PLL0_PMA_PLL_REG_PLL_FBDIV                         ,
        PMA_PLL_REG_LPF_RES                           =>        CP_PLL0_PMA_PLL_REG_LPF_RES                           ,
        PMA_PLL_REG_JTAG_OE                           =>        CP_PLL0_PMA_PLL_REG_JTAG_OE                           ,
        PMA_PLL_REG_JTAG_VHYSTSEL                     =>        CP_PLL0_PMA_PLL_REG_JTAG_VHYSTSEL                     ,
        PMA_PLL_REG_PLL_LOCKDET_EN_OW                 =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN_OW                 ,
        PMA_PLL_REG_PLL_LOCKDET_FBCT                  =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_FBCT                  ,
        PMA_PLL_REG_PLL_LOCKDET_ITER                  =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_ITER                  ,
        PMA_PLL_REG_PLL_LOCKDET_MODE                  =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_MODE                  ,
        PMA_PLL_REG_PLL_LOCKDET_LOCKCT                =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_LOCKCT                ,
        PMA_PLL_REG_PLL_LOCKDET_REFCT                 =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_REFCT                 ,
        PMA_PLL_REG_PLL_LOCKDET_RESET_N               =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N               ,
        PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW            =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW            ,
        PMA_PLL_REG_PLL_LOCKED                        =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKED                        ,
        PMA_PLL_REG_PLL_LOCKED_OW                     =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKED_OW                     ,
        PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR           =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR           ,
        PMA_PLL_REG_PLL_UNLOCKED                      =>        CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED                      ,
        PMA_PLL_REG_PLL_UNLOCKDET_ITER                =>        CP_PLL0_PMA_PLL_REG_PLL_UNLOCKDET_ITER                ,
        PMA_PLL_REG_PLL_UNLOCKED_OW                   =>        CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_OW                   ,
        PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR         =>        CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR         ,
        PMA_PLL_REG_I_CTRL_MAX                        =>        CP_PLL0_PMA_PLL_REG_I_CTRL_MAX                        ,
        PMA_PLL_REG_REFCLK_TEST_EN                    =>        CP_PLL0_PMA_PLL_REG_REFCLK_TEST_EN                    ,
        PMA_PLL_REG_RESCAL_EN                         =>        CP_PLL0_PMA_PLL_REG_RESCAL_EN                         ,
        PMA_PLL_REG_I_CTRL_MIN                        =>        CP_PLL0_PMA_PLL_REG_I_CTRL_MIN                        ,
        PMA_PLL_REG_RESCAL_DONE_OW                    =>        CP_PLL0_PMA_PLL_REG_RESCAL_DONE_OW                    ,
        PMA_PLL_REG_RESCAL_DONE_VAL                   =>        CP_PLL0_PMA_PLL_REG_RESCAL_DONE_VAL                   ,
        PMA_PLL_REG_RESCAL_I_CODE                     =>        CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE                     ,
        PMA_PLL_REG_RESCAL_I_CODE_OW                  =>        CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_OW                  ,
        PMA_PLL_REG_RESCAL_I_CODE_PMA                 =>        CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_PMA                 ,
        PMA_PLL_REG_RESCAL_I_CODE_VAL                 =>        CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_VAL                 ,
        PMA_PLL_REG_RESCAL_INT_R_SMALL_OW             =>        CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW             ,
        PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL            =>        CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL            ,
        PMA_PLL_REG_RESCAL_ITER_VALID_SEL             =>        CP_PLL0_PMA_PLL_REG_RESCAL_ITER_VALID_SEL             ,
        PMA_PLL_REG_RESCAL_RESET_N_OW                 =>        CP_PLL0_PMA_PLL_REG_RESCAL_RESET_N_OW                 ,
        PMA_PLL_REG_RESCAL_RST_N_VAL                  =>        CP_PLL0_PMA_PLL_REG_RESCAL_RST_N_VAL                  ,
        PMA_PLL_REG_RESCAL_WAIT_SEL                   =>        CP_PLL0_PMA_PLL_REG_RESCAL_WAIT_SEL                   ,
        PMA_PLL_REFCLK2LANE_PD_L                      =>        CP_PLL0_PMA_PLL_REFCLK2LANE_PD_L                      ,
        PMA_PLL_REFCLK2LANE_PD_R                      =>        CP_PLL0_PMA_PLL_REFCLK2LANE_PD_R                      ,
        PMA_PLL_REG_LOCKDET_REPEAT                    =>        CP_PLL0_PMA_PLL_REG_LOCKDET_REPEAT                    ,
        PMA_PLL_REG_NOFBCLK_STICKY_CLEAR              =>        CP_PLL0_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR              ,
        PMA_PLL_REG_NOREFCLK_STICKY_CLEAR             =>        CP_PLL0_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR             ,
        PMA_PLL_REG_TEST_SEL                          =>        CP_PLL0_PMA_PLL_REG_TEST_SEL                          ,
        PMA_PLL_REG_TEST_V_EN                         =>        CP_PLL0_PMA_PLL_REG_TEST_V_EN                         ,
        PMA_PLL_REG_TEST_SIG_HALF_EN                  =>        CP_PLL0_PMA_PLL_REG_TEST_SIG_HALF_EN                  ,
        PMA_PLL_REG_REFCLK_PAD_SEL                    =>        CP_PLL0_PMA_PLL_REG_REFCLK_PAD_SEL                    ,
        PARM_PLL_POWERUP                              =>        CP_PLL0_PARM_PLL_POWERUP                         
    )
    port map
    (
        P_CFG_READY_PLL             =>     CFG_READY_PLL_0                ,
        P_CFG_RDATA_PLL             =>     CFG_RDATA_PLL_0                ,
        P_CFG_INT_PLL               =>     CFG_INT_PLL_0                  ,
        P_RESCAL_I_CODE_O           =>     RESCAL_I_CODE_O_0              ,
        P_REFCK2CORE                =>     REFCK2CORE_0                   ,
        P_PLL_READY                 =>     PLL_READY_0                    ,
        PLL_CLK0                    =>     PLL_CLK0_0                       ,
        PLL_CLK90                   =>     PLL_CLK90_0                      ,
        PLL_CLK180                  =>     PLL_CLK180_0                     ,
        PLL_CLK270                  =>     PLL_CLK270_0                     ,
        SYNC_PLL                    =>     SYNC_PLL_0                       ,
        RATE_CHANGE_PLL             =>     RATE_CHANGE_PLL_0                ,
        PLL_PD_O                    =>     PLL_PD_O_0                       ,
        PLL_RST_O                   =>     PLL_RST_O_0                      ,
        PMA_PLL_READY_O             =>     PMA_PLL_READY_O_0                ,
        PLL_REFCLK_LANE_L           =>     PLL_REFCLK_LANE_L_0              ,
        P_CFG_RST_PLL               =>     CFG_RST_PLL_0                  ,
        P_CFG_CLK_PLL               =>     CFG_CLK_PLL_0                  ,
        P_CFG_PSEL_PLL              =>     CFG_PSEL_PLL_0                 ,
        P_CFG_ENABLE_PLL            =>     CFG_ENABLE_PLL_0               ,
        P_CFG_WRITE_PLL             =>     CFG_WRITE_PLL_0                ,
        P_CFG_ADDR_PLL              =>     CFG_ADDR_PLL_0                 ,
        P_CFG_WDATA_PLL             =>     CFG_WDATA_PLL_0                ,
        P_RESCAL_RST_I              =>     RESCAL_RST_I_0                 ,
        P_RESCAL_I_CODE_I           =>     RESCAL_I_CODE_I_0              ,
        P_PLL_LOCKDET_RST_I         =>     PLL_LOCKDET_RST_I_0            ,
        P_PLL_REF_CLK               =>     PLL_REF_CLK_0                  ,
        P_PLL_RST                   =>     PLL_RST_0                      ,
        P_PLLPOWERDOWN              =>     PLLPOWERDOWN_0                 ,
        P_LANE_SYNC                 =>     LANE_SYNC_0                    ,
        P_RATE_CHANGE_TCLK_ON       =>     RATE_CHANGE_TCLK_ON_0        ,
        REFCLK_CML_N                =>     REFCLK_CML_N_0                 ,
        REFCLK_CML_P                =>     REFCLK_CML_P_0                 ,
        TXPCLK_PLL_SELECTED         =>     TXPCLK_PLL_SELECTED_0 
    );
    operator V_HSSTLP_PLL HSSTLP_LANE_PLL1
    parameter map
    (
        TX_SYNCK_PD                                   =>        CP_PLL0_TX_SYNCK_PD                                   ,
        PMA_PLL_REG_REFCLK_TERM_IMP_CTRL              =>        CP_PLL0_PMA_PLL_REG_REFCLK_TERM_IMP_CTRL              ,
        PMA_PLL_REG_BG_TRIM                           =>        CP_PMA_PLL_REG_BG_TRIM                                ,//
        PMA_PLL_REG_IBUP_A1                           =>        CP_PMA_PLL_REG_IBUP_A1                                ,//
        PMA_PLL_REG_IBUP_A2                           =>        CP_PMA_PLL_REG_IBUP_A2                                ,//
        PMA_PLL_REG_IBUP_PD                           =>        CP_PMA_PLL_REG_IBUP_PD                                ,//
        PMA_PLL_REG_V2I_BIAS_SEL                      =>        CP_PMA_PLL_REG_V2I_BIAS_SEL                           ,//
        PMA_PLL_REG_V2I_EN                            =>        CP_PMA_PLL_REG_V2I_EN                                 ,//
        PMA_PLL_REG_V2I_TB_SEL                        =>        CP_PMA_PLL_REG_V2I_TB_SEL                             ,//
        PMA_PLL_REG_V2I_RCALTEST_PD                   =>        CP_PMA_PLL_REG_V2I_RCALTEST_PD                        ,//
        PMA_PLL_REG_RES_CAL_TEST                      =>        CP_PMA_PLL_REG_RES_CAL_TEST                           ,//
        PMA_RES_CAL_DIV                               =>        CP_PMA_RES_CAL_DIV                                    ,//
        PMA_RES_CAL_CLK_SEL                           =>        CP_PMA_RES_CAL_CLK_SEL                                ,//
        PMA_PLL_REG_PLL_PFDDELAY_EN                   =>        CP_PLL0_PMA_PLL_REG_PLL_PFDDELAY_EN                   ,
        PMA_PLL_REG_PFDDELAYSEL                       =>        CP_PLL0_PMA_PLL_REG_PFDDELAYSEL                       ,
        PMA_PLL_REG_PLL_VCTRL_SET                     =>        CP_PLL0_PMA_PLL_REG_PLL_VCTRL_SET                     ,
        PMA_PLL_REG_READY_OR_LOCK                     =>        CP_PLL0_PMA_PLL_REG_READY_OR_LOCK                     ,
        PMA_PLL_REG_PLL_CP                            =>        CP_PLL0_PMA_PLL_REG_PLL_CP                            ,
        PMA_PLL_REG_PLL_REFDIV                        =>        CP_PLL0_PMA_PLL_REG_PLL_REFDIV                        ,
        PMA_PLL_REG_PLL_LOCKDET_EN                    =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN                    ,
        PMA_PLL_REG_PLL_READY                         =>        CP_PLL0_PMA_PLL_REG_PLL_READY                         ,
        PMA_PLL_REG_PLL_READY_OW                      =>        CP_PLL0_PMA_PLL_REG_PLL_READY_OW                      ,
        PMA_PLL_REG_PLL_FBDIV                         =>        CP_PLL0_PMA_PLL_REG_PLL_FBDIV                         ,
        PMA_PLL_REG_LPF_RES                           =>        CP_PLL0_PMA_PLL_REG_LPF_RES                           ,
        PMA_PLL_REG_JTAG_OE                           =>        CP_PLL0_PMA_PLL_REG_JTAG_OE                           ,
        PMA_PLL_REG_JTAG_VHYSTSEL                     =>        CP_PLL0_PMA_PLL_REG_JTAG_VHYSTSEL                     ,
        PMA_PLL_REG_PLL_LOCKDET_EN_OW                 =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_EN_OW                 ,
        PMA_PLL_REG_PLL_LOCKDET_FBCT                  =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_FBCT                  ,
        PMA_PLL_REG_PLL_LOCKDET_ITER                  =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_ITER                  ,
        PMA_PLL_REG_PLL_LOCKDET_MODE                  =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_MODE                  ,
        PMA_PLL_REG_PLL_LOCKDET_LOCKCT                =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_LOCKCT                ,
        PMA_PLL_REG_PLL_LOCKDET_REFCT                 =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_REFCT                 ,
        PMA_PLL_REG_PLL_LOCKDET_RESET_N               =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N               ,
        PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW            =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKDET_RESET_N_OW            ,
        PMA_PLL_REG_PLL_LOCKED                        =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKED                        ,
        PMA_PLL_REG_PLL_LOCKED_OW                     =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKED_OW                     ,
        PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR           =>        CP_PLL0_PMA_PLL_REG_PLL_LOCKED_STICKY_CLEAR           ,
        PMA_PLL_REG_PLL_UNLOCKED                      =>        CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED                      ,
        PMA_PLL_REG_PLL_UNLOCKDET_ITER                =>        CP_PLL0_PMA_PLL_REG_PLL_UNLOCKDET_ITER                ,
        PMA_PLL_REG_PLL_UNLOCKED_OW                   =>        CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_OW                   ,
        PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR         =>        CP_PLL0_PMA_PLL_REG_PLL_UNLOCKED_STICKY_CLEAR         ,
        PMA_PLL_REG_I_CTRL_MAX                        =>        CP_PLL0_PMA_PLL_REG_I_CTRL_MAX                        ,
        PMA_PLL_REG_REFCLK_TEST_EN                    =>        CP_PLL0_PMA_PLL_REG_REFCLK_TEST_EN                    ,
        PMA_PLL_REG_RESCAL_EN                         =>        CP_PLL0_PMA_PLL_REG_RESCAL_EN                         ,
        PMA_PLL_REG_I_CTRL_MIN                        =>        CP_PLL0_PMA_PLL_REG_I_CTRL_MIN                        ,
        PMA_PLL_REG_RESCAL_DONE_OW                    =>        CP_PLL0_PMA_PLL_REG_RESCAL_DONE_OW                    ,
        PMA_PLL_REG_RESCAL_DONE_VAL                   =>        CP_PLL0_PMA_PLL_REG_RESCAL_DONE_VAL                   ,
        PMA_PLL_REG_RESCAL_I_CODE                     =>        CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE                     ,
        PMA_PLL_REG_RESCAL_I_CODE_OW                  =>        CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_OW                  ,
        PMA_PLL_REG_RESCAL_I_CODE_PMA                 =>        CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_PMA                 ,
        PMA_PLL_REG_RESCAL_I_CODE_VAL                 =>        CP_PLL0_PMA_PLL_REG_RESCAL_I_CODE_VAL                 ,
        PMA_PLL_REG_RESCAL_INT_R_SMALL_OW             =>        CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_OW             ,
        PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL            =>        CP_PLL0_PMA_PLL_REG_RESCAL_INT_R_SMALL_VAL            ,
        PMA_PLL_REG_RESCAL_ITER_VALID_SEL             =>        CP_PLL0_PMA_PLL_REG_RESCAL_ITER_VALID_SEL             ,
        PMA_PLL_REG_RESCAL_RESET_N_OW                 =>        CP_PLL0_PMA_PLL_REG_RESCAL_RESET_N_OW                 ,
        PMA_PLL_REG_RESCAL_RST_N_VAL                  =>        CP_PLL0_PMA_PLL_REG_RESCAL_RST_N_VAL                  ,
        PMA_PLL_REG_RESCAL_WAIT_SEL                   =>        CP_PLL0_PMA_PLL_REG_RESCAL_WAIT_SEL                   ,
        PMA_PLL_REFCLK2LANE_PD_L                      =>        CP_PLL0_PMA_PLL_REFCLK2LANE_PD_L                      ,
        PMA_PLL_REFCLK2LANE_PD_R                      =>        CP_PLL0_PMA_PLL_REFCLK2LANE_PD_R                      ,
        PMA_PLL_REG_LOCKDET_REPEAT                    =>        CP_PLL0_PMA_PLL_REG_LOCKDET_REPEAT                    ,
        PMA_PLL_REG_NOFBCLK_STICKY_CLEAR              =>        CP_PLL0_PMA_PLL_REG_NOFBCLK_STICKY_CLEAR              ,
        PMA_PLL_REG_NOREFCLK_STICKY_CLEAR             =>        CP_PLL0_PMA_PLL_REG_NOREFCLK_STICKY_CLEAR             ,
        PMA_PLL_REG_TEST_SEL                          =>        CP_PLL0_PMA_PLL_REG_TEST_SEL                          ,
        PMA_PLL_REG_TEST_V_EN                         =>        CP_PLL0_PMA_PLL_REG_TEST_V_EN                         ,
        PMA_PLL_REG_TEST_SIG_HALF_EN                  =>        CP_PLL0_PMA_PLL_REG_TEST_SIG_HALF_EN                  ,
        PMA_PLL_REG_REFCLK_PAD_SEL                    =>        CP_PLL0_PMA_PLL_REG_REFCLK_PAD_SEL                    ,
        PARM_PLL_POWERUP                              =>        CP_PLL0_PARM_PLL_POWERUP                         
    )
    port map
    (
        P_CFG_READY_PLL             =>     CFG_READY_PLL_1                ,
        P_CFG_RDATA_PLL             =>     CFG_RDATA_PLL_1                ,
        P_CFG_INT_PLL               =>     CFG_INT_PLL_1                  ,
        P_RESCAL_I_CODE_O           =>     RESCAL_I_CODE_O_1              ,
        P_REFCK2CORE                =>     REFCK2CORE_1                   ,
        P_PLL_READY                 =>     PLL_READY_1                    ,
        PLL_CLK0                    =>     PLL_CLK0_1                       ,
        PLL_CLK90                   =>     PLL_CLK90_1                      ,
        PLL_CLK180                  =>     PLL_CLK180_1                     ,
        PLL_CLK270                  =>     PLL_CLK270_1                     ,
        SYNC_PLL                    =>     SYNC_PLL_1                       ,
        RATE_CHANGE_PLL             =>     RATE_CHANGE_PLL_1                ,
        PLL_PD_O                    =>     PLL_PD_O_1                       ,
        PLL_RST_O                   =>     PLL_RST_O_1                      ,
        PMA_PLL_READY_O             =>     PMA_PLL_READY_O_1                ,
        PLL_REFCLK_LANE_L           =>     PLL_REFCLK_LANE_L_1              ,
        P_CFG_RST_PLL               =>     CFG_RST_PLL_1                  ,
        P_CFG_CLK_PLL               =>     CFG_CLK_PLL_1                  ,
        P_CFG_PSEL_PLL              =>     CFG_PSEL_PLL_1                 ,
        P_CFG_ENABLE_PLL            =>     CFG_ENABLE_PLL_1               ,
        P_CFG_WRITE_PLL             =>     CFG_WRITE_PLL_1                ,
        P_CFG_ADDR_PLL              =>     CFG_ADDR_PLL_1                 ,
        P_CFG_WDATA_PLL             =>     CFG_WDATA_PLL_1                ,
        P_RESCAL_RST_I              =>     RESCAL_RST_I_1                 ,
        P_RESCAL_I_CODE_I           =>     RESCAL_I_CODE_I_1              ,
        P_PLL_LOCKDET_RST_I         =>     PLL_LOCKDET_RST_I_1            ,
        P_PLL_REF_CLK               =>     PLL_REF_CLK_1                  ,
        P_PLL_RST                   =>     PLL_RST_1                      ,
        P_PLLPOWERDOWN              =>     PLLPOWERDOWN_1                 ,
        P_LANE_SYNC                 =>     LANE_SYNC_1                    ,
        P_RATE_CHANGE_TCLK_ON       =>     RATE_CHANGE_TCLK_ON_1        ,
        REFCLK_CML_N                =>     REFCLK_CML_N_1                 ,
        REFCLK_CML_P                =>     REFCLK_CML_P_1                 ,
        TXPCLK_PLL_SELECTED         =>     TXPCLK_PLL_SELECTED_1
    );
}; */

