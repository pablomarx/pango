*****************************************************************

  Device    [OREG_ODDR]

  Author    [clwang]

  Abstract  [The Prim Device Of OREG_ODDR]

  Revision History:

********************************************************************************/
prim
device OREG_ODDR
{
    parameter
    (
        //ol_srce
        config string     CP_SRO_EN         = "FALSE",               
        config string     CP_O_SYNC         = "ASYNC",               
        config bit     CP_GRS_DIS         = 1'b0,               
        //ol_gearctrl                                                
        config string     CP_OHSMEM_EN      = "FALSE",               
        //config bit        CP_MEMDQ          = 1'b0,                
        config string     CP_OSERDES_EN     = "FALSE",               
        config string     CP_SER_DDREN      = "FALSE",               
        config string     CP_SER_SDREN      = "FALSE",               
        config string     CP_OLTHEN         = "FALSE",               
        config string     CP_ODFFEN         = "FALSE",               
        //config string     CP_OUNREGEN       = "FALSE",             
        config string     CP_OSERDES_MODE   = "SDR1TO2",             
        config string     CP_UPD0_SHIFTEN   = "FALSE",               
        config string     CP_UPD1_SHIFTEN   = "FALSE",               
        config bit        CP_INIT_SET[1:0]  = 2'b00,                 
        //ol_gear                                                    
        config bit        CP_INIT_DQ      = 1'b0,                    
        config string        CP_SRVAL_DQ0    = "RESET",              
        config string        CP_SRVAL_DQ1    = "RESET",              
        config string        CP_SRVAL_DQ2    = "RESET",              
        config string        CP_SRVAL_DQ3    = "RESET",              
        config string     CP_OCASCADE_EN  = "FALSE" ,                
        config bit        CP_DQMODE[1:0]  =  2'b00,
        config string     CP_MIPI_EN      = "FALSE"         
    );
    port 
    (
        input             CLK_STG0,
        input             CLK_STG1,
        input             CLK_STG2_0,
        input             CLK_STG2_1,
        input             CLK_STG2_2,
        input             GRS_N,
        //ol_srce
        input             SR,
        input             OCE,
        //ol_gearctrl
        input             UPD0_SHIFT,
        input             UPD1_SHIFT,
        //ol_gear
        input             OSHIFTIN0,
        input             OSHIFTIN1,
        input             TX_DATA[7:0], 
        input             TO,
        output            OSHIFTOUT0,
        output            OSHIFTOUT1,
        output            DO_DD,
        output            DO_SDR,
        output            DO_DDR
    );

}; // end of device OREG_ODDR

/**Device***********************************************************************

  Device    [OREG_ODDR]
  
  Author    [kongbiao]  

  Abstract  [This specified how to propagate the input signal to the outputs based on
             configuration]

  Revision History:

********************************************************************************/
propagation pop of OREG_ODDR
{
    propagate ( CLK_STG0 --> OSHIFTOUT0 );
    propagate ( CLK_STG1 --> OSHIFTOUT0 );
    propagate ( CLK_STG2_0 --> OSHIFTOUT0 );
    propagate ( CLK_STG2_1 --> OSHIFTOUT0 );
    propagate ( CLK_STG2_2 --> OSHIFTOUT0 );
    propagate ( SR --> OSHIFTOUT0 );
    propagate ( OCE --> OSHIFTOUT0 );
    propagate ( UPD0_SHIFT --> OSHIFTOUT0 );
    propagate ( UPD1_SHIFT --> OSHIFTOUT0 );
    propagate ( OSHIFTIN0 --> OSHIFTOUT0 );
    propagate ( OSHIFTIN1 --> OSHIFTOUT0 );
    propagate ( TX_DATA --> OSHIFTOUT0 );
    propagate ( TO --> OSHIFTOUT0 );

    propagate ( CLK_STG0 --> OSHIFTOUT1 );
    propagate ( CLK_STG1 --> OSHIFTOUT1 );
    propagate ( CLK_STG2_0 --> OSHIFTOUT1 );
    propagate ( CLK_STG2_1 --> OSHIFTOUT1 );
    propagate ( CLK_STG2_2 --> OSHIFTOUT1 );
    propagate ( SR --> OSHIFTOUT1 );
    propagate ( OCE --> OSHIFTOUT1 );
    propagate ( UPD0_SHIFT --> OSHIFTOUT1 );
    propagate ( UPD1_SHIFT --> OSHIFTOUT1 );
    propagate ( OSHIFTIN0 --> OSHIFTOUT1 );
    propagate ( OSHIFTIN1 --> OSHIFTOUT1 );
    propagate ( TX_DATA --> OSHIFTOUT1 );
    propagate ( TO --> OSHIFTOUT1 );
    
    propagate ( CLK_STG0 --> DO_DD );
    propagate ( CLK_STG1 --> DO_DD );
    propagate ( CLK_STG2_0 --> DO_DD );
    propagate ( CLK_STG2_1 --> DO_DD );
    propagate ( CLK_STG2_2 --> DO_DD );
    propagate ( SR --> DO_DD );
    propagate ( OCE --> DO_DD );
    propagate ( UPD0_SHIFT --> DO_DD );
    propagate ( UPD1_SHIFT --> DO_DD );
    propagate ( OSHIFTIN0 --> DO_DD );
    propagate ( OSHIFTIN1 --> DO_DD );
    propagate ( TX_DATA --> DO_DD );
    propagate ( TO --> DO_DD );
    
    propagate ( CLK_STG0 --> DO_SDR );
    propagate ( CLK_STG1 --> DO_SDR );
    propagate ( CLK_STG2_0 --> DO_SDR );
    propagate ( CLK_STG2_1 --> DO_SDR );
    propagate ( CLK_STG2_2 --> DO_SDR );
    propagate ( SR --> DO_SDR );
    propagate ( OCE --> DO_SDR );
    propagate ( UPD0_SHIFT --> DO_SDR );
    propagate ( UPD1_SHIFT --> DO_SDR );
    propagate ( OSHIFTIN0 --> DO_SDR );
    propagate ( OSHIFTIN1 --> DO_SDR );
    propagate ( TX_DATA --> DO_SDR );
    propagate ( TO --> DO_SDR );
    
    propagate ( CLK_STG0 --> DO_DDR );
    propagate ( CLK_STG1 --> DO_DDR );
    propagate ( CLK_STG2_0 --> DO_DDR );
    propagate ( CLK_STG2_1 --> DO_DDR );
    propagate ( CLK_STG2_2 --> DO_DDR );
    propagate ( SR --> DO_DDR );
    propagate ( OCE --> DO_DDR );
    propagate ( UPD0_SHIFT --> DO_DDR );
    propagate ( UPD1_SHIFT --> DO_DDR );
    propagate ( OSHIFTIN0 --> DO_DDR );
    propagate ( OSHIFTIN1 --> DO_DDR );
    propagate ( TX_DATA --> DO_DDR );
    propagate ( TO --> DO_DDR );
    
}; // end of propagation for OREG_ODDR

/**Device***********************************************************************                  
                                                                                                  
  Device    [OREG_ODDR]                                                                                
                                                                                                  
  Author    [kongbiao]                                                                               
                                                                                                  
  Abstract  [This specified the timing model under specific configuration]                        
                                                                                                  
  Revision History:                                                                               
                                                                                                  
********************************************************************************/                 
                                                                                                  
timing  mux21_tnl of OREG_ODDR  
{
   if (CP_DQMODE == 2'b00)
   {
       DO_DD <= TX_DATA[0];
   }

};
