*****************************************************************

  Device    [IOLHR_IL_CLKGEN]

  Author    [clwang]

  Abstract  [The Prim Device Of IOLHR_IL_CLKGEN]

  Revision History:

********************************************************************************/
prim
device IOLHR_IL_CLKGEN
{
    parameter
    (
        config string   CP_DYN_CLKPOL     = "FALSE",
        config string   CP_DYN_CLKDIVPOL  = "FALSE",
        config string   CP_CLK_POL0       = "FALSE",
        config string   CP_CLK_POL1       = "FALSE",
        config string   CP_CLK_POL2       = "FALSE",
        config string   CP_CLK_POL3       = "FALSE",
        config string   CP_OCLKPOL        = "FALSE",
        config string   CP_OCLKBPOL       = "FALSE",
        config string   CP_LSMEM_EN       = "FALSE",
        config string   CP_IHSMEM_EN      = "FALSE",
        config string   CP_OVERSAMPLE_EN  = "FALSE"     
    );
    port 
    (
        input        DESCLK,
        input        ICLK,
        input        ICLKB,
        input        BSCLK,
        input        OCLK,
        input        OCLKB,
        input        ICLKDIV,
        input        DYN_CLKPOL,
        input        DYN_CLKDIVPOL,
        output       CLK_STG0,
        output       CLKB_STG0,
        output       HSMEM_CLK,
        output       HSMEM_CLKB,
        output       CLK_STG1_0,
        output       CLK_STG1_1,
        output       CLK_STG1_2,
        output       CLK_STG2_0,
        output       CLK_STG2_1,
        output       CLK_STG3,
        output       CLK_FOR_BS
    );

}; // end of device IOLHR_IL_CLKGEN

/**Device***********************************************************************

  Device    [IOLHR_IL_CLKGEN]
  
  Author    [shenqiang]  

  Abstract  [This specified how to propagate the input signal to the outputs based on
             configuration]

  Revision History:

********************************************************************************/
propagation pop of IOLHR_IL_CLKGEN
{
    propagate ( DESCLK --> CLK_STG0 );
    propagate ( ICLK --> CLK_STG0 );
    propagate ( ICLKB --> CLK_STG0 );
    propagate ( BSCLK --> CLK_STG0 );
    propagate ( OCLK --> CLK_STG0 );
    propagate ( OCLKB --> CLK_STG0 );
    propagate ( ICLKDIV --> CLK_STG0 );
    propagate ( DYN_CLKPOL --> CLK_STG0 );
    propagate ( DYN_CLKDIVPOL --> CLK_STG0 );
    
    propagate ( DESCLK --> CLKB_STG0 );
    propagate ( ICLK --> CLKB_STG0 );
    propagate ( ICLKB --> CLKB_STG0 );
    propagate ( BSCLK --> CLKB_STG0 );
    propagate ( OCLK --> CLKB_STG0 );
    propagate ( OCLKB --> CLKB_STG0 );
    propagate ( ICLKDIV --> CLKB_STG0 );
    propagate ( DYN_CLKPOL --> CLKB_STG0 );
    propagate ( DYN_CLKDIVPOL --> CLKB_STG0 );
    
    propagate ( DESCLK --> HSMEM_CLK );
    propagate ( ICLK --> HSMEM_CLK );
    propagate ( ICLKB --> HSMEM_CLK );
    propagate ( BSCLK --> HSMEM_CLK );
    propagate ( OCLK --> HSMEM_CLK );
    propagate ( OCLKB --> HSMEM_CLK );
    propagate ( ICLKDIV --> HSMEM_CLK );
    propagate ( DYN_CLKPOL --> HSMEM_CLK );
    propagate ( DYN_CLKDIVPOL --> HSMEM_CLK );
    
    propagate ( DESCLK --> HSMEM_CLKB );
    propagate ( ICLK --> HSMEM_CLKB );
    propagate ( ICLKB --> HSMEM_CLKB );
    propagate ( BSCLK --> HSMEM_CLKB );
    propagate ( OCLK --> HSMEM_CLKB );
    propagate ( OCLKB --> HSMEM_CLKB );
    propagate ( ICLKDIV --> HSMEM_CLKB );
    propagate ( DYN_CLKPOL --> HSMEM_CLKB );
    propagate ( DYN_CLKDIVPOL --> HSMEM_CLKB );
    
    propagate ( DESCLK --> CLK_STG1_0 );
    propagate ( ICLK --> CLK_STG1_0 );
    propagate ( ICLKB --> CLK_STG1_0 );
    propagate ( BSCLK --> CLK_STG1_0 );
    propagate ( OCLK --> CLK_STG1_0 );
    propagate ( OCLKB --> CLK_STG1_0 );
    propagate ( ICLKDIV --> CLK_STG1_0 );
    propagate ( DYN_CLKPOL --> CLK_STG1_0 );
    propagate ( DYN_CLKDIVPOL --> CLK_STG1_0 );
    
    propagate ( DESCLK --> CLK_STG1_1 );
    propagate ( ICLK --> CLK_STG1_1 );
    propagate ( ICLKB --> CLK_STG1_1 );
    propagate ( BSCLK --> CLK_STG1_1 );
    propagate ( OCLK --> CLK_STG1_1 );
    propagate ( OCLKB --> CLK_STG1_1 );
    propagate ( ICLKDIV --> CLK_STG1_1 );
    propagate ( DYN_CLKPOL --> CLK_STG1_1 );
    propagate ( DYN_CLKDIVPOL --> CLK_STG1_1 );
    
    propagate ( DESCLK --> CLK_STG1_2 );
    propagate ( ICLK --> CLK_STG1_2 );
    propagate ( ICLKB --> CLK_STG1_2 );
    propagate ( BSCLK --> CLK_STG1_2 );
    propagate ( OCLK --> CLK_STG1_2 );
    propagate ( OCLKB --> CLK_STG1_2 );
    propagate ( ICLKDIV --> CLK_STG1_2 );
    propagate ( DYN_CLKPOL --> CLK_STG1_2 );
    propagate ( DYN_CLKDIVPOL --> CLK_STG1_2 );
    
    propagate ( DESCLK --> CLK_STG2_0 );
    propagate ( ICLK --> CLK_STG2_0 );
    propagate ( ICLKB --> CLK_STG2_0 );
    propagate ( BSCLK --> CLK_STG2_0 );
    propagate ( OCLK --> CLK_STG2_0 );
    propagate ( OCLKB --> CLK_STG2_0 );
    propagate ( ICLKDIV --> CLK_STG2_0 );
    propagate ( DYN_CLKPOL --> CLK_STG2_0 );
    propagate ( DYN_CLKDIVPOL --> CLK_STG2_0 );
    
    propagate ( DESCLK --> CLK_STG2_1 );
    propagate ( ICLK --> CLK_STG2_1 );
    propagate ( ICLKB --> CLK_STG2_1 );
    propagate ( BSCLK --> CLK_STG2_1 );
    propagate ( OCLK --> CLK_STG2_1 );
    propagate ( OCLKB --> CLK_STG2_1 );
    propagate ( ICLKDIV --> CLK_STG2_1 );
    propagate ( DYN_CLKPOL --> CLK_STG2_1 );
    propagate ( DYN_CLKDIVPOL --> CLK_STG2_1 );
    
    propagate ( DESCLK --> CLK_STG3 );
    propagate ( ICLK --> CLK_STG3 );
    propagate ( ICLKB --> CLK_STG3 );
    propagate ( BSCLK --> CLK_STG3 );
    propagate ( OCLK --> CLK_STG3 );
    propagate ( OCLKB --> CLK_STG3 );
    propagate ( ICLKDIV --> CLK_STG3 );
    propagate ( DYN_CLKPOL --> CLK_STG3 );
    propagate ( DYN_CLKDIVPOL --> CLK_STG3 );
    
    propagate ( DESCLK --> CLK_FOR_BS );
    propagate ( ICLK --> CLK_FOR_BS );
    propagate ( ICLKB --> CLK_FOR_BS );
    propagate ( BSCLK --> CLK_FOR_BS );
    propagate ( OCLK --> CLK_FOR_BS );
    propagate ( OCLKB --> CLK_FOR_BS );
    propagate ( ICLKDIV --> CLK_FOR_BS );
    propagate ( DYN_CLKPOL --> CLK_FOR_BS );
    propagate ( DYN_CLKDIVPOL --> CLK_FOR_BS );
    
}; // end of propagation for IOLHR_IL_CLKGEN

/**Device***********************************************************************                  
                                                                                                  
  Device    [IOLHR_IL_CLKGEN]                                                                                
                                                                                                  
  Author    [kongbiao]                                                                               
                                                                                                  
  Abstract  [This specified the timing model under specific configuration]                        
                                                                                                  
  Revision History:                                                                               
                                                                                                  
********************************************************************************/                 
                                                                                                  
timing  mux21_tnl of IOLHR_IL_CLKGEN  
{

};
