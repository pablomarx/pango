*********************************************************************

  Operator    [gopSRL2]
  
  Author    [liushiren]

  Abstract  []

  Revision History:

 ********************************************************************************/
gate
operator gopSRL2
{
    parameter
    (
         string FF0_RS       = "SET",
         string FFAPP0_RS    = "SET",
         bit    FF0_INIT     = 1'b1,
         bit    FFAPP0_INIT  = 1'b1,       
         string RS_MODE     = "SYNC",
         string LRS_POL     = "FALSE",
         string LRS_EN      = "FALSE",
         string LCE_POL     = "FALSE",
         string LCE_EN      = "FALSE",
         string CLK_POL     = "FALSE",
         string RSMUX_SEL   = "LOCAL",
         string CEMUX_SEL   = "LOCAL",
         string GRS_EN      = "TRUE",
         string LATCH_EN    = "FALSE"          
    );

    port
    (

        input  D,
        input  RS /*pragma PAP_ARC_GOP_CTRL_PIN="RST"*/,
        input  CE /*pragma PAP_ARC_GOP_CTRL_PIN="CE"*/,
        input  CLK /*pragma PAP_ARC_GOP_CTRL_PIN="GCLK|RCLK|COLCLK"*/,
        output Q0,
        output CR0,

        output RSCO,
        output CECO
    );
};

/*****************************************************************************************

  Author    []

  Abstract  [Using gate device devSRL2_S  to Implement this gopSRL2]

  Revision History:

 *****************************************************************************************/
implementation impl_devSRL2_S of gopSRL2
{   
    device devSRL2_S gatedev
        parameter map 
        ( 
             CP_FF0_RS         => FF0_RS,
             CP_FFAPP0_RS      => FFAPP0_RS,
             CP_FF0_INIT       => FF0_INIT,
             CP_FFAPP0_INIT    => FFAPP0_INIT,
             CP_RS_MODE        => RS_MODE,
             CP_LRS_POL        => LRS_POL,
             CP_LRS_EN         => LRS_EN,
             CP_LCE_POL        => LCE_POL,
             CP_LCE_EN         => LCE_EN,
             CP_CLK_POL        => CLK_POL,
             CP_RSMUX_SEL      => RSMUX_SEL,
             CP_CEMUX_SEL      => CEMUX_SEL,
             CP_GRS_EN         => GRS_EN,
             CP_LATCH_EN       => LATCH_EN                                     
        )
        port map 
        (                            
            M0   => D,
            RS    => (RSMUX_SEL == "LOCAL")  ? RS : 1'bx, 
            CE    => (CEMUX_SEL == "LOCAL")  ? CE : 1'bx,
            CLK  => CLK,
            RSCI => (RSMUX_SEL == "LOCAL")  ? 1'bx : RS,            
            CECI => (CEMUX_SEL == "LOCAL")  ? 1'bx : CE, 
            
            Q0   => Q0,
            CR0  => CR0,          
            RSCO => RSCO,
            CECO => CECO
        );
}; // end of implementation impl_devSRL2_S of gopSRL2

implementation impl_devSRL2 of gopSRL2
{   
    device devSRL2 gatedev
        parameter map 
        ( 
             CP_FF0_RS         => FF0_RS,
             CP_FFAPP0_RS      => FFAPP0_RS,
             CP_FF0_INIT       => FF0_INIT,
             CP_FFAPP0_INIT    => FFAPP0_INIT,
             CP_RS_MODE        => RS_MODE,
             CP_LRS_POL        => LRS_POL,
             CP_LRS_EN         => LRS_EN,
             CP_LCE_POL        => LCE_POL,
             CP_LCE_EN         => LCE_EN,
             CP_CLK_POL        => CLK_POL,
             CP_RSMUX_SEL      => RSMUX_SEL,
             CP_CEMUX_SEL      => CEMUX_SEL,
             CP_GRS_EN         => GRS_EN,
             CP_LATCH_EN       => LATCH_EN                                     
        )
        port map 
        (                            
            M0   => D,
            RS    => (RSMUX_SEL == "LOCAL")  ? RS : 1'bx, 
            CE    => (CEMUX_SEL == "LOCAL")  ? CE : 1'bx,
            CLK  => CLK,
            RSCI => (RSMUX_SEL == "LOCAL")  ? 1'bx : RS,            
            CECI => (CEMUX_SEL == "LOCAL")  ? 1'bx : CE, 
            
            Q0   => Q0,
            CR0  => CR0,          
            RSCO => RSCO,
            CECO => CECO
        );
}; // end of implementation impl_devSRL2 of gopSRL2


