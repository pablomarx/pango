***************************************************************************
****************************************************************************************/
library work;
use pg2l_defs,pg2l100h_defs,pg2l_funcs_place;//pg2l_funcs_connect_gs_wl;
use pg2l100h_funcs_connect_wl_bl,pg2l_funcs_connect_gs;

structure arch_nl connect_gs of PG2L100H
{   
    unsigned int rx,ty;
    int tx_e = 60;

    int l_tx[];
    int tx,tx_ckeb,loc_srb;
    string ckeb;
    int tx_cram_ctrl = CRAM_CTRL_TILE_X;
    
    foreach rx({[0:2]})
    {
      l_tx = (rx==0) ? L_SRB_TILES_X_R0 : L_SRB_TILES_X_R1;
      foreach tx( l_tx )
      {
        tx_ckeb = (tx==60) ? tx-1 : (tx==59) ? tx :
                  (((tx%2==0)&&(tx<CRAM_CTRL_TILE_X))||((tx%2==1)&&(tx>CRAM_CTRL_TILE_X))) ? tx+1 :  tx;
        ckeb = ((tx_ckeb==CKEB2_TILE_L)||(tx_ckeb==CKEB2_TILE_R)) ? "CKEB2_TILE" : "CKEB_TILE";
        foreach loc_srb({0,1})
        {
          connect_srb_gs_input(rx, tx, tx_ckeb, tx_cram_ctrl, tx_e, ckeb, "SRB_TILE", loc_srb);
        }
      }
    }

    foreach rx({[0:2]})
    {
      l_tx = (rx==0) ? L_CLMS_TILES_X_R0 : L_CLMS_TILES_X_R1;
      foreach tx( l_tx )
      {
        tx_ckeb = (tx==60) ? tx-1 : (tx==59) ? tx :
                  (((tx%2==0)&&(tx<CRAM_CTRL_TILE_X))||((tx%2==1)&&(tx>CRAM_CTRL_TILE_X))) ? tx+1 :  tx;
        ckeb = ((tx_ckeb==CKEB2_TILE_L)||(tx_ckeb==CKEB2_TILE_R)) ? "CKEB2_TILE" : "CKEB_TILE";
        foreach loc_srb({0,1})
        {
          connect_srb_gs_input(rx, tx, tx_ckeb, tx_cram_ctrl, tx_e, ckeb, "CLMS_TILE", loc_srb);
        }
      }
    }

    foreach rx({[0:2]})
    {
      l_tx = (rx==0) ? L_CLMA_TILES_X_R0 : L_CLMA_TILES_X_R1;
      foreach tx( l_tx )
      {
        tx_ckeb = (tx==60) ? tx-1 : (tx==59) ? tx :
                  (((tx%2==0)&&(tx<CRAM_CTRL_TILE_X))||((tx%2==1)&&(tx>CRAM_CTRL_TILE_X))) ? tx+1 :  tx;
        ckeb = ((tx_ckeb==CKEB2_TILE_L)||(tx_ckeb==CKEB2_TILE_R)) ? "CKEB2_TILE" : "CKEB_TILE";
        foreach loc_srb({0,1})
        {
          connect_srb_gs_input(rx, tx, tx_ckeb, tx_cram_ctrl, tx_e, ckeb, "CLMA_TILE", loc_srb);
        }
      }
    }

    foreach loc_srb({0,1})
    {
      l_tx = (loc_srb==0) ? L_SRB_TILES_X_R3_D : L_SRB_TILES_X_R3_U;
      foreach tx( l_tx )
      {
         tx_ckeb = (tx==60) ? tx-1 : (tx==59) ? tx :
                   (((tx%2==0)&&(tx<CRAM_CTRL_TILE_X))||((tx%2==1)&&(tx>CRAM_CTRL_TILE_X))) ? tx+1 :  tx;
         ckeb = ((tx_ckeb==CKEB2_TILE_L)||(tx_ckeb==CKEB2_TILE_R)) ? "CKEB2_TILE" : "CKEB_TILE";
         connect_srb_gs_input(3, tx, tx_ckeb, tx_cram_ctrl, tx_e, ckeb, "SRB_TILE", loc_srb);
      }
    }

    foreach loc_srb({0,1})
    {
      l_tx = (loc_srb==0) ? L_CLMS_TILES_X_R3_D : L_CLMS_TILES_X_R3_U;
      foreach tx( l_tx )
      {
         tx_ckeb = (tx==60) ? tx-1 : (tx==59) ? tx :
                   (((tx%2==0)&&(tx<CRAM_CTRL_TILE_X))||((tx%2==1)&&(tx>CRAM_CTRL_TILE_X))) ? tx+1 :  tx;
         ckeb = ((tx_ckeb==CKEB2_TILE_L)||(tx_ckeb==CKEB2_TILE_R)) ? "CKEB2_TILE" : "CKEB_TILE";
         connect_srb_gs_input(3, tx, tx_ckeb, tx_cram_ctrl, tx_e, ckeb, "CLMS_TILE", loc_srb);
      }
    }

    foreach loc_srb({0,1})
    {
      l_tx = (loc_srb==0) ? L_CLMA_TILES_X_R3_D : L_CLMA_TILES_X_R3_U;
      foreach tx( l_tx )
      {
         tx_ckeb = (tx==60) ? tx-1 : (tx==59) ? tx :
                   (((tx%2==0)&&(tx<CRAM_CTRL_TILE_X))||((tx%2==1)&&(tx>CRAM_CTRL_TILE_X))) ? tx+1 :  tx;
         ckeb = ((tx_ckeb==CKEB2_TILE_L)||(tx_ckeb==CKEB2_TILE_R)) ? "CKEB2_TILE" : "CKEB_TILE";
         connect_srb_gs_input(3, tx, tx_ckeb, tx_cram_ctrl, tx_e, ckeb, "CLMA_TILE", loc_srb);
      }
    }


    int loc_drm;
    foreach rx({[0:3]})
    {
      foreach loc_drm({0,1})
      {
        l_tx = ((rx==0)||(rx==1)||(rx==2)) ? L_DRM_TILES_X_R0 : (loc_drm==0) ? L_DRM_TILES_X_R3_D : L_DRM_TILES_X_R3_U;
        foreach tx( l_tx )
        {
          tx_ckeb = (tx==60) ? tx-1 : (tx==59) ? tx :
                    (((tx%2==0)&&(tx<CRAM_CTRL_TILE_X))||((tx%2==1)&&(tx>CRAM_CTRL_TILE_X))) ? tx+1 :  tx;
          ckeb = ((tx_ckeb==CKEB2_TILE_L)||(tx_ckeb==CKEB2_TILE_R)) ? "CKEB2_TILE" : "CKEB_TILE";
          connect_drm_gs_input(rx, tx, tx_ckeb, tx_cram_ctrl, tx_e, ckeb, loc_drm);
        }
      }
    }

    int loc_apm;
    foreach rx({[0:3]})
    {
      foreach loc_apm({0,1})
      {
        l_tx = L_APM_TILES_X;
        foreach tx( l_tx )
        {
          tx_ckeb = (tx==60) ? tx-1 : (tx==59) ? tx :
                    (((tx%2==0)&&(tx<CRAM_CTRL_TILE_X))||((tx%2==1)&&(tx>CRAM_CTRL_TILE_X))) ? tx+1 :  tx;
          ckeb = ((tx_ckeb==CKEB2_TILE_L)||(tx_ckeb==CKEB2_TILE_R)) ? "CKEB2_TILE" : "CKEB_TILE";
          connect_apm_gs_input(rx, tx, tx_ckeb, tx_cram_ctrl, tx_e, ckeb, loc_apm);
        }
      }
    }

    foreach rx({2})
    {
        tx = ADC_TILE_X;
        tx_ckeb = 26;
        connect_adc_gs_input(rx, tx, tx_ckeb, "CKEB_TILE");
    }

    int loc_iol;
    foreach rx({[0:3]})
    {
      foreach loc_iol({0,1})
      {
        l_tx = ((rx==1)||(rx==2)) ? L_IOL_TILES_X : {2};
        foreach tx( l_tx )
        {
          tx_ckeb = (tx==60) ? tx : tx-1;
          connect_iol_gs_input(rx, tx, tx_ckeb, "IOLHR_TILE", loc_iol);
        }
      }
    }

    int loc_pll;
    foreach rx({[0:3]})
    {
      foreach loc_pll({0,1})
      {
        l_tx = ((rx==1)||(rx==2)) ? L_PLL_TILES_X_R1 : L_PLL_TILES_X_R0;
        foreach tx( l_tx )
        {
          tx_ckeb = (tx==1) ? 3 : 59;
          ckeb = ((tx_ckeb==CKEB2_TILE_L)||(tx_ckeb==CKEB2_TILE_R)) ? "CKEB2_TILE" : "CKEB_TILE";
          connect_pll_gs_input(rx, tx, tx_ckeb, ckeb, loc_pll);
        }
      }
    }

    foreach rx({[0:3]})
    {
      l_tx = ((rx==1)||(rx==2)) ? L_PLL_TILES_X_R1 : L_PLL_TILES_X_R0;
      foreach tx( l_tx )
      {
        connect_pll_iconst_input(rx, tx, "IOBHR_TILE");
      }
   }


    foreach rx({[0:3]})
    {
      l_tx = ((rx==1)||(rx==2)) ? L_IOCK_TILES_X_R1 : L_IOCK_TILES_X_R0;
      foreach tx( l_tx )
      {
        connect_iock_gs_input(rx, tx);
      }
    }


    foreach rx({0,3})
    {
      tx_ckeb =  59;
      ckeb = ((tx_ckeb==CKEB2_TILE_L)||(tx_ckeb==CKEB2_TILE_R)) ? "CKEB2_TILE" : "CKEB_TILE";
      connect_hsst_gs_input(rx, HSST_TILE_X, tx_ckeb, ckeb, "HSSTLP_TILE");
    }

    foreach rx({1})
    {
      tx_ckeb =  36;
      ckeb = ((tx_ckeb==CKEB2_TILE_L)||(tx_ckeb==CKEB2_TILE_R)) ? "CKEB2_TILE" : "CKEB_TILE";
      connect_uscm_gs_input(rx, USCM_TILE_X, tx_ckeb, CRAM_CTRL_TILE_X, ckeb);
      
    }

    foreach rx({0,3})
    {
      tx_ckeb =  36;
      ckeb = ((tx_ckeb==CKEB2_TILE_L)||(tx_ckeb==CKEB2_TILE_R)) ? "CKEB2_TILE" : "CKEB_TILE";
      connect_pregmuxc_gs_input(rx, PREGMUXC_TILE_X, tx_ckeb, CRAM_CTRL_TILE_X, ckeb);
    }

    foreach rx({3})
    {
      tx_ckeb =  52;
      ckeb = ((tx_ckeb==CKEB2_TILE_L)||(tx_ckeb==CKEB2_TILE_R)) ? "CKEB2_TILE" : "CKEB_TILE";
      connect_pcie_gs_input(rx, PCIE_TILE_X, tx_ckeb, CRAM_CTRL_TILE_X, ckeb);
    }

};//end of structure arch_nl connect_gs of PG2L100H
/***************************************************************************************
****************************************************************************************/
library work;
use pg2l_defs,pg2l100h_defs,pg2l_funcs_place,pg2l_funcs_connect_gs;
use pg2l100h_funcs_connect_wl_bl;

structure arch_nl connect_wl of PG2L100H
{
    int rx,ty;
    foreach rx({[0:3]})
    {
      foreach ty( L_SRB_TILES_Y)
      {
        connect_srb_wl_input(rx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
      }
    }

    foreach rx({[0:3]})
    {
      foreach ty( L_CLM_TILES_Y)
      {
        connect_clms_wl_input(rx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
      }
    }

    foreach rx({[0:3]})
    {
      foreach ty( L_CLM_TILES_Y)
      {
        connect_clma_wl_input(rx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
      }
    }

    foreach rx({[0:3]})
    {
      foreach ty( L_APM_TILES_Y)
      {
        connect_apm_wl_input(rx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
      }
    }


    foreach rx({[0:3]})
    {
      foreach ty( L_DRM_TILES_Y)
      {
        connect_drm_wl_input(rx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
      }
    }

    foreach rx({[0:3]})
    {
      foreach ty( L_IOL_TILES_Y)
      {
        connect_iol_wl_input(rx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
      }
    }

    foreach rx({0,3})
    {
      foreach ty( L_CRAMSL2_TILES_Y)
      {
        connect_cramsl2_wl_input(rx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
      }
    }

    foreach rx({[0:3]})
    {
      foreach ty( L_CKEB_TILES_Y)
      {
        connect_ckeb_wl_input(rx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);
      }
    }

    foreach rx({[0:3]})
    {
      ty = GPLL_TILE_Y;
      connect_pll_wl_input(rx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, "GPLL_TILE");
      
    }

    foreach rx({[0:3]})
    {
      ty = PPLL_TILE_Y;
      connect_pll_wl_input(rx, ty, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, "PPLL_TILE");
      
    }

    foreach rx({0,1,3})
    {
      connect_uscm_wl_input(rx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);   
    }

    foreach rx({[0:3]})
    {
      connect_iob_wl_input(rx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);   
    }

    foreach rx({1,2})
    {
      connect_adc_wl_input(rx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);   
    }

    foreach rx({3})
    {
      connect_pcie_wl_input(rx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y);   
    }

};//end of structure arch_nl connect_wl of PG2L100H
/***************************************************************************************
****************************************************************************************/
library work;
use pg2l_defs,pg2l100h_defs,pg2l_funcs_place,pg2l_funcs_connect_gs;
use pg2l100h_funcs_connect_wl_bl;

structure arch_nl connect_bl of PG2L100H
{

    unsigned int l_tx[];  

    unsigned int rx,tx,loc_device;
    int tx_l1 = 18;
    int tx_l2 = 14;
    int tx_l3 = 8;
    int tx_l4 = 4;

    int tx_r1 = 28;
    int tx_r2 = 34;
    int tx_r3 = 40;
    int tx_r4 = 44;
    int tx_r5 = 48;
    int tx_r6 = 50;
    int tx_r7 = 56;
    int tx_r8 = 58;


    foreach rx( {[0:3]} )
    {
      foreach loc_device({0,1})
      {
        l_tx = (rx==0) ? L_SRB_TILES_X_R0 : 
               (rx==1) ? L_SRB_TILES_X_R1 : 
               (rx==2) ? L_SRB_TILES_X_R2 : (loc_device==0) ? L_SRB_TILES_X_R3_D : L_SRB_TILES_X_R3_U;
        foreach tx(l_tx)
        {
          connect_core_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                                 tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8,
                                 loc_device, "SRB_TILE");
        }
      }
    }

    foreach rx( {[0:3]} )
    {
      foreach loc_device({0,1})
      {
        l_tx = (rx==0) ? L_CLMS_TILES_X_R0 : 
               (rx==1) ? L_CLMS_TILES_X_R1 : 
               (rx==2) ? L_CLMS_TILES_X_R2 : (loc_device==0) ? L_CLMS_TILES_X_R3_D : L_CLMS_TILES_X_R3_U;
        foreach tx(l_tx)
        {
          connect_core_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                                 tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8,
                                 loc_device, "CLMS_TILE");
        }
      }
    }

    foreach rx( {[0:3]} )
    {
      foreach loc_device({0,1})
      {
        l_tx = (rx==0) ? L_CLMA_TILES_X_R0 : 
               (rx==1) ? L_CLMA_TILES_X_R1 : 
               (rx==2) ? L_CLMA_TILES_X_R2 : (loc_device==0) ? L_CLMA_TILES_X_R3_D : L_CLMA_TILES_X_R3_U;
        foreach tx(l_tx)
        {
          connect_core_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                                 tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8,
                                 loc_device, "CLMA_TILE");
        }
      }
    }

    
    foreach rx( {[0:3]} )
    {
      foreach loc_device({0,1})
      {
        foreach tx( L_APM_TILES_X )
        {
          connect_drm_apm_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                                    tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8,
                                    loc_device, "APM_TILE");
        }
      }
    }

    foreach rx( {[0:3]} )
    {
      foreach loc_device({0,1})
      {
        l_tx = (rx==0) ? L_DRM_TILES_X_R0 : 
               (rx==1) ? L_DRM_TILES_X_R1 : 
               (rx==2) ? L_DRM_TILES_X_R2 : (loc_device==0) ? L_DRM_TILES_X_R3_D : L_DRM_TILES_X_R3_U;
        foreach tx( l_tx )
        {
          connect_drm_apm_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                                    tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8,
                                    loc_device, "DRM_TILE");
        }
      }
    }


    foreach rx( {[0:3]} )
    {
      foreach loc_device({0,1})
      {
        l_tx = ((rx==1)||(rx==2)) ? L_IOL_TILES_X : {2} ;
        foreach tx(l_tx)
        {
          connect_core_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                                 tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8,
                                 loc_device, "IOLHR_TILE");
        }
      }
    }

    foreach rx( {0,3} )
    {
      foreach loc_device({0,1})
      {
        connect_core_bl_input( rx, CRAMSL2_TILE_X, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                               tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8,
                               loc_device, "CRAMSL2_TILE");
      }
    }
    foreach rx( {[0:3]} )
    {
      l_tx = ((rx==0)||(rx==3)) ?  L_CRAMSL0_TILES_X_R0 :  L_CRAMSL0_TILES_X_R1;
      foreach tx(l_tx)
      {
        connect_ckeb_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                               tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, "CRAMSL0_TILE");
      }
    }

    foreach rx( {[0:3]} )
    {
      l_tx = L_CRAMSL3_TILES_X;
      foreach tx(l_tx)
      {
        connect_ckeb_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                               tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, "CRAMSL3_TILE");
      }
    }

    foreach rx( {[0:3]} )
    {
      l_tx = (rx==0) ? L_CRAMSL1_TILES_X_R0 : (rx==1) ? L_CRAMSL1_TILES_X_R1 :
             (rx==2) ? L_CRAMSL1_TILES_X_R2 : L_CRAMSL1_TILES_X_R3;
      foreach tx(l_tx)
      {
        connect_ckeb_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                               tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, "CRAMSL1_TILE");
      }
    }


    foreach rx( {[0:3]} )
    {
      l_tx = ((rx==0)||(rx==3)) ?  L_CKEB_TILES_X_R0 :  L_CKEB_TILES_X_R1;
      foreach tx(l_tx)
      {
        connect_ckeb_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                               tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, "CKEB_TILE");
      }
    }


//    foreach rx( {[0:3]} )
//    {
//      l_tx = L_CKEB2_TILES_X;
//      foreach tx(l_tx)
//      {
//        connect_ckeb_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
//                               tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, "CKEB2_TILE");
//      }
//    }

    foreach rx( {[0:3]} )
    {
      l_tx = ((rx==1)||(rx==2)) ? L_IOCK_TILES_X_R1 : L_IOCK_TILES_X_R0;
      foreach tx(l_tx)
      {
        connect_ckeb_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                               tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, "IOCK_TILE");
      }
    }

    foreach rx( {[0:3]} )
    {
      l_tx = ((rx==1)||(rx==2)) ? L_IOB_TILES_X_R1 : L_IOB_TILES_X_R0;
      foreach tx(l_tx)
      {
        connect_region_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                               tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, "IOBHR_TILE");
      }
    }

    foreach rx( {[0:3]} )
    {
      l_tx = (rx==0) ? L_WRENHAN_TILES_X_R0 : (rx==1) ? L_WRENHAN_TILES_X_R1 :
             (rx==2) ? L_WRENHAN_TILES_X_R2 : L_WRENHAN_TILES_X_R3;
      foreach tx(l_tx)
      {
        connect_wrenhan_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                               tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8);
      }
    }

    foreach rx( {3} )
    {
      l_tx =  L_WRENHAN1_TILES_X_R3;
      foreach tx(l_tx)
      {
        connect_wrenhan1_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                               tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8);
      }
    }

    foreach rx( {0,3} )
    {
       tx = PREGMUXC_TILE_X;
       connect_region_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                             tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, "PREGMUXC_TILE");
      
    }

    foreach rx( {0,3} )
    {
        tx = HSST_TILE_X;
        connect_region_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                             tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, "HSSTLP_TILE");
      
    }

    int rx_ccs = LOC_CCS_REGION;
    connect_region_bl_input( rx_ccs, CCS_TILE_X, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                             tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, "CCS_TILE");

    int rx_adc = LOC_ADC_REGION;
    connect_adc_bl_input( rx_adc, ADC_TILE_X, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                             tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8);

    int rx_uscm = 1;
    tx = USCM_TILE_X;

    connect_uscm_bl_input( rx_uscm, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                             tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, "USCM_TILE");

    connect_uscm_bl_input( rx_uscm, CCS_TILE_X, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                             tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, "CCS_TILE");

    foreach rx( {[0:3]} )
    {
      l_tx = ((rx==1)||(rx==2)) ? L_PLL_TILES_X_R1 : L_PLL_TILES_X_R0;
      foreach tx(l_tx)
      {
        connect_half_region_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                                tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, 1,  "GPLL_TILE");
      }
    }

    foreach rx( {[0:3]} )
    {
      l_tx = ((rx==1)||(rx==2)) ? L_PLL_TILES_X_R1 : L_PLL_TILES_X_R0;
      foreach tx(l_tx)
      {
        connect_half_region_bl_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                               tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, 0,  "PPLL_TILE");
      }
    }

    int rx_pcie = LOC_PCIE_REGION;
    tx = PCIE_TILE_X;
    connect_half_region_bl_input( rx_pcie, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, 
                             tx_l1, tx_l2, tx_l3, tx_l4, tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, 0,  "PCIE_TILE");

    int tx_ckeb2_l = CKEB2_TILE_L;
    int tx_ckeb2_r = CKEB2_TILE_R;
    int tx_iock_l = 1;
    int tx_iock_r = 60;

    foreach rx( {[0:3]} )
    {
      l_tx = ((rx==0)||(rx==3)) ?  {1,3,5,7,9,11,13,15,17,19,21,23,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,59} 
                                :  {1,3,5,7,9,11,13,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,59,60};
        connect_ckeb_gs_input( rx, l_tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, tx_l1, tx_l2, tx_l3, tx_l4, 
                               tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8, tx_ckeb2_l, tx_ckeb2_r, tx_iock_l, tx_iock_r);
    }

    foreach rx( {[0:3]} )
    {
      l_tx = (rx==0) ? L_WRENHAN_TILES_X_R0 : (rx==1) ? L_WRENHAN_TILES_X_R1 :
             (rx==2) ? L_WRENHAN_TILES_X_R2 : L_WRENHAN_TILES_X_R3;

      foreach tx( l_tx )
      {
        connect_cram_wrenhan_gs_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, tx_l1, tx_l2, tx_l3, tx_l4, 
                                       tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8,"CRAM_CTRL_WRENHAN_TILE");
      }
    }

    foreach rx( {3} )
    {
      l_tx =  L_WRENHAN1_TILES_X_R3;

      foreach tx( l_tx )
      {
        connect_cram_wrenhan_gs_input( rx, tx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, tx_l1, tx_l2, tx_l3, tx_l4, 
                                       tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8,"CRAM_CTRL_WRENHAN1_TILE");
      }
    }


    foreach rx( {[0:3]} )
    {
        connect_cram_ctrl_gs_input( rx, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, tx_l1, tx_l2, tx_l3, tx_l4, 
                                    tx_r1, tx_r2, tx_r3, tx_r4, tx_r5, tx_r6, tx_r7, tx_r8);
    }
    string lr;
    unsigned int l_bank[];
    unsigned int bank;
    foreach lr( {"L","R"} )
    {
      l_bank = (lr=="L") ? {[3:6]} : {[4:5]};

      foreach bank( l_bank )
      {
        connect_iob_gs( lr, bank, NUM_TILE_X, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, NUM_REGION, "IOBHR_TILE", "CRAM_CTRL_100H_TILE");
      }
    }

    int tx_ccs = CCS_TILE_X;
    int ty_ccs = CCS_TILE_Y;
    int tx_hsst = HSST_TILE_X;
    int ty_hsst_u = HSST_TILE1_Y;
    int ty_hsst_d = HSST_TILE0_Y;

    connect_hsst_bs_input(tx_hsst, ty_hsst_d, ty_hsst_u, tx_ccs, ty_ccs, CRAM_CTRL_TILE_X, CRAM_CTRL_TILE_Y, ESD_TILE_X, ESD_TILE_Y,
                          "HSSTLP_TILE", "CRAM_CTRL_100H_TILE", "IOBHR_TILE", "ESD_100HR_TILE");

};//end of structure arch_nl connect_bl of PG2L100H
///***************************************************************************************
//****************************************************************************************/
//library work;
//use pg2l_defs,pg2l100h_defs;
//use pg2l_funcs_place,pg2l100h_funcs_place;
//
//structure arch_nl connect_esd_tile of PG2L100H
//{
//  int tx,ty;
//  int tx_ccs = CCS_TILE_X;
//  int ty_ccs = CCS_TILE_Y;
//  int tx_iob0 = IOB0_TILE_X;
//  int ty_iob0 = IOB0_TILE_Y;
//  int tx_analog = ANALOG_2K_TILE_X;
//  int ty_analog = ANALOG_2K_TILE_Y;
//
//
//  foreach tx( {ESD_TILE_X} )
//  {
//    foreach ty( {ESD_TILE_Y} )
//    {
//      place_esd_tile( tx, ty, tx_ccs, ty_ccs, tx_iob0, ty_iob0, tx_analog, ty_analog);
//    }
//  }
//
//
//};//end of structure arch_nl connect_ccs_tile of PG2L100H
/***************************************************************************************
****************************************************************************************/
library work;
use pg2l_defs,pg2l100h_defs;
use pg2l_funcs_place,pg2l100h_funcs_place;
use pg2l100h_funcs_connect_wl_bl;
structure arch_nl connect_ccs of PG2L100H
{

    int tx_ckeb = 26;

    connect_ccs_adc(CCS_TILE_X, CCS_TILE_Y, ADC_TILE_X, ADC_TILE_Y,  tx_ckeb, ESD_TILE_X, ESD_TILE_Y);

};//end of structure arch_nl connect_bias of PG2L100H
