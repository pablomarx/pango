*****************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_srb_tile of PG2L50H
{
    // Tile index variable
    unsigned int rx, tx, ty;
    int ty_tmp;
    int l_tx[];

      foreach rx({[0:1]})
      {
        l_tx = (rx==1) ? L_SRB_TILES_X_R1 : L_SRB_TILES_X_R0;
        foreach tx ( l_tx )
        {
          foreach ty ( L_SRB_TILES_Y )
          {
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_srb_tile ( tx, ty_tmp );
          } 
        }
      }

      foreach tx ( L_SRB_TILES_X_R2_U )
      {
          foreach ty ( L_SRB_TILES_Y_U )
          {
              rx = 2;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_srb_tile ( tx, ty_tmp );
          } 
      }

      foreach tx ( L_SRB_TILES_X_R2_D )
      {
          foreach ty ( L_SRB_TILES_Y_D )
          {
              rx = 2;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_srb_tile ( tx, ty_tmp );
          } 
      }



};//end of structure arch_nl layout_srb_tile of PG2L50H

/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_clm_tile of PG2L50H
{  
    // Tile index variable
    unsigned int rx, tx, ty;
    int ty_tmp;
    int l_tx[];

      foreach rx({[0:1]})
      {
        l_tx = (rx==0) ? L_CLMS_TILES_X_R0 : L_CLMS_TILES_X_R1;
        foreach tx ( l_tx )
        {
          foreach ty ( L_CLM_TILES_Y )
          {
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_clm_tile ( tx, ty_tmp, 1);
          } 
        }
      }

      foreach tx ( L_CLMS_TILES_X_R2_U )
      {
          foreach ty ( L_SRB_TILES_Y_U )
          {
              rx = 2;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_clm_tile ( tx, ty_tmp, 1);
          } 
      }

      foreach tx ( L_CLMS_TILES_X_R2_D )
      {
          foreach ty ( L_SRB_TILES_Y_D )
          {
              rx = 2;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_clm_tile ( tx, ty_tmp, 1);
          } 
      }

      foreach rx({[0:1]})
      {
        l_tx = (rx==0) ? L_CLMA_TILES_X_R0 : L_CLMA_TILES_X_R1;
        foreach tx ( l_tx )
        {
          foreach ty ( L_CLM_TILES_Y )
          {
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_clm_tile ( tx, ty_tmp, 0);
          } 
        }
      }

      foreach tx ( L_CLMA_TILES_X_R2_U )
      {
          foreach ty ( L_SRB_TILES_Y_U )
          {
              rx = 2;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_clm_tile ( tx, ty_tmp, 0);
          } 
      }

      foreach tx ( L_CLMA_TILES_X_R2_D )
      {
          foreach ty ( L_SRB_TILES_Y_D )
          {
              rx = 2;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_clm_tile ( tx, ty_tmp, 0);
          } 
      }

}; // end of structure arch_nl layout_clma_tile of PG2L50H

/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_adc_tile of PG2L50H
{
    unsigned int rx, ty;

    foreach ty( {ADC_TILE_Y} )
    {
        rx = LOC_ADC_REGION;
        int ty_tmp = rx * NUM_TILES_REGION + ty;
        int tx_srb = BLANK_SRB_TILE_X;  

        place_adc_tile(ADC_TILE_X,ty_tmp,tx_srb);
    }


}; // end of structure arch_nl layout_adc_tile of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_drm_tile of PG2L50H
{
    unsigned int rx, tx, ty;
    unsigned int l_tx[];
    
    foreach rx( {[0:2]} )
    {
      foreach ty ( L_DRM_TILES_Y )
      {
          l_tx = (rx==0) ? L_DRM_TILES_X_R0 : 
                 (rx==1) ? L_DRM_TILES_X_R1 : 
                 (ty<25) ? L_DRM_TILES_X_R2_D : L_DRM_TILES_X_R2_U;
          foreach tx ( l_tx )
          {
             
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              place_drm_tile( tx, ty_tmp);
          }
      } 
    } 
    
};  // end of structure arch_nl layout_drm_tile of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_iock_tile of PG2L50H
{
    unsigned int rx,tx,ty;
    unsigned int l_tx[];
    
    foreach rx( {[0:2]} )
    {
      foreach ty ( {IOCK_TILE_Y} )
      {
          l_tx = ((rx==0)||(rx==1)) ? L_IOCK_TILES_X_R0 : L_IOCK_TILES_X_R2;
          foreach tx ( l_tx )
          {
             
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              place_iock_tile( tx, ty_tmp);
          }
      } 
    } 
    
};  // end of structure arch_nl layout_drm_tile of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_apm_tile of PG2L50H
{
    unsigned int rx,tx,ty;
    
    foreach rx( {[0:2]} )
    {
      foreach tx ( L_APM_TILES_X )
      {
          foreach ty ( L_APM_TILES_Y )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              place_apm_tile( tx, ty_tmp);
          }
      } 
    }
    
};  // end of structure arch_nl layout_apm_tile of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_hsst_tile of PG2L50H
{
    unsigned int rx,tx,ty;
    
    foreach ty ( {HSST_TILE_Y} )
    {
        rx =  LOC_HSST_REGION;
        int ty_tmp = rx * NUM_TILES_REGION + ty;

        place_hsst_tile( HSST_TILE_X, ty_tmp, 0);
    }
    
};  // end of structure arch_nl layout_apm_tile of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_pcie_tile of PG2L50H
{
    unsigned int rx, ty;

    foreach rx( {LOC_PCIE_REGION} )
    {            
        foreach ty( {PCIE_TILE_Y} )
        {
            int ty_tmp = rx * NUM_TILES_REGION + ty;
            place_pcie_tile( PCIE_TILE_X, ty_tmp);
        }
    }
  
};  // end of structure arch_nl layout_apm_tile of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_pll_tile of PG2L50H
{

    unsigned int rx,tx,ty;
    unsigned int l_tx[];
    
    foreach rx( {[0:2]} )
    {
      l_tx = ((rx==0)||(rx==1)) ? L_PLL_TILES_X_R0 : L_PLL_TILES_X_R2;
      foreach tx ( l_tx )
      {
          foreach ty ( {GPLL_TILE_Y} )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              place_pll_tile( tx, ty_tmp, 0);
          }
      } 
    }

    foreach rx( {[0:2]} )
    {
      l_tx = ((rx==0)||(rx==1)) ? L_PLL_TILES_X_R0 : L_PLL_TILES_X_R2;
      foreach tx ( l_tx )
      {
          foreach ty ( {PPLL_TILE_Y} )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              place_pll_tile( tx, ty_tmp, 1);
          }
      } 
    }


      
};  // end of structure arch_nl layout_pll_tile of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_uscm_tile of PG2L50H
{
    unsigned int ty;
    ty = LOC_USCM_REGION * NUM_TILES_REGION + USCM_TILE_Y;

    place_uscm_tile( USCM_TILE_X, ty);
 
};  // end of structure arch_nl layout_uscm_tile of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_pregmuxc_tile of PG2L50H
{
    unsigned int ty;
    ty = LOC_PREGMUXC_REGION * NUM_TILES_REGION + PREGMUXC_TILE_Y;

    place_pregmuxc_tile( PREGMUXC_TILE_X, ty);

 
};  // end of structure arch_nl layout_uscm_tile of PG2L50H

/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_iol_tiles of PG2L50H
{

    unsigned int rx,tx,ty,ty_tmp;
    int l_tx[];
    
    foreach rx( {[0:2]} )
    {
      l_tx = ((rx==0)||(rx==1)) ? L_IOL_TILES_X_R0 : L_IOL_TILES_X_R2;
      foreach tx ( l_tx )
      {
          foreach ty ( L_IOL_TILES_Y )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              place_iol_tile( tx, ty_tmp, 0);
          }
      } 
    }
    
};  // end of structure arch_nl layout_iol_tile of PG2L50H

/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_iob_tiles of PG2L50H
{

    unsigned int rx,tx,ty,ty_tmp;
    int l_tx[];
    
    foreach rx( {[0:2]} )
    {
      l_tx = ((rx==0)||(rx==1)) ? L_IOB_TILES_X_R0 : L_IOB_TILES_X_R2;
      foreach tx ( l_tx )
      {
         ty = rx * NUM_TILES_REGION;
         place_iob_tile( tx, ty, 0);   
      } 
    }
    
};  // end of structure arch_nl layout_iol_tile of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_ckeb_tiles of PG2L50H
{

    unsigned int rx,tx,ty,ty_tmp;
    int l_tx[];
    
    foreach rx( {[0:2]} )
    {
      l_tx = ((rx==0)||(rx==1)) ? L_CKEB_TILES_X_R0 : L_CKEB_TILES_X_R2;
      foreach tx ( l_tx )
      {
              ty = CKEB_TILE_Y;
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              place_ckeb_tile( tx, ty_tmp);
      } 
    }

    foreach rx( {[0:2]} )
    {
      foreach tx ( L_CKEB2_TILES_X )
      {
          foreach ty ( {CKEB_TILE_Y} )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              place_ckeb2_tile( tx, ty_tmp);
          }
      } 
    }

    
};  // end of structure arch_nl layout_iol_tile of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;
use pg2l50h_funcs_place;

structure arch_nl layout_ccs_tile of PG2L50H
{
    unsigned int rx,ty;
    int tx_srb = BLANK_SRB_TILE_X;
    
    foreach ty ({CCS_TILE_Y})
    {
        rx = LOC_CCS_REGION;
        int ty_tmp = rx * NUM_TILES_REGION + ty;
    
    place_ccs_tile_50h( CCS_TILE_X, CCS_TILE_Y, tx_srb);
    }
    
};  // end of structure arch_nl layout_ccs of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_srbccsdrv_tile of PG2L50H
{
    unsigned int tx,ty;
    
    foreach ty ( L_SRBCCSDRV_TILES_Y )
    {
      place_srbccsdrv_tile( SRBCCSDRV_TILE_X , ty);
    }

};  // end of structure arch_nl layout_cram_ctrl of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l50h_funcs_place;

structure arch_nl layout_cram_ctrl of PG2L50H
{
    unsigned int tx,ty;
    unsigned int rx_ccs, ty_tmp, ty_ccs;
    
    rx_ccs = LOC_CCS_REGION;
    ty_ccs = CCS_TILE_Y;
    ty_tmp = rx_ccs * NUM_TILES_REGION + ty_ccs;
    
     place_cram_ctrl_tile( CRAM_CTRL_TILE_X , CRAM_CTRL_TILE_Y, CCS_TILE_X, ty_tmp);
    
};  // end of structure arch_nl layout_cram_ctrl of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_cramsl_tile of PG2L50H
{
    unsigned int rx,tx,ty_tmp,ty;

    foreach rx( {LOC_CRAMSL2_REGION} )
    {
      foreach ty_tmp( L_CRAMSL2_TILES_Y )
      {
         ty = rx * NUM_TILES_REGION + ty_tmp;
         place_cramsl2_tile(CRAMSL2_TILE_X , ty);
      }
    }

    unsigned int l_tx[];
    foreach rx({[0:2]})
    {
      l_tx = (rx==0 || rx==1) ? L_CRAMSL0_TILES_X_R0 : L_CRAMSL0_TILES_X_R2;
      foreach tx ( l_tx )
      {
        foreach ty ( {CRAMSL_TILE_Y} )
        {
            ty_tmp = rx * NUM_TILES_REGION + ty;
            place_cramsl0_tile ( tx, ty_tmp );
        } 
      }
    }

    foreach rx({[0:2]})
    {
      l_tx = L_CRAMSL3_TILES_X;
      foreach tx ( l_tx )
      {
        foreach ty ( {CRAMSL_TILE_Y} )
        {
            ty_tmp = rx * NUM_TILES_REGION + ty;
            place_cramsl3_tile ( tx, ty_tmp );
        } 
      }
    }

    foreach rx({[0:2]})
    {
      l_tx = (rx==0 || rx==1) ? L_CRAMSL1_TILES_X_R0 : L_CRAMSL1_TILES_X_R2;
      foreach tx ( l_tx )
      {
        foreach ty ( {CRAMSL_TILE_Y} )
        {
            ty_tmp = rx * NUM_TILES_REGION + ty;
            place_cramsl1_tile ( tx, ty_tmp );
        } 
      }
    }
};  // end of structure arch_nl layout_cramsl_tile of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl layout_wrenhan_tile of PG2L50H
{
    unsigned int rx,tx,ty_tmp,ty;


    unsigned int l_tx[];
    foreach rx({[0:2]})
    {
      l_tx = (rx==2) ? L_WRENHAN_TILES_X_R2 : L_WRENHAN_TILES_X_R0;
      foreach tx ( l_tx )
      {
        foreach ty ( {WRENHAN_TILE_Y} )
        {
            ty_tmp = rx * NUM_TILES_REGION + ty;
            place_wrenhan_tile ( tx, ty_tmp );
        } 
      }
    }

    foreach ty ( {WRENHAN_TILE_Y} )
    {
        rx = LOC_WRENHAN1_REGION;
        ty_tmp = rx * NUM_TILES_REGION + ty;
        place_wrenhan1_tile ( WRENHAN1_TILE_X, ty_tmp );
    }
 
};  // end of structure arch_nl layout_wrenhan_tile of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place;

structure arch_nl connect_blank_srb_tile of PG2L50H
{
    unsigned int tx,ty_tmp,ty;
    int tx_srb;
    int rx;

    tx_srb = BLANK_SRB_TILE_X;

    foreach ty_tmp( L_SRB_TILES_Y )
    {
      rx = LOC_BLANK_SRB_REGION;
      ty = rx * NUM_TILES_REGION + ty_tmp;
      connect_blank_srb_tile( tx_srb, ty);
    }

    foreach ty_tmp({0,[2:18],[20:21],[23:24],[28:50]})
    {
      rx = LOC_ADC_REGION;
      ty = rx * NUM_TILES_REGION + ty_tmp;
      connect_blank_srb_tile( tx_srb, ty);
    }

    foreach rx( {[0:2]} )
    {
      foreach ty_tmp(L_SRB_TILES_Y)
      {
        ty = rx*NUM_TILES_REGION + ty_tmp;
        connect_blank_srb_tile( USCM_TILE_X, ty);
      }
    }



       
};  // end of structure arch_nl layout_cram_ctrl of PG2L50H


/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l_funcs_place,pg2l50h_funcs_place;

structure arch_nl layout_idcode_tile of PG2L50H
{
     
    place_idcode_tile( IDCODE_TILE_X, IDCODE_TILE_Y, CCS_TILE_X, CCS_TILE_Y);
       
};//end of structure arch_nl layout_idcode_tile of PG2L50H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;
use pg2l50h_funcs_place;

structure arch_nl layout_esd_tiles of PG2L50H
{
    unsigned int tx,ty;
    foreach ty( {ESD_TILE_Y} )
    {
        foreach tx ( {ESD_TILE_X} )
        {
           place_esd_tile( tx, ty);
        }
    }
  };//end of structure arch_nl layout_esd_tiles of PG2L50H
///*******************************************************************************
//********************************************************************************/
////library work;
////use pg2l_defs, pg2l50h_defs;
////use pg2l_funcs_place;
//
////structure arch_nl layout_rlybufs_tiles of PG2L50H
//{
//    int tx = RLYBUFS_TILE_X;
//    int ty = RLYBUFS_TILE_Y;
//           
//    place_rlybufs_tile( tx, ty);
//}
