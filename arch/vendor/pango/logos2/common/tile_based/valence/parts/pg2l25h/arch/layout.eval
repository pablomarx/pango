*****************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_srb_tile of PG2L25H
{
    // Tile index variable
    unsigned int rx,tx, ty;
    int ty_tmp;

      foreach tx ( L_SRB_TILES_X_R0 )
      {
          foreach ty ( L_SRB_TILES_Y )
          {
              rx = 0;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_srb_tile ( tx, ty_tmp );
          } 
      }

      foreach tx ( L_SRB_TILES_X_R1_U )
      {
          foreach ty ( L_TILES_Y_U )
          {
              rx = 1;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_srb_tile ( tx, ty_tmp );
          } 
      }

      foreach tx ( L_SRB_TILES_X_R1_D )
      {
          foreach ty ( L_TILES_Y_D )
          {
              rx = 1;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_srb_tile ( tx, ty_tmp );
          } 
      }



};//end of structure arch_nl layout_srb_tile of PG2L25H

/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_clm_tile of PG2L25H
{
    // Tile index variable
    unsigned int rx, tx, ty;
    unsigned int ty_tmp;
      

      foreach tx ( L_CLMA_TILES_X_R0 )
      {
          foreach ty ( L_CLM_TILES_Y )
          {
              rx = 0;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_clm_tile(tx, ty_tmp, 0);
  
          }
      }

      foreach tx ( L_CLMA_TILES_X_R1_U )
      {
          foreach ty ( L_TILES_Y_U )
          {
              rx = 1;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_clm_tile(tx, ty_tmp, 0);
  
          }
      }

      foreach tx ( L_CLMA_TILES_X_R1_D )
      {
          foreach ty ( L_TILES_Y_D )
          {
              rx = 1;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_clm_tile(tx, ty_tmp, 0);
  
          }
      }

      foreach tx ( L_CLMS_TILES_X_R0 )
      {
          foreach ty ( L_CLM_TILES_Y )
          {
              rx = 0;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_clm_tile(tx, ty_tmp, 1);
  
          }
      }

      foreach tx ( L_CLMS_TILES_X_R1_D )
      {
          foreach ty ( L_TILES_Y_D )
          {
              rx = 1;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_clm_tile(tx, ty_tmp, 1);
          }
      }

      foreach tx (L_CLMS_TILES_X_R1_U )
      {
          foreach ty ( L_TILES_Y_U )
          {
              rx = 1;
              ty_tmp = rx * NUM_TILES_REGION + ty;
              place_clm_tile(tx, ty_tmp, 1);
          }
      }


}; // end of structure arch_nl layout_clma_tile of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_drm_tile of PG2L25H
{
    unsigned int rx,tx,ty;
    unsigned int l_tx[];
    
    foreach rx( L_REGION )
    {
      foreach ty ( L_DRM_TILES_Y )
      {
          l_tx = (rx==0) ? L_DRM_TILES_X_R0 : 
                 (ty<MID_TILE_REGION) ? L_DRM_TILES_X_R1_D : L_DRM_TILES_X_R1_U;

          foreach tx ( l_tx )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              place_drm_tile( tx, ty_tmp);
          }
      } 
    } 
    
};  // end of structure arch_nl layout_drm_tile of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_iock_tile of PG2L25H
{
    unsigned int rx,tx,ty;
    unsigned int l_tx[];
    
    foreach rx( L_REGION )
    {
      foreach ty ( {IOCK_TILE_Y} )
      {
          l_tx = (rx==0) ? L_IOCK_TILES_X_R0 : L_IOCK_TILES_X_R1;
          foreach tx ( l_tx )
          {
             
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              place_iock_tile( tx, ty_tmp);
          }
      } 
    } 
    
};  // end of structure arch_nl layout_drm_tile of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_apm_tile of PG2L25H
{
    unsigned int rx,tx,ty;
    
    foreach rx( L_REGION )
    {
      foreach tx ( L_APM_TILES_X )
      {
          foreach ty ( L_APM_TILES_Y )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              place_apm_tile( tx, ty_tmp);
          }
      } 
    }
    
};  // end of structure arch_nl layout_apm_tile of PG2L25H

/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_pll_tile of PG2L25H
{
    unsigned int rx,tx,ty;
    unsigned int l_tx[];
    unsigned int ty_tmp, flag;

    foreach rx( L_REGION )
    {
        l_tx = (rx==0) ? L_PLL_TILES_X_R0 : L_PLL_TILES_X_R1;
        foreach tx( l_tx )
        {
            foreach flag( {[0:1]} )
            {
                ty_tmp = (flag==0) ? GPLL_TILE_Y : PPLL_TILE_Y;
                ty = rx * NUM_TILES_REGION + ty_tmp;

                place_pll_tile(tx, ty, flag);
                
            }
        }
    }
    
};  // end of structure arch_nl layout_pll_tile of PG2L25H

/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_uscm_tile of PG2L25H
{
    unsigned int ty;
    ty = LOC_USCM_REGION * NUM_TILES_REGION + USCM_TILE_Y;

    place_uscm_tile( USCM_TILE_X, ty);
 
};  // end of structure arch_nl layout_uscm_tile of PG2L25H


/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_iol_tiles of PG2L25H
{

    unsigned int rx,tx,ty,ty_tmp;
    int l_tx[];
    
    foreach rx( L_REGION )
    {
      l_tx = (rx==0) ? L_IOL_TILES_X_R0 : L_IOL_TILES_X_R1;
      foreach tx ( l_tx )
      {
          foreach ty ( L_IOL_TILES_Y )
          {
              int ty_tmp = rx * NUM_TILES_REGION + ty;
              place_iol_tile( tx, ty_tmp, 0);
          }
      } 
    }
    
};  // end of structure arch_nl layout_iol_tile of PG2L25H

/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_iob_tiles of PG2L25H
{

    unsigned int rx,tx,ty,ty_tmp;
    int l_tx[];
    
    foreach rx( L_REGION )
    {
      l_tx = (rx==0) ? L_IOB_TILES_X_R0 : L_IOB_TILES_X_R1;
      foreach tx ( l_tx )
      {
         ty = rx * NUM_TILES_REGION;
         place_iob_tile( tx, ty, 0);   
      } 
    }
    
};  // end of structure arch_nl layout_iol_tile of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_ckeb_tiles of PG2L25H
{

    unsigned int rx,tx,ty;
    int l_tx[];
    
    foreach rx( L_REGION )
    {
      foreach tx ( L_CKEB_TILES_X )
      {
              ty = rx * NUM_TILES_REGION + MID_TILE_REGION;
              place_ckeb_tile( tx, ty);
      } 
    }
    
};  // end of structure arch_nl layout_iol_tile of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_ckeb2_tiles of PG2L25H
{
    unsigned int rx, tx, ty;

    foreach rx( L_REGION )
    {
        ty = rx * NUM_TILES_REGION + MID_TILE_REGION;
        foreach tx( L_CKEB2_TILES_X )
        {
            place_ckeb2_tile(tx, ty);
        }
    }
};//end of structure arch_nl layout_ckeb2_tiles of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_adc_tiles of PG2L25H
{
    unsigned int ty, tx_srb;
    ty = LOC_ADC_REGION * NUM_TILES_REGION + ADC_TILE_Y;
    tx_srb = CRAM_CTRL_TILE_X + 1;

    place_adc_tile(ADC_TILE_X, ty, tx_srb);
};//end of structure arch_nl layout_adc_tiles of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l25h_funcs_place;

structure arch_nl layout_ccs_tiles of PG2L25H
{
    unsigned int ty, tx_srb;
    ty = LOC_CCS_REGION * NUM_TILES_REGION + CCS_TILE_Y;
    tx_srb = CRAM_CTRL_TILE_X + 1;

    place_ccs_tile_50h(CCS_TILE_X, ty, tx_srb);

};//end of structure arch_nl layout_ccs_tiles of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_hsst_tiles of PG2L25H
{
    unsigned int ty;
    ty = LOC_HSST_REGION * NUM_TILES_REGION;

    place_hsst_tile(HSST_TILE_X, ty, 0);
};//end of structure arch_nl layout_hsst_tiles of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_pcie_tiles of PG2L25H
{
    unsigned int ty;
    ty = LOC_PCIE_REGION * NUM_TILES_REGION + PCIE_TILE_Y;

    place_pcie_tile(PCIE_TILE_X, ty);
};//end of structure arch_nl layout_pcie_tiles of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_cramsl_tiles of PG2L25H
{
    unsigned int rx, tx, ty;
    unsigned int l_tx[];

    foreach rx( L_REGION )
    {
        ty = rx * NUM_TILES_REGION + CRAMSL_TILE_Y;
        l_tx = (rx==0) ? L_CRAMSL0_TILES_X_R0 : L_CRAMSL0_TILES_X_R1;

        foreach tx( l_tx )
        {
            place_cramsl0_tile(tx, ty);
        }

        foreach tx( L_CRAMSL1_TILES_X )
        {
            place_cramsl1_tile(tx, ty);
        }

        foreach tx( L_CRAMSL3_TILES_X )
        {
            place_cramsl3_tile(tx, ty);
        }
    }

};//end of structure arch_nl layout_cramsl_tiles of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_wrenhan_tiles of PG2L25H
{
    unsigned int rx, tx, ty;
    unsigned int l_tx[];

    foreach rx( L_REGION )
    {
        ty = rx * NUM_TILES_REGION + WRENHAN_TILE_Y;
        l_tx = (rx==0) ? L_WRENHAN_TILES_X_R0 : L_WRENHAN_TILES_X_R1;
        foreach tx( l_tx )
        {
            place_wrenhan_tile(tx, ty);
        }
    }

    foreach rx( {LOC_WRENHAN1_REGION} )
    {
        ty = rx * NUM_TILES_REGION + WRENHAN_TILE_Y;

        place_wrenhan1_tile(WRENHAN1_TILE_X, ty);

    }
};//end of structure arch_nl layout_wrenhan_tiles of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_srbccsdrv_tiles of PG2L25H
{

    unsigned int rx, ty_tmp;

    foreach rx( L_REGION )
    {
        foreach ty_tmp( L_SRBCCSDRV_TILES_Y )
        {
            int ty = rx * NUM_TILES_REGION + ty_tmp;
            place_srbccsdrv_tile(SRBCCSDRV_TILE_X, ty);
        }
    }
};//end of structure arch_nl layout_srbccsdrv_tiles of PG2L25H


/*******************************************************************************
                     From pg2l25h_funcs_place.val
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l25h_funcs_place;

structure arch_nl layout_cram_ctrl of PG2L25H
{
    int ty_ccs = LOC_CCS_REGION * NUM_TILES_REGION + CCS_TILE_Y;
    
     place_cram_ctrl_tile( CRAM_CTRL_TILE_X , CRAM_CTRL_TILE_Y, CCS_TILE_X, ty_ccs);
    
};  // end of structure arch_nl layout_cram_ctrl of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l25h_funcs_place;

structure arch_nl layout_idcode_tiles of PG2L25H
{
    unsigned int ty_ccs;
    ty_ccs = LOC_CCS_REGION * NUM_TILES_REGION + CCS_TILE_Y;

    place_idcode_tile(IDCODE_TILE_X, IDCODE_TILE_Y, CCS_TILE_X, ty_ccs);

};//end of structure arch_nl layout_idcode_tiles of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l25h_funcs_place;

structure arch_nl layout_esd_tiles of PG2L25H
{

    place_esd_tile(ESD_TILE_X, ESD_TILE_Y);

};//end of structure arch_nl layout_esd_tiles of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l25h_funcs_place;

structure arch_nl layout_connect_ccs_adc of PG2L25H
{
    unsigned int tx_ckeb, ty_ccs, ty_adc;
    tx_ckeb = CCS_TILE_X + 12;
    ty_ccs = LOC_CCS_REGION * NUM_TILES_REGION + CCS_TILE_Y;
    ty_adc = LOC_ADC_REGION * NUM_TILES_REGION + ADC_TILE_Y;

    connect_ccs_adc(CCS_TILE_X, ty_ccs, ADC_TILE_X, ty_adc, tx_ckeb, ESD_TILE_X, ESD_TILE_Y);

};//end of structure arch_nl layout_connect_ccs_adc of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l_funcs_place;

structure arch_nl layout_connect_blank_srb_tile of PG2L25H
{
    unsigned int rx, ty_tmp;

    foreach rx( L_REGION )
    {
        foreach ty_tmp( L_SRB_TILES_Y )
        {
            int ty = rx * NUM_TILES_REGION + ty_tmp;

            connect_blank_srb_tile(USCM_TILE_X, ty);
        }
    }

        foreach ty_tmp( {0, [2:18], [20:21], [23:24], [28:50]} )
        {
            int ty = LOC_ADC_REGION * NUM_TILES_REGION + ty_tmp;

            connect_blank_srb_tile(BLANK_SRB_TILE_X, ty);
        }

};//end of structure arch_nl layout_blank_srb_tile of PG2L25H
/*******************************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l25h_defs;
use pg2l25h_funcs_place;

structure arch_nl layout_connect_blank_adc_port of PG2L25H
{

    connect_blank_adc_port(LOC_ADC_REGION, CCS_TILE_X, ADC_TILE_X);


};//end of structure arch_nl layout_connect_blank_adc_port of PG2L25H
///*******************************************************************************
//********************************************************************************/
//library work;
//use pg2l_defs, pg2l25h_defs;
//use pg2l_funcs_place;
//
//structure arch_nl connect_blank_srb of PG2L25H
//{
//    unsigned int tx, ty, tx_srb;
//
//    foreach ty( L_BLANK_SRB_Y )
//    {
//       foreach tx( L_IOL_TILES_X )
//       {
//         tx_srb = ((tx==1)&&(ty>=S_HMEMC_TILE)&&(ty<=N_HMEMC_TILE)) ? tx+4 : 
//                           ((ty>=S_HMEMC_TILE)&&(ty<=N_HMEMC_TILE)) ? tx-4 : tx;
//         connect_blank_srb(tx_srb, ty);
//       }
//    }       
//};//end of structure arch_nl layout_idcode_tile of PG2L25H
///*******************************************************************************
//********************************************************************************/
//library work;
//use pg2l_defs, pg2l25h_defs;
//use pg2l_funcs_place,pg2l25h_funcs;
//
//structure arch_nl layout_idcode_tile of PG2L25H
//{
//     
//    place_idcode_tile( IDCODE_TILE_X, IDCODE_TILE_Y);
//       
//};//end of structure arch_nl layout_idcode_tile of PG2L25H
///*******************************************************************************
//********************************************************************************/
//library work;
//use pg2l_defs, pg2l25h_defs;
//use pg2l_funcs_place;
//
//structure arch_nl layout_esd_tiles of PG2L25H
//{
//    unsigned int tx,ty;
//    foreach ty( {ESD_PG2L25H_TILE_Y} )
//    {
//        foreach tx ( {ESD_PG2L25H_TILE_X} )
//        {
//           place_esd_tile( tx, ty,1);
//        }
//    }
//}
///*******************************************************************************
//********************************************************************************/
//library work;
//use pg2l_defs, pg2l25h_defs;
//use pg2l_funcs_place;
//
//structure arch_nl layout_rlybufs_tiles of PG2L25H
//{
//    int tx = RLYBUFS_TILE_X;
//    int ty = RLYBUFS_TILE_Y;
//           
//    place_rlybufs_tile( tx, ty);
//}
