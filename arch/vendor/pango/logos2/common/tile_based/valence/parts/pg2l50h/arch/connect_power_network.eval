*****************************************************************
********************************************************************************/
library work;
use pg2l_defs, pg2l50h_defs;

structure arch_nl connect_power_network of PG2L50H
{
    // Tile index variable



    &wire ntRef_ntVCCIOL3   = <wire ntVCCIOL3 of architecture>;
    &wire ntRef_ntVCCIOL4   = <wire ntVCCIOL4 of architecture>;
    &wire ntRef_ntVCCIOL5   = <wire ntVCCIOL5 of architecture>;
    &wire ntRef_ntVCCIOL6   = <wire ntVCCIOL6 of architecture>;
    &wire ntRef_ntVCCIOR4   = <wire ntVCCIOR4 of architecture>;
    &wire ntRef_ntVCCIOR5   = <wire ntVCCIOR5 of architecture>;

    &wire ntRef_ntVCC_IOL   = <wire ntVCC_IOL of architecture>;
    &wire ntRef_ntVCC_IOR   = <wire ntVCC_IOR of architecture>;
    &wire ntRef_ntVCCA_IOL  = <wire ntVCCA_IOL of architecture>;
    &wire ntRef_ntVCCA_IOR  = <wire ntVCCA_IOR of architecture>;

    &wire ntRef_ntVCC_DRM_C0   = <wire ntVCC_DRM_C0 of architecture>;       
    &wire ntRef_ntVCC_DRM_C1   = <wire ntVCC_DRM_C1 of architecture>;       
    &wire ntRef_ntVCC_DRM_C2   = <wire ntVCC_DRM_C2 of architecture>;       
    &wire ntRef_ntVCC          = <wire ntVCC of architecture>;           
    &wire ntRef_ntVCCA         = <wire ntVCCA of architecture>;
    &wire ntRef_ntVCCB         = <wire ntVCCB of architecture>;
    &wire ntRef_ntVSS          = <wire ntVSS of architecture>;

    &wire ntRef_ntVCCA_BG      = <wire ntVCCA_BG of architecture>;
    &wire ntRef_ntVSSA_BG      = <wire ntVSSA_BG of architecture>;   
    &wire ntRef_ntVCCA_EFUSE   = <wire ntVCCA_EFUSE of architecture>;
    &wire ntRef_ntVCCIOCFG     = <wire ntVCCIOCFG of architecture>;

    &wire ntRef_ntTDI          = <wire ntTDI of architecture>;
    &wire ntRef_ntTDO          = <wire ntTDO of architecture>;
    &wire ntRef_ntTCK          = <wire ntTCK of architecture>;
    &wire ntRef_ntTMS          = <wire ntTMS of architecture>;
    &wire ntRef_ntCFG_DONE     = <wire ntCFG_DONE of architecture>;
    &wire ntRef_ntINIT_FLAG_N  = <wire ntINIT_FLAG_N of architecture>;
    &wire ntRef_ntCFG_CLK      = <wire ntCFG_CLK of architecture>;
    &wire ntRef_ntRSTN         = <  wire ntRSTN of architecture>;
    &wire ntRef_ntMODE_2       = <wire ntMODE_2 of architecture>;
    &wire ntRef_ntMODE_1       = <wire ntMODE_1 of architecture>;
    &wire ntRef_ntMODE_0       = <wire ntMODE_0 of architecture>;
    &wire ntRef_ntSCBV         = <wire ntSCBV of architecture>;

    &wire ntRef_ntVCCA_GPLLL3  = <wire ntVCCA_GPLLL3 of architecture>;     
    &wire ntRef_ntVCCA_PPLLL3  = <wire ntVCCA_PPLLL3 of architecture>;     
    &wire ntRef_ntVCCA_GPLLL4  = <wire ntVCCA_GPLLL4 of architecture>;     
    &wire ntRef_ntVCCA_PPLLL4  = <wire ntVCCA_PPLLL4 of architecture>;  
    &wire ntRef_ntVCCA_GPLLL5  = <wire ntVCCA_GPLLL5 of architecture>;     
    &wire ntRef_ntVCCA_PPLLL5  = <wire ntVCCA_PPLLL5 of architecture>;  
    &wire ntRef_ntVCCA_GPLLR4  = <wire ntVCCA_GPLLR4 of architecture>;     
    &wire ntRef_ntVCCA_PPLLR4  = <wire ntVCCA_PPLLR4 of architecture>;  
    &wire ntRef_ntVCCA_GPLLR5  = <wire ntVCCA_GPLLR5 of architecture>;     
    &wire ntRef_ntVCCA_PPLLR5  = <wire ntVCCA_PPLLR5 of architecture>; 
       
    &wire ntRef_ntVSSA_GPLLL3  = <wire ntVSSA_GPLLL3 of architecture>;     
    &wire ntRef_ntVSSA_PPLLL3  = <wire ntVSSA_PPLLL3 of architecture>;     
    &wire ntRef_ntVSSA_GPLLL4  = <wire ntVSSA_GPLLL4 of architecture>;     
    &wire ntRef_ntVSSA_PPLLL4  = <wire ntVSSA_PPLLL4 of architecture>;  
    &wire ntRef_ntVSSA_GPLLL5  = <wire ntVSSA_GPLLL5 of architecture>;     
    &wire ntRef_ntVSSA_PPLLL5  = <wire ntVSSA_PPLLL5 of architecture>; 
//  &wire ntRef_ntVSSA_GPLLL6  = <wire ntVSSA_GPLLL6 of architecture>;     
//  &wire ntRef_ntVSSA_PPLLL6  = <wire ntVSSA_PPLLL6 of architecture>;   
    &wire ntRef_ntVSSA_GPLLR4  = <wire ntVSSA_GPLLR4 of architecture>;     
    &wire ntRef_ntVSSA_PPLLR4  = <wire ntVSSA_PPLLR4 of architecture>;  
    &wire ntRef_ntVSSA_GPLLR5  = <wire ntVSSA_GPLLR5 of architecture>;     
    &wire ntRef_ntVSSA_PPLLR5  = <wire ntVSSA_PPLLR5 of architecture>; 

    &wire ntRef_ntVAADC_P    = <wire ntVAADC_P of architecture>;       
    &wire ntRef_ntVAADC_N    = <wire ntVAADC_N of architecture>;       
    &wire ntRef_ntVREFADC_P  = <wire ntVREFADC_P of architecture>;     
    &wire ntRef_ntVREFADC_N  = <wire ntVREFADC_N of architecture>;     
    &wire ntRef_ntVCCADC     = <wire ntVCCADC of architecture>;        
    &wire ntRef_ntVSSADC     = <wire ntVSSADC of architecture>;   
    &wire ntRef_ntTSDN       = <wire ntTSDN of architecture>;        
    &wire ntRef_ntTSDP       = <wire ntTSDP of architecture>; 

    &wire ntRef_ntNC2  = <wire ntNC2 of architecture>;
    &wire ntRef_ntNC1  = <wire ntNC1 of architecture>;


    &wire ntRef_ntVCCM_R0 = wire VCCM_R0;
    &wire ntRef_ntVCCM_R1 = wire VCCM_R1;
    &wire ntRef_ntVCCM_R2 = wire VCCM_R2;
//  &wire ntRef_ntVCCM_R3 = wire VCCM_R3;

    &wire ntRef_ntHSSTTX0P_QR3      = <wire ntHSSTTX0P_QR3>;
    &wire ntRef_ntHSSTTX0N_QR3      = <wire ntHSSTTX0N_QR3>;
    &wire ntRef_ntHSSTRX0P_QR3      = <wire ntHSSTRX0P_QR3>;
    &wire ntRef_ntHSSTRX0N_QR3      = <wire ntHSSTRX0N_QR3>;
    &wire ntRef_ntHSSTTX1P_QR3      = <wire ntHSSTTX1P_QR3>;
    &wire ntRef_ntHSSTTX1N_QR3      = <wire ntHSSTTX1N_QR3>;
    &wire ntRef_ntHSSTRX1P_QR3      = <wire ntHSSTRX1P_QR3>;
    &wire ntRef_ntHSSTRX1N_QR3      = <wire ntHSSTRX1N_QR3>;
    &wire ntRef_ntHSSTTX2P_QR3      = <wire ntHSSTTX2P_QR3>;
    &wire ntRef_ntHSSTTX2N_QR3      = <wire ntHSSTTX2N_QR3>;
    &wire ntRef_ntHSSTRX2P_QR3      = <wire ntHSSTRX2P_QR3>;
    &wire ntRef_ntHSSTRX2N_QR3      = <wire ntHSSTRX2N_QR3>;
    &wire ntRef_ntHSSTTX3P_QR3      = <wire ntHSSTTX3P_QR3>;
    &wire ntRef_ntHSSTTX3N_QR3      = <wire ntHSSTTX3N_QR3>;
    &wire ntRef_ntHSSTRX3P_QR3      = <wire ntHSSTRX3P_QR3>;
    &wire ntRef_ntHSSTRX3N_QR3      = <wire ntHSSTRX3N_QR3>;
    &wire ntRef_ntHSSTREFCLK0P_QR3  = <wire ntHSSTREFCLK0P_QR3>;
    &wire ntRef_ntHSSTREFCLK0N_QR3  = <wire ntHSSTREFCLK0N_QR3>;
    &wire ntRef_ntHSSTREFCLK1P_QR3  = <wire ntHSSTREFCLK1P_QR3>;
    &wire ntRef_ntHSSTREFCLK1N_QR3  = <wire ntHSSTREFCLK1N_QR3>;
    &wire ntRef_ntHSSTRREF_QR3      = <wire ntHSSTRREF_QR3>;
    &wire ntRef_ntHSSTAVCC_TX0_QR3  = <wire ntHSSTAVCC_TX0_QR3>;
    &wire ntRef_ntHSSTAVCC_RX0_QR3  = <wire ntHSSTAVCC_RX0_QR3>;
    &wire ntRef_ntHSSTAVCC_TX1_QR3  = <wire ntHSSTAVCC_TX1_QR3>;
    &wire ntRef_ntHSSTAVCC_RX1_QR3  = <wire ntHSSTAVCC_RX1_QR3>;
    &wire ntRef_ntHSSTAVCC_TX2_QR3  = <wire ntHSSTAVCC_TX2_QR3>;
    &wire ntRef_ntHSSTAVCC_RX2_QR3  = <wire ntHSSTAVCC_RX2_QR3>;
    &wire ntRef_ntHSSTAVCC_TX3_QR3  = <wire ntHSSTAVCC_TX3_QR3>;
    &wire ntRef_ntHSSTAVCC_RX3_QR3  = <wire ntHSSTAVCC_RX3_QR3>;
    &wire ntRef_ntHSSTAVCC_PLL0_QR3 = <wire ntHSSTAVCC_PLL0_QR3>;
    &wire ntRef_ntHSSTAVCC_PLL1_QR3 = <wire ntHSSTAVCC_PLL1_QR3>;
    &wire ntRef_ntHSSTAVCCPLL_QR3   = <wire ntHSSTAVCCPLL_QR3>;
    &wire ntRef_ntHSSTVSSA_TRX_QR3  = <wire ntHSSTVSSA_TRX_QR3>;
    &wire ntRef_ntHSSTVSSA_PLL_QR3  = <wire ntHSSTVSSA_PLL_QR3>;

    &wire ntRef_ntPLL_ALDO_VREF1 = wire ntPLL_ALDO_VREF1;
    &wire ntRef_ntPLL_ALDO_VREF2 = wire ntPLL_ALDO_VREF2;
    &wire ntRef_ntPLL_DLDO_VREF1 = wire ntPLL_DLDO_VREF1;
    &wire ntRef_ntPLL_DLDO_VREF2 = wire ntPLL_DLDO_VREF2;
    &wire ntRef_ntLVDS_VREF_1V   = wire ntLVDS_VREF_1V; 
    &wire ntRef_ntSCBV_OUT       = wire ntSCBV_OUT;
          

    unsigned int rx, tx, ty;
    unsigned int sx,sy;
    unsigned int loc_srb;
    unsigned int l_tx[];
    unsigned int l_ty[];
    int sx_esd = ESD_TILE_X * NUM_GRID_X ;
    int sy_esd = ESD_TILE_Y * NUM_GRID_Y ;
    int sx_ccs = CCS_TILE_X * NUM_GRID_X + 3;
    int sy_ccs = CCS_TILE_Y * NUM_GRID_Y;
    
    foreach rx( L_REGION )
    {
        foreach loc_srb( {[0:1]} )
        {
          l_tx = (rx==0) ? L_SRB_TILES_X_R0 : 
                 (rx==1) ? L_SRB_TILES_X_R1 : 
                 (loc_srb==0) ? L_SRB_TILES_X_R2_D : L_SRB_TILES_X_R2_U;

          l_ty = (loc_srb==0) ? {[0:24]} : {[26:50]};
          foreach tx ( l_tx )
          {
            foreach ty ( l_ty )
            {
                sx = tx * NUM_GRID_X;
                sy = (rx*NUM_TILES_REGION+ty)*NUM_GRID_Y;
                connect
                  (
                     <pin VCC of <device  SRB_TILE @ [sx,sy]>>  => ntRef_ntVCC,
                     <pin VSS of <device  SRB_TILE @ [sx,sy]>>  => ntRef_ntVSS,
                     <pin VCCM of <device SRB_TILE @ [sx,sy]>>  => (rx==0) ? ntRef_ntVCCM_R2 :
                                                                   (rx==1) ? ntRef_ntVCCM_R1 : ntRef_ntVCCM_R0
                  );
             }
              
          }
        }
    }
 

    foreach rx( L_REGION )
    {
        foreach loc_srb( {[0:1]} )
        {
          l_tx = (rx==0) ? L_CLMS_TILES_X_R0 : 
                 (rx==1) ? L_CLMS_TILES_X_R1 : 
                 (loc_srb==0) ? L_CLMS_TILES_X_R2_D : L_CLMS_TILES_X_R2_U;

          l_ty = (loc_srb==0) ? {[0:24]} : {[26:50]};

          foreach tx ( l_tx )
          {
            foreach ty ( l_ty )
            {
                sx = tx * NUM_GRID_X;
                sy = (rx*NUM_TILES_REGION+ty)*NUM_GRID_Y;
                connect
                  (
                     <pin VCC of <device  CLMS_TILE @ [sx,sy]>>  => ntRef_ntVCC,
                     <pin VSS of <device  CLMS_TILE @ [sx,sy]>>  => ntRef_ntVSS,
                     <pin VCCM of <device CLMS_TILE @ [sx,sy]>>  => (rx==0) ? ntRef_ntVCCM_R2 :
                                                                    (rx==1) ? ntRef_ntVCCM_R1 : ntRef_ntVCCM_R0
                  );
             }
              
          }
        }
    } 


    foreach rx( L_REGION )
    {
        foreach loc_srb( {[0:1]} )
        {
          l_tx = (rx==0) ? L_CLMA_TILES_X_R0 : 
                 (rx==1) ? L_CLMA_TILES_X_R1 : 
                 (loc_srb==0) ? L_CLMA_TILES_X_R2_D : L_CLMA_TILES_X_R2_U;

          l_ty = (loc_srb==0) ? {[0:24]} : {[26:50]};

          foreach tx ( l_tx )
          {
            foreach ty ( l_ty )
            {
                sx = tx * NUM_GRID_X;
                sy = (rx*NUM_TILES_REGION+ty)*NUM_GRID_Y;
                connect
                  (
                     <pin VCC of <device  CLMA_TILE @ [sx,sy]>>  => ntRef_ntVCC,
                     <pin VSS of <device  CLMA_TILE @ [sx,sy]>>  => ntRef_ntVSS,
                     <pin VCCM of <device CLMA_TILE @ [sx,sy]>>  => (rx==0) ? ntRef_ntVCCM_R2 :
                                                                    (rx==1) ? ntRef_ntVCCM_R1 : ntRef_ntVCCM_R0
                  );
             }
              
          }
        }
    } 


  

    foreach rx( L_REGION )
    {
      l_tx = ((rx==0)||(rx==1)) ? L_CKEB_TILES_X_R0 : L_CKEB_TILES_X_R2;
      foreach tx ( l_tx )
      {
          foreach ty ( {CKEB_TILE_Y} )
          {
            sx = tx * NUM_GRID_X;
            sy = (rx*NUM_TILES_REGION+ty)*NUM_GRID_Y;

            connect
              (
                 <pin VCC of <device  CKEB_TILE @ [sx,sy]>>  => ntRef_ntVCC,
                 <pin VCCA of <device CKEB_TILE @ [sx,sy]>>  => ntRef_ntVCCA,
                 <pin VSS of <device  CKEB_TILE @ [sx,sy]>>  => ntRef_ntVSS,
                 <pin VCCM of <device CKEB_TILE @ [sx,sy]>>  => (rx==0) ? ntRef_ntVCCM_R2 :
                                                                (rx==1) ? ntRef_ntVCCM_R1  
                                                                        : ntRef_ntVCCM_R0
              );

          }
      } 
    }

    foreach rx( L_REGION )
    {
      foreach tx ( L_CKEB2_TILES_X )
      {
          foreach ty ( {CKEB_TILE_Y} )
          {
            sx = tx * NUM_GRID_X;
            sy = (rx*NUM_TILES_REGION+ty)*NUM_GRID_Y;

            connect
              (
                 <pin VCC of <device CKEB2_TILE @ [sx,sy]>>   => ntRef_ntVCC,
                 <pin VSS of <device CKEB2_TILE @ [sx,sy]>>   => ntRef_ntVSS
              );

          }
      } 
    }

    foreach tx ( {SRBCCSDRV_TILE_X} )
    {
        foreach ty ( L_SRBCCSDRV_TILES_Y )
        {
          sx = tx * NUM_GRID_X;
          sy = ty * NUM_GRID_Y;

          connect
            (
               <pin VCC of <device SRBCCSDRV_TILE @ [sx,sy]>>   => ntRef_ntVCC,
               <pin VSS of <device SRBCCSDRV_TILE @ [sx,sy]>>   => ntRef_ntVSS
            );
        }
      } 

    connect
      (
        <pin VCC        of <device  CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntVCC,
        <pin VSS        of <device  CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntVSS,
        <pin VCCA       of <device  CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntVCCA,
        <pin VCCB       of <device  CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntVCCB,
        <pin VCCA_BG    of <device  CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntVCCA_BG,
        <pin VSSA_BG    of <device  CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntVSSA_BG,
        <pin VCCIOCFG   of <device  CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntVCCIOCFG,
        <pin VCCA_EFUSE of <device  CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntVCCA_EFUSE,
        <pin VCC_DRM    of <device  CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntVCC_DRM_C0,

        <pin TCK            of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntTCK,
        <pin TDI            of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntTDI,
        <pin TMS            of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntTMS,
        <pin TDO            of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntTDO,
        <pin CFG_DONE       of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntCFG_DONE,
        <pin INIT_FLAG_N    of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntINIT_FLAG_N,
        <pin CFG_CLK        of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntCFG_CLK,
        <pin MODE_2         of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntMODE_2,
        <pin MODE_1         of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntMODE_1,
        <pin MODE_0         of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntMODE_0,
        <pin SCBV           of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntSCBV,
        <pin SCBV_OUT       of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntSCBV_OUT,
        <pin RSTN           of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntRSTN,
        <pin PLL_ALDO_VREF1 of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntPLL_ALDO_VREF1,
        <pin PLL_ALDO_VREF2 of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntPLL_ALDO_VREF2,
        <pin PLL_DLDO_VREF1 of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntPLL_DLDO_VREF1,
        <pin PLL_DLDO_VREF2 of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => ntRef_ntPLL_DLDO_VREF2,
        <pin LVDS_VREF_1V   of <device CCS_TILE @ [sx_ccs,sy_ccs]>>  => ntRef_ntLVDS_VREF_1V,

        <pin VLDO_CRAM_R0 of <device CCS_TILE @[sx_ccs,sy_ccs]>>    => ntRef_ntVCCM_R0,      
        <pin VLDO_CRAM_R1 of <device CCS_TILE @[sx_ccs,sy_ccs]>>    => ntRef_ntVCCM_R1,
        <pin VLDO_CRAM_R2 of <device CCS_TILE @[sx_ccs,sy_ccs]>>    => ntRef_ntVCCM_R2
//      <pin VLDO_CRAM_R3 of <device CCS_TILE @[sx_ccs,sy_ccs]>>    => ntRef_ntVCCM_R3

//        <pin NC2 of <device CCS_TILE @[sx_ccs,sy_ccs]>>             => ntRef_ntNC2,
//        <pin NC1 of <device CCS_TILE @[sx_ccs,sy_ccs]>>             => ntRef_ntNC1
      ); 


    foreach rx( L_REGION )
    {
          foreach ty ( L_DRM_TILES_Y )
          {
              l_tx = (rx==0) ? L_DRM_TILES_X_R0 : 
                     (rx==1) ? L_DRM_TILES_X_R1 : 
        (ty<MID_TILE_REGION) ? L_DRM_TILES_X_R2_D : L_DRM_TILES_X_R2_U;

              foreach tx ( l_tx )
              {
                  sx = tx * NUM_GRID_X + 3;
                  sy = (rx*NUM_TILES_REGION+ty)*NUM_GRID_Y;       
                  connect
                   (
                     <pin VCC of <device DRM_TILE @ [sx,sy]>>        => ntRef_ntVCC,
                     <pin VSS of <device DRM_TILE @ [sx,sy]>>        => ntRef_ntVSS,
                     <pin VCC_DRM of <device DRM_TILE @ [sx,sy]>>    => (tx==41) ? ntRef_ntVCC_DRM_C2 :
                                                                        (tx==37) ? ntRef_ntVCC_DRM_C1  
                                                                                 : ntRef_ntVCC_DRM_C0 

                   );
              }
          }
    } 

    foreach rx( L_REGION )
    {
      foreach ty ( L_APM_TILES_Y )
      {
          foreach tx ( L_APM_TILES_X )
          {
              sx = tx * NUM_GRID_X + 3;
              sy = (rx*NUM_TILES_REGION+ty)*NUM_GRID_Y;       
              connect
               (
                 <pin VCC of <device APM_TILE @ [sx,sy]>>        => ntRef_ntVCC,
                 <pin VSS of <device APM_TILE @ [sx,sy]>>        => ntRef_ntVSS
               );
          }
      } 
    } 


    foreach rx( L_REGION )
    {
      l_tx = ((rx==0)||(rx==1)) ? L_PLL_TILES_X_R0 : L_PLL_TILES_X_R2;
      foreach tx ( l_tx )
      {
          foreach ty ( {GPLL_TILE_Y} )
          {
            sx = tx * NUM_GRID_X;
            sy = (rx*NUM_TILES_REGION+ty) * NUM_GRID_Y;
  
            connect
              (
                <pin VCC of <device GPLL_TILE @ [sx,sy]>>      => ntRef_ntVCC,
                <pin VSS of <device GPLL_TILE @ [sx,sy]>>      => ntRef_ntVSS,
                <pin VCCA of <device GPLL_TILE @ [sx,sy]>>     => ntRef_ntVCCA,

                <pin VSSA_PLL of <device GPLL_TILE @ [sx,sy]>> => ((rx==0)&&(tx==1)) ? ntRef_ntVSSA_GPLLL5 :
                                                                  ((rx==1)&&(tx==1)) ? ntRef_ntVSSA_GPLLL4 :
                                                                  ((rx==2)&&(tx==1)) ? ntRef_ntVSSA_GPLLL3 :
                                                                  ((rx==0)&&(tx!=1)) ? ntRef_ntVSSA_GPLLR5 : ntRef_ntVSSA_GPLLR4,
                <pin VCCA_PLL of <device GPLL_TILE @ [sx,sy]>> => ((rx==0)&&(tx==1)) ? ntRef_ntVCCA_GPLLL5 :
                                                                  ((rx==1)&&(tx==1)) ? ntRef_ntVCCA_GPLLL4 :
                                                                  ((rx==2)&&(tx==1)) ? ntRef_ntVCCA_GPLLL3 :
                                                                  ((rx==0)&&(tx!=1)) ? ntRef_ntVCCA_GPLLR5 : ntRef_ntVCCA_GPLLR4,

                <pin VCC_IO of <device GPLL_TILE @ [sx,sy]>>   => (tx==1) ? ntRef_ntVCC_IOL :
                                                                            ntRef_ntVCC_IOR,

                <pin VREF1_ALDO_GPLL of <device GPLL_TILE @ [sx,sy]>>   => ntRef_ntPLL_ALDO_VREF1,
                <pin VREF2_ALDO_GPLL of <device GPLL_TILE @ [sx,sy]>>   => ntRef_ntPLL_ALDO_VREF2,
                <pin VREF1_DLDO_GPLL of <device GPLL_TILE @ [sx,sy]>>   => ntRef_ntPLL_DLDO_VREF1,
                <pin VREF2_DLDO_GPLL of <device GPLL_TILE @ [sx,sy]>>   => ntRef_ntPLL_DLDO_VREF2
              );
          }

          foreach ty ( {PPLL_TILE_Y} )
          {
            sx = tx * NUM_GRID_X;
            sy = (rx*NUM_TILES_REGION+ty) * NUM_GRID_Y;
  
            connect
              (
                <pin VCC of <device  PPLL_TILE @ [sx,sy]>>     => ntRef_ntVCC,
                <pin VSS of <device  PPLL_TILE @ [sx,sy]>>     => ntRef_ntVSS,
                <pin VCCA of <device PPLL_TILE @ [sx,sy]>>     => ntRef_ntVCCA,

                <pin VCCA_PLL of <device PPLL_TILE @ [sx,sy]>> => ((rx==0)&&(tx==1)) ? ntRef_ntVCCA_PPLLL5 :
                                                                  ((rx==1)&&(tx==1)) ? ntRef_ntVCCA_PPLLL4 :
                                                                  ((rx==2)&&(tx==1)) ? ntRef_ntVCCA_PPLLL3 :
                                                                  ((rx==0)&&(tx!=1)) ? ntRef_ntVCCA_PPLLR5 : ntRef_ntVCCA_PPLLR4,
                <pin VSSA_PLL of <device PPLL_TILE @ [sx,sy]>> => ((rx==0)&&(tx==1)) ? ntRef_ntVSSA_PPLLL5 :
                                                                  ((rx==1)&&(tx==1)) ? ntRef_ntVSSA_PPLLL4 :
                                                                  ((rx==2)&&(tx==1)) ? ntRef_ntVSSA_PPLLL3 :
                                                                  ((rx==0)&&(tx!=1)) ? ntRef_ntVSSA_PPLLR5 : ntRef_ntVSSA_PPLLR4,

                <pin VCC_IO of <device PPLL_TILE @ [sx,sy]>>   => (tx==1) ? ntRef_ntVCC_IOL :
                                                                            ntRef_ntVCC_IOR,

                <pin VREF1_ALDO_PPLL of <device PPLL_TILE @ [sx,sy]>>   => ntRef_ntPLL_ALDO_VREF1,
                <pin VREF2_ALDO_PPLL of <device PPLL_TILE @ [sx,sy]>>   => ntRef_ntPLL_ALDO_VREF2,
                <pin VREF1_DLDO_PPLL of <device PPLL_TILE @ [sx,sy]>>   => ntRef_ntPLL_DLDO_VREF1,
                <pin VREF2_DLDO_PPLL of <device PPLL_TILE @ [sx,sy]>>   => ntRef_ntPLL_DLDO_VREF2
              );
          }     
     
      }
    }


    unsigned int L_USCM_TILES_X[] = {USCM_TILE_X};
    unsigned int L_USCM_TILES_Y[] = {USCM_TILE_Y};
    
    foreach tx ( L_USCM_TILES_X )
    {
        foreach ty ( L_USCM_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 3;
          sy = (LOC_USCM_REGION * NUM_TILES_REGION + ty) * NUM_GRID_Y;

          connect
            (
              <pin VCC of <device USCM_TILE @ [sx,sy]>>  => ntRef_ntVCC,
              <pin VSS of <device USCM_TILE @ [sx,sy]>>  => ntRef_ntVSS
            );
        }      
    } 

    unsigned int L_PREGMUXC_TILES_X[] = {PREGMUXC_TILE_X};
    unsigned int L_PREGMUXC_TILES_Y[] = {PREGMUXC_TILE_Y};
    
    foreach tx ( L_PREGMUXC_TILES_X )
    {
        foreach ty ( L_PREGMUXC_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 3;
          sy = (LOC_PREGMUXC_REGION * NUM_TILES_REGION + ty) * NUM_GRID_Y;

          connect
            (
              <pin VCC of <device PREGMUXC_TILE @ [sx,sy]>>  => ntRef_ntVCC,
              <pin VSS of <device PREGMUXC_TILE @ [sx,sy]>>  => ntRef_ntVSS
            );
        }      
    } 

    foreach rx ({L_REGION})
    {
      l_tx = ((rx==0) || (rx==1)) ? L_IOL_TILES_X_R0 : L_IOL_TILES_X_R2;
      foreach tx ( l_tx )
      {
        foreach ty ( L_IOL_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 3;
          sy = (rx*NUM_TILES_REGION+ty) * NUM_GRID_Y;

          connect
            (
              <pin VCC    of <device IOLHR_TILE @ [sx,sy]>>   => ntRef_ntVCC,
              <pin VSS    of <device IOLHR_TILE @ [sx,sy]>>   => ntRef_ntVSS,
              <pin VCC_IO of <device IOLHR_TILE @ [sx,sy]>>   => (tx==2) ? ntRef_ntVCC_IOL : ntRef_ntVCC_IOR
            );
        }
      }
    }  

//CRAMSL2

    foreach rx ({LOC_CRAMSL2_REGION})
    { 
        tx = CRAMSL2_TILE_X;
        foreach ty ( L_CRAMSL2_TILES_Y )
        {
          sx = tx * NUM_GRID_X + 3;
          sy = (rx*NUM_TILES_REGION+ty) * NUM_GRID_Y;
          connect
            (
              <pin VCC of <device CRAMSL2_TILE @ [sx,sy]>>      => ntRef_ntVCC,
              <pin VSS of <device CRAMSL2_TILE @ [sx,sy]>>      => ntRef_ntVSS
            );
        }
    }  

//CRAMSL1

    foreach rx ( L_REGION )
    { 
      l_tx = ((rx==0)||(rx==1)) ? L_CRAMSL1_TILES_X_R0 : L_CRAMSL1_TILES_X_R2;
      foreach tx ( l_tx )
      {
        foreach ty ( {CRAMSL_TILE_Y} )
        {
          sx = tx * NUM_GRID_X+3;
          sy = (rx * NUM_TILES_REGION + ty) * NUM_GRID_Y;

          connect
            (
              <pin VCC of <device CRAMSL1_TILE @ [sx,sy]>>       => ntRef_ntVCC,
              <pin VSS of <device CRAMSL1_TILE @ [sx,sy]>>       => ntRef_ntVSS
            );
        }
      }
    }  

//CRAMSL0

    foreach rx ( L_REGION )
    { 
      l_tx = ((rx==0)||(rx==1)) ? L_CRAMSL0_TILES_X_R0 : L_CRAMSL0_TILES_X_R2;
      foreach tx ( l_tx )
      {
        foreach ty ( {CRAMSL_TILE_Y} )
        {
          sx = tx * NUM_GRID_X+3;
          sy = (rx * NUM_TILES_REGION + ty) * NUM_GRID_Y;

          connect
            (
              <pin VCC of <device CRAMSL0_TILE @ [sx,sy]>>       => ntRef_ntVCC,
              <pin VSS of <device CRAMSL0_TILE @ [sx,sy]>>       => ntRef_ntVSS
            );
        }
      }
    } 

//CRAMSL3

    foreach rx ( L_REGION )
    { 
      foreach tx ( L_CRAMSL3_TILES_X )
      {
        foreach ty ( {CRAMSL_TILE_Y} )
        {
          sx = tx * NUM_GRID_X+3;
          sy = (rx * NUM_TILES_REGION + ty) * NUM_GRID_Y;

          connect
            (
              <pin VCC of <device CRAMSL3_TILE @ [sx,sy]>>       => ntRef_ntVCC,
              <pin VSS of <device CRAMSL3_TILE @ [sx,sy]>>       => ntRef_ntVSS
            );
        }
      }
    } 

//CRAM_CTRL_WRENHAN_TILE

    foreach rx ( L_REGION )
    { 
      l_tx = (rx==0) ? L_WRENHAN_TILES_X_R0 : 
             (rx==1) ? L_WRENHAN_TILES_X_R1 : L_WRENHAN_TILES_X_R2;
      foreach tx ( l_tx )
      {
        foreach ty ( {WRENHAN_TILE_Y} )
        {
          sx = tx * NUM_GRID_X+2;
          sy = (rx*NUM_TILES_REGION+ty) * NUM_GRID_Y;

          connect
            (
              <pin VCC of <device CRAM_CTRL_WRENHAN_TILE @ [sx,sy]>>       => ntRef_ntVCC,
              <pin VSS of <device CRAM_CTRL_WRENHAN_TILE @ [sx,sy]>>       => ntRef_ntVSS
            );
        }
      }
    } 

//CRAM_CTRL_WRENHAN1_TILE

    foreach rx ( {LOC_WRENHAN1_REGION} )
    { 
      foreach tx ( {WRENHAN1_TILE_X} )
      {
        foreach ty ( {WRENHAN_TILE_Y} )
        {
          sx = tx * NUM_GRID_X+2;
          sy = (rx * NUM_TILES_REGION + ty) * NUM_GRID_Y;

          connect
            (
              <pin VCC of <device CRAM_CTRL_WRENHAN1_TILE @ [sx,sy]>>       => ntRef_ntVCC,
              <pin VSS of <device CRAM_CTRL_WRENHAN1_TILE @ [sx,sy]>>       => ntRef_ntVSS
            );
        }
      }
    } 

//IOCK_TILE

    foreach rx ( L_REGION )
    {
      l_tx = (rx==0) ? L_IOCK_TILES_X_R0 : 
             (rx==1) ? L_IOCK_TILES_X_R1 : L_IOCK_TILES_X_R2;
      foreach tx ( l_tx )
      {
        foreach ty ( {IOCK_TILE_Y} )
        {
          sx = tx * NUM_GRID_X;
          sy = (rx * NUM_TILES_REGION + ty) * NUM_GRID_Y;

          connect
            (
              <pin VCC of <device IOCK_TILE @ [sx,sy]>>       => ntRef_ntVCC,
              <pin VCCA of <device IOCK_TILE @ [sx,sy]>>      => ntRef_ntVCCA,
              <pin VSS of <device IOCK_TILE @ [sx,sy]>>       => ntRef_ntVSS,
              <pin VCC_IO of <device IOCK_TILE @ [sx,sy]>>    => (tx==1) ? ntRef_ntVCC_IOL :
                                                                           ntRef_ntVCC_IOR
            );
        }
      }
    }  

//CRAM_CTRL_50H_TILE
   
    sx = CRAM_CTRL_TILE_X * NUM_GRID_X;
    sy = CRAM_CTRL_TILE_Y * NUM_GRID_X;
    connect
      (
        <pin VCCM_R0 of <device CRAM_CTRL_50H_TILE @ [sx,sy]>>    => ntRef_ntVCCM_R0,
        <pin VCCM_R1 of <device CRAM_CTRL_50H_TILE @ [sx,sy]>>    => ntRef_ntVCCM_R1,
        <pin VCCM_R2 of <device CRAM_CTRL_50H_TILE @ [sx,sy]>>    => ntRef_ntVCCM_R2,
//      <pin VCCM_R3 of <device CRAM_CTRL_50H_TILE @ [sx,sy]>>    => ntRef_ntVCCM_R3,
        <pin VCC     of <device CRAM_CTRL_50H_TILE @ [sx,sy]>>    => ntRef_ntVCC,
        <pin VCCA    of <device CRAM_CTRL_50H_TILE @ [sx,sy]>>    => ntRef_ntVCCA,
        <pin VSS     of <device CRAM_CTRL_50H_TILE @ [sx,sy]>>    => ntRef_ntVSS
      );

//ADC_TILE

    sx = ADC_TILE_X * NUM_GRID_X + 3;
    sy = (LOC_ADC_REGION * NUM_TILES_REGION + ADC_TILE_Y) * NUM_GRID_X;

    connect
      (
        <pin VAADC_N            of <device ADC_TILE @ [sx,sy]>> => <wire VAADC_NO    of <device ESD_50HR_TILE @ [sx_esd,sy_esd]>>,
        <pin VAADC_P            of <device ADC_TILE @ [sx,sy]>> => <wire VAADC_PO    of <device ESD_50HR_TILE @ [sx_esd,sy_esd]>>,

        <pin VCCADC             of <device ADC_TILE @ [sx,sy]>> => ntRef_ntVCCADC,
        <pin VSSADC             of <device ADC_TILE @ [sx,sy]>> => ntRef_ntVSSADC,
        <pin VCC                of <device ADC_TILE @ [sx,sy]>> => ntRef_ntVCC,
        <pin VCCAUX             of <device ADC_TILE @ [sx,sy]>> => ntRef_ntVCCA,
        <pin VSS                of <device ADC_TILE @ [sx,sy]>> => ntRef_ntVSS,
        <pin VSSAUX             of <device ADC_TILE @ [sx,sy]>> => ntRef_ntVSS,
        <pin VCCA_SENSOR_P      of <device ADC_TILE @ [sx,sy]>> => ntRef_ntVCCA,
        <pin VCC_SENSOR_P       of <device ADC_TILE @ [sx,sy]>> => ntRef_ntVCC,
        <pin VCC_CRAM_SENSOR_P  of <device ADC_TILE @ [sx,sy]>> => ntRef_ntVCCM_R1,
        <pin VCC_DRM_SENSOR_P   of <device ADC_TILE @ [sx,sy]>> => ntRef_ntVCC_DRM_C0,

        <pin VREFADC_N  of <device ADC_TILE @ [sx,sy]>>   => <wire VREFADC_NO  of <device ESD_50HR_TILE @ [sx_esd,sy_esd]>>,
        <pin VREFADC_P  of <device ADC_TILE @ [sx,sy]>>   => <wire VREFADC_PO  of <device ESD_50HR_TILE @ [sx_esd,sy_esd]>>,
        <pin TSDP       of <device ADC_TILE @ [sx,sy]>>   => ntRef_ntTSDP,
        <pin TSDN       of <device ADC_TILE @ [sx,sy]>>   => ntRef_ntTSDN
      );

//HSSTLP_TILE

    sx = HSST_TILE_X * NUM_GRID_X + 3;
    sy = (LOC_HSST_REGION * NUM_TILES_REGION + HSST_TILE_Y) * NUM_GRID_X;

    connect
      (
        <pin PAD_RX_SDP0 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTRX0P_QR3,
        <pin PAD_RX_SDP1 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTRX1P_QR3,
        <pin PAD_RX_SDP2 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTRX2P_QR3,
        <pin PAD_RX_SDP3 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTRX3P_QR3,
        <pin PAD_RX_SDN0 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTRX0N_QR3,
        <pin PAD_RX_SDN1 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTRX1N_QR3,
        <pin PAD_RX_SDN2 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTRX2N_QR3,
        <pin PAD_RX_SDN3 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTRX3N_QR3,
        <pin PAD_TX_SDP0 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTTX0P_QR3,
        <pin PAD_TX_SDP1 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTTX1P_QR3,
        <pin PAD_TX_SDP2 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTTX2P_QR3,
        <pin PAD_TX_SDP3 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTTX3P_QR3,
        <pin PAD_TX_SDN0 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTTX0N_QR3,
        <pin PAD_TX_SDN1 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTTX1N_QR3,
        <pin PAD_TX_SDN2 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTTX2N_QR3,
        <pin PAD_TX_SDN3 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTTX3N_QR3,

        <pin PAD_REFCLKP_0 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTREFCLK0P_QR3,
        <pin PAD_REFCLKN_0 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTREFCLK0N_QR3,
        <pin PAD_REFCLKP_1 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTREFCLK1P_QR3,
        <pin PAD_REFCLKN_1 of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTREFCLK1N_QR3,

        <pin VDDA1P0_RX[0]  of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTAVCC_RX0_QR3,
        <pin VDDA1P0_RX[1]  of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTAVCC_RX1_QR3,
        <pin VDDA1P0_RX[2]  of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTAVCC_RX2_QR3,
        <pin VDDA1P0_RX[3]  of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTAVCC_RX3_QR3,
        <pin VDDA1P0_TX[0]  of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTAVCC_TX0_QR3,
        <pin VDDA1P0_TX[1]  of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTAVCC_TX1_QR3,
        <pin VDDA1P0_TX[2]  of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTAVCC_TX2_QR3,
        <pin VDDA1P0_TX[3]  of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTAVCC_TX3_QR3,
        <pin VSSA_TRX       of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTVSSA_TRX_QR3,
        <pin VDDA1P0_PLL[0] of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTAVCC_PLL0_QR3,
        <pin VDDA1P0_PLL[1] of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTAVCC_PLL1_QR3,
        <pin VDDA1P2_PLL    of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTAVCCPLL_QR3,
        <pin VSSA_PLL       of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTVSSA_PLL_QR3,
        <pin ATB_PLL        of <device HSSTLP_TILE @ [sx,sy]>>  => ntRef_ntHSSTRREF_QR3,

        <pin VCC of <device HSSTLP_TILE @ [sx,sy]>>            => ntRef_ntVCC,
        <pin VSS of <device HSSTLP_TILE @ [sx,sy]>>            => ntRef_ntVSS
      );

//IOBHR_TILE

    foreach rx ( {LOC_HSST_REGION} )
    { 
      foreach tx ( L_IOB_TILES_X_R2 )
      {
        sx = tx * NUM_GRID_X;
        sy = rx * NUM_TILES_REGION * NUM_GRID_Y;

        connect
          (
            <pin VCC        of <device IOBHR_TILE @ [sx,sy]>>   => ntRef_ntVCC,
            <pin VSS        of <device IOBHR_TILE @ [sx,sy]>>   => ntRef_ntVSS,
            <pin VCC_IO     of <device IOBHR_TILE @ [sx,sy]>>   => ntRef_ntVCC_IOL,
            <pin VCCA_IO    of <device IOBHR_TILE @ [sx,sy]>>   => ntRef_ntVCCA_IOL,
            <pin SCBV       of <device IOBHR_TILE @ [sx,sy]>>   => <wire S09_TIE1[24] of <device IOBHR_TILE @ [sx,sy]>>,
            <pin VREF_1V    of <device IOBHR_TILE @ [sx,sy]>>   =>  ntRef_ntLVDS_VREF_1V
          );
      }
    }      

    foreach rx ({0,1})
    { 
      foreach tx ( L_IOB_TILES_X_R0 )
      {
        sx = tx * NUM_GRID_X;
        sy = rx * NUM_TILES_REGION * NUM_GRID_Y;

        connect
          (
            <pin VCC        of <device IOBHR_TILE @ [sx,sy]>>   => ntRef_ntVCC,
            <pin VSS        of <device IOBHR_TILE @ [sx,sy]>>   => ntRef_ntVSS,
            <pin SCBV       of <device IOBHR_TILE @ [sx,sy]>>   => (tx==0) ? ntRef_ntSCBV_OUT 
                                                                           : <wire S09_TIE1[24] of <device IOBHR_TILE @ [sx,sy]>>,
            <pin VREF_1V    of <device IOBHR_TILE @ [sx,sy]>>   =>  ntRef_ntLVDS_VREF_1V,
            <pin VCC_IO     of <device IOBHR_TILE @ [sx,sy]>>   => (tx==0) ? ntRef_ntVCC_IOL 
                                                                           : ntRef_ntVCC_IOR,
            <pin VCCA_IO    of <device IOBHR_TILE @ [sx,sy]>>   => (tx==0) ? ntRef_ntVCCA_IOL 
                                                                           : ntRef_ntVCCA_IOR
          );
      }
    } 



//ESD_TILE

    foreach ty ( {ESD_TILE_Y} )
    {
        foreach tx ( {ESD_TILE_X} )
        {
          sx = tx * NUM_GRID_X;
          sy = ty * NUM_GRID_Y;

          connect
            (
              <pin VCC          of <device ESD_50HR_TILE @ [sx,sy]>>  => ntRef_ntVCC,
              <pin VCCADC       of <device ESD_50HR_TILE @ [sx,sy]>>  => ntRef_ntVCCADC,
              <pin VCCA         of <device ESD_50HR_TILE @ [sx,sy]>>  => ntRef_ntVCCA,
              <pin VCCA_BG      of <device ESD_50HR_TILE @ [sx,sy]>>  => ntRef_ntVCCA_BG,
//              <pin VCCA_EFUSE of <device ESD_50HR_TILE @ [sx,sy]>>  => ntRef_ntVCCA_EFUSE,
              <pin VCC_DRM_C0   of <device ESD_50HR_TILE @ [sx,sy]>>  => ntRef_ntVCC_DRM_C0,
              <pin VCC_DRM_C1   of <device ESD_50HR_TILE @ [sx,sy]>>  => ntRef_ntVCC_DRM_C1,
              <pin VCC_DRM_C2   of <device ESD_50HR_TILE @ [sx,sy]>>  => ntRef_ntVCC_DRM_C2,
              <pin VCCB         of <device ESD_50HR_TILE @ [sx,sy]>>  => ntRef_ntVCCB,

              <pin VCCA_GPLLL3 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVCCA_GPLLL3,
              <pin VCCA_GPLLL4 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVCCA_GPLLL4,
              <pin VCCA_GPLLL5 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVCCA_GPLLL5,
              <pin VCCA_GPLLR4 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVCCA_GPLLR4,
              <pin VCCA_GPLLR5 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVCCA_GPLLR5,
              <pin VCCA_PPLLL3 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVCCA_PPLLL3,
              <pin VCCA_PPLLL4 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVCCA_PPLLL4,
              <pin VCCA_PPLLL5 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVCCA_PPLLL5,
              <pin VCCA_PPLLR4 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVCCA_PPLLR4,
              <pin VCCA_PPLLR5 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVCCA_PPLLR5,

//              <pin VCCA_IOL3 of <device ESD_50HR_TILE @ [sx,sy]>>    => ntRef_ntVCCA_IOL,
//              <pin VCCA_IOL4 of <device ESD_50HR_TILE @ [sx,sy]>>    => ntRef_ntVCCA_IOL,
//              <pin VCCA_IOL5 of <device ESD_50HR_TILE @ [sx,sy]>>    => ntRef_ntVCCA_IOL,
              <pin VCCA_IOL of <device ESD_50HR_TILE @ [sx,sy]>>    => ntRef_ntVCCA_IOL,
//              <pin VCCA_IOR4 of <device ESD_50HR_TILE @ [sx,sy]>>    => ntRef_ntVCCA_IOR,
              <pin VCCA_IOR of <device ESD_50HR_TILE @ [sx,sy]>>    => ntRef_ntVCCA_IOR,
//              <pin VCC_IOL3 of <device ESD_50HR_TILE @ [sx,sy]>>    => ntRef_ntVCC_IOL,
//              <pin VCC_IOL4 of <device ESD_50HR_TILE @ [sx,sy]>>    => ntRef_ntVCC_IOL,
//              <pin VCC_IOL5 of <device ESD_50HR_TILE @ [sx,sy]>>    => ntRef_ntVCC_IOL,
              <pin VCC_IOL of <device ESD_50HR_TILE @ [sx,sy]>>    => ntRef_ntVCC_IOL,
//              <pin VCC_IOR4 of <device ESD_50HR_TILE @ [sx,sy]>>    => ntRef_ntVCC_IOR,
              <pin VCC_IOR of <device ESD_50HR_TILE @ [sx,sy]>>    => ntRef_ntVCC_IOR,
              <pin VCCIOL3 of <device ESD_50HR_TILE @ [sx,sy]>>     => ntRef_ntVCCIOL3,
              <pin VCCIOL4 of <device ESD_50HR_TILE @ [sx,sy]>>     => ntRef_ntVCCIOL4,
              <pin VCCIOL5 of <device ESD_50HR_TILE @ [sx,sy]>>     => ntRef_ntVCCIOL5,
//            <pin VCCIOL6 of <device ESD_50HR_TILE @ [sx,sy]>>     => ntRef_ntVCCIOL6,
              <pin VCCIOR4 of <device ESD_50HR_TILE @ [sx,sy]>>     => ntRef_ntVCCIOR4,
              <pin VCCIOR5 of <device ESD_50HR_TILE @ [sx,sy]>>     => ntRef_ntVCCIOR5,
              <pin VCCIOCFG of <device ESD_50HR_TILE @ [sx,sy]>>    => ntRef_ntVCCIOCFG,

              <pin VSS      of <device ESD_50HR_TILE @ [sx,sy]>>      => ntRef_ntVSS,
              <pin VSSADC   of <device ESD_50HR_TILE @ [sx,sy]>>      => ntRef_ntVSSADC,
              <pin VSS_BG   of <device ESD_50HR_TILE @ [sx,sy]>>      => ntRef_ntVSSA_BG,

              <pin VSSA_GPLLL3 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVSSA_GPLLL3,
              <pin VSSA_GPLLL4 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVSSA_GPLLL4,
              <pin VSSA_GPLLL5 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVSSA_GPLLL5,
              <pin VSSA_GPLLR4 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVSSA_GPLLR4,
              <pin VSSA_GPLLR5 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVSSA_GPLLR5,
              <pin VSSA_PPLLL3 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVSSA_PPLLL3,
              <pin VSSA_PPLLL4 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVSSA_PPLLL4,
              <pin VSSA_PPLLL5 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVSSA_PPLLL5,
              <pin VSSA_PPLLR4 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVSSA_PPLLR4,
              <pin VSSA_PPLLR5 of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVSSA_PPLLR5,
              <pin CFG_CLK      of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntCFG_CLK     ,
              <pin CFG_DONE     of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntCFG_DONE    ,
              <pin INIT_FLAG_N  of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntINIT_FLAG_N ,
              <pin MODE_0       of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntMODE_0      ,
              <pin MODE_1       of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntMODE_1      ,
              <pin MODE_2       of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntMODE_2      ,
              <pin RSTN         of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntRSTN        ,
              <pin SCBV         of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntSCBV        ,
              <pin TCK          of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntTCK         ,
              <pin TDI          of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntTDI         ,
              <pin TDO          of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntTDO         ,
              <pin TMS          of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntTMS         ,
              <pin TSDN         of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntTSDN        ,
              <pin TSDP         of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntTSDP        ,
              <pin VAADC_N    of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVAADC_N       ,
              <pin VAADC_P    of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVAADC_P       ,
              <pin VREFADC_N  of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVREFADC_N     ,
              <pin VREFADC_P  of <device ESD_50HR_TILE @ [sx,sy]>> => ntRef_ntVREFADC_P     ,    
              <pin NC2      of <device ESD_50HR_TILE @ [sx,sy]>>   => ntRef_ntNC2,
              <pin NC1      of <device ESD_50HR_TILE @ [sx,sy]>>   => ntRef_ntNC1,
              <pin NC1_I    of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => <wire MFG_TEST_NC1 of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
              <pin NC2_I    of <device CCS_TILE @ [sx_ccs,sy_ccs]>> => <wire MFG_TEST_NC2 of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
              <pin NC1_I    of <device ESD_50HR_TILE @ [sx,sy]>>   => <wire NC1 of <device CCS_TILE @[sx_ccs,sy_ccs]>>,
              <pin NC2_I    of <device ESD_50HR_TILE @ [sx,sy]>>   => <wire NC2 of <device CCS_TILE @[sx_ccs,sy_ccs]>>
            );
        }  
    } 
 

//IDCODE_TILE

    tx = IDCODE_TILE_X;
    ty = IDCODE_TILE_Y;

    sx = tx * NUM_GRID_X ;
    sy = ty * NUM_GRID_Y;

    connect
      (
        <pin VCC of <device IDCODE_PG2L50H_TILE @ [sx,sy]>>     => ntRef_ntVCC,
        <pin VSS of <device IDCODE_PG2L50H_TILE @ [sx,sy]>>     => ntRef_ntVSS
      );

//PCIE_TILE

    tx = PCIE_TILE_X;
    ty = LOC_PCIE_REGION * NUM_TILES_REGION + PCIE_TILE_Y;

    sx = tx * NUM_GRID_X +3;
    sy = ty * NUM_GRID_Y;

    connect
      (
        <pin VCC of <device PCIE_TILE @ [sx,sy]>>     => ntRef_ntVCC,
        <pin VSS of <device PCIE_TILE @ [sx,sy]>>     => ntRef_ntVSS
      );
//
//    tx = RLYBUFS_TILE_X;
//    ty = RLYBUFS_TILE_Y;
//
//    sx = tx * NUM_GRID_X + 2;
//    sy = ty * NUM_GRID_Y;
//
//    for(tmp_ty = ty;tmp_ty > MID_TILE_REGION;tmp_ty = tmp_ty - NUM_TILES_REGION)
//    {
//      sy = sy + NUM_GRID_WLSR_Y - NUM_GRID_Y;
//    }
//
//    connect
//      (
//        <pin VCC of <device RLYBUFS_TILE @ [sx,sy]>>   => ntRef_ntVCC,
//        <pin VSS of <device RLYBUFS_TILE @ [sx,sy]>>     => ntRef_ntVSS
//      );



};//end of structure arch_nl connect_power_input_srb of PG2L100H


