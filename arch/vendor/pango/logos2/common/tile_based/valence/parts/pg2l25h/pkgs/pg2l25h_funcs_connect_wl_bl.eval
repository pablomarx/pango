use pg2l_defs,pg2l25h_defs;

package pg2l25h_funcs_connect_wl_bl
{
/********************************************************************************
                        functions for DATA
********************************************************************************/
function connect_core_bl_input
(
    unsigned int rx,
    unsigned int tx,
    unsigned int tx_bl,
    unsigned int ty_bl,
    unsigned int tx_l1,
    unsigned int tx_l2,
    unsigned int tx_l3,
    unsigned int tx_r1,
    unsigned int tx_r2,
    unsigned int tx_r3,
    unsigned int tx_r4,
    unsigned int tx_r5,
    unsigned int tx_r6,

    unsigned int loc_device,     //loc_device=0,bottom half region;loc_device=1,top half region
    string device_bl,
    string tile_name
)
{
    string strVar = tile_name;
    string cram_ctrl = device_bl;

    int sx_bl = tx_bl * NUM_GRID_X;
    int sy_bl = ty_bl * NUM_GRID_Y;
    int sx,sy;
    sx = (strVar=="IOLHR_TILE") ? tx * NUM_GRID_X + 3 : tx * NUM_GRID_X;
    sy = (loc_device==0) ? rx * NUM_TILES_REGION * NUM_GRID_Y : (rx * NUM_TILES_REGION + MID_TILE_REGION + 1) * NUM_GRID_Y;

    string data,datan;

    if(rx==1)
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R1" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R1" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R1" :
                           (tx<tx_l3)   ? "DATA_L_3_R1" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R1" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R1" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R1" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R1" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R1" 
                                        : "DATA_R_6_R1";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R1" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R1" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R1" :
                            (tx<tx_l3)   ? "DATAN_L_3_R1" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R1" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R1" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R1" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R1" : 
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R1" 
                                         : "DATAN_R_6_R1";
    }
    else
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R2" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R2" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R2" :
                           (tx<tx_l3)   ? "DATA_L_3_R2" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R2" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R2" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R2" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R2" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R2" 
                                        : "DATA_R_6_R2";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R2" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R2" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R2" :
                            (tx<tx_l3)   ? "DATAN_L_3_R2" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R2" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R2" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R2" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R2" :
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R2" 
                                         : "DATAN_R_6_R2";
    }

    if(loc_device==0)
    {
        connect
        (
                <pin DATA  of <device *strVar @ [sx,sy]>>                => <wire *data[63:0] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy]>>                => <wire *datan[63:0] of <device *cram_ctrl @ [sx_bl,sy_bl]>>, 
 
                <pin DATA  of <device *strVar @ [sx,sy+1*NUM_GRID_Y]>>   => <wire *data[127:64] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+1*NUM_GRID_Y]>>   => <wire *datan[127:64] of <device *cram_ctrl @ [sx_bl,sy_bl]>>, 
 
                <pin DATA  of <device *strVar @ [sx,sy+2*NUM_GRID_Y]>>   => <wire *data[191:128] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+2*NUM_GRID_Y]>>   => <wire *datan[191:128] of <device *cram_ctrl @ [sx_bl,sy_bl]>>, 
 
                <pin DATA  of <device *strVar @ [sx,sy+3*NUM_GRID_Y]>>   => <wire *data[255:192] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+3*NUM_GRID_Y]>>   => <wire *datan[255:192] of <device *cram_ctrl @ [sx_bl,sy_bl]>>, 
 
                <pin DATA  of <device *strVar @ [sx,sy+4*NUM_GRID_Y]>>   => <wire *data[319:256] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+4*NUM_GRID_Y]>>   => <wire *datan[319:256] of <device *cram_ctrl @ [sx_bl,sy_bl]>>, 
 
                <pin DATA  of <device *strVar @ [sx,sy+5*NUM_GRID_Y]>>   => <wire *data[383:320] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+5*NUM_GRID_Y]>>   => <wire *datan[383:320] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+6*NUM_GRID_Y]>>   => <wire *data[447:384] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+6*NUM_GRID_Y]>>   => <wire *datan[447:384] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+7*NUM_GRID_Y]>>   => <wire *data[511:448] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+7*NUM_GRID_Y]>>   => <wire *datan[511:448] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+8*NUM_GRID_Y]>>   => <wire *data[575:512] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+8*NUM_GRID_Y]>>   => <wire *datan[575:512] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+9*NUM_GRID_Y]>>   => <wire *data[639:576] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+9*NUM_GRID_Y]>>   => <wire *datan[639:576] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+10*NUM_GRID_Y]>>   => <wire *data[703:640] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+10*NUM_GRID_Y]>>   => <wire *datan[703:640] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+11*NUM_GRID_Y]>>   => <wire *data[767:704] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+11*NUM_GRID_Y]>>   => <wire *datan[767:704] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+12*NUM_GRID_Y]>>   => <wire *data[831:768] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+12*NUM_GRID_Y]>>   => <wire *datan[831:768] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+13*NUM_GRID_Y]>>   => <wire *data[895:832] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+13*NUM_GRID_Y]>>   => <wire *datan[895:832] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+14*NUM_GRID_Y]>>   => <wire *data[959:896] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+14*NUM_GRID_Y]>>   => <wire *datan[959:896] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+15*NUM_GRID_Y]>>   => <wire *data[1023:960] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+15*NUM_GRID_Y]>>   => <wire *datan[1023:960] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+16*NUM_GRID_Y]>>   => <wire *data[1087:1024] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+16*NUM_GRID_Y]>>   => <wire *datan[1087:1024] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+17*NUM_GRID_Y]>>   => <wire *data[1151:1088] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+17*NUM_GRID_Y]>>   => <wire *datan[1151:1088] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+18*NUM_GRID_Y]>>   => <wire *data[1215:1152] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+18*NUM_GRID_Y]>>   => <wire *datan[1215:1152] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+19*NUM_GRID_Y]>>   => <wire *data[1279:1216] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+19*NUM_GRID_Y]>>   => <wire *datan[1279:1216] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+20*NUM_GRID_Y]>>   => <wire *data[1343:1280] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+20*NUM_GRID_Y]>>   => <wire *datan[1343:1280] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+21*NUM_GRID_Y]>>   => <wire *data[1407:1344] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+21*NUM_GRID_Y]>>   => <wire *datan[1407:1344] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+22*NUM_GRID_Y]>>   => <wire *data[1471:1408] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+22*NUM_GRID_Y]>>   => <wire *datan[1471:1408] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+23*NUM_GRID_Y]>>   => <wire *data[1535:1472] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+23*NUM_GRID_Y]>>   => <wire *datan[1535:1472] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+24*NUM_GRID_Y]>>   => <wire *data[1599:1536] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+24*NUM_GRID_Y]>>   => <wire *datan[1599:1536] of <device *cram_ctrl @ [sx_bl,sy_bl]>>  
 
            );
    }
    else
    {
        connect
            (
                <pin DATA  of <device *strVar @ [sx,sy+0*NUM_GRID_Y]>>   => <wire *data[1695:1632] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+0*NUM_GRID_Y]>>   => <wire *datan[1695:1632] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+1*NUM_GRID_Y]>>   => <wire *data[1759:1696] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+1*NUM_GRID_Y]>>   => <wire *datan[1759:1696] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+2*NUM_GRID_Y]>>   => <wire *data[1823:1760] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+2*NUM_GRID_Y]>>   => <wire *datan[1823:1760] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+3*NUM_GRID_Y]>>   => <wire *data[1887:1824] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+3*NUM_GRID_Y]>>   => <wire *datan[1887:1824] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+4*NUM_GRID_Y]>>   => <wire *data[1951:1888] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+4*NUM_GRID_Y]>>   => <wire *datan[1951:1888] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+5*NUM_GRID_Y]>>   => <wire *data[2015:1952] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+5*NUM_GRID_Y]>>   => <wire *datan[2015:1952] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+6*NUM_GRID_Y]>>   => <wire *data[2079:2016] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+6*NUM_GRID_Y]>>   => <wire *datan[2079:2016] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+7*NUM_GRID_Y]>>   => <wire *data[2143:2080] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+7*NUM_GRID_Y]>>   => <wire *datan[2143:2080] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+8*NUM_GRID_Y]>>   => <wire *data[2207:2144] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+8*NUM_GRID_Y]>>   => <wire *datan[2207:2144] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+9*NUM_GRID_Y]>>   => <wire *data[2271:2208] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+9*NUM_GRID_Y]>>   => <wire *datan[2271:2208] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+10*NUM_GRID_Y]>>  => <wire *data[2335:2272] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+10*NUM_GRID_Y]>>  => <wire *datan[2335:2272] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+11*NUM_GRID_Y]>>  => <wire *data[2399:2336] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+11*NUM_GRID_Y]>>  => <wire *datan[2399:2336] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+12*NUM_GRID_Y]>>  => <wire *data[2463:2400] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+12*NUM_GRID_Y]>>  => <wire *datan[2463:2400] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+13*NUM_GRID_Y]>>  => <wire *data[2527:2464] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+13*NUM_GRID_Y]>>  => <wire *datan[2527:2464] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+14*NUM_GRID_Y]>>  => <wire *data[2591:2528] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+14*NUM_GRID_Y]>>  => <wire *datan[2591:2528] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+15*NUM_GRID_Y]>>  => <wire *data[2655:2592] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+15*NUM_GRID_Y]>>  => <wire *datan[2655:2592] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+16*NUM_GRID_Y]>>  => <wire *data[2719:2656] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+16*NUM_GRID_Y]>>  => <wire *datan[2719:2656] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+17*NUM_GRID_Y]>>  => <wire *data[2783:2720] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+17*NUM_GRID_Y]>>  => <wire *datan[2783:2720] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+18*NUM_GRID_Y]>>  => <wire *data[2847:2784] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+18*NUM_GRID_Y]>>  => <wire *datan[2847:2784] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+19*NUM_GRID_Y]>>  => <wire *data[2911:2848] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+19*NUM_GRID_Y]>>  => <wire *datan[2911:2848] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+20*NUM_GRID_Y]>>  => <wire *data[2975:2912] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+20*NUM_GRID_Y]>>  => <wire *datan[2975:2912] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+21*NUM_GRID_Y]>>  => <wire *data[3039:2976] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+21*NUM_GRID_Y]>>  => <wire *datan[3039:2976] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+22*NUM_GRID_Y]>>  => <wire *data[3103:3040] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+22*NUM_GRID_Y]>>  => <wire *datan[3103:3040] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+23*NUM_GRID_Y]>>  => <wire *data[3167:3104] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+23*NUM_GRID_Y]>>  => <wire *datan[3167:3104] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

                <pin DATA  of <device *strVar @ [sx,sy+24*NUM_GRID_Y]>>  => <wire *data[3231:3168] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
                <pin DATAN of <device *strVar @ [sx,sy+24*NUM_GRID_Y]>>  => <wire *datan[3231:3168] of <device *cram_ctrl @ [sx_bl,sy_bl]>>  

            );
    }

};// end of function connect_core_bl_input
/********************************************************************************
********************************************************************************/
function connect_ckeb_bl_input
(
    unsigned int rx,
    unsigned int tx,
    unsigned int tx_bl,
    unsigned int ty_bl,
    unsigned int tx_l1,
    unsigned int tx_l2,
    unsigned int tx_l3,
    unsigned int tx_r1,
    unsigned int tx_r2,
    unsigned int tx_r3,
    unsigned int tx_r4,
    unsigned int tx_r5,
    unsigned int tx_r6,

    string device_bl,
    string tile_name
)
{
    string ckeb = tile_name;
    string cram_ctrl = device_bl;

    int sx_bl = tx_bl * NUM_GRID_X;
    int sy_bl = ty_bl * NUM_GRID_Y;
    int sx,sy;
    sx = ((tile_name == "CKEB_TILE") || (tile_name == "IOCK_TILE")) ? tx * NUM_GRID_X : tx * NUM_GRID_X + 3;
    sy = (rx * NUM_TILES_REGION + MID_TILE_REGION) * NUM_GRID_Y ; 

    string data,datan;

    if(rx==1)
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R1" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R1" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R1" :
                           (tx<tx_l3)   ? "DATA_L_3_R1" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R1" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R1" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R1" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R1" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R1" 
                                        : "DATA_R_6_R1";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R1" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R1" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R1" :
                            (tx<tx_l3)   ? "DATAN_L_3_R1" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R1" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R1" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R1" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R1" : 
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R1" 
                                         : "DATAN_R_6_R1";
    }
    else
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R2" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R2" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R2" :
                           (tx<tx_l3)   ? "DATA_L_3_R2" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R2" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R2" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R2" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R2" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R2" 
                                        : "DATA_R_6_R2";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R2" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R2" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R2" :
                            (tx<tx_l3)   ? "DATAN_L_3_R2" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R2" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R2" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R2" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R2" :
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R2" 
                                         : "DATAN_R_6_R2";
    }

    connect
        (
            <pin DATA of <device *ckeb @ [sx,sy]>>   => <wire *data[1631:1600] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
            <pin DATAN of <device *ckeb @ [sx,sy]>>  => <wire *datan[1631:1600] of <device *cram_ctrl @ [sx_bl,sy_bl]>>  
        );

};//end of function connect_ckeb_bl_input
/********************************************************************************
********************************************************************************/
function connect_uscm_bl_input
(
    unsigned int rx,
    unsigned int tx,
    unsigned int tx_bl,
    unsigned int ty_bl,
    unsigned int tx_l1,
    unsigned int tx_l2,
    unsigned int tx_l3,
    unsigned int tx_r1,
    unsigned int tx_r2,
    unsigned int tx_r3,
    unsigned int tx_r4,
    unsigned int tx_r5,
    unsigned int tx_r6,

    string device_bl,
    string tile_name
)
{
    string uscm = tile_name;
    string cram_ctrl = device_bl;

    int sx_bl = tx_bl * NUM_GRID_X;
    int sy_bl = ty_bl * NUM_GRID_Y;
    int sx,sy;
    sx = tx * NUM_GRID_X + 3;
    sy = rx * NUM_TILES_REGION * NUM_GRID_Y ; 

    string data, datan, data1, datan1;

    if(rx==1)
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R1" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R1" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R1" :
                           (tx<tx_l3)   ? "DATA_L_3_R1" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R1" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R1" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R1" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R1" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R1" 
                                        : "DATA_R_6_R1";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R1" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R1" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R1" :
                            (tx<tx_l3)   ? "DATAN_L_3_R1" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R1" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R1" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R1" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R1" : 
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R1" 
                                         : "DATAN_R_6_R1";

      data1 = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R2" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R2" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R2" :
                            (tx<tx_l3)   ? "DATA_L_3_R2" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R2" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R2" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R2" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R2" :
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R2" 
                                         : "DATA_R_6_R2";

      datan1 = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R2" :
               ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R2" :
               ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R2" :
                             (tx<tx_l3)   ? "DATAN_L_3_R2" :
               ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R2" :
               ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R2" :
               ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R2" :
               ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R2" :
               ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R2" 
                                          : "DATAN_R_6_R2";
    }
    else
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R2" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R2" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R2" :
                           (tx<tx_l3)   ? "DATA_L_3_R2" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R2" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R2" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R2" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R2" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R2" 
                                        : "DATA_R_6_R2";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R2" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R2" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R2" :
                            (tx<tx_l3)   ? "DATAN_L_3_R2" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R2" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R2" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R2" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R2" :
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R2" 
                                         : "DATAN_R_6_R2";

      data1 = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R1" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R1" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R1" :
                            (tx<tx_l3)   ? "DATA_L_3_R1" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R1" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R1" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R1" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R1" :
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R1" 
                                        : "DATA_R_6_R1";

      datan1 = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R1" :
               ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R1" :
               ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R1" :
                             (tx<tx_l3)   ? "DATAN_L_3_R1" :
               ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R1" :
               ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R1" :
               ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R1" :
               ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R1" : 
               ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R1" 
                                         : "DATAN_R_6_R1";

    }

    connect
        (
            <pin DATA[3231:0]  of <device *uscm @ [sx,sy]>>   => <wire *data   of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
            <pin DATAN[3231:0] of <device *uscm @ [sx,sy]>>   => <wire *datan  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  

            <pin DATA[6463:3232]  of <device *uscm @ [sx,sy]>>   => <wire *data1  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
            <pin DATAN[6463:3232] of <device *uscm @ [sx,sy]>>   => <wire *datan1 of <device *cram_ctrl @ [sx_bl,sy_bl]>>  

        );
};//end of function connect_uscm_bl_input
/********************************************************************************
********************************************************************************/
function connect_adc_bl_input
(
    unsigned int rx,        //rx is defined to be equal to LOC_ADC_REGION
    unsigned int tx,
    unsigned int tx_bl,
    unsigned int ty_bl,
    unsigned int tx_l1,
    unsigned int tx_l2,
    unsigned int tx_l3,
    unsigned int tx_r1,
    unsigned int tx_r2,
    unsigned int tx_r3,
    unsigned int tx_r4,
    unsigned int tx_r5,
    unsigned int tx_r6,

    string device_bl,
    string device_name
)
{
    int sx_bl = tx_bl * NUM_GRID_X;
    int sy_bl = ty_bl * NUM_GRID_Y;
    int sx , sy;
    sx = tx * NUM_GRID_X + 3;
    sy = (device_name != "CCS_TILE") ? rx * NUM_TILES_REGION * NUM_GRID_Y : (rx - 1) * NUM_TILES_REGION * NUM_GRID_Y;

    string strVar = device_name;
    string cram_ctrl = device_bl;

    string data,datan;
    if(rx==1)
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R1" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R1" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R1" :
                           (tx<tx_l3)   ? "DATA_L_3_R1" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R1" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R1" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R1" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R1" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R1" 
                                        : "DATA_R_6_R1";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R1" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R1" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R1" :
                            (tx<tx_l3)   ? "DATAN_L_3_R1" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R1" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R1" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R1" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R1" : 
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R1" 
                                         : "DATAN_R_6_R1";
    }
    else
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R2" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R2" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R2" :
                           (tx<tx_l3)   ? "DATA_L_3_R2" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R2" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R2" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R2" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R2" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R2" 
                                        : "DATA_R_6_R2";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R2" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R2" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R2" :
                            (tx<tx_l3)   ? "DATAN_L_3_R2" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R2" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R2" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R2" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R2" :
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R2" 
                                         : "DATAN_R_6_R2";
    }

    if(device_name=="CCS_TILE")
    {
        connect
            (
                <pin DATA_1  of <device *strVar @[sx,sy]>>   => <wire *data[1599:0] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
                <pin DATAN_1 of <device *strVar @[sx,sy]>>  => <wire *datan[1599:0] of <device *cram_ctrl @ [sx_bl,sy_bl]>>
            );
    }
    else    
    {
        connect
            (
                <pin DATA  of <device *strVar @[sx,sy]>>   => <wire *data[3231:1600] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
                <pin DATAN of <device *strVar @[sx,sy]>>  => <wire *datan[3231:1600] of <device *cram_ctrl @ [sx_bl,sy_bl]>>
            );

    }
};//end of function connect_adc_bl_input
/********************************************************************************
********************************************************************************/
function connect_region_bl_input
(
    unsigned int rx,
    unsigned int tx,
    unsigned int tx_bl,
    unsigned int ty_bl,
    unsigned int tx_l1,
    unsigned int tx_l2,
    unsigned int tx_l3,
    unsigned int tx_r1,
    unsigned int tx_r2,
    unsigned int tx_r3,
    unsigned int tx_r4,
    unsigned int tx_r5,
    unsigned int tx_r6,

    string device_bl,
    string tile_name
)
{
    int sx_bl = tx_bl * NUM_GRID_X;
    int sy_bl = ty_bl * NUM_GRID_Y;

    int sx = ((tile_name=="HSSTLP_TILE")||(tile_name=="CCS_TILE")) ? tx * NUM_GRID_X + 3 :
             (tile_name=="CRAM_CTRL_WRENHAN_TILE") ? tx * NUM_GRID_X + 2 : tx * NUM_GRID_X;

    int sy =(tile_name=="CRAM_CTRL_WRENHAN_TILE") ? (rx * NUM_TILES_REGION + MID_TILE_REGION) * NUM_GRID_Y : rx * NUM_TILES_REGION * NUM_GRID_Y;

    string cram_ctrl = device_bl;
    string tile_r = tile_name;

    string data, datan;
    if(rx==1)
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R1" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R1" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R1" :
                           (tx<tx_l3)   ? "DATA_L_3_R1" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R1" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R1" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R1" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R1" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R1" 
                                        : "DATA_R_6_R1";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R1" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R1" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R1" :
                            (tx<tx_l3)   ? "DATAN_L_3_R1" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R1" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R1" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R1" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R1" : 
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R1" 
                                         : "DATAN_R_6_R1";
    }
    else
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R2" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R2" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R2" :
                           (tx<tx_l3)   ? "DATA_L_3_R2" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R2" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R2" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R2" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R2" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R2" 
                                        : "DATA_R_6_R2";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R2" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R2" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R2" :
                            (tx<tx_l3)   ? "DATAN_L_3_R2" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R2" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R2" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R2" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R2" :
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R2" 
                                         : "DATAN_R_6_R2";
    }


    connect
        (
            <pin DATA of <device *tile_r @ [sx,sy]>>   => <wire *data of <device *cram_ctrl @ [sx_bl,sy_bl]>>,  
            <pin DATAN of <device *tile_r @ [sx,sy]>>   => <wire *datan of <device *cram_ctrl @ [sx_bl,sy_bl]>> 
        );

};//end of function connect_region_bl_input
/********************************************************************************
********************************************************************************/
function connect_half_region_bl_input
(
    unsigned int rx,
    unsigned int tx,
    unsigned int tx_bl,
    unsigned int ty_bl,
    unsigned int tx_l1,
    unsigned int tx_l2,
    unsigned int tx_l3,
    unsigned int tx_r1,
    unsigned int tx_r2,
    unsigned int tx_r3,
    unsigned int tx_r4,
    unsigned int tx_r5,
    unsigned int tx_r6,
    unsigned int loc_device,   //loc_device = 0,bottom half region;loc_device = 1, top half region

    string device_bl,
    string tile_name
)
{
    string tile_hr = tile_name;
    string cram_ctrl = device_bl;

    int sx_bl = tx_bl * NUM_GRID_X;
    int sy_bl = ty_bl * NUM_GRID_Y;
    int sx,sy;
    sx = (tile_name=="PCIE_TILE") ? tx * NUM_GRID_X + 3 : tx * NUM_GRID_X;
    sy = (loc_device==0) ? rx * NUM_TILES_REGION * NUM_GRID_Y : (rx * NUM_TILES_REGION + MID_TILE_REGION + 1) * NUM_GRID_Y;

    string data,datan;
    if(rx==1)
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R1" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R1" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R1" :
                           (tx<tx_l3)   ? "DATA_L_3_R1" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R1" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R1" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R1" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R1" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R1" 
                                        : "DATA_R_6_R1";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R1" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R1" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R1" :
                            (tx<tx_l3)   ? "DATAN_L_3_R1" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R1" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R1" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R1" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R1" : 
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R1" 
                                         : "DATAN_R_6_R1";
    }
    else
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R2" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R2" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R2" :
                           (tx<tx_l3)   ? "DATA_L_3_R2" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R2" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R2" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R2" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R2" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R2" 
                                        : "DATA_R_6_R2";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R2" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R2" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R2" :
                            (tx<tx_l3)   ? "DATAN_L_3_R2" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R2" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R2" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R2" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R2" :
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R2" 
                                         : "DATAN_R_6_R2";
    }

      if(loc_device==0)
      {
        connect
          (
            <pin DATA  of <device *tile_hr @[sx,sy]>>   => <wire *data[1599:0] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
            <pin DATAN of <device *tile_hr @[sx,sy]>>   => <wire *datan[1599:0] of <device *cram_ctrl @ [sx_bl,sy_bl]>>
          );
      }
      else
      {
        connect
          (
            <pin DATA  of <device *tile_hr @[sx,sy]>>   => <wire *data[3231:1632] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
            <pin DATAN of <device *tile_hr @[sx,sy]>>   => <wire *datan[3231:1632] of <device *cram_ctrl @ [sx_bl,sy_bl]>>
          );
      }

};//end of function connect_half_region_bl_input
/********************************************************************************
********************************************************************************/
function connect_wrenhan1_bl_input
(
    unsigned int rx,
    unsigned int tx,
    unsigned int tx_bl,
    unsigned int ty_bl,
    unsigned int tx_l1,
    unsigned int tx_l2,
    unsigned int tx_l3,
    unsigned int tx_r1,
    unsigned int tx_r2,
    unsigned int tx_r3,
    unsigned int tx_r4,
    unsigned int tx_r5,
    unsigned int tx_r6,

    string device_bl,
    string tile_name
)
{
    int sx_bl = tx_bl * NUM_GRID_X;
    int sy_bl = ty_bl * NUM_GRID_Y;

    int sx,sy;
    sx = tx * NUM_GRID_X + 2;
    sy = (rx * NUM_TILES_REGION + MID_TILE_REGION) * NUM_GRID_Y;

    string strVar = tile_name;
    string cram_ctrl = device_bl;

    string data,datan;
    if(rx==1)
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R1" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R1" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R1" :
                           (tx<tx_l3)   ? "DATA_L_3_R1" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R1" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R1" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R1" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R1" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R1" 
                                        : "DATA_R_6_R1";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R1" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R1" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R1" :
                            (tx<tx_l3)   ? "DATAN_L_3_R1" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R1" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R1" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R1" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R1" : 
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R1" 
                                         : "DATAN_R_6_R1";
    }
    else
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R2" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R2" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R2" :
                           (tx<tx_l3)   ? "DATA_L_3_R2" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R2" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R2" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R2" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R2" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R2" 
                                        : "DATA_R_6_R2";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R2" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R2" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R2" :
                            (tx<tx_l3)   ? "DATAN_L_3_R2" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R2" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R2" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R2" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R2" :
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R2" 
                                         : "DATAN_R_6_R2";
    }

    connect
      (
        <pin DATA  of <device *strVar @[sx,sy]>>  => <wire *data[3231:1600] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
        <pin DATAN of <device *strVar @[sx,sy]>>  => <wire *datan[3231:1600] of <device *cram_ctrl @ [sx_bl,sy_bl]>>
      );

};//end of function connect_wrenhan1_bl_input
/********************************************************************************
********************************************************************************/
function connect_drm_apm_bl_input
(
    unsigned int rx,
    unsigned int tx,
    unsigned int tx_bl,
    unsigned int ty_bl,
    unsigned int tx_l1,
    unsigned int tx_l2,
    unsigned int tx_l3,
    unsigned int tx_r1,
    unsigned int tx_r2,
    unsigned int tx_r3,
    unsigned int tx_r4,
    unsigned int tx_r5,
    unsigned int tx_r6,
    unsigned int loc_device,     //loc_device=0,bottom half region;loc_device=1,top half region

    string device_bl,
    string device_name
)
{
    int sx_bl = tx_bl * NUM_GRID_X;
    int sy_bl = ty_bl * NUM_GRID_Y;

    int sx,sy;
    sx = tx * NUM_GRID_X + 3;
    sy = (loc_device==0) ? (rx * NUM_TILES_REGION) * NUM_GRID_Y 
                         : (rx * NUM_TILES_REGION + MID_TILE_REGION + 1) * NUM_GRID_Y;

    string strVar = device_name;
    string cram_ctrl = device_bl;

    string data,datan;
    if(rx==1)
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R1" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R1" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R1" :
                           (tx<tx_l3)   ? "DATA_L_3_R1" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R1" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R1" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R1" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R1" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R1" 
                                        : "DATA_R_6_R1";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R1" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R1" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R1" :
                            (tx<tx_l3)   ? "DATAN_L_3_R1" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R1" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R1" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R1" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R1" : 
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R1" 
                                         : "DATAN_R_6_R1";
    }
    else
    {
      data = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATA_R2" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATA_L_1_R2" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATA_L_2_R2" :
                           (tx<tx_l3)   ? "DATA_L_3_R2" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATA_R_1_R2" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATA_R_2_R2" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATA_R_3_R2" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATA_R_4_R2" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATA_R_5_R2" 
                                        : "DATA_R_6_R2";

      datan = ((tx>=tx_l1)&&(tx<=tx_r1)) ? "DATAN_R2" :
              ((tx>=tx_l2)&&(tx<tx_l1))  ? "DATAN_L_1_R2" :
              ((tx>=tx_l3)&&(tx<tx_l2))  ? "DATAN_L_2_R2" :
                            (tx<tx_l3)   ? "DATAN_L_3_R2" :
              ((tx>tx_r1)&&(tx<=tx_r2))  ? "DATAN_R_1_R2" :
              ((tx>tx_r2)&&(tx<=tx_r3))  ? "DATAN_R_2_R2" :
              ((tx>tx_r3)&&(tx<=tx_r4))  ? "DATAN_R_3_R2" :
              ((tx>tx_r4)&&(tx<=tx_r5))  ? "DATAN_R_4_R2" :
              ((tx>tx_r5)&&(tx<=tx_r6))  ? "DATAN_R_5_R2" 
                                         : "DATAN_R_6_R2";
    }


    if(loc_device==0)
    {
      connect
        (   
          <pin DATA  of <device *strVar @ [sx,sy]>>               => <wire *data[319:0]  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
          <pin DATAN of <device *strVar @ [sx,sy]>>               => <wire *datan[319:0] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
       
          <pin DATA  of <device *strVar @ [sx,sy+5*NUM_GRID_Y]>>  => <wire *data[639:320]  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
          <pin DATAN of <device *strVar @ [sx,sy+5*NUM_GRID_Y]>>  => <wire *datan[639:320] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
  
          <pin DATA  of <device *strVar @ [sx,sy+10*NUM_GRID_Y]>> => <wire *data[959:640]  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
          <pin DATAN of <device *strVar @ [sx,sy+10*NUM_GRID_Y]>> => <wire *datan[959:640] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
  
          <pin DATA  of <device *strVar @ [sx,sy+15*NUM_GRID_Y]>> => <wire *data[1279:960]  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
          <pin DATAN of <device *strVar @ [sx,sy+15*NUM_GRID_Y]>> => <wire *datan[1279:960] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,

          <pin DATA  of <device *strVar @ [sx,sy+20*NUM_GRID_Y]>> => <wire *data[1599:1280]  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
          <pin DATAN of <device *strVar @ [sx,sy+20*NUM_GRID_Y]>> => <wire *datan[1599:1280] of <device *cram_ctrl @ [sx_bl,sy_bl]>>
        );
    }
    else
    {
      connect
        (   
          <pin DATA  of <device *strVar @ [sx,sy]>>               => <wire *data[1951:1632]  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
          <pin DATAN of <device *strVar @ [sx,sy]>>               => <wire *datan[1951:1632] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
  
          <pin DATA  of <device *strVar @ [sx,sy+5*NUM_GRID_Y]>>  => <wire *data[2271:1952]  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
          <pin DATAN of <device *strVar @ [sx,sy+5*NUM_GRID_Y]>>  => <wire *datan[2271:1952] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
   
          <pin DATA  of <device *strVar @ [sx,sy+10*NUM_GRID_Y]>> => <wire *data[2591:2272]  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
          <pin DATAN of <device *strVar @ [sx,sy+10*NUM_GRID_Y]>> => <wire *datan[2591:2272] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
  
          <pin DATA  of <device *strVar @ [sx,sy+15*NUM_GRID_Y]>> => <wire *data[2911:2592]  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
          <pin DATAN of <device *strVar @ [sx,sy+15*NUM_GRID_Y]>> => <wire *datan[2911:2592] of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
  
          <pin DATA  of <device *strVar @ [sx,sy+20*NUM_GRID_Y]>> => <wire *data[3231:2912]  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
          <pin DATAN of <device *strVar @ [sx,sy+20*NUM_GRID_Y]>> => <wire *datan[3231:2912] of <device *cram_ctrl @ [sx_bl,sy_bl]>>  
        );
    }



};//end of function connect_drm_apm_bl_input
/***********************************************************************************************************************
                                functions for ADDR
************************************************************************************************************************/
function connect_srb_wl_input
(
    unsigned int rx,
    unsigned int ty,
    unsigned int tx_wl,
    unsigned int ty_wl,

    string device_wl
)
{
    int sx_wl = tx_wl * NUM_GRID_X;
    int sy_wl = ty_wl * NUM_GRID_Y;

    int sx,sy;
    sy = (rx * NUM_TILES_REGION + ty) * NUM_GRID_Y;
    int mid_tile = MID_TILE_REGION;
    string addr_u = (rx==1) ? "ADDR_UP_R1" : "ADDR_UP_R2";
    string addr_d = (rx==1) ? "ADDR_DN_R1" : "ADDR_DN_R2";

    string strVar = "SRB_TILE";
    string cram_ctrl = device_wl;

        connect
        (
            <pin ADDR of <device *strVar @ [2*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[27:2] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                    : <wire *addr_u[27:2] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
             
            <pin ADDR of <device *strVar @ [6*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[169:144] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                    : <wire *addr_u[169:144] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
             
            <pin ADDR of <device *strVar @ [10*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[305:280] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                     : <wire *addr_u[305:280] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                                              
            <pin ADDR of <device *strVar @ [23*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[369:344] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                     : <wire *addr_u[369:344] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                                              
            <pin ADDR of <device *strVar @ [25*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[433:408] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                     : <wire *addr_u[433:408] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                                              
            <pin ADDR of <device *strVar @ [28*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[533:508] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                     : <wire *addr_u[533:508] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                                              
            <pin ADDR of <device *strVar @ [33*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[705:680] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                     : <wire *addr_u[705:680] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                                              
            <pin ADDR of <device *strVar @ [44*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[1085:1060] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                     : <wire *addr_u[1085:1060] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
        );
        if((rx==1)&&(ty<mid_tile))
        {
            connect
            (
                <pin ADDR of <device *strVar @ [36*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[805:780] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                         : <wire *addr_u[805:780] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,

                <pin ADDR of <device *strVar @ [39*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[905:880] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                         : <wire *addr_u[905:880] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
            );
        }
        else
        {
            connect
            (
                <pin ADDR of <device *strVar @ [37*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[841:816] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                         : <wire *addr_u[841:816] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
            );
        }

};//end of function connect_srb_wl_input
/********************************************************************************
********************************************************************************/
function connect_clma_wl_input
(
    unsigned int rx,
    unsigned int ty,
    unsigned int tx_wl,
    unsigned int ty_wl,

    string device_wl
)
{
    int sx_wl = tx_wl * NUM_GRID_X;
    int sy_wl = ty_wl * NUM_GRID_Y;

    int sy;
    sy = (rx * NUM_TILES_REGION + ty) * NUM_GRID_Y;

    int mid_tile = MID_TILE_REGION;
    string addr_u = (rx==1) ? "ADDR_UP_R1" : "ADDR_UP_R2";
    string addr_d = (rx==1) ? "ADDR_DN_R1" : "ADDR_DN_R2";

    string cram_ctrl = device_wl;

    connect
    (
         <pin ADDR of <device CLMA_TILE @ [3*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[71:36] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                   : <wire *addr_u[71:36] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
         
         <pin ADDR of <device CLMA_TILE @ [7*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[207:172] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                   : <wire *addr_u[207:172] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
         
         <pin ADDR of <device CLMA_TILE @ [11*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[343:308] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                    : <wire *addr_u[343:308] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
         
         <pin ADDR of <device CLMA_TILE @ [27*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[507:472] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                    : <wire *addr_u[507:472] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
         
         <pin ADDR of <device CLMA_TILE @ [30*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[607:572] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                    : <wire *addr_u[607:572] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
         
         <pin ADDR of <device CLMA_TILE @ [34*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[743:708] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                    : <wire *addr_u[743:708] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
         
         <pin ADDR of <device CLMA_TILE @ [43*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[1059:1024] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                    : <wire *addr_u[1059:1024] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
    );
    if(((rx==1)&&(ty>mid_tile))||(rx==0))
    {
        connect
        (
             <pin ADDR of <device CLMA_TILE @ [36*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[815:780] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                        : <wire *addr_u[815:780] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
             
             <pin ADDR of <device CLMA_TILE @ [39*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[915:880] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                        : <wire *addr_u[915:880] of <device *cram_ctrl @ [sx_wl,sy_wl]>>

        );
    }
};//end of function connect_clma_wl_input
/********************************************************************************
********************************************************************************/
function connect_clms_wl_input
(
    unsigned int rx,
    unsigned int ty,
    unsigned int tx_wl,
    unsigned int ty_wl,

    string device_wl
)
{
    int sx_wl = tx_wl * NUM_GRID_X;
    int sy_wl = ty_wl * NUM_GRID_Y;

    int sy;
    sy = (rx * NUM_TILES_REGION + ty) * NUM_GRID_Y;

    int mid_tile = MID_TILE_REGION;
    string addr_u = (rx==1) ? "ADDR_UP_R1" : "ADDR_UP_R2";
    string addr_d = (rx==1) ? "ADDR_DN_R1" : "ADDR_DN_R2";

    string read0_u = (rx==1) ? "READ2T0_UP_R1" : "READ2T0_UP_R2";
    string read0_d = (rx==1) ? "READ2T0_DN_R1" : "READ2T0_DN_R2";
    string read1_u = (rx==1) ? "READ2T1_UP_R1" : "READ2T1_UP_R2";
    string read1_d = (rx==1) ? "READ2T1_DN_R1" : "READ2T1_DN_R2";
    string maskn_d = (rx==1) ? "MASK_N_DN_R1"  : "MASK_N_DN_R2";
    string maskn_u = (rx==1) ? "MASK_N_UP_R1"  : "MASK_N_UP_R2";

    string cram_ctrl = device_wl;

    connect
    (
       <pin ADDR of <device CLMS_TILE @ [4*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[107:72] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                 : <wire *addr_u[107:72] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
       <pin ADDR of <device CLMS_TILE @ [5*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[143:108] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                 : <wire *addr_u[143:108] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
       <pin ADDR of <device CLMS_TILE @ [8*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[243:208] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                 : <wire *addr_u[243:208] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
       <pin ADDR of <device CLMS_TILE @ [9*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[279:244] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                 : <wire *addr_u[279:244] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
       <pin ADDR of <device CLMS_TILE @ [24*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[407:372] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                  : <wire *addr_u[407:372] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
       <pin ADDR of <device CLMS_TILE @ [26*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[471:436] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                  : <wire *addr_u[471:436] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
       <pin ADDR of <device CLMS_TILE @ [29*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[571:536] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                  : <wire *addr_u[571:536] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
       <pin ADDR of <device CLMS_TILE @ [31*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[643:608] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                  : <wire *addr_u[643:608] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
       <pin ADDR of <device CLMS_TILE @ [32*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[679:644] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                  : <wire *addr_u[679:644] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
       <pin ADDR of <device CLMS_TILE @ [35*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[779:744] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                  : <wire *addr_u[779:744] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
       <pin ADDR of <device CLMS_TILE @ [40*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[951:916] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                  : <wire *addr_u[951:916] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
       <pin ADDR of <device CLMS_TILE @ [41*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[987:952] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                  : <wire *addr_u[987:952] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
       <pin ADDR of <device CLMS_TILE @ [42*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[1023:988] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                  : <wire *addr_u[1023:988] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
       
       
       <pin READ[0] of <device CLMS_TILE @ [4*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read0_d[0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *read0_u[0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[0] of <device CLMS_TILE @ [5*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read0_d[1] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *read0_u[1] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[0] of <device CLMS_TILE @ [8*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read0_d[2] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *read0_u[2] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[0] of <device CLMS_TILE @ [9*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read0_d[3] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *read0_u[3] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[0] of <device CLMS_TILE @ [24*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read0_d[4] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read0_u[4] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[0] of <device CLMS_TILE @ [26*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read0_d[5] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read0_u[5] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[0] of <device CLMS_TILE @ [29*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read0_d[6] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read0_u[6] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[0] of <device CLMS_TILE @ [31*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read0_d[7] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read0_u[7] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[0] of <device CLMS_TILE @ [32*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read0_d[8] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read0_u[8] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[0] of <device CLMS_TILE @ [35*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read0_d[9] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read0_u[9] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[0] of <device CLMS_TILE @ [40*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read0_d[11] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read0_u[11] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[0] of <device CLMS_TILE @ [41*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read0_d[12] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read0_u[12] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[0] of <device CLMS_TILE @ [42*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read0_d[13] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read0_u[13] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
       
       
       <pin READ[1] of <device CLMS_TILE @ [4*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read1_d[0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *read1_u[0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[1] of <device CLMS_TILE @ [5*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read1_d[1] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *read1_u[1] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[1] of <device CLMS_TILE @ [8*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read1_d[2] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *read1_u[2] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[1] of <device CLMS_TILE @ [9*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read1_d[3] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *read1_u[3] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[1] of <device CLMS_TILE @ [24*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read1_d[4] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read1_u[4] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[1] of <device CLMS_TILE @ [26*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read1_d[5] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read1_u[5] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[1] of <device CLMS_TILE @ [29*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read1_d[6] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read1_u[6] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[1] of <device CLMS_TILE @ [31*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read1_d[7] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read1_u[7] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[1] of <device CLMS_TILE @ [32*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read1_d[8] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read1_u[8] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[1] of <device CLMS_TILE @ [35*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read1_d[9] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read1_u[9] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                                                      
       <pin READ[1] of <device CLMS_TILE @ [40*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read1_d[11] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read1_u[11] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[1] of <device CLMS_TILE @ [41*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read1_d[12] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read1_u[12] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin READ[1] of <device CLMS_TILE @ [42*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read1_d[13] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                    : <wire *read1_u[13] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
       
       
       <pin MASK_N of <device CLMS_TILE @ [4*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *maskn_d[0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                  : <wire *maskn_u[0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                          
       <pin MASK_N of <device CLMS_TILE @ [5*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *maskn_d[1] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                  : <wire *maskn_u[1] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                          
       <pin MASK_N of <device CLMS_TILE @ [8*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *maskn_d[2] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                  : <wire *maskn_u[2] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                          
       <pin MASK_N of <device CLMS_TILE @ [9*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *maskn_d[3] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                  : <wire *maskn_u[3] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                          
       <pin MASK_N of <device CLMS_TILE @ [24*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *maskn_d[4] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *maskn_u[4] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin MASK_N of <device CLMS_TILE @ [26*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *maskn_d[5] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                 : <wire *maskn_u[5] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin MASK_N of <device CLMS_TILE @ [29*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *maskn_d[6] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *maskn_u[6] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin MASK_N of <device CLMS_TILE @ [31*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *maskn_d[7] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *maskn_u[7] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin MASK_N of <device CLMS_TILE @ [32*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *maskn_d[8] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *maskn_u[8] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin MASK_N of <device CLMS_TILE @ [35*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *maskn_d[9] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *maskn_u[9] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                                                      
       <pin MASK_N of <device CLMS_TILE @ [40*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *maskn_d[11] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *maskn_u[11] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin MASK_N of <device CLMS_TILE @ [41*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *maskn_d[12] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *maskn_u[12] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                           
       <pin MASK_N of <device CLMS_TILE @ [42*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *maskn_d[13] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *maskn_u[13] of <device *cram_ctrl @ [sx_wl,sy_wl]>>

    );

    if(((rx==1)&&(ty>mid_tile))||(rx==0))
    {
        connect
        (
           <pin ADDR    of <device CLMS_TILE @ [38*NUM_GRID_X,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[879:844] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                         : <wire *addr_u[879:844] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,

           <pin READ[0] of <device CLMS_TILE @ [38*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read0_d[10] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                        : <wire *read0_u[10] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,

           <pin READ[1] of <device CLMS_TILE @ [38*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *read1_d[10] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                        : <wire *read1_u[10] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,

           <pin MASK_N  of <device CLMS_TILE @ [38*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *maskn_d[10] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                        : <wire *maskn_u[10] of <device *cram_ctrl @ [sx_wl,sy_wl]>>

        );
    }



};//end of function connect_clms_wl_input
/********************************************************************************
********************************************************************************/
function connect_ckeb_wl_input
(
    unsigned int rx,
    unsigned int ty,
    unsigned int tx_wl,
    unsigned int ty_wl,

    string device_wl
)
{
    int sx_wl = tx_wl * NUM_GRID_X;
    int sy_wl = ty_wl * NUM_GRID_Y;

    string cram_ctrl = device_wl;
    string ckeb = "CKEB_TILE";
    string iock = "IOCK_TILE";
    string cramsl0 = "CRAMSL0_TILE";
    string cramsl1 = "CRAMSL1_TILE";
    string cramsl3 = "CRAMSL3_TILE";

    int sy;
    sy = (rx * NUM_TILES_REGION + ty) * NUM_GRID_Y;
    string addr_u = (rx==1) ? "ADDR_UP_R1" : "ADDR_UP_R2";
    string addr_d = (rx==1) ? "ADDR_DN_R1" : "ADDR_DN_R2";

    connect
        (
            <pin ADDR_UP[9:8]  of <device  *iock @ [1*NUM_GRID_X,sy]>>  => <wire *addr_u[1:0]   of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_DN[9:8]  of <device  *iock @ [1*NUM_GRID_X,sy]>>  => <wire *addr_d[1:0]   of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_UP[7:0]  of <device  *iock @ [1*NUM_GRID_X,sy]>>  => <wire *addr_u[35:28] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_DN[7:0]  of <device  *iock @ [1*NUM_GRID_X,sy]>>  => <wire *addr_d[35:28] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR0_UP      of <device  *iock @ [1*NUM_GRID_X,sy]>>  => <wire *addr_u[71:62] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR0_DN      of <device  *iock @ [1*NUM_GRID_X,sy]>>  => <wire *addr_d[71:62] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 

            <pin ADDR_U[25:0]  of <device *ckeb @ [3*NUM_GRID_X,sy]>>   => <wire *addr_u[27:2] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [3*NUM_GRID_X,sy]>>   => <wire *addr_d[27:2] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [3*NUM_GRID_X,sy]>>   => <wire *addr_u[61:36] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [3*NUM_GRID_X,sy]>>   => <wire *addr_d[61:36] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [5*NUM_GRID_X,sy]>>   => <wire *addr_u[97:72] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [5*NUM_GRID_X,sy]>>   => <wire *addr_d[97:72] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [5*NUM_GRID_X,sy]>>   => <wire *addr_u[133:108] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [5*NUM_GRID_X,sy]>>   => <wire *addr_d[133:108] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [7*NUM_GRID_X,sy]>>   => <wire *addr_u[169:144] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [7*NUM_GRID_X,sy]>>   => <wire *addr_d[169:144] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [7*NUM_GRID_X,sy]>>   => <wire *addr_u[197:172] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [7*NUM_GRID_X,sy]>>   => <wire *addr_d[197:172] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [9*NUM_GRID_X,sy]>>   => <wire *addr_u[233:208] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [9*NUM_GRID_X,sy]>>   => <wire *addr_d[233:208] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [9*NUM_GRID_X,sy]>>   => <wire *addr_u[269:244] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [9*NUM_GRID_X,sy]>>   => <wire *addr_d[269:244] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [11*NUM_GRID_X,sy]>>  => <wire *addr_u[305:280] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [11*NUM_GRID_X,sy]>>  => <wire *addr_d[305:280] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [11*NUM_GRID_X,sy]>>  => <wire *addr_u[333:308] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [11*NUM_GRID_X,sy]>>  => <wire *addr_d[333:308] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [24*NUM_GRID_X,sy]>>  => <wire *addr_u[369:344] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [24*NUM_GRID_X,sy]>>  => <wire *addr_d[369:344] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [24*NUM_GRID_X,sy]>>  => <wire *addr_u[397:372] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [24*NUM_GRID_X,sy]>>  => <wire *addr_d[397:372] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [26*NUM_GRID_X,sy]>>  => <wire *addr_u[433:408] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [26*NUM_GRID_X,sy]>>  => <wire *addr_d[433:408] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [26*NUM_GRID_X,sy]>>  => <wire *addr_u[461:436] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [26*NUM_GRID_X,sy]>>  => <wire *addr_d[461:436] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [28*NUM_GRID_X,sy]>>  => <wire *addr_u[497:472] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [28*NUM_GRID_X,sy]>>  => <wire *addr_d[497:472] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [28*NUM_GRID_X,sy]>>  => <wire *addr_u[533:508] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [28*NUM_GRID_X,sy]>>  => <wire *addr_d[533:508] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [30*NUM_GRID_X,sy]>>  => <wire *addr_u[561:536] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [30*NUM_GRID_X,sy]>>  => <wire *addr_d[561:536] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [30*NUM_GRID_X,sy]>>  => <wire *addr_u[597:572] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [30*NUM_GRID_X,sy]>>  => <wire *addr_d[597:572] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [32*NUM_GRID_X,sy]>>  => <wire *addr_u[633:608] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [32*NUM_GRID_X,sy]>>  => <wire *addr_d[633:608] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [32*NUM_GRID_X,sy]>>  => <wire *addr_u[669:644] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [32*NUM_GRID_X,sy]>>  => <wire *addr_d[669:644] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [34*NUM_GRID_X,sy]>>  => <wire *addr_u[705:680] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [34*NUM_GRID_X,sy]>>  => <wire *addr_d[705:680] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [34*NUM_GRID_X,sy]>>  => <wire *addr_u[733:708] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [34*NUM_GRID_X,sy]>>  => <wire *addr_d[733:708] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [36*NUM_GRID_X,sy]>>  => <wire *addr_u[769:744] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [36*NUM_GRID_X,sy]>>  => <wire *addr_d[769:744] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [36*NUM_GRID_X,sy]>>  => <wire *addr_u[805:780] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [36*NUM_GRID_X,sy]>>  => <wire *addr_d[805:780] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [38*NUM_GRID_X,sy]>>  => <wire *addr_u[841:816] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [38*NUM_GRID_X,sy]>>  => <wire *addr_d[841:816] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [38*NUM_GRID_X,sy]>>  => <wire *addr_u[869:844] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [38*NUM_GRID_X,sy]>>  => <wire *addr_d[869:844] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [40*NUM_GRID_X,sy]>>  => <wire *addr_u[905:880] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [40*NUM_GRID_X,sy]>>  => <wire *addr_d[905:880] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [40*NUM_GRID_X,sy]>>  => <wire *addr_u[941:916] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [40*NUM_GRID_X,sy]>>  => <wire *addr_d[941:916] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [42*NUM_GRID_X,sy]>>  => <wire *addr_u[977:952] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [42*NUM_GRID_X,sy]>>  => <wire *addr_d[977:952] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_U[51:26] of <device *ckeb @ [42*NUM_GRID_X,sy]>>  => <wire *addr_u[1013:988] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [42*NUM_GRID_X,sy]>>  => <wire *addr_d[1013:988] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            
            <pin ADDR_U[25:0]  of <device *ckeb @ [43*NUM_GRID_X,sy]>>  => <wire *addr_u[1049:1024] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[25:0]  of <device *ckeb @ [43*NUM_GRID_X,sy]>>  => <wire *addr_d[1049:1024] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_U[51:26] of <device *ckeb @ [43*NUM_GRID_X,sy]>>  => <wire *addr_u[1085:1060] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin ADDR_D[51:26] of <device *ckeb @ [43*NUM_GRID_X,sy]>>  => <wire *addr_d[1085:1060] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
 

            <pin ADDR_UP of <device *cramsl0 @ [4*NUM_GRID_X+3,sy]>>    => <wire *addr_u[107:98]of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [4*NUM_GRID_X+3,sy]>>    => <wire *addr_d[107:98]of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                        
            <pin ADDR_UP of <device *cramsl0 @ [5*NUM_GRID_X+3,sy]>>    => <wire *addr_u[143:134] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [5*NUM_GRID_X+3,sy]>>    => <wire *addr_d[143:134] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                        
            <pin ADDR_UP of <device *cramsl0 @ [7*NUM_GRID_X+3,sy]>>    => <wire *addr_u[207:198] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [7*NUM_GRID_X+3,sy]>>    => <wire *addr_d[207:198] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                        
            <pin ADDR_UP of <device *cramsl0 @ [8*NUM_GRID_X+3,sy]>>    => <wire *addr_u[243:234] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [8*NUM_GRID_X+3,sy]>>    => <wire *addr_d[243:234] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                        
            <pin ADDR_UP of <device *cramsl0 @ [9*NUM_GRID_X+3,sy]>>    => <wire *addr_u[279:270] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [9*NUM_GRID_X+3,sy]>>    => <wire *addr_d[279:270] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            
            <pin ADDR_UP of <device *cramsl0 @ [11*NUM_GRID_X+3,sy]>>    => <wire *addr_u[343:334] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [11*NUM_GRID_X+3,sy]>>    => <wire *addr_d[343:334] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                         
            <pin ADDR_UP of <device *cramsl0 @ [24*NUM_GRID_X+3,sy]>>    => <wire *addr_u[407:398] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [24*NUM_GRID_X+3,sy]>>    => <wire *addr_d[407:398] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                         
            <pin ADDR_UP of <device *cramsl0 @ [26*NUM_GRID_X+3,sy]>>    => <wire *addr_u[471:462] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [26*NUM_GRID_X+3,sy]>>    => <wire *addr_d[471:462] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                         
            <pin ADDR_UP of <device *cramsl0 @ [27*NUM_GRID_X+3,sy]>>    => <wire *addr_u[507:498] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [27*NUM_GRID_X+3,sy]>>    => <wire *addr_d[507:498] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                         
            <pin ADDR_UP of <device *cramsl0 @ [29*NUM_GRID_X+3,sy]>>    => <wire *addr_u[571:562] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [29*NUM_GRID_X+3,sy]>>    => <wire *addr_d[571:562] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                         
            <pin ADDR_UP of <device *cramsl0 @ [30*NUM_GRID_X+3,sy]>>    => <wire *addr_u[607:598] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [30*NUM_GRID_X+3,sy]>>    => <wire *addr_d[607:598] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                         
            <pin ADDR_UP of <device *cramsl0 @ [31*NUM_GRID_X+3,sy]>>    => <wire *addr_u[643:634] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [31*NUM_GRID_X+3,sy]>>    => <wire *addr_d[643:634] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                         
            <pin ADDR_UP of <device *cramsl0 @ [32*NUM_GRID_X+3,sy]>>    => <wire *addr_u[679:670] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [32*NUM_GRID_X+3,sy]>>    => <wire *addr_d[679:670] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                         
            <pin ADDR_UP of <device *cramsl0 @ [34*NUM_GRID_X+3,sy]>>    => <wire *addr_u[743:734] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [34*NUM_GRID_X+3,sy]>>    => <wire *addr_d[743:734] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                         
            <pin ADDR_UP of <device *cramsl0 @ [35*NUM_GRID_X+3,sy]>>    => <wire *addr_u[779:770] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [35*NUM_GRID_X+3,sy]>>    => <wire *addr_d[779:770] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                         
            <pin ADDR_UP of <device *cramsl0 @ [36*NUM_GRID_X+3,sy]>>    => <wire *addr_u[815:806] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [36*NUM_GRID_X+3,sy]>>    => <wire *addr_d[815:806] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                         
            <pin ADDR_UP of <device *cramsl0 @ [38*NUM_GRID_X+3,sy]>>    => <wire *addr_u[879:870] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [38*NUM_GRID_X+3,sy]>>    => <wire *addr_d[879:870] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                         
            <pin ADDR_UP of <device *cramsl0 @ [39*NUM_GRID_X+3,sy]>>    => <wire *addr_u[915:906] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [39*NUM_GRID_X+3,sy]>>    => <wire *addr_d[915:906] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                         
            <pin ADDR_UP of <device *cramsl0 @ [40*NUM_GRID_X+3,sy]>>    => <wire *addr_u[951:942] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [40*NUM_GRID_X+3,sy]>>    => <wire *addr_d[951:942] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            
            <pin ADDR_UP of <device *cramsl0 @ [41*NUM_GRID_X+3,sy]>>    => <wire *addr_u[987:978]of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [41*NUM_GRID_X+3,sy]>>    => <wire *addr_d[987:978]of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                         
            <pin ADDR_UP of <device *cramsl0 @ [42*NUM_GRID_X+3,sy]>>    => <wire *addr_u[1023:1014] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [42*NUM_GRID_X+3,sy]>>    => <wire *addr_d[1023:1014] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,

                                                                                         
            <pin ADDR_UP of <device *cramsl1 @ [10*NUM_GRID_X+3,sy]>>    => <wire *addr_u[307:306] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl1 @ [10*NUM_GRID_X+3,sy]>>    => <wire *addr_d[307:306] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                                     
            <pin ADDR_UP of <device *cramsl1 @ [28*NUM_GRID_X+3,sy]>>    => <wire *addr_u[535:534] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl1 @ [28*NUM_GRID_X+3,sy]>>    => <wire *addr_d[535:534] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
        );
                                                                                         
    if(rx==0)
    {
        connect
        (                
             <pin ADDR0_UP of <device *iock @ [44*NUM_GRID_X,sy]>>   => <wire *addr_u[1059:1050] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
             <pin ADDR0_DN of <device *iock @ [44*NUM_GRID_X,sy]>>   => <wire *addr_d[1059:1050] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
             <pin ADDR_UP of <device  *iock @ [44*NUM_GRID_X,sy]>>   => <wire *addr_u[1095:1086] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
             <pin ADDR_DN of <device  *iock @ [44*NUM_GRID_X,sy]>>   => <wire *addr_d[1095:1086] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,

             <pin ADDR_UP of <device *cramsl3 @ [6*NUM_GRID_X+3,sy]>>     => <wire *addr_u[171:170] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
             <pin ADDR_DN of <device *cramsl3 @ [6*NUM_GRID_X+3,sy]>>     => <wire *addr_d[171:170] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
             <pin MWL_UP  of <device *cramsl3 @ [6*NUM_GRID_X+3,sy]>>     => <wire *addr_u[1096]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
             <pin MWL_DN  of <device *cramsl3 @ [6*NUM_GRID_X+3,sy]>>     => <wire *addr_d[1096]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                                      
             <pin ADDR_UP of <device *cramsl3 @ [33*NUM_GRID_X+3,sy]>>    => <wire *addr_u[707:706] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
             <pin ADDR_DN of <device *cramsl3 @ [33*NUM_GRID_X+3,sy]>>    => <wire *addr_d[707:706] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
             <pin MWL_UP  of <device *cramsl3 @ [33*NUM_GRID_X+3,sy]>>    => <wire *addr_u[1097]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
             <pin MWL_DN  of <device *cramsl3 @ [33*NUM_GRID_X+3,sy]>>    => <wire *addr_d[1097]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                                      
             <pin ADDR_UP of <device *cramsl3 @ [37*NUM_GRID_X+3,sy]>>    => <wire *addr_u[843:842] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
             <pin ADDR_DN of <device *cramsl3 @ [37*NUM_GRID_X+3,sy]>>    => <wire *addr_d[843:842] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
             <pin MWL_UP  of <device *cramsl3 @ [37*NUM_GRID_X+3,sy]>>    => <wire *addr_u[1098]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
             <pin MWL_DN  of <device *cramsl3 @ [37*NUM_GRID_X+3,sy]>>    => <wire *addr_d[1098]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>
        );

    }
    else
    {
        connect
        (
            <pin ADDR_UP of <device *cramsl0 @ [43*NUM_GRID_X+3,sy]>>    => <wire *addr_u[1059:1050] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl0 @ [43*NUM_GRID_X+3,sy]>>    => <wire *addr_d[1059:1050] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,

            <pin ADDR_UP of <device *cramsl3 @ [6*NUM_GRID_X+3,sy]>>     => <wire *addr_u[171:170] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl3 @ [6*NUM_GRID_X+3,sy]>>     => <wire *addr_d[171:170] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin MWL_UP  of <device *cramsl3 @ [6*NUM_GRID_X+3,sy]>>     => <wire *addr_u[1088]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin MWL_DN  of <device *cramsl3 @ [6*NUM_GRID_X+3,sy]>>     => <wire *addr_d[1088]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                                     
            <pin ADDR_UP of <device *cramsl3 @ [33*NUM_GRID_X+3,sy]>>    => <wire *addr_u[707:706] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl3 @ [33*NUM_GRID_X+3,sy]>>    => <wire *addr_d[707:706] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin MWL_UP  of <device *cramsl3 @ [33*NUM_GRID_X+3,sy]>>    => <wire *addr_u[1089]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin MWL_DN  of <device *cramsl3 @ [33*NUM_GRID_X+3,sy]>>    => <wire *addr_d[1089]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                                                                                                     
            <pin ADDR_UP of <device *cramsl3 @ [37*NUM_GRID_X+3,sy]>>    => <wire *addr_u[843:842] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *cramsl3 @ [37*NUM_GRID_X+3,sy]>>    => <wire *addr_d[843:842] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin MWL_UP  of <device *cramsl3 @ [37*NUM_GRID_X+3,sy]>>    => <wire *addr_u[1090]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin MWL_DN  of <device *cramsl3 @ [37*NUM_GRID_X+3,sy]>>    => <wire *addr_d[1090]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>
        );

    }

};//end of function connect_ckeb_wl_input
/********************************************************************************
********************************************************************************/
function connect_drm_wl_input
(
    unsigned int rx,
    unsigned int ty,
    unsigned int tx_wl,
    unsigned int ty_wl,

    string device_wl,
    string device_drm
)
{
    int sx_wl = tx_wl * NUM_GRID_X;
    int sy_wl = ty_wl * NUM_GRID_Y;

    int sy;
    sy = (rx * NUM_TILES_REGION + ty) * NUM_GRID_Y;

    string cram_ctrl = device_wl;
    string drm = device_drm;

    int mid_tile = MID_TILE_REGION;

    string addr_u   = (rx==1) ? "ADDR_UP_R1"        : "ADDR_UP_R2";
    string addr_d   = (rx==1) ? "ADDR_DN_R1"        : "ADDR_DN_R2";
    string madf0_u  = (rx==1) ? "FRAME_ADDR_OU0_R1" : "FRAME_ADDR_OU0_R2";
    string madf0_d  = (rx==1) ? "FRAME_ADDR_OD0_R1" : "FRAME_ADDR_OD0_R2";
    string madf1_u  = (rx==1) ? "FRAME_ADDR_OU1_R1" : "FRAME_ADDR_OU1_R2";
    string madf1_d  = (rx==1) ? "FRAME_ADDR_OD1_R1" : "FRAME_ADDR_OD1_R2";
    string madf2_u  = (rx==1) ? "FRAME_ADDR_OU2_R1" : "FRAME_ADDR_OU2_R2";
    string madf2_d  = (rx==1) ? "FRAME_ADDR_OD2_R1" : "FRAME_ADDR_OD2_R2";
    string mce_u    = (rx==1) ? "MCE_OU_R1"         : "MCE_OU_R2";
    string mce_d    = (rx==1) ? "MCE_OD_R1"         : "MCE_OD_R2";
    string mwr_u    = (rx==1) ? "MWR_OU_R1"         : "MWR_OU_R2";
    string mwr_d    = (rx==1) ? "MWR_OD_R1"         : "MWR_OD_R2";
    string mclkb_u  = (rx==1) ? "MCLKB_OU_R1"       : "MCLKB_OU_R2";
    string mclkb_d  = (rx==1) ? "MCLKB_OD_R1"       : "MCLKB_OD_R2";

    connect
    (
        <pin ADDR of <device *drm @ [6*NUM_GRID_X+3,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[171:170] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                               : <wire *addr_u[171:170] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
        <pin ADDR of <device *drm @ [33*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile)  ? <wire *addr_d[707:706] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                               : <wire *addr_u[707:706] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
        
        <pin MADF of <device *drm @ [6*NUM_GRID_X+3,sy]>>   => (ty<=mid_tile) ? <wire *madf0_d[6:0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                              : <wire *madf0_u[6:0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        <pin MADF of <device *drm @ [33*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile) ? <wire *madf1_d[6:0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                              : <wire *madf1_u[6:0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
        <pin MCE of <device *drm @ [6*NUM_GRID_X+3,sy]>>   => (ty<=mid_tile)  ? <wire *mce_d[0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                              : <wire *mce_u[0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        <pin MCE of <device *drm @ [33*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile)  ? <wire *mce_d[1] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                              : <wire *mce_u[1] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
        <pin MWR of <device *drm @ [6*NUM_GRID_X+3,sy]>>   => (ty<=mid_tile)  ? <wire *mwr_d[0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                              : <wire *mwr_u[0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        <pin MWR of <device *drm @ [33*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile)  ? <wire *mwr_d[1] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                              : <wire *mwr_u[1] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        
        <pin MCLKB of <device *drm @ [6*NUM_GRID_X+3,sy]>>   => (ty<=mid_tile)  ? <wire *mclkb_d[0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                : <wire *mclkb_u[0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        <pin MCLKB of <device *drm @ [33*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile)  ? <wire *mclkb_d[1] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                : <wire *mclkb_u[1] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
    );

    if(rx==1)
    {
        connect
        (
            <pin MWL  of <device *drm @ [6*NUM_GRID_X+3,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[1088] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                   : <wire *addr_u[1088] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin MWL  of <device *drm @ [33*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile)  ? <wire *addr_d[1089] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                   : <wire *addr_u[1089] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
        );

        if(ty>mid_tile)
        {
            connect
            (
                <pin ADDR  of <device *drm @ [37*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile) ? <wire *addr_d[843:842] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                       : <wire *addr_u[843:842] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
                <pin MADF  of <device *drm @ [37*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile) ? <wire *madf2_d[6:0]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                       : <wire *madf2_u[6:0]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                <pin MCE   of <device *drm @ [37*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile) ? <wire *mce_d[2]        of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                       : <wire *mce_u[2]        of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                <pin MWL  of <device *drm @ [37*NUM_GRID_X+3,sy]>>   => (ty<=mid_tile) ? <wire *addr_d[1090] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                       : <wire *addr_u[1090] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
                <pin MWR   of <device *drm @ [37*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile) ? <wire *mwr_d[2]        of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                       : <wire *mwr_u[2]        of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
                <pin MCLKB of <device *drm @ [37*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile) ? <wire *mclkb_d[2]      of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                       : <wire *mclkb_u[2]      of <device *cram_ctrl @ [sx_wl,sy_wl]>>

            );
        }
    }
    else 
    {
        connect
        (
            <pin ADDR  of <device *drm @ [37*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile) ? <wire *addr_d[843:842] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                   : <wire *addr_u[843:842] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin MADF  of <device *drm @ [37*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile) ? <wire *madf2_d[6:0]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *madf2_u[6:0]    of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin MCE   of <device *drm @ [37*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile) ? <wire *mce_d[2]        of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *mce_u[2]        of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin MWR   of <device *drm @ [37*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile) ? <wire *mwr_d[2]        of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *mwr_u[2]        of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin MCLKB of <device *drm @ [37*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile) ? <wire *mclkb_d[2]      of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                   : <wire *mclkb_u[2]      of <device *cram_ctrl @ [sx_wl,sy_wl]>>,

            <pin MWL  of <device *drm @ [6*NUM_GRID_X+3,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[1096] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                   : <wire *addr_u[1096] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin MWL  of <device *drm @ [33*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile)  ? <wire *addr_d[1097] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                   : <wire *addr_u[1097] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
            <pin MWL  of <device *drm @ [37*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile)  ? <wire *addr_d[1098] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                   : <wire *addr_u[1098] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
        );
    }
};//end of function connect_drm_wl_input
/********************************************************************************
********************************************************************************/
function connect_apm_wl_input
(
    unsigned int rx,
    unsigned int ty,
    unsigned int tx_wl,
    unsigned int ty_wl,

    string device_wl,
    string device_apm
)
{
    int sx_wl = tx_wl * NUM_GRID_X;
    int sy_wl = ty_wl * NUM_GRID_Y;

    int sy;
    sy = (rx*NUM_TILES_REGION + ty) * NUM_GRID_Y;

    int mid_tile = MID_TILE_REGION;

    string addr_u = (rx==1) ? "ADDR_UP_R1" : "ADDR_UP_R2";
    string addr_d = (rx==1) ? "ADDR_DN_R1" : "ADDR_DN_R2";

    string cram_ctrl = device_wl;
    string apm = device_apm;

    connect
    (
        <pin ADDR of <device *apm @ [10*NUM_GRID_X+3,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[307:306] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                : <wire *addr_u[307:306] of <device *cram_ctrl @ [sx_wl,sy_wl]>>, 
        <pin ADDR of <device *apm @ [28*NUM_GRID_X+3,sy]>>   => (ty<=mid_tile)  ? <wire *addr_d[535:534] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
                                                                                : <wire *addr_u[535:534] of <device *cram_ctrl @ [sx_wl,sy_wl]>> 
    );

};//end of function connect_apm_wl_input
/********************************************************************************
********************************************************************************/
function connect_pll_wl_input
(
    unsigned int rx,
    unsigned int ty,
    unsigned int tx_wl,
    unsigned int ty_wl,
    
    string device_wl,
    string device_pll
)
{
    int sx_wl = tx_wl * NUM_GRID_X;
    int sy_wl = ty_wl * NUM_GRID_Y;

    int sy;
    sy = (rx * NUM_TILES_REGION + ty) * NUM_GRID_Y;

    int mid_tile = MID_TILE_REGION;

    string addr_u = (rx==1) ? "ADDR_UP_R1" : "ADDR_UP_R2";
    string addr_d = (rx==1) ? "ADDR_DN_R1" : "ADDR_DN_R2";

    string cram_ctrl = device_wl;
    string pll = device_pll;

    connect
    (   
        <pin ADDR of <device *pll @ [1*NUM_GRID_X,sy]>>   => (ty<=mid_tile) ? <wire *addr_d[29:28] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                            : <wire *addr_u[29:28] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
    );
    if(rx==0)
    {
        connect
        (
            <pin ADDR of <device *pll @ [45*NUM_GRID_X,sy]>>  => (ty<=mid_tile) ? <wire *addr_d[1087:1086] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                : <wire *addr_u[1087:1086] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
        );
    }
};//end of connect_pll_wl_input
/********************************************************************************
********************************************************************************/
function connect_iol_wl_input
(
    unsigned int rx,
    unsigned int ty,
    unsigned int tx_wl,
    unsigned int ty_wl,

    string device_wl,
    string device_iol
)
{
    int sx_wl = tx_wl * NUM_GRID_X;
    int sy_wl = ty_wl * NUM_GRID_Y;

    int sy;
    sy = (rx * NUM_TILES_REGION + ty) * NUM_GRID_Y;

    int mid_tile = MID_TILE_REGION;

    string addr_u = (rx==1) ? "ADDR_UP_R1" : "ADDR_UP_R2";
    string addr_d = (rx==1) ? "ADDR_DN_R1" : "ADDR_DN_R2";

    string cram_ctrl = device_wl;
    string iol = device_iol;
    

    connect
    (   
        <pin ADDR of <device *iol @ [2*NUM_GRID_X+3,sy]>>   => (ty<=mid_tile) ? <wire *addr_d[35:30] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                              : <wire *addr_u[35:30] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
    );
    if(rx==0)
    {
        connect
        (
            <pin ADDR of <device *iol @ [44*NUM_GRID_X+3,sy]>>  => (ty<=mid_tile) ? <wire *addr_d[1093:1088] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
                                                                                  : <wire *addr_u[1093:1088] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
        );
    }
};//end of function connect_iol_wl_input
/********************************************************************************
********************************************************************************/
function connect_iob_wl_input
(
    unsigned int rx,
    unsigned int tx_wl,
    unsigned int ty_wl,

    string device_wl,
    string device_iob,
    string device_hsst
)
{
    int sx_wl = tx_wl * NUM_GRID_X;
    int sy_wl = ty_wl * NUM_GRID_Y;

    int sy;
    sy = (rx * NUM_TILES_REGION) * NUM_GRID_Y;
    string addr_u = (rx==1) ? "ADDR_UP_R1" : "ADDR_UP_R2";
    string addr_d = (rx==1) ? "ADDR_DN_R1" : "ADDR_DN_R2";

    string cram_ctrl = device_wl;
    string iob = device_iob;
    string hsst = device_hsst;

    connect
    (   
        <pin ADDR_UP[1:0] of <device *iob @ [0,sy]>>   => <wire *addr_u[1:0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        <pin ADDR_DN[1:0] of <device *iob @ [0,sy]>>   => <wire *addr_d[1:0] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
    );

    if(rx==0)
    {
        connect
        (
            <pin ADDR_UP[1:0] of <device *iob @ [46*NUM_GRID_X,sy]>>   => <wire *addr_u[1095:1094] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN[1:0] of <device *iob @ [46*NUM_GRID_X,sy]>>   => <wire *addr_d[1095:1094] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
        );
    }
    else
    {
        connect
        (
            <pin ADDR_UP of <device *hsst @ [44*NUM_GRID_X+3,sy]>>   => <wire *addr_u[1087:1086] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR_DN of <device *hsst @ [44*NUM_GRID_X+3,sy]>>   => <wire *addr_d[1087:1086] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
        );
    }
};//end of function connect_iob_wl_input
/********************************************************************************
********************************************************************************/
function connect_uscm_wl_input
(
    unsigned int rx,
    unsigned int tx,
    unsigned int tx_wl,
    unsigned int ty_wl,

    string device_wl,
    string device_uscm
)
{
    int sx_wl = tx_wl * NUM_GRID_X;
    int sy_wl = ty_wl * NUM_GRID_Y;

    int sx, sy;
    sx = tx * NUM_GRID_X + 3;
    sy = (rx*NUM_TILES_REGION) * NUM_GRID_Y;

    int mid_tile = MID_TILE_REGION;
    string addr_u  = (rx==1) ? "ADDR_UP_R1" : "ADDR_UP_R2";
    string addr_d  = (rx==1) ? "ADDR_DN_R1" : "ADDR_DN_R2";
    string addr1_u = (rx==1) ? "ADDR_UP_R2" : "ADDR_UP_R1";
    string addr1_d = (rx==1) ? "ADDR_DN_R2" : "ADDR_DN_R1";

    string cram_ctrl = device_wl;
    string uscm = device_uscm;

        connect
        (
            <pin ADDR0_UP of <device *uscm @ [sx,sy]>>   => <wire *addr_u[435:434] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR0_DN of <device *uscm @ [sx,sy]>>   => <wire *addr_d[435:434] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,

            <pin ADDR1_UP of <device *uscm @ [sx,sy]>>   => <wire *addr1_u[435:434] of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
            <pin ADDR1_DN of <device *uscm @ [sx,sy]>>   => <wire *addr1_d[435:434] of <device *cram_ctrl @ [sx_wl,sy_wl]>>
        );
};//end of function connect_uscm_wl_input
/********************************************************************************
********************************************************************************/
function connect_adc_wl_input
(
    unsigned int rx,
    unsigned int tx,
    unsigned int tx_wl,
    unsigned int ty_wl,

    unsigned int rx_ccs,

    string device_wl,
    string device_adc
)
{
    int sx_wl = tx_wl * NUM_GRID_X;
    int sy_wl = ty_wl * NUM_GRID_Y;

    int sx, sy;
    sx = tx * NUM_GRID_X + 3;
    sy = (rx * NUM_TILES_REGION) * NUM_GRID_Y;

    int mid_tile = MID_TILE_REGION;
    string addr_u = (rx==1) ? "ADDR_UP_R1" : "ADDR_UP_R2";
    string addr_d = (rx==1) ? "ADDR_DN_R1" : "ADDR_DN_R2";

    string cram_ctrl = device_wl;
    string adc = device_adc;

   connect
     (   
        <pin ADDR_UP of <device *adc @[sx,sy]>>   => <wire *addr_u[371:370] of <device *cram_ctrl @[sx_wl,sy_wl]>>,
        <pin ADDR_DN of <device *adc @[sx,sy]>>   => <wire *addr_d[371:370] of <device *cram_ctrl @[sx_wl,sy_wl]>>
     );

    string addr1_d = (rx==1) ? "ADDR_DN_R2" : "ADDR_DN_R1";
    if(rx==rx_ccs)
    {
       connect
         (   
            <pin ADDR_DN1 of <device *adc @[sx,sy]>>   => <wire *addr1_d[371:370] of <device *cram_ctrl @[sx_wl,sy_wl]>>
         );  
    }

}//end of connect_adc_wl_input
/********************************************************************************
********************************************************************************/
function connect_pcie_wl_input
(
    unsigned int rx,
    unsigned int tx,
    unsigned int tx_wl,
    unsigned int ty_wl,

    string device_wl,
    string device_pcie
)
{
    int sx_wl = tx_wl * NUM_GRID_X;
    int sy_wl = ty_wl * NUM_GRID_Y;

    int sx, sy;
    sx = tx * NUM_GRID_X + 3;
    sy = (rx * NUM_TILES_REGION) * NUM_GRID_Y;

    int mid_tile = MID_TILE_REGION;
    string addr_u = (rx==1) ? "ADDR_UP_R1" : "ADDR_UP_R2";
    string addr_d = (rx==1) ? "ADDR_DN_R1" : "ADDR_DN_R2";

    string cram_ctrl = device_wl;
    string pcie = device_pcie;


   connect
     (   
        <pin ADDR               of <device *pcie @ [sx,sy]>>  => <wire *addr_d[807:806]     of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        <pin FRAME_ADDR_BLINT   of <device *pcie @ [sx,sy]>>  => <wire FRAME_ADDR_BLINT     of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        <pin COLUMN_ADDR_BLINT  of <device *pcie @ [sx,sy]>>  => <wire COLUMN_ADDR_BLINT    of <device *cram_ctrl @ [sx_wl,sy_wl]>>,
        <pin READ               of <device *pcie @ [sx,sy]>>  => <wire READ_BLINT           of <device *cram_ctrl @ [sx_wl,sy_wl]>>
     );

}//end of connect_pcie_wl_input





/***********************************************************************************************************************
                                functions for global signal
************************************************************************************************************************/
function connect_hsst_gs_input_50h
(
    unsigned int tx_hsst,
    unsigned int ty_hsst_u,
    unsigned int rx_hsst_u,

    unsigned int tx_ccs,
    unsigned int ty_ccs,
    unsigned int rx_ccs,

    unsigned int tx_bl,
    unsigned int ty_bl,

    unsigned int tx_esd,
    unsigned int ty_esd,

    string device_bl,
    string device_iob,
    string device_esd,
    string device_hsst
)
{

    int sx_ccs = tx_ccs * NUM_GRID_X + 3;
    int sy_ccs = (rx_ccs * NUM_TILES_REGION + ty_ccs) * NUM_GRID_Y;

    int sx_hsst = tx_hsst * NUM_GRID_X + 3;
    int sy_hsst_u = (rx_hsst_u * NUM_TILES_REGION + ty_hsst_u) * NUM_GRID_Y;

    int sx_bl = tx_bl * NUM_GRID_X;
    int sy_bl = ty_bl * NUM_GRID_Y;

    int sx_esd = tx_esd * NUM_GRID_X;
    int sy_esd = ty_esd * NUM_GRID_Y;

    string cram_ctrl = device_bl;
    string hsst = device_hsst;
    string iob = device_iob;
    string esd = device_esd;

    int sx_iob_r = (NUM_TILE_X - 1) * NUM_GRID_X;
    int sy_iob_ru = (NUM_REGION - 2) * NUM_TILES_REGION * NUM_GRID_Y;
    int sy_iob_rd = 0;
    int sx_iob_l = 0;
    int sy_iob_lu = (NUM_REGION - 1) * NUM_TILES_REGION * NUM_GRID_Y;
    int sy_iob_l5 = rx_ccs * NUM_TILES_REGION * NUM_GRID_Y;
    int sy_iob_ld = (rx_ccs==0) ? rx_ccs * NUM_TILES_REGION * NUM_GRID_Y : (rx_ccs - 1) *  NUM_TILES_REGION * NUM_GRID_Y  ;


    connect
      (
        <pin CLOCKDR      of <device *hsst @[sx_hsst,sy_hsst_u]>>       => <wire TCK_OUT_TO_PMA of <device *esd @[sx_esd,sy_esd]>>,

        <pin TDO_BSCAN_IO of <device CCS_TILE @[sx_ccs,sy_ccs]>>        => <wire TDO_B of <device *esd @[sx_esd,sy_esd]>>,
//      <pin TDI_B        of <device *esd @[sx_esd,sy_esd]>>            => <wire TDO[0] of <device *iob @[sx_iob_r,sy_iob_rd]>>,

        <pin CLOCKDR_IN   of <device CCS_TILE @[sx_ccs,sy_ccs]>>        => <wire TCK_OUT of <device *iob @[sx_iob_l,sy_iob_ld]>>,

        <pin TDI_BSCAN    of <device *hsst @[sx_hsst,sy_hsst_u]>>       => <wire TDO_T of <device *esd @[sx_esd,sy_esd]>>
      );


    connect
      (
        <pin BS_MEMINIT of <device *hsst @[sx_hsst,sy_hsst_u]>>         => <wire MEM_INIT_OR_R1 of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
        <pin BS_AC_TS   of <device *hsst @[sx_hsst,sy_hsst_u]>>         => <wire AC_TEST_OR_R1  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
        <pin BS_ACMODE  of <device *hsst @[sx_hsst,sy_hsst_u]>>         => <wire AC_MODE_OR_R1  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,

        <pin JRST       of <device *hsst @[sx_hsst,sy_hsst_u]>>     => <wire BSRRST_OR_R1    of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
        <pin SHIFTDR    of <device *hsst @[sx_hsst,sy_hsst_u]>>     => <wire BSRSHIFT_OR_R1  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
        <pin UPDATEDR   of <device *hsst @[sx_hsst,sy_hsst_u]>>     => <wire BSRUPDATE_OR_R1 of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
        <pin MODE_1     of <device *hsst @[sx_hsst,sy_hsst_u]>>     => <wire BSRMODE1_OR_R1  of <device *cram_ctrl @ [sx_bl,sy_bl]>>
      );

}//end of function connect_hsst_gs_input_50h
/********************************************************************************
********************************************************************************/
function connect_pll_iconst_input
(
    unsigned int rx,
    unsigned int tx_pll,
    unsigned int ty_gpll,
    string device_iob
)
{
    int sx_pll = tx_pll * NUM_GRID_X;
    int sx_iob = (tx_pll==1) ? 0 : (tx_pll+1)*NUM_GRID_X;
    int sy_iob = (rx * NUM_TILES_REGION) * NUM_GRID_Y;
    int sy_gpll = (rx * NUM_TILES_REGION + ty_gpll) * NUM_GRID_Y;
    int sy_ppll = (rx * NUM_TILES_REGION) * NUM_GRID_Y;
    string iob = device_iob;


    connect
      (   
        <pin IREF0_10U of <device GPLL_TILE @ [sx_pll,sy_gpll]>>   => <wire ICONST10U_DDR[0] of <device *iob @ [sx_iob,sy_iob]>>,
        <pin IREF1_10U of <device GPLL_TILE @ [sx_pll,sy_gpll]>>   => <wire ICONST10U_DDR[1] of <device *iob @ [sx_iob,sy_iob]>>,

        <pin IREF0_10U of <device PPLL_TILE @ [sx_pll,sy_ppll]>>   => <wire ICONST10U_DDR[2] of <device *iob @ [sx_iob,sy_iob]>>,
        <pin IREF1_10U of <device PPLL_TILE @ [sx_pll,sy_ppll]>>   => <wire ICONST10U_DDR[3] of <device *iob @ [sx_iob,sy_iob]>>

      );


}//end of connect_pll_wl_input
/********************************************************************************
********************************************************************************/
function connect_ckeb_gs_input
(
    unsigned int rx,
    unsigned int l_tx_ckeb[],
    unsigned int tx_bl,
    unsigned int ty_bl,
    unsigned int tx_l1,
    unsigned int tx_l2,
    unsigned int tx_l3,
    unsigned int tx_r1,
    unsigned int tx_r2,
    unsigned int tx_r3,
    unsigned int tx_r4,
    unsigned int tx_r5,
    unsigned int tx_r6,

    unsigned int tx_ckeb2_l,
    unsigned int tx_ckeb2_r,
    unsigned int tx_iock_l,
    unsigned int tx_iock_r,

    string device_bl
)
{
    int sx_bl = tx_bl * NUM_GRID_X;
    int sy_bl = ty_bl * NUM_GRID_Y;

    int sx,sy;
    sy = (rx * NUM_TILES_REGION + MID_TILE_REGION) * NUM_GRID_Y;

    string cram_ctrl = device_bl;
    string grs_n, gwen, pu_n, por_n_1p8, prcfg_n, rst_n, glogen, por_n, gouten;

    int tx, tx_tmp;
    foreach tx( l_tx_ckeb )
    {
      sx = tx * NUM_GRID_X;
      string strVar = ((tx==tx_ckeb2_l)||(tx==tx_ckeb2_r)) ? "CKEB2_TILE" : ((tx==tx_iock_l)||(tx==tx_iock_r)) ? "IOCK_TILE" : "CKEB_TILE";

      if(rx==1)
      {
        grs_n =((tx>=tx_l1)&&(tx<=tx_bl)) ? "GRS_N_OL_R1[0]" :
               ((tx>=tx_l2)&&(tx<tx_l1))  ? "GRS_N_OL_R1[1]" :
               ((tx>=tx_l3)&&(tx<tx_l2))  ? "GRS_N_OL_R1[2]" :
                             (tx<tx_l3)   ? "GRS_N_OL_R1[3]" :
               ((tx>=tx_bl)&&(tx<=tx_r1)) ? "GRS_N_OR_R1[0]" :
               ((tx>tx_r1)&&(tx<=tx_r2))  ? "GRS_N_OR_R1[1]" :
               ((tx>tx_r2)&&(tx<=tx_r3))  ? "GRS_N_OR_R1[2]" :
               ((tx>tx_r3)&&(tx<=tx_r4))  ? "GRS_N_OR_R1[3]" :
               ((tx>tx_r4)&&(tx<=tx_r5))  ? "GRS_N_OR_R1[4]" :
               ((tx>tx_r5)&&(tx<=tx_r6))  ? "GRS_N_OR_R1[5]" 
                                          : "GRS_N_OR_R1[6]";
  
        gwen = ((tx>=tx_l1)&&(tx<=tx_bl)) ? "GWEN_OL_R1[0]" :
               ((tx>=tx_l2)&&(tx<tx_l1))  ? "GWEN_OL_R1[1]" :
               ((tx>=tx_l3)&&(tx<tx_l2))  ? "GWEN_OL_R1[2]" :
                             (tx<tx_l3)   ? "GWEN_OL_R1[3]" :
               ((tx>=tx_bl)&&(tx<=tx_r1)) ? "GWEN_OR_R1[0]" :
               ((tx>tx_r1)&&(tx<=tx_r2))  ? "GWEN_OR_R1[1]" :
               ((tx>tx_r2)&&(tx<=tx_r3))  ? "GWEN_OR_R1[2]" :
               ((tx>tx_r3)&&(tx<=tx_r4))  ? "GWEN_OR_R1[3]" :
               ((tx>tx_r4)&&(tx<=tx_r5))  ? "GWEN_OR_R1[4]" :
               ((tx>tx_r5)&&(tx<=tx_r6))  ? "GWEN_OR_R1[5]" 
                                          : "GWEN_OR_R1[6]";
  
        pu_n = ((tx>=tx_l1)&&(tx<=tx_bl)) ? "PUP_REL_N_OL_R1[0]" :
               ((tx>=tx_l2)&&(tx<tx_l1))  ? "PUP_REL_N_OL_R1[1]" :
               ((tx>=tx_l3)&&(tx<tx_l2))  ? "PUP_REL_N_OL_R1[2]" :
                             (tx<tx_l3)   ? "PUP_REL_N_OL_R1[3]" :
               ((tx>=tx_bl)&&(tx<=tx_r1)) ? "PUP_REL_N_OR_R1[0]" :
               ((tx>tx_r1)&&(tx<=tx_r2))  ? "PUP_REL_N_OR_R1[1]" :
               ((tx>tx_r2)&&(tx<=tx_r3))  ? "PUP_REL_N_OR_R1[2]" :
               ((tx>tx_r3)&&(tx<=tx_r4))  ? "PUP_REL_N_OR_R1[3]" :
               ((tx>tx_r4)&&(tx<=tx_r5))  ? "PUP_REL_N_OR_R1[4]" :
               ((tx>tx_r5)&&(tx<=tx_r6))  ? "PUP_REL_N_OR_R1[5]" 
                                          : "PUP_REL_N_OR_R1[6]";
  
        por_n_1p8 = ((tx>=tx_l1)&&(tx<=tx_bl)) ? "POR_N_1P8_OL_R1[0]" :
                    ((tx>=tx_l2)&&(tx<tx_l1))  ? "POR_N_1P8_OL_R1[1]" :
                    ((tx>=tx_l3)&&(tx<tx_l2))  ? "POR_N_1P8_OL_R1[2]" :
                                  (tx<tx_l3)   ? "POR_N_1P8_OL_R1[3]" :
                    ((tx>=tx_bl)&&(tx<=tx_r1)) ? "POR_N_1P8_OR_R1[0]" :
                    ((tx>tx_r1)&&(tx<=tx_r2))  ? "POR_N_1P8_OR_R1[1]" :
                    ((tx>tx_r2)&&(tx<=tx_r3))  ? "POR_N_1P8_OR_R1[2]" :
                    ((tx>tx_r3)&&(tx<=tx_r4))  ? "POR_N_1P8_OR_R1[3]" :
                    ((tx>tx_r4)&&(tx<=tx_r5))  ? "POR_N_1P8_OR_R1[4]" :
                    ((tx>tx_r5)&&(tx<=tx_r6))  ? "POR_N_1P8_OR_R1[5]" 
                                               : "POR_N_1P8_OR_R1[6]";
  
        prcfg_n =((tx>=tx_l1)&&(tx<=tx_bl)) ? "PRCFG_N_OL_R1[0]" :
                 ((tx>=tx_l2)&&(tx<tx_l1))  ? "PRCFG_N_OL_R1[1]" :
                 ((tx>=tx_l3)&&(tx<tx_l2))  ? "PRCFG_N_OL_R1[2]" :
                               (tx<tx_l3)   ? "PRCFG_N_OL_R1[3]" :
                 ((tx>=tx_bl)&&(tx<=tx_r1)) ? "PRCFG_N_OR_R1[0]" :
                 ((tx>tx_r1)&&(tx<=tx_r2))  ? "PRCFG_N_OR_R1[1]" :
                 ((tx>tx_r2)&&(tx<=tx_r3))  ? "PRCFG_N_OR_R1[2]" :
                 ((tx>tx_r3)&&(tx<=tx_r4))  ? "PRCFG_N_OR_R1[3]" :
                 ((tx>tx_r4)&&(tx<=tx_r5))  ? "PRCFG_N_OR_R1[4]" :
                 ((tx>tx_r5)&&(tx<=tx_r6))  ? "PRCFG_N_OR_R1[5]" 
                                            : "PRCFG_N_OR_R1[6]";
  
        rst_n =((tx>=tx_l1)&&(tx<=tx_bl)) ? "RST_N_OL_R1[0]" :
               ((tx>=tx_l2)&&(tx<tx_l1))  ? "RST_N_OL_R1[1]" :
               ((tx>=tx_l3)&&(tx<tx_l2))  ? "RST_N_OL_R1[2]" :
                             (tx<tx_l3)   ? "RST_N_OL_R1[3]" :
               ((tx>=tx_bl)&&(tx<=tx_r1)) ? "RST_N_OR_R1[0]" :
               ((tx>tx_r1)&&(tx<=tx_r2))  ? "RST_N_OR_R1[1]" :
               ((tx>tx_r2)&&(tx<=tx_r3))  ? "RST_N_OR_R1[2]" :
               ((tx>tx_r3)&&(tx<=tx_r4))  ? "RST_N_OR_R1[3]" :
               ((tx>tx_r4)&&(tx<=tx_r5))  ? "RST_N_OR_R1[4]" :
               ((tx>tx_r5)&&(tx<=tx_r6))  ? "RST_N_OR_R1[5]" 
                                          : "RST_N_OR_R1[6]";

        gouten = ((tx>=tx_l1)&&(tx<=tx_bl)) ? "GOUTEN_OL_R1[0]" :
                 ((tx>=tx_l2)&&(tx<tx_l1))  ? "GOUTEN_OL_R1[1]" :
                 ((tx>=tx_l3)&&(tx<tx_l2))  ? "GOUTEN_OL_R1[2]" :
                               (tx<tx_l3)   ? "GOUTEN_OL_R1[3]" :
                 ((tx>=tx_bl)&&(tx<=tx_r1)) ? "GOUTEN_OR_R1[0]" :
                 ((tx>tx_r1)&&(tx<=tx_r2))  ? "GOUTEN_OR_R1[1]" :
                 ((tx>tx_r2)&&(tx<=tx_r3))  ? "GOUTEN_OR_R1[2]" :
                 ((tx>tx_r3)&&(tx<=tx_r4))  ? "GOUTEN_OR_R1[3]" :
                 ((tx>tx_r4)&&(tx<=tx_r5))  ? "GOUTEN_OR_R1[4]" :
                 ((tx>tx_r5)&&(tx<=tx_r6))  ? "GOUTEN_OR_R1[5]" 
                                            : "GOUTEN_OR_R1[6]";
  
        glogen = ((tx==(tx_bl-1))||(tx==(tx_bl-2))) ? "GLOGEN_OL_R1[0]" :
                 ((tx==(tx_l1-1))||(tx==(tx_l1-2))) ? "GLOGEN_OL_R1[1]" :
                 ((tx==(tx_l2-1))||(tx==(tx_l2-1))) ? "GLOGEN_OL_R1[2]" :
                 ((tx==(tx_l3-1))||(tx==(tx_l3-1))) ? "GLOGEN_OL_R1[3]" :
                 ((tx==(tx_bl+1))||(tx==(tx_bl+2))) ? "GLOGEN_OR_R1[0]" :
                 ((tx==(tx_r1+1))||(tx==(tx_r1+2))) ? "GLOGEN_OR_R1[1]" :
                 ((tx==(tx_r2+1))||(tx==(tx_r2+2))) ? "GLOGEN_OR_R1[2]" :
                 ((tx==(tx_r3+1))||(tx==(tx_r3+2))) ? "GLOGEN_OR_R1[3]" :
                 ((tx==(tx_r4+1))||(tx==(tx_r4+2))) ? "GLOGEN_OR_R1[4]" :
                 ((tx==(tx_r5+1))||(tx==(tx_r5+2))) ? "GLOGEN_OR_R1[5]" 
                                                    : "GLOGEN_OR_R1[6]";
  
        por_n  = ((tx==(tx_bl-1))||(tx==(tx_bl-2))) ? "POR_N_OL_R1[0]" :
                 ((tx==(tx_l1-1))||(tx==(tx_l1-2))) ? "POR_N_OL_R1[1]" :
                 ((tx==(tx_l2-1))||(tx==(tx_l2-1))) ? "POR_N_OL_R1[2]" :
                 ((tx==(tx_l3-1))||(tx==(tx_l3-1))) ? "POR_N_OL_R1[3]" :
                 ((tx==(tx_bl+1))||(tx==(tx_bl+2))) ? "POR_N_OR_R1[0]" :
                 ((tx==(tx_r1+1))||(tx==(tx_r1+2))) ? "POR_N_OR_R1[1]" :
                 ((tx==(tx_r2+1))||(tx==(tx_r2+2))) ? "POR_N_OR_R1[2]" :
                 ((tx==(tx_r3+1))||(tx==(tx_r3+2))) ? "POR_N_OR_R1[3]" :
                 ((tx==(tx_r4+1))||(tx==(tx_r4+2))) ? "POR_N_OR_R1[4]" :
                 ((tx==(tx_r5+1))||(tx==(tx_r5+2))) ? "POR_N_OR_R1[5]" 
                                                    : "POR_N_OR_R1[6]";
      }
      else
      {
        grs_n =((tx>=tx_l1)&&(tx<=tx_bl)) ? "GRS_N_OL_R2[0]" :
               ((tx>=tx_l2)&&(tx<tx_l1))  ? "GRS_N_OL_R2[1]" :
               ((tx>=tx_l3)&&(tx<tx_l2))  ? "GRS_N_OL_R2[2]" :
                             (tx<tx_l3)   ? "GRS_N_OL_R2[3]" :
               ((tx>=tx_bl)&&(tx<=tx_r1)) ? "GRS_N_OR_R2[0]" :
               ((tx>tx_r1)&&(tx<=tx_r2))  ? "GRS_N_OR_R2[1]" :
               ((tx>tx_r2)&&(tx<=tx_r3))  ? "GRS_N_OR_R2[2]" :
               ((tx>tx_r3)&&(tx<=tx_r4))  ? "GRS_N_OR_R2[3]" :
               ((tx>tx_r4)&&(tx<=tx_r5))  ? "GRS_N_OR_R2[4]" :
               ((tx>tx_r5)&&(tx<=tx_r6))  ? "GRS_N_OR_R2[5]" 
                                          : "GRS_N_OR_R2[6]";
  
        gwen = ((tx>=tx_l1)&&(tx<=tx_bl)) ? "GWEN_OL_R2[0]" :
               ((tx>=tx_l2)&&(tx<tx_l1))  ? "GWEN_OL_R2[1]" :
               ((tx>=tx_l3)&&(tx<tx_l2))  ? "GWEN_OL_R2[2]" :
                             (tx<tx_l3)   ? "GWEN_OL_R2[3]" :
               ((tx>=tx_bl)&&(tx<=tx_r1)) ? "GWEN_OR_R2[0]" :
               ((tx>tx_r1)&&(tx<=tx_r2))  ? "GWEN_OR_R2[1]" :
               ((tx>tx_r2)&&(tx<=tx_r3))  ? "GWEN_OR_R2[2]" :
               ((tx>tx_r3)&&(tx<=tx_r4))  ? "GWEN_OR_R2[3]" :
               ((tx>tx_r4)&&(tx<=tx_r5))  ? "GWEN_OR_R2[4]" :
               ((tx>tx_r5)&&(tx<=tx_r6))  ? "GWEN_OR_R2[5]" 
                                          : "GWEN_OR_R2[6]";
  
        pu_n = ((tx>=tx_l1)&&(tx<=tx_bl)) ? "PUP_REL_N_OL_R2[0]" :
               ((tx>=tx_l2)&&(tx<tx_l1))  ? "PUP_REL_N_OL_R2[1]" :
               ((tx>=tx_l3)&&(tx<tx_l2))  ? "PUP_REL_N_OL_R2[2]" :
                             (tx<tx_l3)   ? "PUP_REL_N_OL_R2[3]" :
               ((tx>=tx_bl)&&(tx<=tx_r1)) ? "PUP_REL_N_OR_R2[0]" :
               ((tx>tx_r1)&&(tx<=tx_r2))  ? "PUP_REL_N_OR_R2[1]" :
               ((tx>tx_r2)&&(tx<=tx_r3))  ? "PUP_REL_N_OR_R2[2]" :
               ((tx>tx_r3)&&(tx<=tx_r4))  ? "PUP_REL_N_OR_R2[3]" :
               ((tx>tx_r4)&&(tx<=tx_r5))  ? "PUP_REL_N_OR_R2[4]" :
               ((tx>tx_r5)&&(tx<=tx_r6))  ? "PUP_REL_N_OR_R2[5]" 
                                          : "PUP_REL_N_OR_R2[6]";
  
        por_n_1p8 = ((tx>=tx_l1)&&(tx<=tx_bl)) ? "POR_N_1P8_OL_R2[0]" :
                    ((tx>=tx_l2)&&(tx<tx_l1))  ? "POR_N_1P8_OL_R2[1]" :
                    ((tx>=tx_l3)&&(tx<tx_l2))  ? "POR_N_1P8_OL_R2[2]" :
                                  (tx<tx_l3)   ? "POR_N_1P8_OL_R2[3]" :
                    ((tx>=tx_bl)&&(tx<=tx_r1)) ? "POR_N_1P8_OR_R2[0]" :
                    ((tx>tx_r1)&&(tx<=tx_r2))  ? "POR_N_1P8_OR_R2[1]" :
                    ((tx>tx_r2)&&(tx<=tx_r3))  ? "POR_N_1P8_OR_R2[2]" :
                    ((tx>tx_r3)&&(tx<=tx_r4))  ? "POR_N_1P8_OR_R2[3]" :
                    ((tx>tx_r4)&&(tx<=tx_r5))  ? "POR_N_1P8_OR_R2[4]" :
                    ((tx>tx_r5)&&(tx<=tx_r6))  ? "POR_N_1P8_OR_R2[5]" 
                                               : "POR_N_1P8_OR_R2[6]";
  
        prcfg_n =((tx>=tx_l1)&&(tx<=tx_bl)) ? "PRCFG_N_OL_R2[0]" :
                 ((tx>=tx_l2)&&(tx<tx_l1))  ? "PRCFG_N_OL_R2[1]" :
                 ((tx>=tx_l3)&&(tx<tx_l2))  ? "PRCFG_N_OL_R2[2]" :
                               (tx<tx_l3)   ? "PRCFG_N_OL_R2[3]" :
                 ((tx>=tx_bl)&&(tx<=tx_r1)) ? "PRCFG_N_OR_R2[0]" :
                 ((tx>tx_r1)&&(tx<=tx_r2))  ? "PRCFG_N_OR_R2[1]" :
                 ((tx>tx_r2)&&(tx<=tx_r3))  ? "PRCFG_N_OR_R2[2]" :
                 ((tx>tx_r3)&&(tx<=tx_r4))  ? "PRCFG_N_OR_R2[3]" :
                 ((tx>tx_r4)&&(tx<=tx_r5))  ? "PRCFG_N_OR_R2[4]" :
                 ((tx>tx_r5)&&(tx<=tx_r6))  ? "PRCFG_N_OR_R2[5]" 
                                            : "PRCFG_N_OR_R2[6]";
  
        rst_n =((tx>=tx_l1)&&(tx<=tx_bl)) ? "RST_N_OL_R2[0]" :
               ((tx>=tx_l2)&&(tx<tx_l1))  ? "RST_N_OL_R2[1]" :
               ((tx>=tx_l3)&&(tx<tx_l2))  ? "RST_N_OL_R2[2]" :
                             (tx<tx_l3)   ? "RST_N_OL_R2[3]" :
               ((tx>=tx_bl)&&(tx<=tx_r1)) ? "RST_N_OR_R2[0]" :
               ((tx>tx_r1)&&(tx<=tx_r2))  ? "RST_N_OR_R2[1]" :
               ((tx>tx_r2)&&(tx<=tx_r3))  ? "RST_N_OR_R2[2]" :
               ((tx>tx_r3)&&(tx<=tx_r4))  ? "RST_N_OR_R2[3]" :
               ((tx>tx_r4)&&(tx<=tx_r5))  ? "RST_N_OR_R2[4]" :
               ((tx>tx_r5)&&(tx<=tx_r6))  ? "RST_N_OR_R2[5]" 
                                          : "RST_N_OR_R2[6]";

        gouten = ((tx>=tx_l1)&&(tx<=tx_bl)) ? "GOUTEN_OL_R2[0]" :
                 ((tx>=tx_l2)&&(tx<tx_l1))  ? "GOUTEN_OL_R2[1]" :
                 ((tx>=tx_l3)&&(tx<tx_l2))  ? "GOUTEN_OL_R2[2]" :
                               (tx<tx_l3)   ? "GOUTEN_OL_R2[3]" :
                 ((tx>=tx_bl)&&(tx<=tx_r1)) ? "GOUTEN_OR_R2[0]" :
                 ((tx>tx_r1)&&(tx<=tx_r2))  ? "GOUTEN_OR_R2[1]" :
                 ((tx>tx_r2)&&(tx<=tx_r3))  ? "GOUTEN_OR_R2[2]" :
                 ((tx>tx_r3)&&(tx<=tx_r4))  ? "GOUTEN_OR_R2[3]" :
                 ((tx>tx_r4)&&(tx<=tx_r5))  ? "GOUTEN_OR_R2[4]" :
                 ((tx>tx_r5)&&(tx<=tx_r6))  ? "GOUTEN_OR_R2[5]" 
                                            : "GOUTEN_OR_R2[6]";
  
        glogen = ((tx==(tx_bl-1))||(tx==(tx_bl-2))) ? "GLOGEN_OL_R2[0]" :
                 ((tx==(tx_l1-1))||(tx==(tx_l1-2))) ? "GLOGEN_OL_R2[1]" :
                 ((tx==(tx_l2-1))||(tx==(tx_l2-1))) ? "GLOGEN_OL_R2[2]" :
                 ((tx==(tx_l3-1))||(tx==(tx_l3-1))) ? "GLOGEN_OL_R2[3]" :
                 ((tx==(tx_bl+1))||(tx==(tx_bl+2))) ? "GLOGEN_OR_R2[0]" :
                 ((tx==(tx_r1+1))||(tx==(tx_r1+2))) ? "GLOGEN_OR_R2[1]" :
                 ((tx==(tx_r2+2))||(tx==(tx_r2+2))) ? "GLOGEN_OR_R2[2]" :
                 ((tx==(tx_r3+1))||(tx==(tx_r3+2))) ? "GLOGEN_OR_R2[3]" :
                 ((tx==(tx_r4+1))||(tx==(tx_r4+2))) ? "GLOGEN_OR_R2[4]" :
                 ((tx==(tx_r5+1))||(tx==(tx_r5+2))) ? "GLOGEN_OR_R2[5]" 
                                                    : "GLOGEN_OR_R2[6]";
  
        por_n  = ((tx==(tx_bl-1))||(tx==(tx_bl-2))) ? "POR_N_OL_R2[0]" :
                 ((tx==(tx_l1-1))||(tx==(tx_l1-2))) ? "POR_N_OL_R2[1]" :
                 ((tx==(tx_l2-1))||(tx==(tx_l2-1))) ? "POR_N_OL_R2[2]" :
                 ((tx==(tx_l3-1))||(tx==(tx_l3-1))) ? "POR_N_OL_R2[3]" :
                 ((tx==(tx_bl+1))||(tx==(tx_bl+2))) ? "POR_N_OR_R2[0]" :
                 ((tx==(tx_r1+1))||(tx==(tx_r1+2))) ? "POR_N_OR_R2[1]" :
                 ((tx==(tx_r2+2))||(tx==(tx_r2+2))) ? "POR_N_OR_R2[2]" :
                 ((tx==(tx_r3+1))||(tx==(tx_r3+2))) ? "POR_N_OR_R2[3]" :
                 ((tx==(tx_r4+1))||(tx==(tx_r4+2))) ? "POR_N_OR_R2[4]" :
                 ((tx==(tx_r5+1))||(tx==(tx_r5+2))) ? "POR_N_OR_R2[5]" 
                                                    : "POR_N_OR_R2[6]";
      }
  
  
    connect
        (
            <pin GOUTEN_IN      of <device *strVar @[sx,sy]>>   => <wire *gouten    of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
            <pin GRS_N_IN       of <device *strVar @[sx,sy]>>   => <wire *grs_n     of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
            <pin GWEN_IN        of <device *strVar @[sx,sy]>>   => <wire *gwen      of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
            <pin PUP_REL_N_IN   of <device *strVar @[sx,sy]>>   => <wire *pu_n      of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
            <pin POR_N_1P8_IN   of <device *strVar @[sx,sy]>>   => <wire *por_n_1p8 of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
            <pin PRCFG_N_IN     of <device *strVar @[sx,sy]>>   => <wire *prcfg_n   of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
            <pin RST_N_IN       of <device *strVar @[sx,sy]>>   => <wire *rst_n     of <device *cram_ctrl @ [sx_bl,sy_bl]>>
        );
    

      int tile_j;
      int i = 0;
      int tile_e;
      int tile_e_1 = 0;
      string ckeb_w = "CKEB_TILE";
      string ckeb_e = "CKEB_TILE";

      //Caculate the east source tile index value, and find the tile device name of source tile
      for(tile_j=tx+1;tile_j<=tx_bl;tile_j=tile_j+1)
      {
        foreach tx_tmp( l_tx_ckeb )
        {
          if(tile_j==tx_tmp)
          {
            tile_e = tile_j;
            i = i + 1;
            break;
          }        
        }
        if(i==1)
        {
          tile_e_1 = tile_e;
          ckeb_e = ((tile_e==tx_ckeb2_l)||(tile_e==tx_ckeb2_r)) ? "CKEB2_TILE" : "CKEB_TILE";
        }
      }

      i = 0;
      int tile_w;
      int tile_w_1 = 0;

      //Caculate the west source tile index value, and find the tile device name of source tile
      for(tile_j=tx-1;tile_j>=tx_bl;tile_j=tile_j-1)
      {
        foreach tx_tmp( l_tx_ckeb )
        {
          if(tile_j==tx_tmp)
          {
            tile_w = tile_j;
            i = i + 1;
            break;
          }        
        }
        if(i==1)
        {
          tile_w_1 = tile_w;
          ckeb_w = ((tile_w==tx_ckeb2_l)||(tile_w==tx_ckeb2_r)) ? "CKEB2_TILE" : "CKEB_TILE";
        }
      }

      int site_e_1 = tile_e_1 * NUM_GRID_X;
      int site_w_1 = tile_w_1 * NUM_GRID_X;

      int flag = ((tx==(tx_bl-1))||(tx==(tx_bl-2))||(tx==(tx_bl+2))||(tx==(tx_bl+1))||(tx==(tx_l1-1))||(tx==(tx_l1-2))||
                  (tx==(tx_l2-1))||(tx==(tx_l2-2))||(tx==(tx_l3-1))||(tx==(tx_l3-2))||
                  (tx==(tx_r1+1))||(tx==(tx_r1+2))||(tx==(tx_r2+1))||(tx==(tx_r2+2))||(tx==(tx_r3+1))||(tx==(tx_r3+2))||
                  (tx==(tx_r4+1))||(tx==(tx_r4+2))||(tx==(tx_r5+1))||(tx==(tx_r5+2))||(tx==(tx_r6+1))||(tx==(tx_r6+2)));
   

    if(tx==tx_iock_l)
    {
      connect
        (
          <pin GLOGEN_IN  of <device *strVar @[sx,sy]>>       => <wire GLOGEN_NEXT0_OUT of <device  *ckeb_e @ [site_e_1,sy]>>,
          <pin POR_N_IN   of <device *strVar @[sx,sy]>>       =>  <wire POR_N_NEXT0_OUT of <device  *ckeb_e @ [site_e_1,sy]>>
        );  
    }
    else if(tx==tx_iock_r)
    {
      connect
        (
          <pin GLOGEN_IN of <device *strVar @[sx,sy]>>       => <wire GLOGEN_NEXT of <device  *ckeb_w @ [site_w_1,sy]>>,
          <pin POR_N_IN of <device *strVar @[sx,sy]>>        => <wire POR_N_NEXT of <device  *ckeb_w @ [site_w_1,sy]>>
        );  
    }
    else 
    {
      if(tx<tx_bl)
      {
        connect
         (
            <pin GLOGEN_IN  of <device *strVar @[sx,sy]>>  => <wire GLOGEN_NEXT of <device *strVar @[sx,sy]>>,
            <pin POR_N_IN  of <device *strVar @[sx,sy]>>   => <wire POR_N_NEXT of <device *strVar @[sx,sy]>>
         );
        if(flag==1)
        {
          connect
            (
              <pin GLOGEN_IN1 of <device *strVar @[sx,sy]>>       => <wire *glogen of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
              <pin POR_N_IN1 of <device *strVar @[sx,sy]>>        => <wire *por_n of <device *cram_ctrl @ [sx_bl,sy_bl]>>
            );
        }
        else
        {
          connect
            (
              <pin GLOGEN_IN1 of <device *strVar @[sx,sy]>>       => <wire GLOGEN_NEXT0_OUT of <device  *ckeb_e @ [site_e_1,sy]>>,
              <pin POR_N_IN1 of <device *strVar @[sx,sy]>>        => <wire POR_N_NEXT0_OUT of <device  *ckeb_e @ [site_e_1,sy]>>
            );       
        }
      }
      else
      {
        connect
         (
            <pin GLOGEN_IN1 of <device *strVar @[sx,sy]>>  => <wire GLOGEN_NEXT0_OUT of <device *strVar @[sx,sy]>>,
            <pin POR_N_IN1 of <device *strVar @[sx,sy]>>   => <wire POR_N_NEXT0_OUT of <device *strVar @[sx,sy]>>
         );
        if(flag==1)
        {                     
          connect
            (
              <pin GLOGEN_IN of <device *strVar @[sx,sy]>>       => <wire *glogen of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
              <pin POR_N_IN of <device *strVar @[sx,sy]>>        => <wire *por_n of <device *cram_ctrl @ [sx_bl,sy_bl]>>
            );
        }
        else
        {
          connect
            (
              <pin GLOGEN_IN of <device *strVar @[sx,sy]>>       => <wire GLOGEN_NEXT of <device  *ckeb_w @ [site_w_1,sy]>>,
              <pin POR_N_IN of <device *strVar @[sx,sy]>>        => <wire POR_N_NEXT of <device  *ckeb_w @ [site_w_1,sy]>>
            );       
        }
      }
    }
    }

};//end of function connect_ckeb_gs_input
/********************************************************************************
********************************************************************************/
function connect_cram_wrenhan_gs_input
(
    unsigned int rx,
    unsigned int tx,
    unsigned int tx_bl,
    unsigned int ty_bl,
    unsigned int tx_l1,
    unsigned int tx_l2,
    unsigned int tx_l3,
    unsigned int tx_r1,
    unsigned int tx_r2,
    unsigned int tx_r3,
    unsigned int tx_r4,
    unsigned int tx_r5,
    unsigned int tx_r6,

    string device_bl,
    string device_wrenhan
)
{
    int sx_bl = tx_bl * NUM_GRID_X;
    int sy_bl = ty_bl * NUM_GRID_Y;

    int sx,sy;
    sy = (rx * NUM_TILES_REGION + MID_TILE_REGION) * NUM_GRID_Y;
    sx = tx * NUM_GRID_X + 2;

    string cram_ctrl = device_bl;
    string strVar = device_wrenhan;

    string erase,prog,rst_n,wl_on;

    if(rx==0)
    {
      erase =((tx>=tx_l1)&&(tx<=tx_bl)) ? "ERASE_OL_R2[0]" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "ERASE_OL_R2[1]" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "ERASE_OL_R2[2]" :
                           (tx<tx_l3)   ? "ERASE_OL_R2[3]" :
             ((tx>=tx_bl)&&(tx<=tx_r1)) ? "ERASE_OR_R2[0]" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "ERASE_OR_R2[1]" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "ERASE_OR_R2[2]" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "ERASE_OR_R2[3]" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "ERASE_OR_R2[4]" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "ERASE_OR_R2[5]" 
                                        : "ERASE_OR_R2[6]";

      prog = ((tx>=tx_l1)&&(tx<=tx_bl)) ? "PROG_ON_OL_R2[0]" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "PROG_ON_OL_R2[1]" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "PROG_ON_OL_R2[2]" :
                           (tx<tx_l3)   ? "PROG_ON_OL_R2[3]" :
             ((tx>=tx_bl)&&(tx<=tx_r1)) ? "PROG_ON_OR_R2[0]" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "PROG_ON_OR_R2[1]" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "PROG_ON_OR_R2[2]" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "PROG_ON_OR_R2[3]" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "PROG_ON_OR_R2[4]" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "PROG_ON_OR_R2[5]" 
                                        : "PROG_ON_OR_R2[6]";

      rst_n =((tx>=tx_l1)&&(tx<=tx_bl)) ? "RST_N_OL_R2[0]" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "RST_N_OL_R2[1]" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "RST_N_OL_R2[2]" :
                           (tx<tx_l3)   ? "RST_N_OL_R2[3]" :
             ((tx>=tx_bl)&&(tx<=tx_r1)) ? "RST_N_OR_R2[0]" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "RST_N_OR_R2[1]" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "RST_N_OR_R2[2]" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "RST_N_OR_R2[3]" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "RST_N_OR_R2[4]" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "RST_N_OR_R2[5]" 
                                        : "RST_N_OR_R2[6]";

      wl_on= ((tx>=tx_l1)&&(tx<=tx_bl)) ? "WL_ON_OL_R2[0]" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "WL_ON_OL_R2[1]" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "WL_ON_OL_R2[2]" :
                           (tx<tx_l3)   ? "WL_ON_OL_R2[3]" :
             ((tx>=tx_bl)&&(tx<=tx_r1)) ? "WL_ON_OR_R2[0]" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "WL_ON_OR_R2[1]" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "WL_ON_OR_R2[2]" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "WL_ON_OR_R2[3]" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "WL_ON_OR_R2[4]" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "WL_ON_OR_R2[5]" 
                                        : "WL_ON_OR_R2[6]";
    }
    else
    {
      erase =((tx>=tx_l1)&&(tx<=tx_bl)) ? "ERASE_OL_R1[0]" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "ERASE_OL_R1[1]" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "ERASE_OL_R1[2]" :
                           (tx<tx_l3)   ? "ERASE_OL_R1[3]" :
             ((tx>=tx_bl)&&(tx<=tx_r1)) ? "ERASE_OR_R1[0]" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "ERASE_OR_R1[1]" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "ERASE_OR_R1[2]" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "ERASE_OR_R1[3]" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "ERASE_OR_R1[4]" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "ERASE_OR_R1[5]" 
                                        : "ERASE_OR_R1[6]";

      prog = ((tx>=tx_l1)&&(tx<=tx_bl)) ? "PROG_ON_OL_R1[0]" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "PROG_ON_OL_R1[1]" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "PROG_ON_OL_R1[2]" :
                           (tx<tx_l3)   ? "PROG_ON_OL_R1[3]" :
             ((tx>=tx_bl)&&(tx<=tx_r1)) ? "PROG_ON_OR_R1[0]" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "PROG_ON_OR_R1[1]" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "PROG_ON_OR_R1[2]" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "PROG_ON_OR_R1[3]" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "PROG_ON_OR_R1[4]" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "PROG_ON_OR_R1[5]" 
                                        : "PROG_ON_OR_R1[6]";

      rst_n =((tx>=tx_l1)&&(tx<=tx_bl)) ? "RST_N_OL_R1[0]" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "RST_N_OL_R1[1]" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "RST_N_OL_R1[2]" :
                           (tx<tx_l3)   ? "RST_N_OL_R1[3]" :
             ((tx>=tx_bl)&&(tx<=tx_r1)) ? "RST_N_OR_R1[0]" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "RST_N_OR_R1[1]" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "RST_N_OR_R1[2]" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "RST_N_OR_R1[3]" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "RST_N_OR_R1[4]" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "RST_N_OR_R1[5]" 
                                        : "RST_N_OR_R1[6]";

      wl_on= ((tx>=tx_l1)&&(tx<=tx_bl)) ? "WL_ON_OL_R1[0]" :
             ((tx>=tx_l2)&&(tx<tx_l1))  ? "WL_ON_OL_R1[1]" :
             ((tx>=tx_l3)&&(tx<tx_l2))  ? "WL_ON_OL_R1[2]" :
                           (tx<tx_l3)   ? "WL_ON_OL_R1[3]" :
             ((tx>=tx_bl)&&(tx<=tx_r1)) ? "WL_ON_OR_R1[0]" :
             ((tx>tx_r1)&&(tx<=tx_r2))  ? "WL_ON_OR_R1[1]" :
             ((tx>tx_r2)&&(tx<=tx_r3))  ? "WL_ON_OR_R1[2]" :
             ((tx>tx_r3)&&(tx<=tx_r4))  ? "WL_ON_OR_R1[3]" :
             ((tx>tx_r4)&&(tx<=tx_r5))  ? "WL_ON_OR_R1[4]" :
             ((tx>tx_r5)&&(tx<=tx_r6))  ? "WL_ON_OR_R1[5]" 
                                        : "WL_ON_OR_R1[6]";
    }

    connect
        (
            <pin ERASE    of <device *strVar @[sx,sy]>> => <wire *erase  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
            <pin PROG_ON  of <device *strVar @[sx,sy]>> => <wire *prog   of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
            <pin RST_N    of <device *strVar @[sx,sy]>> => <wire *rst_n  of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
            <pin WL_ON    of <device *strVar @[sx,sy]>> => <wire *wl_on  of <device *cram_ctrl @ [sx_bl,sy_bl]>>
        );

};//end of function connect_cram_wrenhan_gs_input
/********************************************************************************
********************************************************************************/
function connect_cram_ctrl_gs_input
(
    unsigned int rx,
    unsigned int tx_bl,
    unsigned int ty_bl,
    unsigned int tx_l1,
    unsigned int tx_l2,
    unsigned int tx_l3,
    unsigned int tx_r1,
    unsigned int tx_r2,
    unsigned int tx_r3,
    unsigned int tx_r4,
    unsigned int tx_r5,
    unsigned int tx_r6,

    string device_bl
)
{
    int sx_bl = tx_bl * NUM_GRID_X;
    int sy_bl = ty_bl * NUM_GRID_Y;

    int sx,sy;
    sy = (rx * NUM_TILES_REGION + MID_TILE_REGION) * NUM_GRID_Y;

    int sx_l1 = (tx_l1 + 1) * NUM_GRID_X;
    int sx_l2 = (tx_l2 + 1) * NUM_GRID_X;
    int sx_l3 = (tx_l3 + 1) * NUM_GRID_X;
    int sx_r1 = tx_r1 *NUM_GRID_X;
    int sx_r2 = tx_r2 *NUM_GRID_X;
    int sx_r3 = tx_r3 *NUM_GRID_X;
    int sx_r4 = tx_r4 *NUM_GRID_X;
    int sx_r5 = tx_r5 *NUM_GRID_X;
    int sx_r6 = tx_r6 *NUM_GRID_X;

    string cram_ctrl = device_bl;
    string por_n_l,por_n_r,glogen_l,glogen_r;
    string por_n,glogen;

    int tx,tx_tmp;

    if(rx==1)
    {
      por_n_l   = "POR_N_IL_R1";
      por_n_r   = "POR_N_IR_R1";
      glogen_l  = "GLOGEN_IL_R1";
      glogen_r  = "GLOGEN_IR_R1";
      por_n     = "POR_N_OL_R1";
      glogen    = "GLOGEN_OL_R1";
    }
    else          
    {
      por_n_l   = "POR_N_IL_R2";
      por_n_r   = "POR_N_IR_R2";
      glogen_l  = "GLOGEN_IL_R2";
      glogen_r  = "GLOGEN_IR_R2";
      por_n     = "POR_N_OL_R2";
      glogen    = "GLOGEN_OL_R2";
    }

    connect
      (
        <pin *por_n_l[0] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire *por_n[0]       of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
        <pin *por_n_l[1] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire POR_N_NEXT0_OUT of <device CKEB_TILE @[sx_l2,sy]>>,
        <pin *por_n_l[2] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire POR_N_NEXT0_OUT of <device CKEB_TILE @[sx_l3,sy]>>,
        <pin *por_n_r[0] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire POR_N_NEXT      of <device CKEB_TILE @[sx_r1,sy]>>,
        <pin *por_n_r[1] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire POR_N_NEXT      of <device CKEB_TILE @[sx_r2,sy]>>,
        <pin *por_n_r[2] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire POR_N_NEXT      of <device CKEB_TILE @[sx_r3,sy]>>,
        <pin *por_n_r[3] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire POR_N_NEXT      of <device CKEB_TILE @[sx_r4,sy]>>,
        <pin *por_n_r[4] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire POR_N_NEXT      of <device CKEB_TILE @[sx_r5,sy]>>,
        <pin *por_n_r[5] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire POR_N_NEXT      of <device CKEB_TILE @[sx_r6,sy]>>,

        <pin *glogen_l[0] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire *glogen[0]       of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
        <pin *glogen_l[1] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire GLOGEN_NEXT0_OUT of <device CKEB_TILE @[sx_l2,sy]>>,
        <pin *glogen_l[2] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire GLOGEN_NEXT0_OUT of <device CKEB_TILE @[sx_l3,sy]>>,
        <pin *glogen_r[0] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire GLOGEN_NEXT      of <device CKEB_TILE @[sx_r1,sy]>>,
        <pin *glogen_r[1] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire GLOGEN_NEXT      of <device CKEB_TILE @[sx_r2,sy]>>,
        <pin *glogen_r[2] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire GLOGEN_NEXT      of <device CKEB_TILE @[sx_r3,sy]>>,
        <pin *glogen_r[3] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire GLOGEN_NEXT      of <device CKEB_TILE @[sx_r4,sy]>>,
        <pin *glogen_r[4] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire GLOGEN_NEXT      of <device CKEB_TILE @[sx_r5,sy]>>,
        <pin *glogen_r[5] of <device *cram_ctrl @ [sx_bl,sy_bl]>>    => <wire GLOGEN_NEXT      of <device CKEB_TILE @[sx_r6,sy]>>
      );

};//end of function connect_cram_ctrl_gs_input
/********************************************************************************
********************************************************************************/
function connect_iob_gs
(
    string type_lr,
    unsigned int bank,
    unsigned int bank_top,
    unsigned int num_tile_x,
    unsigned int num_region,

    unsigned int tx_bl,
    unsigned int ty_bl,

    string device_bl,
    string device_iob
)
{
    int tx,tx_iock;
    if(type_lr == "L")
    {
      tx = 0;
      tx_iock = IOCK_TILE_X_L;
    }
    else
    {
      tx = num_tile_x-1;
      tx_iock = IOCK_TILE_X_R;
    }
  
    int sx = tx * NUM_GRID_X;
  
    int rx = num_region + bank_top -1 -bank;
    int sy_iob = rx * NUM_TILES_REGION * NUM_GRID_Y;
  
    string iob = device_iob;
    string bsmode1, bsmode2, bsmode3, gouten, shift, update, bsrrst, glogen, por_n;
  
    if(type_lr=="L")
    {
      bsmode1 = (rx==1) ? "BSRMODE1_OL_R1"    : "BSRMODE1_OL_R2";
      bsmode2 = (rx==1) ? "BSRMODE2_OL_R1"    : "BSRMODE2_OL_R2";
      bsmode3 = (rx==1) ? "BSRMODE3_OL_R1"    : "BSRMODE3_OL_R2";
      shift   = (rx==1) ? "BSRSHIFT_OL_R1"    : "BSRSHIFT_OL_R2";
      update  = (rx==1) ? "BSRUPDATE_OL_R1"   : "BSRUPDATE_OL_R2";
      bsrrst  = (rx==1) ? "BSRRST_OL_R1"      : "BSRRST_OL_R2";
    }
    else
    {
      bsmode1 = (rx==1) ? "BSRMODE1_OR_R1"  : "BSRMODE1_OR_R2";
      bsmode2 = (rx==1) ? "BSRMODE2_OR_R1"  : "BSRMODE2_OR_R2";
      bsmode3 = (rx==1) ? "BSRMODE3_OR_R1"  : "BSRMODE3_OR_R2";
      shift   = (rx==1) ? "BSRSHIFT_OR_R1"  : "BSRSHIFT_OR_R2";
      update  = (rx==1) ? "BSRUPDATE_OR_R1" : "BSRUPDATE_OR_R2";
      bsrrst  = (rx==1) ? "BSRRST_OR_R1"    : "BSRRST_OR_R2";

    }
  
    int sx_bl = tx_bl * NUM_GRID_X;
    int sy_bl = ty_bl * NUM_GRID_X;
    string cram_ctrl = device_bl;
    int sx_iock = tx_iock * NUM_GRID_X;
    int sy_iock = (rx * NUM_TILES_REGION + MID_TILE_REGION) * NUM_GRID_Y;
  
    connect
      (
        <pin BSRMODE1   of <device *iob @ [sx,sy_iob]>> => <wire *bsmode1   of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
        <pin BSRMODE2   of <device *iob @ [sx,sy_iob]>> => <wire *bsmode2   of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
        <pin BSRMODE3   of <device *iob @ [sx,sy_iob]>> => <wire *bsmode3   of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
        <pin BSRRST     of <device *iob @ [sx,sy_iob]>> => <wire *bsrrst    of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
        <pin BSRSHIFT   of <device *iob @ [sx,sy_iob]>> => <wire *shift     of <device *cram_ctrl @ [sx_bl,sy_bl]>>,
        <pin BSRUPDATE  of <device *iob @ [sx,sy_iob]>> => <wire *update    of <device *cram_ctrl @ [sx_bl,sy_bl]>>,

        <pin GOUTEN     of <device *iob @ [sx,sy_iob]>> => <wire GOUTEN_OUT of <device IOCK_TILE @ [sx_iock,sy_iock]>>,
        <pin POR_N      of <device *iob @ [sx,sy_iob]>> => <wire POR_N_OUT  of <device IOCK_TILE @ [sx_iock,sy_iock]>>,
        <pin GLOGEN     of <device *iob @ [sx,sy_iob]>> => <wire GLOGEN_SRB of <device IOCK_TILE @ [sx_iock,sy_iock]>>
      );

};//end of function connect_iob_gs



};//end of package pg2l25h_funcs_connect_wl_bl
